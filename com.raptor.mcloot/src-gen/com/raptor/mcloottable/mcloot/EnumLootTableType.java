/**
 * generated by Xtext 2.21.0
 */
package com.raptor.mcloottable.mcloot;

import java.util.Arrays;
import java.util.Collections;
import java.util.List;

import org.eclipse.emf.common.util.Enumerator;

/**
 * <!-- begin-user-doc -->
 * A representation of the literals of the enumeration '<em><b>Enum Loot Table Type</b></em>',
 * and utility methods for working with them.
 * <!-- end-user-doc -->
 * @see com.raptor.mcloottable.mcloot.MclootPackage#getEnumLootTableType()
 * @model
 * @generated
 */
public enum EnumLootTableType implements Enumerator
{
  /**
   * The '<em><b>GENERIC</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #GENERIC_VALUE
   * @generated
   * @ordered
   */
  GENERIC(0, "GENERIC", "generic"),

  /**
   * The '<em><b>BLOCK</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #BLOCK_VALUE
   * @generated
   * @ordered
   */
  BLOCK(1, "BLOCK", "block"),

  /**
   * The '<em><b>ENTITY</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #ENTITY_VALUE
   * @generated
   * @ordered
   */
  ENTITY(2, "ENTITY", "entity"),

  /**
   * The '<em><b>CHEST</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #CHEST_VALUE
   * @generated
   * @ordered
   */
  CHEST(3, "CHEST", "chest"),

  /**
   * The '<em><b>FISHING</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #FISHING_VALUE
   * @generated
   * @ordered
   */
  FISHING(4, "FISHING", "fishing"),

  /**
   * The '<em><b>GIFT</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #GIFT_VALUE
   * @generated
   * @ordered
   */
  GIFT(5, "GIFT", "gift"),

  /**
   * The '<em><b>ADVANCEMENT REWARD</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #ADVANCEMENT_REWARD_VALUE
   * @generated
   * @ordered
   */
  ADVANCEMENT_REWARD(6, "ADVANCEMENT_REWARD", "advancement_reward"),

  /**
   * The '<em><b>BARTER</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #BARTER_VALUE
   * @generated
   * @ordered
   */
  BARTER(7, "BARTER", "barter"),

  /**
   * The '<em><b>EMPTY</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #EMPTY_VALUE
   * @generated
   * @ordered
   */
  EMPTY(8, "EMPTY", "empty");

  /**
   * The '<em><b>GENERIC</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #GENERIC
   * @model literal="generic"
   * @generated
   * @ordered
   */
  public static final int GENERIC_VALUE = 0;

  /**
   * The '<em><b>BLOCK</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #BLOCK
   * @model literal="block"
   * @generated
   * @ordered
   */
  public static final int BLOCK_VALUE = 1;

  /**
   * The '<em><b>ENTITY</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #ENTITY
   * @model literal="entity"
   * @generated
   * @ordered
   */
  public static final int ENTITY_VALUE = 2;

  /**
   * The '<em><b>CHEST</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #CHEST
   * @model literal="chest"
   * @generated
   * @ordered
   */
  public static final int CHEST_VALUE = 3;

  /**
   * The '<em><b>FISHING</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #FISHING
   * @model literal="fishing"
   * @generated
   * @ordered
   */
  public static final int FISHING_VALUE = 4;

  /**
   * The '<em><b>GIFT</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #GIFT
   * @model literal="gift"
   * @generated
   * @ordered
   */
  public static final int GIFT_VALUE = 5;

  /**
   * The '<em><b>ADVANCEMENT REWARD</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #ADVANCEMENT_REWARD
   * @model literal="advancement_reward"
   * @generated
   * @ordered
   */
  public static final int ADVANCEMENT_REWARD_VALUE = 6;

  /**
   * The '<em><b>BARTER</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #BARTER
   * @model literal="barter"
   * @generated
   * @ordered
   */
  public static final int BARTER_VALUE = 7;

  /**
   * The '<em><b>EMPTY</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #EMPTY
   * @model literal="empty"
   * @generated
   * @ordered
   */
  public static final int EMPTY_VALUE = 8;

  /**
   * An array of all the '<em><b>Enum Loot Table Type</b></em>' enumerators.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private static final EnumLootTableType[] VALUES_ARRAY =
    new EnumLootTableType[]
    {
      GENERIC,
      BLOCK,
      ENTITY,
      CHEST,
      FISHING,
      GIFT,
      ADVANCEMENT_REWARD,
      BARTER,
      EMPTY,
    };

  /**
   * A public read-only list of all the '<em><b>Enum Loot Table Type</b></em>' enumerators.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final List<EnumLootTableType> VALUES = Collections.unmodifiableList(Arrays.asList(VALUES_ARRAY));

  /**
   * Returns the '<em><b>Enum Loot Table Type</b></em>' literal with the specified literal value.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param literal the literal.
   * @return the matching enumerator or <code>null</code>.
   * @generated
   */
  public static EnumLootTableType get(String literal)
  {
    for (int i = 0; i < VALUES_ARRAY.length; ++i)
    {
      EnumLootTableType result = VALUES_ARRAY[i];
      if (result.toString().equals(literal))
      {
        return result;
      }
    }
    return null;
  }

  /**
   * Returns the '<em><b>Enum Loot Table Type</b></em>' literal with the specified name.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param name the name.
   * @return the matching enumerator or <code>null</code>.
   * @generated
   */
  public static EnumLootTableType getByName(String name)
  {
    for (int i = 0; i < VALUES_ARRAY.length; ++i)
    {
      EnumLootTableType result = VALUES_ARRAY[i];
      if (result.getName().equals(name))
      {
        return result;
      }
    }
    return null;
  }

  /**
   * Returns the '<em><b>Enum Loot Table Type</b></em>' literal with the specified integer value.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the integer value.
   * @return the matching enumerator or <code>null</code>.
   * @generated
   */
  public static EnumLootTableType get(int value)
  {
    switch (value)
    {
      case GENERIC_VALUE: return GENERIC;
      case BLOCK_VALUE: return BLOCK;
      case ENTITY_VALUE: return ENTITY;
      case CHEST_VALUE: return CHEST;
      case FISHING_VALUE: return FISHING;
      case GIFT_VALUE: return GIFT;
      case ADVANCEMENT_REWARD_VALUE: return ADVANCEMENT_REWARD;
      case BARTER_VALUE: return BARTER;
      case EMPTY_VALUE: return EMPTY;
    }
    return null;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private final int value;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private final String name;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private final String literal;

  /**
   * Only this class can construct instances.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EnumLootTableType(int value, String name, String literal)
  {
    this.value = value;
    this.name = name;
    this.literal = literal;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int getValue()
  {
    return value;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getName()
  {
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getLiteral()
  {
    return literal;
  }

  /**
   * Returns the literal value of the enumerator, which is its string representation.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    return literal;
  }
  
} //EnumLootTableType
