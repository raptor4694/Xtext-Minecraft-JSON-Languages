/**
 * generated by Xtext 2.21.0
 */
package com.raptor.mcloottable.mcloot;

import org.eclipse.emf.ecore.EObject;

/**
 * <!-- begin-user-doc -->
 * A representation of the model object '<em><b>Entity Flags</b></em>'.
 * <!-- end-user-doc -->
 *
 * <p>
 * The following features are supported:
 * </p>
 * <ul>
 *   <li>{@link com.raptor.mcloottable.mcloot.EntityFlags#isOnFireDefined <em>On Fire Defined</em>}</li>
 *   <li>{@link com.raptor.mcloottable.mcloot.EntityFlags#isOnFire <em>On Fire</em>}</li>
 *   <li>{@link com.raptor.mcloottable.mcloot.EntityFlags#isSneakingDefined <em>Sneaking Defined</em>}</li>
 *   <li>{@link com.raptor.mcloottable.mcloot.EntityFlags#isSneaking <em>Sneaking</em>}</li>
 *   <li>{@link com.raptor.mcloottable.mcloot.EntityFlags#isSprintingDefined <em>Sprinting Defined</em>}</li>
 *   <li>{@link com.raptor.mcloottable.mcloot.EntityFlags#isSprinting <em>Sprinting</em>}</li>
 *   <li>{@link com.raptor.mcloottable.mcloot.EntityFlags#isSwimmingDefined <em>Swimming Defined</em>}</li>
 *   <li>{@link com.raptor.mcloottable.mcloot.EntityFlags#isSwimming <em>Swimming</em>}</li>
 *   <li>{@link com.raptor.mcloottable.mcloot.EntityFlags#isBabyDefined <em>Baby Defined</em>}</li>
 *   <li>{@link com.raptor.mcloottable.mcloot.EntityFlags#isBaby <em>Baby</em>}</li>
 * </ul>
 *
 * @see com.raptor.mcloottable.mcloot.MclootPackage#getEntityFlags()
 * @model
 * @generated
 */
public interface EntityFlags extends EObject
{
  /**
   * Returns the value of the '<em><b>On Fire Defined</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>On Fire Defined</em>' attribute.
   * @see #setOnFireDefined(boolean)
   * @see com.raptor.mcloottable.mcloot.MclootPackage#getEntityFlags_OnFireDefined()
   * @model
   * @generated
   */
  boolean isOnFireDefined();

  /**
   * Sets the value of the '{@link com.raptor.mcloottable.mcloot.EntityFlags#isOnFireDefined <em>On Fire Defined</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>On Fire Defined</em>' attribute.
   * @see #isOnFireDefined()
   * @generated
   */
  void setOnFireDefined(boolean value);

  /**
   * Returns the value of the '<em><b>On Fire</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>On Fire</em>' attribute.
   * @see #setOnFire(boolean)
   * @see com.raptor.mcloottable.mcloot.MclootPackage#getEntityFlags_OnFire()
   * @model
   * @generated
   */
  boolean isOnFire();

  /**
   * Sets the value of the '{@link com.raptor.mcloottable.mcloot.EntityFlags#isOnFire <em>On Fire</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>On Fire</em>' attribute.
   * @see #isOnFire()
   * @generated
   */
  void setOnFire(boolean value);

  /**
   * Returns the value of the '<em><b>Sneaking Defined</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Sneaking Defined</em>' attribute.
   * @see #setSneakingDefined(boolean)
   * @see com.raptor.mcloottable.mcloot.MclootPackage#getEntityFlags_SneakingDefined()
   * @model
   * @generated
   */
  boolean isSneakingDefined();

  /**
   * Sets the value of the '{@link com.raptor.mcloottable.mcloot.EntityFlags#isSneakingDefined <em>Sneaking Defined</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Sneaking Defined</em>' attribute.
   * @see #isSneakingDefined()
   * @generated
   */
  void setSneakingDefined(boolean value);

  /**
   * Returns the value of the '<em><b>Sneaking</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Sneaking</em>' attribute.
   * @see #setSneaking(boolean)
   * @see com.raptor.mcloottable.mcloot.MclootPackage#getEntityFlags_Sneaking()
   * @model
   * @generated
   */
  boolean isSneaking();

  /**
   * Sets the value of the '{@link com.raptor.mcloottable.mcloot.EntityFlags#isSneaking <em>Sneaking</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Sneaking</em>' attribute.
   * @see #isSneaking()
   * @generated
   */
  void setSneaking(boolean value);

  /**
   * Returns the value of the '<em><b>Sprinting Defined</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Sprinting Defined</em>' attribute.
   * @see #setSprintingDefined(boolean)
   * @see com.raptor.mcloottable.mcloot.MclootPackage#getEntityFlags_SprintingDefined()
   * @model
   * @generated
   */
  boolean isSprintingDefined();

  /**
   * Sets the value of the '{@link com.raptor.mcloottable.mcloot.EntityFlags#isSprintingDefined <em>Sprinting Defined</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Sprinting Defined</em>' attribute.
   * @see #isSprintingDefined()
   * @generated
   */
  void setSprintingDefined(boolean value);

  /**
   * Returns the value of the '<em><b>Sprinting</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Sprinting</em>' attribute.
   * @see #setSprinting(boolean)
   * @see com.raptor.mcloottable.mcloot.MclootPackage#getEntityFlags_Sprinting()
   * @model
   * @generated
   */
  boolean isSprinting();

  /**
   * Sets the value of the '{@link com.raptor.mcloottable.mcloot.EntityFlags#isSprinting <em>Sprinting</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Sprinting</em>' attribute.
   * @see #isSprinting()
   * @generated
   */
  void setSprinting(boolean value);

  /**
   * Returns the value of the '<em><b>Swimming Defined</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Swimming Defined</em>' attribute.
   * @see #setSwimmingDefined(boolean)
   * @see com.raptor.mcloottable.mcloot.MclootPackage#getEntityFlags_SwimmingDefined()
   * @model
   * @generated
   */
  boolean isSwimmingDefined();

  /**
   * Sets the value of the '{@link com.raptor.mcloottable.mcloot.EntityFlags#isSwimmingDefined <em>Swimming Defined</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Swimming Defined</em>' attribute.
   * @see #isSwimmingDefined()
   * @generated
   */
  void setSwimmingDefined(boolean value);

  /**
   * Returns the value of the '<em><b>Swimming</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Swimming</em>' attribute.
   * @see #setSwimming(boolean)
   * @see com.raptor.mcloottable.mcloot.MclootPackage#getEntityFlags_Swimming()
   * @model
   * @generated
   */
  boolean isSwimming();

  /**
   * Sets the value of the '{@link com.raptor.mcloottable.mcloot.EntityFlags#isSwimming <em>Swimming</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Swimming</em>' attribute.
   * @see #isSwimming()
   * @generated
   */
  void setSwimming(boolean value);

  /**
   * Returns the value of the '<em><b>Baby Defined</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Baby Defined</em>' attribute.
   * @see #setBabyDefined(boolean)
   * @see com.raptor.mcloottable.mcloot.MclootPackage#getEntityFlags_BabyDefined()
   * @model
   * @generated
   */
  boolean isBabyDefined();

  /**
   * Sets the value of the '{@link com.raptor.mcloottable.mcloot.EntityFlags#isBabyDefined <em>Baby Defined</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Baby Defined</em>' attribute.
   * @see #isBabyDefined()
   * @generated
   */
  void setBabyDefined(boolean value);

  /**
   * Returns the value of the '<em><b>Baby</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Baby</em>' attribute.
   * @see #setBaby(boolean)
   * @see com.raptor.mcloottable.mcloot.MclootPackage#getEntityFlags_Baby()
   * @model
   * @generated
   */
  boolean isBaby();

  /**
   * Sets the value of the '{@link com.raptor.mcloottable.mcloot.EntityFlags#isBaby <em>Baby</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Baby</em>' attribute.
   * @see #isBaby()
   * @generated
   */
  void setBaby(boolean value);

} // EntityFlags
