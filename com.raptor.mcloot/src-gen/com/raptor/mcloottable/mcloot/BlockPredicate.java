/**
 * generated by Xtext 2.21.0
 */
package com.raptor.mcloottable.mcloot;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EObject;

/**
 * <!-- begin-user-doc -->
 * A representation of the model object '<em><b>Block Predicate</b></em>'.
 * <!-- end-user-doc -->
 *
 * <p>
 * The following features are supported:
 * </p>
 * <ul>
 *   <li>{@link com.raptor.mcloottable.mcloot.BlockPredicate#getTag <em>Tag</em>}</li>
 *   <li>{@link com.raptor.mcloottable.mcloot.BlockPredicate#getBlock <em>Block</em>}</li>
 *   <li>{@link com.raptor.mcloottable.mcloot.BlockPredicate#getNbt <em>Nbt</em>}</li>
 *   <li>{@link com.raptor.mcloottable.mcloot.BlockPredicate#isStateDefined <em>State Defined</em>}</li>
 *   <li>{@link com.raptor.mcloottable.mcloot.BlockPredicate#getProperties <em>Properties</em>}</li>
 * </ul>
 *
 * @see com.raptor.mcloottable.mcloot.MclootPackage#getBlockPredicate()
 * @model
 * @generated
 */
public interface BlockPredicate extends EObject
{
  /**
   * Returns the value of the '<em><b>Tag</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Tag</em>' attribute.
   * @see #setTag(String)
   * @see com.raptor.mcloottable.mcloot.MclootPackage#getBlockPredicate_Tag()
   * @model
   * @generated
   */
  String getTag();

  /**
   * Sets the value of the '{@link com.raptor.mcloottable.mcloot.BlockPredicate#getTag <em>Tag</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Tag</em>' attribute.
   * @see #getTag()
   * @generated
   */
  void setTag(String value);

  /**
   * Returns the value of the '<em><b>Block</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Block</em>' attribute.
   * @see #setBlock(String)
   * @see com.raptor.mcloottable.mcloot.MclootPackage#getBlockPredicate_Block()
   * @model
   * @generated
   */
  String getBlock();

  /**
   * Sets the value of the '{@link com.raptor.mcloottable.mcloot.BlockPredicate#getBlock <em>Block</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Block</em>' attribute.
   * @see #getBlock()
   * @generated
   */
  void setBlock(String value);

  /**
   * Returns the value of the '<em><b>Nbt</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Nbt</em>' attribute.
   * @see #setNbt(String)
   * @see com.raptor.mcloottable.mcloot.MclootPackage#getBlockPredicate_Nbt()
   * @model
   * @generated
   */
  String getNbt();

  /**
   * Sets the value of the '{@link com.raptor.mcloottable.mcloot.BlockPredicate#getNbt <em>Nbt</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Nbt</em>' attribute.
   * @see #getNbt()
   * @generated
   */
  void setNbt(String value);

  /**
   * Returns the value of the '<em><b>State Defined</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>State Defined</em>' attribute.
   * @see #setStateDefined(boolean)
   * @see com.raptor.mcloottable.mcloot.MclootPackage#getBlockPredicate_StateDefined()
   * @model
   * @generated
   */
  boolean isStateDefined();

  /**
   * Sets the value of the '{@link com.raptor.mcloottable.mcloot.BlockPredicate#isStateDefined <em>State Defined</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>State Defined</em>' attribute.
   * @see #isStateDefined()
   * @generated
   */
  void setStateDefined(boolean value);

  /**
   * Returns the value of the '<em><b>Properties</b></em>' containment reference list.
   * The list contents are of type {@link com.raptor.mcloottable.mcloot.BlockStatePropertyPredicate}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Properties</em>' containment reference list.
   * @see com.raptor.mcloottable.mcloot.MclootPackage#getBlockPredicate_Properties()
   * @model containment="true"
   * @generated
   */
  EList<BlockStatePropertyPredicate> getProperties();

} // BlockPredicate
