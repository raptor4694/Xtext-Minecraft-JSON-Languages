/**
 * generated by Xtext 2.21.0
 */
package com.raptor.mcloottable.mcloot;


/**
 * <!-- begin-user-doc -->
 * A representation of the model object '<em><b>Damage Source Properties Loot Condition</b></em>'.
 * <!-- end-user-doc -->
 *
 * <p>
 * The following features are supported:
 * </p>
 * <ul>
 *   <li>{@link com.raptor.mcloottable.mcloot.DamageSourcePropertiesLootCondition#isBypassesArmorDefined <em>Bypasses Armor Defined</em>}</li>
 *   <li>{@link com.raptor.mcloottable.mcloot.DamageSourcePropertiesLootCondition#isBypassesArmor <em>Bypasses Armor</em>}</li>
 *   <li>{@link com.raptor.mcloottable.mcloot.DamageSourcePropertiesLootCondition#isBypassesInvulnerabilityDefined <em>Bypasses Invulnerability Defined</em>}</li>
 *   <li>{@link com.raptor.mcloottable.mcloot.DamageSourcePropertiesLootCondition#isBypassesInvulnerability <em>Bypasses Invulnerability</em>}</li>
 *   <li>{@link com.raptor.mcloottable.mcloot.DamageSourcePropertiesLootCondition#isBypassesMagicDefined <em>Bypasses Magic Defined</em>}</li>
 *   <li>{@link com.raptor.mcloottable.mcloot.DamageSourcePropertiesLootCondition#isBypassesMagic <em>Bypasses Magic</em>}</li>
 *   <li>{@link com.raptor.mcloottable.mcloot.DamageSourcePropertiesLootCondition#getDirectEntity <em>Direct Entity</em>}</li>
 *   <li>{@link com.raptor.mcloottable.mcloot.DamageSourcePropertiesLootCondition#isExplosionDefined <em>Explosion Defined</em>}</li>
 *   <li>{@link com.raptor.mcloottable.mcloot.DamageSourcePropertiesLootCondition#isExplosion <em>Explosion</em>}</li>
 *   <li>{@link com.raptor.mcloottable.mcloot.DamageSourcePropertiesLootCondition#isFireDefined <em>Fire Defined</em>}</li>
 *   <li>{@link com.raptor.mcloottable.mcloot.DamageSourcePropertiesLootCondition#isFire <em>Fire</em>}</li>
 *   <li>{@link com.raptor.mcloottable.mcloot.DamageSourcePropertiesLootCondition#isMagicDefined <em>Magic Defined</em>}</li>
 *   <li>{@link com.raptor.mcloottable.mcloot.DamageSourcePropertiesLootCondition#isMagic <em>Magic</em>}</li>
 *   <li>{@link com.raptor.mcloottable.mcloot.DamageSourcePropertiesLootCondition#isProjectileDefined <em>Projectile Defined</em>}</li>
 *   <li>{@link com.raptor.mcloottable.mcloot.DamageSourcePropertiesLootCondition#isProjectile <em>Projectile</em>}</li>
 *   <li>{@link com.raptor.mcloottable.mcloot.DamageSourcePropertiesLootCondition#isLightningDefined <em>Lightning Defined</em>}</li>
 *   <li>{@link com.raptor.mcloottable.mcloot.DamageSourcePropertiesLootCondition#isLightning <em>Lightning</em>}</li>
 *   <li>{@link com.raptor.mcloottable.mcloot.DamageSourcePropertiesLootCondition#getSourceEntity <em>Source Entity</em>}</li>
 * </ul>
 *
 * @see com.raptor.mcloottable.mcloot.MclootPackage#getDamageSourcePropertiesLootCondition()
 * @model
 * @generated
 */
public interface DamageSourcePropertiesLootCondition extends NamedLootCondition
{
  /**
   * Returns the value of the '<em><b>Bypasses Armor Defined</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Bypasses Armor Defined</em>' attribute.
   * @see #setBypassesArmorDefined(boolean)
   * @see com.raptor.mcloottable.mcloot.MclootPackage#getDamageSourcePropertiesLootCondition_BypassesArmorDefined()
   * @model
   * @generated
   */
  boolean isBypassesArmorDefined();

  /**
   * Sets the value of the '{@link com.raptor.mcloottable.mcloot.DamageSourcePropertiesLootCondition#isBypassesArmorDefined <em>Bypasses Armor Defined</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Bypasses Armor Defined</em>' attribute.
   * @see #isBypassesArmorDefined()
   * @generated
   */
  void setBypassesArmorDefined(boolean value);

  /**
   * Returns the value of the '<em><b>Bypasses Armor</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Bypasses Armor</em>' attribute.
   * @see #setBypassesArmor(boolean)
   * @see com.raptor.mcloottable.mcloot.MclootPackage#getDamageSourcePropertiesLootCondition_BypassesArmor()
   * @model
   * @generated
   */
  boolean isBypassesArmor();

  /**
   * Sets the value of the '{@link com.raptor.mcloottable.mcloot.DamageSourcePropertiesLootCondition#isBypassesArmor <em>Bypasses Armor</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Bypasses Armor</em>' attribute.
   * @see #isBypassesArmor()
   * @generated
   */
  void setBypassesArmor(boolean value);

  /**
   * Returns the value of the '<em><b>Bypasses Invulnerability Defined</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Bypasses Invulnerability Defined</em>' attribute.
   * @see #setBypassesInvulnerabilityDefined(boolean)
   * @see com.raptor.mcloottable.mcloot.MclootPackage#getDamageSourcePropertiesLootCondition_BypassesInvulnerabilityDefined()
   * @model
   * @generated
   */
  boolean isBypassesInvulnerabilityDefined();

  /**
   * Sets the value of the '{@link com.raptor.mcloottable.mcloot.DamageSourcePropertiesLootCondition#isBypassesInvulnerabilityDefined <em>Bypasses Invulnerability Defined</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Bypasses Invulnerability Defined</em>' attribute.
   * @see #isBypassesInvulnerabilityDefined()
   * @generated
   */
  void setBypassesInvulnerabilityDefined(boolean value);

  /**
   * Returns the value of the '<em><b>Bypasses Invulnerability</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Bypasses Invulnerability</em>' attribute.
   * @see #setBypassesInvulnerability(boolean)
   * @see com.raptor.mcloottable.mcloot.MclootPackage#getDamageSourcePropertiesLootCondition_BypassesInvulnerability()
   * @model
   * @generated
   */
  boolean isBypassesInvulnerability();

  /**
   * Sets the value of the '{@link com.raptor.mcloottable.mcloot.DamageSourcePropertiesLootCondition#isBypassesInvulnerability <em>Bypasses Invulnerability</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Bypasses Invulnerability</em>' attribute.
   * @see #isBypassesInvulnerability()
   * @generated
   */
  void setBypassesInvulnerability(boolean value);

  /**
   * Returns the value of the '<em><b>Bypasses Magic Defined</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Bypasses Magic Defined</em>' attribute.
   * @see #setBypassesMagicDefined(boolean)
   * @see com.raptor.mcloottable.mcloot.MclootPackage#getDamageSourcePropertiesLootCondition_BypassesMagicDefined()
   * @model
   * @generated
   */
  boolean isBypassesMagicDefined();

  /**
   * Sets the value of the '{@link com.raptor.mcloottable.mcloot.DamageSourcePropertiesLootCondition#isBypassesMagicDefined <em>Bypasses Magic Defined</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Bypasses Magic Defined</em>' attribute.
   * @see #isBypassesMagicDefined()
   * @generated
   */
  void setBypassesMagicDefined(boolean value);

  /**
   * Returns the value of the '<em><b>Bypasses Magic</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Bypasses Magic</em>' attribute.
   * @see #setBypassesMagic(boolean)
   * @see com.raptor.mcloottable.mcloot.MclootPackage#getDamageSourcePropertiesLootCondition_BypassesMagic()
   * @model
   * @generated
   */
  boolean isBypassesMagic();

  /**
   * Sets the value of the '{@link com.raptor.mcloottable.mcloot.DamageSourcePropertiesLootCondition#isBypassesMagic <em>Bypasses Magic</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Bypasses Magic</em>' attribute.
   * @see #isBypassesMagic()
   * @generated
   */
  void setBypassesMagic(boolean value);

  /**
   * Returns the value of the '<em><b>Direct Entity</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Direct Entity</em>' containment reference.
   * @see #setDirectEntity(EntityPredicate)
   * @see com.raptor.mcloottable.mcloot.MclootPackage#getDamageSourcePropertiesLootCondition_DirectEntity()
   * @model containment="true"
   * @generated
   */
  EntityPredicate getDirectEntity();

  /**
   * Sets the value of the '{@link com.raptor.mcloottable.mcloot.DamageSourcePropertiesLootCondition#getDirectEntity <em>Direct Entity</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Direct Entity</em>' containment reference.
   * @see #getDirectEntity()
   * @generated
   */
  void setDirectEntity(EntityPredicate value);

  /**
   * Returns the value of the '<em><b>Explosion Defined</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Explosion Defined</em>' attribute.
   * @see #setExplosionDefined(boolean)
   * @see com.raptor.mcloottable.mcloot.MclootPackage#getDamageSourcePropertiesLootCondition_ExplosionDefined()
   * @model
   * @generated
   */
  boolean isExplosionDefined();

  /**
   * Sets the value of the '{@link com.raptor.mcloottable.mcloot.DamageSourcePropertiesLootCondition#isExplosionDefined <em>Explosion Defined</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Explosion Defined</em>' attribute.
   * @see #isExplosionDefined()
   * @generated
   */
  void setExplosionDefined(boolean value);

  /**
   * Returns the value of the '<em><b>Explosion</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Explosion</em>' attribute.
   * @see #setExplosion(boolean)
   * @see com.raptor.mcloottable.mcloot.MclootPackage#getDamageSourcePropertiesLootCondition_Explosion()
   * @model
   * @generated
   */
  boolean isExplosion();

  /**
   * Sets the value of the '{@link com.raptor.mcloottable.mcloot.DamageSourcePropertiesLootCondition#isExplosion <em>Explosion</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Explosion</em>' attribute.
   * @see #isExplosion()
   * @generated
   */
  void setExplosion(boolean value);

  /**
   * Returns the value of the '<em><b>Fire Defined</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Fire Defined</em>' attribute.
   * @see #setFireDefined(boolean)
   * @see com.raptor.mcloottable.mcloot.MclootPackage#getDamageSourcePropertiesLootCondition_FireDefined()
   * @model
   * @generated
   */
  boolean isFireDefined();

  /**
   * Sets the value of the '{@link com.raptor.mcloottable.mcloot.DamageSourcePropertiesLootCondition#isFireDefined <em>Fire Defined</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Fire Defined</em>' attribute.
   * @see #isFireDefined()
   * @generated
   */
  void setFireDefined(boolean value);

  /**
   * Returns the value of the '<em><b>Fire</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Fire</em>' attribute.
   * @see #setFire(boolean)
   * @see com.raptor.mcloottable.mcloot.MclootPackage#getDamageSourcePropertiesLootCondition_Fire()
   * @model
   * @generated
   */
  boolean isFire();

  /**
   * Sets the value of the '{@link com.raptor.mcloottable.mcloot.DamageSourcePropertiesLootCondition#isFire <em>Fire</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Fire</em>' attribute.
   * @see #isFire()
   * @generated
   */
  void setFire(boolean value);

  /**
   * Returns the value of the '<em><b>Magic Defined</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Magic Defined</em>' attribute.
   * @see #setMagicDefined(boolean)
   * @see com.raptor.mcloottable.mcloot.MclootPackage#getDamageSourcePropertiesLootCondition_MagicDefined()
   * @model
   * @generated
   */
  boolean isMagicDefined();

  /**
   * Sets the value of the '{@link com.raptor.mcloottable.mcloot.DamageSourcePropertiesLootCondition#isMagicDefined <em>Magic Defined</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Magic Defined</em>' attribute.
   * @see #isMagicDefined()
   * @generated
   */
  void setMagicDefined(boolean value);

  /**
   * Returns the value of the '<em><b>Magic</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Magic</em>' attribute.
   * @see #setMagic(boolean)
   * @see com.raptor.mcloottable.mcloot.MclootPackage#getDamageSourcePropertiesLootCondition_Magic()
   * @model
   * @generated
   */
  boolean isMagic();

  /**
   * Sets the value of the '{@link com.raptor.mcloottable.mcloot.DamageSourcePropertiesLootCondition#isMagic <em>Magic</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Magic</em>' attribute.
   * @see #isMagic()
   * @generated
   */
  void setMagic(boolean value);

  /**
   * Returns the value of the '<em><b>Projectile Defined</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Projectile Defined</em>' attribute.
   * @see #setProjectileDefined(boolean)
   * @see com.raptor.mcloottable.mcloot.MclootPackage#getDamageSourcePropertiesLootCondition_ProjectileDefined()
   * @model
   * @generated
   */
  boolean isProjectileDefined();

  /**
   * Sets the value of the '{@link com.raptor.mcloottable.mcloot.DamageSourcePropertiesLootCondition#isProjectileDefined <em>Projectile Defined</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Projectile Defined</em>' attribute.
   * @see #isProjectileDefined()
   * @generated
   */
  void setProjectileDefined(boolean value);

  /**
   * Returns the value of the '<em><b>Projectile</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Projectile</em>' attribute.
   * @see #setProjectile(boolean)
   * @see com.raptor.mcloottable.mcloot.MclootPackage#getDamageSourcePropertiesLootCondition_Projectile()
   * @model
   * @generated
   */
  boolean isProjectile();

  /**
   * Sets the value of the '{@link com.raptor.mcloottable.mcloot.DamageSourcePropertiesLootCondition#isProjectile <em>Projectile</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Projectile</em>' attribute.
   * @see #isProjectile()
   * @generated
   */
  void setProjectile(boolean value);

  /**
   * Returns the value of the '<em><b>Lightning Defined</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Lightning Defined</em>' attribute.
   * @see #setLightningDefined(boolean)
   * @see com.raptor.mcloottable.mcloot.MclootPackage#getDamageSourcePropertiesLootCondition_LightningDefined()
   * @model
   * @generated
   */
  boolean isLightningDefined();

  /**
   * Sets the value of the '{@link com.raptor.mcloottable.mcloot.DamageSourcePropertiesLootCondition#isLightningDefined <em>Lightning Defined</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Lightning Defined</em>' attribute.
   * @see #isLightningDefined()
   * @generated
   */
  void setLightningDefined(boolean value);

  /**
   * Returns the value of the '<em><b>Lightning</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Lightning</em>' attribute.
   * @see #setLightning(boolean)
   * @see com.raptor.mcloottable.mcloot.MclootPackage#getDamageSourcePropertiesLootCondition_Lightning()
   * @model
   * @generated
   */
  boolean isLightning();

  /**
   * Sets the value of the '{@link com.raptor.mcloottable.mcloot.DamageSourcePropertiesLootCondition#isLightning <em>Lightning</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Lightning</em>' attribute.
   * @see #isLightning()
   * @generated
   */
  void setLightning(boolean value);

  /**
   * Returns the value of the '<em><b>Source Entity</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Source Entity</em>' containment reference.
   * @see #setSourceEntity(EntityPredicate)
   * @see com.raptor.mcloottable.mcloot.MclootPackage#getDamageSourcePropertiesLootCondition_SourceEntity()
   * @model containment="true"
   * @generated
   */
  EntityPredicate getSourceEntity();

  /**
   * Sets the value of the '{@link com.raptor.mcloottable.mcloot.DamageSourcePropertiesLootCondition#getSourceEntity <em>Source Entity</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Source Entity</em>' containment reference.
   * @see #getSourceEntity()
   * @generated
   */
  void setSourceEntity(EntityPredicate value);

} // DamageSourcePropertiesLootCondition
