/**
 * generated by Xtext 2.21.0
 */
package com.raptor.mcloottable.mcloot;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EObject;

/**
 * <!-- begin-user-doc -->
 * A representation of the model object '<em><b>Player Predicate</b></em>'.
 * <!-- end-user-doc -->
 *
 * <p>
 * The following features are supported:
 * </p>
 * <ul>
 *   <li>{@link com.raptor.mcloottable.mcloot.PlayerPredicate#isAdvancementsDefined <em>Advancements Defined</em>}</li>
 *   <li>{@link com.raptor.mcloottable.mcloot.PlayerPredicate#getAdvancements <em>Advancements</em>}</li>
 *   <li>{@link com.raptor.mcloottable.mcloot.PlayerPredicate#isGamemodeDefined <em>Gamemode Defined</em>}</li>
 *   <li>{@link com.raptor.mcloottable.mcloot.PlayerPredicate#getGamemode <em>Gamemode</em>}</li>
 *   <li>{@link com.raptor.mcloottable.mcloot.PlayerPredicate#isRecipesDefined <em>Recipes Defined</em>}</li>
 *   <li>{@link com.raptor.mcloottable.mcloot.PlayerPredicate#getRecipes <em>Recipes</em>}</li>
 *   <li>{@link com.raptor.mcloottable.mcloot.PlayerPredicate#isStatsDefined <em>Stats Defined</em>}</li>
 *   <li>{@link com.raptor.mcloottable.mcloot.PlayerPredicate#getStats <em>Stats</em>}</li>
 * </ul>
 *
 * @see com.raptor.mcloottable.mcloot.MclootPackage#getPlayerPredicate()
 * @model
 * @generated
 */
public interface PlayerPredicate extends EObject
{
  /**
   * Returns the value of the '<em><b>Advancements Defined</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Advancements Defined</em>' attribute.
   * @see #setAdvancementsDefined(boolean)
   * @see com.raptor.mcloottable.mcloot.MclootPackage#getPlayerPredicate_AdvancementsDefined()
   * @model
   * @generated
   */
  boolean isAdvancementsDefined();

  /**
   * Sets the value of the '{@link com.raptor.mcloottable.mcloot.PlayerPredicate#isAdvancementsDefined <em>Advancements Defined</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Advancements Defined</em>' attribute.
   * @see #isAdvancementsDefined()
   * @generated
   */
  void setAdvancementsDefined(boolean value);

  /**
   * Returns the value of the '<em><b>Advancements</b></em>' containment reference list.
   * The list contents are of type {@link com.raptor.mcloottable.mcloot.AdvancementPredicate}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Advancements</em>' containment reference list.
   * @see com.raptor.mcloottable.mcloot.MclootPackage#getPlayerPredicate_Advancements()
   * @model containment="true"
   * @generated
   */
  EList<AdvancementPredicate> getAdvancements();

  /**
   * Returns the value of the '<em><b>Gamemode Defined</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Gamemode Defined</em>' attribute.
   * @see #setGamemodeDefined(boolean)
   * @see com.raptor.mcloottable.mcloot.MclootPackage#getPlayerPredicate_GamemodeDefined()
   * @model
   * @generated
   */
  boolean isGamemodeDefined();

  /**
   * Sets the value of the '{@link com.raptor.mcloottable.mcloot.PlayerPredicate#isGamemodeDefined <em>Gamemode Defined</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Gamemode Defined</em>' attribute.
   * @see #isGamemodeDefined()
   * @generated
   */
  void setGamemodeDefined(boolean value);

  /**
   * Returns the value of the '<em><b>Gamemode</b></em>' attribute.
   * The literals are from the enumeration {@link com.raptor.mcloottable.mcloot.EnumGamemode}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Gamemode</em>' attribute.
   * @see com.raptor.mcloottable.mcloot.EnumGamemode
   * @see #setGamemode(EnumGamemode)
   * @see com.raptor.mcloottable.mcloot.MclootPackage#getPlayerPredicate_Gamemode()
   * @model
   * @generated
   */
  EnumGamemode getGamemode();

  /**
   * Sets the value of the '{@link com.raptor.mcloottable.mcloot.PlayerPredicate#getGamemode <em>Gamemode</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Gamemode</em>' attribute.
   * @see com.raptor.mcloottable.mcloot.EnumGamemode
   * @see #getGamemode()
   * @generated
   */
  void setGamemode(EnumGamemode value);

  /**
   * Returns the value of the '<em><b>Recipes Defined</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Recipes Defined</em>' attribute.
   * @see #setRecipesDefined(boolean)
   * @see com.raptor.mcloottable.mcloot.MclootPackage#getPlayerPredicate_RecipesDefined()
   * @model
   * @generated
   */
  boolean isRecipesDefined();

  /**
   * Sets the value of the '{@link com.raptor.mcloottable.mcloot.PlayerPredicate#isRecipesDefined <em>Recipes Defined</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Recipes Defined</em>' attribute.
   * @see #isRecipesDefined()
   * @generated
   */
  void setRecipesDefined(boolean value);

  /**
   * Returns the value of the '<em><b>Recipes</b></em>' containment reference list.
   * The list contents are of type {@link com.raptor.mcloottable.mcloot.RecipePredicate}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Recipes</em>' containment reference list.
   * @see com.raptor.mcloottable.mcloot.MclootPackage#getPlayerPredicate_Recipes()
   * @model containment="true"
   * @generated
   */
  EList<RecipePredicate> getRecipes();

  /**
   * Returns the value of the '<em><b>Stats Defined</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Stats Defined</em>' attribute.
   * @see #setStatsDefined(boolean)
   * @see com.raptor.mcloottable.mcloot.MclootPackage#getPlayerPredicate_StatsDefined()
   * @model
   * @generated
   */
  boolean isStatsDefined();

  /**
   * Sets the value of the '{@link com.raptor.mcloottable.mcloot.PlayerPredicate#isStatsDefined <em>Stats Defined</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Stats Defined</em>' attribute.
   * @see #isStatsDefined()
   * @generated
   */
  void setStatsDefined(boolean value);

  /**
   * Returns the value of the '<em><b>Stats</b></em>' containment reference list.
   * The list contents are of type {@link com.raptor.mcloottable.mcloot.StatisticPredicate}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Stats</em>' containment reference list.
   * @see com.raptor.mcloottable.mcloot.MclootPackage#getPlayerPredicate_Stats()
   * @model containment="true"
   * @generated
   */
  EList<StatisticPredicate> getStats();

} // PlayerPredicate
