/**
 * generated by Xtext 2.21.0
 */
package com.raptor.mcloottable.mcloot;

import org.eclipse.emf.common.util.EList;

/**
 * <!-- begin-user-doc -->
 * A representation of the model object '<em><b>Block State Properties Loot Condition</b></em>'.
 * <!-- end-user-doc -->
 *
 * <p>
 * The following features are supported:
 * </p>
 * <ul>
 *   <li>{@link com.raptor.mcloottable.mcloot.BlockStatePropertiesLootCondition#isInverted <em>Inverted</em>}</li>
 *   <li>{@link com.raptor.mcloottable.mcloot.BlockStatePropertiesLootCondition#getBlock <em>Block</em>}</li>
 *   <li>{@link com.raptor.mcloottable.mcloot.BlockStatePropertiesLootCondition#getProperties <em>Properties</em>}</li>
 * </ul>
 *
 * @see com.raptor.mcloottable.mcloot.MclootPackage#getBlockStatePropertiesLootCondition()
 * @model
 * @generated
 */
public interface BlockStatePropertiesLootCondition extends NamedLootCondition
{
  /**
   * Returns the value of the '<em><b>Inverted</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Inverted</em>' attribute.
   * @see #setInverted(boolean)
   * @see com.raptor.mcloottable.mcloot.MclootPackage#getBlockStatePropertiesLootCondition_Inverted()
   * @model
   * @generated
   */
  boolean isInverted();

  /**
   * Sets the value of the '{@link com.raptor.mcloottable.mcloot.BlockStatePropertiesLootCondition#isInverted <em>Inverted</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Inverted</em>' attribute.
   * @see #isInverted()
   * @generated
   */
  void setInverted(boolean value);

  /**
   * Returns the value of the '<em><b>Block</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Block</em>' attribute.
   * @see #setBlock(String)
   * @see com.raptor.mcloottable.mcloot.MclootPackage#getBlockStatePropertiesLootCondition_Block()
   * @model
   * @generated
   */
  String getBlock();

  /**
   * Sets the value of the '{@link com.raptor.mcloottable.mcloot.BlockStatePropertiesLootCondition#getBlock <em>Block</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Block</em>' attribute.
   * @see #getBlock()
   * @generated
   */
  void setBlock(String value);

  /**
   * Returns the value of the '<em><b>Properties</b></em>' containment reference list.
   * The list contents are of type {@link com.raptor.mcloottable.mcloot.BlockStateProperty}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Properties</em>' containment reference list.
   * @see com.raptor.mcloottable.mcloot.MclootPackage#getBlockStatePropertiesLootCondition_Properties()
   * @model containment="true"
   * @generated
   */
  EList<BlockStateProperty> getProperties();

} // BlockStatePropertiesLootCondition
