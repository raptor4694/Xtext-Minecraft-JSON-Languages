/**
 * generated by Xtext 2.21.0
 */
package com.raptor.mcloottable.mcloot;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EObject;

/**
 * <!-- begin-user-doc -->
 * A representation of the model object '<em><b>Item Predicate</b></em>'.
 * <!-- end-user-doc -->
 *
 * <p>
 * The following features are supported:
 * </p>
 * <ul>
 *   <li>{@link com.raptor.mcloottable.mcloot.ItemPredicate#getTag <em>Tag</em>}</li>
 *   <li>{@link com.raptor.mcloottable.mcloot.ItemPredicate#getItem <em>Item</em>}</li>
 *   <li>{@link com.raptor.mcloottable.mcloot.ItemPredicate#isCountDefined <em>Count Defined</em>}</li>
 *   <li>{@link com.raptor.mcloottable.mcloot.ItemPredicate#getCount <em>Count</em>}</li>
 *   <li>{@link com.raptor.mcloottable.mcloot.ItemPredicate#isDurabilityDefined <em>Durability Defined</em>}</li>
 *   <li>{@link com.raptor.mcloottable.mcloot.ItemPredicate#getDurability <em>Durability</em>}</li>
 *   <li>{@link com.raptor.mcloottable.mcloot.ItemPredicate#isEnchantmentsDefined <em>Enchantments Defined</em>}</li>
 *   <li>{@link com.raptor.mcloottable.mcloot.ItemPredicate#getEnchantments <em>Enchantments</em>}</li>
 *   <li>{@link com.raptor.mcloottable.mcloot.ItemPredicate#isStoredEnchantmentsDefined <em>Stored Enchantments Defined</em>}</li>
 *   <li>{@link com.raptor.mcloottable.mcloot.ItemPredicate#getStoredEnchantments <em>Stored Enchantments</em>}</li>
 *   <li>{@link com.raptor.mcloottable.mcloot.ItemPredicate#isNbtDefined <em>Nbt Defined</em>}</li>
 *   <li>{@link com.raptor.mcloottable.mcloot.ItemPredicate#getNbt <em>Nbt</em>}</li>
 *   <li>{@link com.raptor.mcloottable.mcloot.ItemPredicate#isPotionDefined <em>Potion Defined</em>}</li>
 *   <li>{@link com.raptor.mcloottable.mcloot.ItemPredicate#getPotion <em>Potion</em>}</li>
 * </ul>
 *
 * @see com.raptor.mcloottable.mcloot.MclootPackage#getItemPredicate()
 * @model
 * @generated
 */
public interface ItemPredicate extends EObject
{
  /**
   * Returns the value of the '<em><b>Tag</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Tag</em>' attribute.
   * @see #setTag(String)
   * @see com.raptor.mcloottable.mcloot.MclootPackage#getItemPredicate_Tag()
   * @model
   * @generated
   */
  String getTag();

  /**
   * Sets the value of the '{@link com.raptor.mcloottable.mcloot.ItemPredicate#getTag <em>Tag</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Tag</em>' attribute.
   * @see #getTag()
   * @generated
   */
  void setTag(String value);

  /**
   * Returns the value of the '<em><b>Item</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Item</em>' attribute.
   * @see #setItem(String)
   * @see com.raptor.mcloottable.mcloot.MclootPackage#getItemPredicate_Item()
   * @model
   * @generated
   */
  String getItem();

  /**
   * Sets the value of the '{@link com.raptor.mcloottable.mcloot.ItemPredicate#getItem <em>Item</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Item</em>' attribute.
   * @see #getItem()
   * @generated
   */
  void setItem(String value);

  /**
   * Returns the value of the '<em><b>Count Defined</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Count Defined</em>' attribute.
   * @see #setCountDefined(boolean)
   * @see com.raptor.mcloottable.mcloot.MclootPackage#getItemPredicate_CountDefined()
   * @model
   * @generated
   */
  boolean isCountDefined();

  /**
   * Sets the value of the '{@link com.raptor.mcloottable.mcloot.ItemPredicate#isCountDefined <em>Count Defined</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Count Defined</em>' attribute.
   * @see #isCountDefined()
   * @generated
   */
  void setCountDefined(boolean value);

  /**
   * Returns the value of the '<em><b>Count</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Count</em>' containment reference.
   * @see #setCount(LongRange)
   * @see com.raptor.mcloottable.mcloot.MclootPackage#getItemPredicate_Count()
   * @model containment="true"
   * @generated
   */
  LongRange getCount();

  /**
   * Sets the value of the '{@link com.raptor.mcloottable.mcloot.ItemPredicate#getCount <em>Count</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Count</em>' containment reference.
   * @see #getCount()
   * @generated
   */
  void setCount(LongRange value);

  /**
   * Returns the value of the '<em><b>Durability Defined</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Durability Defined</em>' attribute.
   * @see #setDurabilityDefined(boolean)
   * @see com.raptor.mcloottable.mcloot.MclootPackage#getItemPredicate_DurabilityDefined()
   * @model
   * @generated
   */
  boolean isDurabilityDefined();

  /**
   * Sets the value of the '{@link com.raptor.mcloottable.mcloot.ItemPredicate#isDurabilityDefined <em>Durability Defined</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Durability Defined</em>' attribute.
   * @see #isDurabilityDefined()
   * @generated
   */
  void setDurabilityDefined(boolean value);

  /**
   * Returns the value of the '<em><b>Durability</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Durability</em>' containment reference.
   * @see #setDurability(LongRange)
   * @see com.raptor.mcloottable.mcloot.MclootPackage#getItemPredicate_Durability()
   * @model containment="true"
   * @generated
   */
  LongRange getDurability();

  /**
   * Sets the value of the '{@link com.raptor.mcloottable.mcloot.ItemPredicate#getDurability <em>Durability</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Durability</em>' containment reference.
   * @see #getDurability()
   * @generated
   */
  void setDurability(LongRange value);

  /**
   * Returns the value of the '<em><b>Enchantments Defined</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Enchantments Defined</em>' attribute.
   * @see #setEnchantmentsDefined(boolean)
   * @see com.raptor.mcloottable.mcloot.MclootPackage#getItemPredicate_EnchantmentsDefined()
   * @model
   * @generated
   */
  boolean isEnchantmentsDefined();

  /**
   * Sets the value of the '{@link com.raptor.mcloottable.mcloot.ItemPredicate#isEnchantmentsDefined <em>Enchantments Defined</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Enchantments Defined</em>' attribute.
   * @see #isEnchantmentsDefined()
   * @generated
   */
  void setEnchantmentsDefined(boolean value);

  /**
   * Returns the value of the '<em><b>Enchantments</b></em>' containment reference list.
   * The list contents are of type {@link com.raptor.mcloottable.mcloot.EnchantmentLevel}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Enchantments</em>' containment reference list.
   * @see com.raptor.mcloottable.mcloot.MclootPackage#getItemPredicate_Enchantments()
   * @model containment="true"
   * @generated
   */
  EList<EnchantmentLevel> getEnchantments();

  /**
   * Returns the value of the '<em><b>Stored Enchantments Defined</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Stored Enchantments Defined</em>' attribute.
   * @see #setStoredEnchantmentsDefined(boolean)
   * @see com.raptor.mcloottable.mcloot.MclootPackage#getItemPredicate_StoredEnchantmentsDefined()
   * @model
   * @generated
   */
  boolean isStoredEnchantmentsDefined();

  /**
   * Sets the value of the '{@link com.raptor.mcloottable.mcloot.ItemPredicate#isStoredEnchantmentsDefined <em>Stored Enchantments Defined</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Stored Enchantments Defined</em>' attribute.
   * @see #isStoredEnchantmentsDefined()
   * @generated
   */
  void setStoredEnchantmentsDefined(boolean value);

  /**
   * Returns the value of the '<em><b>Stored Enchantments</b></em>' containment reference list.
   * The list contents are of type {@link com.raptor.mcloottable.mcloot.EnchantmentLevel}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Stored Enchantments</em>' containment reference list.
   * @see com.raptor.mcloottable.mcloot.MclootPackage#getItemPredicate_StoredEnchantments()
   * @model containment="true"
   * @generated
   */
  EList<EnchantmentLevel> getStoredEnchantments();

  /**
   * Returns the value of the '<em><b>Nbt Defined</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Nbt Defined</em>' attribute.
   * @see #setNbtDefined(boolean)
   * @see com.raptor.mcloottable.mcloot.MclootPackage#getItemPredicate_NbtDefined()
   * @model
   * @generated
   */
  boolean isNbtDefined();

  /**
   * Sets the value of the '{@link com.raptor.mcloottable.mcloot.ItemPredicate#isNbtDefined <em>Nbt Defined</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Nbt Defined</em>' attribute.
   * @see #isNbtDefined()
   * @generated
   */
  void setNbtDefined(boolean value);

  /**
   * Returns the value of the '<em><b>Nbt</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Nbt</em>' attribute.
   * @see #setNbt(String)
   * @see com.raptor.mcloottable.mcloot.MclootPackage#getItemPredicate_Nbt()
   * @model
   * @generated
   */
  String getNbt();

  /**
   * Sets the value of the '{@link com.raptor.mcloottable.mcloot.ItemPredicate#getNbt <em>Nbt</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Nbt</em>' attribute.
   * @see #getNbt()
   * @generated
   */
  void setNbt(String value);

  /**
   * Returns the value of the '<em><b>Potion Defined</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Potion Defined</em>' attribute.
   * @see #setPotionDefined(boolean)
   * @see com.raptor.mcloottable.mcloot.MclootPackage#getItemPredicate_PotionDefined()
   * @model
   * @generated
   */
  boolean isPotionDefined();

  /**
   * Sets the value of the '{@link com.raptor.mcloottable.mcloot.ItemPredicate#isPotionDefined <em>Potion Defined</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Potion Defined</em>' attribute.
   * @see #isPotionDefined()
   * @generated
   */
  void setPotionDefined(boolean value);

  /**
   * Returns the value of the '<em><b>Potion</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Potion</em>' attribute.
   * @see #setPotion(String)
   * @see com.raptor.mcloottable.mcloot.MclootPackage#getItemPredicate_Potion()
   * @model
   * @generated
   */
  String getPotion();

  /**
   * Sets the value of the '{@link com.raptor.mcloottable.mcloot.ItemPredicate#getPotion <em>Potion</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Potion</em>' attribute.
   * @see #getPotion()
   * @generated
   */
  void setPotion(String value);

} // ItemPredicate
