/**
 * generated by Xtext 2.21.0
 */
package com.raptor.mcloottable.mcloot.impl;

import com.raptor.mcloottable.mcloot.AttributeModifier;
import com.raptor.mcloottable.mcloot.DoubleRange;
import com.raptor.mcloottable.mcloot.EnumAttributeModifierOperation;
import com.raptor.mcloottable.mcloot.EnumEquipmentSlot;
import com.raptor.mcloottable.mcloot.MclootPackage;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EDataTypeEList;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Attribute Modifier</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link com.raptor.mcloottable.mcloot.impl.AttributeModifierImpl#getId <em>Id</em>}</li>
 *   <li>{@link com.raptor.mcloottable.mcloot.impl.AttributeModifierImpl#getOperation <em>Operation</em>}</li>
 *   <li>{@link com.raptor.mcloottable.mcloot.impl.AttributeModifierImpl#getAmount <em>Amount</em>}</li>
 *   <li>{@link com.raptor.mcloottable.mcloot.impl.AttributeModifierImpl#getAttributeName <em>Attribute Name</em>}</li>
 *   <li>{@link com.raptor.mcloottable.mcloot.impl.AttributeModifierImpl#getUuid <em>Uuid</em>}</li>
 *   <li>{@link com.raptor.mcloottable.mcloot.impl.AttributeModifierImpl#isSlotDefined <em>Slot Defined</em>}</li>
 *   <li>{@link com.raptor.mcloottable.mcloot.impl.AttributeModifierImpl#isSingleSlot <em>Single Slot</em>}</li>
 *   <li>{@link com.raptor.mcloottable.mcloot.impl.AttributeModifierImpl#getSlots <em>Slots</em>}</li>
 * </ul>
 *
 * @generated
 */
public class AttributeModifierImpl extends MinimalEObjectImpl.Container implements AttributeModifier
{
  /**
   * The default value of the '{@link #getId() <em>Id</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getId()
   * @generated
   * @ordered
   */
  protected static final String ID_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getId() <em>Id</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getId()
   * @generated
   * @ordered
   */
  protected String id = ID_EDEFAULT;

  /**
   * The default value of the '{@link #getOperation() <em>Operation</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getOperation()
   * @generated
   * @ordered
   */
  protected static final EnumAttributeModifierOperation OPERATION_EDEFAULT = EnumAttributeModifierOperation.ADDITION;

  /**
   * The cached value of the '{@link #getOperation() <em>Operation</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getOperation()
   * @generated
   * @ordered
   */
  protected EnumAttributeModifierOperation operation = OPERATION_EDEFAULT;

  /**
   * The cached value of the '{@link #getAmount() <em>Amount</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAmount()
   * @generated
   * @ordered
   */
  protected DoubleRange amount;

  /**
   * The default value of the '{@link #getAttributeName() <em>Attribute Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAttributeName()
   * @generated
   * @ordered
   */
  protected static final String ATTRIBUTE_NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getAttributeName() <em>Attribute Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAttributeName()
   * @generated
   * @ordered
   */
  protected String attributeName = ATTRIBUTE_NAME_EDEFAULT;

  /**
   * The default value of the '{@link #getUuid() <em>Uuid</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getUuid()
   * @generated
   * @ordered
   */
  protected static final String UUID_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getUuid() <em>Uuid</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getUuid()
   * @generated
   * @ordered
   */
  protected String uuid = UUID_EDEFAULT;

  /**
   * The default value of the '{@link #isSlotDefined() <em>Slot Defined</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isSlotDefined()
   * @generated
   * @ordered
   */
  protected static final boolean SLOT_DEFINED_EDEFAULT = false;

  /**
   * The cached value of the '{@link #isSlotDefined() <em>Slot Defined</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isSlotDefined()
   * @generated
   * @ordered
   */
  protected boolean slotDefined = SLOT_DEFINED_EDEFAULT;

  /**
   * The default value of the '{@link #isSingleSlot() <em>Single Slot</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isSingleSlot()
   * @generated
   * @ordered
   */
  protected static final boolean SINGLE_SLOT_EDEFAULT = false;

  /**
   * The cached value of the '{@link #isSingleSlot() <em>Single Slot</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isSingleSlot()
   * @generated
   * @ordered
   */
  protected boolean singleSlot = SINGLE_SLOT_EDEFAULT;

  /**
   * The cached value of the '{@link #getSlots() <em>Slots</em>}' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSlots()
   * @generated
   * @ordered
   */
  protected EList<EnumEquipmentSlot> slots;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected AttributeModifierImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return MclootPackage.Literals.ATTRIBUTE_MODIFIER;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getId()
  {
    return id;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setId(String newId)
  {
    String oldId = id;
    id = newId;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MclootPackage.ATTRIBUTE_MODIFIER__ID, oldId, id));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EnumAttributeModifierOperation getOperation()
  {
    return operation;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setOperation(EnumAttributeModifierOperation newOperation)
  {
    EnumAttributeModifierOperation oldOperation = operation;
    operation = newOperation == null ? OPERATION_EDEFAULT : newOperation;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MclootPackage.ATTRIBUTE_MODIFIER__OPERATION, oldOperation, operation));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public DoubleRange getAmount()
  {
    return amount;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetAmount(DoubleRange newAmount, NotificationChain msgs)
  {
    DoubleRange oldAmount = amount;
    amount = newAmount;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MclootPackage.ATTRIBUTE_MODIFIER__AMOUNT, oldAmount, newAmount);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setAmount(DoubleRange newAmount)
  {
    if (newAmount != amount)
    {
      NotificationChain msgs = null;
      if (amount != null)
        msgs = ((InternalEObject)amount).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MclootPackage.ATTRIBUTE_MODIFIER__AMOUNT, null, msgs);
      if (newAmount != null)
        msgs = ((InternalEObject)newAmount).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MclootPackage.ATTRIBUTE_MODIFIER__AMOUNT, null, msgs);
      msgs = basicSetAmount(newAmount, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MclootPackage.ATTRIBUTE_MODIFIER__AMOUNT, newAmount, newAmount));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getAttributeName()
  {
    return attributeName;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setAttributeName(String newAttributeName)
  {
    String oldAttributeName = attributeName;
    attributeName = newAttributeName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MclootPackage.ATTRIBUTE_MODIFIER__ATTRIBUTE_NAME, oldAttributeName, attributeName));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getUuid()
  {
    return uuid;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setUuid(String newUuid)
  {
    String oldUuid = uuid;
    uuid = newUuid;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MclootPackage.ATTRIBUTE_MODIFIER__UUID, oldUuid, uuid));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean isSlotDefined()
  {
    return slotDefined;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setSlotDefined(boolean newSlotDefined)
  {
    boolean oldSlotDefined = slotDefined;
    slotDefined = newSlotDefined;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MclootPackage.ATTRIBUTE_MODIFIER__SLOT_DEFINED, oldSlotDefined, slotDefined));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean isSingleSlot()
  {
    return singleSlot;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setSingleSlot(boolean newSingleSlot)
  {
    boolean oldSingleSlot = singleSlot;
    singleSlot = newSingleSlot;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MclootPackage.ATTRIBUTE_MODIFIER__SINGLE_SLOT, oldSingleSlot, singleSlot));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<EnumEquipmentSlot> getSlots()
  {
    if (slots == null)
    {
      slots = new EDataTypeEList<EnumEquipmentSlot>(EnumEquipmentSlot.class, this, MclootPackage.ATTRIBUTE_MODIFIER__SLOTS);
    }
    return slots;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case MclootPackage.ATTRIBUTE_MODIFIER__AMOUNT:
        return basicSetAmount(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case MclootPackage.ATTRIBUTE_MODIFIER__ID:
        return getId();
      case MclootPackage.ATTRIBUTE_MODIFIER__OPERATION:
        return getOperation();
      case MclootPackage.ATTRIBUTE_MODIFIER__AMOUNT:
        return getAmount();
      case MclootPackage.ATTRIBUTE_MODIFIER__ATTRIBUTE_NAME:
        return getAttributeName();
      case MclootPackage.ATTRIBUTE_MODIFIER__UUID:
        return getUuid();
      case MclootPackage.ATTRIBUTE_MODIFIER__SLOT_DEFINED:
        return isSlotDefined();
      case MclootPackage.ATTRIBUTE_MODIFIER__SINGLE_SLOT:
        return isSingleSlot();
      case MclootPackage.ATTRIBUTE_MODIFIER__SLOTS:
        return getSlots();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case MclootPackage.ATTRIBUTE_MODIFIER__ID:
        setId((String)newValue);
        return;
      case MclootPackage.ATTRIBUTE_MODIFIER__OPERATION:
        setOperation((EnumAttributeModifierOperation)newValue);
        return;
      case MclootPackage.ATTRIBUTE_MODIFIER__AMOUNT:
        setAmount((DoubleRange)newValue);
        return;
      case MclootPackage.ATTRIBUTE_MODIFIER__ATTRIBUTE_NAME:
        setAttributeName((String)newValue);
        return;
      case MclootPackage.ATTRIBUTE_MODIFIER__UUID:
        setUuid((String)newValue);
        return;
      case MclootPackage.ATTRIBUTE_MODIFIER__SLOT_DEFINED:
        setSlotDefined((Boolean)newValue);
        return;
      case MclootPackage.ATTRIBUTE_MODIFIER__SINGLE_SLOT:
        setSingleSlot((Boolean)newValue);
        return;
      case MclootPackage.ATTRIBUTE_MODIFIER__SLOTS:
        getSlots().clear();
        getSlots().addAll((Collection<? extends EnumEquipmentSlot>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case MclootPackage.ATTRIBUTE_MODIFIER__ID:
        setId(ID_EDEFAULT);
        return;
      case MclootPackage.ATTRIBUTE_MODIFIER__OPERATION:
        setOperation(OPERATION_EDEFAULT);
        return;
      case MclootPackage.ATTRIBUTE_MODIFIER__AMOUNT:
        setAmount((DoubleRange)null);
        return;
      case MclootPackage.ATTRIBUTE_MODIFIER__ATTRIBUTE_NAME:
        setAttributeName(ATTRIBUTE_NAME_EDEFAULT);
        return;
      case MclootPackage.ATTRIBUTE_MODIFIER__UUID:
        setUuid(UUID_EDEFAULT);
        return;
      case MclootPackage.ATTRIBUTE_MODIFIER__SLOT_DEFINED:
        setSlotDefined(SLOT_DEFINED_EDEFAULT);
        return;
      case MclootPackage.ATTRIBUTE_MODIFIER__SINGLE_SLOT:
        setSingleSlot(SINGLE_SLOT_EDEFAULT);
        return;
      case MclootPackage.ATTRIBUTE_MODIFIER__SLOTS:
        getSlots().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case MclootPackage.ATTRIBUTE_MODIFIER__ID:
        return ID_EDEFAULT == null ? id != null : !ID_EDEFAULT.equals(id);
      case MclootPackage.ATTRIBUTE_MODIFIER__OPERATION:
        return operation != OPERATION_EDEFAULT;
      case MclootPackage.ATTRIBUTE_MODIFIER__AMOUNT:
        return amount != null;
      case MclootPackage.ATTRIBUTE_MODIFIER__ATTRIBUTE_NAME:
        return ATTRIBUTE_NAME_EDEFAULT == null ? attributeName != null : !ATTRIBUTE_NAME_EDEFAULT.equals(attributeName);
      case MclootPackage.ATTRIBUTE_MODIFIER__UUID:
        return UUID_EDEFAULT == null ? uuid != null : !UUID_EDEFAULT.equals(uuid);
      case MclootPackage.ATTRIBUTE_MODIFIER__SLOT_DEFINED:
        return slotDefined != SLOT_DEFINED_EDEFAULT;
      case MclootPackage.ATTRIBUTE_MODIFIER__SINGLE_SLOT:
        return singleSlot != SINGLE_SLOT_EDEFAULT;
      case MclootPackage.ATTRIBUTE_MODIFIER__SLOTS:
        return slots != null && !slots.isEmpty();
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (id: ");
    result.append(id);
    result.append(", operation: ");
    result.append(operation);
    result.append(", attributeName: ");
    result.append(attributeName);
    result.append(", uuid: ");
    result.append(uuid);
    result.append(", slotDefined: ");
    result.append(slotDefined);
    result.append(", singleSlot: ");
    result.append(singleSlot);
    result.append(", slots: ");
    result.append(slots);
    result.append(')');
    return result.toString();
  }

} //AttributeModifierImpl
