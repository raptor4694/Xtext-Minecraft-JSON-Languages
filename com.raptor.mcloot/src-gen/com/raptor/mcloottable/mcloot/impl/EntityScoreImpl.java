/**
 * generated by Xtext 2.21.0
 */
package com.raptor.mcloottable.mcloot.impl;

import com.raptor.mcloottable.mcloot.EntityScore;
import com.raptor.mcloottable.mcloot.LongRange;
import com.raptor.mcloottable.mcloot.MclootPackage;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Entity Score</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link com.raptor.mcloottable.mcloot.impl.EntityScoreImpl#getObjective <em>Objective</em>}</li>
 *   <li>{@link com.raptor.mcloottable.mcloot.impl.EntityScoreImpl#getScore <em>Score</em>}</li>
 * </ul>
 *
 * @generated
 */
public class EntityScoreImpl extends MinimalEObjectImpl.Container implements EntityScore
{
  /**
   * The default value of the '{@link #getObjective() <em>Objective</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getObjective()
   * @generated
   * @ordered
   */
  protected static final String OBJECTIVE_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getObjective() <em>Objective</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getObjective()
   * @generated
   * @ordered
   */
  protected String objective = OBJECTIVE_EDEFAULT;

  /**
   * The cached value of the '{@link #getScore() <em>Score</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getScore()
   * @generated
   * @ordered
   */
  protected LongRange score;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected EntityScoreImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return MclootPackage.Literals.ENTITY_SCORE;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getObjective()
  {
    return objective;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setObjective(String newObjective)
  {
    String oldObjective = objective;
    objective = newObjective;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MclootPackage.ENTITY_SCORE__OBJECTIVE, oldObjective, objective));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public LongRange getScore()
  {
    return score;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetScore(LongRange newScore, NotificationChain msgs)
  {
    LongRange oldScore = score;
    score = newScore;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MclootPackage.ENTITY_SCORE__SCORE, oldScore, newScore);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setScore(LongRange newScore)
  {
    if (newScore != score)
    {
      NotificationChain msgs = null;
      if (score != null)
        msgs = ((InternalEObject)score).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MclootPackage.ENTITY_SCORE__SCORE, null, msgs);
      if (newScore != null)
        msgs = ((InternalEObject)newScore).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MclootPackage.ENTITY_SCORE__SCORE, null, msgs);
      msgs = basicSetScore(newScore, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MclootPackage.ENTITY_SCORE__SCORE, newScore, newScore));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case MclootPackage.ENTITY_SCORE__SCORE:
        return basicSetScore(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case MclootPackage.ENTITY_SCORE__OBJECTIVE:
        return getObjective();
      case MclootPackage.ENTITY_SCORE__SCORE:
        return getScore();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case MclootPackage.ENTITY_SCORE__OBJECTIVE:
        setObjective((String)newValue);
        return;
      case MclootPackage.ENTITY_SCORE__SCORE:
        setScore((LongRange)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case MclootPackage.ENTITY_SCORE__OBJECTIVE:
        setObjective(OBJECTIVE_EDEFAULT);
        return;
      case MclootPackage.ENTITY_SCORE__SCORE:
        setScore((LongRange)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case MclootPackage.ENTITY_SCORE__OBJECTIVE:
        return OBJECTIVE_EDEFAULT == null ? objective != null : !OBJECTIVE_EDEFAULT.equals(objective);
      case MclootPackage.ENTITY_SCORE__SCORE:
        return score != null;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (objective: ");
    result.append(objective);
    result.append(')');
    return result.toString();
  }

} //EntityScoreImpl
