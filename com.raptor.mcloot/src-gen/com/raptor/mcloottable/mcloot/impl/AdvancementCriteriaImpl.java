/**
 * generated by Xtext 2.21.0
 */
package com.raptor.mcloottable.mcloot.impl;

import com.raptor.mcloottable.mcloot.AdvancementCriteria;
import com.raptor.mcloottable.mcloot.MclootPackage;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EDataTypeEList;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Advancement Criteria</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link com.raptor.mcloottable.mcloot.impl.AdvancementCriteriaImpl#getCriteriaNames <em>Criteria Names</em>}</li>
 *   <li>{@link com.raptor.mcloottable.mcloot.impl.AdvancementCriteriaImpl#isDidNotGet <em>Did Not Get</em>}</li>
 * </ul>
 *
 * @generated
 */
public class AdvancementCriteriaImpl extends MinimalEObjectImpl.Container implements AdvancementCriteria
{
  /**
   * The cached value of the '{@link #getCriteriaNames() <em>Criteria Names</em>}' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCriteriaNames()
   * @generated
   * @ordered
   */
  protected EList<String> criteriaNames;

  /**
   * The default value of the '{@link #isDidNotGet() <em>Did Not Get</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isDidNotGet()
   * @generated
   * @ordered
   */
  protected static final boolean DID_NOT_GET_EDEFAULT = false;

  /**
   * The cached value of the '{@link #isDidNotGet() <em>Did Not Get</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isDidNotGet()
   * @generated
   * @ordered
   */
  protected boolean didNotGet = DID_NOT_GET_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected AdvancementCriteriaImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return MclootPackage.Literals.ADVANCEMENT_CRITERIA;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<String> getCriteriaNames()
  {
    if (criteriaNames == null)
    {
      criteriaNames = new EDataTypeEList<String>(String.class, this, MclootPackage.ADVANCEMENT_CRITERIA__CRITERIA_NAMES);
    }
    return criteriaNames;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean isDidNotGet()
  {
    return didNotGet;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setDidNotGet(boolean newDidNotGet)
  {
    boolean oldDidNotGet = didNotGet;
    didNotGet = newDidNotGet;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MclootPackage.ADVANCEMENT_CRITERIA__DID_NOT_GET, oldDidNotGet, didNotGet));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case MclootPackage.ADVANCEMENT_CRITERIA__CRITERIA_NAMES:
        return getCriteriaNames();
      case MclootPackage.ADVANCEMENT_CRITERIA__DID_NOT_GET:
        return isDidNotGet();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case MclootPackage.ADVANCEMENT_CRITERIA__CRITERIA_NAMES:
        getCriteriaNames().clear();
        getCriteriaNames().addAll((Collection<? extends String>)newValue);
        return;
      case MclootPackage.ADVANCEMENT_CRITERIA__DID_NOT_GET:
        setDidNotGet((Boolean)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case MclootPackage.ADVANCEMENT_CRITERIA__CRITERIA_NAMES:
        getCriteriaNames().clear();
        return;
      case MclootPackage.ADVANCEMENT_CRITERIA__DID_NOT_GET:
        setDidNotGet(DID_NOT_GET_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case MclootPackage.ADVANCEMENT_CRITERIA__CRITERIA_NAMES:
        return criteriaNames != null && !criteriaNames.isEmpty();
      case MclootPackage.ADVANCEMENT_CRITERIA__DID_NOT_GET:
        return didNotGet != DID_NOT_GET_EDEFAULT;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (criteriaNames: ");
    result.append(criteriaNames);
    result.append(", didNotGet: ");
    result.append(didNotGet);
    result.append(')');
    return result.toString();
  }

} //AdvancementCriteriaImpl
