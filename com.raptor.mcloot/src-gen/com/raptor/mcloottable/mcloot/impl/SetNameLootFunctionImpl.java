/**
 * generated by Xtext 2.21.0
 */
package com.raptor.mcloottable.mcloot.impl;

import com.raptor.mcloottable.mcloot.EnumEntitySource;
import com.raptor.mcloottable.mcloot.MCJsonValue;
import com.raptor.mcloottable.mcloot.MclootPackage;
import com.raptor.mcloottable.mcloot.SetNameLootFunction;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Set Name Loot Function</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link com.raptor.mcloottable.mcloot.impl.SetNameLootFunctionImpl#getEntity <em>Entity</em>}</li>
 *   <li>{@link com.raptor.mcloottable.mcloot.impl.SetNameLootFunctionImpl#getItemName <em>Item Name</em>}</li>
 * </ul>
 *
 * @generated
 */
public class SetNameLootFunctionImpl extends LootFunctionImpl implements SetNameLootFunction
{
  /**
   * The default value of the '{@link #getEntity() <em>Entity</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getEntity()
   * @generated
   * @ordered
   */
  protected static final EnumEntitySource ENTITY_EDEFAULT = EnumEntitySource.THIS;

  /**
   * The cached value of the '{@link #getEntity() <em>Entity</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getEntity()
   * @generated
   * @ordered
   */
  protected EnumEntitySource entity = ENTITY_EDEFAULT;

  /**
   * The cached value of the '{@link #getItemName() <em>Item Name</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getItemName()
   * @generated
   * @ordered
   */
  protected MCJsonValue itemName;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected SetNameLootFunctionImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return MclootPackage.Literals.SET_NAME_LOOT_FUNCTION;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EnumEntitySource getEntity()
  {
    return entity;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setEntity(EnumEntitySource newEntity)
  {
    EnumEntitySource oldEntity = entity;
    entity = newEntity == null ? ENTITY_EDEFAULT : newEntity;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MclootPackage.SET_NAME_LOOT_FUNCTION__ENTITY, oldEntity, entity));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public MCJsonValue getItemName()
  {
    return itemName;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetItemName(MCJsonValue newItemName, NotificationChain msgs)
  {
    MCJsonValue oldItemName = itemName;
    itemName = newItemName;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MclootPackage.SET_NAME_LOOT_FUNCTION__ITEM_NAME, oldItemName, newItemName);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setItemName(MCJsonValue newItemName)
  {
    if (newItemName != itemName)
    {
      NotificationChain msgs = null;
      if (itemName != null)
        msgs = ((InternalEObject)itemName).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MclootPackage.SET_NAME_LOOT_FUNCTION__ITEM_NAME, null, msgs);
      if (newItemName != null)
        msgs = ((InternalEObject)newItemName).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MclootPackage.SET_NAME_LOOT_FUNCTION__ITEM_NAME, null, msgs);
      msgs = basicSetItemName(newItemName, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MclootPackage.SET_NAME_LOOT_FUNCTION__ITEM_NAME, newItemName, newItemName));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case MclootPackage.SET_NAME_LOOT_FUNCTION__ITEM_NAME:
        return basicSetItemName(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case MclootPackage.SET_NAME_LOOT_FUNCTION__ENTITY:
        return getEntity();
      case MclootPackage.SET_NAME_LOOT_FUNCTION__ITEM_NAME:
        return getItemName();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case MclootPackage.SET_NAME_LOOT_FUNCTION__ENTITY:
        setEntity((EnumEntitySource)newValue);
        return;
      case MclootPackage.SET_NAME_LOOT_FUNCTION__ITEM_NAME:
        setItemName((MCJsonValue)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case MclootPackage.SET_NAME_LOOT_FUNCTION__ENTITY:
        setEntity(ENTITY_EDEFAULT);
        return;
      case MclootPackage.SET_NAME_LOOT_FUNCTION__ITEM_NAME:
        setItemName((MCJsonValue)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case MclootPackage.SET_NAME_LOOT_FUNCTION__ENTITY:
        return entity != ENTITY_EDEFAULT;
      case MclootPackage.SET_NAME_LOOT_FUNCTION__ITEM_NAME:
        return itemName != null;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (entity: ");
    result.append(entity);
    result.append(')');
    return result.toString();
  }

} //SetNameLootFunctionImpl
