/**
 * generated by Xtext 2.21.0
 */
package com.raptor.mcloottable.mcloot.impl;

import com.raptor.mcloottable.mcloot.EffectPredicate;
import com.raptor.mcloottable.mcloot.LongRange;
import com.raptor.mcloottable.mcloot.MclootPackage;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Effect Predicate</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link com.raptor.mcloottable.mcloot.impl.EffectPredicateImpl#getId <em>Id</em>}</li>
 *   <li>{@link com.raptor.mcloottable.mcloot.impl.EffectPredicateImpl#getAmplifier <em>Amplifier</em>}</li>
 *   <li>{@link com.raptor.mcloottable.mcloot.impl.EffectPredicateImpl#getDuration <em>Duration</em>}</li>
 * </ul>
 *
 * @generated
 */
public class EffectPredicateImpl extends MinimalEObjectImpl.Container implements EffectPredicate
{
  /**
   * The default value of the '{@link #getId() <em>Id</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getId()
   * @generated
   * @ordered
   */
  protected static final String ID_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getId() <em>Id</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getId()
   * @generated
   * @ordered
   */
  protected String id = ID_EDEFAULT;

  /**
   * The cached value of the '{@link #getAmplifier() <em>Amplifier</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAmplifier()
   * @generated
   * @ordered
   */
  protected LongRange amplifier;

  /**
   * The cached value of the '{@link #getDuration() <em>Duration</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDuration()
   * @generated
   * @ordered
   */
  protected LongRange duration;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected EffectPredicateImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return MclootPackage.Literals.EFFECT_PREDICATE;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getId()
  {
    return id;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setId(String newId)
  {
    String oldId = id;
    id = newId;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MclootPackage.EFFECT_PREDICATE__ID, oldId, id));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public LongRange getAmplifier()
  {
    return amplifier;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetAmplifier(LongRange newAmplifier, NotificationChain msgs)
  {
    LongRange oldAmplifier = amplifier;
    amplifier = newAmplifier;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MclootPackage.EFFECT_PREDICATE__AMPLIFIER, oldAmplifier, newAmplifier);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setAmplifier(LongRange newAmplifier)
  {
    if (newAmplifier != amplifier)
    {
      NotificationChain msgs = null;
      if (amplifier != null)
        msgs = ((InternalEObject)amplifier).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MclootPackage.EFFECT_PREDICATE__AMPLIFIER, null, msgs);
      if (newAmplifier != null)
        msgs = ((InternalEObject)newAmplifier).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MclootPackage.EFFECT_PREDICATE__AMPLIFIER, null, msgs);
      msgs = basicSetAmplifier(newAmplifier, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MclootPackage.EFFECT_PREDICATE__AMPLIFIER, newAmplifier, newAmplifier));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public LongRange getDuration()
  {
    return duration;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetDuration(LongRange newDuration, NotificationChain msgs)
  {
    LongRange oldDuration = duration;
    duration = newDuration;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MclootPackage.EFFECT_PREDICATE__DURATION, oldDuration, newDuration);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setDuration(LongRange newDuration)
  {
    if (newDuration != duration)
    {
      NotificationChain msgs = null;
      if (duration != null)
        msgs = ((InternalEObject)duration).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MclootPackage.EFFECT_PREDICATE__DURATION, null, msgs);
      if (newDuration != null)
        msgs = ((InternalEObject)newDuration).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MclootPackage.EFFECT_PREDICATE__DURATION, null, msgs);
      msgs = basicSetDuration(newDuration, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MclootPackage.EFFECT_PREDICATE__DURATION, newDuration, newDuration));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case MclootPackage.EFFECT_PREDICATE__AMPLIFIER:
        return basicSetAmplifier(null, msgs);
      case MclootPackage.EFFECT_PREDICATE__DURATION:
        return basicSetDuration(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case MclootPackage.EFFECT_PREDICATE__ID:
        return getId();
      case MclootPackage.EFFECT_PREDICATE__AMPLIFIER:
        return getAmplifier();
      case MclootPackage.EFFECT_PREDICATE__DURATION:
        return getDuration();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case MclootPackage.EFFECT_PREDICATE__ID:
        setId((String)newValue);
        return;
      case MclootPackage.EFFECT_PREDICATE__AMPLIFIER:
        setAmplifier((LongRange)newValue);
        return;
      case MclootPackage.EFFECT_PREDICATE__DURATION:
        setDuration((LongRange)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case MclootPackage.EFFECT_PREDICATE__ID:
        setId(ID_EDEFAULT);
        return;
      case MclootPackage.EFFECT_PREDICATE__AMPLIFIER:
        setAmplifier((LongRange)null);
        return;
      case MclootPackage.EFFECT_PREDICATE__DURATION:
        setDuration((LongRange)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case MclootPackage.EFFECT_PREDICATE__ID:
        return ID_EDEFAULT == null ? id != null : !ID_EDEFAULT.equals(id);
      case MclootPackage.EFFECT_PREDICATE__AMPLIFIER:
        return amplifier != null;
      case MclootPackage.EFFECT_PREDICATE__DURATION:
        return duration != null;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (id: ");
    result.append(id);
    result.append(')');
    return result.toString();
  }

} //EffectPredicateImpl
