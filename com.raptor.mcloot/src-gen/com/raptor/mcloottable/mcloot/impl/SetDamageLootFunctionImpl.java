/**
 * generated by Xtext 2.21.0
 */
package com.raptor.mcloottable.mcloot.impl;

import com.raptor.mcloottable.mcloot.DoubleRange;
import com.raptor.mcloottable.mcloot.MclootPackage;
import com.raptor.mcloottable.mcloot.SetDamageLootFunction;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Set Damage Loot Function</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link com.raptor.mcloottable.mcloot.impl.SetDamageLootFunctionImpl#getDamage <em>Damage</em>}</li>
 * </ul>
 *
 * @generated
 */
public class SetDamageLootFunctionImpl extends LootFunctionImpl implements SetDamageLootFunction
{
  /**
   * The cached value of the '{@link #getDamage() <em>Damage</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDamage()
   * @generated
   * @ordered
   */
  protected DoubleRange damage;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected SetDamageLootFunctionImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return MclootPackage.Literals.SET_DAMAGE_LOOT_FUNCTION;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public DoubleRange getDamage()
  {
    return damage;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetDamage(DoubleRange newDamage, NotificationChain msgs)
  {
    DoubleRange oldDamage = damage;
    damage = newDamage;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MclootPackage.SET_DAMAGE_LOOT_FUNCTION__DAMAGE, oldDamage, newDamage);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setDamage(DoubleRange newDamage)
  {
    if (newDamage != damage)
    {
      NotificationChain msgs = null;
      if (damage != null)
        msgs = ((InternalEObject)damage).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MclootPackage.SET_DAMAGE_LOOT_FUNCTION__DAMAGE, null, msgs);
      if (newDamage != null)
        msgs = ((InternalEObject)newDamage).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MclootPackage.SET_DAMAGE_LOOT_FUNCTION__DAMAGE, null, msgs);
      msgs = basicSetDamage(newDamage, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MclootPackage.SET_DAMAGE_LOOT_FUNCTION__DAMAGE, newDamage, newDamage));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case MclootPackage.SET_DAMAGE_LOOT_FUNCTION__DAMAGE:
        return basicSetDamage(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case MclootPackage.SET_DAMAGE_LOOT_FUNCTION__DAMAGE:
        return getDamage();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case MclootPackage.SET_DAMAGE_LOOT_FUNCTION__DAMAGE:
        setDamage((DoubleRange)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case MclootPackage.SET_DAMAGE_LOOT_FUNCTION__DAMAGE:
        setDamage((DoubleRange)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case MclootPackage.SET_DAMAGE_LOOT_FUNCTION__DAMAGE:
        return damage != null;
    }
    return super.eIsSet(featureID);
  }

} //SetDamageLootFunctionImpl
