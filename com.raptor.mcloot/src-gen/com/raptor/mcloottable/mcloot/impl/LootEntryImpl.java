/**
 * generated by Xtext 2.21.0
 */
package com.raptor.mcloottable.mcloot.impl;

import com.raptor.mcloottable.mcloot.LootCondition;
import com.raptor.mcloottable.mcloot.LootEntry;
import com.raptor.mcloottable.mcloot.LootFunction;
import com.raptor.mcloottable.mcloot.MclootPackage;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Loot Entry</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link com.raptor.mcloottable.mcloot.impl.LootEntryImpl#isConditionsDefined <em>Conditions Defined</em>}</li>
 *   <li>{@link com.raptor.mcloottable.mcloot.impl.LootEntryImpl#getConditions <em>Conditions</em>}</li>
 *   <li>{@link com.raptor.mcloottable.mcloot.impl.LootEntryImpl#getType <em>Type</em>}</li>
 *   <li>{@link com.raptor.mcloottable.mcloot.impl.LootEntryImpl#getName <em>Name</em>}</li>
 *   <li>{@link com.raptor.mcloottable.mcloot.impl.LootEntryImpl#isQualityDefined <em>Quality Defined</em>}</li>
 *   <li>{@link com.raptor.mcloottable.mcloot.impl.LootEntryImpl#getQuality <em>Quality</em>}</li>
 *   <li>{@link com.raptor.mcloottable.mcloot.impl.LootEntryImpl#isExpandDefined <em>Expand Defined</em>}</li>
 *   <li>{@link com.raptor.mcloottable.mcloot.impl.LootEntryImpl#isExpand <em>Expand</em>}</li>
 *   <li>{@link com.raptor.mcloottable.mcloot.impl.LootEntryImpl#isFunctionsDefined <em>Functions Defined</em>}</li>
 *   <li>{@link com.raptor.mcloottable.mcloot.impl.LootEntryImpl#getFunctions <em>Functions</em>}</li>
 *   <li>{@link com.raptor.mcloottable.mcloot.impl.LootEntryImpl#isChildrenDefined <em>Children Defined</em>}</li>
 *   <li>{@link com.raptor.mcloottable.mcloot.impl.LootEntryImpl#getChildren <em>Children</em>}</li>
 *   <li>{@link com.raptor.mcloottable.mcloot.impl.LootEntryImpl#getEntryName <em>Entry Name</em>}</li>
 *   <li>{@link com.raptor.mcloottable.mcloot.impl.LootEntryImpl#isWeightDefined <em>Weight Defined</em>}</li>
 *   <li>{@link com.raptor.mcloottable.mcloot.impl.LootEntryImpl#getWeight <em>Weight</em>}</li>
 * </ul>
 *
 * @generated
 */
public class LootEntryImpl extends MinimalEObjectImpl.Container implements LootEntry
{
  /**
   * The default value of the '{@link #isConditionsDefined() <em>Conditions Defined</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isConditionsDefined()
   * @generated
   * @ordered
   */
  protected static final boolean CONDITIONS_DEFINED_EDEFAULT = false;

  /**
   * The cached value of the '{@link #isConditionsDefined() <em>Conditions Defined</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isConditionsDefined()
   * @generated
   * @ordered
   */
  protected boolean conditionsDefined = CONDITIONS_DEFINED_EDEFAULT;

  /**
   * The cached value of the '{@link #getConditions() <em>Conditions</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getConditions()
   * @generated
   * @ordered
   */
  protected EList<LootCondition> conditions;

  /**
   * The default value of the '{@link #getType() <em>Type</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getType()
   * @generated
   * @ordered
   */
  protected static final String TYPE_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getType() <em>Type</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getType()
   * @generated
   * @ordered
   */
  protected String type = TYPE_EDEFAULT;

  /**
   * The default value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected static final String NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected String name = NAME_EDEFAULT;

  /**
   * The default value of the '{@link #isQualityDefined() <em>Quality Defined</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isQualityDefined()
   * @generated
   * @ordered
   */
  protected static final boolean QUALITY_DEFINED_EDEFAULT = false;

  /**
   * The cached value of the '{@link #isQualityDefined() <em>Quality Defined</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isQualityDefined()
   * @generated
   * @ordered
   */
  protected boolean qualityDefined = QUALITY_DEFINED_EDEFAULT;

  /**
   * The default value of the '{@link #getQuality() <em>Quality</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getQuality()
   * @generated
   * @ordered
   */
  protected static final long QUALITY_EDEFAULT = 0L;

  /**
   * The cached value of the '{@link #getQuality() <em>Quality</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getQuality()
   * @generated
   * @ordered
   */
  protected long quality = QUALITY_EDEFAULT;

  /**
   * The default value of the '{@link #isExpandDefined() <em>Expand Defined</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isExpandDefined()
   * @generated
   * @ordered
   */
  protected static final boolean EXPAND_DEFINED_EDEFAULT = false;

  /**
   * The cached value of the '{@link #isExpandDefined() <em>Expand Defined</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isExpandDefined()
   * @generated
   * @ordered
   */
  protected boolean expandDefined = EXPAND_DEFINED_EDEFAULT;

  /**
   * The default value of the '{@link #isExpand() <em>Expand</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isExpand()
   * @generated
   * @ordered
   */
  protected static final boolean EXPAND_EDEFAULT = false;

  /**
   * The cached value of the '{@link #isExpand() <em>Expand</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isExpand()
   * @generated
   * @ordered
   */
  protected boolean expand = EXPAND_EDEFAULT;

  /**
   * The default value of the '{@link #isFunctionsDefined() <em>Functions Defined</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isFunctionsDefined()
   * @generated
   * @ordered
   */
  protected static final boolean FUNCTIONS_DEFINED_EDEFAULT = false;

  /**
   * The cached value of the '{@link #isFunctionsDefined() <em>Functions Defined</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isFunctionsDefined()
   * @generated
   * @ordered
   */
  protected boolean functionsDefined = FUNCTIONS_DEFINED_EDEFAULT;

  /**
   * The cached value of the '{@link #getFunctions() <em>Functions</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFunctions()
   * @generated
   * @ordered
   */
  protected EList<LootFunction> functions;

  /**
   * The default value of the '{@link #isChildrenDefined() <em>Children Defined</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isChildrenDefined()
   * @generated
   * @ordered
   */
  protected static final boolean CHILDREN_DEFINED_EDEFAULT = false;

  /**
   * The cached value of the '{@link #isChildrenDefined() <em>Children Defined</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isChildrenDefined()
   * @generated
   * @ordered
   */
  protected boolean childrenDefined = CHILDREN_DEFINED_EDEFAULT;

  /**
   * The cached value of the '{@link #getChildren() <em>Children</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getChildren()
   * @generated
   * @ordered
   */
  protected EList<LootEntry> children;

  /**
   * The default value of the '{@link #getEntryName() <em>Entry Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getEntryName()
   * @generated
   * @ordered
   */
  protected static final String ENTRY_NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getEntryName() <em>Entry Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getEntryName()
   * @generated
   * @ordered
   */
  protected String entryName = ENTRY_NAME_EDEFAULT;

  /**
   * The default value of the '{@link #isWeightDefined() <em>Weight Defined</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isWeightDefined()
   * @generated
   * @ordered
   */
  protected static final boolean WEIGHT_DEFINED_EDEFAULT = false;

  /**
   * The cached value of the '{@link #isWeightDefined() <em>Weight Defined</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isWeightDefined()
   * @generated
   * @ordered
   */
  protected boolean weightDefined = WEIGHT_DEFINED_EDEFAULT;

  /**
   * The default value of the '{@link #getWeight() <em>Weight</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getWeight()
   * @generated
   * @ordered
   */
  protected static final long WEIGHT_EDEFAULT = 0L;

  /**
   * The cached value of the '{@link #getWeight() <em>Weight</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getWeight()
   * @generated
   * @ordered
   */
  protected long weight = WEIGHT_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected LootEntryImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return MclootPackage.Literals.LOOT_ENTRY;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean isConditionsDefined()
  {
    return conditionsDefined;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setConditionsDefined(boolean newConditionsDefined)
  {
    boolean oldConditionsDefined = conditionsDefined;
    conditionsDefined = newConditionsDefined;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MclootPackage.LOOT_ENTRY__CONDITIONS_DEFINED, oldConditionsDefined, conditionsDefined));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<LootCondition> getConditions()
  {
    if (conditions == null)
    {
      conditions = new EObjectContainmentEList<LootCondition>(LootCondition.class, this, MclootPackage.LOOT_ENTRY__CONDITIONS);
    }
    return conditions;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getType()
  {
    return type;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setType(String newType)
  {
    String oldType = type;
    type = newType;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MclootPackage.LOOT_ENTRY__TYPE, oldType, type));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getName()
  {
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setName(String newName)
  {
    String oldName = name;
    name = newName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MclootPackage.LOOT_ENTRY__NAME, oldName, name));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean isQualityDefined()
  {
    return qualityDefined;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setQualityDefined(boolean newQualityDefined)
  {
    boolean oldQualityDefined = qualityDefined;
    qualityDefined = newQualityDefined;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MclootPackage.LOOT_ENTRY__QUALITY_DEFINED, oldQualityDefined, qualityDefined));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public long getQuality()
  {
    return quality;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setQuality(long newQuality)
  {
    long oldQuality = quality;
    quality = newQuality;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MclootPackage.LOOT_ENTRY__QUALITY, oldQuality, quality));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean isExpandDefined()
  {
    return expandDefined;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setExpandDefined(boolean newExpandDefined)
  {
    boolean oldExpandDefined = expandDefined;
    expandDefined = newExpandDefined;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MclootPackage.LOOT_ENTRY__EXPAND_DEFINED, oldExpandDefined, expandDefined));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean isExpand()
  {
    return expand;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setExpand(boolean newExpand)
  {
    boolean oldExpand = expand;
    expand = newExpand;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MclootPackage.LOOT_ENTRY__EXPAND, oldExpand, expand));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean isFunctionsDefined()
  {
    return functionsDefined;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setFunctionsDefined(boolean newFunctionsDefined)
  {
    boolean oldFunctionsDefined = functionsDefined;
    functionsDefined = newFunctionsDefined;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MclootPackage.LOOT_ENTRY__FUNCTIONS_DEFINED, oldFunctionsDefined, functionsDefined));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<LootFunction> getFunctions()
  {
    if (functions == null)
    {
      functions = new EObjectContainmentEList<LootFunction>(LootFunction.class, this, MclootPackage.LOOT_ENTRY__FUNCTIONS);
    }
    return functions;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean isChildrenDefined()
  {
    return childrenDefined;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setChildrenDefined(boolean newChildrenDefined)
  {
    boolean oldChildrenDefined = childrenDefined;
    childrenDefined = newChildrenDefined;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MclootPackage.LOOT_ENTRY__CHILDREN_DEFINED, oldChildrenDefined, childrenDefined));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<LootEntry> getChildren()
  {
    if (children == null)
    {
      children = new EObjectContainmentEList<LootEntry>(LootEntry.class, this, MclootPackage.LOOT_ENTRY__CHILDREN);
    }
    return children;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getEntryName()
  {
    return entryName;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setEntryName(String newEntryName)
  {
    String oldEntryName = entryName;
    entryName = newEntryName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MclootPackage.LOOT_ENTRY__ENTRY_NAME, oldEntryName, entryName));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean isWeightDefined()
  {
    return weightDefined;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setWeightDefined(boolean newWeightDefined)
  {
    boolean oldWeightDefined = weightDefined;
    weightDefined = newWeightDefined;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MclootPackage.LOOT_ENTRY__WEIGHT_DEFINED, oldWeightDefined, weightDefined));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public long getWeight()
  {
    return weight;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setWeight(long newWeight)
  {
    long oldWeight = weight;
    weight = newWeight;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MclootPackage.LOOT_ENTRY__WEIGHT, oldWeight, weight));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case MclootPackage.LOOT_ENTRY__CONDITIONS:
        return ((InternalEList<?>)getConditions()).basicRemove(otherEnd, msgs);
      case MclootPackage.LOOT_ENTRY__FUNCTIONS:
        return ((InternalEList<?>)getFunctions()).basicRemove(otherEnd, msgs);
      case MclootPackage.LOOT_ENTRY__CHILDREN:
        return ((InternalEList<?>)getChildren()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case MclootPackage.LOOT_ENTRY__CONDITIONS_DEFINED:
        return isConditionsDefined();
      case MclootPackage.LOOT_ENTRY__CONDITIONS:
        return getConditions();
      case MclootPackage.LOOT_ENTRY__TYPE:
        return getType();
      case MclootPackage.LOOT_ENTRY__NAME:
        return getName();
      case MclootPackage.LOOT_ENTRY__QUALITY_DEFINED:
        return isQualityDefined();
      case MclootPackage.LOOT_ENTRY__QUALITY:
        return getQuality();
      case MclootPackage.LOOT_ENTRY__EXPAND_DEFINED:
        return isExpandDefined();
      case MclootPackage.LOOT_ENTRY__EXPAND:
        return isExpand();
      case MclootPackage.LOOT_ENTRY__FUNCTIONS_DEFINED:
        return isFunctionsDefined();
      case MclootPackage.LOOT_ENTRY__FUNCTIONS:
        return getFunctions();
      case MclootPackage.LOOT_ENTRY__CHILDREN_DEFINED:
        return isChildrenDefined();
      case MclootPackage.LOOT_ENTRY__CHILDREN:
        return getChildren();
      case MclootPackage.LOOT_ENTRY__ENTRY_NAME:
        return getEntryName();
      case MclootPackage.LOOT_ENTRY__WEIGHT_DEFINED:
        return isWeightDefined();
      case MclootPackage.LOOT_ENTRY__WEIGHT:
        return getWeight();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case MclootPackage.LOOT_ENTRY__CONDITIONS_DEFINED:
        setConditionsDefined((Boolean)newValue);
        return;
      case MclootPackage.LOOT_ENTRY__CONDITIONS:
        getConditions().clear();
        getConditions().addAll((Collection<? extends LootCondition>)newValue);
        return;
      case MclootPackage.LOOT_ENTRY__TYPE:
        setType((String)newValue);
        return;
      case MclootPackage.LOOT_ENTRY__NAME:
        setName((String)newValue);
        return;
      case MclootPackage.LOOT_ENTRY__QUALITY_DEFINED:
        setQualityDefined((Boolean)newValue);
        return;
      case MclootPackage.LOOT_ENTRY__QUALITY:
        setQuality((Long)newValue);
        return;
      case MclootPackage.LOOT_ENTRY__EXPAND_DEFINED:
        setExpandDefined((Boolean)newValue);
        return;
      case MclootPackage.LOOT_ENTRY__EXPAND:
        setExpand((Boolean)newValue);
        return;
      case MclootPackage.LOOT_ENTRY__FUNCTIONS_DEFINED:
        setFunctionsDefined((Boolean)newValue);
        return;
      case MclootPackage.LOOT_ENTRY__FUNCTIONS:
        getFunctions().clear();
        getFunctions().addAll((Collection<? extends LootFunction>)newValue);
        return;
      case MclootPackage.LOOT_ENTRY__CHILDREN_DEFINED:
        setChildrenDefined((Boolean)newValue);
        return;
      case MclootPackage.LOOT_ENTRY__CHILDREN:
        getChildren().clear();
        getChildren().addAll((Collection<? extends LootEntry>)newValue);
        return;
      case MclootPackage.LOOT_ENTRY__ENTRY_NAME:
        setEntryName((String)newValue);
        return;
      case MclootPackage.LOOT_ENTRY__WEIGHT_DEFINED:
        setWeightDefined((Boolean)newValue);
        return;
      case MclootPackage.LOOT_ENTRY__WEIGHT:
        setWeight((Long)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case MclootPackage.LOOT_ENTRY__CONDITIONS_DEFINED:
        setConditionsDefined(CONDITIONS_DEFINED_EDEFAULT);
        return;
      case MclootPackage.LOOT_ENTRY__CONDITIONS:
        getConditions().clear();
        return;
      case MclootPackage.LOOT_ENTRY__TYPE:
        setType(TYPE_EDEFAULT);
        return;
      case MclootPackage.LOOT_ENTRY__NAME:
        setName(NAME_EDEFAULT);
        return;
      case MclootPackage.LOOT_ENTRY__QUALITY_DEFINED:
        setQualityDefined(QUALITY_DEFINED_EDEFAULT);
        return;
      case MclootPackage.LOOT_ENTRY__QUALITY:
        setQuality(QUALITY_EDEFAULT);
        return;
      case MclootPackage.LOOT_ENTRY__EXPAND_DEFINED:
        setExpandDefined(EXPAND_DEFINED_EDEFAULT);
        return;
      case MclootPackage.LOOT_ENTRY__EXPAND:
        setExpand(EXPAND_EDEFAULT);
        return;
      case MclootPackage.LOOT_ENTRY__FUNCTIONS_DEFINED:
        setFunctionsDefined(FUNCTIONS_DEFINED_EDEFAULT);
        return;
      case MclootPackage.LOOT_ENTRY__FUNCTIONS:
        getFunctions().clear();
        return;
      case MclootPackage.LOOT_ENTRY__CHILDREN_DEFINED:
        setChildrenDefined(CHILDREN_DEFINED_EDEFAULT);
        return;
      case MclootPackage.LOOT_ENTRY__CHILDREN:
        getChildren().clear();
        return;
      case MclootPackage.LOOT_ENTRY__ENTRY_NAME:
        setEntryName(ENTRY_NAME_EDEFAULT);
        return;
      case MclootPackage.LOOT_ENTRY__WEIGHT_DEFINED:
        setWeightDefined(WEIGHT_DEFINED_EDEFAULT);
        return;
      case MclootPackage.LOOT_ENTRY__WEIGHT:
        setWeight(WEIGHT_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case MclootPackage.LOOT_ENTRY__CONDITIONS_DEFINED:
        return conditionsDefined != CONDITIONS_DEFINED_EDEFAULT;
      case MclootPackage.LOOT_ENTRY__CONDITIONS:
        return conditions != null && !conditions.isEmpty();
      case MclootPackage.LOOT_ENTRY__TYPE:
        return TYPE_EDEFAULT == null ? type != null : !TYPE_EDEFAULT.equals(type);
      case MclootPackage.LOOT_ENTRY__NAME:
        return NAME_EDEFAULT == null ? name != null : !NAME_EDEFAULT.equals(name);
      case MclootPackage.LOOT_ENTRY__QUALITY_DEFINED:
        return qualityDefined != QUALITY_DEFINED_EDEFAULT;
      case MclootPackage.LOOT_ENTRY__QUALITY:
        return quality != QUALITY_EDEFAULT;
      case MclootPackage.LOOT_ENTRY__EXPAND_DEFINED:
        return expandDefined != EXPAND_DEFINED_EDEFAULT;
      case MclootPackage.LOOT_ENTRY__EXPAND:
        return expand != EXPAND_EDEFAULT;
      case MclootPackage.LOOT_ENTRY__FUNCTIONS_DEFINED:
        return functionsDefined != FUNCTIONS_DEFINED_EDEFAULT;
      case MclootPackage.LOOT_ENTRY__FUNCTIONS:
        return functions != null && !functions.isEmpty();
      case MclootPackage.LOOT_ENTRY__CHILDREN_DEFINED:
        return childrenDefined != CHILDREN_DEFINED_EDEFAULT;
      case MclootPackage.LOOT_ENTRY__CHILDREN:
        return children != null && !children.isEmpty();
      case MclootPackage.LOOT_ENTRY__ENTRY_NAME:
        return ENTRY_NAME_EDEFAULT == null ? entryName != null : !ENTRY_NAME_EDEFAULT.equals(entryName);
      case MclootPackage.LOOT_ENTRY__WEIGHT_DEFINED:
        return weightDefined != WEIGHT_DEFINED_EDEFAULT;
      case MclootPackage.LOOT_ENTRY__WEIGHT:
        return weight != WEIGHT_EDEFAULT;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (conditionsDefined: ");
    result.append(conditionsDefined);
    result.append(", type: ");
    result.append(type);
    result.append(", name: ");
    result.append(name);
    result.append(", qualityDefined: ");
    result.append(qualityDefined);
    result.append(", quality: ");
    result.append(quality);
    result.append(", expandDefined: ");
    result.append(expandDefined);
    result.append(", expand: ");
    result.append(expand);
    result.append(", functionsDefined: ");
    result.append(functionsDefined);
    result.append(", childrenDefined: ");
    result.append(childrenDefined);
    result.append(", entryName: ");
    result.append(entryName);
    result.append(", weightDefined: ");
    result.append(weightDefined);
    result.append(", weight: ");
    result.append(weight);
    result.append(')');
    return result.toString();
  }

} //LootEntryImpl
