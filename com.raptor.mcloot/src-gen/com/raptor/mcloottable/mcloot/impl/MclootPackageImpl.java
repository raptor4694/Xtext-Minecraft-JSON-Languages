/**
 * generated by Xtext 2.21.0
 */
package com.raptor.mcloottable.mcloot.impl;

import com.raptor.mcloottable.mcloot.AdvancementCriteria;
import com.raptor.mcloottable.mcloot.AdvancementPredicate;
import com.raptor.mcloottable.mcloot.AlternativeLootCondition;
import com.raptor.mcloottable.mcloot.AppendNBTOperation;
import com.raptor.mcloottable.mcloot.ApplyBonusLootFunction;
import com.raptor.mcloottable.mcloot.AttributeModifier;
import com.raptor.mcloottable.mcloot.BinomialCount;
import com.raptor.mcloottable.mcloot.BlockPredicate;
import com.raptor.mcloottable.mcloot.BlockStatePropertiesLootCondition;
import com.raptor.mcloottable.mcloot.BlockStateProperty;
import com.raptor.mcloottable.mcloot.BlockStatePropertyPredicate;
import com.raptor.mcloottable.mcloot.CopyNBTLootFunction;
import com.raptor.mcloottable.mcloot.CopyNameLootFunction;
import com.raptor.mcloottable.mcloot.CopyStateLootFunction;
import com.raptor.mcloottable.mcloot.Count;
import com.raptor.mcloottable.mcloot.DamageSourcePropertiesLootCondition;
import com.raptor.mcloottable.mcloot.DoubleRange;
import com.raptor.mcloottable.mcloot.EffectPredicate;
import com.raptor.mcloottable.mcloot.EnchantRandomlyLootFunction;
import com.raptor.mcloottable.mcloot.EnchantWithLevelsLootFunction;
import com.raptor.mcloottable.mcloot.EnchantmentLevel;
import com.raptor.mcloottable.mcloot.EntityFlags;
import com.raptor.mcloottable.mcloot.EntityPredicate;
import com.raptor.mcloottable.mcloot.EntityPropertiesLootCondition;
import com.raptor.mcloottable.mcloot.EntityScore;
import com.raptor.mcloottable.mcloot.EntityScoresLootCondition;
import com.raptor.mcloottable.mcloot.EnumAttributeModifierOperation;
import com.raptor.mcloottable.mcloot.EnumBonusFormula;
import com.raptor.mcloottable.mcloot.EnumEntitySource;
import com.raptor.mcloottable.mcloot.EnumEquipmentSlot;
import com.raptor.mcloottable.mcloot.EnumGamemode;
import com.raptor.mcloottable.mcloot.EnumLootTableType;
import com.raptor.mcloottable.mcloot.EnumNBTSource;
import com.raptor.mcloottable.mcloot.EquipmentPredicate;
import com.raptor.mcloottable.mcloot.ExactCount;
import com.raptor.mcloottable.mcloot.ExactDoubleRange;
import com.raptor.mcloottable.mcloot.ExactLongRange;
import com.raptor.mcloottable.mcloot.ExplorationMapLootFunction;
import com.raptor.mcloottable.mcloot.ExplosionDecayLootFunction;
import com.raptor.mcloottable.mcloot.FillPlayerHeadLootFunction;
import com.raptor.mcloottable.mcloot.FishingHookPredicate;
import com.raptor.mcloottable.mcloot.FluidPredicate;
import com.raptor.mcloottable.mcloot.FurnaceSmeltLootFunction;
import com.raptor.mcloottable.mcloot.InvertedLootCondition;
import com.raptor.mcloottable.mcloot.ItemPredicate;
import com.raptor.mcloottable.mcloot.KilledByPlayerLootCondition;
import com.raptor.mcloottable.mcloot.LimitCountLootFunction;
import com.raptor.mcloottable.mcloot.LocationCheckLootCondition;
import com.raptor.mcloottable.mcloot.LocationPredicate;
import com.raptor.mcloottable.mcloot.LongRange;
import com.raptor.mcloottable.mcloot.LootCondition;
import com.raptor.mcloottable.mcloot.LootEntry;
import com.raptor.mcloottable.mcloot.LootFunction;
import com.raptor.mcloottable.mcloot.LootFunctionWithConditions;
import com.raptor.mcloottable.mcloot.LootPool;
import com.raptor.mcloottable.mcloot.LootTable;
import com.raptor.mcloottable.mcloot.LootingEnchantLootFunction;
import com.raptor.mcloottable.mcloot.MCJsonArray;
import com.raptor.mcloottable.mcloot.MCJsonBoolean;
import com.raptor.mcloottable.mcloot.MCJsonEntry;
import com.raptor.mcloottable.mcloot.MCJsonFloatingPoint;
import com.raptor.mcloottable.mcloot.MCJsonIntegral;
import com.raptor.mcloottable.mcloot.MCJsonNull;
import com.raptor.mcloottable.mcloot.MCJsonNumber;
import com.raptor.mcloottable.mcloot.MCJsonObject;
import com.raptor.mcloottable.mcloot.MCJsonString;
import com.raptor.mcloottable.mcloot.MCJsonValue;
import com.raptor.mcloottable.mcloot.MatchToolLootCondition;
import com.raptor.mcloottable.mcloot.MclootFactory;
import com.raptor.mcloottable.mcloot.MclootPackage;
import com.raptor.mcloottable.mcloot.MergeNBTOperation;
import com.raptor.mcloottable.mcloot.NBTOperation;
import com.raptor.mcloottable.mcloot.NamedLootCondition;
import com.raptor.mcloottable.mcloot.NamespacedStatisticPredicate;
import com.raptor.mcloottable.mcloot.NormalDoubleRange;
import com.raptor.mcloottable.mcloot.NormalLongRange;
import com.raptor.mcloottable.mcloot.PlayerPredicate;
import com.raptor.mcloottable.mcloot.RandomChanceLootCondition;
import com.raptor.mcloottable.mcloot.RecipePredicate;
import com.raptor.mcloottable.mcloot.ReferenceLootCondition;
import com.raptor.mcloottable.mcloot.ReplaceNBTOperation;
import com.raptor.mcloottable.mcloot.SetAttributesLootFunction;
import com.raptor.mcloottable.mcloot.SetContentsLootFunction;
import com.raptor.mcloottable.mcloot.SetCountLootFunction;
import com.raptor.mcloottable.mcloot.SetDamageLootFunction;
import com.raptor.mcloottable.mcloot.SetLoreLootFunction;
import com.raptor.mcloottable.mcloot.SetNBTLootFunction;
import com.raptor.mcloottable.mcloot.SetNameLootFunction;
import com.raptor.mcloottable.mcloot.SetStewEffectLootFunction;
import com.raptor.mcloottable.mcloot.SingleStatisticPredicate;
import com.raptor.mcloottable.mcloot.SpecialCount;
import com.raptor.mcloottable.mcloot.StatisticPredicate;
import com.raptor.mcloottable.mcloot.StewEffect;
import com.raptor.mcloottable.mcloot.SurvivesExplosionLootCondition;
import com.raptor.mcloottable.mcloot.TableBonusLootCondition;
import com.raptor.mcloottable.mcloot.TimeCheckLootCondition;
import com.raptor.mcloottable.mcloot.ToolEnchantmentLootCondition;
import com.raptor.mcloottable.mcloot.UniformCount;
import com.raptor.mcloottable.mcloot.UnnamespacedStatisticPredicate;
import com.raptor.mcloottable.mcloot.WeatherCheckLootCondition;

import org.eclipse.emf.ecore.EAttribute;
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EEnum;
import org.eclipse.emf.ecore.EPackage;
import org.eclipse.emf.ecore.EReference;

import org.eclipse.emf.ecore.impl.EPackageImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model <b>Package</b>.
 * <!-- end-user-doc -->
 * @generated
 */
public class MclootPackageImpl extends EPackageImpl implements MclootPackage
{
  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass lootTableEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass lootPoolEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass lootEntryEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass lootFunctionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass applyBonusLootFunctionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass copyNameLootFunctionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass copyNBTLootFunctionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass nbtOperationEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass appendNBTOperationEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass replaceNBTOperationEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass mergeNBTOperationEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass copyStateLootFunctionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass enchantRandomlyLootFunctionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass enchantWithLevelsLootFunctionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass explorationMapLootFunctionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass explosionDecayLootFunctionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass furnaceSmeltLootFunctionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass fillPlayerHeadLootFunctionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass limitCountLootFunctionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass lootingEnchantLootFunctionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass setAttributesLootFunctionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass attributeModifierEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass setContentsLootFunctionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass setCountLootFunctionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass countEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass exactCountEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass specialCountEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass uniformCountEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass binomialCountEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass setDamageLootFunctionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass setLoreLootFunctionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass setNameLootFunctionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass setNBTLootFunctionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass setStewEffectLootFunctionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass stewEffectEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass lootConditionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass namedLootConditionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass blockStatePropertiesLootConditionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass blockStatePropertyEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass damageSourcePropertiesLootConditionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass entityPropertiesLootConditionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass entityScoresLootConditionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass entityScoreEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass killedByPlayerLootConditionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass locationCheckLootConditionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass matchToolLootConditionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass randomChanceLootConditionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass referenceLootConditionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass survivesExplosionLootConditionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass tableBonusLootConditionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass timeCheckLootConditionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass toolEnchantmentLootConditionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass enchantmentLevelEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass weatherCheckLootConditionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass entityPredicateEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass fishingHookPredicateEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass effectPredicateEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass equipmentPredicateEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass entityFlagsEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass playerPredicateEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass advancementPredicateEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass advancementCriteriaEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass recipePredicateEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass statisticPredicateEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass singleStatisticPredicateEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass namespacedStatisticPredicateEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass unnamespacedStatisticPredicateEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass locationPredicateEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass itemPredicateEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass blockPredicateEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass blockStatePropertyPredicateEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass fluidPredicateEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass mcJsonValueEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass mcJsonObjectEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass mcJsonEntryEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass mcJsonArrayEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass mcJsonStringEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass mcJsonNumberEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass mcJsonIntegralEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass mcJsonFloatingPointEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass mcJsonBooleanEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass mcJsonNullEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass longRangeEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass exactLongRangeEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass normalLongRangeEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass doubleRangeEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass exactDoubleRangeEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass normalDoubleRangeEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass lootFunctionWithConditionsEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass alternativeLootConditionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass invertedLootConditionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EEnum enumEquipmentSlotEEnum = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EEnum enumGamemodeEEnum = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EEnum enumLootTableTypeEEnum = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EEnum enumBonusFormulaEEnum = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EEnum enumNBTSourceEEnum = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EEnum enumAttributeModifierOperationEEnum = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EEnum enumEntitySourceEEnum = null;

  /**
   * Creates an instance of the model <b>Package</b>, registered with
   * {@link org.eclipse.emf.ecore.EPackage.Registry EPackage.Registry} by the package
   * package URI value.
   * <p>Note: the correct way to create the package is via the static
   * factory method {@link #init init()}, which also performs
   * initialization of the package, or returns the registered package,
   * if one already exists.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.eclipse.emf.ecore.EPackage.Registry
   * @see com.raptor.mcloottable.mcloot.MclootPackage#eNS_URI
   * @see #init()
   * @generated
   */
  private MclootPackageImpl()
  {
    super(eNS_URI, MclootFactory.eINSTANCE);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private static boolean isInited = false;

  /**
   * Creates, registers, and initializes the <b>Package</b> for this model, and for any others upon which it depends.
   *
   * <p>This method is used to initialize {@link MclootPackage#eINSTANCE} when that field is accessed.
   * Clients should not invoke it directly. Instead, they should simply access that field to obtain the package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #eNS_URI
   * @see #createPackageContents()
   * @see #initializePackageContents()
   * @generated
   */
  public static MclootPackage init()
  {
    if (isInited) return (MclootPackage)EPackage.Registry.INSTANCE.getEPackage(MclootPackage.eNS_URI);

    // Obtain or create and register package
    Object registeredMclootPackage = EPackage.Registry.INSTANCE.get(eNS_URI);
    MclootPackageImpl theMclootPackage = registeredMclootPackage instanceof MclootPackageImpl ? (MclootPackageImpl)registeredMclootPackage : new MclootPackageImpl();

    isInited = true;

    // Create package meta-data objects
    theMclootPackage.createPackageContents();

    // Initialize created meta-data
    theMclootPackage.initializePackageContents();

    // Mark meta-data to indicate it can't be changed
    theMclootPackage.freeze();

    // Update the registry and return the package
    EPackage.Registry.INSTANCE.put(MclootPackage.eNS_URI, theMclootPackage);
    return theMclootPackage;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getLootTable()
  {
    return lootTableEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getLootTable_TypeDefined()
  {
    return (EAttribute)lootTableEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getLootTable_Type()
  {
    return (EAttribute)lootTableEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getLootTable_PoolsDefined()
  {
    return (EAttribute)lootTableEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getLootTable_Pools()
  {
    return (EReference)lootTableEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getLootPool()
  {
    return lootPoolEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getLootPool_ConditionsDefined()
  {
    return (EAttribute)lootPoolEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getLootPool_Conditions()
  {
    return (EReference)lootPoolEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getLootPool_Name()
  {
    return (EAttribute)lootPoolEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getLootPool_RollsDefined()
  {
    return (EAttribute)lootPoolEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getLootPool_Rolls()
  {
    return (EReference)lootPoolEClass.getEStructuralFeatures().get(4);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getLootPool_EntriesDefined()
  {
    return (EAttribute)lootPoolEClass.getEStructuralFeatures().get(5);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getLootPool_Entries()
  {
    return (EReference)lootPoolEClass.getEStructuralFeatures().get(6);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getLootPool_BonusRollsDefined()
  {
    return (EAttribute)lootPoolEClass.getEStructuralFeatures().get(7);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getLootPool_BonusRolls()
  {
    return (EReference)lootPoolEClass.getEStructuralFeatures().get(8);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getLootPool_FunctionsDefined()
  {
    return (EAttribute)lootPoolEClass.getEStructuralFeatures().get(9);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getLootPool_Functions()
  {
    return (EReference)lootPoolEClass.getEStructuralFeatures().get(10);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getLootEntry()
  {
    return lootEntryEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getLootEntry_ConditionsDefined()
  {
    return (EAttribute)lootEntryEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getLootEntry_Conditions()
  {
    return (EReference)lootEntryEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getLootEntry_Type()
  {
    return (EAttribute)lootEntryEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getLootEntry_Name()
  {
    return (EAttribute)lootEntryEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getLootEntry_QualityDefined()
  {
    return (EAttribute)lootEntryEClass.getEStructuralFeatures().get(4);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getLootEntry_Quality()
  {
    return (EAttribute)lootEntryEClass.getEStructuralFeatures().get(5);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getLootEntry_ExpandDefined()
  {
    return (EAttribute)lootEntryEClass.getEStructuralFeatures().get(6);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getLootEntry_Expand()
  {
    return (EAttribute)lootEntryEClass.getEStructuralFeatures().get(7);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getLootEntry_FunctionsDefined()
  {
    return (EAttribute)lootEntryEClass.getEStructuralFeatures().get(8);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getLootEntry_Functions()
  {
    return (EReference)lootEntryEClass.getEStructuralFeatures().get(9);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getLootEntry_ChildrenDefined()
  {
    return (EAttribute)lootEntryEClass.getEStructuralFeatures().get(10);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getLootEntry_Children()
  {
    return (EReference)lootEntryEClass.getEStructuralFeatures().get(11);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getLootEntry_EntryName()
  {
    return (EAttribute)lootEntryEClass.getEStructuralFeatures().get(12);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getLootEntry_WeightDefined()
  {
    return (EAttribute)lootEntryEClass.getEStructuralFeatures().get(13);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getLootEntry_Weight()
  {
    return (EAttribute)lootEntryEClass.getEStructuralFeatures().get(14);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getLootFunction()
  {
    return lootFunctionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getLootFunction_Id()
  {
    return (EAttribute)lootFunctionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getApplyBonusLootFunction()
  {
    return applyBonusLootFunctionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getApplyBonusLootFunction_Enchantment()
  {
    return (EAttribute)applyBonusLootFunctionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getApplyBonusLootFunction_Formula()
  {
    return (EAttribute)applyBonusLootFunctionEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getApplyBonusLootFunction_ExtraDefined()
  {
    return (EAttribute)applyBonusLootFunctionEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getApplyBonusLootFunction_Extra()
  {
    return (EAttribute)applyBonusLootFunctionEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getApplyBonusLootFunction_ProbabilityDefined()
  {
    return (EAttribute)applyBonusLootFunctionEClass.getEStructuralFeatures().get(4);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getApplyBonusLootFunction_Probability()
  {
    return (EAttribute)applyBonusLootFunctionEClass.getEStructuralFeatures().get(5);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getApplyBonusLootFunction_BonusMultiplierDefined()
  {
    return (EAttribute)applyBonusLootFunctionEClass.getEStructuralFeatures().get(6);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getApplyBonusLootFunction_BonusMultiplier()
  {
    return (EAttribute)applyBonusLootFunctionEClass.getEStructuralFeatures().get(7);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getCopyNameLootFunction()
  {
    return copyNameLootFunctionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getCopyNameLootFunction_Source()
  {
    return (EAttribute)copyNameLootFunctionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getCopyNBTLootFunction()
  {
    return copyNBTLootFunctionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getCopyNBTLootFunction_Source()
  {
    return (EAttribute)copyNBTLootFunctionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getCopyNBTLootFunction_Ops()
  {
    return (EReference)copyNBTLootFunctionEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getNBTOperation()
  {
    return nbtOperationEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getNBTOperation_Id()
  {
    return (EAttribute)nbtOperationEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getNBTOperation_Source()
  {
    return (EAttribute)nbtOperationEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getNBTOperation_Target()
  {
    return (EAttribute)nbtOperationEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getAppendNBTOperation()
  {
    return appendNBTOperationEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getReplaceNBTOperation()
  {
    return replaceNBTOperationEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getMergeNBTOperation()
  {
    return mergeNBTOperationEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getCopyStateLootFunction()
  {
    return copyStateLootFunctionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getCopyStateLootFunction_Block()
  {
    return (EAttribute)copyStateLootFunctionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getCopyStateLootFunction_Properties()
  {
    return (EAttribute)copyStateLootFunctionEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getEnchantRandomlyLootFunction()
  {
    return enchantRandomlyLootFunctionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getEnchantRandomlyLootFunction_Enchantments()
  {
    return (EAttribute)enchantRandomlyLootFunctionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getEnchantWithLevelsLootFunction()
  {
    return enchantWithLevelsLootFunctionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getEnchantWithLevelsLootFunction_TreasureDefined()
  {
    return (EAttribute)enchantWithLevelsLootFunctionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getEnchantWithLevelsLootFunction_Treasure()
  {
    return (EAttribute)enchantWithLevelsLootFunctionEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getEnchantWithLevelsLootFunction_Levels()
  {
    return (EReference)enchantWithLevelsLootFunctionEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getExplorationMapLootFunction()
  {
    return explorationMapLootFunctionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getExplorationMapLootFunction_Destination()
  {
    return (EAttribute)explorationMapLootFunctionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getExplorationMapLootFunction_Decoration()
  {
    return (EAttribute)explorationMapLootFunctionEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getExplorationMapLootFunction_ZoomDefined()
  {
    return (EAttribute)explorationMapLootFunctionEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getExplorationMapLootFunction_Zoom()
  {
    return (EAttribute)explorationMapLootFunctionEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getExplorationMapLootFunction_SearchRadiusDefined()
  {
    return (EAttribute)explorationMapLootFunctionEClass.getEStructuralFeatures().get(4);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getExplorationMapLootFunction_SearchRadius()
  {
    return (EAttribute)explorationMapLootFunctionEClass.getEStructuralFeatures().get(5);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getExplorationMapLootFunction_SkipExistingChunksDefined()
  {
    return (EAttribute)explorationMapLootFunctionEClass.getEStructuralFeatures().get(6);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getExplorationMapLootFunction_SkipExistingChunks()
  {
    return (EAttribute)explorationMapLootFunctionEClass.getEStructuralFeatures().get(7);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getExplosionDecayLootFunction()
  {
    return explosionDecayLootFunctionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getFurnaceSmeltLootFunction()
  {
    return furnaceSmeltLootFunctionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getFillPlayerHeadLootFunction()
  {
    return fillPlayerHeadLootFunctionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getFillPlayerHeadLootFunction_Entity()
  {
    return (EAttribute)fillPlayerHeadLootFunctionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getLimitCountLootFunction()
  {
    return limitCountLootFunctionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getLimitCountLootFunction_Limit()
  {
    return (EReference)limitCountLootFunctionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getLootingEnchantLootFunction()
  {
    return lootingEnchantLootFunctionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getLootingEnchantLootFunction_LimitDefined()
  {
    return (EAttribute)lootingEnchantLootFunctionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getLootingEnchantLootFunction_Limit()
  {
    return (EAttribute)lootingEnchantLootFunctionEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getLootingEnchantLootFunction_Count()
  {
    return (EReference)lootingEnchantLootFunctionEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getSetAttributesLootFunction()
  {
    return setAttributesLootFunctionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getSetAttributesLootFunction_Modifiers()
  {
    return (EReference)setAttributesLootFunctionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getAttributeModifier()
  {
    return attributeModifierEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getAttributeModifier_Id()
  {
    return (EAttribute)attributeModifierEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getAttributeModifier_Operation()
  {
    return (EAttribute)attributeModifierEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getAttributeModifier_Amount()
  {
    return (EReference)attributeModifierEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getAttributeModifier_AttributeName()
  {
    return (EAttribute)attributeModifierEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getAttributeModifier_Uuid()
  {
    return (EAttribute)attributeModifierEClass.getEStructuralFeatures().get(4);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getAttributeModifier_SlotDefined()
  {
    return (EAttribute)attributeModifierEClass.getEStructuralFeatures().get(5);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getAttributeModifier_SingleSlot()
  {
    return (EAttribute)attributeModifierEClass.getEStructuralFeatures().get(6);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getAttributeModifier_Slots()
  {
    return (EAttribute)attributeModifierEClass.getEStructuralFeatures().get(7);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getSetContentsLootFunction()
  {
    return setContentsLootFunctionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getSetContentsLootFunction_Entries()
  {
    return (EReference)setContentsLootFunctionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getSetCountLootFunction()
  {
    return setCountLootFunctionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getSetCountLootFunction_Count()
  {
    return (EReference)setCountLootFunctionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getCount()
  {
    return countEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getExactCount()
  {
    return exactCountEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getExactCount_Amount()
  {
    return (EAttribute)exactCountEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getSpecialCount()
  {
    return specialCountEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getUniformCount()
  {
    return uniformCountEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getUniformCount_Min()
  {
    return (EAttribute)uniformCountEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getUniformCount_Max()
  {
    return (EAttribute)uniformCountEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getBinomialCount()
  {
    return binomialCountEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getBinomialCount_N()
  {
    return (EAttribute)binomialCountEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getBinomialCount_P()
  {
    return (EAttribute)binomialCountEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getSetDamageLootFunction()
  {
    return setDamageLootFunctionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getSetDamageLootFunction_Damage()
  {
    return (EReference)setDamageLootFunctionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getSetLoreLootFunction()
  {
    return setLoreLootFunctionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getSetLoreLootFunction_ReplaceDefined()
  {
    return (EAttribute)setLoreLootFunctionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getSetLoreLootFunction_Replace()
  {
    return (EAttribute)setLoreLootFunctionEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getSetLoreLootFunction_Entity()
  {
    return (EAttribute)setLoreLootFunctionEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getSetLoreLootFunction_Lore()
  {
    return (EReference)setLoreLootFunctionEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getSetNameLootFunction()
  {
    return setNameLootFunctionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getSetNameLootFunction_Entity()
  {
    return (EAttribute)setNameLootFunctionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getSetNameLootFunction_ItemName()
  {
    return (EReference)setNameLootFunctionEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getSetNBTLootFunction()
  {
    return setNBTLootFunctionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getSetNBTLootFunction_Tag()
  {
    return (EAttribute)setNBTLootFunctionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getSetStewEffectLootFunction()
  {
    return setStewEffectLootFunctionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getSetStewEffectLootFunction_Effects()
  {
    return (EReference)setStewEffectLootFunctionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getStewEffect()
  {
    return stewEffectEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getStewEffect_Type()
  {
    return (EAttribute)stewEffectEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getStewEffect_Duration()
  {
    return (EAttribute)stewEffectEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getLootCondition()
  {
    return lootConditionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getNamedLootCondition()
  {
    return namedLootConditionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getNamedLootCondition_Id()
  {
    return (EAttribute)namedLootConditionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getBlockStatePropertiesLootCondition()
  {
    return blockStatePropertiesLootConditionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getBlockStatePropertiesLootCondition_Inverted()
  {
    return (EAttribute)blockStatePropertiesLootConditionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getBlockStatePropertiesLootCondition_Block()
  {
    return (EAttribute)blockStatePropertiesLootConditionEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getBlockStatePropertiesLootCondition_Properties()
  {
    return (EReference)blockStatePropertiesLootConditionEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getBlockStateProperty()
  {
    return blockStatePropertyEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getBlockStateProperty_Name()
  {
    return (EAttribute)blockStatePropertyEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getBlockStateProperty_Value()
  {
    return (EAttribute)blockStatePropertyEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getDamageSourcePropertiesLootCondition()
  {
    return damageSourcePropertiesLootConditionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getDamageSourcePropertiesLootCondition_BypassesArmorDefined()
  {
    return (EAttribute)damageSourcePropertiesLootConditionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getDamageSourcePropertiesLootCondition_BypassesArmor()
  {
    return (EAttribute)damageSourcePropertiesLootConditionEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getDamageSourcePropertiesLootCondition_BypassesInvulnerabilityDefined()
  {
    return (EAttribute)damageSourcePropertiesLootConditionEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getDamageSourcePropertiesLootCondition_BypassesInvulnerability()
  {
    return (EAttribute)damageSourcePropertiesLootConditionEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getDamageSourcePropertiesLootCondition_BypassesMagicDefined()
  {
    return (EAttribute)damageSourcePropertiesLootConditionEClass.getEStructuralFeatures().get(4);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getDamageSourcePropertiesLootCondition_BypassesMagic()
  {
    return (EAttribute)damageSourcePropertiesLootConditionEClass.getEStructuralFeatures().get(5);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getDamageSourcePropertiesLootCondition_DirectEntity()
  {
    return (EReference)damageSourcePropertiesLootConditionEClass.getEStructuralFeatures().get(6);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getDamageSourcePropertiesLootCondition_ExplosionDefined()
  {
    return (EAttribute)damageSourcePropertiesLootConditionEClass.getEStructuralFeatures().get(7);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getDamageSourcePropertiesLootCondition_Explosion()
  {
    return (EAttribute)damageSourcePropertiesLootConditionEClass.getEStructuralFeatures().get(8);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getDamageSourcePropertiesLootCondition_FireDefined()
  {
    return (EAttribute)damageSourcePropertiesLootConditionEClass.getEStructuralFeatures().get(9);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getDamageSourcePropertiesLootCondition_Fire()
  {
    return (EAttribute)damageSourcePropertiesLootConditionEClass.getEStructuralFeatures().get(10);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getDamageSourcePropertiesLootCondition_MagicDefined()
  {
    return (EAttribute)damageSourcePropertiesLootConditionEClass.getEStructuralFeatures().get(11);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getDamageSourcePropertiesLootCondition_Magic()
  {
    return (EAttribute)damageSourcePropertiesLootConditionEClass.getEStructuralFeatures().get(12);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getDamageSourcePropertiesLootCondition_ProjectileDefined()
  {
    return (EAttribute)damageSourcePropertiesLootConditionEClass.getEStructuralFeatures().get(13);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getDamageSourcePropertiesLootCondition_Projectile()
  {
    return (EAttribute)damageSourcePropertiesLootConditionEClass.getEStructuralFeatures().get(14);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getDamageSourcePropertiesLootCondition_LightningDefined()
  {
    return (EAttribute)damageSourcePropertiesLootConditionEClass.getEStructuralFeatures().get(15);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getDamageSourcePropertiesLootCondition_Lightning()
  {
    return (EAttribute)damageSourcePropertiesLootConditionEClass.getEStructuralFeatures().get(16);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getDamageSourcePropertiesLootCondition_SourceEntity()
  {
    return (EReference)damageSourcePropertiesLootConditionEClass.getEStructuralFeatures().get(17);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getEntityPropertiesLootCondition()
  {
    return entityPropertiesLootConditionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getEntityPropertiesLootCondition_Entity()
  {
    return (EAttribute)entityPropertiesLootConditionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getEntityPropertiesLootCondition_Predicate()
  {
    return (EReference)entityPropertiesLootConditionEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getEntityScoresLootCondition()
  {
    return entityScoresLootConditionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getEntityScoresLootCondition_Entity()
  {
    return (EAttribute)entityScoresLootConditionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getEntityScoresLootCondition_Scores()
  {
    return (EReference)entityScoresLootConditionEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getEntityScore()
  {
    return entityScoreEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getEntityScore_Objective()
  {
    return (EAttribute)entityScoreEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getEntityScore_Score()
  {
    return (EReference)entityScoreEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getKilledByPlayerLootCondition()
  {
    return killedByPlayerLootConditionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getLocationCheckLootCondition()
  {
    return locationCheckLootConditionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getLocationCheckLootCondition_UndefinedOffsetX()
  {
    return (EAttribute)locationCheckLootConditionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getLocationCheckLootCondition_OffsetX()
  {
    return (EAttribute)locationCheckLootConditionEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getLocationCheckLootCondition_UndefinedOffsetY()
  {
    return (EAttribute)locationCheckLootConditionEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getLocationCheckLootCondition_OffsetY()
  {
    return (EAttribute)locationCheckLootConditionEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getLocationCheckLootCondition_UndefinedOffsetZ()
  {
    return (EAttribute)locationCheckLootConditionEClass.getEStructuralFeatures().get(4);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getLocationCheckLootCondition_OffsetZ()
  {
    return (EAttribute)locationCheckLootConditionEClass.getEStructuralFeatures().get(5);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getLocationCheckLootCondition_Predicate()
  {
    return (EReference)locationCheckLootConditionEClass.getEStructuralFeatures().get(6);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getMatchToolLootCondition()
  {
    return matchToolLootConditionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getMatchToolLootCondition_Inverted()
  {
    return (EAttribute)matchToolLootConditionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getMatchToolLootCondition_Predicate()
  {
    return (EReference)matchToolLootConditionEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getRandomChanceLootCondition()
  {
    return randomChanceLootConditionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getRandomChanceLootCondition_Chance()
  {
    return (EAttribute)randomChanceLootConditionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getRandomChanceLootCondition_LootingMultiplierDefined()
  {
    return (EAttribute)randomChanceLootConditionEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getRandomChanceLootCondition_LootingMultiplier()
  {
    return (EAttribute)randomChanceLootConditionEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getReferenceLootCondition()
  {
    return referenceLootConditionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getReferenceLootCondition_Ref()
  {
    return (EAttribute)referenceLootConditionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getSurvivesExplosionLootCondition()
  {
    return survivesExplosionLootConditionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getTableBonusLootCondition()
  {
    return tableBonusLootConditionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getTableBonusLootCondition_Enchantment()
  {
    return (EAttribute)tableBonusLootConditionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getTableBonusLootCondition_Chances()
  {
    return (EAttribute)tableBonusLootConditionEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getTimeCheckLootCondition()
  {
    return timeCheckLootConditionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getTimeCheckLootCondition_PeriodDefined()
  {
    return (EAttribute)timeCheckLootConditionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getTimeCheckLootCondition_Period()
  {
    return (EAttribute)timeCheckLootConditionEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getTimeCheckLootCondition_Inverted()
  {
    return (EAttribute)timeCheckLootConditionEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getTimeCheckLootCondition_Value()
  {
    return (EReference)timeCheckLootConditionEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getToolEnchantmentLootCondition()
  {
    return toolEnchantmentLootConditionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getToolEnchantmentLootCondition_Enchantments()
  {
    return (EReference)toolEnchantmentLootConditionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getEnchantmentLevel()
  {
    return enchantmentLevelEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getEnchantmentLevel_Enchantment()
  {
    return (EAttribute)enchantmentLevelEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getEnchantmentLevel_Levels()
  {
    return (EReference)enchantmentLevelEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getWeatherCheckLootCondition()
  {
    return weatherCheckLootConditionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getWeatherCheckLootCondition_Inverted()
  {
    return (EAttribute)weatherCheckLootConditionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getWeatherCheckLootCondition_Raining()
  {
    return (EAttribute)weatherCheckLootConditionEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getWeatherCheckLootCondition_Thundering()
  {
    return (EAttribute)weatherCheckLootConditionEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getEntityPredicate()
  {
    return entityPredicateEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getEntityPredicate_AbsoluteDistance()
  {
    return (EReference)entityPredicateEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getEntityPredicate_HorizontalDistance()
  {
    return (EReference)entityPredicateEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getEntityPredicate_XDistance()
  {
    return (EReference)entityPredicateEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getEntityPredicate_YDistance()
  {
    return (EReference)entityPredicateEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getEntityPredicate_ZDistance()
  {
    return (EReference)entityPredicateEClass.getEStructuralFeatures().get(4);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getEntityPredicate_EffectsDefined()
  {
    return (EAttribute)entityPredicateEClass.getEStructuralFeatures().get(5);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getEntityPredicate_Effects()
  {
    return (EReference)entityPredicateEClass.getEStructuralFeatures().get(6);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getEntityPredicate_Equipment()
  {
    return (EReference)entityPredicateEClass.getEStructuralFeatures().get(7);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getEntityPredicate_DefaultEquipment()
  {
    return (EReference)entityPredicateEClass.getEStructuralFeatures().get(8);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getEntityPredicate_Flags()
  {
    return (EReference)entityPredicateEClass.getEStructuralFeatures().get(9);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getEntityPredicate_Nbt()
  {
    return (EAttribute)entityPredicateEClass.getEStructuralFeatures().get(10);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getEntityPredicate_Player()
  {
    return (EReference)entityPredicateEClass.getEStructuralFeatures().get(11);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getEntityPredicate_Team()
  {
    return (EAttribute)entityPredicateEClass.getEStructuralFeatures().get(12);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getEntityPredicate_Type()
  {
    return (EAttribute)entityPredicateEClass.getEStructuralFeatures().get(13);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getEntityPredicate_Location()
  {
    return (EReference)entityPredicateEClass.getEStructuralFeatures().get(14);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getEntityPredicate_FishingHook()
  {
    return (EReference)entityPredicateEClass.getEStructuralFeatures().get(15);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getFishingHookPredicate()
  {
    return fishingHookPredicateEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getFishingHookPredicate_InOpenWaterDefined()
  {
    return (EAttribute)fishingHookPredicateEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getFishingHookPredicate_InOpenWater()
  {
    return (EAttribute)fishingHookPredicateEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getEffectPredicate()
  {
    return effectPredicateEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getEffectPredicate_Id()
  {
    return (EAttribute)effectPredicateEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getEffectPredicate_Amplifier()
  {
    return (EReference)effectPredicateEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getEffectPredicate_Duration()
  {
    return (EReference)effectPredicateEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getEquipmentPredicate()
  {
    return equipmentPredicateEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getEquipmentPredicate_Slots()
  {
    return (EAttribute)equipmentPredicateEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getEquipmentPredicate_Predicate()
  {
    return (EReference)equipmentPredicateEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getEntityFlags()
  {
    return entityFlagsEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getEntityFlags_OnFireDefined()
  {
    return (EAttribute)entityFlagsEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getEntityFlags_OnFire()
  {
    return (EAttribute)entityFlagsEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getEntityFlags_SneakingDefined()
  {
    return (EAttribute)entityFlagsEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getEntityFlags_Sneaking()
  {
    return (EAttribute)entityFlagsEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getEntityFlags_SprintingDefined()
  {
    return (EAttribute)entityFlagsEClass.getEStructuralFeatures().get(4);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getEntityFlags_Sprinting()
  {
    return (EAttribute)entityFlagsEClass.getEStructuralFeatures().get(5);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getEntityFlags_SwimmingDefined()
  {
    return (EAttribute)entityFlagsEClass.getEStructuralFeatures().get(6);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getEntityFlags_Swimming()
  {
    return (EAttribute)entityFlagsEClass.getEStructuralFeatures().get(7);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getEntityFlags_BabyDefined()
  {
    return (EAttribute)entityFlagsEClass.getEStructuralFeatures().get(8);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getEntityFlags_Baby()
  {
    return (EAttribute)entityFlagsEClass.getEStructuralFeatures().get(9);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getPlayerPredicate()
  {
    return playerPredicateEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getPlayerPredicate_AdvancementsDefined()
  {
    return (EAttribute)playerPredicateEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getPlayerPredicate_Advancements()
  {
    return (EReference)playerPredicateEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getPlayerPredicate_GamemodeDefined()
  {
    return (EAttribute)playerPredicateEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getPlayerPredicate_Gamemode()
  {
    return (EAttribute)playerPredicateEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getPlayerPredicate_RecipesDefined()
  {
    return (EAttribute)playerPredicateEClass.getEStructuralFeatures().get(4);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getPlayerPredicate_Recipes()
  {
    return (EReference)playerPredicateEClass.getEStructuralFeatures().get(5);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getPlayerPredicate_StatsDefined()
  {
    return (EAttribute)playerPredicateEClass.getEStructuralFeatures().get(6);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getPlayerPredicate_Stats()
  {
    return (EReference)playerPredicateEClass.getEStructuralFeatures().get(7);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getAdvancementPredicate()
  {
    return advancementPredicateEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getAdvancementPredicate_Name()
  {
    return (EAttribute)advancementPredicateEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getAdvancementPredicate_DidNotGet()
  {
    return (EAttribute)advancementPredicateEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getAdvancementPredicate_Criteria()
  {
    return (EReference)advancementPredicateEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getAdvancementCriteria()
  {
    return advancementCriteriaEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getAdvancementCriteria_CriteriaNames()
  {
    return (EAttribute)advancementCriteriaEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getAdvancementCriteria_DidNotGet()
  {
    return (EAttribute)advancementCriteriaEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getRecipePredicate()
  {
    return recipePredicateEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getRecipePredicate_Recipe()
  {
    return (EAttribute)recipePredicateEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getRecipePredicate_DidNotGet()
  {
    return (EAttribute)recipePredicateEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getStatisticPredicate()
  {
    return statisticPredicateEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getStatisticPredicate_Type()
  {
    return (EAttribute)statisticPredicateEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getSingleStatisticPredicate()
  {
    return singleStatisticPredicateEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getSingleStatisticPredicate_Stat()
  {
    return (EAttribute)singleStatisticPredicateEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getSingleStatisticPredicate_Value()
  {
    return (EReference)singleStatisticPredicateEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getNamespacedStatisticPredicate()
  {
    return namespacedStatisticPredicateEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getNamespacedStatisticPredicate_Stats()
  {
    return (EReference)namespacedStatisticPredicateEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getUnnamespacedStatisticPredicate()
  {
    return unnamespacedStatisticPredicateEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getUnnamespacedStatisticPredicate_Stat()
  {
    return (EAttribute)unnamespacedStatisticPredicateEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getUnnamespacedStatisticPredicate_Value()
  {
    return (EReference)unnamespacedStatisticPredicateEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getLocationPredicate()
  {
    return locationPredicateEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getLocationPredicate_Biome()
  {
    return (EAttribute)locationPredicateEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getLocationPredicate_Block()
  {
    return (EReference)locationPredicateEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getLocationPredicate_Dimension()
  {
    return (EAttribute)locationPredicateEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getLocationPredicate_Feature()
  {
    return (EAttribute)locationPredicateEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getLocationPredicate_Fluid()
  {
    return (EReference)locationPredicateEClass.getEStructuralFeatures().get(4);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getLocationPredicate_Light()
  {
    return (EReference)locationPredicateEClass.getEStructuralFeatures().get(5);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getLocationPredicate_XPos()
  {
    return (EReference)locationPredicateEClass.getEStructuralFeatures().get(6);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getLocationPredicate_YPos()
  {
    return (EReference)locationPredicateEClass.getEStructuralFeatures().get(7);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getLocationPredicate_ZPos()
  {
    return (EReference)locationPredicateEClass.getEStructuralFeatures().get(8);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getItemPredicate()
  {
    return itemPredicateEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getItemPredicate_Tag()
  {
    return (EAttribute)itemPredicateEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getItemPredicate_Item()
  {
    return (EAttribute)itemPredicateEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getItemPredicate_CountDefined()
  {
    return (EAttribute)itemPredicateEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getItemPredicate_Count()
  {
    return (EReference)itemPredicateEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getItemPredicate_DurabilityDefined()
  {
    return (EAttribute)itemPredicateEClass.getEStructuralFeatures().get(4);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getItemPredicate_Durability()
  {
    return (EReference)itemPredicateEClass.getEStructuralFeatures().get(5);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getItemPredicate_EnchantmentsDefined()
  {
    return (EAttribute)itemPredicateEClass.getEStructuralFeatures().get(6);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getItemPredicate_Enchantments()
  {
    return (EReference)itemPredicateEClass.getEStructuralFeatures().get(7);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getItemPredicate_StoredEnchantmentsDefined()
  {
    return (EAttribute)itemPredicateEClass.getEStructuralFeatures().get(8);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getItemPredicate_StoredEnchantments()
  {
    return (EReference)itemPredicateEClass.getEStructuralFeatures().get(9);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getItemPredicate_NbtDefined()
  {
    return (EAttribute)itemPredicateEClass.getEStructuralFeatures().get(10);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getItemPredicate_Nbt()
  {
    return (EAttribute)itemPredicateEClass.getEStructuralFeatures().get(11);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getItemPredicate_PotionDefined()
  {
    return (EAttribute)itemPredicateEClass.getEStructuralFeatures().get(12);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getItemPredicate_Potion()
  {
    return (EAttribute)itemPredicateEClass.getEStructuralFeatures().get(13);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getBlockPredicate()
  {
    return blockPredicateEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getBlockPredicate_Tag()
  {
    return (EAttribute)blockPredicateEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getBlockPredicate_Block()
  {
    return (EAttribute)blockPredicateEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getBlockPredicate_Nbt()
  {
    return (EAttribute)blockPredicateEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getBlockPredicate_StateDefined()
  {
    return (EAttribute)blockPredicateEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getBlockPredicate_Properties()
  {
    return (EReference)blockPredicateEClass.getEStructuralFeatures().get(4);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getBlockStatePropertyPredicate()
  {
    return blockStatePropertyPredicateEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getBlockStatePropertyPredicate_Name()
  {
    return (EAttribute)blockStatePropertyPredicateEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getBlockStatePropertyPredicate_Value()
  {
    return (EAttribute)blockStatePropertyPredicateEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getBlockStatePropertyPredicate_ValueRange()
  {
    return (EReference)blockStatePropertyPredicateEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getFluidPredicate()
  {
    return fluidPredicateEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getFluidPredicate_Tag()
  {
    return (EAttribute)fluidPredicateEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getFluidPredicate_Fluid()
  {
    return (EAttribute)fluidPredicateEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getFluidPredicate_StateDefined()
  {
    return (EAttribute)fluidPredicateEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getFluidPredicate_Properties()
  {
    return (EReference)fluidPredicateEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getMCJsonValue()
  {
    return mcJsonValueEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getMCJsonObject()
  {
    return mcJsonObjectEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getMCJsonObject_Entries()
  {
    return (EReference)mcJsonObjectEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getMCJsonEntry()
  {
    return mcJsonEntryEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getMCJsonEntry_Name()
  {
    return (EAttribute)mcJsonEntryEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getMCJsonEntry_Value()
  {
    return (EReference)mcJsonEntryEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getMCJsonArray()
  {
    return mcJsonArrayEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getMCJsonArray_Elements()
  {
    return (EReference)mcJsonArrayEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getMCJsonString()
  {
    return mcJsonStringEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getMCJsonString_Value()
  {
    return (EAttribute)mcJsonStringEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getMCJsonNumber()
  {
    return mcJsonNumberEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getMCJsonIntegral()
  {
    return mcJsonIntegralEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getMCJsonIntegral_Value()
  {
    return (EAttribute)mcJsonIntegralEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getMCJsonFloatingPoint()
  {
    return mcJsonFloatingPointEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getMCJsonFloatingPoint_Value()
  {
    return (EAttribute)mcJsonFloatingPointEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getMCJsonBoolean()
  {
    return mcJsonBooleanEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getMCJsonBoolean_Value()
  {
    return (EAttribute)mcJsonBooleanEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getMCJsonNull()
  {
    return mcJsonNullEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getLongRange()
  {
    return longRangeEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getExactLongRange()
  {
    return exactLongRangeEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getExactLongRange_Value()
  {
    return (EAttribute)exactLongRangeEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getNormalLongRange()
  {
    return normalLongRangeEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getNormalLongRange_Min()
  {
    return (EAttribute)normalLongRangeEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getNormalLongRange_Max()
  {
    return (EAttribute)normalLongRangeEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getDoubleRange()
  {
    return doubleRangeEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getExactDoubleRange()
  {
    return exactDoubleRangeEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getExactDoubleRange_Value()
  {
    return (EAttribute)exactDoubleRangeEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getNormalDoubleRange()
  {
    return normalDoubleRangeEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getNormalDoubleRange_Min()
  {
    return (EAttribute)normalDoubleRangeEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getNormalDoubleRange_Max()
  {
    return (EAttribute)normalDoubleRangeEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getLootFunctionWithConditions()
  {
    return lootFunctionWithConditionsEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getLootFunctionWithConditions_ConditionsDefined()
  {
    return (EAttribute)lootFunctionWithConditionsEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getLootFunctionWithConditions_Conditions()
  {
    return (EReference)lootFunctionWithConditionsEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getLootFunctionWithConditions_Function()
  {
    return (EReference)lootFunctionWithConditionsEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getAlternativeLootCondition()
  {
    return alternativeLootConditionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getAlternativeLootCondition_Alternatives()
  {
    return (EReference)alternativeLootConditionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getInvertedLootCondition()
  {
    return invertedLootConditionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getInvertedLootCondition_Term()
  {
    return (EReference)invertedLootConditionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EEnum getEnumEquipmentSlot()
  {
    return enumEquipmentSlotEEnum;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EEnum getEnumGamemode()
  {
    return enumGamemodeEEnum;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EEnum getEnumLootTableType()
  {
    return enumLootTableTypeEEnum;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EEnum getEnumBonusFormula()
  {
    return enumBonusFormulaEEnum;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EEnum getEnumNBTSource()
  {
    return enumNBTSourceEEnum;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EEnum getEnumAttributeModifierOperation()
  {
    return enumAttributeModifierOperationEEnum;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EEnum getEnumEntitySource()
  {
    return enumEntitySourceEEnum;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public MclootFactory getMclootFactory()
  {
    return (MclootFactory)getEFactoryInstance();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private boolean isCreated = false;

  /**
   * Creates the meta-model objects for the package.  This method is
   * guarded to have no affect on any invocation but its first.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void createPackageContents()
  {
    if (isCreated) return;
    isCreated = true;

    // Create classes and their features
    lootTableEClass = createEClass(LOOT_TABLE);
    createEAttribute(lootTableEClass, LOOT_TABLE__TYPE_DEFINED);
    createEAttribute(lootTableEClass, LOOT_TABLE__TYPE);
    createEAttribute(lootTableEClass, LOOT_TABLE__POOLS_DEFINED);
    createEReference(lootTableEClass, LOOT_TABLE__POOLS);

    lootPoolEClass = createEClass(LOOT_POOL);
    createEAttribute(lootPoolEClass, LOOT_POOL__CONDITIONS_DEFINED);
    createEReference(lootPoolEClass, LOOT_POOL__CONDITIONS);
    createEAttribute(lootPoolEClass, LOOT_POOL__NAME);
    createEAttribute(lootPoolEClass, LOOT_POOL__ROLLS_DEFINED);
    createEReference(lootPoolEClass, LOOT_POOL__ROLLS);
    createEAttribute(lootPoolEClass, LOOT_POOL__ENTRIES_DEFINED);
    createEReference(lootPoolEClass, LOOT_POOL__ENTRIES);
    createEAttribute(lootPoolEClass, LOOT_POOL__BONUS_ROLLS_DEFINED);
    createEReference(lootPoolEClass, LOOT_POOL__BONUS_ROLLS);
    createEAttribute(lootPoolEClass, LOOT_POOL__FUNCTIONS_DEFINED);
    createEReference(lootPoolEClass, LOOT_POOL__FUNCTIONS);

    lootEntryEClass = createEClass(LOOT_ENTRY);
    createEAttribute(lootEntryEClass, LOOT_ENTRY__CONDITIONS_DEFINED);
    createEReference(lootEntryEClass, LOOT_ENTRY__CONDITIONS);
    createEAttribute(lootEntryEClass, LOOT_ENTRY__TYPE);
    createEAttribute(lootEntryEClass, LOOT_ENTRY__NAME);
    createEAttribute(lootEntryEClass, LOOT_ENTRY__QUALITY_DEFINED);
    createEAttribute(lootEntryEClass, LOOT_ENTRY__QUALITY);
    createEAttribute(lootEntryEClass, LOOT_ENTRY__EXPAND_DEFINED);
    createEAttribute(lootEntryEClass, LOOT_ENTRY__EXPAND);
    createEAttribute(lootEntryEClass, LOOT_ENTRY__FUNCTIONS_DEFINED);
    createEReference(lootEntryEClass, LOOT_ENTRY__FUNCTIONS);
    createEAttribute(lootEntryEClass, LOOT_ENTRY__CHILDREN_DEFINED);
    createEReference(lootEntryEClass, LOOT_ENTRY__CHILDREN);
    createEAttribute(lootEntryEClass, LOOT_ENTRY__ENTRY_NAME);
    createEAttribute(lootEntryEClass, LOOT_ENTRY__WEIGHT_DEFINED);
    createEAttribute(lootEntryEClass, LOOT_ENTRY__WEIGHT);

    lootFunctionEClass = createEClass(LOOT_FUNCTION);
    createEAttribute(lootFunctionEClass, LOOT_FUNCTION__ID);

    applyBonusLootFunctionEClass = createEClass(APPLY_BONUS_LOOT_FUNCTION);
    createEAttribute(applyBonusLootFunctionEClass, APPLY_BONUS_LOOT_FUNCTION__ENCHANTMENT);
    createEAttribute(applyBonusLootFunctionEClass, APPLY_BONUS_LOOT_FUNCTION__FORMULA);
    createEAttribute(applyBonusLootFunctionEClass, APPLY_BONUS_LOOT_FUNCTION__EXTRA_DEFINED);
    createEAttribute(applyBonusLootFunctionEClass, APPLY_BONUS_LOOT_FUNCTION__EXTRA);
    createEAttribute(applyBonusLootFunctionEClass, APPLY_BONUS_LOOT_FUNCTION__PROBABILITY_DEFINED);
    createEAttribute(applyBonusLootFunctionEClass, APPLY_BONUS_LOOT_FUNCTION__PROBABILITY);
    createEAttribute(applyBonusLootFunctionEClass, APPLY_BONUS_LOOT_FUNCTION__BONUS_MULTIPLIER_DEFINED);
    createEAttribute(applyBonusLootFunctionEClass, APPLY_BONUS_LOOT_FUNCTION__BONUS_MULTIPLIER);

    copyNameLootFunctionEClass = createEClass(COPY_NAME_LOOT_FUNCTION);
    createEAttribute(copyNameLootFunctionEClass, COPY_NAME_LOOT_FUNCTION__SOURCE);

    copyNBTLootFunctionEClass = createEClass(COPY_NBT_LOOT_FUNCTION);
    createEAttribute(copyNBTLootFunctionEClass, COPY_NBT_LOOT_FUNCTION__SOURCE);
    createEReference(copyNBTLootFunctionEClass, COPY_NBT_LOOT_FUNCTION__OPS);

    nbtOperationEClass = createEClass(NBT_OPERATION);
    createEAttribute(nbtOperationEClass, NBT_OPERATION__ID);
    createEAttribute(nbtOperationEClass, NBT_OPERATION__SOURCE);
    createEAttribute(nbtOperationEClass, NBT_OPERATION__TARGET);

    appendNBTOperationEClass = createEClass(APPEND_NBT_OPERATION);

    replaceNBTOperationEClass = createEClass(REPLACE_NBT_OPERATION);

    mergeNBTOperationEClass = createEClass(MERGE_NBT_OPERATION);

    copyStateLootFunctionEClass = createEClass(COPY_STATE_LOOT_FUNCTION);
    createEAttribute(copyStateLootFunctionEClass, COPY_STATE_LOOT_FUNCTION__BLOCK);
    createEAttribute(copyStateLootFunctionEClass, COPY_STATE_LOOT_FUNCTION__PROPERTIES);

    enchantRandomlyLootFunctionEClass = createEClass(ENCHANT_RANDOMLY_LOOT_FUNCTION);
    createEAttribute(enchantRandomlyLootFunctionEClass, ENCHANT_RANDOMLY_LOOT_FUNCTION__ENCHANTMENTS);

    enchantWithLevelsLootFunctionEClass = createEClass(ENCHANT_WITH_LEVELS_LOOT_FUNCTION);
    createEAttribute(enchantWithLevelsLootFunctionEClass, ENCHANT_WITH_LEVELS_LOOT_FUNCTION__TREASURE_DEFINED);
    createEAttribute(enchantWithLevelsLootFunctionEClass, ENCHANT_WITH_LEVELS_LOOT_FUNCTION__TREASURE);
    createEReference(enchantWithLevelsLootFunctionEClass, ENCHANT_WITH_LEVELS_LOOT_FUNCTION__LEVELS);

    explorationMapLootFunctionEClass = createEClass(EXPLORATION_MAP_LOOT_FUNCTION);
    createEAttribute(explorationMapLootFunctionEClass, EXPLORATION_MAP_LOOT_FUNCTION__DESTINATION);
    createEAttribute(explorationMapLootFunctionEClass, EXPLORATION_MAP_LOOT_FUNCTION__DECORATION);
    createEAttribute(explorationMapLootFunctionEClass, EXPLORATION_MAP_LOOT_FUNCTION__ZOOM_DEFINED);
    createEAttribute(explorationMapLootFunctionEClass, EXPLORATION_MAP_LOOT_FUNCTION__ZOOM);
    createEAttribute(explorationMapLootFunctionEClass, EXPLORATION_MAP_LOOT_FUNCTION__SEARCH_RADIUS_DEFINED);
    createEAttribute(explorationMapLootFunctionEClass, EXPLORATION_MAP_LOOT_FUNCTION__SEARCH_RADIUS);
    createEAttribute(explorationMapLootFunctionEClass, EXPLORATION_MAP_LOOT_FUNCTION__SKIP_EXISTING_CHUNKS_DEFINED);
    createEAttribute(explorationMapLootFunctionEClass, EXPLORATION_MAP_LOOT_FUNCTION__SKIP_EXISTING_CHUNKS);

    explosionDecayLootFunctionEClass = createEClass(EXPLOSION_DECAY_LOOT_FUNCTION);

    furnaceSmeltLootFunctionEClass = createEClass(FURNACE_SMELT_LOOT_FUNCTION);

    fillPlayerHeadLootFunctionEClass = createEClass(FILL_PLAYER_HEAD_LOOT_FUNCTION);
    createEAttribute(fillPlayerHeadLootFunctionEClass, FILL_PLAYER_HEAD_LOOT_FUNCTION__ENTITY);

    limitCountLootFunctionEClass = createEClass(LIMIT_COUNT_LOOT_FUNCTION);
    createEReference(limitCountLootFunctionEClass, LIMIT_COUNT_LOOT_FUNCTION__LIMIT);

    lootingEnchantLootFunctionEClass = createEClass(LOOTING_ENCHANT_LOOT_FUNCTION);
    createEAttribute(lootingEnchantLootFunctionEClass, LOOTING_ENCHANT_LOOT_FUNCTION__LIMIT_DEFINED);
    createEAttribute(lootingEnchantLootFunctionEClass, LOOTING_ENCHANT_LOOT_FUNCTION__LIMIT);
    createEReference(lootingEnchantLootFunctionEClass, LOOTING_ENCHANT_LOOT_FUNCTION__COUNT);

    setAttributesLootFunctionEClass = createEClass(SET_ATTRIBUTES_LOOT_FUNCTION);
    createEReference(setAttributesLootFunctionEClass, SET_ATTRIBUTES_LOOT_FUNCTION__MODIFIERS);

    attributeModifierEClass = createEClass(ATTRIBUTE_MODIFIER);
    createEAttribute(attributeModifierEClass, ATTRIBUTE_MODIFIER__ID);
    createEAttribute(attributeModifierEClass, ATTRIBUTE_MODIFIER__OPERATION);
    createEReference(attributeModifierEClass, ATTRIBUTE_MODIFIER__AMOUNT);
    createEAttribute(attributeModifierEClass, ATTRIBUTE_MODIFIER__ATTRIBUTE_NAME);
    createEAttribute(attributeModifierEClass, ATTRIBUTE_MODIFIER__UUID);
    createEAttribute(attributeModifierEClass, ATTRIBUTE_MODIFIER__SLOT_DEFINED);
    createEAttribute(attributeModifierEClass, ATTRIBUTE_MODIFIER__SINGLE_SLOT);
    createEAttribute(attributeModifierEClass, ATTRIBUTE_MODIFIER__SLOTS);

    setContentsLootFunctionEClass = createEClass(SET_CONTENTS_LOOT_FUNCTION);
    createEReference(setContentsLootFunctionEClass, SET_CONTENTS_LOOT_FUNCTION__ENTRIES);

    setCountLootFunctionEClass = createEClass(SET_COUNT_LOOT_FUNCTION);
    createEReference(setCountLootFunctionEClass, SET_COUNT_LOOT_FUNCTION__COUNT);

    countEClass = createEClass(COUNT);

    exactCountEClass = createEClass(EXACT_COUNT);
    createEAttribute(exactCountEClass, EXACT_COUNT__AMOUNT);

    specialCountEClass = createEClass(SPECIAL_COUNT);

    uniformCountEClass = createEClass(UNIFORM_COUNT);
    createEAttribute(uniformCountEClass, UNIFORM_COUNT__MIN);
    createEAttribute(uniformCountEClass, UNIFORM_COUNT__MAX);

    binomialCountEClass = createEClass(BINOMIAL_COUNT);
    createEAttribute(binomialCountEClass, BINOMIAL_COUNT__N);
    createEAttribute(binomialCountEClass, BINOMIAL_COUNT__P);

    setDamageLootFunctionEClass = createEClass(SET_DAMAGE_LOOT_FUNCTION);
    createEReference(setDamageLootFunctionEClass, SET_DAMAGE_LOOT_FUNCTION__DAMAGE);

    setLoreLootFunctionEClass = createEClass(SET_LORE_LOOT_FUNCTION);
    createEAttribute(setLoreLootFunctionEClass, SET_LORE_LOOT_FUNCTION__REPLACE_DEFINED);
    createEAttribute(setLoreLootFunctionEClass, SET_LORE_LOOT_FUNCTION__REPLACE);
    createEAttribute(setLoreLootFunctionEClass, SET_LORE_LOOT_FUNCTION__ENTITY);
    createEReference(setLoreLootFunctionEClass, SET_LORE_LOOT_FUNCTION__LORE);

    setNameLootFunctionEClass = createEClass(SET_NAME_LOOT_FUNCTION);
    createEAttribute(setNameLootFunctionEClass, SET_NAME_LOOT_FUNCTION__ENTITY);
    createEReference(setNameLootFunctionEClass, SET_NAME_LOOT_FUNCTION__ITEM_NAME);

    setNBTLootFunctionEClass = createEClass(SET_NBT_LOOT_FUNCTION);
    createEAttribute(setNBTLootFunctionEClass, SET_NBT_LOOT_FUNCTION__TAG);

    setStewEffectLootFunctionEClass = createEClass(SET_STEW_EFFECT_LOOT_FUNCTION);
    createEReference(setStewEffectLootFunctionEClass, SET_STEW_EFFECT_LOOT_FUNCTION__EFFECTS);

    stewEffectEClass = createEClass(STEW_EFFECT);
    createEAttribute(stewEffectEClass, STEW_EFFECT__TYPE);
    createEAttribute(stewEffectEClass, STEW_EFFECT__DURATION);

    lootConditionEClass = createEClass(LOOT_CONDITION);

    namedLootConditionEClass = createEClass(NAMED_LOOT_CONDITION);
    createEAttribute(namedLootConditionEClass, NAMED_LOOT_CONDITION__ID);

    blockStatePropertiesLootConditionEClass = createEClass(BLOCK_STATE_PROPERTIES_LOOT_CONDITION);
    createEAttribute(blockStatePropertiesLootConditionEClass, BLOCK_STATE_PROPERTIES_LOOT_CONDITION__INVERTED);
    createEAttribute(blockStatePropertiesLootConditionEClass, BLOCK_STATE_PROPERTIES_LOOT_CONDITION__BLOCK);
    createEReference(blockStatePropertiesLootConditionEClass, BLOCK_STATE_PROPERTIES_LOOT_CONDITION__PROPERTIES);

    blockStatePropertyEClass = createEClass(BLOCK_STATE_PROPERTY);
    createEAttribute(blockStatePropertyEClass, BLOCK_STATE_PROPERTY__NAME);
    createEAttribute(blockStatePropertyEClass, BLOCK_STATE_PROPERTY__VALUE);

    damageSourcePropertiesLootConditionEClass = createEClass(DAMAGE_SOURCE_PROPERTIES_LOOT_CONDITION);
    createEAttribute(damageSourcePropertiesLootConditionEClass, DAMAGE_SOURCE_PROPERTIES_LOOT_CONDITION__BYPASSES_ARMOR_DEFINED);
    createEAttribute(damageSourcePropertiesLootConditionEClass, DAMAGE_SOURCE_PROPERTIES_LOOT_CONDITION__BYPASSES_ARMOR);
    createEAttribute(damageSourcePropertiesLootConditionEClass, DAMAGE_SOURCE_PROPERTIES_LOOT_CONDITION__BYPASSES_INVULNERABILITY_DEFINED);
    createEAttribute(damageSourcePropertiesLootConditionEClass, DAMAGE_SOURCE_PROPERTIES_LOOT_CONDITION__BYPASSES_INVULNERABILITY);
    createEAttribute(damageSourcePropertiesLootConditionEClass, DAMAGE_SOURCE_PROPERTIES_LOOT_CONDITION__BYPASSES_MAGIC_DEFINED);
    createEAttribute(damageSourcePropertiesLootConditionEClass, DAMAGE_SOURCE_PROPERTIES_LOOT_CONDITION__BYPASSES_MAGIC);
    createEReference(damageSourcePropertiesLootConditionEClass, DAMAGE_SOURCE_PROPERTIES_LOOT_CONDITION__DIRECT_ENTITY);
    createEAttribute(damageSourcePropertiesLootConditionEClass, DAMAGE_SOURCE_PROPERTIES_LOOT_CONDITION__EXPLOSION_DEFINED);
    createEAttribute(damageSourcePropertiesLootConditionEClass, DAMAGE_SOURCE_PROPERTIES_LOOT_CONDITION__EXPLOSION);
    createEAttribute(damageSourcePropertiesLootConditionEClass, DAMAGE_SOURCE_PROPERTIES_LOOT_CONDITION__FIRE_DEFINED);
    createEAttribute(damageSourcePropertiesLootConditionEClass, DAMAGE_SOURCE_PROPERTIES_LOOT_CONDITION__FIRE);
    createEAttribute(damageSourcePropertiesLootConditionEClass, DAMAGE_SOURCE_PROPERTIES_LOOT_CONDITION__MAGIC_DEFINED);
    createEAttribute(damageSourcePropertiesLootConditionEClass, DAMAGE_SOURCE_PROPERTIES_LOOT_CONDITION__MAGIC);
    createEAttribute(damageSourcePropertiesLootConditionEClass, DAMAGE_SOURCE_PROPERTIES_LOOT_CONDITION__PROJECTILE_DEFINED);
    createEAttribute(damageSourcePropertiesLootConditionEClass, DAMAGE_SOURCE_PROPERTIES_LOOT_CONDITION__PROJECTILE);
    createEAttribute(damageSourcePropertiesLootConditionEClass, DAMAGE_SOURCE_PROPERTIES_LOOT_CONDITION__LIGHTNING_DEFINED);
    createEAttribute(damageSourcePropertiesLootConditionEClass, DAMAGE_SOURCE_PROPERTIES_LOOT_CONDITION__LIGHTNING);
    createEReference(damageSourcePropertiesLootConditionEClass, DAMAGE_SOURCE_PROPERTIES_LOOT_CONDITION__SOURCE_ENTITY);

    entityPropertiesLootConditionEClass = createEClass(ENTITY_PROPERTIES_LOOT_CONDITION);
    createEAttribute(entityPropertiesLootConditionEClass, ENTITY_PROPERTIES_LOOT_CONDITION__ENTITY);
    createEReference(entityPropertiesLootConditionEClass, ENTITY_PROPERTIES_LOOT_CONDITION__PREDICATE);

    entityScoresLootConditionEClass = createEClass(ENTITY_SCORES_LOOT_CONDITION);
    createEAttribute(entityScoresLootConditionEClass, ENTITY_SCORES_LOOT_CONDITION__ENTITY);
    createEReference(entityScoresLootConditionEClass, ENTITY_SCORES_LOOT_CONDITION__SCORES);

    entityScoreEClass = createEClass(ENTITY_SCORE);
    createEAttribute(entityScoreEClass, ENTITY_SCORE__OBJECTIVE);
    createEReference(entityScoreEClass, ENTITY_SCORE__SCORE);

    killedByPlayerLootConditionEClass = createEClass(KILLED_BY_PLAYER_LOOT_CONDITION);

    locationCheckLootConditionEClass = createEClass(LOCATION_CHECK_LOOT_CONDITION);
    createEAttribute(locationCheckLootConditionEClass, LOCATION_CHECK_LOOT_CONDITION__UNDEFINED_OFFSET_X);
    createEAttribute(locationCheckLootConditionEClass, LOCATION_CHECK_LOOT_CONDITION__OFFSET_X);
    createEAttribute(locationCheckLootConditionEClass, LOCATION_CHECK_LOOT_CONDITION__UNDEFINED_OFFSET_Y);
    createEAttribute(locationCheckLootConditionEClass, LOCATION_CHECK_LOOT_CONDITION__OFFSET_Y);
    createEAttribute(locationCheckLootConditionEClass, LOCATION_CHECK_LOOT_CONDITION__UNDEFINED_OFFSET_Z);
    createEAttribute(locationCheckLootConditionEClass, LOCATION_CHECK_LOOT_CONDITION__OFFSET_Z);
    createEReference(locationCheckLootConditionEClass, LOCATION_CHECK_LOOT_CONDITION__PREDICATE);

    matchToolLootConditionEClass = createEClass(MATCH_TOOL_LOOT_CONDITION);
    createEAttribute(matchToolLootConditionEClass, MATCH_TOOL_LOOT_CONDITION__INVERTED);
    createEReference(matchToolLootConditionEClass, MATCH_TOOL_LOOT_CONDITION__PREDICATE);

    randomChanceLootConditionEClass = createEClass(RANDOM_CHANCE_LOOT_CONDITION);
    createEAttribute(randomChanceLootConditionEClass, RANDOM_CHANCE_LOOT_CONDITION__CHANCE);
    createEAttribute(randomChanceLootConditionEClass, RANDOM_CHANCE_LOOT_CONDITION__LOOTING_MULTIPLIER_DEFINED);
    createEAttribute(randomChanceLootConditionEClass, RANDOM_CHANCE_LOOT_CONDITION__LOOTING_MULTIPLIER);

    referenceLootConditionEClass = createEClass(REFERENCE_LOOT_CONDITION);
    createEAttribute(referenceLootConditionEClass, REFERENCE_LOOT_CONDITION__REF);

    survivesExplosionLootConditionEClass = createEClass(SURVIVES_EXPLOSION_LOOT_CONDITION);

    tableBonusLootConditionEClass = createEClass(TABLE_BONUS_LOOT_CONDITION);
    createEAttribute(tableBonusLootConditionEClass, TABLE_BONUS_LOOT_CONDITION__ENCHANTMENT);
    createEAttribute(tableBonusLootConditionEClass, TABLE_BONUS_LOOT_CONDITION__CHANCES);

    timeCheckLootConditionEClass = createEClass(TIME_CHECK_LOOT_CONDITION);
    createEAttribute(timeCheckLootConditionEClass, TIME_CHECK_LOOT_CONDITION__PERIOD_DEFINED);
    createEAttribute(timeCheckLootConditionEClass, TIME_CHECK_LOOT_CONDITION__PERIOD);
    createEAttribute(timeCheckLootConditionEClass, TIME_CHECK_LOOT_CONDITION__INVERTED);
    createEReference(timeCheckLootConditionEClass, TIME_CHECK_LOOT_CONDITION__VALUE);

    toolEnchantmentLootConditionEClass = createEClass(TOOL_ENCHANTMENT_LOOT_CONDITION);
    createEReference(toolEnchantmentLootConditionEClass, TOOL_ENCHANTMENT_LOOT_CONDITION__ENCHANTMENTS);

    enchantmentLevelEClass = createEClass(ENCHANTMENT_LEVEL);
    createEAttribute(enchantmentLevelEClass, ENCHANTMENT_LEVEL__ENCHANTMENT);
    createEReference(enchantmentLevelEClass, ENCHANTMENT_LEVEL__LEVELS);

    weatherCheckLootConditionEClass = createEClass(WEATHER_CHECK_LOOT_CONDITION);
    createEAttribute(weatherCheckLootConditionEClass, WEATHER_CHECK_LOOT_CONDITION__INVERTED);
    createEAttribute(weatherCheckLootConditionEClass, WEATHER_CHECK_LOOT_CONDITION__RAINING);
    createEAttribute(weatherCheckLootConditionEClass, WEATHER_CHECK_LOOT_CONDITION__THUNDERING);

    entityPredicateEClass = createEClass(ENTITY_PREDICATE);
    createEReference(entityPredicateEClass, ENTITY_PREDICATE__ABSOLUTE_DISTANCE);
    createEReference(entityPredicateEClass, ENTITY_PREDICATE__HORIZONTAL_DISTANCE);
    createEReference(entityPredicateEClass, ENTITY_PREDICATE__XDISTANCE);
    createEReference(entityPredicateEClass, ENTITY_PREDICATE__YDISTANCE);
    createEReference(entityPredicateEClass, ENTITY_PREDICATE__ZDISTANCE);
    createEAttribute(entityPredicateEClass, ENTITY_PREDICATE__EFFECTS_DEFINED);
    createEReference(entityPredicateEClass, ENTITY_PREDICATE__EFFECTS);
    createEReference(entityPredicateEClass, ENTITY_PREDICATE__EQUIPMENT);
    createEReference(entityPredicateEClass, ENTITY_PREDICATE__DEFAULT_EQUIPMENT);
    createEReference(entityPredicateEClass, ENTITY_PREDICATE__FLAGS);
    createEAttribute(entityPredicateEClass, ENTITY_PREDICATE__NBT);
    createEReference(entityPredicateEClass, ENTITY_PREDICATE__PLAYER);
    createEAttribute(entityPredicateEClass, ENTITY_PREDICATE__TEAM);
    createEAttribute(entityPredicateEClass, ENTITY_PREDICATE__TYPE);
    createEReference(entityPredicateEClass, ENTITY_PREDICATE__LOCATION);
    createEReference(entityPredicateEClass, ENTITY_PREDICATE__FISHING_HOOK);

    fishingHookPredicateEClass = createEClass(FISHING_HOOK_PREDICATE);
    createEAttribute(fishingHookPredicateEClass, FISHING_HOOK_PREDICATE__IN_OPEN_WATER_DEFINED);
    createEAttribute(fishingHookPredicateEClass, FISHING_HOOK_PREDICATE__IN_OPEN_WATER);

    effectPredicateEClass = createEClass(EFFECT_PREDICATE);
    createEAttribute(effectPredicateEClass, EFFECT_PREDICATE__ID);
    createEReference(effectPredicateEClass, EFFECT_PREDICATE__AMPLIFIER);
    createEReference(effectPredicateEClass, EFFECT_PREDICATE__DURATION);

    equipmentPredicateEClass = createEClass(EQUIPMENT_PREDICATE);
    createEAttribute(equipmentPredicateEClass, EQUIPMENT_PREDICATE__SLOTS);
    createEReference(equipmentPredicateEClass, EQUIPMENT_PREDICATE__PREDICATE);

    entityFlagsEClass = createEClass(ENTITY_FLAGS);
    createEAttribute(entityFlagsEClass, ENTITY_FLAGS__ON_FIRE_DEFINED);
    createEAttribute(entityFlagsEClass, ENTITY_FLAGS__ON_FIRE);
    createEAttribute(entityFlagsEClass, ENTITY_FLAGS__SNEAKING_DEFINED);
    createEAttribute(entityFlagsEClass, ENTITY_FLAGS__SNEAKING);
    createEAttribute(entityFlagsEClass, ENTITY_FLAGS__SPRINTING_DEFINED);
    createEAttribute(entityFlagsEClass, ENTITY_FLAGS__SPRINTING);
    createEAttribute(entityFlagsEClass, ENTITY_FLAGS__SWIMMING_DEFINED);
    createEAttribute(entityFlagsEClass, ENTITY_FLAGS__SWIMMING);
    createEAttribute(entityFlagsEClass, ENTITY_FLAGS__BABY_DEFINED);
    createEAttribute(entityFlagsEClass, ENTITY_FLAGS__BABY);

    playerPredicateEClass = createEClass(PLAYER_PREDICATE);
    createEAttribute(playerPredicateEClass, PLAYER_PREDICATE__ADVANCEMENTS_DEFINED);
    createEReference(playerPredicateEClass, PLAYER_PREDICATE__ADVANCEMENTS);
    createEAttribute(playerPredicateEClass, PLAYER_PREDICATE__GAMEMODE_DEFINED);
    createEAttribute(playerPredicateEClass, PLAYER_PREDICATE__GAMEMODE);
    createEAttribute(playerPredicateEClass, PLAYER_PREDICATE__RECIPES_DEFINED);
    createEReference(playerPredicateEClass, PLAYER_PREDICATE__RECIPES);
    createEAttribute(playerPredicateEClass, PLAYER_PREDICATE__STATS_DEFINED);
    createEReference(playerPredicateEClass, PLAYER_PREDICATE__STATS);

    advancementPredicateEClass = createEClass(ADVANCEMENT_PREDICATE);
    createEAttribute(advancementPredicateEClass, ADVANCEMENT_PREDICATE__NAME);
    createEAttribute(advancementPredicateEClass, ADVANCEMENT_PREDICATE__DID_NOT_GET);
    createEReference(advancementPredicateEClass, ADVANCEMENT_PREDICATE__CRITERIA);

    advancementCriteriaEClass = createEClass(ADVANCEMENT_CRITERIA);
    createEAttribute(advancementCriteriaEClass, ADVANCEMENT_CRITERIA__CRITERIA_NAMES);
    createEAttribute(advancementCriteriaEClass, ADVANCEMENT_CRITERIA__DID_NOT_GET);

    recipePredicateEClass = createEClass(RECIPE_PREDICATE);
    createEAttribute(recipePredicateEClass, RECIPE_PREDICATE__RECIPE);
    createEAttribute(recipePredicateEClass, RECIPE_PREDICATE__DID_NOT_GET);

    statisticPredicateEClass = createEClass(STATISTIC_PREDICATE);
    createEAttribute(statisticPredicateEClass, STATISTIC_PREDICATE__TYPE);

    singleStatisticPredicateEClass = createEClass(SINGLE_STATISTIC_PREDICATE);
    createEAttribute(singleStatisticPredicateEClass, SINGLE_STATISTIC_PREDICATE__STAT);
    createEReference(singleStatisticPredicateEClass, SINGLE_STATISTIC_PREDICATE__VALUE);

    namespacedStatisticPredicateEClass = createEClass(NAMESPACED_STATISTIC_PREDICATE);
    createEReference(namespacedStatisticPredicateEClass, NAMESPACED_STATISTIC_PREDICATE__STATS);

    unnamespacedStatisticPredicateEClass = createEClass(UNNAMESPACED_STATISTIC_PREDICATE);
    createEAttribute(unnamespacedStatisticPredicateEClass, UNNAMESPACED_STATISTIC_PREDICATE__STAT);
    createEReference(unnamespacedStatisticPredicateEClass, UNNAMESPACED_STATISTIC_PREDICATE__VALUE);

    locationPredicateEClass = createEClass(LOCATION_PREDICATE);
    createEAttribute(locationPredicateEClass, LOCATION_PREDICATE__BIOME);
    createEReference(locationPredicateEClass, LOCATION_PREDICATE__BLOCK);
    createEAttribute(locationPredicateEClass, LOCATION_PREDICATE__DIMENSION);
    createEAttribute(locationPredicateEClass, LOCATION_PREDICATE__FEATURE);
    createEReference(locationPredicateEClass, LOCATION_PREDICATE__FLUID);
    createEReference(locationPredicateEClass, LOCATION_PREDICATE__LIGHT);
    createEReference(locationPredicateEClass, LOCATION_PREDICATE__XPOS);
    createEReference(locationPredicateEClass, LOCATION_PREDICATE__YPOS);
    createEReference(locationPredicateEClass, LOCATION_PREDICATE__ZPOS);

    itemPredicateEClass = createEClass(ITEM_PREDICATE);
    createEAttribute(itemPredicateEClass, ITEM_PREDICATE__TAG);
    createEAttribute(itemPredicateEClass, ITEM_PREDICATE__ITEM);
    createEAttribute(itemPredicateEClass, ITEM_PREDICATE__COUNT_DEFINED);
    createEReference(itemPredicateEClass, ITEM_PREDICATE__COUNT);
    createEAttribute(itemPredicateEClass, ITEM_PREDICATE__DURABILITY_DEFINED);
    createEReference(itemPredicateEClass, ITEM_PREDICATE__DURABILITY);
    createEAttribute(itemPredicateEClass, ITEM_PREDICATE__ENCHANTMENTS_DEFINED);
    createEReference(itemPredicateEClass, ITEM_PREDICATE__ENCHANTMENTS);
    createEAttribute(itemPredicateEClass, ITEM_PREDICATE__STORED_ENCHANTMENTS_DEFINED);
    createEReference(itemPredicateEClass, ITEM_PREDICATE__STORED_ENCHANTMENTS);
    createEAttribute(itemPredicateEClass, ITEM_PREDICATE__NBT_DEFINED);
    createEAttribute(itemPredicateEClass, ITEM_PREDICATE__NBT);
    createEAttribute(itemPredicateEClass, ITEM_PREDICATE__POTION_DEFINED);
    createEAttribute(itemPredicateEClass, ITEM_PREDICATE__POTION);

    blockPredicateEClass = createEClass(BLOCK_PREDICATE);
    createEAttribute(blockPredicateEClass, BLOCK_PREDICATE__TAG);
    createEAttribute(blockPredicateEClass, BLOCK_PREDICATE__BLOCK);
    createEAttribute(blockPredicateEClass, BLOCK_PREDICATE__NBT);
    createEAttribute(blockPredicateEClass, BLOCK_PREDICATE__STATE_DEFINED);
    createEReference(blockPredicateEClass, BLOCK_PREDICATE__PROPERTIES);

    blockStatePropertyPredicateEClass = createEClass(BLOCK_STATE_PROPERTY_PREDICATE);
    createEAttribute(blockStatePropertyPredicateEClass, BLOCK_STATE_PROPERTY_PREDICATE__NAME);
    createEAttribute(blockStatePropertyPredicateEClass, BLOCK_STATE_PROPERTY_PREDICATE__VALUE);
    createEReference(blockStatePropertyPredicateEClass, BLOCK_STATE_PROPERTY_PREDICATE__VALUE_RANGE);

    fluidPredicateEClass = createEClass(FLUID_PREDICATE);
    createEAttribute(fluidPredicateEClass, FLUID_PREDICATE__TAG);
    createEAttribute(fluidPredicateEClass, FLUID_PREDICATE__FLUID);
    createEAttribute(fluidPredicateEClass, FLUID_PREDICATE__STATE_DEFINED);
    createEReference(fluidPredicateEClass, FLUID_PREDICATE__PROPERTIES);

    mcJsonValueEClass = createEClass(MC_JSON_VALUE);

    mcJsonObjectEClass = createEClass(MC_JSON_OBJECT);
    createEReference(mcJsonObjectEClass, MC_JSON_OBJECT__ENTRIES);

    mcJsonEntryEClass = createEClass(MC_JSON_ENTRY);
    createEAttribute(mcJsonEntryEClass, MC_JSON_ENTRY__NAME);
    createEReference(mcJsonEntryEClass, MC_JSON_ENTRY__VALUE);

    mcJsonArrayEClass = createEClass(MC_JSON_ARRAY);
    createEReference(mcJsonArrayEClass, MC_JSON_ARRAY__ELEMENTS);

    mcJsonStringEClass = createEClass(MC_JSON_STRING);
    createEAttribute(mcJsonStringEClass, MC_JSON_STRING__VALUE);

    mcJsonNumberEClass = createEClass(MC_JSON_NUMBER);

    mcJsonIntegralEClass = createEClass(MC_JSON_INTEGRAL);
    createEAttribute(mcJsonIntegralEClass, MC_JSON_INTEGRAL__VALUE);

    mcJsonFloatingPointEClass = createEClass(MC_JSON_FLOATING_POINT);
    createEAttribute(mcJsonFloatingPointEClass, MC_JSON_FLOATING_POINT__VALUE);

    mcJsonBooleanEClass = createEClass(MC_JSON_BOOLEAN);
    createEAttribute(mcJsonBooleanEClass, MC_JSON_BOOLEAN__VALUE);

    mcJsonNullEClass = createEClass(MC_JSON_NULL);

    longRangeEClass = createEClass(LONG_RANGE);

    exactLongRangeEClass = createEClass(EXACT_LONG_RANGE);
    createEAttribute(exactLongRangeEClass, EXACT_LONG_RANGE__VALUE);

    normalLongRangeEClass = createEClass(NORMAL_LONG_RANGE);
    createEAttribute(normalLongRangeEClass, NORMAL_LONG_RANGE__MIN);
    createEAttribute(normalLongRangeEClass, NORMAL_LONG_RANGE__MAX);

    doubleRangeEClass = createEClass(DOUBLE_RANGE);

    exactDoubleRangeEClass = createEClass(EXACT_DOUBLE_RANGE);
    createEAttribute(exactDoubleRangeEClass, EXACT_DOUBLE_RANGE__VALUE);

    normalDoubleRangeEClass = createEClass(NORMAL_DOUBLE_RANGE);
    createEAttribute(normalDoubleRangeEClass, NORMAL_DOUBLE_RANGE__MIN);
    createEAttribute(normalDoubleRangeEClass, NORMAL_DOUBLE_RANGE__MAX);

    lootFunctionWithConditionsEClass = createEClass(LOOT_FUNCTION_WITH_CONDITIONS);
    createEAttribute(lootFunctionWithConditionsEClass, LOOT_FUNCTION_WITH_CONDITIONS__CONDITIONS_DEFINED);
    createEReference(lootFunctionWithConditionsEClass, LOOT_FUNCTION_WITH_CONDITIONS__CONDITIONS);
    createEReference(lootFunctionWithConditionsEClass, LOOT_FUNCTION_WITH_CONDITIONS__FUNCTION);

    alternativeLootConditionEClass = createEClass(ALTERNATIVE_LOOT_CONDITION);
    createEReference(alternativeLootConditionEClass, ALTERNATIVE_LOOT_CONDITION__ALTERNATIVES);

    invertedLootConditionEClass = createEClass(INVERTED_LOOT_CONDITION);
    createEReference(invertedLootConditionEClass, INVERTED_LOOT_CONDITION__TERM);

    // Create enums
    enumEquipmentSlotEEnum = createEEnum(ENUM_EQUIPMENT_SLOT);
    enumGamemodeEEnum = createEEnum(ENUM_GAMEMODE);
    enumLootTableTypeEEnum = createEEnum(ENUM_LOOT_TABLE_TYPE);
    enumBonusFormulaEEnum = createEEnum(ENUM_BONUS_FORMULA);
    enumNBTSourceEEnum = createEEnum(ENUM_NBT_SOURCE);
    enumAttributeModifierOperationEEnum = createEEnum(ENUM_ATTRIBUTE_MODIFIER_OPERATION);
    enumEntitySourceEEnum = createEEnum(ENUM_ENTITY_SOURCE);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private boolean isInitialized = false;

  /**
   * Complete the initialization of the package and its meta-model.  This
   * method is guarded to have no affect on any invocation but its first.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void initializePackageContents()
  {
    if (isInitialized) return;
    isInitialized = true;

    // Initialize package
    setName(eNAME);
    setNsPrefix(eNS_PREFIX);
    setNsURI(eNS_URI);

    // Create type parameters

    // Set bounds for type parameters

    // Add supertypes to classes
    applyBonusLootFunctionEClass.getESuperTypes().add(this.getLootFunction());
    copyNameLootFunctionEClass.getESuperTypes().add(this.getLootFunction());
    copyNBTLootFunctionEClass.getESuperTypes().add(this.getLootFunction());
    appendNBTOperationEClass.getESuperTypes().add(this.getNBTOperation());
    replaceNBTOperationEClass.getESuperTypes().add(this.getNBTOperation());
    mergeNBTOperationEClass.getESuperTypes().add(this.getNBTOperation());
    copyStateLootFunctionEClass.getESuperTypes().add(this.getLootFunction());
    enchantRandomlyLootFunctionEClass.getESuperTypes().add(this.getLootFunction());
    enchantWithLevelsLootFunctionEClass.getESuperTypes().add(this.getLootFunction());
    explorationMapLootFunctionEClass.getESuperTypes().add(this.getLootFunction());
    explosionDecayLootFunctionEClass.getESuperTypes().add(this.getLootFunction());
    furnaceSmeltLootFunctionEClass.getESuperTypes().add(this.getLootFunction());
    fillPlayerHeadLootFunctionEClass.getESuperTypes().add(this.getLootFunction());
    limitCountLootFunctionEClass.getESuperTypes().add(this.getLootFunction());
    lootingEnchantLootFunctionEClass.getESuperTypes().add(this.getLootFunction());
    setAttributesLootFunctionEClass.getESuperTypes().add(this.getLootFunction());
    setContentsLootFunctionEClass.getESuperTypes().add(this.getLootFunction());
    setCountLootFunctionEClass.getESuperTypes().add(this.getLootFunction());
    exactCountEClass.getESuperTypes().add(this.getCount());
    specialCountEClass.getESuperTypes().add(this.getCount());
    uniformCountEClass.getESuperTypes().add(this.getSpecialCount());
    binomialCountEClass.getESuperTypes().add(this.getSpecialCount());
    setDamageLootFunctionEClass.getESuperTypes().add(this.getLootFunction());
    setLoreLootFunctionEClass.getESuperTypes().add(this.getLootFunction());
    setNameLootFunctionEClass.getESuperTypes().add(this.getLootFunction());
    setNBTLootFunctionEClass.getESuperTypes().add(this.getLootFunction());
    setStewEffectLootFunctionEClass.getESuperTypes().add(this.getLootFunction());
    namedLootConditionEClass.getESuperTypes().add(this.getLootCondition());
    blockStatePropertiesLootConditionEClass.getESuperTypes().add(this.getNamedLootCondition());
    damageSourcePropertiesLootConditionEClass.getESuperTypes().add(this.getNamedLootCondition());
    entityPropertiesLootConditionEClass.getESuperTypes().add(this.getNamedLootCondition());
    entityScoresLootConditionEClass.getESuperTypes().add(this.getNamedLootCondition());
    killedByPlayerLootConditionEClass.getESuperTypes().add(this.getNamedLootCondition());
    locationCheckLootConditionEClass.getESuperTypes().add(this.getNamedLootCondition());
    matchToolLootConditionEClass.getESuperTypes().add(this.getNamedLootCondition());
    randomChanceLootConditionEClass.getESuperTypes().add(this.getNamedLootCondition());
    referenceLootConditionEClass.getESuperTypes().add(this.getNamedLootCondition());
    survivesExplosionLootConditionEClass.getESuperTypes().add(this.getNamedLootCondition());
    tableBonusLootConditionEClass.getESuperTypes().add(this.getNamedLootCondition());
    timeCheckLootConditionEClass.getESuperTypes().add(this.getNamedLootCondition());
    toolEnchantmentLootConditionEClass.getESuperTypes().add(this.getNamedLootCondition());
    weatherCheckLootConditionEClass.getESuperTypes().add(this.getNamedLootCondition());
    singleStatisticPredicateEClass.getESuperTypes().add(this.getStatisticPredicate());
    namespacedStatisticPredicateEClass.getESuperTypes().add(this.getStatisticPredicate());
    mcJsonObjectEClass.getESuperTypes().add(this.getMCJsonValue());
    mcJsonArrayEClass.getESuperTypes().add(this.getMCJsonValue());
    mcJsonStringEClass.getESuperTypes().add(this.getMCJsonValue());
    mcJsonNumberEClass.getESuperTypes().add(this.getMCJsonValue());
    mcJsonIntegralEClass.getESuperTypes().add(this.getMCJsonNumber());
    mcJsonFloatingPointEClass.getESuperTypes().add(this.getMCJsonNumber());
    mcJsonBooleanEClass.getESuperTypes().add(this.getMCJsonValue());
    mcJsonNullEClass.getESuperTypes().add(this.getMCJsonValue());
    exactLongRangeEClass.getESuperTypes().add(this.getLongRange());
    normalLongRangeEClass.getESuperTypes().add(this.getLongRange());
    exactDoubleRangeEClass.getESuperTypes().add(this.getDoubleRange());
    normalDoubleRangeEClass.getESuperTypes().add(this.getDoubleRange());
    lootFunctionWithConditionsEClass.getESuperTypes().add(this.getLootFunction());
    alternativeLootConditionEClass.getESuperTypes().add(this.getLootCondition());
    invertedLootConditionEClass.getESuperTypes().add(this.getLootCondition());

    // Initialize classes and features; add operations and parameters
    initEClass(lootTableEClass, LootTable.class, "LootTable", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getLootTable_TypeDefined(), ecorePackage.getEBoolean(), "typeDefined", null, 0, 1, LootTable.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getLootTable_Type(), this.getEnumLootTableType(), "type", null, 0, 1, LootTable.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getLootTable_PoolsDefined(), ecorePackage.getEBoolean(), "poolsDefined", null, 0, 1, LootTable.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getLootTable_Pools(), this.getLootPool(), null, "pools", null, 0, -1, LootTable.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(lootPoolEClass, LootPool.class, "LootPool", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getLootPool_ConditionsDefined(), ecorePackage.getEBoolean(), "conditionsDefined", null, 0, 1, LootPool.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getLootPool_Conditions(), this.getLootCondition(), null, "conditions", null, 0, -1, LootPool.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getLootPool_Name(), ecorePackage.getEString(), "name", null, 0, 1, LootPool.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getLootPool_RollsDefined(), ecorePackage.getEBoolean(), "rollsDefined", null, 0, 1, LootPool.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getLootPool_Rolls(), this.getLongRange(), null, "rolls", null, 0, 1, LootPool.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getLootPool_EntriesDefined(), ecorePackage.getEBoolean(), "entriesDefined", null, 0, 1, LootPool.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getLootPool_Entries(), this.getLootEntry(), null, "entries", null, 0, -1, LootPool.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getLootPool_BonusRollsDefined(), ecorePackage.getEBoolean(), "bonusRollsDefined", null, 0, 1, LootPool.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getLootPool_BonusRolls(), this.getDoubleRange(), null, "bonusRolls", null, 0, 1, LootPool.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getLootPool_FunctionsDefined(), ecorePackage.getEBoolean(), "functionsDefined", null, 0, 1, LootPool.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getLootPool_Functions(), this.getLootFunction(), null, "functions", null, 0, -1, LootPool.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(lootEntryEClass, LootEntry.class, "LootEntry", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getLootEntry_ConditionsDefined(), ecorePackage.getEBoolean(), "conditionsDefined", null, 0, 1, LootEntry.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getLootEntry_Conditions(), this.getLootCondition(), null, "conditions", null, 0, -1, LootEntry.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getLootEntry_Type(), ecorePackage.getEString(), "type", null, 0, 1, LootEntry.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getLootEntry_Name(), ecorePackage.getEString(), "name", null, 0, 1, LootEntry.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getLootEntry_QualityDefined(), ecorePackage.getEBoolean(), "qualityDefined", null, 0, 1, LootEntry.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getLootEntry_Quality(), ecorePackage.getELong(), "quality", null, 0, 1, LootEntry.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getLootEntry_ExpandDefined(), ecorePackage.getEBoolean(), "expandDefined", null, 0, 1, LootEntry.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getLootEntry_Expand(), ecorePackage.getEBoolean(), "expand", null, 0, 1, LootEntry.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getLootEntry_FunctionsDefined(), ecorePackage.getEBoolean(), "functionsDefined", null, 0, 1, LootEntry.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getLootEntry_Functions(), this.getLootFunction(), null, "functions", null, 0, -1, LootEntry.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getLootEntry_ChildrenDefined(), ecorePackage.getEBoolean(), "childrenDefined", null, 0, 1, LootEntry.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getLootEntry_Children(), this.getLootEntry(), null, "children", null, 0, -1, LootEntry.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getLootEntry_EntryName(), ecorePackage.getEString(), "entryName", null, 0, 1, LootEntry.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getLootEntry_WeightDefined(), ecorePackage.getEBoolean(), "weightDefined", null, 0, 1, LootEntry.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getLootEntry_Weight(), ecorePackage.getELong(), "weight", null, 0, 1, LootEntry.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(lootFunctionEClass, LootFunction.class, "LootFunction", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getLootFunction_Id(), ecorePackage.getEString(), "id", null, 0, 1, LootFunction.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(applyBonusLootFunctionEClass, ApplyBonusLootFunction.class, "ApplyBonusLootFunction", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getApplyBonusLootFunction_Enchantment(), ecorePackage.getEString(), "enchantment", null, 0, 1, ApplyBonusLootFunction.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getApplyBonusLootFunction_Formula(), this.getEnumBonusFormula(), "formula", null, 0, 1, ApplyBonusLootFunction.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getApplyBonusLootFunction_ExtraDefined(), ecorePackage.getEBoolean(), "extraDefined", null, 0, 1, ApplyBonusLootFunction.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getApplyBonusLootFunction_Extra(), ecorePackage.getELong(), "extra", null, 0, 1, ApplyBonusLootFunction.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getApplyBonusLootFunction_ProbabilityDefined(), ecorePackage.getEBoolean(), "probabilityDefined", null, 0, 1, ApplyBonusLootFunction.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getApplyBonusLootFunction_Probability(), ecorePackage.getEDouble(), "probability", null, 0, 1, ApplyBonusLootFunction.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getApplyBonusLootFunction_BonusMultiplierDefined(), ecorePackage.getEBoolean(), "bonusMultiplierDefined", null, 0, 1, ApplyBonusLootFunction.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getApplyBonusLootFunction_BonusMultiplier(), ecorePackage.getEDouble(), "bonusMultiplier", null, 0, 1, ApplyBonusLootFunction.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(copyNameLootFunctionEClass, CopyNameLootFunction.class, "CopyNameLootFunction", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getCopyNameLootFunction_Source(), this.getEnumNBTSource(), "source", null, 0, 1, CopyNameLootFunction.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(copyNBTLootFunctionEClass, CopyNBTLootFunction.class, "CopyNBTLootFunction", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getCopyNBTLootFunction_Source(), this.getEnumNBTSource(), "source", null, 0, 1, CopyNBTLootFunction.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getCopyNBTLootFunction_Ops(), this.getNBTOperation(), null, "ops", null, 0, -1, CopyNBTLootFunction.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(nbtOperationEClass, NBTOperation.class, "NBTOperation", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getNBTOperation_Id(), ecorePackage.getEString(), "id", null, 0, 1, NBTOperation.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getNBTOperation_Source(), ecorePackage.getEString(), "source", null, 0, 1, NBTOperation.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getNBTOperation_Target(), ecorePackage.getEString(), "target", null, 0, 1, NBTOperation.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(appendNBTOperationEClass, AppendNBTOperation.class, "AppendNBTOperation", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(replaceNBTOperationEClass, ReplaceNBTOperation.class, "ReplaceNBTOperation", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(mergeNBTOperationEClass, MergeNBTOperation.class, "MergeNBTOperation", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(copyStateLootFunctionEClass, CopyStateLootFunction.class, "CopyStateLootFunction", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getCopyStateLootFunction_Block(), ecorePackage.getEString(), "block", null, 0, 1, CopyStateLootFunction.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getCopyStateLootFunction_Properties(), ecorePackage.getEString(), "properties", null, 0, -1, CopyStateLootFunction.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, !IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(enchantRandomlyLootFunctionEClass, EnchantRandomlyLootFunction.class, "EnchantRandomlyLootFunction", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getEnchantRandomlyLootFunction_Enchantments(), ecorePackage.getEString(), "enchantments", null, 0, -1, EnchantRandomlyLootFunction.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, !IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(enchantWithLevelsLootFunctionEClass, EnchantWithLevelsLootFunction.class, "EnchantWithLevelsLootFunction", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getEnchantWithLevelsLootFunction_TreasureDefined(), ecorePackage.getEBoolean(), "treasureDefined", null, 0, 1, EnchantWithLevelsLootFunction.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getEnchantWithLevelsLootFunction_Treasure(), ecorePackage.getEBoolean(), "treasure", null, 0, 1, EnchantWithLevelsLootFunction.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getEnchantWithLevelsLootFunction_Levels(), this.getLongRange(), null, "levels", null, 0, 1, EnchantWithLevelsLootFunction.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(explorationMapLootFunctionEClass, ExplorationMapLootFunction.class, "ExplorationMapLootFunction", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getExplorationMapLootFunction_Destination(), ecorePackage.getEString(), "destination", null, 0, 1, ExplorationMapLootFunction.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getExplorationMapLootFunction_Decoration(), ecorePackage.getEString(), "decoration", null, 0, 1, ExplorationMapLootFunction.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getExplorationMapLootFunction_ZoomDefined(), ecorePackage.getEBoolean(), "zoomDefined", null, 0, 1, ExplorationMapLootFunction.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getExplorationMapLootFunction_Zoom(), ecorePackage.getELong(), "zoom", null, 0, 1, ExplorationMapLootFunction.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getExplorationMapLootFunction_SearchRadiusDefined(), ecorePackage.getEBoolean(), "searchRadiusDefined", null, 0, 1, ExplorationMapLootFunction.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getExplorationMapLootFunction_SearchRadius(), ecorePackage.getELong(), "searchRadius", null, 0, 1, ExplorationMapLootFunction.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getExplorationMapLootFunction_SkipExistingChunksDefined(), ecorePackage.getEBoolean(), "skipExistingChunksDefined", null, 0, 1, ExplorationMapLootFunction.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getExplorationMapLootFunction_SkipExistingChunks(), ecorePackage.getEBoolean(), "skipExistingChunks", null, 0, 1, ExplorationMapLootFunction.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(explosionDecayLootFunctionEClass, ExplosionDecayLootFunction.class, "ExplosionDecayLootFunction", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(furnaceSmeltLootFunctionEClass, FurnaceSmeltLootFunction.class, "FurnaceSmeltLootFunction", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(fillPlayerHeadLootFunctionEClass, FillPlayerHeadLootFunction.class, "FillPlayerHeadLootFunction", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getFillPlayerHeadLootFunction_Entity(), this.getEnumEntitySource(), "entity", null, 0, 1, FillPlayerHeadLootFunction.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(limitCountLootFunctionEClass, LimitCountLootFunction.class, "LimitCountLootFunction", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getLimitCountLootFunction_Limit(), this.getLongRange(), null, "limit", null, 0, 1, LimitCountLootFunction.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(lootingEnchantLootFunctionEClass, LootingEnchantLootFunction.class, "LootingEnchantLootFunction", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getLootingEnchantLootFunction_LimitDefined(), ecorePackage.getEBoolean(), "limitDefined", null, 0, 1, LootingEnchantLootFunction.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getLootingEnchantLootFunction_Limit(), ecorePackage.getELong(), "limit", null, 0, 1, LootingEnchantLootFunction.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getLootingEnchantLootFunction_Count(), this.getLongRange(), null, "count", null, 0, 1, LootingEnchantLootFunction.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(setAttributesLootFunctionEClass, SetAttributesLootFunction.class, "SetAttributesLootFunction", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getSetAttributesLootFunction_Modifiers(), this.getAttributeModifier(), null, "modifiers", null, 0, -1, SetAttributesLootFunction.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(attributeModifierEClass, AttributeModifier.class, "AttributeModifier", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getAttributeModifier_Id(), ecorePackage.getEString(), "id", null, 0, 1, AttributeModifier.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getAttributeModifier_Operation(), this.getEnumAttributeModifierOperation(), "operation", null, 0, 1, AttributeModifier.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getAttributeModifier_Amount(), this.getDoubleRange(), null, "amount", null, 0, 1, AttributeModifier.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getAttributeModifier_AttributeName(), ecorePackage.getEString(), "attributeName", null, 0, 1, AttributeModifier.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getAttributeModifier_Uuid(), ecorePackage.getEString(), "uuid", null, 0, 1, AttributeModifier.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getAttributeModifier_SlotDefined(), ecorePackage.getEBoolean(), "slotDefined", null, 0, 1, AttributeModifier.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getAttributeModifier_SingleSlot(), ecorePackage.getEBoolean(), "singleSlot", null, 0, 1, AttributeModifier.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getAttributeModifier_Slots(), this.getEnumEquipmentSlot(), "slots", null, 0, -1, AttributeModifier.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, !IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(setContentsLootFunctionEClass, SetContentsLootFunction.class, "SetContentsLootFunction", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getSetContentsLootFunction_Entries(), this.getLootEntry(), null, "entries", null, 0, -1, SetContentsLootFunction.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(setCountLootFunctionEClass, SetCountLootFunction.class, "SetCountLootFunction", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getSetCountLootFunction_Count(), this.getCount(), null, "count", null, 0, 1, SetCountLootFunction.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(countEClass, Count.class, "Count", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(exactCountEClass, ExactCount.class, "ExactCount", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getExactCount_Amount(), ecorePackage.getELong(), "amount", null, 0, 1, ExactCount.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(specialCountEClass, SpecialCount.class, "SpecialCount", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(uniformCountEClass, UniformCount.class, "UniformCount", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getUniformCount_Min(), ecorePackage.getELong(), "min", null, 0, 1, UniformCount.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getUniformCount_Max(), ecorePackage.getELong(), "max", null, 0, 1, UniformCount.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(binomialCountEClass, BinomialCount.class, "BinomialCount", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getBinomialCount_N(), ecorePackage.getELong(), "n", null, 0, 1, BinomialCount.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getBinomialCount_P(), ecorePackage.getEDouble(), "p", null, 0, 1, BinomialCount.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(setDamageLootFunctionEClass, SetDamageLootFunction.class, "SetDamageLootFunction", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getSetDamageLootFunction_Damage(), this.getDoubleRange(), null, "damage", null, 0, 1, SetDamageLootFunction.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(setLoreLootFunctionEClass, SetLoreLootFunction.class, "SetLoreLootFunction", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getSetLoreLootFunction_ReplaceDefined(), ecorePackage.getEBoolean(), "replaceDefined", null, 0, 1, SetLoreLootFunction.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getSetLoreLootFunction_Replace(), ecorePackage.getEBoolean(), "replace", null, 0, 1, SetLoreLootFunction.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getSetLoreLootFunction_Entity(), this.getEnumEntitySource(), "entity", null, 0, 1, SetLoreLootFunction.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getSetLoreLootFunction_Lore(), this.getMCJsonValue(), null, "lore", null, 0, -1, SetLoreLootFunction.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(setNameLootFunctionEClass, SetNameLootFunction.class, "SetNameLootFunction", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getSetNameLootFunction_Entity(), this.getEnumEntitySource(), "entity", null, 0, 1, SetNameLootFunction.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getSetNameLootFunction_ItemName(), this.getMCJsonValue(), null, "itemName", null, 0, 1, SetNameLootFunction.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(setNBTLootFunctionEClass, SetNBTLootFunction.class, "SetNBTLootFunction", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getSetNBTLootFunction_Tag(), ecorePackage.getEString(), "tag", null, 0, 1, SetNBTLootFunction.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(setStewEffectLootFunctionEClass, SetStewEffectLootFunction.class, "SetStewEffectLootFunction", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getSetStewEffectLootFunction_Effects(), this.getStewEffect(), null, "effects", null, 0, -1, SetStewEffectLootFunction.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(stewEffectEClass, StewEffect.class, "StewEffect", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getStewEffect_Type(), ecorePackage.getEString(), "type", null, 0, 1, StewEffect.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getStewEffect_Duration(), ecorePackage.getELong(), "duration", null, 0, 1, StewEffect.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(lootConditionEClass, LootCondition.class, "LootCondition", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(namedLootConditionEClass, NamedLootCondition.class, "NamedLootCondition", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getNamedLootCondition_Id(), ecorePackage.getEString(), "id", null, 0, 1, NamedLootCondition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(blockStatePropertiesLootConditionEClass, BlockStatePropertiesLootCondition.class, "BlockStatePropertiesLootCondition", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getBlockStatePropertiesLootCondition_Inverted(), ecorePackage.getEBoolean(), "inverted", null, 0, 1, BlockStatePropertiesLootCondition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getBlockStatePropertiesLootCondition_Block(), ecorePackage.getEString(), "block", null, 0, 1, BlockStatePropertiesLootCondition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getBlockStatePropertiesLootCondition_Properties(), this.getBlockStateProperty(), null, "properties", null, 0, -1, BlockStatePropertiesLootCondition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(blockStatePropertyEClass, BlockStateProperty.class, "BlockStateProperty", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getBlockStateProperty_Name(), ecorePackage.getEString(), "name", null, 0, 1, BlockStateProperty.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getBlockStateProperty_Value(), ecorePackage.getEString(), "value", null, 0, 1, BlockStateProperty.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(damageSourcePropertiesLootConditionEClass, DamageSourcePropertiesLootCondition.class, "DamageSourcePropertiesLootCondition", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getDamageSourcePropertiesLootCondition_BypassesArmorDefined(), ecorePackage.getEBoolean(), "bypassesArmorDefined", null, 0, 1, DamageSourcePropertiesLootCondition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getDamageSourcePropertiesLootCondition_BypassesArmor(), ecorePackage.getEBoolean(), "bypassesArmor", null, 0, 1, DamageSourcePropertiesLootCondition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getDamageSourcePropertiesLootCondition_BypassesInvulnerabilityDefined(), ecorePackage.getEBoolean(), "bypassesInvulnerabilityDefined", null, 0, 1, DamageSourcePropertiesLootCondition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getDamageSourcePropertiesLootCondition_BypassesInvulnerability(), ecorePackage.getEBoolean(), "bypassesInvulnerability", null, 0, 1, DamageSourcePropertiesLootCondition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getDamageSourcePropertiesLootCondition_BypassesMagicDefined(), ecorePackage.getEBoolean(), "bypassesMagicDefined", null, 0, 1, DamageSourcePropertiesLootCondition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getDamageSourcePropertiesLootCondition_BypassesMagic(), ecorePackage.getEBoolean(), "bypassesMagic", null, 0, 1, DamageSourcePropertiesLootCondition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getDamageSourcePropertiesLootCondition_DirectEntity(), this.getEntityPredicate(), null, "directEntity", null, 0, 1, DamageSourcePropertiesLootCondition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getDamageSourcePropertiesLootCondition_ExplosionDefined(), ecorePackage.getEBoolean(), "explosionDefined", null, 0, 1, DamageSourcePropertiesLootCondition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getDamageSourcePropertiesLootCondition_Explosion(), ecorePackage.getEBoolean(), "explosion", null, 0, 1, DamageSourcePropertiesLootCondition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getDamageSourcePropertiesLootCondition_FireDefined(), ecorePackage.getEBoolean(), "fireDefined", null, 0, 1, DamageSourcePropertiesLootCondition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getDamageSourcePropertiesLootCondition_Fire(), ecorePackage.getEBoolean(), "fire", null, 0, 1, DamageSourcePropertiesLootCondition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getDamageSourcePropertiesLootCondition_MagicDefined(), ecorePackage.getEBoolean(), "magicDefined", null, 0, 1, DamageSourcePropertiesLootCondition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getDamageSourcePropertiesLootCondition_Magic(), ecorePackage.getEBoolean(), "magic", null, 0, 1, DamageSourcePropertiesLootCondition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getDamageSourcePropertiesLootCondition_ProjectileDefined(), ecorePackage.getEBoolean(), "projectileDefined", null, 0, 1, DamageSourcePropertiesLootCondition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getDamageSourcePropertiesLootCondition_Projectile(), ecorePackage.getEBoolean(), "projectile", null, 0, 1, DamageSourcePropertiesLootCondition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getDamageSourcePropertiesLootCondition_LightningDefined(), ecorePackage.getEBoolean(), "lightningDefined", null, 0, 1, DamageSourcePropertiesLootCondition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getDamageSourcePropertiesLootCondition_Lightning(), ecorePackage.getEBoolean(), "lightning", null, 0, 1, DamageSourcePropertiesLootCondition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getDamageSourcePropertiesLootCondition_SourceEntity(), this.getEntityPredicate(), null, "sourceEntity", null, 0, 1, DamageSourcePropertiesLootCondition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(entityPropertiesLootConditionEClass, EntityPropertiesLootCondition.class, "EntityPropertiesLootCondition", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getEntityPropertiesLootCondition_Entity(), this.getEnumEntitySource(), "entity", null, 0, 1, EntityPropertiesLootCondition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getEntityPropertiesLootCondition_Predicate(), this.getEntityPredicate(), null, "predicate", null, 0, 1, EntityPropertiesLootCondition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(entityScoresLootConditionEClass, EntityScoresLootCondition.class, "EntityScoresLootCondition", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getEntityScoresLootCondition_Entity(), this.getEnumEntitySource(), "entity", null, 0, 1, EntityScoresLootCondition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getEntityScoresLootCondition_Scores(), this.getEntityScore(), null, "scores", null, 0, -1, EntityScoresLootCondition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(entityScoreEClass, EntityScore.class, "EntityScore", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getEntityScore_Objective(), ecorePackage.getEString(), "objective", null, 0, 1, EntityScore.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getEntityScore_Score(), this.getLongRange(), null, "score", null, 0, 1, EntityScore.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(killedByPlayerLootConditionEClass, KilledByPlayerLootCondition.class, "KilledByPlayerLootCondition", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(locationCheckLootConditionEClass, LocationCheckLootCondition.class, "LocationCheckLootCondition", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getLocationCheckLootCondition_UndefinedOffsetX(), ecorePackage.getEBoolean(), "undefinedOffsetX", null, 0, 1, LocationCheckLootCondition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getLocationCheckLootCondition_OffsetX(), ecorePackage.getELong(), "offsetX", null, 0, 1, LocationCheckLootCondition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getLocationCheckLootCondition_UndefinedOffsetY(), ecorePackage.getEBoolean(), "undefinedOffsetY", null, 0, 1, LocationCheckLootCondition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getLocationCheckLootCondition_OffsetY(), ecorePackage.getELong(), "offsetY", null, 0, 1, LocationCheckLootCondition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getLocationCheckLootCondition_UndefinedOffsetZ(), ecorePackage.getEBoolean(), "undefinedOffsetZ", null, 0, 1, LocationCheckLootCondition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getLocationCheckLootCondition_OffsetZ(), ecorePackage.getELong(), "offsetZ", null, 0, 1, LocationCheckLootCondition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getLocationCheckLootCondition_Predicate(), this.getLocationPredicate(), null, "predicate", null, 0, 1, LocationCheckLootCondition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(matchToolLootConditionEClass, MatchToolLootCondition.class, "MatchToolLootCondition", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getMatchToolLootCondition_Inverted(), ecorePackage.getEBoolean(), "inverted", null, 0, 1, MatchToolLootCondition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getMatchToolLootCondition_Predicate(), this.getItemPredicate(), null, "predicate", null, 0, 1, MatchToolLootCondition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(randomChanceLootConditionEClass, RandomChanceLootCondition.class, "RandomChanceLootCondition", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getRandomChanceLootCondition_Chance(), ecorePackage.getEDouble(), "chance", null, 0, 1, RandomChanceLootCondition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getRandomChanceLootCondition_LootingMultiplierDefined(), ecorePackage.getEBoolean(), "lootingMultiplierDefined", null, 0, 1, RandomChanceLootCondition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getRandomChanceLootCondition_LootingMultiplier(), ecorePackage.getEDouble(), "lootingMultiplier", null, 0, 1, RandomChanceLootCondition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(referenceLootConditionEClass, ReferenceLootCondition.class, "ReferenceLootCondition", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getReferenceLootCondition_Ref(), ecorePackage.getEString(), "ref", null, 0, 1, ReferenceLootCondition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(survivesExplosionLootConditionEClass, SurvivesExplosionLootCondition.class, "SurvivesExplosionLootCondition", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(tableBonusLootConditionEClass, TableBonusLootCondition.class, "TableBonusLootCondition", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getTableBonusLootCondition_Enchantment(), ecorePackage.getEString(), "enchantment", null, 0, 1, TableBonusLootCondition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getTableBonusLootCondition_Chances(), ecorePackage.getEDouble(), "chances", null, 0, -1, TableBonusLootCondition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, !IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(timeCheckLootConditionEClass, TimeCheckLootCondition.class, "TimeCheckLootCondition", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getTimeCheckLootCondition_PeriodDefined(), ecorePackage.getEBoolean(), "periodDefined", null, 0, 1, TimeCheckLootCondition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getTimeCheckLootCondition_Period(), ecorePackage.getELong(), "period", null, 0, 1, TimeCheckLootCondition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getTimeCheckLootCondition_Inverted(), ecorePackage.getEBoolean(), "inverted", null, 0, 1, TimeCheckLootCondition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getTimeCheckLootCondition_Value(), this.getLongRange(), null, "value", null, 0, 1, TimeCheckLootCondition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(toolEnchantmentLootConditionEClass, ToolEnchantmentLootCondition.class, "ToolEnchantmentLootCondition", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getToolEnchantmentLootCondition_Enchantments(), this.getEnchantmentLevel(), null, "enchantments", null, 0, -1, ToolEnchantmentLootCondition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(enchantmentLevelEClass, EnchantmentLevel.class, "EnchantmentLevel", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getEnchantmentLevel_Enchantment(), ecorePackage.getEString(), "enchantment", null, 0, 1, EnchantmentLevel.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getEnchantmentLevel_Levels(), this.getLongRange(), null, "levels", null, 0, 1, EnchantmentLevel.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(weatherCheckLootConditionEClass, WeatherCheckLootCondition.class, "WeatherCheckLootCondition", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getWeatherCheckLootCondition_Inverted(), ecorePackage.getEBoolean(), "inverted", null, 0, 1, WeatherCheckLootCondition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getWeatherCheckLootCondition_Raining(), ecorePackage.getEBoolean(), "raining", null, 0, 1, WeatherCheckLootCondition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getWeatherCheckLootCondition_Thundering(), ecorePackage.getEBoolean(), "thundering", null, 0, 1, WeatherCheckLootCondition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(entityPredicateEClass, EntityPredicate.class, "EntityPredicate", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getEntityPredicate_AbsoluteDistance(), this.getDoubleRange(), null, "absoluteDistance", null, 0, 1, EntityPredicate.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getEntityPredicate_HorizontalDistance(), this.getDoubleRange(), null, "horizontalDistance", null, 0, 1, EntityPredicate.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getEntityPredicate_XDistance(), this.getDoubleRange(), null, "xDistance", null, 0, 1, EntityPredicate.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getEntityPredicate_YDistance(), this.getDoubleRange(), null, "yDistance", null, 0, 1, EntityPredicate.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getEntityPredicate_ZDistance(), this.getDoubleRange(), null, "zDistance", null, 0, 1, EntityPredicate.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getEntityPredicate_EffectsDefined(), ecorePackage.getEBoolean(), "effectsDefined", null, 0, 1, EntityPredicate.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getEntityPredicate_Effects(), this.getEffectPredicate(), null, "effects", null, 0, -1, EntityPredicate.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getEntityPredicate_Equipment(), this.getEquipmentPredicate(), null, "equipment", null, 0, -1, EntityPredicate.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getEntityPredicate_DefaultEquipment(), this.getItemPredicate(), null, "defaultEquipment", null, 0, 1, EntityPredicate.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getEntityPredicate_Flags(), this.getEntityFlags(), null, "flags", null, 0, 1, EntityPredicate.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getEntityPredicate_Nbt(), ecorePackage.getEString(), "nbt", null, 0, 1, EntityPredicate.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getEntityPredicate_Player(), this.getPlayerPredicate(), null, "player", null, 0, 1, EntityPredicate.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getEntityPredicate_Team(), ecorePackage.getEString(), "team", null, 0, 1, EntityPredicate.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getEntityPredicate_Type(), ecorePackage.getEString(), "type", null, 0, 1, EntityPredicate.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getEntityPredicate_Location(), this.getLocationPredicate(), null, "location", null, 0, 1, EntityPredicate.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getEntityPredicate_FishingHook(), this.getFishingHookPredicate(), null, "fishingHook", null, 0, 1, EntityPredicate.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(fishingHookPredicateEClass, FishingHookPredicate.class, "FishingHookPredicate", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getFishingHookPredicate_InOpenWaterDefined(), ecorePackage.getEBoolean(), "inOpenWaterDefined", null, 0, 1, FishingHookPredicate.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getFishingHookPredicate_InOpenWater(), ecorePackage.getEBoolean(), "inOpenWater", null, 0, 1, FishingHookPredicate.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(effectPredicateEClass, EffectPredicate.class, "EffectPredicate", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getEffectPredicate_Id(), ecorePackage.getEString(), "id", null, 0, 1, EffectPredicate.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getEffectPredicate_Amplifier(), this.getLongRange(), null, "amplifier", null, 0, 1, EffectPredicate.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getEffectPredicate_Duration(), this.getLongRange(), null, "duration", null, 0, 1, EffectPredicate.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(equipmentPredicateEClass, EquipmentPredicate.class, "EquipmentPredicate", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getEquipmentPredicate_Slots(), this.getEnumEquipmentSlot(), "slots", null, 0, -1, EquipmentPredicate.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, !IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getEquipmentPredicate_Predicate(), this.getItemPredicate(), null, "predicate", null, 0, 1, EquipmentPredicate.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(entityFlagsEClass, EntityFlags.class, "EntityFlags", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getEntityFlags_OnFireDefined(), ecorePackage.getEBoolean(), "onFireDefined", null, 0, 1, EntityFlags.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getEntityFlags_OnFire(), ecorePackage.getEBoolean(), "onFire", null, 0, 1, EntityFlags.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getEntityFlags_SneakingDefined(), ecorePackage.getEBoolean(), "sneakingDefined", null, 0, 1, EntityFlags.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getEntityFlags_Sneaking(), ecorePackage.getEBoolean(), "sneaking", null, 0, 1, EntityFlags.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getEntityFlags_SprintingDefined(), ecorePackage.getEBoolean(), "sprintingDefined", null, 0, 1, EntityFlags.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getEntityFlags_Sprinting(), ecorePackage.getEBoolean(), "sprinting", null, 0, 1, EntityFlags.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getEntityFlags_SwimmingDefined(), ecorePackage.getEBoolean(), "swimmingDefined", null, 0, 1, EntityFlags.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getEntityFlags_Swimming(), ecorePackage.getEBoolean(), "swimming", null, 0, 1, EntityFlags.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getEntityFlags_BabyDefined(), ecorePackage.getEBoolean(), "babyDefined", null, 0, 1, EntityFlags.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getEntityFlags_Baby(), ecorePackage.getEBoolean(), "baby", null, 0, 1, EntityFlags.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(playerPredicateEClass, PlayerPredicate.class, "PlayerPredicate", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getPlayerPredicate_AdvancementsDefined(), ecorePackage.getEBoolean(), "advancementsDefined", null, 0, 1, PlayerPredicate.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getPlayerPredicate_Advancements(), this.getAdvancementPredicate(), null, "advancements", null, 0, -1, PlayerPredicate.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getPlayerPredicate_GamemodeDefined(), ecorePackage.getEBoolean(), "gamemodeDefined", null, 0, 1, PlayerPredicate.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getPlayerPredicate_Gamemode(), this.getEnumGamemode(), "gamemode", null, 0, 1, PlayerPredicate.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getPlayerPredicate_RecipesDefined(), ecorePackage.getEBoolean(), "recipesDefined", null, 0, 1, PlayerPredicate.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getPlayerPredicate_Recipes(), this.getRecipePredicate(), null, "recipes", null, 0, -1, PlayerPredicate.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getPlayerPredicate_StatsDefined(), ecorePackage.getEBoolean(), "statsDefined", null, 0, 1, PlayerPredicate.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getPlayerPredicate_Stats(), this.getStatisticPredicate(), null, "stats", null, 0, -1, PlayerPredicate.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(advancementPredicateEClass, AdvancementPredicate.class, "AdvancementPredicate", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getAdvancementPredicate_Name(), ecorePackage.getEString(), "name", null, 0, 1, AdvancementPredicate.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getAdvancementPredicate_DidNotGet(), ecorePackage.getEBoolean(), "didNotGet", null, 0, 1, AdvancementPredicate.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getAdvancementPredicate_Criteria(), this.getAdvancementCriteria(), null, "criteria", null, 0, -1, AdvancementPredicate.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(advancementCriteriaEClass, AdvancementCriteria.class, "AdvancementCriteria", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getAdvancementCriteria_CriteriaNames(), ecorePackage.getEString(), "criteriaNames", null, 0, -1, AdvancementCriteria.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, !IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getAdvancementCriteria_DidNotGet(), ecorePackage.getEBoolean(), "didNotGet", null, 0, 1, AdvancementCriteria.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(recipePredicateEClass, RecipePredicate.class, "RecipePredicate", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getRecipePredicate_Recipe(), ecorePackage.getEString(), "recipe", null, 0, 1, RecipePredicate.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getRecipePredicate_DidNotGet(), ecorePackage.getEBoolean(), "didNotGet", null, 0, 1, RecipePredicate.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(statisticPredicateEClass, StatisticPredicate.class, "StatisticPredicate", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getStatisticPredicate_Type(), ecorePackage.getEString(), "type", null, 0, 1, StatisticPredicate.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(singleStatisticPredicateEClass, SingleStatisticPredicate.class, "SingleStatisticPredicate", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getSingleStatisticPredicate_Stat(), ecorePackage.getEString(), "stat", null, 0, 1, SingleStatisticPredicate.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getSingleStatisticPredicate_Value(), this.getLongRange(), null, "value", null, 0, 1, SingleStatisticPredicate.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(namespacedStatisticPredicateEClass, NamespacedStatisticPredicate.class, "NamespacedStatisticPredicate", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getNamespacedStatisticPredicate_Stats(), this.getUnnamespacedStatisticPredicate(), null, "stats", null, 0, -1, NamespacedStatisticPredicate.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(unnamespacedStatisticPredicateEClass, UnnamespacedStatisticPredicate.class, "UnnamespacedStatisticPredicate", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getUnnamespacedStatisticPredicate_Stat(), ecorePackage.getEString(), "stat", null, 0, 1, UnnamespacedStatisticPredicate.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getUnnamespacedStatisticPredicate_Value(), this.getLongRange(), null, "value", null, 0, 1, UnnamespacedStatisticPredicate.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(locationPredicateEClass, LocationPredicate.class, "LocationPredicate", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getLocationPredicate_Biome(), ecorePackage.getEString(), "biome", null, 0, 1, LocationPredicate.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getLocationPredicate_Block(), this.getBlockPredicate(), null, "block", null, 0, 1, LocationPredicate.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getLocationPredicate_Dimension(), ecorePackage.getEString(), "dimension", null, 0, 1, LocationPredicate.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getLocationPredicate_Feature(), ecorePackage.getEString(), "feature", null, 0, 1, LocationPredicate.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getLocationPredicate_Fluid(), this.getFluidPredicate(), null, "fluid", null, 0, 1, LocationPredicate.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getLocationPredicate_Light(), this.getLongRange(), null, "light", null, 0, 1, LocationPredicate.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getLocationPredicate_XPos(), this.getDoubleRange(), null, "xPos", null, 0, 1, LocationPredicate.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getLocationPredicate_YPos(), this.getDoubleRange(), null, "yPos", null, 0, 1, LocationPredicate.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getLocationPredicate_ZPos(), this.getDoubleRange(), null, "zPos", null, 0, 1, LocationPredicate.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(itemPredicateEClass, ItemPredicate.class, "ItemPredicate", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getItemPredicate_Tag(), ecorePackage.getEString(), "tag", null, 0, 1, ItemPredicate.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getItemPredicate_Item(), ecorePackage.getEString(), "item", null, 0, 1, ItemPredicate.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getItemPredicate_CountDefined(), ecorePackage.getEBoolean(), "countDefined", null, 0, 1, ItemPredicate.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getItemPredicate_Count(), this.getLongRange(), null, "count", null, 0, 1, ItemPredicate.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getItemPredicate_DurabilityDefined(), ecorePackage.getEBoolean(), "durabilityDefined", null, 0, 1, ItemPredicate.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getItemPredicate_Durability(), this.getLongRange(), null, "durability", null, 0, 1, ItemPredicate.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getItemPredicate_EnchantmentsDefined(), ecorePackage.getEBoolean(), "enchantmentsDefined", null, 0, 1, ItemPredicate.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getItemPredicate_Enchantments(), this.getEnchantmentLevel(), null, "enchantments", null, 0, -1, ItemPredicate.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getItemPredicate_StoredEnchantmentsDefined(), ecorePackage.getEBoolean(), "storedEnchantmentsDefined", null, 0, 1, ItemPredicate.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getItemPredicate_StoredEnchantments(), this.getEnchantmentLevel(), null, "storedEnchantments", null, 0, -1, ItemPredicate.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getItemPredicate_NbtDefined(), ecorePackage.getEBoolean(), "nbtDefined", null, 0, 1, ItemPredicate.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getItemPredicate_Nbt(), ecorePackage.getEString(), "nbt", null, 0, 1, ItemPredicate.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getItemPredicate_PotionDefined(), ecorePackage.getEBoolean(), "potionDefined", null, 0, 1, ItemPredicate.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getItemPredicate_Potion(), ecorePackage.getEString(), "potion", null, 0, 1, ItemPredicate.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(blockPredicateEClass, BlockPredicate.class, "BlockPredicate", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getBlockPredicate_Tag(), ecorePackage.getEString(), "tag", null, 0, 1, BlockPredicate.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getBlockPredicate_Block(), ecorePackage.getEString(), "block", null, 0, 1, BlockPredicate.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getBlockPredicate_Nbt(), ecorePackage.getEString(), "nbt", null, 0, 1, BlockPredicate.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getBlockPredicate_StateDefined(), ecorePackage.getEBoolean(), "stateDefined", null, 0, 1, BlockPredicate.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getBlockPredicate_Properties(), this.getBlockStatePropertyPredicate(), null, "properties", null, 0, -1, BlockPredicate.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(blockStatePropertyPredicateEClass, BlockStatePropertyPredicate.class, "BlockStatePropertyPredicate", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getBlockStatePropertyPredicate_Name(), ecorePackage.getEString(), "name", null, 0, 1, BlockStatePropertyPredicate.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getBlockStatePropertyPredicate_Value(), ecorePackage.getEString(), "value", null, 0, 1, BlockStatePropertyPredicate.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getBlockStatePropertyPredicate_ValueRange(), this.getNormalLongRange(), null, "valueRange", null, 0, 1, BlockStatePropertyPredicate.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(fluidPredicateEClass, FluidPredicate.class, "FluidPredicate", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getFluidPredicate_Tag(), ecorePackage.getEString(), "tag", null, 0, 1, FluidPredicate.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getFluidPredicate_Fluid(), ecorePackage.getEString(), "fluid", null, 0, 1, FluidPredicate.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getFluidPredicate_StateDefined(), ecorePackage.getEBoolean(), "stateDefined", null, 0, 1, FluidPredicate.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getFluidPredicate_Properties(), this.getBlockStatePropertyPredicate(), null, "properties", null, 0, -1, FluidPredicate.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(mcJsonValueEClass, MCJsonValue.class, "MCJsonValue", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(mcJsonObjectEClass, MCJsonObject.class, "MCJsonObject", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getMCJsonObject_Entries(), this.getMCJsonEntry(), null, "entries", null, 0, -1, MCJsonObject.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(mcJsonEntryEClass, MCJsonEntry.class, "MCJsonEntry", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getMCJsonEntry_Name(), ecorePackage.getEString(), "name", null, 0, 1, MCJsonEntry.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getMCJsonEntry_Value(), this.getMCJsonValue(), null, "value", null, 0, 1, MCJsonEntry.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(mcJsonArrayEClass, MCJsonArray.class, "MCJsonArray", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getMCJsonArray_Elements(), this.getMCJsonValue(), null, "elements", null, 0, -1, MCJsonArray.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(mcJsonStringEClass, MCJsonString.class, "MCJsonString", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getMCJsonString_Value(), ecorePackage.getEString(), "value", null, 0, 1, MCJsonString.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(mcJsonNumberEClass, MCJsonNumber.class, "MCJsonNumber", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(mcJsonIntegralEClass, MCJsonIntegral.class, "MCJsonIntegral", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getMCJsonIntegral_Value(), ecorePackage.getELong(), "value", null, 0, 1, MCJsonIntegral.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(mcJsonFloatingPointEClass, MCJsonFloatingPoint.class, "MCJsonFloatingPoint", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getMCJsonFloatingPoint_Value(), ecorePackage.getEDouble(), "value", null, 0, 1, MCJsonFloatingPoint.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(mcJsonBooleanEClass, MCJsonBoolean.class, "MCJsonBoolean", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getMCJsonBoolean_Value(), ecorePackage.getEBoolean(), "value", null, 0, 1, MCJsonBoolean.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(mcJsonNullEClass, MCJsonNull.class, "MCJsonNull", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(longRangeEClass, LongRange.class, "LongRange", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(exactLongRangeEClass, ExactLongRange.class, "ExactLongRange", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getExactLongRange_Value(), ecorePackage.getELong(), "value", null, 0, 1, ExactLongRange.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(normalLongRangeEClass, NormalLongRange.class, "NormalLongRange", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getNormalLongRange_Min(), ecorePackage.getELong(), "min", null, 0, 1, NormalLongRange.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getNormalLongRange_Max(), ecorePackage.getELong(), "max", null, 0, 1, NormalLongRange.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(doubleRangeEClass, DoubleRange.class, "DoubleRange", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(exactDoubleRangeEClass, ExactDoubleRange.class, "ExactDoubleRange", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getExactDoubleRange_Value(), ecorePackage.getEDouble(), "value", null, 0, 1, ExactDoubleRange.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(normalDoubleRangeEClass, NormalDoubleRange.class, "NormalDoubleRange", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getNormalDoubleRange_Min(), ecorePackage.getEDouble(), "min", null, 0, 1, NormalDoubleRange.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getNormalDoubleRange_Max(), ecorePackage.getEDouble(), "max", null, 0, 1, NormalDoubleRange.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(lootFunctionWithConditionsEClass, LootFunctionWithConditions.class, "LootFunctionWithConditions", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getLootFunctionWithConditions_ConditionsDefined(), ecorePackage.getEBoolean(), "conditionsDefined", null, 0, 1, LootFunctionWithConditions.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getLootFunctionWithConditions_Conditions(), this.getLootCondition(), null, "conditions", null, 0, -1, LootFunctionWithConditions.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getLootFunctionWithConditions_Function(), this.getLootFunction(), null, "function", null, 0, 1, LootFunctionWithConditions.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(alternativeLootConditionEClass, AlternativeLootCondition.class, "AlternativeLootCondition", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getAlternativeLootCondition_Alternatives(), this.getLootCondition(), null, "alternatives", null, 0, -1, AlternativeLootCondition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(invertedLootConditionEClass, InvertedLootCondition.class, "InvertedLootCondition", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getInvertedLootCondition_Term(), this.getLootCondition(), null, "term", null, 0, 1, InvertedLootCondition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    // Initialize enums and add enum literals
    initEEnum(enumEquipmentSlotEEnum, EnumEquipmentSlot.class, "EnumEquipmentSlot");
    addEEnumLiteral(enumEquipmentSlotEEnum, EnumEquipmentSlot.MAINHAND);
    addEEnumLiteral(enumEquipmentSlotEEnum, EnumEquipmentSlot.OFFHAND);
    addEEnumLiteral(enumEquipmentSlotEEnum, EnumEquipmentSlot.HEAD);
    addEEnumLiteral(enumEquipmentSlotEEnum, EnumEquipmentSlot.CHEST);
    addEEnumLiteral(enumEquipmentSlotEEnum, EnumEquipmentSlot.LEGS);
    addEEnumLiteral(enumEquipmentSlotEEnum, EnumEquipmentSlot.FEET);

    initEEnum(enumGamemodeEEnum, EnumGamemode.class, "EnumGamemode");
    addEEnumLiteral(enumGamemodeEEnum, EnumGamemode.SURVIVAL);
    addEEnumLiteral(enumGamemodeEEnum, EnumGamemode.CREATIVE);
    addEEnumLiteral(enumGamemodeEEnum, EnumGamemode.ADVENTURE);
    addEEnumLiteral(enumGamemodeEEnum, EnumGamemode.SPECTATOR);

    initEEnum(enumLootTableTypeEEnum, EnumLootTableType.class, "EnumLootTableType");
    addEEnumLiteral(enumLootTableTypeEEnum, EnumLootTableType.GENERIC);
    addEEnumLiteral(enumLootTableTypeEEnum, EnumLootTableType.BLOCK);
    addEEnumLiteral(enumLootTableTypeEEnum, EnumLootTableType.ENTITY);
    addEEnumLiteral(enumLootTableTypeEEnum, EnumLootTableType.CHEST);
    addEEnumLiteral(enumLootTableTypeEEnum, EnumLootTableType.FISHING);
    addEEnumLiteral(enumLootTableTypeEEnum, EnumLootTableType.GIFT);
    addEEnumLiteral(enumLootTableTypeEEnum, EnumLootTableType.ADVANCEMENT_REWARD);
    addEEnumLiteral(enumLootTableTypeEEnum, EnumLootTableType.BARTER);
    addEEnumLiteral(enumLootTableTypeEEnum, EnumLootTableType.EMPTY);

    initEEnum(enumBonusFormulaEEnum, EnumBonusFormula.class, "EnumBonusFormula");
    addEEnumLiteral(enumBonusFormulaEEnum, EnumBonusFormula.BINOMIAL_WITH_BONUS_COUNT);
    addEEnumLiteral(enumBonusFormulaEEnum, EnumBonusFormula.UNIFORM_BONUS_COUNT);
    addEEnumLiteral(enumBonusFormulaEEnum, EnumBonusFormula.ORE_DROPS);

    initEEnum(enumNBTSourceEEnum, EnumNBTSource.class, "EnumNBTSource");
    addEEnumLiteral(enumNBTSourceEEnum, EnumNBTSource.BLOCK_ENTITY);
    addEEnumLiteral(enumNBTSourceEEnum, EnumNBTSource.THIS);
    addEEnumLiteral(enumNBTSourceEEnum, EnumNBTSource.KILLER);
    addEEnumLiteral(enumNBTSourceEEnum, EnumNBTSource.KILLER_PLAYER);

    initEEnum(enumAttributeModifierOperationEEnum, EnumAttributeModifierOperation.class, "EnumAttributeModifierOperation");
    addEEnumLiteral(enumAttributeModifierOperationEEnum, EnumAttributeModifierOperation.ADDITION);
    addEEnumLiteral(enumAttributeModifierOperationEEnum, EnumAttributeModifierOperation.MULTIPLY_BASE);
    addEEnumLiteral(enumAttributeModifierOperationEEnum, EnumAttributeModifierOperation.MULTIPLY_TOTAL);

    initEEnum(enumEntitySourceEEnum, EnumEntitySource.class, "EnumEntitySource");
    addEEnumLiteral(enumEntitySourceEEnum, EnumEntitySource.THIS);
    addEEnumLiteral(enumEntitySourceEEnum, EnumEntitySource.KILLER);
    addEEnumLiteral(enumEntitySourceEEnum, EnumEntitySource.KILLER_PLAYER);

    // Create resource
    createResource(eNS_URI);
  }

} //MclootPackageImpl
