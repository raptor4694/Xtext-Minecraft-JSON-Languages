/**
 * generated by Xtext 2.21.0
 */
package com.raptor.mcloottable.mcloot;

import java.util.Arrays;
import java.util.Collections;
import java.util.List;

import org.eclipse.emf.common.util.Enumerator;

/**
 * <!-- begin-user-doc -->
 * A representation of the literals of the enumeration '<em><b>Enum Bonus Formula</b></em>',
 * and utility methods for working with them.
 * <!-- end-user-doc -->
 * @see com.raptor.mcloottable.mcloot.MclootPackage#getEnumBonusFormula()
 * @model
 * @generated
 */
public enum EnumBonusFormula implements Enumerator
{
  /**
   * The '<em><b>BINOMIAL WITH BONUS COUNT</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #BINOMIAL_WITH_BONUS_COUNT_VALUE
   * @generated
   * @ordered
   */
  BINOMIAL_WITH_BONUS_COUNT(0, "BINOMIAL_WITH_BONUS_COUNT", "binomial_with_bonus_count"),

  /**
   * The '<em><b>UNIFORM BONUS COUNT</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #UNIFORM_BONUS_COUNT_VALUE
   * @generated
   * @ordered
   */
  UNIFORM_BONUS_COUNT(1, "UNIFORM_BONUS_COUNT", "uniform_bonus_count"),

  /**
   * The '<em><b>ORE DROPS</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #ORE_DROPS_VALUE
   * @generated
   * @ordered
   */
  ORE_DROPS(2, "ORE_DROPS", "ore_drops");

  /**
   * The '<em><b>BINOMIAL WITH BONUS COUNT</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #BINOMIAL_WITH_BONUS_COUNT
   * @model literal="binomial_with_bonus_count"
   * @generated
   * @ordered
   */
  public static final int BINOMIAL_WITH_BONUS_COUNT_VALUE = 0;

  /**
   * The '<em><b>UNIFORM BONUS COUNT</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #UNIFORM_BONUS_COUNT
   * @model literal="uniform_bonus_count"
   * @generated
   * @ordered
   */
  public static final int UNIFORM_BONUS_COUNT_VALUE = 1;

  /**
   * The '<em><b>ORE DROPS</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #ORE_DROPS
   * @model literal="ore_drops"
   * @generated
   * @ordered
   */
  public static final int ORE_DROPS_VALUE = 2;

  /**
   * An array of all the '<em><b>Enum Bonus Formula</b></em>' enumerators.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private static final EnumBonusFormula[] VALUES_ARRAY =
    new EnumBonusFormula[]
    {
      BINOMIAL_WITH_BONUS_COUNT,
      UNIFORM_BONUS_COUNT,
      ORE_DROPS,
    };

  /**
   * A public read-only list of all the '<em><b>Enum Bonus Formula</b></em>' enumerators.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final List<EnumBonusFormula> VALUES = Collections.unmodifiableList(Arrays.asList(VALUES_ARRAY));

  /**
   * Returns the '<em><b>Enum Bonus Formula</b></em>' literal with the specified literal value.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param literal the literal.
   * @return the matching enumerator or <code>null</code>.
   * @generated
   */
  public static EnumBonusFormula get(String literal)
  {
    for (int i = 0; i < VALUES_ARRAY.length; ++i)
    {
      EnumBonusFormula result = VALUES_ARRAY[i];
      if (result.toString().equals(literal))
      {
        return result;
      }
    }
    return null;
  }

  /**
   * Returns the '<em><b>Enum Bonus Formula</b></em>' literal with the specified name.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param name the name.
   * @return the matching enumerator or <code>null</code>.
   * @generated
   */
  public static EnumBonusFormula getByName(String name)
  {
    for (int i = 0; i < VALUES_ARRAY.length; ++i)
    {
      EnumBonusFormula result = VALUES_ARRAY[i];
      if (result.getName().equals(name))
      {
        return result;
      }
    }
    return null;
  }

  /**
   * Returns the '<em><b>Enum Bonus Formula</b></em>' literal with the specified integer value.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the integer value.
   * @return the matching enumerator or <code>null</code>.
   * @generated
   */
  public static EnumBonusFormula get(int value)
  {
    switch (value)
    {
      case BINOMIAL_WITH_BONUS_COUNT_VALUE: return BINOMIAL_WITH_BONUS_COUNT;
      case UNIFORM_BONUS_COUNT_VALUE: return UNIFORM_BONUS_COUNT;
      case ORE_DROPS_VALUE: return ORE_DROPS;
    }
    return null;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private final int value;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private final String name;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private final String literal;

  /**
   * Only this class can construct instances.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EnumBonusFormula(int value, String name, String literal)
  {
    this.value = value;
    this.name = name;
    this.literal = literal;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int getValue()
  {
    return value;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getName()
  {
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getLiteral()
  {
    return literal;
  }

  /**
   * Returns the literal value of the enumerator, which is its string representation.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    return literal;
  }
  
} //EnumBonusFormula
