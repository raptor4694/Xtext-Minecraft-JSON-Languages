/**
 * generated by Xtext 2.21.0
 */
package com.raptor.mcloottable.mcloot;

import org.eclipse.emf.ecore.EAttribute;
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EEnum;
import org.eclipse.emf.ecore.EPackage;
import org.eclipse.emf.ecore.EReference;

/**
 * <!-- begin-user-doc -->
 * The <b>Package</b> for the model.
 * It contains accessors for the meta objects to represent
 * <ul>
 *   <li>each class,</li>
 *   <li>each feature of each class,</li>
 *   <li>each enum,</li>
 *   <li>and each data type</li>
 * </ul>
 * <!-- end-user-doc -->
 * @see com.raptor.mcloottable.mcloot.MclootFactory
 * @model kind="package"
 * @generated
 */
public interface MclootPackage extends EPackage
{
  /**
   * The package name.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNAME = "mcloot";

  /**
   * The package namespace URI.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNS_URI = "http://www.raptor.com/mcloottable/Mcloot";

  /**
   * The package namespace name.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNS_PREFIX = "mcloot";

  /**
   * The singleton instance of the package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  MclootPackage eINSTANCE = com.raptor.mcloottable.mcloot.impl.MclootPackageImpl.init();

  /**
   * The meta object id for the '{@link com.raptor.mcloottable.mcloot.impl.LootTableImpl <em>Loot Table</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see com.raptor.mcloottable.mcloot.impl.LootTableImpl
   * @see com.raptor.mcloottable.mcloot.impl.MclootPackageImpl#getLootTable()
   * @generated
   */
  int LOOT_TABLE = 0;

  /**
   * The feature id for the '<em><b>Type Defined</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LOOT_TABLE__TYPE_DEFINED = 0;

  /**
   * The feature id for the '<em><b>Type</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LOOT_TABLE__TYPE = 1;

  /**
   * The feature id for the '<em><b>Pools Defined</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LOOT_TABLE__POOLS_DEFINED = 2;

  /**
   * The feature id for the '<em><b>Pools</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LOOT_TABLE__POOLS = 3;

  /**
   * The number of structural features of the '<em>Loot Table</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LOOT_TABLE_FEATURE_COUNT = 4;

  /**
   * The meta object id for the '{@link com.raptor.mcloottable.mcloot.impl.LootPoolImpl <em>Loot Pool</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see com.raptor.mcloottable.mcloot.impl.LootPoolImpl
   * @see com.raptor.mcloottable.mcloot.impl.MclootPackageImpl#getLootPool()
   * @generated
   */
  int LOOT_POOL = 1;

  /**
   * The feature id for the '<em><b>Conditions Defined</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LOOT_POOL__CONDITIONS_DEFINED = 0;

  /**
   * The feature id for the '<em><b>Conditions</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LOOT_POOL__CONDITIONS = 1;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LOOT_POOL__NAME = 2;

  /**
   * The feature id for the '<em><b>Rolls Defined</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LOOT_POOL__ROLLS_DEFINED = 3;

  /**
   * The feature id for the '<em><b>Rolls</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LOOT_POOL__ROLLS = 4;

  /**
   * The feature id for the '<em><b>Entries Defined</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LOOT_POOL__ENTRIES_DEFINED = 5;

  /**
   * The feature id for the '<em><b>Entries</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LOOT_POOL__ENTRIES = 6;

  /**
   * The feature id for the '<em><b>Bonus Rolls Defined</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LOOT_POOL__BONUS_ROLLS_DEFINED = 7;

  /**
   * The feature id for the '<em><b>Bonus Rolls</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LOOT_POOL__BONUS_ROLLS = 8;

  /**
   * The feature id for the '<em><b>Functions Defined</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LOOT_POOL__FUNCTIONS_DEFINED = 9;

  /**
   * The feature id for the '<em><b>Functions</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LOOT_POOL__FUNCTIONS = 10;

  /**
   * The number of structural features of the '<em>Loot Pool</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LOOT_POOL_FEATURE_COUNT = 11;

  /**
   * The meta object id for the '{@link com.raptor.mcloottable.mcloot.impl.LootEntryImpl <em>Loot Entry</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see com.raptor.mcloottable.mcloot.impl.LootEntryImpl
   * @see com.raptor.mcloottable.mcloot.impl.MclootPackageImpl#getLootEntry()
   * @generated
   */
  int LOOT_ENTRY = 2;

  /**
   * The feature id for the '<em><b>Conditions Defined</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LOOT_ENTRY__CONDITIONS_DEFINED = 0;

  /**
   * The feature id for the '<em><b>Conditions</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LOOT_ENTRY__CONDITIONS = 1;

  /**
   * The feature id for the '<em><b>Type</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LOOT_ENTRY__TYPE = 2;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LOOT_ENTRY__NAME = 3;

  /**
   * The feature id for the '<em><b>Quality Defined</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LOOT_ENTRY__QUALITY_DEFINED = 4;

  /**
   * The feature id for the '<em><b>Quality</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LOOT_ENTRY__QUALITY = 5;

  /**
   * The feature id for the '<em><b>Expand Defined</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LOOT_ENTRY__EXPAND_DEFINED = 6;

  /**
   * The feature id for the '<em><b>Expand</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LOOT_ENTRY__EXPAND = 7;

  /**
   * The feature id for the '<em><b>Functions Defined</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LOOT_ENTRY__FUNCTIONS_DEFINED = 8;

  /**
   * The feature id for the '<em><b>Functions</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LOOT_ENTRY__FUNCTIONS = 9;

  /**
   * The feature id for the '<em><b>Children Defined</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LOOT_ENTRY__CHILDREN_DEFINED = 10;

  /**
   * The feature id for the '<em><b>Children</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LOOT_ENTRY__CHILDREN = 11;

  /**
   * The feature id for the '<em><b>Entry Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LOOT_ENTRY__ENTRY_NAME = 12;

  /**
   * The feature id for the '<em><b>Weight Defined</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LOOT_ENTRY__WEIGHT_DEFINED = 13;

  /**
   * The feature id for the '<em><b>Weight</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LOOT_ENTRY__WEIGHT = 14;

  /**
   * The number of structural features of the '<em>Loot Entry</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LOOT_ENTRY_FEATURE_COUNT = 15;

  /**
   * The meta object id for the '{@link com.raptor.mcloottable.mcloot.impl.LootFunctionImpl <em>Loot Function</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see com.raptor.mcloottable.mcloot.impl.LootFunctionImpl
   * @see com.raptor.mcloottable.mcloot.impl.MclootPackageImpl#getLootFunction()
   * @generated
   */
  int LOOT_FUNCTION = 3;

  /**
   * The feature id for the '<em><b>Id</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LOOT_FUNCTION__ID = 0;

  /**
   * The number of structural features of the '<em>Loot Function</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LOOT_FUNCTION_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link com.raptor.mcloottable.mcloot.impl.ApplyBonusLootFunctionImpl <em>Apply Bonus Loot Function</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see com.raptor.mcloottable.mcloot.impl.ApplyBonusLootFunctionImpl
   * @see com.raptor.mcloottable.mcloot.impl.MclootPackageImpl#getApplyBonusLootFunction()
   * @generated
   */
  int APPLY_BONUS_LOOT_FUNCTION = 4;

  /**
   * The feature id for the '<em><b>Id</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int APPLY_BONUS_LOOT_FUNCTION__ID = LOOT_FUNCTION__ID;

  /**
   * The feature id for the '<em><b>Enchantment</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int APPLY_BONUS_LOOT_FUNCTION__ENCHANTMENT = LOOT_FUNCTION_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Formula</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int APPLY_BONUS_LOOT_FUNCTION__FORMULA = LOOT_FUNCTION_FEATURE_COUNT + 1;

  /**
   * The feature id for the '<em><b>Extra Defined</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int APPLY_BONUS_LOOT_FUNCTION__EXTRA_DEFINED = LOOT_FUNCTION_FEATURE_COUNT + 2;

  /**
   * The feature id for the '<em><b>Extra</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int APPLY_BONUS_LOOT_FUNCTION__EXTRA = LOOT_FUNCTION_FEATURE_COUNT + 3;

  /**
   * The feature id for the '<em><b>Probability Defined</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int APPLY_BONUS_LOOT_FUNCTION__PROBABILITY_DEFINED = LOOT_FUNCTION_FEATURE_COUNT + 4;

  /**
   * The feature id for the '<em><b>Probability</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int APPLY_BONUS_LOOT_FUNCTION__PROBABILITY = LOOT_FUNCTION_FEATURE_COUNT + 5;

  /**
   * The feature id for the '<em><b>Bonus Multiplier Defined</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int APPLY_BONUS_LOOT_FUNCTION__BONUS_MULTIPLIER_DEFINED = LOOT_FUNCTION_FEATURE_COUNT + 6;

  /**
   * The feature id for the '<em><b>Bonus Multiplier</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int APPLY_BONUS_LOOT_FUNCTION__BONUS_MULTIPLIER = LOOT_FUNCTION_FEATURE_COUNT + 7;

  /**
   * The number of structural features of the '<em>Apply Bonus Loot Function</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int APPLY_BONUS_LOOT_FUNCTION_FEATURE_COUNT = LOOT_FUNCTION_FEATURE_COUNT + 8;

  /**
   * The meta object id for the '{@link com.raptor.mcloottable.mcloot.impl.CopyNameLootFunctionImpl <em>Copy Name Loot Function</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see com.raptor.mcloottable.mcloot.impl.CopyNameLootFunctionImpl
   * @see com.raptor.mcloottable.mcloot.impl.MclootPackageImpl#getCopyNameLootFunction()
   * @generated
   */
  int COPY_NAME_LOOT_FUNCTION = 5;

  /**
   * The feature id for the '<em><b>Id</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COPY_NAME_LOOT_FUNCTION__ID = LOOT_FUNCTION__ID;

  /**
   * The feature id for the '<em><b>Source</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COPY_NAME_LOOT_FUNCTION__SOURCE = LOOT_FUNCTION_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Copy Name Loot Function</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COPY_NAME_LOOT_FUNCTION_FEATURE_COUNT = LOOT_FUNCTION_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link com.raptor.mcloottable.mcloot.impl.CopyNBTLootFunctionImpl <em>Copy NBT Loot Function</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see com.raptor.mcloottable.mcloot.impl.CopyNBTLootFunctionImpl
   * @see com.raptor.mcloottable.mcloot.impl.MclootPackageImpl#getCopyNBTLootFunction()
   * @generated
   */
  int COPY_NBT_LOOT_FUNCTION = 6;

  /**
   * The feature id for the '<em><b>Id</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COPY_NBT_LOOT_FUNCTION__ID = LOOT_FUNCTION__ID;

  /**
   * The feature id for the '<em><b>Source</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COPY_NBT_LOOT_FUNCTION__SOURCE = LOOT_FUNCTION_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Ops</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COPY_NBT_LOOT_FUNCTION__OPS = LOOT_FUNCTION_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>Copy NBT Loot Function</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COPY_NBT_LOOT_FUNCTION_FEATURE_COUNT = LOOT_FUNCTION_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link com.raptor.mcloottable.mcloot.impl.NBTOperationImpl <em>NBT Operation</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see com.raptor.mcloottable.mcloot.impl.NBTOperationImpl
   * @see com.raptor.mcloottable.mcloot.impl.MclootPackageImpl#getNBTOperation()
   * @generated
   */
  int NBT_OPERATION = 7;

  /**
   * The feature id for the '<em><b>Id</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NBT_OPERATION__ID = 0;

  /**
   * The feature id for the '<em><b>Source</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NBT_OPERATION__SOURCE = 1;

  /**
   * The feature id for the '<em><b>Target</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NBT_OPERATION__TARGET = 2;

  /**
   * The number of structural features of the '<em>NBT Operation</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NBT_OPERATION_FEATURE_COUNT = 3;

  /**
   * The meta object id for the '{@link com.raptor.mcloottable.mcloot.impl.AppendNBTOperationImpl <em>Append NBT Operation</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see com.raptor.mcloottable.mcloot.impl.AppendNBTOperationImpl
   * @see com.raptor.mcloottable.mcloot.impl.MclootPackageImpl#getAppendNBTOperation()
   * @generated
   */
  int APPEND_NBT_OPERATION = 8;

  /**
   * The feature id for the '<em><b>Id</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int APPEND_NBT_OPERATION__ID = NBT_OPERATION__ID;

  /**
   * The feature id for the '<em><b>Source</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int APPEND_NBT_OPERATION__SOURCE = NBT_OPERATION__SOURCE;

  /**
   * The feature id for the '<em><b>Target</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int APPEND_NBT_OPERATION__TARGET = NBT_OPERATION__TARGET;

  /**
   * The number of structural features of the '<em>Append NBT Operation</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int APPEND_NBT_OPERATION_FEATURE_COUNT = NBT_OPERATION_FEATURE_COUNT + 0;

  /**
   * The meta object id for the '{@link com.raptor.mcloottable.mcloot.impl.ReplaceNBTOperationImpl <em>Replace NBT Operation</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see com.raptor.mcloottable.mcloot.impl.ReplaceNBTOperationImpl
   * @see com.raptor.mcloottable.mcloot.impl.MclootPackageImpl#getReplaceNBTOperation()
   * @generated
   */
  int REPLACE_NBT_OPERATION = 9;

  /**
   * The feature id for the '<em><b>Id</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int REPLACE_NBT_OPERATION__ID = NBT_OPERATION__ID;

  /**
   * The feature id for the '<em><b>Source</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int REPLACE_NBT_OPERATION__SOURCE = NBT_OPERATION__SOURCE;

  /**
   * The feature id for the '<em><b>Target</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int REPLACE_NBT_OPERATION__TARGET = NBT_OPERATION__TARGET;

  /**
   * The number of structural features of the '<em>Replace NBT Operation</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int REPLACE_NBT_OPERATION_FEATURE_COUNT = NBT_OPERATION_FEATURE_COUNT + 0;

  /**
   * The meta object id for the '{@link com.raptor.mcloottable.mcloot.impl.MergeNBTOperationImpl <em>Merge NBT Operation</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see com.raptor.mcloottable.mcloot.impl.MergeNBTOperationImpl
   * @see com.raptor.mcloottable.mcloot.impl.MclootPackageImpl#getMergeNBTOperation()
   * @generated
   */
  int MERGE_NBT_OPERATION = 10;

  /**
   * The feature id for the '<em><b>Id</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MERGE_NBT_OPERATION__ID = NBT_OPERATION__ID;

  /**
   * The feature id for the '<em><b>Source</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MERGE_NBT_OPERATION__SOURCE = NBT_OPERATION__SOURCE;

  /**
   * The feature id for the '<em><b>Target</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MERGE_NBT_OPERATION__TARGET = NBT_OPERATION__TARGET;

  /**
   * The number of structural features of the '<em>Merge NBT Operation</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MERGE_NBT_OPERATION_FEATURE_COUNT = NBT_OPERATION_FEATURE_COUNT + 0;

  /**
   * The meta object id for the '{@link com.raptor.mcloottable.mcloot.impl.CopyStateLootFunctionImpl <em>Copy State Loot Function</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see com.raptor.mcloottable.mcloot.impl.CopyStateLootFunctionImpl
   * @see com.raptor.mcloottable.mcloot.impl.MclootPackageImpl#getCopyStateLootFunction()
   * @generated
   */
  int COPY_STATE_LOOT_FUNCTION = 11;

  /**
   * The feature id for the '<em><b>Id</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COPY_STATE_LOOT_FUNCTION__ID = LOOT_FUNCTION__ID;

  /**
   * The feature id for the '<em><b>Block</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COPY_STATE_LOOT_FUNCTION__BLOCK = LOOT_FUNCTION_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Properties</b></em>' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COPY_STATE_LOOT_FUNCTION__PROPERTIES = LOOT_FUNCTION_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>Copy State Loot Function</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COPY_STATE_LOOT_FUNCTION_FEATURE_COUNT = LOOT_FUNCTION_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link com.raptor.mcloottable.mcloot.impl.EnchantRandomlyLootFunctionImpl <em>Enchant Randomly Loot Function</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see com.raptor.mcloottable.mcloot.impl.EnchantRandomlyLootFunctionImpl
   * @see com.raptor.mcloottable.mcloot.impl.MclootPackageImpl#getEnchantRandomlyLootFunction()
   * @generated
   */
  int ENCHANT_RANDOMLY_LOOT_FUNCTION = 12;

  /**
   * The feature id for the '<em><b>Id</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ENCHANT_RANDOMLY_LOOT_FUNCTION__ID = LOOT_FUNCTION__ID;

  /**
   * The feature id for the '<em><b>Enchantments</b></em>' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ENCHANT_RANDOMLY_LOOT_FUNCTION__ENCHANTMENTS = LOOT_FUNCTION_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Enchant Randomly Loot Function</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ENCHANT_RANDOMLY_LOOT_FUNCTION_FEATURE_COUNT = LOOT_FUNCTION_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link com.raptor.mcloottable.mcloot.impl.EnchantWithLevelsLootFunctionImpl <em>Enchant With Levels Loot Function</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see com.raptor.mcloottable.mcloot.impl.EnchantWithLevelsLootFunctionImpl
   * @see com.raptor.mcloottable.mcloot.impl.MclootPackageImpl#getEnchantWithLevelsLootFunction()
   * @generated
   */
  int ENCHANT_WITH_LEVELS_LOOT_FUNCTION = 13;

  /**
   * The feature id for the '<em><b>Id</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ENCHANT_WITH_LEVELS_LOOT_FUNCTION__ID = LOOT_FUNCTION__ID;

  /**
   * The feature id for the '<em><b>Treasure Defined</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ENCHANT_WITH_LEVELS_LOOT_FUNCTION__TREASURE_DEFINED = LOOT_FUNCTION_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Treasure</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ENCHANT_WITH_LEVELS_LOOT_FUNCTION__TREASURE = LOOT_FUNCTION_FEATURE_COUNT + 1;

  /**
   * The feature id for the '<em><b>Levels</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ENCHANT_WITH_LEVELS_LOOT_FUNCTION__LEVELS = LOOT_FUNCTION_FEATURE_COUNT + 2;

  /**
   * The number of structural features of the '<em>Enchant With Levels Loot Function</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ENCHANT_WITH_LEVELS_LOOT_FUNCTION_FEATURE_COUNT = LOOT_FUNCTION_FEATURE_COUNT + 3;

  /**
   * The meta object id for the '{@link com.raptor.mcloottable.mcloot.impl.ExplorationMapLootFunctionImpl <em>Exploration Map Loot Function</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see com.raptor.mcloottable.mcloot.impl.ExplorationMapLootFunctionImpl
   * @see com.raptor.mcloottable.mcloot.impl.MclootPackageImpl#getExplorationMapLootFunction()
   * @generated
   */
  int EXPLORATION_MAP_LOOT_FUNCTION = 14;

  /**
   * The feature id for the '<em><b>Id</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPLORATION_MAP_LOOT_FUNCTION__ID = LOOT_FUNCTION__ID;

  /**
   * The feature id for the '<em><b>Destination</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPLORATION_MAP_LOOT_FUNCTION__DESTINATION = LOOT_FUNCTION_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Decoration</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPLORATION_MAP_LOOT_FUNCTION__DECORATION = LOOT_FUNCTION_FEATURE_COUNT + 1;

  /**
   * The feature id for the '<em><b>Zoom Defined</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPLORATION_MAP_LOOT_FUNCTION__ZOOM_DEFINED = LOOT_FUNCTION_FEATURE_COUNT + 2;

  /**
   * The feature id for the '<em><b>Zoom</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPLORATION_MAP_LOOT_FUNCTION__ZOOM = LOOT_FUNCTION_FEATURE_COUNT + 3;

  /**
   * The feature id for the '<em><b>Search Radius Defined</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPLORATION_MAP_LOOT_FUNCTION__SEARCH_RADIUS_DEFINED = LOOT_FUNCTION_FEATURE_COUNT + 4;

  /**
   * The feature id for the '<em><b>Search Radius</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPLORATION_MAP_LOOT_FUNCTION__SEARCH_RADIUS = LOOT_FUNCTION_FEATURE_COUNT + 5;

  /**
   * The feature id for the '<em><b>Skip Existing Chunks Defined</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPLORATION_MAP_LOOT_FUNCTION__SKIP_EXISTING_CHUNKS_DEFINED = LOOT_FUNCTION_FEATURE_COUNT + 6;

  /**
   * The feature id for the '<em><b>Skip Existing Chunks</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPLORATION_MAP_LOOT_FUNCTION__SKIP_EXISTING_CHUNKS = LOOT_FUNCTION_FEATURE_COUNT + 7;

  /**
   * The number of structural features of the '<em>Exploration Map Loot Function</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPLORATION_MAP_LOOT_FUNCTION_FEATURE_COUNT = LOOT_FUNCTION_FEATURE_COUNT + 8;

  /**
   * The meta object id for the '{@link com.raptor.mcloottable.mcloot.impl.ExplosionDecayLootFunctionImpl <em>Explosion Decay Loot Function</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see com.raptor.mcloottable.mcloot.impl.ExplosionDecayLootFunctionImpl
   * @see com.raptor.mcloottable.mcloot.impl.MclootPackageImpl#getExplosionDecayLootFunction()
   * @generated
   */
  int EXPLOSION_DECAY_LOOT_FUNCTION = 15;

  /**
   * The feature id for the '<em><b>Id</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPLOSION_DECAY_LOOT_FUNCTION__ID = LOOT_FUNCTION__ID;

  /**
   * The number of structural features of the '<em>Explosion Decay Loot Function</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPLOSION_DECAY_LOOT_FUNCTION_FEATURE_COUNT = LOOT_FUNCTION_FEATURE_COUNT + 0;

  /**
   * The meta object id for the '{@link com.raptor.mcloottable.mcloot.impl.FurnaceSmeltLootFunctionImpl <em>Furnace Smelt Loot Function</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see com.raptor.mcloottable.mcloot.impl.FurnaceSmeltLootFunctionImpl
   * @see com.raptor.mcloottable.mcloot.impl.MclootPackageImpl#getFurnaceSmeltLootFunction()
   * @generated
   */
  int FURNACE_SMELT_LOOT_FUNCTION = 16;

  /**
   * The feature id for the '<em><b>Id</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FURNACE_SMELT_LOOT_FUNCTION__ID = LOOT_FUNCTION__ID;

  /**
   * The number of structural features of the '<em>Furnace Smelt Loot Function</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FURNACE_SMELT_LOOT_FUNCTION_FEATURE_COUNT = LOOT_FUNCTION_FEATURE_COUNT + 0;

  /**
   * The meta object id for the '{@link com.raptor.mcloottable.mcloot.impl.FillPlayerHeadLootFunctionImpl <em>Fill Player Head Loot Function</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see com.raptor.mcloottable.mcloot.impl.FillPlayerHeadLootFunctionImpl
   * @see com.raptor.mcloottable.mcloot.impl.MclootPackageImpl#getFillPlayerHeadLootFunction()
   * @generated
   */
  int FILL_PLAYER_HEAD_LOOT_FUNCTION = 17;

  /**
   * The feature id for the '<em><b>Id</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FILL_PLAYER_HEAD_LOOT_FUNCTION__ID = LOOT_FUNCTION__ID;

  /**
   * The feature id for the '<em><b>Entity</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FILL_PLAYER_HEAD_LOOT_FUNCTION__ENTITY = LOOT_FUNCTION_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Fill Player Head Loot Function</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FILL_PLAYER_HEAD_LOOT_FUNCTION_FEATURE_COUNT = LOOT_FUNCTION_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link com.raptor.mcloottable.mcloot.impl.LimitCountLootFunctionImpl <em>Limit Count Loot Function</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see com.raptor.mcloottable.mcloot.impl.LimitCountLootFunctionImpl
   * @see com.raptor.mcloottable.mcloot.impl.MclootPackageImpl#getLimitCountLootFunction()
   * @generated
   */
  int LIMIT_COUNT_LOOT_FUNCTION = 18;

  /**
   * The feature id for the '<em><b>Id</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LIMIT_COUNT_LOOT_FUNCTION__ID = LOOT_FUNCTION__ID;

  /**
   * The feature id for the '<em><b>Limit</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LIMIT_COUNT_LOOT_FUNCTION__LIMIT = LOOT_FUNCTION_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Limit Count Loot Function</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LIMIT_COUNT_LOOT_FUNCTION_FEATURE_COUNT = LOOT_FUNCTION_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link com.raptor.mcloottable.mcloot.impl.LootingEnchantLootFunctionImpl <em>Looting Enchant Loot Function</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see com.raptor.mcloottable.mcloot.impl.LootingEnchantLootFunctionImpl
   * @see com.raptor.mcloottable.mcloot.impl.MclootPackageImpl#getLootingEnchantLootFunction()
   * @generated
   */
  int LOOTING_ENCHANT_LOOT_FUNCTION = 19;

  /**
   * The feature id for the '<em><b>Id</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LOOTING_ENCHANT_LOOT_FUNCTION__ID = LOOT_FUNCTION__ID;

  /**
   * The feature id for the '<em><b>Limit Defined</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LOOTING_ENCHANT_LOOT_FUNCTION__LIMIT_DEFINED = LOOT_FUNCTION_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Limit</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LOOTING_ENCHANT_LOOT_FUNCTION__LIMIT = LOOT_FUNCTION_FEATURE_COUNT + 1;

  /**
   * The feature id for the '<em><b>Count</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LOOTING_ENCHANT_LOOT_FUNCTION__COUNT = LOOT_FUNCTION_FEATURE_COUNT + 2;

  /**
   * The number of structural features of the '<em>Looting Enchant Loot Function</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LOOTING_ENCHANT_LOOT_FUNCTION_FEATURE_COUNT = LOOT_FUNCTION_FEATURE_COUNT + 3;

  /**
   * The meta object id for the '{@link com.raptor.mcloottable.mcloot.impl.SetAttributesLootFunctionImpl <em>Set Attributes Loot Function</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see com.raptor.mcloottable.mcloot.impl.SetAttributesLootFunctionImpl
   * @see com.raptor.mcloottable.mcloot.impl.MclootPackageImpl#getSetAttributesLootFunction()
   * @generated
   */
  int SET_ATTRIBUTES_LOOT_FUNCTION = 20;

  /**
   * The feature id for the '<em><b>Id</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SET_ATTRIBUTES_LOOT_FUNCTION__ID = LOOT_FUNCTION__ID;

  /**
   * The feature id for the '<em><b>Modifiers</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SET_ATTRIBUTES_LOOT_FUNCTION__MODIFIERS = LOOT_FUNCTION_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Set Attributes Loot Function</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SET_ATTRIBUTES_LOOT_FUNCTION_FEATURE_COUNT = LOOT_FUNCTION_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link com.raptor.mcloottable.mcloot.impl.AttributeModifierImpl <em>Attribute Modifier</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see com.raptor.mcloottable.mcloot.impl.AttributeModifierImpl
   * @see com.raptor.mcloottable.mcloot.impl.MclootPackageImpl#getAttributeModifier()
   * @generated
   */
  int ATTRIBUTE_MODIFIER = 21;

  /**
   * The feature id for the '<em><b>Id</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ATTRIBUTE_MODIFIER__ID = 0;

  /**
   * The feature id for the '<em><b>Operation</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ATTRIBUTE_MODIFIER__OPERATION = 1;

  /**
   * The feature id for the '<em><b>Amount</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ATTRIBUTE_MODIFIER__AMOUNT = 2;

  /**
   * The feature id for the '<em><b>Attribute Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ATTRIBUTE_MODIFIER__ATTRIBUTE_NAME = 3;

  /**
   * The feature id for the '<em><b>Uuid</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ATTRIBUTE_MODIFIER__UUID = 4;

  /**
   * The feature id for the '<em><b>Slot Defined</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ATTRIBUTE_MODIFIER__SLOT_DEFINED = 5;

  /**
   * The feature id for the '<em><b>Single Slot</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ATTRIBUTE_MODIFIER__SINGLE_SLOT = 6;

  /**
   * The feature id for the '<em><b>Slots</b></em>' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ATTRIBUTE_MODIFIER__SLOTS = 7;

  /**
   * The number of structural features of the '<em>Attribute Modifier</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ATTRIBUTE_MODIFIER_FEATURE_COUNT = 8;

  /**
   * The meta object id for the '{@link com.raptor.mcloottable.mcloot.impl.SetContentsLootFunctionImpl <em>Set Contents Loot Function</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see com.raptor.mcloottable.mcloot.impl.SetContentsLootFunctionImpl
   * @see com.raptor.mcloottable.mcloot.impl.MclootPackageImpl#getSetContentsLootFunction()
   * @generated
   */
  int SET_CONTENTS_LOOT_FUNCTION = 22;

  /**
   * The feature id for the '<em><b>Id</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SET_CONTENTS_LOOT_FUNCTION__ID = LOOT_FUNCTION__ID;

  /**
   * The feature id for the '<em><b>Entries</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SET_CONTENTS_LOOT_FUNCTION__ENTRIES = LOOT_FUNCTION_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Set Contents Loot Function</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SET_CONTENTS_LOOT_FUNCTION_FEATURE_COUNT = LOOT_FUNCTION_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link com.raptor.mcloottable.mcloot.impl.SetCountLootFunctionImpl <em>Set Count Loot Function</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see com.raptor.mcloottable.mcloot.impl.SetCountLootFunctionImpl
   * @see com.raptor.mcloottable.mcloot.impl.MclootPackageImpl#getSetCountLootFunction()
   * @generated
   */
  int SET_COUNT_LOOT_FUNCTION = 23;

  /**
   * The feature id for the '<em><b>Id</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SET_COUNT_LOOT_FUNCTION__ID = LOOT_FUNCTION__ID;

  /**
   * The feature id for the '<em><b>Count</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SET_COUNT_LOOT_FUNCTION__COUNT = LOOT_FUNCTION_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Set Count Loot Function</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SET_COUNT_LOOT_FUNCTION_FEATURE_COUNT = LOOT_FUNCTION_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link com.raptor.mcloottable.mcloot.impl.CountImpl <em>Count</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see com.raptor.mcloottable.mcloot.impl.CountImpl
   * @see com.raptor.mcloottable.mcloot.impl.MclootPackageImpl#getCount()
   * @generated
   */
  int COUNT = 24;

  /**
   * The number of structural features of the '<em>Count</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COUNT_FEATURE_COUNT = 0;

  /**
   * The meta object id for the '{@link com.raptor.mcloottable.mcloot.impl.ExactCountImpl <em>Exact Count</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see com.raptor.mcloottable.mcloot.impl.ExactCountImpl
   * @see com.raptor.mcloottable.mcloot.impl.MclootPackageImpl#getExactCount()
   * @generated
   */
  int EXACT_COUNT = 25;

  /**
   * The feature id for the '<em><b>Amount</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXACT_COUNT__AMOUNT = COUNT_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Exact Count</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXACT_COUNT_FEATURE_COUNT = COUNT_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link com.raptor.mcloottable.mcloot.impl.SpecialCountImpl <em>Special Count</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see com.raptor.mcloottable.mcloot.impl.SpecialCountImpl
   * @see com.raptor.mcloottable.mcloot.impl.MclootPackageImpl#getSpecialCount()
   * @generated
   */
  int SPECIAL_COUNT = 26;

  /**
   * The number of structural features of the '<em>Special Count</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SPECIAL_COUNT_FEATURE_COUNT = COUNT_FEATURE_COUNT + 0;

  /**
   * The meta object id for the '{@link com.raptor.mcloottable.mcloot.impl.UniformCountImpl <em>Uniform Count</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see com.raptor.mcloottable.mcloot.impl.UniformCountImpl
   * @see com.raptor.mcloottable.mcloot.impl.MclootPackageImpl#getUniformCount()
   * @generated
   */
  int UNIFORM_COUNT = 27;

  /**
   * The feature id for the '<em><b>Min</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int UNIFORM_COUNT__MIN = SPECIAL_COUNT_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Max</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int UNIFORM_COUNT__MAX = SPECIAL_COUNT_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>Uniform Count</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int UNIFORM_COUNT_FEATURE_COUNT = SPECIAL_COUNT_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link com.raptor.mcloottable.mcloot.impl.BinomialCountImpl <em>Binomial Count</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see com.raptor.mcloottable.mcloot.impl.BinomialCountImpl
   * @see com.raptor.mcloottable.mcloot.impl.MclootPackageImpl#getBinomialCount()
   * @generated
   */
  int BINOMIAL_COUNT = 28;

  /**
   * The feature id for the '<em><b>N</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BINOMIAL_COUNT__N = SPECIAL_COUNT_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>P</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BINOMIAL_COUNT__P = SPECIAL_COUNT_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>Binomial Count</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BINOMIAL_COUNT_FEATURE_COUNT = SPECIAL_COUNT_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link com.raptor.mcloottable.mcloot.impl.SetDamageLootFunctionImpl <em>Set Damage Loot Function</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see com.raptor.mcloottable.mcloot.impl.SetDamageLootFunctionImpl
   * @see com.raptor.mcloottable.mcloot.impl.MclootPackageImpl#getSetDamageLootFunction()
   * @generated
   */
  int SET_DAMAGE_LOOT_FUNCTION = 29;

  /**
   * The feature id for the '<em><b>Id</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SET_DAMAGE_LOOT_FUNCTION__ID = LOOT_FUNCTION__ID;

  /**
   * The feature id for the '<em><b>Damage</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SET_DAMAGE_LOOT_FUNCTION__DAMAGE = LOOT_FUNCTION_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Set Damage Loot Function</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SET_DAMAGE_LOOT_FUNCTION_FEATURE_COUNT = LOOT_FUNCTION_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link com.raptor.mcloottable.mcloot.impl.SetLoreLootFunctionImpl <em>Set Lore Loot Function</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see com.raptor.mcloottable.mcloot.impl.SetLoreLootFunctionImpl
   * @see com.raptor.mcloottable.mcloot.impl.MclootPackageImpl#getSetLoreLootFunction()
   * @generated
   */
  int SET_LORE_LOOT_FUNCTION = 30;

  /**
   * The feature id for the '<em><b>Id</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SET_LORE_LOOT_FUNCTION__ID = LOOT_FUNCTION__ID;

  /**
   * The feature id for the '<em><b>Replace Defined</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SET_LORE_LOOT_FUNCTION__REPLACE_DEFINED = LOOT_FUNCTION_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Replace</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SET_LORE_LOOT_FUNCTION__REPLACE = LOOT_FUNCTION_FEATURE_COUNT + 1;

  /**
   * The feature id for the '<em><b>Entity</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SET_LORE_LOOT_FUNCTION__ENTITY = LOOT_FUNCTION_FEATURE_COUNT + 2;

  /**
   * The feature id for the '<em><b>Lore</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SET_LORE_LOOT_FUNCTION__LORE = LOOT_FUNCTION_FEATURE_COUNT + 3;

  /**
   * The number of structural features of the '<em>Set Lore Loot Function</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SET_LORE_LOOT_FUNCTION_FEATURE_COUNT = LOOT_FUNCTION_FEATURE_COUNT + 4;

  /**
   * The meta object id for the '{@link com.raptor.mcloottable.mcloot.impl.SetNameLootFunctionImpl <em>Set Name Loot Function</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see com.raptor.mcloottable.mcloot.impl.SetNameLootFunctionImpl
   * @see com.raptor.mcloottable.mcloot.impl.MclootPackageImpl#getSetNameLootFunction()
   * @generated
   */
  int SET_NAME_LOOT_FUNCTION = 31;

  /**
   * The feature id for the '<em><b>Id</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SET_NAME_LOOT_FUNCTION__ID = LOOT_FUNCTION__ID;

  /**
   * The feature id for the '<em><b>Entity</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SET_NAME_LOOT_FUNCTION__ENTITY = LOOT_FUNCTION_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Item Name</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SET_NAME_LOOT_FUNCTION__ITEM_NAME = LOOT_FUNCTION_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>Set Name Loot Function</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SET_NAME_LOOT_FUNCTION_FEATURE_COUNT = LOOT_FUNCTION_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link com.raptor.mcloottable.mcloot.impl.SetNBTLootFunctionImpl <em>Set NBT Loot Function</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see com.raptor.mcloottable.mcloot.impl.SetNBTLootFunctionImpl
   * @see com.raptor.mcloottable.mcloot.impl.MclootPackageImpl#getSetNBTLootFunction()
   * @generated
   */
  int SET_NBT_LOOT_FUNCTION = 32;

  /**
   * The feature id for the '<em><b>Id</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SET_NBT_LOOT_FUNCTION__ID = LOOT_FUNCTION__ID;

  /**
   * The feature id for the '<em><b>Tag</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SET_NBT_LOOT_FUNCTION__TAG = LOOT_FUNCTION_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Set NBT Loot Function</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SET_NBT_LOOT_FUNCTION_FEATURE_COUNT = LOOT_FUNCTION_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link com.raptor.mcloottable.mcloot.impl.SetStewEffectLootFunctionImpl <em>Set Stew Effect Loot Function</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see com.raptor.mcloottable.mcloot.impl.SetStewEffectLootFunctionImpl
   * @see com.raptor.mcloottable.mcloot.impl.MclootPackageImpl#getSetStewEffectLootFunction()
   * @generated
   */
  int SET_STEW_EFFECT_LOOT_FUNCTION = 33;

  /**
   * The feature id for the '<em><b>Id</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SET_STEW_EFFECT_LOOT_FUNCTION__ID = LOOT_FUNCTION__ID;

  /**
   * The feature id for the '<em><b>Effects</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SET_STEW_EFFECT_LOOT_FUNCTION__EFFECTS = LOOT_FUNCTION_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Set Stew Effect Loot Function</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SET_STEW_EFFECT_LOOT_FUNCTION_FEATURE_COUNT = LOOT_FUNCTION_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link com.raptor.mcloottable.mcloot.impl.StewEffectImpl <em>Stew Effect</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see com.raptor.mcloottable.mcloot.impl.StewEffectImpl
   * @see com.raptor.mcloottable.mcloot.impl.MclootPackageImpl#getStewEffect()
   * @generated
   */
  int STEW_EFFECT = 34;

  /**
   * The feature id for the '<em><b>Type</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STEW_EFFECT__TYPE = 0;

  /**
   * The feature id for the '<em><b>Duration</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STEW_EFFECT__DURATION = 1;

  /**
   * The number of structural features of the '<em>Stew Effect</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STEW_EFFECT_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link com.raptor.mcloottable.mcloot.impl.LootConditionImpl <em>Loot Condition</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see com.raptor.mcloottable.mcloot.impl.LootConditionImpl
   * @see com.raptor.mcloottable.mcloot.impl.MclootPackageImpl#getLootCondition()
   * @generated
   */
  int LOOT_CONDITION = 35;

  /**
   * The number of structural features of the '<em>Loot Condition</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LOOT_CONDITION_FEATURE_COUNT = 0;

  /**
   * The meta object id for the '{@link com.raptor.mcloottable.mcloot.impl.NamedLootConditionImpl <em>Named Loot Condition</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see com.raptor.mcloottable.mcloot.impl.NamedLootConditionImpl
   * @see com.raptor.mcloottable.mcloot.impl.MclootPackageImpl#getNamedLootCondition()
   * @generated
   */
  int NAMED_LOOT_CONDITION = 36;

  /**
   * The feature id for the '<em><b>Id</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NAMED_LOOT_CONDITION__ID = LOOT_CONDITION_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Named Loot Condition</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NAMED_LOOT_CONDITION_FEATURE_COUNT = LOOT_CONDITION_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link com.raptor.mcloottable.mcloot.impl.BlockStatePropertiesLootConditionImpl <em>Block State Properties Loot Condition</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see com.raptor.mcloottable.mcloot.impl.BlockStatePropertiesLootConditionImpl
   * @see com.raptor.mcloottable.mcloot.impl.MclootPackageImpl#getBlockStatePropertiesLootCondition()
   * @generated
   */
  int BLOCK_STATE_PROPERTIES_LOOT_CONDITION = 37;

  /**
   * The feature id for the '<em><b>Id</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BLOCK_STATE_PROPERTIES_LOOT_CONDITION__ID = NAMED_LOOT_CONDITION__ID;

  /**
   * The feature id for the '<em><b>Inverted</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BLOCK_STATE_PROPERTIES_LOOT_CONDITION__INVERTED = NAMED_LOOT_CONDITION_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Block</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BLOCK_STATE_PROPERTIES_LOOT_CONDITION__BLOCK = NAMED_LOOT_CONDITION_FEATURE_COUNT + 1;

  /**
   * The feature id for the '<em><b>Properties</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BLOCK_STATE_PROPERTIES_LOOT_CONDITION__PROPERTIES = NAMED_LOOT_CONDITION_FEATURE_COUNT + 2;

  /**
   * The number of structural features of the '<em>Block State Properties Loot Condition</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BLOCK_STATE_PROPERTIES_LOOT_CONDITION_FEATURE_COUNT = NAMED_LOOT_CONDITION_FEATURE_COUNT + 3;

  /**
   * The meta object id for the '{@link com.raptor.mcloottable.mcloot.impl.BlockStatePropertyImpl <em>Block State Property</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see com.raptor.mcloottable.mcloot.impl.BlockStatePropertyImpl
   * @see com.raptor.mcloottable.mcloot.impl.MclootPackageImpl#getBlockStateProperty()
   * @generated
   */
  int BLOCK_STATE_PROPERTY = 38;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BLOCK_STATE_PROPERTY__NAME = 0;

  /**
   * The feature id for the '<em><b>Value</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BLOCK_STATE_PROPERTY__VALUE = 1;

  /**
   * The number of structural features of the '<em>Block State Property</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BLOCK_STATE_PROPERTY_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link com.raptor.mcloottable.mcloot.impl.DamageSourcePropertiesLootConditionImpl <em>Damage Source Properties Loot Condition</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see com.raptor.mcloottable.mcloot.impl.DamageSourcePropertiesLootConditionImpl
   * @see com.raptor.mcloottable.mcloot.impl.MclootPackageImpl#getDamageSourcePropertiesLootCondition()
   * @generated
   */
  int DAMAGE_SOURCE_PROPERTIES_LOOT_CONDITION = 39;

  /**
   * The feature id for the '<em><b>Id</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DAMAGE_SOURCE_PROPERTIES_LOOT_CONDITION__ID = NAMED_LOOT_CONDITION__ID;

  /**
   * The feature id for the '<em><b>Bypasses Armor Defined</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DAMAGE_SOURCE_PROPERTIES_LOOT_CONDITION__BYPASSES_ARMOR_DEFINED = NAMED_LOOT_CONDITION_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Bypasses Armor</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DAMAGE_SOURCE_PROPERTIES_LOOT_CONDITION__BYPASSES_ARMOR = NAMED_LOOT_CONDITION_FEATURE_COUNT + 1;

  /**
   * The feature id for the '<em><b>Bypasses Invulnerability Defined</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DAMAGE_SOURCE_PROPERTIES_LOOT_CONDITION__BYPASSES_INVULNERABILITY_DEFINED = NAMED_LOOT_CONDITION_FEATURE_COUNT + 2;

  /**
   * The feature id for the '<em><b>Bypasses Invulnerability</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DAMAGE_SOURCE_PROPERTIES_LOOT_CONDITION__BYPASSES_INVULNERABILITY = NAMED_LOOT_CONDITION_FEATURE_COUNT + 3;

  /**
   * The feature id for the '<em><b>Bypasses Magic Defined</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DAMAGE_SOURCE_PROPERTIES_LOOT_CONDITION__BYPASSES_MAGIC_DEFINED = NAMED_LOOT_CONDITION_FEATURE_COUNT + 4;

  /**
   * The feature id for the '<em><b>Bypasses Magic</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DAMAGE_SOURCE_PROPERTIES_LOOT_CONDITION__BYPASSES_MAGIC = NAMED_LOOT_CONDITION_FEATURE_COUNT + 5;

  /**
   * The feature id for the '<em><b>Direct Entity</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DAMAGE_SOURCE_PROPERTIES_LOOT_CONDITION__DIRECT_ENTITY = NAMED_LOOT_CONDITION_FEATURE_COUNT + 6;

  /**
   * The feature id for the '<em><b>Explosion Defined</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DAMAGE_SOURCE_PROPERTIES_LOOT_CONDITION__EXPLOSION_DEFINED = NAMED_LOOT_CONDITION_FEATURE_COUNT + 7;

  /**
   * The feature id for the '<em><b>Explosion</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DAMAGE_SOURCE_PROPERTIES_LOOT_CONDITION__EXPLOSION = NAMED_LOOT_CONDITION_FEATURE_COUNT + 8;

  /**
   * The feature id for the '<em><b>Fire Defined</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DAMAGE_SOURCE_PROPERTIES_LOOT_CONDITION__FIRE_DEFINED = NAMED_LOOT_CONDITION_FEATURE_COUNT + 9;

  /**
   * The feature id for the '<em><b>Fire</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DAMAGE_SOURCE_PROPERTIES_LOOT_CONDITION__FIRE = NAMED_LOOT_CONDITION_FEATURE_COUNT + 10;

  /**
   * The feature id for the '<em><b>Magic Defined</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DAMAGE_SOURCE_PROPERTIES_LOOT_CONDITION__MAGIC_DEFINED = NAMED_LOOT_CONDITION_FEATURE_COUNT + 11;

  /**
   * The feature id for the '<em><b>Magic</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DAMAGE_SOURCE_PROPERTIES_LOOT_CONDITION__MAGIC = NAMED_LOOT_CONDITION_FEATURE_COUNT + 12;

  /**
   * The feature id for the '<em><b>Projectile Defined</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DAMAGE_SOURCE_PROPERTIES_LOOT_CONDITION__PROJECTILE_DEFINED = NAMED_LOOT_CONDITION_FEATURE_COUNT + 13;

  /**
   * The feature id for the '<em><b>Projectile</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DAMAGE_SOURCE_PROPERTIES_LOOT_CONDITION__PROJECTILE = NAMED_LOOT_CONDITION_FEATURE_COUNT + 14;

  /**
   * The feature id for the '<em><b>Lightning Defined</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DAMAGE_SOURCE_PROPERTIES_LOOT_CONDITION__LIGHTNING_DEFINED = NAMED_LOOT_CONDITION_FEATURE_COUNT + 15;

  /**
   * The feature id for the '<em><b>Lightning</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DAMAGE_SOURCE_PROPERTIES_LOOT_CONDITION__LIGHTNING = NAMED_LOOT_CONDITION_FEATURE_COUNT + 16;

  /**
   * The feature id for the '<em><b>Source Entity</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DAMAGE_SOURCE_PROPERTIES_LOOT_CONDITION__SOURCE_ENTITY = NAMED_LOOT_CONDITION_FEATURE_COUNT + 17;

  /**
   * The number of structural features of the '<em>Damage Source Properties Loot Condition</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DAMAGE_SOURCE_PROPERTIES_LOOT_CONDITION_FEATURE_COUNT = NAMED_LOOT_CONDITION_FEATURE_COUNT + 18;

  /**
   * The meta object id for the '{@link com.raptor.mcloottable.mcloot.impl.EntityPropertiesLootConditionImpl <em>Entity Properties Loot Condition</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see com.raptor.mcloottable.mcloot.impl.EntityPropertiesLootConditionImpl
   * @see com.raptor.mcloottable.mcloot.impl.MclootPackageImpl#getEntityPropertiesLootCondition()
   * @generated
   */
  int ENTITY_PROPERTIES_LOOT_CONDITION = 40;

  /**
   * The feature id for the '<em><b>Id</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ENTITY_PROPERTIES_LOOT_CONDITION__ID = NAMED_LOOT_CONDITION__ID;

  /**
   * The feature id for the '<em><b>Entity</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ENTITY_PROPERTIES_LOOT_CONDITION__ENTITY = NAMED_LOOT_CONDITION_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Predicate</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ENTITY_PROPERTIES_LOOT_CONDITION__PREDICATE = NAMED_LOOT_CONDITION_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>Entity Properties Loot Condition</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ENTITY_PROPERTIES_LOOT_CONDITION_FEATURE_COUNT = NAMED_LOOT_CONDITION_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link com.raptor.mcloottable.mcloot.impl.EntityScoresLootConditionImpl <em>Entity Scores Loot Condition</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see com.raptor.mcloottable.mcloot.impl.EntityScoresLootConditionImpl
   * @see com.raptor.mcloottable.mcloot.impl.MclootPackageImpl#getEntityScoresLootCondition()
   * @generated
   */
  int ENTITY_SCORES_LOOT_CONDITION = 41;

  /**
   * The feature id for the '<em><b>Id</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ENTITY_SCORES_LOOT_CONDITION__ID = NAMED_LOOT_CONDITION__ID;

  /**
   * The feature id for the '<em><b>Entity</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ENTITY_SCORES_LOOT_CONDITION__ENTITY = NAMED_LOOT_CONDITION_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Scores</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ENTITY_SCORES_LOOT_CONDITION__SCORES = NAMED_LOOT_CONDITION_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>Entity Scores Loot Condition</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ENTITY_SCORES_LOOT_CONDITION_FEATURE_COUNT = NAMED_LOOT_CONDITION_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link com.raptor.mcloottable.mcloot.impl.EntityScoreImpl <em>Entity Score</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see com.raptor.mcloottable.mcloot.impl.EntityScoreImpl
   * @see com.raptor.mcloottable.mcloot.impl.MclootPackageImpl#getEntityScore()
   * @generated
   */
  int ENTITY_SCORE = 42;

  /**
   * The feature id for the '<em><b>Objective</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ENTITY_SCORE__OBJECTIVE = 0;

  /**
   * The feature id for the '<em><b>Score</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ENTITY_SCORE__SCORE = 1;

  /**
   * The number of structural features of the '<em>Entity Score</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ENTITY_SCORE_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link com.raptor.mcloottable.mcloot.impl.KilledByPlayerLootConditionImpl <em>Killed By Player Loot Condition</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see com.raptor.mcloottable.mcloot.impl.KilledByPlayerLootConditionImpl
   * @see com.raptor.mcloottable.mcloot.impl.MclootPackageImpl#getKilledByPlayerLootCondition()
   * @generated
   */
  int KILLED_BY_PLAYER_LOOT_CONDITION = 43;

  /**
   * The feature id for the '<em><b>Id</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int KILLED_BY_PLAYER_LOOT_CONDITION__ID = NAMED_LOOT_CONDITION__ID;

  /**
   * The number of structural features of the '<em>Killed By Player Loot Condition</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int KILLED_BY_PLAYER_LOOT_CONDITION_FEATURE_COUNT = NAMED_LOOT_CONDITION_FEATURE_COUNT + 0;

  /**
   * The meta object id for the '{@link com.raptor.mcloottable.mcloot.impl.LocationCheckLootConditionImpl <em>Location Check Loot Condition</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see com.raptor.mcloottable.mcloot.impl.LocationCheckLootConditionImpl
   * @see com.raptor.mcloottable.mcloot.impl.MclootPackageImpl#getLocationCheckLootCondition()
   * @generated
   */
  int LOCATION_CHECK_LOOT_CONDITION = 44;

  /**
   * The feature id for the '<em><b>Id</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LOCATION_CHECK_LOOT_CONDITION__ID = NAMED_LOOT_CONDITION__ID;

  /**
   * The feature id for the '<em><b>Undefined Offset X</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LOCATION_CHECK_LOOT_CONDITION__UNDEFINED_OFFSET_X = NAMED_LOOT_CONDITION_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Offset X</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LOCATION_CHECK_LOOT_CONDITION__OFFSET_X = NAMED_LOOT_CONDITION_FEATURE_COUNT + 1;

  /**
   * The feature id for the '<em><b>Undefined Offset Y</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LOCATION_CHECK_LOOT_CONDITION__UNDEFINED_OFFSET_Y = NAMED_LOOT_CONDITION_FEATURE_COUNT + 2;

  /**
   * The feature id for the '<em><b>Offset Y</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LOCATION_CHECK_LOOT_CONDITION__OFFSET_Y = NAMED_LOOT_CONDITION_FEATURE_COUNT + 3;

  /**
   * The feature id for the '<em><b>Undefined Offset Z</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LOCATION_CHECK_LOOT_CONDITION__UNDEFINED_OFFSET_Z = NAMED_LOOT_CONDITION_FEATURE_COUNT + 4;

  /**
   * The feature id for the '<em><b>Offset Z</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LOCATION_CHECK_LOOT_CONDITION__OFFSET_Z = NAMED_LOOT_CONDITION_FEATURE_COUNT + 5;

  /**
   * The feature id for the '<em><b>Predicate</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LOCATION_CHECK_LOOT_CONDITION__PREDICATE = NAMED_LOOT_CONDITION_FEATURE_COUNT + 6;

  /**
   * The number of structural features of the '<em>Location Check Loot Condition</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LOCATION_CHECK_LOOT_CONDITION_FEATURE_COUNT = NAMED_LOOT_CONDITION_FEATURE_COUNT + 7;

  /**
   * The meta object id for the '{@link com.raptor.mcloottable.mcloot.impl.MatchToolLootConditionImpl <em>Match Tool Loot Condition</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see com.raptor.mcloottable.mcloot.impl.MatchToolLootConditionImpl
   * @see com.raptor.mcloottable.mcloot.impl.MclootPackageImpl#getMatchToolLootCondition()
   * @generated
   */
  int MATCH_TOOL_LOOT_CONDITION = 45;

  /**
   * The feature id for the '<em><b>Id</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MATCH_TOOL_LOOT_CONDITION__ID = NAMED_LOOT_CONDITION__ID;

  /**
   * The feature id for the '<em><b>Inverted</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MATCH_TOOL_LOOT_CONDITION__INVERTED = NAMED_LOOT_CONDITION_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Predicate</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MATCH_TOOL_LOOT_CONDITION__PREDICATE = NAMED_LOOT_CONDITION_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>Match Tool Loot Condition</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MATCH_TOOL_LOOT_CONDITION_FEATURE_COUNT = NAMED_LOOT_CONDITION_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link com.raptor.mcloottable.mcloot.impl.RandomChanceLootConditionImpl <em>Random Chance Loot Condition</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see com.raptor.mcloottable.mcloot.impl.RandomChanceLootConditionImpl
   * @see com.raptor.mcloottable.mcloot.impl.MclootPackageImpl#getRandomChanceLootCondition()
   * @generated
   */
  int RANDOM_CHANCE_LOOT_CONDITION = 46;

  /**
   * The feature id for the '<em><b>Id</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int RANDOM_CHANCE_LOOT_CONDITION__ID = NAMED_LOOT_CONDITION__ID;

  /**
   * The feature id for the '<em><b>Chance</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int RANDOM_CHANCE_LOOT_CONDITION__CHANCE = NAMED_LOOT_CONDITION_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Looting Multiplier Defined</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int RANDOM_CHANCE_LOOT_CONDITION__LOOTING_MULTIPLIER_DEFINED = NAMED_LOOT_CONDITION_FEATURE_COUNT + 1;

  /**
   * The feature id for the '<em><b>Looting Multiplier</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int RANDOM_CHANCE_LOOT_CONDITION__LOOTING_MULTIPLIER = NAMED_LOOT_CONDITION_FEATURE_COUNT + 2;

  /**
   * The number of structural features of the '<em>Random Chance Loot Condition</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int RANDOM_CHANCE_LOOT_CONDITION_FEATURE_COUNT = NAMED_LOOT_CONDITION_FEATURE_COUNT + 3;

  /**
   * The meta object id for the '{@link com.raptor.mcloottable.mcloot.impl.ReferenceLootConditionImpl <em>Reference Loot Condition</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see com.raptor.mcloottable.mcloot.impl.ReferenceLootConditionImpl
   * @see com.raptor.mcloottable.mcloot.impl.MclootPackageImpl#getReferenceLootCondition()
   * @generated
   */
  int REFERENCE_LOOT_CONDITION = 47;

  /**
   * The feature id for the '<em><b>Id</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int REFERENCE_LOOT_CONDITION__ID = NAMED_LOOT_CONDITION__ID;

  /**
   * The feature id for the '<em><b>Ref</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int REFERENCE_LOOT_CONDITION__REF = NAMED_LOOT_CONDITION_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Reference Loot Condition</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int REFERENCE_LOOT_CONDITION_FEATURE_COUNT = NAMED_LOOT_CONDITION_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link com.raptor.mcloottable.mcloot.impl.SurvivesExplosionLootConditionImpl <em>Survives Explosion Loot Condition</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see com.raptor.mcloottable.mcloot.impl.SurvivesExplosionLootConditionImpl
   * @see com.raptor.mcloottable.mcloot.impl.MclootPackageImpl#getSurvivesExplosionLootCondition()
   * @generated
   */
  int SURVIVES_EXPLOSION_LOOT_CONDITION = 48;

  /**
   * The feature id for the '<em><b>Id</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SURVIVES_EXPLOSION_LOOT_CONDITION__ID = NAMED_LOOT_CONDITION__ID;

  /**
   * The number of structural features of the '<em>Survives Explosion Loot Condition</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SURVIVES_EXPLOSION_LOOT_CONDITION_FEATURE_COUNT = NAMED_LOOT_CONDITION_FEATURE_COUNT + 0;

  /**
   * The meta object id for the '{@link com.raptor.mcloottable.mcloot.impl.TableBonusLootConditionImpl <em>Table Bonus Loot Condition</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see com.raptor.mcloottable.mcloot.impl.TableBonusLootConditionImpl
   * @see com.raptor.mcloottable.mcloot.impl.MclootPackageImpl#getTableBonusLootCondition()
   * @generated
   */
  int TABLE_BONUS_LOOT_CONDITION = 49;

  /**
   * The feature id for the '<em><b>Id</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TABLE_BONUS_LOOT_CONDITION__ID = NAMED_LOOT_CONDITION__ID;

  /**
   * The feature id for the '<em><b>Enchantment</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TABLE_BONUS_LOOT_CONDITION__ENCHANTMENT = NAMED_LOOT_CONDITION_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Chances</b></em>' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TABLE_BONUS_LOOT_CONDITION__CHANCES = NAMED_LOOT_CONDITION_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>Table Bonus Loot Condition</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TABLE_BONUS_LOOT_CONDITION_FEATURE_COUNT = NAMED_LOOT_CONDITION_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link com.raptor.mcloottable.mcloot.impl.TimeCheckLootConditionImpl <em>Time Check Loot Condition</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see com.raptor.mcloottable.mcloot.impl.TimeCheckLootConditionImpl
   * @see com.raptor.mcloottable.mcloot.impl.MclootPackageImpl#getTimeCheckLootCondition()
   * @generated
   */
  int TIME_CHECK_LOOT_CONDITION = 50;

  /**
   * The feature id for the '<em><b>Id</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TIME_CHECK_LOOT_CONDITION__ID = NAMED_LOOT_CONDITION__ID;

  /**
   * The feature id for the '<em><b>Period Defined</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TIME_CHECK_LOOT_CONDITION__PERIOD_DEFINED = NAMED_LOOT_CONDITION_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Period</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TIME_CHECK_LOOT_CONDITION__PERIOD = NAMED_LOOT_CONDITION_FEATURE_COUNT + 1;

  /**
   * The feature id for the '<em><b>Inverted</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TIME_CHECK_LOOT_CONDITION__INVERTED = NAMED_LOOT_CONDITION_FEATURE_COUNT + 2;

  /**
   * The feature id for the '<em><b>Value</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TIME_CHECK_LOOT_CONDITION__VALUE = NAMED_LOOT_CONDITION_FEATURE_COUNT + 3;

  /**
   * The number of structural features of the '<em>Time Check Loot Condition</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TIME_CHECK_LOOT_CONDITION_FEATURE_COUNT = NAMED_LOOT_CONDITION_FEATURE_COUNT + 4;

  /**
   * The meta object id for the '{@link com.raptor.mcloottable.mcloot.impl.ToolEnchantmentLootConditionImpl <em>Tool Enchantment Loot Condition</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see com.raptor.mcloottable.mcloot.impl.ToolEnchantmentLootConditionImpl
   * @see com.raptor.mcloottable.mcloot.impl.MclootPackageImpl#getToolEnchantmentLootCondition()
   * @generated
   */
  int TOOL_ENCHANTMENT_LOOT_CONDITION = 51;

  /**
   * The feature id for the '<em><b>Id</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TOOL_ENCHANTMENT_LOOT_CONDITION__ID = NAMED_LOOT_CONDITION__ID;

  /**
   * The feature id for the '<em><b>Enchantments</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TOOL_ENCHANTMENT_LOOT_CONDITION__ENCHANTMENTS = NAMED_LOOT_CONDITION_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Tool Enchantment Loot Condition</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TOOL_ENCHANTMENT_LOOT_CONDITION_FEATURE_COUNT = NAMED_LOOT_CONDITION_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link com.raptor.mcloottable.mcloot.impl.EnchantmentLevelImpl <em>Enchantment Level</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see com.raptor.mcloottable.mcloot.impl.EnchantmentLevelImpl
   * @see com.raptor.mcloottable.mcloot.impl.MclootPackageImpl#getEnchantmentLevel()
   * @generated
   */
  int ENCHANTMENT_LEVEL = 52;

  /**
   * The feature id for the '<em><b>Enchantment</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ENCHANTMENT_LEVEL__ENCHANTMENT = 0;

  /**
   * The feature id for the '<em><b>Levels</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ENCHANTMENT_LEVEL__LEVELS = 1;

  /**
   * The number of structural features of the '<em>Enchantment Level</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ENCHANTMENT_LEVEL_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link com.raptor.mcloottable.mcloot.impl.WeatherCheckLootConditionImpl <em>Weather Check Loot Condition</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see com.raptor.mcloottable.mcloot.impl.WeatherCheckLootConditionImpl
   * @see com.raptor.mcloottable.mcloot.impl.MclootPackageImpl#getWeatherCheckLootCondition()
   * @generated
   */
  int WEATHER_CHECK_LOOT_CONDITION = 53;

  /**
   * The feature id for the '<em><b>Id</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int WEATHER_CHECK_LOOT_CONDITION__ID = NAMED_LOOT_CONDITION__ID;

  /**
   * The feature id for the '<em><b>Inverted</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int WEATHER_CHECK_LOOT_CONDITION__INVERTED = NAMED_LOOT_CONDITION_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Raining</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int WEATHER_CHECK_LOOT_CONDITION__RAINING = NAMED_LOOT_CONDITION_FEATURE_COUNT + 1;

  /**
   * The feature id for the '<em><b>Thundering</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int WEATHER_CHECK_LOOT_CONDITION__THUNDERING = NAMED_LOOT_CONDITION_FEATURE_COUNT + 2;

  /**
   * The number of structural features of the '<em>Weather Check Loot Condition</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int WEATHER_CHECK_LOOT_CONDITION_FEATURE_COUNT = NAMED_LOOT_CONDITION_FEATURE_COUNT + 3;

  /**
   * The meta object id for the '{@link com.raptor.mcloottable.mcloot.impl.EntityPredicateImpl <em>Entity Predicate</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see com.raptor.mcloottable.mcloot.impl.EntityPredicateImpl
   * @see com.raptor.mcloottable.mcloot.impl.MclootPackageImpl#getEntityPredicate()
   * @generated
   */
  int ENTITY_PREDICATE = 54;

  /**
   * The feature id for the '<em><b>Absolute Distance</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ENTITY_PREDICATE__ABSOLUTE_DISTANCE = 0;

  /**
   * The feature id for the '<em><b>Horizontal Distance</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ENTITY_PREDICATE__HORIZONTAL_DISTANCE = 1;

  /**
   * The feature id for the '<em><b>XDistance</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ENTITY_PREDICATE__XDISTANCE = 2;

  /**
   * The feature id for the '<em><b>YDistance</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ENTITY_PREDICATE__YDISTANCE = 3;

  /**
   * The feature id for the '<em><b>ZDistance</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ENTITY_PREDICATE__ZDISTANCE = 4;

  /**
   * The feature id for the '<em><b>Effects Defined</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ENTITY_PREDICATE__EFFECTS_DEFINED = 5;

  /**
   * The feature id for the '<em><b>Effects</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ENTITY_PREDICATE__EFFECTS = 6;

  /**
   * The feature id for the '<em><b>Equipment</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ENTITY_PREDICATE__EQUIPMENT = 7;

  /**
   * The feature id for the '<em><b>Default Equipment</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ENTITY_PREDICATE__DEFAULT_EQUIPMENT = 8;

  /**
   * The feature id for the '<em><b>Flags</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ENTITY_PREDICATE__FLAGS = 9;

  /**
   * The feature id for the '<em><b>Nbt</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ENTITY_PREDICATE__NBT = 10;

  /**
   * The feature id for the '<em><b>Player</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ENTITY_PREDICATE__PLAYER = 11;

  /**
   * The feature id for the '<em><b>Team</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ENTITY_PREDICATE__TEAM = 12;

  /**
   * The feature id for the '<em><b>Type</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ENTITY_PREDICATE__TYPE = 13;

  /**
   * The feature id for the '<em><b>Location</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ENTITY_PREDICATE__LOCATION = 14;

  /**
   * The feature id for the '<em><b>Fishing Hook</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ENTITY_PREDICATE__FISHING_HOOK = 15;

  /**
   * The number of structural features of the '<em>Entity Predicate</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ENTITY_PREDICATE_FEATURE_COUNT = 16;

  /**
   * The meta object id for the '{@link com.raptor.mcloottable.mcloot.impl.FishingHookPredicateImpl <em>Fishing Hook Predicate</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see com.raptor.mcloottable.mcloot.impl.FishingHookPredicateImpl
   * @see com.raptor.mcloottable.mcloot.impl.MclootPackageImpl#getFishingHookPredicate()
   * @generated
   */
  int FISHING_HOOK_PREDICATE = 55;

  /**
   * The feature id for the '<em><b>In Open Water Defined</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FISHING_HOOK_PREDICATE__IN_OPEN_WATER_DEFINED = 0;

  /**
   * The feature id for the '<em><b>In Open Water</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FISHING_HOOK_PREDICATE__IN_OPEN_WATER = 1;

  /**
   * The number of structural features of the '<em>Fishing Hook Predicate</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FISHING_HOOK_PREDICATE_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link com.raptor.mcloottable.mcloot.impl.EffectPredicateImpl <em>Effect Predicate</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see com.raptor.mcloottable.mcloot.impl.EffectPredicateImpl
   * @see com.raptor.mcloottable.mcloot.impl.MclootPackageImpl#getEffectPredicate()
   * @generated
   */
  int EFFECT_PREDICATE = 56;

  /**
   * The feature id for the '<em><b>Id</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EFFECT_PREDICATE__ID = 0;

  /**
   * The feature id for the '<em><b>Amplifier</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EFFECT_PREDICATE__AMPLIFIER = 1;

  /**
   * The feature id for the '<em><b>Duration</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EFFECT_PREDICATE__DURATION = 2;

  /**
   * The number of structural features of the '<em>Effect Predicate</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EFFECT_PREDICATE_FEATURE_COUNT = 3;

  /**
   * The meta object id for the '{@link com.raptor.mcloottable.mcloot.impl.EquipmentPredicateImpl <em>Equipment Predicate</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see com.raptor.mcloottable.mcloot.impl.EquipmentPredicateImpl
   * @see com.raptor.mcloottable.mcloot.impl.MclootPackageImpl#getEquipmentPredicate()
   * @generated
   */
  int EQUIPMENT_PREDICATE = 57;

  /**
   * The feature id for the '<em><b>Slots</b></em>' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EQUIPMENT_PREDICATE__SLOTS = 0;

  /**
   * The feature id for the '<em><b>Predicate</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EQUIPMENT_PREDICATE__PREDICATE = 1;

  /**
   * The number of structural features of the '<em>Equipment Predicate</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EQUIPMENT_PREDICATE_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link com.raptor.mcloottable.mcloot.impl.EntityFlagsImpl <em>Entity Flags</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see com.raptor.mcloottable.mcloot.impl.EntityFlagsImpl
   * @see com.raptor.mcloottable.mcloot.impl.MclootPackageImpl#getEntityFlags()
   * @generated
   */
  int ENTITY_FLAGS = 58;

  /**
   * The feature id for the '<em><b>On Fire Defined</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ENTITY_FLAGS__ON_FIRE_DEFINED = 0;

  /**
   * The feature id for the '<em><b>On Fire</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ENTITY_FLAGS__ON_FIRE = 1;

  /**
   * The feature id for the '<em><b>Sneaking Defined</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ENTITY_FLAGS__SNEAKING_DEFINED = 2;

  /**
   * The feature id for the '<em><b>Sneaking</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ENTITY_FLAGS__SNEAKING = 3;

  /**
   * The feature id for the '<em><b>Sprinting Defined</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ENTITY_FLAGS__SPRINTING_DEFINED = 4;

  /**
   * The feature id for the '<em><b>Sprinting</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ENTITY_FLAGS__SPRINTING = 5;

  /**
   * The feature id for the '<em><b>Swimming Defined</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ENTITY_FLAGS__SWIMMING_DEFINED = 6;

  /**
   * The feature id for the '<em><b>Swimming</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ENTITY_FLAGS__SWIMMING = 7;

  /**
   * The feature id for the '<em><b>Baby Defined</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ENTITY_FLAGS__BABY_DEFINED = 8;

  /**
   * The feature id for the '<em><b>Baby</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ENTITY_FLAGS__BABY = 9;

  /**
   * The number of structural features of the '<em>Entity Flags</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ENTITY_FLAGS_FEATURE_COUNT = 10;

  /**
   * The meta object id for the '{@link com.raptor.mcloottable.mcloot.impl.PlayerPredicateImpl <em>Player Predicate</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see com.raptor.mcloottable.mcloot.impl.PlayerPredicateImpl
   * @see com.raptor.mcloottable.mcloot.impl.MclootPackageImpl#getPlayerPredicate()
   * @generated
   */
  int PLAYER_PREDICATE = 59;

  /**
   * The feature id for the '<em><b>Advancements Defined</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PLAYER_PREDICATE__ADVANCEMENTS_DEFINED = 0;

  /**
   * The feature id for the '<em><b>Advancements</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PLAYER_PREDICATE__ADVANCEMENTS = 1;

  /**
   * The feature id for the '<em><b>Gamemode Defined</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PLAYER_PREDICATE__GAMEMODE_DEFINED = 2;

  /**
   * The feature id for the '<em><b>Gamemode</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PLAYER_PREDICATE__GAMEMODE = 3;

  /**
   * The feature id for the '<em><b>Recipes Defined</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PLAYER_PREDICATE__RECIPES_DEFINED = 4;

  /**
   * The feature id for the '<em><b>Recipes</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PLAYER_PREDICATE__RECIPES = 5;

  /**
   * The feature id for the '<em><b>Stats Defined</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PLAYER_PREDICATE__STATS_DEFINED = 6;

  /**
   * The feature id for the '<em><b>Stats</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PLAYER_PREDICATE__STATS = 7;

  /**
   * The number of structural features of the '<em>Player Predicate</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PLAYER_PREDICATE_FEATURE_COUNT = 8;

  /**
   * The meta object id for the '{@link com.raptor.mcloottable.mcloot.impl.AdvancementPredicateImpl <em>Advancement Predicate</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see com.raptor.mcloottable.mcloot.impl.AdvancementPredicateImpl
   * @see com.raptor.mcloottable.mcloot.impl.MclootPackageImpl#getAdvancementPredicate()
   * @generated
   */
  int ADVANCEMENT_PREDICATE = 60;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ADVANCEMENT_PREDICATE__NAME = 0;

  /**
   * The feature id for the '<em><b>Did Not Get</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ADVANCEMENT_PREDICATE__DID_NOT_GET = 1;

  /**
   * The feature id for the '<em><b>Criteria</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ADVANCEMENT_PREDICATE__CRITERIA = 2;

  /**
   * The number of structural features of the '<em>Advancement Predicate</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ADVANCEMENT_PREDICATE_FEATURE_COUNT = 3;

  /**
   * The meta object id for the '{@link com.raptor.mcloottable.mcloot.impl.AdvancementCriteriaImpl <em>Advancement Criteria</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see com.raptor.mcloottable.mcloot.impl.AdvancementCriteriaImpl
   * @see com.raptor.mcloottable.mcloot.impl.MclootPackageImpl#getAdvancementCriteria()
   * @generated
   */
  int ADVANCEMENT_CRITERIA = 61;

  /**
   * The feature id for the '<em><b>Criteria Names</b></em>' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ADVANCEMENT_CRITERIA__CRITERIA_NAMES = 0;

  /**
   * The feature id for the '<em><b>Did Not Get</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ADVANCEMENT_CRITERIA__DID_NOT_GET = 1;

  /**
   * The number of structural features of the '<em>Advancement Criteria</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ADVANCEMENT_CRITERIA_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link com.raptor.mcloottable.mcloot.impl.RecipePredicateImpl <em>Recipe Predicate</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see com.raptor.mcloottable.mcloot.impl.RecipePredicateImpl
   * @see com.raptor.mcloottable.mcloot.impl.MclootPackageImpl#getRecipePredicate()
   * @generated
   */
  int RECIPE_PREDICATE = 62;

  /**
   * The feature id for the '<em><b>Recipe</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int RECIPE_PREDICATE__RECIPE = 0;

  /**
   * The feature id for the '<em><b>Did Not Get</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int RECIPE_PREDICATE__DID_NOT_GET = 1;

  /**
   * The number of structural features of the '<em>Recipe Predicate</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int RECIPE_PREDICATE_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link com.raptor.mcloottable.mcloot.impl.StatisticPredicateImpl <em>Statistic Predicate</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see com.raptor.mcloottable.mcloot.impl.StatisticPredicateImpl
   * @see com.raptor.mcloottable.mcloot.impl.MclootPackageImpl#getStatisticPredicate()
   * @generated
   */
  int STATISTIC_PREDICATE = 63;

  /**
   * The feature id for the '<em><b>Type</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STATISTIC_PREDICATE__TYPE = 0;

  /**
   * The number of structural features of the '<em>Statistic Predicate</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STATISTIC_PREDICATE_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link com.raptor.mcloottable.mcloot.impl.SingleStatisticPredicateImpl <em>Single Statistic Predicate</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see com.raptor.mcloottable.mcloot.impl.SingleStatisticPredicateImpl
   * @see com.raptor.mcloottable.mcloot.impl.MclootPackageImpl#getSingleStatisticPredicate()
   * @generated
   */
  int SINGLE_STATISTIC_PREDICATE = 64;

  /**
   * The feature id for the '<em><b>Type</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SINGLE_STATISTIC_PREDICATE__TYPE = STATISTIC_PREDICATE__TYPE;

  /**
   * The feature id for the '<em><b>Stat</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SINGLE_STATISTIC_PREDICATE__STAT = STATISTIC_PREDICATE_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Value</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SINGLE_STATISTIC_PREDICATE__VALUE = STATISTIC_PREDICATE_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>Single Statistic Predicate</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SINGLE_STATISTIC_PREDICATE_FEATURE_COUNT = STATISTIC_PREDICATE_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link com.raptor.mcloottable.mcloot.impl.NamespacedStatisticPredicateImpl <em>Namespaced Statistic Predicate</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see com.raptor.mcloottable.mcloot.impl.NamespacedStatisticPredicateImpl
   * @see com.raptor.mcloottable.mcloot.impl.MclootPackageImpl#getNamespacedStatisticPredicate()
   * @generated
   */
  int NAMESPACED_STATISTIC_PREDICATE = 65;

  /**
   * The feature id for the '<em><b>Type</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NAMESPACED_STATISTIC_PREDICATE__TYPE = STATISTIC_PREDICATE__TYPE;

  /**
   * The feature id for the '<em><b>Stats</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NAMESPACED_STATISTIC_PREDICATE__STATS = STATISTIC_PREDICATE_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Namespaced Statistic Predicate</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NAMESPACED_STATISTIC_PREDICATE_FEATURE_COUNT = STATISTIC_PREDICATE_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link com.raptor.mcloottable.mcloot.impl.UnnamespacedStatisticPredicateImpl <em>Unnamespaced Statistic Predicate</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see com.raptor.mcloottable.mcloot.impl.UnnamespacedStatisticPredicateImpl
   * @see com.raptor.mcloottable.mcloot.impl.MclootPackageImpl#getUnnamespacedStatisticPredicate()
   * @generated
   */
  int UNNAMESPACED_STATISTIC_PREDICATE = 66;

  /**
   * The feature id for the '<em><b>Stat</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int UNNAMESPACED_STATISTIC_PREDICATE__STAT = 0;

  /**
   * The feature id for the '<em><b>Value</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int UNNAMESPACED_STATISTIC_PREDICATE__VALUE = 1;

  /**
   * The number of structural features of the '<em>Unnamespaced Statistic Predicate</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int UNNAMESPACED_STATISTIC_PREDICATE_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link com.raptor.mcloottable.mcloot.impl.LocationPredicateImpl <em>Location Predicate</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see com.raptor.mcloottable.mcloot.impl.LocationPredicateImpl
   * @see com.raptor.mcloottable.mcloot.impl.MclootPackageImpl#getLocationPredicate()
   * @generated
   */
  int LOCATION_PREDICATE = 67;

  /**
   * The feature id for the '<em><b>Biome</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LOCATION_PREDICATE__BIOME = 0;

  /**
   * The feature id for the '<em><b>Block</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LOCATION_PREDICATE__BLOCK = 1;

  /**
   * The feature id for the '<em><b>Dimension</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LOCATION_PREDICATE__DIMENSION = 2;

  /**
   * The feature id for the '<em><b>Feature</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LOCATION_PREDICATE__FEATURE = 3;

  /**
   * The feature id for the '<em><b>Fluid</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LOCATION_PREDICATE__FLUID = 4;

  /**
   * The feature id for the '<em><b>Light</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LOCATION_PREDICATE__LIGHT = 5;

  /**
   * The feature id for the '<em><b>XPos</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LOCATION_PREDICATE__XPOS = 6;

  /**
   * The feature id for the '<em><b>YPos</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LOCATION_PREDICATE__YPOS = 7;

  /**
   * The feature id for the '<em><b>ZPos</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LOCATION_PREDICATE__ZPOS = 8;

  /**
   * The number of structural features of the '<em>Location Predicate</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LOCATION_PREDICATE_FEATURE_COUNT = 9;

  /**
   * The meta object id for the '{@link com.raptor.mcloottable.mcloot.impl.ItemPredicateImpl <em>Item Predicate</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see com.raptor.mcloottable.mcloot.impl.ItemPredicateImpl
   * @see com.raptor.mcloottable.mcloot.impl.MclootPackageImpl#getItemPredicate()
   * @generated
   */
  int ITEM_PREDICATE = 68;

  /**
   * The feature id for the '<em><b>Tag</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ITEM_PREDICATE__TAG = 0;

  /**
   * The feature id for the '<em><b>Item</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ITEM_PREDICATE__ITEM = 1;

  /**
   * The feature id for the '<em><b>Count Defined</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ITEM_PREDICATE__COUNT_DEFINED = 2;

  /**
   * The feature id for the '<em><b>Count</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ITEM_PREDICATE__COUNT = 3;

  /**
   * The feature id for the '<em><b>Durability Defined</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ITEM_PREDICATE__DURABILITY_DEFINED = 4;

  /**
   * The feature id for the '<em><b>Durability</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ITEM_PREDICATE__DURABILITY = 5;

  /**
   * The feature id for the '<em><b>Enchantments Defined</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ITEM_PREDICATE__ENCHANTMENTS_DEFINED = 6;

  /**
   * The feature id for the '<em><b>Enchantments</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ITEM_PREDICATE__ENCHANTMENTS = 7;

  /**
   * The feature id for the '<em><b>Stored Enchantments Defined</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ITEM_PREDICATE__STORED_ENCHANTMENTS_DEFINED = 8;

  /**
   * The feature id for the '<em><b>Stored Enchantments</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ITEM_PREDICATE__STORED_ENCHANTMENTS = 9;

  /**
   * The feature id for the '<em><b>Nbt Defined</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ITEM_PREDICATE__NBT_DEFINED = 10;

  /**
   * The feature id for the '<em><b>Nbt</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ITEM_PREDICATE__NBT = 11;

  /**
   * The feature id for the '<em><b>Potion Defined</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ITEM_PREDICATE__POTION_DEFINED = 12;

  /**
   * The feature id for the '<em><b>Potion</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ITEM_PREDICATE__POTION = 13;

  /**
   * The number of structural features of the '<em>Item Predicate</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ITEM_PREDICATE_FEATURE_COUNT = 14;

  /**
   * The meta object id for the '{@link com.raptor.mcloottable.mcloot.impl.BlockPredicateImpl <em>Block Predicate</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see com.raptor.mcloottable.mcloot.impl.BlockPredicateImpl
   * @see com.raptor.mcloottable.mcloot.impl.MclootPackageImpl#getBlockPredicate()
   * @generated
   */
  int BLOCK_PREDICATE = 69;

  /**
   * The feature id for the '<em><b>Tag</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BLOCK_PREDICATE__TAG = 0;

  /**
   * The feature id for the '<em><b>Block</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BLOCK_PREDICATE__BLOCK = 1;

  /**
   * The feature id for the '<em><b>Nbt</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BLOCK_PREDICATE__NBT = 2;

  /**
   * The feature id for the '<em><b>State Defined</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BLOCK_PREDICATE__STATE_DEFINED = 3;

  /**
   * The feature id for the '<em><b>Properties</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BLOCK_PREDICATE__PROPERTIES = 4;

  /**
   * The number of structural features of the '<em>Block Predicate</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BLOCK_PREDICATE_FEATURE_COUNT = 5;

  /**
   * The meta object id for the '{@link com.raptor.mcloottable.mcloot.impl.BlockStatePropertyPredicateImpl <em>Block State Property Predicate</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see com.raptor.mcloottable.mcloot.impl.BlockStatePropertyPredicateImpl
   * @see com.raptor.mcloottable.mcloot.impl.MclootPackageImpl#getBlockStatePropertyPredicate()
   * @generated
   */
  int BLOCK_STATE_PROPERTY_PREDICATE = 70;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BLOCK_STATE_PROPERTY_PREDICATE__NAME = 0;

  /**
   * The feature id for the '<em><b>Value</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BLOCK_STATE_PROPERTY_PREDICATE__VALUE = 1;

  /**
   * The feature id for the '<em><b>Value Range</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BLOCK_STATE_PROPERTY_PREDICATE__VALUE_RANGE = 2;

  /**
   * The number of structural features of the '<em>Block State Property Predicate</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BLOCK_STATE_PROPERTY_PREDICATE_FEATURE_COUNT = 3;

  /**
   * The meta object id for the '{@link com.raptor.mcloottable.mcloot.impl.FluidPredicateImpl <em>Fluid Predicate</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see com.raptor.mcloottable.mcloot.impl.FluidPredicateImpl
   * @see com.raptor.mcloottable.mcloot.impl.MclootPackageImpl#getFluidPredicate()
   * @generated
   */
  int FLUID_PREDICATE = 71;

  /**
   * The feature id for the '<em><b>Tag</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FLUID_PREDICATE__TAG = 0;

  /**
   * The feature id for the '<em><b>Fluid</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FLUID_PREDICATE__FLUID = 1;

  /**
   * The feature id for the '<em><b>State Defined</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FLUID_PREDICATE__STATE_DEFINED = 2;

  /**
   * The feature id for the '<em><b>Properties</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FLUID_PREDICATE__PROPERTIES = 3;

  /**
   * The number of structural features of the '<em>Fluid Predicate</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FLUID_PREDICATE_FEATURE_COUNT = 4;

  /**
   * The meta object id for the '{@link com.raptor.mcloottable.mcloot.impl.MCJsonValueImpl <em>MC Json Value</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see com.raptor.mcloottable.mcloot.impl.MCJsonValueImpl
   * @see com.raptor.mcloottable.mcloot.impl.MclootPackageImpl#getMCJsonValue()
   * @generated
   */
  int MC_JSON_VALUE = 72;

  /**
   * The number of structural features of the '<em>MC Json Value</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MC_JSON_VALUE_FEATURE_COUNT = 0;

  /**
   * The meta object id for the '{@link com.raptor.mcloottable.mcloot.impl.MCJsonObjectImpl <em>MC Json Object</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see com.raptor.mcloottable.mcloot.impl.MCJsonObjectImpl
   * @see com.raptor.mcloottable.mcloot.impl.MclootPackageImpl#getMCJsonObject()
   * @generated
   */
  int MC_JSON_OBJECT = 73;

  /**
   * The feature id for the '<em><b>Entries</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MC_JSON_OBJECT__ENTRIES = MC_JSON_VALUE_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>MC Json Object</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MC_JSON_OBJECT_FEATURE_COUNT = MC_JSON_VALUE_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link com.raptor.mcloottable.mcloot.impl.MCJsonEntryImpl <em>MC Json Entry</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see com.raptor.mcloottable.mcloot.impl.MCJsonEntryImpl
   * @see com.raptor.mcloottable.mcloot.impl.MclootPackageImpl#getMCJsonEntry()
   * @generated
   */
  int MC_JSON_ENTRY = 74;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MC_JSON_ENTRY__NAME = 0;

  /**
   * The feature id for the '<em><b>Value</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MC_JSON_ENTRY__VALUE = 1;

  /**
   * The number of structural features of the '<em>MC Json Entry</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MC_JSON_ENTRY_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link com.raptor.mcloottable.mcloot.impl.MCJsonArrayImpl <em>MC Json Array</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see com.raptor.mcloottable.mcloot.impl.MCJsonArrayImpl
   * @see com.raptor.mcloottable.mcloot.impl.MclootPackageImpl#getMCJsonArray()
   * @generated
   */
  int MC_JSON_ARRAY = 75;

  /**
   * The feature id for the '<em><b>Elements</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MC_JSON_ARRAY__ELEMENTS = MC_JSON_VALUE_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>MC Json Array</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MC_JSON_ARRAY_FEATURE_COUNT = MC_JSON_VALUE_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link com.raptor.mcloottable.mcloot.impl.MCJsonStringImpl <em>MC Json String</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see com.raptor.mcloottable.mcloot.impl.MCJsonStringImpl
   * @see com.raptor.mcloottable.mcloot.impl.MclootPackageImpl#getMCJsonString()
   * @generated
   */
  int MC_JSON_STRING = 76;

  /**
   * The feature id for the '<em><b>Value</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MC_JSON_STRING__VALUE = MC_JSON_VALUE_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>MC Json String</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MC_JSON_STRING_FEATURE_COUNT = MC_JSON_VALUE_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link com.raptor.mcloottable.mcloot.impl.MCJsonNumberImpl <em>MC Json Number</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see com.raptor.mcloottable.mcloot.impl.MCJsonNumberImpl
   * @see com.raptor.mcloottable.mcloot.impl.MclootPackageImpl#getMCJsonNumber()
   * @generated
   */
  int MC_JSON_NUMBER = 77;

  /**
   * The number of structural features of the '<em>MC Json Number</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MC_JSON_NUMBER_FEATURE_COUNT = MC_JSON_VALUE_FEATURE_COUNT + 0;

  /**
   * The meta object id for the '{@link com.raptor.mcloottable.mcloot.impl.MCJsonIntegralImpl <em>MC Json Integral</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see com.raptor.mcloottable.mcloot.impl.MCJsonIntegralImpl
   * @see com.raptor.mcloottable.mcloot.impl.MclootPackageImpl#getMCJsonIntegral()
   * @generated
   */
  int MC_JSON_INTEGRAL = 78;

  /**
   * The feature id for the '<em><b>Value</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MC_JSON_INTEGRAL__VALUE = MC_JSON_NUMBER_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>MC Json Integral</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MC_JSON_INTEGRAL_FEATURE_COUNT = MC_JSON_NUMBER_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link com.raptor.mcloottable.mcloot.impl.MCJsonFloatingPointImpl <em>MC Json Floating Point</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see com.raptor.mcloottable.mcloot.impl.MCJsonFloatingPointImpl
   * @see com.raptor.mcloottable.mcloot.impl.MclootPackageImpl#getMCJsonFloatingPoint()
   * @generated
   */
  int MC_JSON_FLOATING_POINT = 79;

  /**
   * The feature id for the '<em><b>Value</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MC_JSON_FLOATING_POINT__VALUE = MC_JSON_NUMBER_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>MC Json Floating Point</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MC_JSON_FLOATING_POINT_FEATURE_COUNT = MC_JSON_NUMBER_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link com.raptor.mcloottable.mcloot.impl.MCJsonBooleanImpl <em>MC Json Boolean</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see com.raptor.mcloottable.mcloot.impl.MCJsonBooleanImpl
   * @see com.raptor.mcloottable.mcloot.impl.MclootPackageImpl#getMCJsonBoolean()
   * @generated
   */
  int MC_JSON_BOOLEAN = 80;

  /**
   * The feature id for the '<em><b>Value</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MC_JSON_BOOLEAN__VALUE = MC_JSON_VALUE_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>MC Json Boolean</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MC_JSON_BOOLEAN_FEATURE_COUNT = MC_JSON_VALUE_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link com.raptor.mcloottable.mcloot.impl.MCJsonNullImpl <em>MC Json Null</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see com.raptor.mcloottable.mcloot.impl.MCJsonNullImpl
   * @see com.raptor.mcloottable.mcloot.impl.MclootPackageImpl#getMCJsonNull()
   * @generated
   */
  int MC_JSON_NULL = 81;

  /**
   * The number of structural features of the '<em>MC Json Null</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MC_JSON_NULL_FEATURE_COUNT = MC_JSON_VALUE_FEATURE_COUNT + 0;

  /**
   * The meta object id for the '{@link com.raptor.mcloottable.mcloot.impl.LongRangeImpl <em>Long Range</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see com.raptor.mcloottable.mcloot.impl.LongRangeImpl
   * @see com.raptor.mcloottable.mcloot.impl.MclootPackageImpl#getLongRange()
   * @generated
   */
  int LONG_RANGE = 82;

  /**
   * The number of structural features of the '<em>Long Range</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LONG_RANGE_FEATURE_COUNT = 0;

  /**
   * The meta object id for the '{@link com.raptor.mcloottable.mcloot.impl.ExactLongRangeImpl <em>Exact Long Range</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see com.raptor.mcloottable.mcloot.impl.ExactLongRangeImpl
   * @see com.raptor.mcloottable.mcloot.impl.MclootPackageImpl#getExactLongRange()
   * @generated
   */
  int EXACT_LONG_RANGE = 83;

  /**
   * The feature id for the '<em><b>Value</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXACT_LONG_RANGE__VALUE = LONG_RANGE_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Exact Long Range</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXACT_LONG_RANGE_FEATURE_COUNT = LONG_RANGE_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link com.raptor.mcloottable.mcloot.impl.NormalLongRangeImpl <em>Normal Long Range</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see com.raptor.mcloottable.mcloot.impl.NormalLongRangeImpl
   * @see com.raptor.mcloottable.mcloot.impl.MclootPackageImpl#getNormalLongRange()
   * @generated
   */
  int NORMAL_LONG_RANGE = 84;

  /**
   * The feature id for the '<em><b>Min</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NORMAL_LONG_RANGE__MIN = LONG_RANGE_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Max</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NORMAL_LONG_RANGE__MAX = LONG_RANGE_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>Normal Long Range</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NORMAL_LONG_RANGE_FEATURE_COUNT = LONG_RANGE_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link com.raptor.mcloottable.mcloot.impl.DoubleRangeImpl <em>Double Range</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see com.raptor.mcloottable.mcloot.impl.DoubleRangeImpl
   * @see com.raptor.mcloottable.mcloot.impl.MclootPackageImpl#getDoubleRange()
   * @generated
   */
  int DOUBLE_RANGE = 85;

  /**
   * The number of structural features of the '<em>Double Range</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DOUBLE_RANGE_FEATURE_COUNT = 0;

  /**
   * The meta object id for the '{@link com.raptor.mcloottable.mcloot.impl.ExactDoubleRangeImpl <em>Exact Double Range</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see com.raptor.mcloottable.mcloot.impl.ExactDoubleRangeImpl
   * @see com.raptor.mcloottable.mcloot.impl.MclootPackageImpl#getExactDoubleRange()
   * @generated
   */
  int EXACT_DOUBLE_RANGE = 86;

  /**
   * The feature id for the '<em><b>Value</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXACT_DOUBLE_RANGE__VALUE = DOUBLE_RANGE_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Exact Double Range</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXACT_DOUBLE_RANGE_FEATURE_COUNT = DOUBLE_RANGE_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link com.raptor.mcloottable.mcloot.impl.NormalDoubleRangeImpl <em>Normal Double Range</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see com.raptor.mcloottable.mcloot.impl.NormalDoubleRangeImpl
   * @see com.raptor.mcloottable.mcloot.impl.MclootPackageImpl#getNormalDoubleRange()
   * @generated
   */
  int NORMAL_DOUBLE_RANGE = 87;

  /**
   * The feature id for the '<em><b>Min</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NORMAL_DOUBLE_RANGE__MIN = DOUBLE_RANGE_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Max</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NORMAL_DOUBLE_RANGE__MAX = DOUBLE_RANGE_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>Normal Double Range</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NORMAL_DOUBLE_RANGE_FEATURE_COUNT = DOUBLE_RANGE_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link com.raptor.mcloottable.mcloot.impl.LootFunctionWithConditionsImpl <em>Loot Function With Conditions</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see com.raptor.mcloottable.mcloot.impl.LootFunctionWithConditionsImpl
   * @see com.raptor.mcloottable.mcloot.impl.MclootPackageImpl#getLootFunctionWithConditions()
   * @generated
   */
  int LOOT_FUNCTION_WITH_CONDITIONS = 88;

  /**
   * The feature id for the '<em><b>Id</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LOOT_FUNCTION_WITH_CONDITIONS__ID = LOOT_FUNCTION__ID;

  /**
   * The feature id for the '<em><b>Conditions Defined</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LOOT_FUNCTION_WITH_CONDITIONS__CONDITIONS_DEFINED = LOOT_FUNCTION_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Conditions</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LOOT_FUNCTION_WITH_CONDITIONS__CONDITIONS = LOOT_FUNCTION_FEATURE_COUNT + 1;

  /**
   * The feature id for the '<em><b>Function</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LOOT_FUNCTION_WITH_CONDITIONS__FUNCTION = LOOT_FUNCTION_FEATURE_COUNT + 2;

  /**
   * The number of structural features of the '<em>Loot Function With Conditions</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LOOT_FUNCTION_WITH_CONDITIONS_FEATURE_COUNT = LOOT_FUNCTION_FEATURE_COUNT + 3;

  /**
   * The meta object id for the '{@link com.raptor.mcloottable.mcloot.impl.AlternativeLootConditionImpl <em>Alternative Loot Condition</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see com.raptor.mcloottable.mcloot.impl.AlternativeLootConditionImpl
   * @see com.raptor.mcloottable.mcloot.impl.MclootPackageImpl#getAlternativeLootCondition()
   * @generated
   */
  int ALTERNATIVE_LOOT_CONDITION = 89;

  /**
   * The feature id for the '<em><b>Alternatives</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ALTERNATIVE_LOOT_CONDITION__ALTERNATIVES = LOOT_CONDITION_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Alternative Loot Condition</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ALTERNATIVE_LOOT_CONDITION_FEATURE_COUNT = LOOT_CONDITION_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link com.raptor.mcloottable.mcloot.impl.InvertedLootConditionImpl <em>Inverted Loot Condition</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see com.raptor.mcloottable.mcloot.impl.InvertedLootConditionImpl
   * @see com.raptor.mcloottable.mcloot.impl.MclootPackageImpl#getInvertedLootCondition()
   * @generated
   */
  int INVERTED_LOOT_CONDITION = 90;

  /**
   * The feature id for the '<em><b>Term</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int INVERTED_LOOT_CONDITION__TERM = LOOT_CONDITION_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Inverted Loot Condition</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int INVERTED_LOOT_CONDITION_FEATURE_COUNT = LOOT_CONDITION_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link com.raptor.mcloottable.mcloot.EnumEquipmentSlot <em>Enum Equipment Slot</em>}' enum.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see com.raptor.mcloottable.mcloot.EnumEquipmentSlot
   * @see com.raptor.mcloottable.mcloot.impl.MclootPackageImpl#getEnumEquipmentSlot()
   * @generated
   */
  int ENUM_EQUIPMENT_SLOT = 91;

  /**
   * The meta object id for the '{@link com.raptor.mcloottable.mcloot.EnumGamemode <em>Enum Gamemode</em>}' enum.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see com.raptor.mcloottable.mcloot.EnumGamemode
   * @see com.raptor.mcloottable.mcloot.impl.MclootPackageImpl#getEnumGamemode()
   * @generated
   */
  int ENUM_GAMEMODE = 92;

  /**
   * The meta object id for the '{@link com.raptor.mcloottable.mcloot.EnumLootTableType <em>Enum Loot Table Type</em>}' enum.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see com.raptor.mcloottable.mcloot.EnumLootTableType
   * @see com.raptor.mcloottable.mcloot.impl.MclootPackageImpl#getEnumLootTableType()
   * @generated
   */
  int ENUM_LOOT_TABLE_TYPE = 93;

  /**
   * The meta object id for the '{@link com.raptor.mcloottable.mcloot.EnumBonusFormula <em>Enum Bonus Formula</em>}' enum.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see com.raptor.mcloottable.mcloot.EnumBonusFormula
   * @see com.raptor.mcloottable.mcloot.impl.MclootPackageImpl#getEnumBonusFormula()
   * @generated
   */
  int ENUM_BONUS_FORMULA = 94;

  /**
   * The meta object id for the '{@link com.raptor.mcloottable.mcloot.EnumNBTSource <em>Enum NBT Source</em>}' enum.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see com.raptor.mcloottable.mcloot.EnumNBTSource
   * @see com.raptor.mcloottable.mcloot.impl.MclootPackageImpl#getEnumNBTSource()
   * @generated
   */
  int ENUM_NBT_SOURCE = 95;

  /**
   * The meta object id for the '{@link com.raptor.mcloottable.mcloot.EnumAttributeModifierOperation <em>Enum Attribute Modifier Operation</em>}' enum.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see com.raptor.mcloottable.mcloot.EnumAttributeModifierOperation
   * @see com.raptor.mcloottable.mcloot.impl.MclootPackageImpl#getEnumAttributeModifierOperation()
   * @generated
   */
  int ENUM_ATTRIBUTE_MODIFIER_OPERATION = 96;

  /**
   * The meta object id for the '{@link com.raptor.mcloottable.mcloot.EnumEntitySource <em>Enum Entity Source</em>}' enum.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see com.raptor.mcloottable.mcloot.EnumEntitySource
   * @see com.raptor.mcloottable.mcloot.impl.MclootPackageImpl#getEnumEntitySource()
   * @generated
   */
  int ENUM_ENTITY_SOURCE = 97;


  /**
   * Returns the meta object for class '{@link com.raptor.mcloottable.mcloot.LootTable <em>Loot Table</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Loot Table</em>'.
   * @see com.raptor.mcloottable.mcloot.LootTable
   * @generated
   */
  EClass getLootTable();

  /**
   * Returns the meta object for the attribute '{@link com.raptor.mcloottable.mcloot.LootTable#isTypeDefined <em>Type Defined</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Type Defined</em>'.
   * @see com.raptor.mcloottable.mcloot.LootTable#isTypeDefined()
   * @see #getLootTable()
   * @generated
   */
  EAttribute getLootTable_TypeDefined();

  /**
   * Returns the meta object for the attribute '{@link com.raptor.mcloottable.mcloot.LootTable#getType <em>Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Type</em>'.
   * @see com.raptor.mcloottable.mcloot.LootTable#getType()
   * @see #getLootTable()
   * @generated
   */
  EAttribute getLootTable_Type();

  /**
   * Returns the meta object for the attribute '{@link com.raptor.mcloottable.mcloot.LootTable#isPoolsDefined <em>Pools Defined</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Pools Defined</em>'.
   * @see com.raptor.mcloottable.mcloot.LootTable#isPoolsDefined()
   * @see #getLootTable()
   * @generated
   */
  EAttribute getLootTable_PoolsDefined();

  /**
   * Returns the meta object for the containment reference list '{@link com.raptor.mcloottable.mcloot.LootTable#getPools <em>Pools</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Pools</em>'.
   * @see com.raptor.mcloottable.mcloot.LootTable#getPools()
   * @see #getLootTable()
   * @generated
   */
  EReference getLootTable_Pools();

  /**
   * Returns the meta object for class '{@link com.raptor.mcloottable.mcloot.LootPool <em>Loot Pool</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Loot Pool</em>'.
   * @see com.raptor.mcloottable.mcloot.LootPool
   * @generated
   */
  EClass getLootPool();

  /**
   * Returns the meta object for the attribute '{@link com.raptor.mcloottable.mcloot.LootPool#isConditionsDefined <em>Conditions Defined</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Conditions Defined</em>'.
   * @see com.raptor.mcloottable.mcloot.LootPool#isConditionsDefined()
   * @see #getLootPool()
   * @generated
   */
  EAttribute getLootPool_ConditionsDefined();

  /**
   * Returns the meta object for the containment reference list '{@link com.raptor.mcloottable.mcloot.LootPool#getConditions <em>Conditions</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Conditions</em>'.
   * @see com.raptor.mcloottable.mcloot.LootPool#getConditions()
   * @see #getLootPool()
   * @generated
   */
  EReference getLootPool_Conditions();

  /**
   * Returns the meta object for the attribute '{@link com.raptor.mcloottable.mcloot.LootPool#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see com.raptor.mcloottable.mcloot.LootPool#getName()
   * @see #getLootPool()
   * @generated
   */
  EAttribute getLootPool_Name();

  /**
   * Returns the meta object for the attribute '{@link com.raptor.mcloottable.mcloot.LootPool#isRollsDefined <em>Rolls Defined</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Rolls Defined</em>'.
   * @see com.raptor.mcloottable.mcloot.LootPool#isRollsDefined()
   * @see #getLootPool()
   * @generated
   */
  EAttribute getLootPool_RollsDefined();

  /**
   * Returns the meta object for the containment reference '{@link com.raptor.mcloottable.mcloot.LootPool#getRolls <em>Rolls</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Rolls</em>'.
   * @see com.raptor.mcloottable.mcloot.LootPool#getRolls()
   * @see #getLootPool()
   * @generated
   */
  EReference getLootPool_Rolls();

  /**
   * Returns the meta object for the attribute '{@link com.raptor.mcloottable.mcloot.LootPool#isEntriesDefined <em>Entries Defined</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Entries Defined</em>'.
   * @see com.raptor.mcloottable.mcloot.LootPool#isEntriesDefined()
   * @see #getLootPool()
   * @generated
   */
  EAttribute getLootPool_EntriesDefined();

  /**
   * Returns the meta object for the containment reference list '{@link com.raptor.mcloottable.mcloot.LootPool#getEntries <em>Entries</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Entries</em>'.
   * @see com.raptor.mcloottable.mcloot.LootPool#getEntries()
   * @see #getLootPool()
   * @generated
   */
  EReference getLootPool_Entries();

  /**
   * Returns the meta object for the attribute '{@link com.raptor.mcloottable.mcloot.LootPool#isBonusRollsDefined <em>Bonus Rolls Defined</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Bonus Rolls Defined</em>'.
   * @see com.raptor.mcloottable.mcloot.LootPool#isBonusRollsDefined()
   * @see #getLootPool()
   * @generated
   */
  EAttribute getLootPool_BonusRollsDefined();

  /**
   * Returns the meta object for the containment reference '{@link com.raptor.mcloottable.mcloot.LootPool#getBonusRolls <em>Bonus Rolls</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Bonus Rolls</em>'.
   * @see com.raptor.mcloottable.mcloot.LootPool#getBonusRolls()
   * @see #getLootPool()
   * @generated
   */
  EReference getLootPool_BonusRolls();

  /**
   * Returns the meta object for the attribute '{@link com.raptor.mcloottable.mcloot.LootPool#isFunctionsDefined <em>Functions Defined</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Functions Defined</em>'.
   * @see com.raptor.mcloottable.mcloot.LootPool#isFunctionsDefined()
   * @see #getLootPool()
   * @generated
   */
  EAttribute getLootPool_FunctionsDefined();

  /**
   * Returns the meta object for the containment reference list '{@link com.raptor.mcloottable.mcloot.LootPool#getFunctions <em>Functions</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Functions</em>'.
   * @see com.raptor.mcloottable.mcloot.LootPool#getFunctions()
   * @see #getLootPool()
   * @generated
   */
  EReference getLootPool_Functions();

  /**
   * Returns the meta object for class '{@link com.raptor.mcloottable.mcloot.LootEntry <em>Loot Entry</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Loot Entry</em>'.
   * @see com.raptor.mcloottable.mcloot.LootEntry
   * @generated
   */
  EClass getLootEntry();

  /**
   * Returns the meta object for the attribute '{@link com.raptor.mcloottable.mcloot.LootEntry#isConditionsDefined <em>Conditions Defined</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Conditions Defined</em>'.
   * @see com.raptor.mcloottable.mcloot.LootEntry#isConditionsDefined()
   * @see #getLootEntry()
   * @generated
   */
  EAttribute getLootEntry_ConditionsDefined();

  /**
   * Returns the meta object for the containment reference list '{@link com.raptor.mcloottable.mcloot.LootEntry#getConditions <em>Conditions</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Conditions</em>'.
   * @see com.raptor.mcloottable.mcloot.LootEntry#getConditions()
   * @see #getLootEntry()
   * @generated
   */
  EReference getLootEntry_Conditions();

  /**
   * Returns the meta object for the attribute '{@link com.raptor.mcloottable.mcloot.LootEntry#getType <em>Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Type</em>'.
   * @see com.raptor.mcloottable.mcloot.LootEntry#getType()
   * @see #getLootEntry()
   * @generated
   */
  EAttribute getLootEntry_Type();

  /**
   * Returns the meta object for the attribute '{@link com.raptor.mcloottable.mcloot.LootEntry#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see com.raptor.mcloottable.mcloot.LootEntry#getName()
   * @see #getLootEntry()
   * @generated
   */
  EAttribute getLootEntry_Name();

  /**
   * Returns the meta object for the attribute '{@link com.raptor.mcloottable.mcloot.LootEntry#isQualityDefined <em>Quality Defined</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Quality Defined</em>'.
   * @see com.raptor.mcloottable.mcloot.LootEntry#isQualityDefined()
   * @see #getLootEntry()
   * @generated
   */
  EAttribute getLootEntry_QualityDefined();

  /**
   * Returns the meta object for the attribute '{@link com.raptor.mcloottable.mcloot.LootEntry#getQuality <em>Quality</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Quality</em>'.
   * @see com.raptor.mcloottable.mcloot.LootEntry#getQuality()
   * @see #getLootEntry()
   * @generated
   */
  EAttribute getLootEntry_Quality();

  /**
   * Returns the meta object for the attribute '{@link com.raptor.mcloottable.mcloot.LootEntry#isExpandDefined <em>Expand Defined</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Expand Defined</em>'.
   * @see com.raptor.mcloottable.mcloot.LootEntry#isExpandDefined()
   * @see #getLootEntry()
   * @generated
   */
  EAttribute getLootEntry_ExpandDefined();

  /**
   * Returns the meta object for the attribute '{@link com.raptor.mcloottable.mcloot.LootEntry#isExpand <em>Expand</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Expand</em>'.
   * @see com.raptor.mcloottable.mcloot.LootEntry#isExpand()
   * @see #getLootEntry()
   * @generated
   */
  EAttribute getLootEntry_Expand();

  /**
   * Returns the meta object for the attribute '{@link com.raptor.mcloottable.mcloot.LootEntry#isFunctionsDefined <em>Functions Defined</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Functions Defined</em>'.
   * @see com.raptor.mcloottable.mcloot.LootEntry#isFunctionsDefined()
   * @see #getLootEntry()
   * @generated
   */
  EAttribute getLootEntry_FunctionsDefined();

  /**
   * Returns the meta object for the containment reference list '{@link com.raptor.mcloottable.mcloot.LootEntry#getFunctions <em>Functions</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Functions</em>'.
   * @see com.raptor.mcloottable.mcloot.LootEntry#getFunctions()
   * @see #getLootEntry()
   * @generated
   */
  EReference getLootEntry_Functions();

  /**
   * Returns the meta object for the attribute '{@link com.raptor.mcloottable.mcloot.LootEntry#isChildrenDefined <em>Children Defined</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Children Defined</em>'.
   * @see com.raptor.mcloottable.mcloot.LootEntry#isChildrenDefined()
   * @see #getLootEntry()
   * @generated
   */
  EAttribute getLootEntry_ChildrenDefined();

  /**
   * Returns the meta object for the containment reference list '{@link com.raptor.mcloottable.mcloot.LootEntry#getChildren <em>Children</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Children</em>'.
   * @see com.raptor.mcloottable.mcloot.LootEntry#getChildren()
   * @see #getLootEntry()
   * @generated
   */
  EReference getLootEntry_Children();

  /**
   * Returns the meta object for the attribute '{@link com.raptor.mcloottable.mcloot.LootEntry#getEntryName <em>Entry Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Entry Name</em>'.
   * @see com.raptor.mcloottable.mcloot.LootEntry#getEntryName()
   * @see #getLootEntry()
   * @generated
   */
  EAttribute getLootEntry_EntryName();

  /**
   * Returns the meta object for the attribute '{@link com.raptor.mcloottable.mcloot.LootEntry#isWeightDefined <em>Weight Defined</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Weight Defined</em>'.
   * @see com.raptor.mcloottable.mcloot.LootEntry#isWeightDefined()
   * @see #getLootEntry()
   * @generated
   */
  EAttribute getLootEntry_WeightDefined();

  /**
   * Returns the meta object for the attribute '{@link com.raptor.mcloottable.mcloot.LootEntry#getWeight <em>Weight</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Weight</em>'.
   * @see com.raptor.mcloottable.mcloot.LootEntry#getWeight()
   * @see #getLootEntry()
   * @generated
   */
  EAttribute getLootEntry_Weight();

  /**
   * Returns the meta object for class '{@link com.raptor.mcloottable.mcloot.LootFunction <em>Loot Function</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Loot Function</em>'.
   * @see com.raptor.mcloottable.mcloot.LootFunction
   * @generated
   */
  EClass getLootFunction();

  /**
   * Returns the meta object for the attribute '{@link com.raptor.mcloottable.mcloot.LootFunction#getId <em>Id</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Id</em>'.
   * @see com.raptor.mcloottable.mcloot.LootFunction#getId()
   * @see #getLootFunction()
   * @generated
   */
  EAttribute getLootFunction_Id();

  /**
   * Returns the meta object for class '{@link com.raptor.mcloottable.mcloot.ApplyBonusLootFunction <em>Apply Bonus Loot Function</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Apply Bonus Loot Function</em>'.
   * @see com.raptor.mcloottable.mcloot.ApplyBonusLootFunction
   * @generated
   */
  EClass getApplyBonusLootFunction();

  /**
   * Returns the meta object for the attribute '{@link com.raptor.mcloottable.mcloot.ApplyBonusLootFunction#getEnchantment <em>Enchantment</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Enchantment</em>'.
   * @see com.raptor.mcloottable.mcloot.ApplyBonusLootFunction#getEnchantment()
   * @see #getApplyBonusLootFunction()
   * @generated
   */
  EAttribute getApplyBonusLootFunction_Enchantment();

  /**
   * Returns the meta object for the attribute '{@link com.raptor.mcloottable.mcloot.ApplyBonusLootFunction#getFormula <em>Formula</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Formula</em>'.
   * @see com.raptor.mcloottable.mcloot.ApplyBonusLootFunction#getFormula()
   * @see #getApplyBonusLootFunction()
   * @generated
   */
  EAttribute getApplyBonusLootFunction_Formula();

  /**
   * Returns the meta object for the attribute '{@link com.raptor.mcloottable.mcloot.ApplyBonusLootFunction#isExtraDefined <em>Extra Defined</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Extra Defined</em>'.
   * @see com.raptor.mcloottable.mcloot.ApplyBonusLootFunction#isExtraDefined()
   * @see #getApplyBonusLootFunction()
   * @generated
   */
  EAttribute getApplyBonusLootFunction_ExtraDefined();

  /**
   * Returns the meta object for the attribute '{@link com.raptor.mcloottable.mcloot.ApplyBonusLootFunction#getExtra <em>Extra</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Extra</em>'.
   * @see com.raptor.mcloottable.mcloot.ApplyBonusLootFunction#getExtra()
   * @see #getApplyBonusLootFunction()
   * @generated
   */
  EAttribute getApplyBonusLootFunction_Extra();

  /**
   * Returns the meta object for the attribute '{@link com.raptor.mcloottable.mcloot.ApplyBonusLootFunction#isProbabilityDefined <em>Probability Defined</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Probability Defined</em>'.
   * @see com.raptor.mcloottable.mcloot.ApplyBonusLootFunction#isProbabilityDefined()
   * @see #getApplyBonusLootFunction()
   * @generated
   */
  EAttribute getApplyBonusLootFunction_ProbabilityDefined();

  /**
   * Returns the meta object for the attribute '{@link com.raptor.mcloottable.mcloot.ApplyBonusLootFunction#getProbability <em>Probability</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Probability</em>'.
   * @see com.raptor.mcloottable.mcloot.ApplyBonusLootFunction#getProbability()
   * @see #getApplyBonusLootFunction()
   * @generated
   */
  EAttribute getApplyBonusLootFunction_Probability();

  /**
   * Returns the meta object for the attribute '{@link com.raptor.mcloottable.mcloot.ApplyBonusLootFunction#isBonusMultiplierDefined <em>Bonus Multiplier Defined</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Bonus Multiplier Defined</em>'.
   * @see com.raptor.mcloottable.mcloot.ApplyBonusLootFunction#isBonusMultiplierDefined()
   * @see #getApplyBonusLootFunction()
   * @generated
   */
  EAttribute getApplyBonusLootFunction_BonusMultiplierDefined();

  /**
   * Returns the meta object for the attribute '{@link com.raptor.mcloottable.mcloot.ApplyBonusLootFunction#getBonusMultiplier <em>Bonus Multiplier</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Bonus Multiplier</em>'.
   * @see com.raptor.mcloottable.mcloot.ApplyBonusLootFunction#getBonusMultiplier()
   * @see #getApplyBonusLootFunction()
   * @generated
   */
  EAttribute getApplyBonusLootFunction_BonusMultiplier();

  /**
   * Returns the meta object for class '{@link com.raptor.mcloottable.mcloot.CopyNameLootFunction <em>Copy Name Loot Function</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Copy Name Loot Function</em>'.
   * @see com.raptor.mcloottable.mcloot.CopyNameLootFunction
   * @generated
   */
  EClass getCopyNameLootFunction();

  /**
   * Returns the meta object for the attribute '{@link com.raptor.mcloottable.mcloot.CopyNameLootFunction#getSource <em>Source</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Source</em>'.
   * @see com.raptor.mcloottable.mcloot.CopyNameLootFunction#getSource()
   * @see #getCopyNameLootFunction()
   * @generated
   */
  EAttribute getCopyNameLootFunction_Source();

  /**
   * Returns the meta object for class '{@link com.raptor.mcloottable.mcloot.CopyNBTLootFunction <em>Copy NBT Loot Function</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Copy NBT Loot Function</em>'.
   * @see com.raptor.mcloottable.mcloot.CopyNBTLootFunction
   * @generated
   */
  EClass getCopyNBTLootFunction();

  /**
   * Returns the meta object for the attribute '{@link com.raptor.mcloottable.mcloot.CopyNBTLootFunction#getSource <em>Source</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Source</em>'.
   * @see com.raptor.mcloottable.mcloot.CopyNBTLootFunction#getSource()
   * @see #getCopyNBTLootFunction()
   * @generated
   */
  EAttribute getCopyNBTLootFunction_Source();

  /**
   * Returns the meta object for the containment reference list '{@link com.raptor.mcloottable.mcloot.CopyNBTLootFunction#getOps <em>Ops</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Ops</em>'.
   * @see com.raptor.mcloottable.mcloot.CopyNBTLootFunction#getOps()
   * @see #getCopyNBTLootFunction()
   * @generated
   */
  EReference getCopyNBTLootFunction_Ops();

  /**
   * Returns the meta object for class '{@link com.raptor.mcloottable.mcloot.NBTOperation <em>NBT Operation</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>NBT Operation</em>'.
   * @see com.raptor.mcloottable.mcloot.NBTOperation
   * @generated
   */
  EClass getNBTOperation();

  /**
   * Returns the meta object for the attribute '{@link com.raptor.mcloottable.mcloot.NBTOperation#getId <em>Id</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Id</em>'.
   * @see com.raptor.mcloottable.mcloot.NBTOperation#getId()
   * @see #getNBTOperation()
   * @generated
   */
  EAttribute getNBTOperation_Id();

  /**
   * Returns the meta object for the attribute '{@link com.raptor.mcloottable.mcloot.NBTOperation#getSource <em>Source</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Source</em>'.
   * @see com.raptor.mcloottable.mcloot.NBTOperation#getSource()
   * @see #getNBTOperation()
   * @generated
   */
  EAttribute getNBTOperation_Source();

  /**
   * Returns the meta object for the attribute '{@link com.raptor.mcloottable.mcloot.NBTOperation#getTarget <em>Target</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Target</em>'.
   * @see com.raptor.mcloottable.mcloot.NBTOperation#getTarget()
   * @see #getNBTOperation()
   * @generated
   */
  EAttribute getNBTOperation_Target();

  /**
   * Returns the meta object for class '{@link com.raptor.mcloottable.mcloot.AppendNBTOperation <em>Append NBT Operation</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Append NBT Operation</em>'.
   * @see com.raptor.mcloottable.mcloot.AppendNBTOperation
   * @generated
   */
  EClass getAppendNBTOperation();

  /**
   * Returns the meta object for class '{@link com.raptor.mcloottable.mcloot.ReplaceNBTOperation <em>Replace NBT Operation</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Replace NBT Operation</em>'.
   * @see com.raptor.mcloottable.mcloot.ReplaceNBTOperation
   * @generated
   */
  EClass getReplaceNBTOperation();

  /**
   * Returns the meta object for class '{@link com.raptor.mcloottable.mcloot.MergeNBTOperation <em>Merge NBT Operation</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Merge NBT Operation</em>'.
   * @see com.raptor.mcloottable.mcloot.MergeNBTOperation
   * @generated
   */
  EClass getMergeNBTOperation();

  /**
   * Returns the meta object for class '{@link com.raptor.mcloottable.mcloot.CopyStateLootFunction <em>Copy State Loot Function</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Copy State Loot Function</em>'.
   * @see com.raptor.mcloottable.mcloot.CopyStateLootFunction
   * @generated
   */
  EClass getCopyStateLootFunction();

  /**
   * Returns the meta object for the attribute '{@link com.raptor.mcloottable.mcloot.CopyStateLootFunction#getBlock <em>Block</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Block</em>'.
   * @see com.raptor.mcloottable.mcloot.CopyStateLootFunction#getBlock()
   * @see #getCopyStateLootFunction()
   * @generated
   */
  EAttribute getCopyStateLootFunction_Block();

  /**
   * Returns the meta object for the attribute list '{@link com.raptor.mcloottable.mcloot.CopyStateLootFunction#getProperties <em>Properties</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute list '<em>Properties</em>'.
   * @see com.raptor.mcloottable.mcloot.CopyStateLootFunction#getProperties()
   * @see #getCopyStateLootFunction()
   * @generated
   */
  EAttribute getCopyStateLootFunction_Properties();

  /**
   * Returns the meta object for class '{@link com.raptor.mcloottable.mcloot.EnchantRandomlyLootFunction <em>Enchant Randomly Loot Function</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Enchant Randomly Loot Function</em>'.
   * @see com.raptor.mcloottable.mcloot.EnchantRandomlyLootFunction
   * @generated
   */
  EClass getEnchantRandomlyLootFunction();

  /**
   * Returns the meta object for the attribute list '{@link com.raptor.mcloottable.mcloot.EnchantRandomlyLootFunction#getEnchantments <em>Enchantments</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute list '<em>Enchantments</em>'.
   * @see com.raptor.mcloottable.mcloot.EnchantRandomlyLootFunction#getEnchantments()
   * @see #getEnchantRandomlyLootFunction()
   * @generated
   */
  EAttribute getEnchantRandomlyLootFunction_Enchantments();

  /**
   * Returns the meta object for class '{@link com.raptor.mcloottable.mcloot.EnchantWithLevelsLootFunction <em>Enchant With Levels Loot Function</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Enchant With Levels Loot Function</em>'.
   * @see com.raptor.mcloottable.mcloot.EnchantWithLevelsLootFunction
   * @generated
   */
  EClass getEnchantWithLevelsLootFunction();

  /**
   * Returns the meta object for the attribute '{@link com.raptor.mcloottable.mcloot.EnchantWithLevelsLootFunction#isTreasureDefined <em>Treasure Defined</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Treasure Defined</em>'.
   * @see com.raptor.mcloottable.mcloot.EnchantWithLevelsLootFunction#isTreasureDefined()
   * @see #getEnchantWithLevelsLootFunction()
   * @generated
   */
  EAttribute getEnchantWithLevelsLootFunction_TreasureDefined();

  /**
   * Returns the meta object for the attribute '{@link com.raptor.mcloottable.mcloot.EnchantWithLevelsLootFunction#isTreasure <em>Treasure</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Treasure</em>'.
   * @see com.raptor.mcloottable.mcloot.EnchantWithLevelsLootFunction#isTreasure()
   * @see #getEnchantWithLevelsLootFunction()
   * @generated
   */
  EAttribute getEnchantWithLevelsLootFunction_Treasure();

  /**
   * Returns the meta object for the containment reference '{@link com.raptor.mcloottable.mcloot.EnchantWithLevelsLootFunction#getLevels <em>Levels</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Levels</em>'.
   * @see com.raptor.mcloottable.mcloot.EnchantWithLevelsLootFunction#getLevels()
   * @see #getEnchantWithLevelsLootFunction()
   * @generated
   */
  EReference getEnchantWithLevelsLootFunction_Levels();

  /**
   * Returns the meta object for class '{@link com.raptor.mcloottable.mcloot.ExplorationMapLootFunction <em>Exploration Map Loot Function</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Exploration Map Loot Function</em>'.
   * @see com.raptor.mcloottable.mcloot.ExplorationMapLootFunction
   * @generated
   */
  EClass getExplorationMapLootFunction();

  /**
   * Returns the meta object for the attribute '{@link com.raptor.mcloottable.mcloot.ExplorationMapLootFunction#getDestination <em>Destination</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Destination</em>'.
   * @see com.raptor.mcloottable.mcloot.ExplorationMapLootFunction#getDestination()
   * @see #getExplorationMapLootFunction()
   * @generated
   */
  EAttribute getExplorationMapLootFunction_Destination();

  /**
   * Returns the meta object for the attribute '{@link com.raptor.mcloottable.mcloot.ExplorationMapLootFunction#getDecoration <em>Decoration</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Decoration</em>'.
   * @see com.raptor.mcloottable.mcloot.ExplorationMapLootFunction#getDecoration()
   * @see #getExplorationMapLootFunction()
   * @generated
   */
  EAttribute getExplorationMapLootFunction_Decoration();

  /**
   * Returns the meta object for the attribute '{@link com.raptor.mcloottable.mcloot.ExplorationMapLootFunction#isZoomDefined <em>Zoom Defined</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Zoom Defined</em>'.
   * @see com.raptor.mcloottable.mcloot.ExplorationMapLootFunction#isZoomDefined()
   * @see #getExplorationMapLootFunction()
   * @generated
   */
  EAttribute getExplorationMapLootFunction_ZoomDefined();

  /**
   * Returns the meta object for the attribute '{@link com.raptor.mcloottable.mcloot.ExplorationMapLootFunction#getZoom <em>Zoom</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Zoom</em>'.
   * @see com.raptor.mcloottable.mcloot.ExplorationMapLootFunction#getZoom()
   * @see #getExplorationMapLootFunction()
   * @generated
   */
  EAttribute getExplorationMapLootFunction_Zoom();

  /**
   * Returns the meta object for the attribute '{@link com.raptor.mcloottable.mcloot.ExplorationMapLootFunction#isSearchRadiusDefined <em>Search Radius Defined</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Search Radius Defined</em>'.
   * @see com.raptor.mcloottable.mcloot.ExplorationMapLootFunction#isSearchRadiusDefined()
   * @see #getExplorationMapLootFunction()
   * @generated
   */
  EAttribute getExplorationMapLootFunction_SearchRadiusDefined();

  /**
   * Returns the meta object for the attribute '{@link com.raptor.mcloottable.mcloot.ExplorationMapLootFunction#getSearchRadius <em>Search Radius</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Search Radius</em>'.
   * @see com.raptor.mcloottable.mcloot.ExplorationMapLootFunction#getSearchRadius()
   * @see #getExplorationMapLootFunction()
   * @generated
   */
  EAttribute getExplorationMapLootFunction_SearchRadius();

  /**
   * Returns the meta object for the attribute '{@link com.raptor.mcloottable.mcloot.ExplorationMapLootFunction#isSkipExistingChunksDefined <em>Skip Existing Chunks Defined</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Skip Existing Chunks Defined</em>'.
   * @see com.raptor.mcloottable.mcloot.ExplorationMapLootFunction#isSkipExistingChunksDefined()
   * @see #getExplorationMapLootFunction()
   * @generated
   */
  EAttribute getExplorationMapLootFunction_SkipExistingChunksDefined();

  /**
   * Returns the meta object for the attribute '{@link com.raptor.mcloottable.mcloot.ExplorationMapLootFunction#isSkipExistingChunks <em>Skip Existing Chunks</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Skip Existing Chunks</em>'.
   * @see com.raptor.mcloottable.mcloot.ExplorationMapLootFunction#isSkipExistingChunks()
   * @see #getExplorationMapLootFunction()
   * @generated
   */
  EAttribute getExplorationMapLootFunction_SkipExistingChunks();

  /**
   * Returns the meta object for class '{@link com.raptor.mcloottable.mcloot.ExplosionDecayLootFunction <em>Explosion Decay Loot Function</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Explosion Decay Loot Function</em>'.
   * @see com.raptor.mcloottable.mcloot.ExplosionDecayLootFunction
   * @generated
   */
  EClass getExplosionDecayLootFunction();

  /**
   * Returns the meta object for class '{@link com.raptor.mcloottable.mcloot.FurnaceSmeltLootFunction <em>Furnace Smelt Loot Function</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Furnace Smelt Loot Function</em>'.
   * @see com.raptor.mcloottable.mcloot.FurnaceSmeltLootFunction
   * @generated
   */
  EClass getFurnaceSmeltLootFunction();

  /**
   * Returns the meta object for class '{@link com.raptor.mcloottable.mcloot.FillPlayerHeadLootFunction <em>Fill Player Head Loot Function</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Fill Player Head Loot Function</em>'.
   * @see com.raptor.mcloottable.mcloot.FillPlayerHeadLootFunction
   * @generated
   */
  EClass getFillPlayerHeadLootFunction();

  /**
   * Returns the meta object for the attribute '{@link com.raptor.mcloottable.mcloot.FillPlayerHeadLootFunction#getEntity <em>Entity</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Entity</em>'.
   * @see com.raptor.mcloottable.mcloot.FillPlayerHeadLootFunction#getEntity()
   * @see #getFillPlayerHeadLootFunction()
   * @generated
   */
  EAttribute getFillPlayerHeadLootFunction_Entity();

  /**
   * Returns the meta object for class '{@link com.raptor.mcloottable.mcloot.LimitCountLootFunction <em>Limit Count Loot Function</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Limit Count Loot Function</em>'.
   * @see com.raptor.mcloottable.mcloot.LimitCountLootFunction
   * @generated
   */
  EClass getLimitCountLootFunction();

  /**
   * Returns the meta object for the containment reference '{@link com.raptor.mcloottable.mcloot.LimitCountLootFunction#getLimit <em>Limit</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Limit</em>'.
   * @see com.raptor.mcloottable.mcloot.LimitCountLootFunction#getLimit()
   * @see #getLimitCountLootFunction()
   * @generated
   */
  EReference getLimitCountLootFunction_Limit();

  /**
   * Returns the meta object for class '{@link com.raptor.mcloottable.mcloot.LootingEnchantLootFunction <em>Looting Enchant Loot Function</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Looting Enchant Loot Function</em>'.
   * @see com.raptor.mcloottable.mcloot.LootingEnchantLootFunction
   * @generated
   */
  EClass getLootingEnchantLootFunction();

  /**
   * Returns the meta object for the attribute '{@link com.raptor.mcloottable.mcloot.LootingEnchantLootFunction#isLimitDefined <em>Limit Defined</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Limit Defined</em>'.
   * @see com.raptor.mcloottable.mcloot.LootingEnchantLootFunction#isLimitDefined()
   * @see #getLootingEnchantLootFunction()
   * @generated
   */
  EAttribute getLootingEnchantLootFunction_LimitDefined();

  /**
   * Returns the meta object for the attribute '{@link com.raptor.mcloottable.mcloot.LootingEnchantLootFunction#getLimit <em>Limit</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Limit</em>'.
   * @see com.raptor.mcloottable.mcloot.LootingEnchantLootFunction#getLimit()
   * @see #getLootingEnchantLootFunction()
   * @generated
   */
  EAttribute getLootingEnchantLootFunction_Limit();

  /**
   * Returns the meta object for the containment reference '{@link com.raptor.mcloottable.mcloot.LootingEnchantLootFunction#getCount <em>Count</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Count</em>'.
   * @see com.raptor.mcloottable.mcloot.LootingEnchantLootFunction#getCount()
   * @see #getLootingEnchantLootFunction()
   * @generated
   */
  EReference getLootingEnchantLootFunction_Count();

  /**
   * Returns the meta object for class '{@link com.raptor.mcloottable.mcloot.SetAttributesLootFunction <em>Set Attributes Loot Function</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Set Attributes Loot Function</em>'.
   * @see com.raptor.mcloottable.mcloot.SetAttributesLootFunction
   * @generated
   */
  EClass getSetAttributesLootFunction();

  /**
   * Returns the meta object for the containment reference list '{@link com.raptor.mcloottable.mcloot.SetAttributesLootFunction#getModifiers <em>Modifiers</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Modifiers</em>'.
   * @see com.raptor.mcloottable.mcloot.SetAttributesLootFunction#getModifiers()
   * @see #getSetAttributesLootFunction()
   * @generated
   */
  EReference getSetAttributesLootFunction_Modifiers();

  /**
   * Returns the meta object for class '{@link com.raptor.mcloottable.mcloot.AttributeModifier <em>Attribute Modifier</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Attribute Modifier</em>'.
   * @see com.raptor.mcloottable.mcloot.AttributeModifier
   * @generated
   */
  EClass getAttributeModifier();

  /**
   * Returns the meta object for the attribute '{@link com.raptor.mcloottable.mcloot.AttributeModifier#getId <em>Id</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Id</em>'.
   * @see com.raptor.mcloottable.mcloot.AttributeModifier#getId()
   * @see #getAttributeModifier()
   * @generated
   */
  EAttribute getAttributeModifier_Id();

  /**
   * Returns the meta object for the attribute '{@link com.raptor.mcloottable.mcloot.AttributeModifier#getOperation <em>Operation</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Operation</em>'.
   * @see com.raptor.mcloottable.mcloot.AttributeModifier#getOperation()
   * @see #getAttributeModifier()
   * @generated
   */
  EAttribute getAttributeModifier_Operation();

  /**
   * Returns the meta object for the containment reference '{@link com.raptor.mcloottable.mcloot.AttributeModifier#getAmount <em>Amount</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Amount</em>'.
   * @see com.raptor.mcloottable.mcloot.AttributeModifier#getAmount()
   * @see #getAttributeModifier()
   * @generated
   */
  EReference getAttributeModifier_Amount();

  /**
   * Returns the meta object for the attribute '{@link com.raptor.mcloottable.mcloot.AttributeModifier#getAttributeName <em>Attribute Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Attribute Name</em>'.
   * @see com.raptor.mcloottable.mcloot.AttributeModifier#getAttributeName()
   * @see #getAttributeModifier()
   * @generated
   */
  EAttribute getAttributeModifier_AttributeName();

  /**
   * Returns the meta object for the attribute '{@link com.raptor.mcloottable.mcloot.AttributeModifier#getUuid <em>Uuid</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Uuid</em>'.
   * @see com.raptor.mcloottable.mcloot.AttributeModifier#getUuid()
   * @see #getAttributeModifier()
   * @generated
   */
  EAttribute getAttributeModifier_Uuid();

  /**
   * Returns the meta object for the attribute '{@link com.raptor.mcloottable.mcloot.AttributeModifier#isSlotDefined <em>Slot Defined</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Slot Defined</em>'.
   * @see com.raptor.mcloottable.mcloot.AttributeModifier#isSlotDefined()
   * @see #getAttributeModifier()
   * @generated
   */
  EAttribute getAttributeModifier_SlotDefined();

  /**
   * Returns the meta object for the attribute '{@link com.raptor.mcloottable.mcloot.AttributeModifier#isSingleSlot <em>Single Slot</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Single Slot</em>'.
   * @see com.raptor.mcloottable.mcloot.AttributeModifier#isSingleSlot()
   * @see #getAttributeModifier()
   * @generated
   */
  EAttribute getAttributeModifier_SingleSlot();

  /**
   * Returns the meta object for the attribute list '{@link com.raptor.mcloottable.mcloot.AttributeModifier#getSlots <em>Slots</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute list '<em>Slots</em>'.
   * @see com.raptor.mcloottable.mcloot.AttributeModifier#getSlots()
   * @see #getAttributeModifier()
   * @generated
   */
  EAttribute getAttributeModifier_Slots();

  /**
   * Returns the meta object for class '{@link com.raptor.mcloottable.mcloot.SetContentsLootFunction <em>Set Contents Loot Function</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Set Contents Loot Function</em>'.
   * @see com.raptor.mcloottable.mcloot.SetContentsLootFunction
   * @generated
   */
  EClass getSetContentsLootFunction();

  /**
   * Returns the meta object for the containment reference list '{@link com.raptor.mcloottable.mcloot.SetContentsLootFunction#getEntries <em>Entries</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Entries</em>'.
   * @see com.raptor.mcloottable.mcloot.SetContentsLootFunction#getEntries()
   * @see #getSetContentsLootFunction()
   * @generated
   */
  EReference getSetContentsLootFunction_Entries();

  /**
   * Returns the meta object for class '{@link com.raptor.mcloottable.mcloot.SetCountLootFunction <em>Set Count Loot Function</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Set Count Loot Function</em>'.
   * @see com.raptor.mcloottable.mcloot.SetCountLootFunction
   * @generated
   */
  EClass getSetCountLootFunction();

  /**
   * Returns the meta object for the containment reference '{@link com.raptor.mcloottable.mcloot.SetCountLootFunction#getCount <em>Count</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Count</em>'.
   * @see com.raptor.mcloottable.mcloot.SetCountLootFunction#getCount()
   * @see #getSetCountLootFunction()
   * @generated
   */
  EReference getSetCountLootFunction_Count();

  /**
   * Returns the meta object for class '{@link com.raptor.mcloottable.mcloot.Count <em>Count</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Count</em>'.
   * @see com.raptor.mcloottable.mcloot.Count
   * @generated
   */
  EClass getCount();

  /**
   * Returns the meta object for class '{@link com.raptor.mcloottable.mcloot.ExactCount <em>Exact Count</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Exact Count</em>'.
   * @see com.raptor.mcloottable.mcloot.ExactCount
   * @generated
   */
  EClass getExactCount();

  /**
   * Returns the meta object for the attribute '{@link com.raptor.mcloottable.mcloot.ExactCount#getAmount <em>Amount</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Amount</em>'.
   * @see com.raptor.mcloottable.mcloot.ExactCount#getAmount()
   * @see #getExactCount()
   * @generated
   */
  EAttribute getExactCount_Amount();

  /**
   * Returns the meta object for class '{@link com.raptor.mcloottable.mcloot.SpecialCount <em>Special Count</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Special Count</em>'.
   * @see com.raptor.mcloottable.mcloot.SpecialCount
   * @generated
   */
  EClass getSpecialCount();

  /**
   * Returns the meta object for class '{@link com.raptor.mcloottable.mcloot.UniformCount <em>Uniform Count</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Uniform Count</em>'.
   * @see com.raptor.mcloottable.mcloot.UniformCount
   * @generated
   */
  EClass getUniformCount();

  /**
   * Returns the meta object for the attribute '{@link com.raptor.mcloottable.mcloot.UniformCount#getMin <em>Min</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Min</em>'.
   * @see com.raptor.mcloottable.mcloot.UniformCount#getMin()
   * @see #getUniformCount()
   * @generated
   */
  EAttribute getUniformCount_Min();

  /**
   * Returns the meta object for the attribute '{@link com.raptor.mcloottable.mcloot.UniformCount#getMax <em>Max</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Max</em>'.
   * @see com.raptor.mcloottable.mcloot.UniformCount#getMax()
   * @see #getUniformCount()
   * @generated
   */
  EAttribute getUniformCount_Max();

  /**
   * Returns the meta object for class '{@link com.raptor.mcloottable.mcloot.BinomialCount <em>Binomial Count</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Binomial Count</em>'.
   * @see com.raptor.mcloottable.mcloot.BinomialCount
   * @generated
   */
  EClass getBinomialCount();

  /**
   * Returns the meta object for the attribute '{@link com.raptor.mcloottable.mcloot.BinomialCount#getN <em>N</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>N</em>'.
   * @see com.raptor.mcloottable.mcloot.BinomialCount#getN()
   * @see #getBinomialCount()
   * @generated
   */
  EAttribute getBinomialCount_N();

  /**
   * Returns the meta object for the attribute '{@link com.raptor.mcloottable.mcloot.BinomialCount#getP <em>P</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>P</em>'.
   * @see com.raptor.mcloottable.mcloot.BinomialCount#getP()
   * @see #getBinomialCount()
   * @generated
   */
  EAttribute getBinomialCount_P();

  /**
   * Returns the meta object for class '{@link com.raptor.mcloottable.mcloot.SetDamageLootFunction <em>Set Damage Loot Function</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Set Damage Loot Function</em>'.
   * @see com.raptor.mcloottable.mcloot.SetDamageLootFunction
   * @generated
   */
  EClass getSetDamageLootFunction();

  /**
   * Returns the meta object for the containment reference '{@link com.raptor.mcloottable.mcloot.SetDamageLootFunction#getDamage <em>Damage</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Damage</em>'.
   * @see com.raptor.mcloottable.mcloot.SetDamageLootFunction#getDamage()
   * @see #getSetDamageLootFunction()
   * @generated
   */
  EReference getSetDamageLootFunction_Damage();

  /**
   * Returns the meta object for class '{@link com.raptor.mcloottable.mcloot.SetLoreLootFunction <em>Set Lore Loot Function</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Set Lore Loot Function</em>'.
   * @see com.raptor.mcloottable.mcloot.SetLoreLootFunction
   * @generated
   */
  EClass getSetLoreLootFunction();

  /**
   * Returns the meta object for the attribute '{@link com.raptor.mcloottable.mcloot.SetLoreLootFunction#isReplaceDefined <em>Replace Defined</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Replace Defined</em>'.
   * @see com.raptor.mcloottable.mcloot.SetLoreLootFunction#isReplaceDefined()
   * @see #getSetLoreLootFunction()
   * @generated
   */
  EAttribute getSetLoreLootFunction_ReplaceDefined();

  /**
   * Returns the meta object for the attribute '{@link com.raptor.mcloottable.mcloot.SetLoreLootFunction#isReplace <em>Replace</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Replace</em>'.
   * @see com.raptor.mcloottable.mcloot.SetLoreLootFunction#isReplace()
   * @see #getSetLoreLootFunction()
   * @generated
   */
  EAttribute getSetLoreLootFunction_Replace();

  /**
   * Returns the meta object for the attribute '{@link com.raptor.mcloottable.mcloot.SetLoreLootFunction#getEntity <em>Entity</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Entity</em>'.
   * @see com.raptor.mcloottable.mcloot.SetLoreLootFunction#getEntity()
   * @see #getSetLoreLootFunction()
   * @generated
   */
  EAttribute getSetLoreLootFunction_Entity();

  /**
   * Returns the meta object for the containment reference list '{@link com.raptor.mcloottable.mcloot.SetLoreLootFunction#getLore <em>Lore</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Lore</em>'.
   * @see com.raptor.mcloottable.mcloot.SetLoreLootFunction#getLore()
   * @see #getSetLoreLootFunction()
   * @generated
   */
  EReference getSetLoreLootFunction_Lore();

  /**
   * Returns the meta object for class '{@link com.raptor.mcloottable.mcloot.SetNameLootFunction <em>Set Name Loot Function</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Set Name Loot Function</em>'.
   * @see com.raptor.mcloottable.mcloot.SetNameLootFunction
   * @generated
   */
  EClass getSetNameLootFunction();

  /**
   * Returns the meta object for the attribute '{@link com.raptor.mcloottable.mcloot.SetNameLootFunction#getEntity <em>Entity</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Entity</em>'.
   * @see com.raptor.mcloottable.mcloot.SetNameLootFunction#getEntity()
   * @see #getSetNameLootFunction()
   * @generated
   */
  EAttribute getSetNameLootFunction_Entity();

  /**
   * Returns the meta object for the containment reference '{@link com.raptor.mcloottable.mcloot.SetNameLootFunction#getItemName <em>Item Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Item Name</em>'.
   * @see com.raptor.mcloottable.mcloot.SetNameLootFunction#getItemName()
   * @see #getSetNameLootFunction()
   * @generated
   */
  EReference getSetNameLootFunction_ItemName();

  /**
   * Returns the meta object for class '{@link com.raptor.mcloottable.mcloot.SetNBTLootFunction <em>Set NBT Loot Function</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Set NBT Loot Function</em>'.
   * @see com.raptor.mcloottable.mcloot.SetNBTLootFunction
   * @generated
   */
  EClass getSetNBTLootFunction();

  /**
   * Returns the meta object for the attribute '{@link com.raptor.mcloottable.mcloot.SetNBTLootFunction#getTag <em>Tag</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Tag</em>'.
   * @see com.raptor.mcloottable.mcloot.SetNBTLootFunction#getTag()
   * @see #getSetNBTLootFunction()
   * @generated
   */
  EAttribute getSetNBTLootFunction_Tag();

  /**
   * Returns the meta object for class '{@link com.raptor.mcloottable.mcloot.SetStewEffectLootFunction <em>Set Stew Effect Loot Function</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Set Stew Effect Loot Function</em>'.
   * @see com.raptor.mcloottable.mcloot.SetStewEffectLootFunction
   * @generated
   */
  EClass getSetStewEffectLootFunction();

  /**
   * Returns the meta object for the containment reference list '{@link com.raptor.mcloottable.mcloot.SetStewEffectLootFunction#getEffects <em>Effects</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Effects</em>'.
   * @see com.raptor.mcloottable.mcloot.SetStewEffectLootFunction#getEffects()
   * @see #getSetStewEffectLootFunction()
   * @generated
   */
  EReference getSetStewEffectLootFunction_Effects();

  /**
   * Returns the meta object for class '{@link com.raptor.mcloottable.mcloot.StewEffect <em>Stew Effect</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Stew Effect</em>'.
   * @see com.raptor.mcloottable.mcloot.StewEffect
   * @generated
   */
  EClass getStewEffect();

  /**
   * Returns the meta object for the attribute '{@link com.raptor.mcloottable.mcloot.StewEffect#getType <em>Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Type</em>'.
   * @see com.raptor.mcloottable.mcloot.StewEffect#getType()
   * @see #getStewEffect()
   * @generated
   */
  EAttribute getStewEffect_Type();

  /**
   * Returns the meta object for the attribute '{@link com.raptor.mcloottable.mcloot.StewEffect#getDuration <em>Duration</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Duration</em>'.
   * @see com.raptor.mcloottable.mcloot.StewEffect#getDuration()
   * @see #getStewEffect()
   * @generated
   */
  EAttribute getStewEffect_Duration();

  /**
   * Returns the meta object for class '{@link com.raptor.mcloottable.mcloot.LootCondition <em>Loot Condition</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Loot Condition</em>'.
   * @see com.raptor.mcloottable.mcloot.LootCondition
   * @generated
   */
  EClass getLootCondition();

  /**
   * Returns the meta object for class '{@link com.raptor.mcloottable.mcloot.NamedLootCondition <em>Named Loot Condition</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Named Loot Condition</em>'.
   * @see com.raptor.mcloottable.mcloot.NamedLootCondition
   * @generated
   */
  EClass getNamedLootCondition();

  /**
   * Returns the meta object for the attribute '{@link com.raptor.mcloottable.mcloot.NamedLootCondition#getId <em>Id</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Id</em>'.
   * @see com.raptor.mcloottable.mcloot.NamedLootCondition#getId()
   * @see #getNamedLootCondition()
   * @generated
   */
  EAttribute getNamedLootCondition_Id();

  /**
   * Returns the meta object for class '{@link com.raptor.mcloottable.mcloot.BlockStatePropertiesLootCondition <em>Block State Properties Loot Condition</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Block State Properties Loot Condition</em>'.
   * @see com.raptor.mcloottable.mcloot.BlockStatePropertiesLootCondition
   * @generated
   */
  EClass getBlockStatePropertiesLootCondition();

  /**
   * Returns the meta object for the attribute '{@link com.raptor.mcloottable.mcloot.BlockStatePropertiesLootCondition#isInverted <em>Inverted</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Inverted</em>'.
   * @see com.raptor.mcloottable.mcloot.BlockStatePropertiesLootCondition#isInverted()
   * @see #getBlockStatePropertiesLootCondition()
   * @generated
   */
  EAttribute getBlockStatePropertiesLootCondition_Inverted();

  /**
   * Returns the meta object for the attribute '{@link com.raptor.mcloottable.mcloot.BlockStatePropertiesLootCondition#getBlock <em>Block</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Block</em>'.
   * @see com.raptor.mcloottable.mcloot.BlockStatePropertiesLootCondition#getBlock()
   * @see #getBlockStatePropertiesLootCondition()
   * @generated
   */
  EAttribute getBlockStatePropertiesLootCondition_Block();

  /**
   * Returns the meta object for the containment reference list '{@link com.raptor.mcloottable.mcloot.BlockStatePropertiesLootCondition#getProperties <em>Properties</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Properties</em>'.
   * @see com.raptor.mcloottable.mcloot.BlockStatePropertiesLootCondition#getProperties()
   * @see #getBlockStatePropertiesLootCondition()
   * @generated
   */
  EReference getBlockStatePropertiesLootCondition_Properties();

  /**
   * Returns the meta object for class '{@link com.raptor.mcloottable.mcloot.BlockStateProperty <em>Block State Property</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Block State Property</em>'.
   * @see com.raptor.mcloottable.mcloot.BlockStateProperty
   * @generated
   */
  EClass getBlockStateProperty();

  /**
   * Returns the meta object for the attribute '{@link com.raptor.mcloottable.mcloot.BlockStateProperty#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see com.raptor.mcloottable.mcloot.BlockStateProperty#getName()
   * @see #getBlockStateProperty()
   * @generated
   */
  EAttribute getBlockStateProperty_Name();

  /**
   * Returns the meta object for the attribute '{@link com.raptor.mcloottable.mcloot.BlockStateProperty#getValue <em>Value</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Value</em>'.
   * @see com.raptor.mcloottable.mcloot.BlockStateProperty#getValue()
   * @see #getBlockStateProperty()
   * @generated
   */
  EAttribute getBlockStateProperty_Value();

  /**
   * Returns the meta object for class '{@link com.raptor.mcloottable.mcloot.DamageSourcePropertiesLootCondition <em>Damage Source Properties Loot Condition</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Damage Source Properties Loot Condition</em>'.
   * @see com.raptor.mcloottable.mcloot.DamageSourcePropertiesLootCondition
   * @generated
   */
  EClass getDamageSourcePropertiesLootCondition();

  /**
   * Returns the meta object for the attribute '{@link com.raptor.mcloottable.mcloot.DamageSourcePropertiesLootCondition#isBypassesArmorDefined <em>Bypasses Armor Defined</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Bypasses Armor Defined</em>'.
   * @see com.raptor.mcloottable.mcloot.DamageSourcePropertiesLootCondition#isBypassesArmorDefined()
   * @see #getDamageSourcePropertiesLootCondition()
   * @generated
   */
  EAttribute getDamageSourcePropertiesLootCondition_BypassesArmorDefined();

  /**
   * Returns the meta object for the attribute '{@link com.raptor.mcloottable.mcloot.DamageSourcePropertiesLootCondition#isBypassesArmor <em>Bypasses Armor</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Bypasses Armor</em>'.
   * @see com.raptor.mcloottable.mcloot.DamageSourcePropertiesLootCondition#isBypassesArmor()
   * @see #getDamageSourcePropertiesLootCondition()
   * @generated
   */
  EAttribute getDamageSourcePropertiesLootCondition_BypassesArmor();

  /**
   * Returns the meta object for the attribute '{@link com.raptor.mcloottable.mcloot.DamageSourcePropertiesLootCondition#isBypassesInvulnerabilityDefined <em>Bypasses Invulnerability Defined</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Bypasses Invulnerability Defined</em>'.
   * @see com.raptor.mcloottable.mcloot.DamageSourcePropertiesLootCondition#isBypassesInvulnerabilityDefined()
   * @see #getDamageSourcePropertiesLootCondition()
   * @generated
   */
  EAttribute getDamageSourcePropertiesLootCondition_BypassesInvulnerabilityDefined();

  /**
   * Returns the meta object for the attribute '{@link com.raptor.mcloottable.mcloot.DamageSourcePropertiesLootCondition#isBypassesInvulnerability <em>Bypasses Invulnerability</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Bypasses Invulnerability</em>'.
   * @see com.raptor.mcloottable.mcloot.DamageSourcePropertiesLootCondition#isBypassesInvulnerability()
   * @see #getDamageSourcePropertiesLootCondition()
   * @generated
   */
  EAttribute getDamageSourcePropertiesLootCondition_BypassesInvulnerability();

  /**
   * Returns the meta object for the attribute '{@link com.raptor.mcloottable.mcloot.DamageSourcePropertiesLootCondition#isBypassesMagicDefined <em>Bypasses Magic Defined</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Bypasses Magic Defined</em>'.
   * @see com.raptor.mcloottable.mcloot.DamageSourcePropertiesLootCondition#isBypassesMagicDefined()
   * @see #getDamageSourcePropertiesLootCondition()
   * @generated
   */
  EAttribute getDamageSourcePropertiesLootCondition_BypassesMagicDefined();

  /**
   * Returns the meta object for the attribute '{@link com.raptor.mcloottable.mcloot.DamageSourcePropertiesLootCondition#isBypassesMagic <em>Bypasses Magic</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Bypasses Magic</em>'.
   * @see com.raptor.mcloottable.mcloot.DamageSourcePropertiesLootCondition#isBypassesMagic()
   * @see #getDamageSourcePropertiesLootCondition()
   * @generated
   */
  EAttribute getDamageSourcePropertiesLootCondition_BypassesMagic();

  /**
   * Returns the meta object for the containment reference '{@link com.raptor.mcloottable.mcloot.DamageSourcePropertiesLootCondition#getDirectEntity <em>Direct Entity</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Direct Entity</em>'.
   * @see com.raptor.mcloottable.mcloot.DamageSourcePropertiesLootCondition#getDirectEntity()
   * @see #getDamageSourcePropertiesLootCondition()
   * @generated
   */
  EReference getDamageSourcePropertiesLootCondition_DirectEntity();

  /**
   * Returns the meta object for the attribute '{@link com.raptor.mcloottable.mcloot.DamageSourcePropertiesLootCondition#isExplosionDefined <em>Explosion Defined</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Explosion Defined</em>'.
   * @see com.raptor.mcloottable.mcloot.DamageSourcePropertiesLootCondition#isExplosionDefined()
   * @see #getDamageSourcePropertiesLootCondition()
   * @generated
   */
  EAttribute getDamageSourcePropertiesLootCondition_ExplosionDefined();

  /**
   * Returns the meta object for the attribute '{@link com.raptor.mcloottable.mcloot.DamageSourcePropertiesLootCondition#isExplosion <em>Explosion</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Explosion</em>'.
   * @see com.raptor.mcloottable.mcloot.DamageSourcePropertiesLootCondition#isExplosion()
   * @see #getDamageSourcePropertiesLootCondition()
   * @generated
   */
  EAttribute getDamageSourcePropertiesLootCondition_Explosion();

  /**
   * Returns the meta object for the attribute '{@link com.raptor.mcloottable.mcloot.DamageSourcePropertiesLootCondition#isFireDefined <em>Fire Defined</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Fire Defined</em>'.
   * @see com.raptor.mcloottable.mcloot.DamageSourcePropertiesLootCondition#isFireDefined()
   * @see #getDamageSourcePropertiesLootCondition()
   * @generated
   */
  EAttribute getDamageSourcePropertiesLootCondition_FireDefined();

  /**
   * Returns the meta object for the attribute '{@link com.raptor.mcloottable.mcloot.DamageSourcePropertiesLootCondition#isFire <em>Fire</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Fire</em>'.
   * @see com.raptor.mcloottable.mcloot.DamageSourcePropertiesLootCondition#isFire()
   * @see #getDamageSourcePropertiesLootCondition()
   * @generated
   */
  EAttribute getDamageSourcePropertiesLootCondition_Fire();

  /**
   * Returns the meta object for the attribute '{@link com.raptor.mcloottable.mcloot.DamageSourcePropertiesLootCondition#isMagicDefined <em>Magic Defined</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Magic Defined</em>'.
   * @see com.raptor.mcloottable.mcloot.DamageSourcePropertiesLootCondition#isMagicDefined()
   * @see #getDamageSourcePropertiesLootCondition()
   * @generated
   */
  EAttribute getDamageSourcePropertiesLootCondition_MagicDefined();

  /**
   * Returns the meta object for the attribute '{@link com.raptor.mcloottable.mcloot.DamageSourcePropertiesLootCondition#isMagic <em>Magic</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Magic</em>'.
   * @see com.raptor.mcloottable.mcloot.DamageSourcePropertiesLootCondition#isMagic()
   * @see #getDamageSourcePropertiesLootCondition()
   * @generated
   */
  EAttribute getDamageSourcePropertiesLootCondition_Magic();

  /**
   * Returns the meta object for the attribute '{@link com.raptor.mcloottable.mcloot.DamageSourcePropertiesLootCondition#isProjectileDefined <em>Projectile Defined</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Projectile Defined</em>'.
   * @see com.raptor.mcloottable.mcloot.DamageSourcePropertiesLootCondition#isProjectileDefined()
   * @see #getDamageSourcePropertiesLootCondition()
   * @generated
   */
  EAttribute getDamageSourcePropertiesLootCondition_ProjectileDefined();

  /**
   * Returns the meta object for the attribute '{@link com.raptor.mcloottable.mcloot.DamageSourcePropertiesLootCondition#isProjectile <em>Projectile</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Projectile</em>'.
   * @see com.raptor.mcloottable.mcloot.DamageSourcePropertiesLootCondition#isProjectile()
   * @see #getDamageSourcePropertiesLootCondition()
   * @generated
   */
  EAttribute getDamageSourcePropertiesLootCondition_Projectile();

  /**
   * Returns the meta object for the attribute '{@link com.raptor.mcloottable.mcloot.DamageSourcePropertiesLootCondition#isLightningDefined <em>Lightning Defined</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Lightning Defined</em>'.
   * @see com.raptor.mcloottable.mcloot.DamageSourcePropertiesLootCondition#isLightningDefined()
   * @see #getDamageSourcePropertiesLootCondition()
   * @generated
   */
  EAttribute getDamageSourcePropertiesLootCondition_LightningDefined();

  /**
   * Returns the meta object for the attribute '{@link com.raptor.mcloottable.mcloot.DamageSourcePropertiesLootCondition#isLightning <em>Lightning</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Lightning</em>'.
   * @see com.raptor.mcloottable.mcloot.DamageSourcePropertiesLootCondition#isLightning()
   * @see #getDamageSourcePropertiesLootCondition()
   * @generated
   */
  EAttribute getDamageSourcePropertiesLootCondition_Lightning();

  /**
   * Returns the meta object for the containment reference '{@link com.raptor.mcloottable.mcloot.DamageSourcePropertiesLootCondition#getSourceEntity <em>Source Entity</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Source Entity</em>'.
   * @see com.raptor.mcloottable.mcloot.DamageSourcePropertiesLootCondition#getSourceEntity()
   * @see #getDamageSourcePropertiesLootCondition()
   * @generated
   */
  EReference getDamageSourcePropertiesLootCondition_SourceEntity();

  /**
   * Returns the meta object for class '{@link com.raptor.mcloottable.mcloot.EntityPropertiesLootCondition <em>Entity Properties Loot Condition</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Entity Properties Loot Condition</em>'.
   * @see com.raptor.mcloottable.mcloot.EntityPropertiesLootCondition
   * @generated
   */
  EClass getEntityPropertiesLootCondition();

  /**
   * Returns the meta object for the attribute '{@link com.raptor.mcloottable.mcloot.EntityPropertiesLootCondition#getEntity <em>Entity</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Entity</em>'.
   * @see com.raptor.mcloottable.mcloot.EntityPropertiesLootCondition#getEntity()
   * @see #getEntityPropertiesLootCondition()
   * @generated
   */
  EAttribute getEntityPropertiesLootCondition_Entity();

  /**
   * Returns the meta object for the containment reference '{@link com.raptor.mcloottable.mcloot.EntityPropertiesLootCondition#getPredicate <em>Predicate</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Predicate</em>'.
   * @see com.raptor.mcloottable.mcloot.EntityPropertiesLootCondition#getPredicate()
   * @see #getEntityPropertiesLootCondition()
   * @generated
   */
  EReference getEntityPropertiesLootCondition_Predicate();

  /**
   * Returns the meta object for class '{@link com.raptor.mcloottable.mcloot.EntityScoresLootCondition <em>Entity Scores Loot Condition</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Entity Scores Loot Condition</em>'.
   * @see com.raptor.mcloottable.mcloot.EntityScoresLootCondition
   * @generated
   */
  EClass getEntityScoresLootCondition();

  /**
   * Returns the meta object for the attribute '{@link com.raptor.mcloottable.mcloot.EntityScoresLootCondition#getEntity <em>Entity</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Entity</em>'.
   * @see com.raptor.mcloottable.mcloot.EntityScoresLootCondition#getEntity()
   * @see #getEntityScoresLootCondition()
   * @generated
   */
  EAttribute getEntityScoresLootCondition_Entity();

  /**
   * Returns the meta object for the containment reference list '{@link com.raptor.mcloottable.mcloot.EntityScoresLootCondition#getScores <em>Scores</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Scores</em>'.
   * @see com.raptor.mcloottable.mcloot.EntityScoresLootCondition#getScores()
   * @see #getEntityScoresLootCondition()
   * @generated
   */
  EReference getEntityScoresLootCondition_Scores();

  /**
   * Returns the meta object for class '{@link com.raptor.mcloottable.mcloot.EntityScore <em>Entity Score</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Entity Score</em>'.
   * @see com.raptor.mcloottable.mcloot.EntityScore
   * @generated
   */
  EClass getEntityScore();

  /**
   * Returns the meta object for the attribute '{@link com.raptor.mcloottable.mcloot.EntityScore#getObjective <em>Objective</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Objective</em>'.
   * @see com.raptor.mcloottable.mcloot.EntityScore#getObjective()
   * @see #getEntityScore()
   * @generated
   */
  EAttribute getEntityScore_Objective();

  /**
   * Returns the meta object for the containment reference '{@link com.raptor.mcloottable.mcloot.EntityScore#getScore <em>Score</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Score</em>'.
   * @see com.raptor.mcloottable.mcloot.EntityScore#getScore()
   * @see #getEntityScore()
   * @generated
   */
  EReference getEntityScore_Score();

  /**
   * Returns the meta object for class '{@link com.raptor.mcloottable.mcloot.KilledByPlayerLootCondition <em>Killed By Player Loot Condition</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Killed By Player Loot Condition</em>'.
   * @see com.raptor.mcloottable.mcloot.KilledByPlayerLootCondition
   * @generated
   */
  EClass getKilledByPlayerLootCondition();

  /**
   * Returns the meta object for class '{@link com.raptor.mcloottable.mcloot.LocationCheckLootCondition <em>Location Check Loot Condition</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Location Check Loot Condition</em>'.
   * @see com.raptor.mcloottable.mcloot.LocationCheckLootCondition
   * @generated
   */
  EClass getLocationCheckLootCondition();

  /**
   * Returns the meta object for the attribute '{@link com.raptor.mcloottable.mcloot.LocationCheckLootCondition#isUndefinedOffsetX <em>Undefined Offset X</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Undefined Offset X</em>'.
   * @see com.raptor.mcloottable.mcloot.LocationCheckLootCondition#isUndefinedOffsetX()
   * @see #getLocationCheckLootCondition()
   * @generated
   */
  EAttribute getLocationCheckLootCondition_UndefinedOffsetX();

  /**
   * Returns the meta object for the attribute '{@link com.raptor.mcloottable.mcloot.LocationCheckLootCondition#getOffsetX <em>Offset X</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Offset X</em>'.
   * @see com.raptor.mcloottable.mcloot.LocationCheckLootCondition#getOffsetX()
   * @see #getLocationCheckLootCondition()
   * @generated
   */
  EAttribute getLocationCheckLootCondition_OffsetX();

  /**
   * Returns the meta object for the attribute '{@link com.raptor.mcloottable.mcloot.LocationCheckLootCondition#isUndefinedOffsetY <em>Undefined Offset Y</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Undefined Offset Y</em>'.
   * @see com.raptor.mcloottable.mcloot.LocationCheckLootCondition#isUndefinedOffsetY()
   * @see #getLocationCheckLootCondition()
   * @generated
   */
  EAttribute getLocationCheckLootCondition_UndefinedOffsetY();

  /**
   * Returns the meta object for the attribute '{@link com.raptor.mcloottable.mcloot.LocationCheckLootCondition#getOffsetY <em>Offset Y</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Offset Y</em>'.
   * @see com.raptor.mcloottable.mcloot.LocationCheckLootCondition#getOffsetY()
   * @see #getLocationCheckLootCondition()
   * @generated
   */
  EAttribute getLocationCheckLootCondition_OffsetY();

  /**
   * Returns the meta object for the attribute '{@link com.raptor.mcloottable.mcloot.LocationCheckLootCondition#isUndefinedOffsetZ <em>Undefined Offset Z</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Undefined Offset Z</em>'.
   * @see com.raptor.mcloottable.mcloot.LocationCheckLootCondition#isUndefinedOffsetZ()
   * @see #getLocationCheckLootCondition()
   * @generated
   */
  EAttribute getLocationCheckLootCondition_UndefinedOffsetZ();

  /**
   * Returns the meta object for the attribute '{@link com.raptor.mcloottable.mcloot.LocationCheckLootCondition#getOffsetZ <em>Offset Z</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Offset Z</em>'.
   * @see com.raptor.mcloottable.mcloot.LocationCheckLootCondition#getOffsetZ()
   * @see #getLocationCheckLootCondition()
   * @generated
   */
  EAttribute getLocationCheckLootCondition_OffsetZ();

  /**
   * Returns the meta object for the containment reference '{@link com.raptor.mcloottable.mcloot.LocationCheckLootCondition#getPredicate <em>Predicate</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Predicate</em>'.
   * @see com.raptor.mcloottable.mcloot.LocationCheckLootCondition#getPredicate()
   * @see #getLocationCheckLootCondition()
   * @generated
   */
  EReference getLocationCheckLootCondition_Predicate();

  /**
   * Returns the meta object for class '{@link com.raptor.mcloottable.mcloot.MatchToolLootCondition <em>Match Tool Loot Condition</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Match Tool Loot Condition</em>'.
   * @see com.raptor.mcloottable.mcloot.MatchToolLootCondition
   * @generated
   */
  EClass getMatchToolLootCondition();

  /**
   * Returns the meta object for the attribute '{@link com.raptor.mcloottable.mcloot.MatchToolLootCondition#isInverted <em>Inverted</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Inverted</em>'.
   * @see com.raptor.mcloottable.mcloot.MatchToolLootCondition#isInverted()
   * @see #getMatchToolLootCondition()
   * @generated
   */
  EAttribute getMatchToolLootCondition_Inverted();

  /**
   * Returns the meta object for the containment reference '{@link com.raptor.mcloottable.mcloot.MatchToolLootCondition#getPredicate <em>Predicate</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Predicate</em>'.
   * @see com.raptor.mcloottable.mcloot.MatchToolLootCondition#getPredicate()
   * @see #getMatchToolLootCondition()
   * @generated
   */
  EReference getMatchToolLootCondition_Predicate();

  /**
   * Returns the meta object for class '{@link com.raptor.mcloottable.mcloot.RandomChanceLootCondition <em>Random Chance Loot Condition</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Random Chance Loot Condition</em>'.
   * @see com.raptor.mcloottable.mcloot.RandomChanceLootCondition
   * @generated
   */
  EClass getRandomChanceLootCondition();

  /**
   * Returns the meta object for the attribute '{@link com.raptor.mcloottable.mcloot.RandomChanceLootCondition#getChance <em>Chance</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Chance</em>'.
   * @see com.raptor.mcloottable.mcloot.RandomChanceLootCondition#getChance()
   * @see #getRandomChanceLootCondition()
   * @generated
   */
  EAttribute getRandomChanceLootCondition_Chance();

  /**
   * Returns the meta object for the attribute '{@link com.raptor.mcloottable.mcloot.RandomChanceLootCondition#isLootingMultiplierDefined <em>Looting Multiplier Defined</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Looting Multiplier Defined</em>'.
   * @see com.raptor.mcloottable.mcloot.RandomChanceLootCondition#isLootingMultiplierDefined()
   * @see #getRandomChanceLootCondition()
   * @generated
   */
  EAttribute getRandomChanceLootCondition_LootingMultiplierDefined();

  /**
   * Returns the meta object for the attribute '{@link com.raptor.mcloottable.mcloot.RandomChanceLootCondition#getLootingMultiplier <em>Looting Multiplier</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Looting Multiplier</em>'.
   * @see com.raptor.mcloottable.mcloot.RandomChanceLootCondition#getLootingMultiplier()
   * @see #getRandomChanceLootCondition()
   * @generated
   */
  EAttribute getRandomChanceLootCondition_LootingMultiplier();

  /**
   * Returns the meta object for class '{@link com.raptor.mcloottable.mcloot.ReferenceLootCondition <em>Reference Loot Condition</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Reference Loot Condition</em>'.
   * @see com.raptor.mcloottable.mcloot.ReferenceLootCondition
   * @generated
   */
  EClass getReferenceLootCondition();

  /**
   * Returns the meta object for the attribute '{@link com.raptor.mcloottable.mcloot.ReferenceLootCondition#getRef <em>Ref</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Ref</em>'.
   * @see com.raptor.mcloottable.mcloot.ReferenceLootCondition#getRef()
   * @see #getReferenceLootCondition()
   * @generated
   */
  EAttribute getReferenceLootCondition_Ref();

  /**
   * Returns the meta object for class '{@link com.raptor.mcloottable.mcloot.SurvivesExplosionLootCondition <em>Survives Explosion Loot Condition</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Survives Explosion Loot Condition</em>'.
   * @see com.raptor.mcloottable.mcloot.SurvivesExplosionLootCondition
   * @generated
   */
  EClass getSurvivesExplosionLootCondition();

  /**
   * Returns the meta object for class '{@link com.raptor.mcloottable.mcloot.TableBonusLootCondition <em>Table Bonus Loot Condition</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Table Bonus Loot Condition</em>'.
   * @see com.raptor.mcloottable.mcloot.TableBonusLootCondition
   * @generated
   */
  EClass getTableBonusLootCondition();

  /**
   * Returns the meta object for the attribute '{@link com.raptor.mcloottable.mcloot.TableBonusLootCondition#getEnchantment <em>Enchantment</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Enchantment</em>'.
   * @see com.raptor.mcloottable.mcloot.TableBonusLootCondition#getEnchantment()
   * @see #getTableBonusLootCondition()
   * @generated
   */
  EAttribute getTableBonusLootCondition_Enchantment();

  /**
   * Returns the meta object for the attribute list '{@link com.raptor.mcloottable.mcloot.TableBonusLootCondition#getChances <em>Chances</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute list '<em>Chances</em>'.
   * @see com.raptor.mcloottable.mcloot.TableBonusLootCondition#getChances()
   * @see #getTableBonusLootCondition()
   * @generated
   */
  EAttribute getTableBonusLootCondition_Chances();

  /**
   * Returns the meta object for class '{@link com.raptor.mcloottable.mcloot.TimeCheckLootCondition <em>Time Check Loot Condition</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Time Check Loot Condition</em>'.
   * @see com.raptor.mcloottable.mcloot.TimeCheckLootCondition
   * @generated
   */
  EClass getTimeCheckLootCondition();

  /**
   * Returns the meta object for the attribute '{@link com.raptor.mcloottable.mcloot.TimeCheckLootCondition#isPeriodDefined <em>Period Defined</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Period Defined</em>'.
   * @see com.raptor.mcloottable.mcloot.TimeCheckLootCondition#isPeriodDefined()
   * @see #getTimeCheckLootCondition()
   * @generated
   */
  EAttribute getTimeCheckLootCondition_PeriodDefined();

  /**
   * Returns the meta object for the attribute '{@link com.raptor.mcloottable.mcloot.TimeCheckLootCondition#getPeriod <em>Period</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Period</em>'.
   * @see com.raptor.mcloottable.mcloot.TimeCheckLootCondition#getPeriod()
   * @see #getTimeCheckLootCondition()
   * @generated
   */
  EAttribute getTimeCheckLootCondition_Period();

  /**
   * Returns the meta object for the attribute '{@link com.raptor.mcloottable.mcloot.TimeCheckLootCondition#isInverted <em>Inverted</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Inverted</em>'.
   * @see com.raptor.mcloottable.mcloot.TimeCheckLootCondition#isInverted()
   * @see #getTimeCheckLootCondition()
   * @generated
   */
  EAttribute getTimeCheckLootCondition_Inverted();

  /**
   * Returns the meta object for the containment reference '{@link com.raptor.mcloottable.mcloot.TimeCheckLootCondition#getValue <em>Value</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Value</em>'.
   * @see com.raptor.mcloottable.mcloot.TimeCheckLootCondition#getValue()
   * @see #getTimeCheckLootCondition()
   * @generated
   */
  EReference getTimeCheckLootCondition_Value();

  /**
   * Returns the meta object for class '{@link com.raptor.mcloottable.mcloot.ToolEnchantmentLootCondition <em>Tool Enchantment Loot Condition</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Tool Enchantment Loot Condition</em>'.
   * @see com.raptor.mcloottable.mcloot.ToolEnchantmentLootCondition
   * @generated
   */
  EClass getToolEnchantmentLootCondition();

  /**
   * Returns the meta object for the containment reference list '{@link com.raptor.mcloottable.mcloot.ToolEnchantmentLootCondition#getEnchantments <em>Enchantments</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Enchantments</em>'.
   * @see com.raptor.mcloottable.mcloot.ToolEnchantmentLootCondition#getEnchantments()
   * @see #getToolEnchantmentLootCondition()
   * @generated
   */
  EReference getToolEnchantmentLootCondition_Enchantments();

  /**
   * Returns the meta object for class '{@link com.raptor.mcloottable.mcloot.EnchantmentLevel <em>Enchantment Level</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Enchantment Level</em>'.
   * @see com.raptor.mcloottable.mcloot.EnchantmentLevel
   * @generated
   */
  EClass getEnchantmentLevel();

  /**
   * Returns the meta object for the attribute '{@link com.raptor.mcloottable.mcloot.EnchantmentLevel#getEnchantment <em>Enchantment</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Enchantment</em>'.
   * @see com.raptor.mcloottable.mcloot.EnchantmentLevel#getEnchantment()
   * @see #getEnchantmentLevel()
   * @generated
   */
  EAttribute getEnchantmentLevel_Enchantment();

  /**
   * Returns the meta object for the containment reference '{@link com.raptor.mcloottable.mcloot.EnchantmentLevel#getLevels <em>Levels</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Levels</em>'.
   * @see com.raptor.mcloottable.mcloot.EnchantmentLevel#getLevels()
   * @see #getEnchantmentLevel()
   * @generated
   */
  EReference getEnchantmentLevel_Levels();

  /**
   * Returns the meta object for class '{@link com.raptor.mcloottable.mcloot.WeatherCheckLootCondition <em>Weather Check Loot Condition</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Weather Check Loot Condition</em>'.
   * @see com.raptor.mcloottable.mcloot.WeatherCheckLootCondition
   * @generated
   */
  EClass getWeatherCheckLootCondition();

  /**
   * Returns the meta object for the attribute '{@link com.raptor.mcloottable.mcloot.WeatherCheckLootCondition#isInverted <em>Inverted</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Inverted</em>'.
   * @see com.raptor.mcloottable.mcloot.WeatherCheckLootCondition#isInverted()
   * @see #getWeatherCheckLootCondition()
   * @generated
   */
  EAttribute getWeatherCheckLootCondition_Inverted();

  /**
   * Returns the meta object for the attribute '{@link com.raptor.mcloottable.mcloot.WeatherCheckLootCondition#isRaining <em>Raining</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Raining</em>'.
   * @see com.raptor.mcloottable.mcloot.WeatherCheckLootCondition#isRaining()
   * @see #getWeatherCheckLootCondition()
   * @generated
   */
  EAttribute getWeatherCheckLootCondition_Raining();

  /**
   * Returns the meta object for the attribute '{@link com.raptor.mcloottable.mcloot.WeatherCheckLootCondition#isThundering <em>Thundering</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Thundering</em>'.
   * @see com.raptor.mcloottable.mcloot.WeatherCheckLootCondition#isThundering()
   * @see #getWeatherCheckLootCondition()
   * @generated
   */
  EAttribute getWeatherCheckLootCondition_Thundering();

  /**
   * Returns the meta object for class '{@link com.raptor.mcloottable.mcloot.EntityPredicate <em>Entity Predicate</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Entity Predicate</em>'.
   * @see com.raptor.mcloottable.mcloot.EntityPredicate
   * @generated
   */
  EClass getEntityPredicate();

  /**
   * Returns the meta object for the containment reference '{@link com.raptor.mcloottable.mcloot.EntityPredicate#getAbsoluteDistance <em>Absolute Distance</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Absolute Distance</em>'.
   * @see com.raptor.mcloottable.mcloot.EntityPredicate#getAbsoluteDistance()
   * @see #getEntityPredicate()
   * @generated
   */
  EReference getEntityPredicate_AbsoluteDistance();

  /**
   * Returns the meta object for the containment reference '{@link com.raptor.mcloottable.mcloot.EntityPredicate#getHorizontalDistance <em>Horizontal Distance</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Horizontal Distance</em>'.
   * @see com.raptor.mcloottable.mcloot.EntityPredicate#getHorizontalDistance()
   * @see #getEntityPredicate()
   * @generated
   */
  EReference getEntityPredicate_HorizontalDistance();

  /**
   * Returns the meta object for the containment reference '{@link com.raptor.mcloottable.mcloot.EntityPredicate#getXDistance <em>XDistance</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>XDistance</em>'.
   * @see com.raptor.mcloottable.mcloot.EntityPredicate#getXDistance()
   * @see #getEntityPredicate()
   * @generated
   */
  EReference getEntityPredicate_XDistance();

  /**
   * Returns the meta object for the containment reference '{@link com.raptor.mcloottable.mcloot.EntityPredicate#getYDistance <em>YDistance</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>YDistance</em>'.
   * @see com.raptor.mcloottable.mcloot.EntityPredicate#getYDistance()
   * @see #getEntityPredicate()
   * @generated
   */
  EReference getEntityPredicate_YDistance();

  /**
   * Returns the meta object for the containment reference '{@link com.raptor.mcloottable.mcloot.EntityPredicate#getZDistance <em>ZDistance</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>ZDistance</em>'.
   * @see com.raptor.mcloottable.mcloot.EntityPredicate#getZDistance()
   * @see #getEntityPredicate()
   * @generated
   */
  EReference getEntityPredicate_ZDistance();

  /**
   * Returns the meta object for the attribute '{@link com.raptor.mcloottable.mcloot.EntityPredicate#isEffectsDefined <em>Effects Defined</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Effects Defined</em>'.
   * @see com.raptor.mcloottable.mcloot.EntityPredicate#isEffectsDefined()
   * @see #getEntityPredicate()
   * @generated
   */
  EAttribute getEntityPredicate_EffectsDefined();

  /**
   * Returns the meta object for the containment reference list '{@link com.raptor.mcloottable.mcloot.EntityPredicate#getEffects <em>Effects</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Effects</em>'.
   * @see com.raptor.mcloottable.mcloot.EntityPredicate#getEffects()
   * @see #getEntityPredicate()
   * @generated
   */
  EReference getEntityPredicate_Effects();

  /**
   * Returns the meta object for the containment reference list '{@link com.raptor.mcloottable.mcloot.EntityPredicate#getEquipment <em>Equipment</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Equipment</em>'.
   * @see com.raptor.mcloottable.mcloot.EntityPredicate#getEquipment()
   * @see #getEntityPredicate()
   * @generated
   */
  EReference getEntityPredicate_Equipment();

  /**
   * Returns the meta object for the containment reference '{@link com.raptor.mcloottable.mcloot.EntityPredicate#getDefaultEquipment <em>Default Equipment</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Default Equipment</em>'.
   * @see com.raptor.mcloottable.mcloot.EntityPredicate#getDefaultEquipment()
   * @see #getEntityPredicate()
   * @generated
   */
  EReference getEntityPredicate_DefaultEquipment();

  /**
   * Returns the meta object for the containment reference '{@link com.raptor.mcloottable.mcloot.EntityPredicate#getFlags <em>Flags</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Flags</em>'.
   * @see com.raptor.mcloottable.mcloot.EntityPredicate#getFlags()
   * @see #getEntityPredicate()
   * @generated
   */
  EReference getEntityPredicate_Flags();

  /**
   * Returns the meta object for the attribute '{@link com.raptor.mcloottable.mcloot.EntityPredicate#getNbt <em>Nbt</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Nbt</em>'.
   * @see com.raptor.mcloottable.mcloot.EntityPredicate#getNbt()
   * @see #getEntityPredicate()
   * @generated
   */
  EAttribute getEntityPredicate_Nbt();

  /**
   * Returns the meta object for the containment reference '{@link com.raptor.mcloottable.mcloot.EntityPredicate#getPlayer <em>Player</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Player</em>'.
   * @see com.raptor.mcloottable.mcloot.EntityPredicate#getPlayer()
   * @see #getEntityPredicate()
   * @generated
   */
  EReference getEntityPredicate_Player();

  /**
   * Returns the meta object for the attribute '{@link com.raptor.mcloottable.mcloot.EntityPredicate#getTeam <em>Team</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Team</em>'.
   * @see com.raptor.mcloottable.mcloot.EntityPredicate#getTeam()
   * @see #getEntityPredicate()
   * @generated
   */
  EAttribute getEntityPredicate_Team();

  /**
   * Returns the meta object for the attribute '{@link com.raptor.mcloottable.mcloot.EntityPredicate#getType <em>Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Type</em>'.
   * @see com.raptor.mcloottable.mcloot.EntityPredicate#getType()
   * @see #getEntityPredicate()
   * @generated
   */
  EAttribute getEntityPredicate_Type();

  /**
   * Returns the meta object for the containment reference '{@link com.raptor.mcloottable.mcloot.EntityPredicate#getLocation <em>Location</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Location</em>'.
   * @see com.raptor.mcloottable.mcloot.EntityPredicate#getLocation()
   * @see #getEntityPredicate()
   * @generated
   */
  EReference getEntityPredicate_Location();

  /**
   * Returns the meta object for the containment reference '{@link com.raptor.mcloottable.mcloot.EntityPredicate#getFishingHook <em>Fishing Hook</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Fishing Hook</em>'.
   * @see com.raptor.mcloottable.mcloot.EntityPredicate#getFishingHook()
   * @see #getEntityPredicate()
   * @generated
   */
  EReference getEntityPredicate_FishingHook();

  /**
   * Returns the meta object for class '{@link com.raptor.mcloottable.mcloot.FishingHookPredicate <em>Fishing Hook Predicate</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Fishing Hook Predicate</em>'.
   * @see com.raptor.mcloottable.mcloot.FishingHookPredicate
   * @generated
   */
  EClass getFishingHookPredicate();

  /**
   * Returns the meta object for the attribute '{@link com.raptor.mcloottable.mcloot.FishingHookPredicate#isInOpenWaterDefined <em>In Open Water Defined</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>In Open Water Defined</em>'.
   * @see com.raptor.mcloottable.mcloot.FishingHookPredicate#isInOpenWaterDefined()
   * @see #getFishingHookPredicate()
   * @generated
   */
  EAttribute getFishingHookPredicate_InOpenWaterDefined();

  /**
   * Returns the meta object for the attribute '{@link com.raptor.mcloottable.mcloot.FishingHookPredicate#isInOpenWater <em>In Open Water</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>In Open Water</em>'.
   * @see com.raptor.mcloottable.mcloot.FishingHookPredicate#isInOpenWater()
   * @see #getFishingHookPredicate()
   * @generated
   */
  EAttribute getFishingHookPredicate_InOpenWater();

  /**
   * Returns the meta object for class '{@link com.raptor.mcloottable.mcloot.EffectPredicate <em>Effect Predicate</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Effect Predicate</em>'.
   * @see com.raptor.mcloottable.mcloot.EffectPredicate
   * @generated
   */
  EClass getEffectPredicate();

  /**
   * Returns the meta object for the attribute '{@link com.raptor.mcloottable.mcloot.EffectPredicate#getId <em>Id</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Id</em>'.
   * @see com.raptor.mcloottable.mcloot.EffectPredicate#getId()
   * @see #getEffectPredicate()
   * @generated
   */
  EAttribute getEffectPredicate_Id();

  /**
   * Returns the meta object for the containment reference '{@link com.raptor.mcloottable.mcloot.EffectPredicate#getAmplifier <em>Amplifier</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Amplifier</em>'.
   * @see com.raptor.mcloottable.mcloot.EffectPredicate#getAmplifier()
   * @see #getEffectPredicate()
   * @generated
   */
  EReference getEffectPredicate_Amplifier();

  /**
   * Returns the meta object for the containment reference '{@link com.raptor.mcloottable.mcloot.EffectPredicate#getDuration <em>Duration</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Duration</em>'.
   * @see com.raptor.mcloottable.mcloot.EffectPredicate#getDuration()
   * @see #getEffectPredicate()
   * @generated
   */
  EReference getEffectPredicate_Duration();

  /**
   * Returns the meta object for class '{@link com.raptor.mcloottable.mcloot.EquipmentPredicate <em>Equipment Predicate</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Equipment Predicate</em>'.
   * @see com.raptor.mcloottable.mcloot.EquipmentPredicate
   * @generated
   */
  EClass getEquipmentPredicate();

  /**
   * Returns the meta object for the attribute list '{@link com.raptor.mcloottable.mcloot.EquipmentPredicate#getSlots <em>Slots</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute list '<em>Slots</em>'.
   * @see com.raptor.mcloottable.mcloot.EquipmentPredicate#getSlots()
   * @see #getEquipmentPredicate()
   * @generated
   */
  EAttribute getEquipmentPredicate_Slots();

  /**
   * Returns the meta object for the containment reference '{@link com.raptor.mcloottable.mcloot.EquipmentPredicate#getPredicate <em>Predicate</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Predicate</em>'.
   * @see com.raptor.mcloottable.mcloot.EquipmentPredicate#getPredicate()
   * @see #getEquipmentPredicate()
   * @generated
   */
  EReference getEquipmentPredicate_Predicate();

  /**
   * Returns the meta object for class '{@link com.raptor.mcloottable.mcloot.EntityFlags <em>Entity Flags</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Entity Flags</em>'.
   * @see com.raptor.mcloottable.mcloot.EntityFlags
   * @generated
   */
  EClass getEntityFlags();

  /**
   * Returns the meta object for the attribute '{@link com.raptor.mcloottable.mcloot.EntityFlags#isOnFireDefined <em>On Fire Defined</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>On Fire Defined</em>'.
   * @see com.raptor.mcloottable.mcloot.EntityFlags#isOnFireDefined()
   * @see #getEntityFlags()
   * @generated
   */
  EAttribute getEntityFlags_OnFireDefined();

  /**
   * Returns the meta object for the attribute '{@link com.raptor.mcloottable.mcloot.EntityFlags#isOnFire <em>On Fire</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>On Fire</em>'.
   * @see com.raptor.mcloottable.mcloot.EntityFlags#isOnFire()
   * @see #getEntityFlags()
   * @generated
   */
  EAttribute getEntityFlags_OnFire();

  /**
   * Returns the meta object for the attribute '{@link com.raptor.mcloottable.mcloot.EntityFlags#isSneakingDefined <em>Sneaking Defined</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Sneaking Defined</em>'.
   * @see com.raptor.mcloottable.mcloot.EntityFlags#isSneakingDefined()
   * @see #getEntityFlags()
   * @generated
   */
  EAttribute getEntityFlags_SneakingDefined();

  /**
   * Returns the meta object for the attribute '{@link com.raptor.mcloottable.mcloot.EntityFlags#isSneaking <em>Sneaking</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Sneaking</em>'.
   * @see com.raptor.mcloottable.mcloot.EntityFlags#isSneaking()
   * @see #getEntityFlags()
   * @generated
   */
  EAttribute getEntityFlags_Sneaking();

  /**
   * Returns the meta object for the attribute '{@link com.raptor.mcloottable.mcloot.EntityFlags#isSprintingDefined <em>Sprinting Defined</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Sprinting Defined</em>'.
   * @see com.raptor.mcloottable.mcloot.EntityFlags#isSprintingDefined()
   * @see #getEntityFlags()
   * @generated
   */
  EAttribute getEntityFlags_SprintingDefined();

  /**
   * Returns the meta object for the attribute '{@link com.raptor.mcloottable.mcloot.EntityFlags#isSprinting <em>Sprinting</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Sprinting</em>'.
   * @see com.raptor.mcloottable.mcloot.EntityFlags#isSprinting()
   * @see #getEntityFlags()
   * @generated
   */
  EAttribute getEntityFlags_Sprinting();

  /**
   * Returns the meta object for the attribute '{@link com.raptor.mcloottable.mcloot.EntityFlags#isSwimmingDefined <em>Swimming Defined</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Swimming Defined</em>'.
   * @see com.raptor.mcloottable.mcloot.EntityFlags#isSwimmingDefined()
   * @see #getEntityFlags()
   * @generated
   */
  EAttribute getEntityFlags_SwimmingDefined();

  /**
   * Returns the meta object for the attribute '{@link com.raptor.mcloottable.mcloot.EntityFlags#isSwimming <em>Swimming</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Swimming</em>'.
   * @see com.raptor.mcloottable.mcloot.EntityFlags#isSwimming()
   * @see #getEntityFlags()
   * @generated
   */
  EAttribute getEntityFlags_Swimming();

  /**
   * Returns the meta object for the attribute '{@link com.raptor.mcloottable.mcloot.EntityFlags#isBabyDefined <em>Baby Defined</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Baby Defined</em>'.
   * @see com.raptor.mcloottable.mcloot.EntityFlags#isBabyDefined()
   * @see #getEntityFlags()
   * @generated
   */
  EAttribute getEntityFlags_BabyDefined();

  /**
   * Returns the meta object for the attribute '{@link com.raptor.mcloottable.mcloot.EntityFlags#isBaby <em>Baby</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Baby</em>'.
   * @see com.raptor.mcloottable.mcloot.EntityFlags#isBaby()
   * @see #getEntityFlags()
   * @generated
   */
  EAttribute getEntityFlags_Baby();

  /**
   * Returns the meta object for class '{@link com.raptor.mcloottable.mcloot.PlayerPredicate <em>Player Predicate</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Player Predicate</em>'.
   * @see com.raptor.mcloottable.mcloot.PlayerPredicate
   * @generated
   */
  EClass getPlayerPredicate();

  /**
   * Returns the meta object for the attribute '{@link com.raptor.mcloottable.mcloot.PlayerPredicate#isAdvancementsDefined <em>Advancements Defined</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Advancements Defined</em>'.
   * @see com.raptor.mcloottable.mcloot.PlayerPredicate#isAdvancementsDefined()
   * @see #getPlayerPredicate()
   * @generated
   */
  EAttribute getPlayerPredicate_AdvancementsDefined();

  /**
   * Returns the meta object for the containment reference list '{@link com.raptor.mcloottable.mcloot.PlayerPredicate#getAdvancements <em>Advancements</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Advancements</em>'.
   * @see com.raptor.mcloottable.mcloot.PlayerPredicate#getAdvancements()
   * @see #getPlayerPredicate()
   * @generated
   */
  EReference getPlayerPredicate_Advancements();

  /**
   * Returns the meta object for the attribute '{@link com.raptor.mcloottable.mcloot.PlayerPredicate#isGamemodeDefined <em>Gamemode Defined</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Gamemode Defined</em>'.
   * @see com.raptor.mcloottable.mcloot.PlayerPredicate#isGamemodeDefined()
   * @see #getPlayerPredicate()
   * @generated
   */
  EAttribute getPlayerPredicate_GamemodeDefined();

  /**
   * Returns the meta object for the attribute '{@link com.raptor.mcloottable.mcloot.PlayerPredicate#getGamemode <em>Gamemode</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Gamemode</em>'.
   * @see com.raptor.mcloottable.mcloot.PlayerPredicate#getGamemode()
   * @see #getPlayerPredicate()
   * @generated
   */
  EAttribute getPlayerPredicate_Gamemode();

  /**
   * Returns the meta object for the attribute '{@link com.raptor.mcloottable.mcloot.PlayerPredicate#isRecipesDefined <em>Recipes Defined</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Recipes Defined</em>'.
   * @see com.raptor.mcloottable.mcloot.PlayerPredicate#isRecipesDefined()
   * @see #getPlayerPredicate()
   * @generated
   */
  EAttribute getPlayerPredicate_RecipesDefined();

  /**
   * Returns the meta object for the containment reference list '{@link com.raptor.mcloottable.mcloot.PlayerPredicate#getRecipes <em>Recipes</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Recipes</em>'.
   * @see com.raptor.mcloottable.mcloot.PlayerPredicate#getRecipes()
   * @see #getPlayerPredicate()
   * @generated
   */
  EReference getPlayerPredicate_Recipes();

  /**
   * Returns the meta object for the attribute '{@link com.raptor.mcloottable.mcloot.PlayerPredicate#isStatsDefined <em>Stats Defined</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Stats Defined</em>'.
   * @see com.raptor.mcloottable.mcloot.PlayerPredicate#isStatsDefined()
   * @see #getPlayerPredicate()
   * @generated
   */
  EAttribute getPlayerPredicate_StatsDefined();

  /**
   * Returns the meta object for the containment reference list '{@link com.raptor.mcloottable.mcloot.PlayerPredicate#getStats <em>Stats</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Stats</em>'.
   * @see com.raptor.mcloottable.mcloot.PlayerPredicate#getStats()
   * @see #getPlayerPredicate()
   * @generated
   */
  EReference getPlayerPredicate_Stats();

  /**
   * Returns the meta object for class '{@link com.raptor.mcloottable.mcloot.AdvancementPredicate <em>Advancement Predicate</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Advancement Predicate</em>'.
   * @see com.raptor.mcloottable.mcloot.AdvancementPredicate
   * @generated
   */
  EClass getAdvancementPredicate();

  /**
   * Returns the meta object for the attribute '{@link com.raptor.mcloottable.mcloot.AdvancementPredicate#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see com.raptor.mcloottable.mcloot.AdvancementPredicate#getName()
   * @see #getAdvancementPredicate()
   * @generated
   */
  EAttribute getAdvancementPredicate_Name();

  /**
   * Returns the meta object for the attribute '{@link com.raptor.mcloottable.mcloot.AdvancementPredicate#isDidNotGet <em>Did Not Get</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Did Not Get</em>'.
   * @see com.raptor.mcloottable.mcloot.AdvancementPredicate#isDidNotGet()
   * @see #getAdvancementPredicate()
   * @generated
   */
  EAttribute getAdvancementPredicate_DidNotGet();

  /**
   * Returns the meta object for the containment reference list '{@link com.raptor.mcloottable.mcloot.AdvancementPredicate#getCriteria <em>Criteria</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Criteria</em>'.
   * @see com.raptor.mcloottable.mcloot.AdvancementPredicate#getCriteria()
   * @see #getAdvancementPredicate()
   * @generated
   */
  EReference getAdvancementPredicate_Criteria();

  /**
   * Returns the meta object for class '{@link com.raptor.mcloottable.mcloot.AdvancementCriteria <em>Advancement Criteria</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Advancement Criteria</em>'.
   * @see com.raptor.mcloottable.mcloot.AdvancementCriteria
   * @generated
   */
  EClass getAdvancementCriteria();

  /**
   * Returns the meta object for the attribute list '{@link com.raptor.mcloottable.mcloot.AdvancementCriteria#getCriteriaNames <em>Criteria Names</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute list '<em>Criteria Names</em>'.
   * @see com.raptor.mcloottable.mcloot.AdvancementCriteria#getCriteriaNames()
   * @see #getAdvancementCriteria()
   * @generated
   */
  EAttribute getAdvancementCriteria_CriteriaNames();

  /**
   * Returns the meta object for the attribute '{@link com.raptor.mcloottable.mcloot.AdvancementCriteria#isDidNotGet <em>Did Not Get</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Did Not Get</em>'.
   * @see com.raptor.mcloottable.mcloot.AdvancementCriteria#isDidNotGet()
   * @see #getAdvancementCriteria()
   * @generated
   */
  EAttribute getAdvancementCriteria_DidNotGet();

  /**
   * Returns the meta object for class '{@link com.raptor.mcloottable.mcloot.RecipePredicate <em>Recipe Predicate</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Recipe Predicate</em>'.
   * @see com.raptor.mcloottable.mcloot.RecipePredicate
   * @generated
   */
  EClass getRecipePredicate();

  /**
   * Returns the meta object for the attribute '{@link com.raptor.mcloottable.mcloot.RecipePredicate#getRecipe <em>Recipe</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Recipe</em>'.
   * @see com.raptor.mcloottable.mcloot.RecipePredicate#getRecipe()
   * @see #getRecipePredicate()
   * @generated
   */
  EAttribute getRecipePredicate_Recipe();

  /**
   * Returns the meta object for the attribute '{@link com.raptor.mcloottable.mcloot.RecipePredicate#isDidNotGet <em>Did Not Get</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Did Not Get</em>'.
   * @see com.raptor.mcloottable.mcloot.RecipePredicate#isDidNotGet()
   * @see #getRecipePredicate()
   * @generated
   */
  EAttribute getRecipePredicate_DidNotGet();

  /**
   * Returns the meta object for class '{@link com.raptor.mcloottable.mcloot.StatisticPredicate <em>Statistic Predicate</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Statistic Predicate</em>'.
   * @see com.raptor.mcloottable.mcloot.StatisticPredicate
   * @generated
   */
  EClass getStatisticPredicate();

  /**
   * Returns the meta object for the attribute '{@link com.raptor.mcloottable.mcloot.StatisticPredicate#getType <em>Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Type</em>'.
   * @see com.raptor.mcloottable.mcloot.StatisticPredicate#getType()
   * @see #getStatisticPredicate()
   * @generated
   */
  EAttribute getStatisticPredicate_Type();

  /**
   * Returns the meta object for class '{@link com.raptor.mcloottable.mcloot.SingleStatisticPredicate <em>Single Statistic Predicate</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Single Statistic Predicate</em>'.
   * @see com.raptor.mcloottable.mcloot.SingleStatisticPredicate
   * @generated
   */
  EClass getSingleStatisticPredicate();

  /**
   * Returns the meta object for the attribute '{@link com.raptor.mcloottable.mcloot.SingleStatisticPredicate#getStat <em>Stat</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Stat</em>'.
   * @see com.raptor.mcloottable.mcloot.SingleStatisticPredicate#getStat()
   * @see #getSingleStatisticPredicate()
   * @generated
   */
  EAttribute getSingleStatisticPredicate_Stat();

  /**
   * Returns the meta object for the containment reference '{@link com.raptor.mcloottable.mcloot.SingleStatisticPredicate#getValue <em>Value</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Value</em>'.
   * @see com.raptor.mcloottable.mcloot.SingleStatisticPredicate#getValue()
   * @see #getSingleStatisticPredicate()
   * @generated
   */
  EReference getSingleStatisticPredicate_Value();

  /**
   * Returns the meta object for class '{@link com.raptor.mcloottable.mcloot.NamespacedStatisticPredicate <em>Namespaced Statistic Predicate</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Namespaced Statistic Predicate</em>'.
   * @see com.raptor.mcloottable.mcloot.NamespacedStatisticPredicate
   * @generated
   */
  EClass getNamespacedStatisticPredicate();

  /**
   * Returns the meta object for the containment reference list '{@link com.raptor.mcloottable.mcloot.NamespacedStatisticPredicate#getStats <em>Stats</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Stats</em>'.
   * @see com.raptor.mcloottable.mcloot.NamespacedStatisticPredicate#getStats()
   * @see #getNamespacedStatisticPredicate()
   * @generated
   */
  EReference getNamespacedStatisticPredicate_Stats();

  /**
   * Returns the meta object for class '{@link com.raptor.mcloottable.mcloot.UnnamespacedStatisticPredicate <em>Unnamespaced Statistic Predicate</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Unnamespaced Statistic Predicate</em>'.
   * @see com.raptor.mcloottable.mcloot.UnnamespacedStatisticPredicate
   * @generated
   */
  EClass getUnnamespacedStatisticPredicate();

  /**
   * Returns the meta object for the attribute '{@link com.raptor.mcloottable.mcloot.UnnamespacedStatisticPredicate#getStat <em>Stat</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Stat</em>'.
   * @see com.raptor.mcloottable.mcloot.UnnamespacedStatisticPredicate#getStat()
   * @see #getUnnamespacedStatisticPredicate()
   * @generated
   */
  EAttribute getUnnamespacedStatisticPredicate_Stat();

  /**
   * Returns the meta object for the containment reference '{@link com.raptor.mcloottable.mcloot.UnnamespacedStatisticPredicate#getValue <em>Value</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Value</em>'.
   * @see com.raptor.mcloottable.mcloot.UnnamespacedStatisticPredicate#getValue()
   * @see #getUnnamespacedStatisticPredicate()
   * @generated
   */
  EReference getUnnamespacedStatisticPredicate_Value();

  /**
   * Returns the meta object for class '{@link com.raptor.mcloottable.mcloot.LocationPredicate <em>Location Predicate</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Location Predicate</em>'.
   * @see com.raptor.mcloottable.mcloot.LocationPredicate
   * @generated
   */
  EClass getLocationPredicate();

  /**
   * Returns the meta object for the attribute '{@link com.raptor.mcloottable.mcloot.LocationPredicate#getBiome <em>Biome</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Biome</em>'.
   * @see com.raptor.mcloottable.mcloot.LocationPredicate#getBiome()
   * @see #getLocationPredicate()
   * @generated
   */
  EAttribute getLocationPredicate_Biome();

  /**
   * Returns the meta object for the containment reference '{@link com.raptor.mcloottable.mcloot.LocationPredicate#getBlock <em>Block</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Block</em>'.
   * @see com.raptor.mcloottable.mcloot.LocationPredicate#getBlock()
   * @see #getLocationPredicate()
   * @generated
   */
  EReference getLocationPredicate_Block();

  /**
   * Returns the meta object for the attribute '{@link com.raptor.mcloottable.mcloot.LocationPredicate#getDimension <em>Dimension</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Dimension</em>'.
   * @see com.raptor.mcloottable.mcloot.LocationPredicate#getDimension()
   * @see #getLocationPredicate()
   * @generated
   */
  EAttribute getLocationPredicate_Dimension();

  /**
   * Returns the meta object for the attribute '{@link com.raptor.mcloottable.mcloot.LocationPredicate#getFeature <em>Feature</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Feature</em>'.
   * @see com.raptor.mcloottable.mcloot.LocationPredicate#getFeature()
   * @see #getLocationPredicate()
   * @generated
   */
  EAttribute getLocationPredicate_Feature();

  /**
   * Returns the meta object for the containment reference '{@link com.raptor.mcloottable.mcloot.LocationPredicate#getFluid <em>Fluid</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Fluid</em>'.
   * @see com.raptor.mcloottable.mcloot.LocationPredicate#getFluid()
   * @see #getLocationPredicate()
   * @generated
   */
  EReference getLocationPredicate_Fluid();

  /**
   * Returns the meta object for the containment reference '{@link com.raptor.mcloottable.mcloot.LocationPredicate#getLight <em>Light</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Light</em>'.
   * @see com.raptor.mcloottable.mcloot.LocationPredicate#getLight()
   * @see #getLocationPredicate()
   * @generated
   */
  EReference getLocationPredicate_Light();

  /**
   * Returns the meta object for the containment reference '{@link com.raptor.mcloottable.mcloot.LocationPredicate#getXPos <em>XPos</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>XPos</em>'.
   * @see com.raptor.mcloottable.mcloot.LocationPredicate#getXPos()
   * @see #getLocationPredicate()
   * @generated
   */
  EReference getLocationPredicate_XPos();

  /**
   * Returns the meta object for the containment reference '{@link com.raptor.mcloottable.mcloot.LocationPredicate#getYPos <em>YPos</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>YPos</em>'.
   * @see com.raptor.mcloottable.mcloot.LocationPredicate#getYPos()
   * @see #getLocationPredicate()
   * @generated
   */
  EReference getLocationPredicate_YPos();

  /**
   * Returns the meta object for the containment reference '{@link com.raptor.mcloottable.mcloot.LocationPredicate#getZPos <em>ZPos</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>ZPos</em>'.
   * @see com.raptor.mcloottable.mcloot.LocationPredicate#getZPos()
   * @see #getLocationPredicate()
   * @generated
   */
  EReference getLocationPredicate_ZPos();

  /**
   * Returns the meta object for class '{@link com.raptor.mcloottable.mcloot.ItemPredicate <em>Item Predicate</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Item Predicate</em>'.
   * @see com.raptor.mcloottable.mcloot.ItemPredicate
   * @generated
   */
  EClass getItemPredicate();

  /**
   * Returns the meta object for the attribute '{@link com.raptor.mcloottable.mcloot.ItemPredicate#getTag <em>Tag</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Tag</em>'.
   * @see com.raptor.mcloottable.mcloot.ItemPredicate#getTag()
   * @see #getItemPredicate()
   * @generated
   */
  EAttribute getItemPredicate_Tag();

  /**
   * Returns the meta object for the attribute '{@link com.raptor.mcloottable.mcloot.ItemPredicate#getItem <em>Item</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Item</em>'.
   * @see com.raptor.mcloottable.mcloot.ItemPredicate#getItem()
   * @see #getItemPredicate()
   * @generated
   */
  EAttribute getItemPredicate_Item();

  /**
   * Returns the meta object for the attribute '{@link com.raptor.mcloottable.mcloot.ItemPredicate#isCountDefined <em>Count Defined</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Count Defined</em>'.
   * @see com.raptor.mcloottable.mcloot.ItemPredicate#isCountDefined()
   * @see #getItemPredicate()
   * @generated
   */
  EAttribute getItemPredicate_CountDefined();

  /**
   * Returns the meta object for the containment reference '{@link com.raptor.mcloottable.mcloot.ItemPredicate#getCount <em>Count</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Count</em>'.
   * @see com.raptor.mcloottable.mcloot.ItemPredicate#getCount()
   * @see #getItemPredicate()
   * @generated
   */
  EReference getItemPredicate_Count();

  /**
   * Returns the meta object for the attribute '{@link com.raptor.mcloottable.mcloot.ItemPredicate#isDurabilityDefined <em>Durability Defined</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Durability Defined</em>'.
   * @see com.raptor.mcloottable.mcloot.ItemPredicate#isDurabilityDefined()
   * @see #getItemPredicate()
   * @generated
   */
  EAttribute getItemPredicate_DurabilityDefined();

  /**
   * Returns the meta object for the containment reference '{@link com.raptor.mcloottable.mcloot.ItemPredicate#getDurability <em>Durability</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Durability</em>'.
   * @see com.raptor.mcloottable.mcloot.ItemPredicate#getDurability()
   * @see #getItemPredicate()
   * @generated
   */
  EReference getItemPredicate_Durability();

  /**
   * Returns the meta object for the attribute '{@link com.raptor.mcloottable.mcloot.ItemPredicate#isEnchantmentsDefined <em>Enchantments Defined</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Enchantments Defined</em>'.
   * @see com.raptor.mcloottable.mcloot.ItemPredicate#isEnchantmentsDefined()
   * @see #getItemPredicate()
   * @generated
   */
  EAttribute getItemPredicate_EnchantmentsDefined();

  /**
   * Returns the meta object for the containment reference list '{@link com.raptor.mcloottable.mcloot.ItemPredicate#getEnchantments <em>Enchantments</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Enchantments</em>'.
   * @see com.raptor.mcloottable.mcloot.ItemPredicate#getEnchantments()
   * @see #getItemPredicate()
   * @generated
   */
  EReference getItemPredicate_Enchantments();

  /**
   * Returns the meta object for the attribute '{@link com.raptor.mcloottable.mcloot.ItemPredicate#isStoredEnchantmentsDefined <em>Stored Enchantments Defined</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Stored Enchantments Defined</em>'.
   * @see com.raptor.mcloottable.mcloot.ItemPredicate#isStoredEnchantmentsDefined()
   * @see #getItemPredicate()
   * @generated
   */
  EAttribute getItemPredicate_StoredEnchantmentsDefined();

  /**
   * Returns the meta object for the containment reference list '{@link com.raptor.mcloottable.mcloot.ItemPredicate#getStoredEnchantments <em>Stored Enchantments</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Stored Enchantments</em>'.
   * @see com.raptor.mcloottable.mcloot.ItemPredicate#getStoredEnchantments()
   * @see #getItemPredicate()
   * @generated
   */
  EReference getItemPredicate_StoredEnchantments();

  /**
   * Returns the meta object for the attribute '{@link com.raptor.mcloottable.mcloot.ItemPredicate#isNbtDefined <em>Nbt Defined</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Nbt Defined</em>'.
   * @see com.raptor.mcloottable.mcloot.ItemPredicate#isNbtDefined()
   * @see #getItemPredicate()
   * @generated
   */
  EAttribute getItemPredicate_NbtDefined();

  /**
   * Returns the meta object for the attribute '{@link com.raptor.mcloottable.mcloot.ItemPredicate#getNbt <em>Nbt</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Nbt</em>'.
   * @see com.raptor.mcloottable.mcloot.ItemPredicate#getNbt()
   * @see #getItemPredicate()
   * @generated
   */
  EAttribute getItemPredicate_Nbt();

  /**
   * Returns the meta object for the attribute '{@link com.raptor.mcloottable.mcloot.ItemPredicate#isPotionDefined <em>Potion Defined</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Potion Defined</em>'.
   * @see com.raptor.mcloottable.mcloot.ItemPredicate#isPotionDefined()
   * @see #getItemPredicate()
   * @generated
   */
  EAttribute getItemPredicate_PotionDefined();

  /**
   * Returns the meta object for the attribute '{@link com.raptor.mcloottable.mcloot.ItemPredicate#getPotion <em>Potion</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Potion</em>'.
   * @see com.raptor.mcloottable.mcloot.ItemPredicate#getPotion()
   * @see #getItemPredicate()
   * @generated
   */
  EAttribute getItemPredicate_Potion();

  /**
   * Returns the meta object for class '{@link com.raptor.mcloottable.mcloot.BlockPredicate <em>Block Predicate</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Block Predicate</em>'.
   * @see com.raptor.mcloottable.mcloot.BlockPredicate
   * @generated
   */
  EClass getBlockPredicate();

  /**
   * Returns the meta object for the attribute '{@link com.raptor.mcloottable.mcloot.BlockPredicate#getTag <em>Tag</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Tag</em>'.
   * @see com.raptor.mcloottable.mcloot.BlockPredicate#getTag()
   * @see #getBlockPredicate()
   * @generated
   */
  EAttribute getBlockPredicate_Tag();

  /**
   * Returns the meta object for the attribute '{@link com.raptor.mcloottable.mcloot.BlockPredicate#getBlock <em>Block</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Block</em>'.
   * @see com.raptor.mcloottable.mcloot.BlockPredicate#getBlock()
   * @see #getBlockPredicate()
   * @generated
   */
  EAttribute getBlockPredicate_Block();

  /**
   * Returns the meta object for the attribute '{@link com.raptor.mcloottable.mcloot.BlockPredicate#getNbt <em>Nbt</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Nbt</em>'.
   * @see com.raptor.mcloottable.mcloot.BlockPredicate#getNbt()
   * @see #getBlockPredicate()
   * @generated
   */
  EAttribute getBlockPredicate_Nbt();

  /**
   * Returns the meta object for the attribute '{@link com.raptor.mcloottable.mcloot.BlockPredicate#isStateDefined <em>State Defined</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>State Defined</em>'.
   * @see com.raptor.mcloottable.mcloot.BlockPredicate#isStateDefined()
   * @see #getBlockPredicate()
   * @generated
   */
  EAttribute getBlockPredicate_StateDefined();

  /**
   * Returns the meta object for the containment reference list '{@link com.raptor.mcloottable.mcloot.BlockPredicate#getProperties <em>Properties</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Properties</em>'.
   * @see com.raptor.mcloottable.mcloot.BlockPredicate#getProperties()
   * @see #getBlockPredicate()
   * @generated
   */
  EReference getBlockPredicate_Properties();

  /**
   * Returns the meta object for class '{@link com.raptor.mcloottable.mcloot.BlockStatePropertyPredicate <em>Block State Property Predicate</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Block State Property Predicate</em>'.
   * @see com.raptor.mcloottable.mcloot.BlockStatePropertyPredicate
   * @generated
   */
  EClass getBlockStatePropertyPredicate();

  /**
   * Returns the meta object for the attribute '{@link com.raptor.mcloottable.mcloot.BlockStatePropertyPredicate#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see com.raptor.mcloottable.mcloot.BlockStatePropertyPredicate#getName()
   * @see #getBlockStatePropertyPredicate()
   * @generated
   */
  EAttribute getBlockStatePropertyPredicate_Name();

  /**
   * Returns the meta object for the attribute '{@link com.raptor.mcloottable.mcloot.BlockStatePropertyPredicate#getValue <em>Value</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Value</em>'.
   * @see com.raptor.mcloottable.mcloot.BlockStatePropertyPredicate#getValue()
   * @see #getBlockStatePropertyPredicate()
   * @generated
   */
  EAttribute getBlockStatePropertyPredicate_Value();

  /**
   * Returns the meta object for the containment reference '{@link com.raptor.mcloottable.mcloot.BlockStatePropertyPredicate#getValueRange <em>Value Range</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Value Range</em>'.
   * @see com.raptor.mcloottable.mcloot.BlockStatePropertyPredicate#getValueRange()
   * @see #getBlockStatePropertyPredicate()
   * @generated
   */
  EReference getBlockStatePropertyPredicate_ValueRange();

  /**
   * Returns the meta object for class '{@link com.raptor.mcloottable.mcloot.FluidPredicate <em>Fluid Predicate</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Fluid Predicate</em>'.
   * @see com.raptor.mcloottable.mcloot.FluidPredicate
   * @generated
   */
  EClass getFluidPredicate();

  /**
   * Returns the meta object for the attribute '{@link com.raptor.mcloottable.mcloot.FluidPredicate#getTag <em>Tag</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Tag</em>'.
   * @see com.raptor.mcloottable.mcloot.FluidPredicate#getTag()
   * @see #getFluidPredicate()
   * @generated
   */
  EAttribute getFluidPredicate_Tag();

  /**
   * Returns the meta object for the attribute '{@link com.raptor.mcloottable.mcloot.FluidPredicate#getFluid <em>Fluid</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Fluid</em>'.
   * @see com.raptor.mcloottable.mcloot.FluidPredicate#getFluid()
   * @see #getFluidPredicate()
   * @generated
   */
  EAttribute getFluidPredicate_Fluid();

  /**
   * Returns the meta object for the attribute '{@link com.raptor.mcloottable.mcloot.FluidPredicate#isStateDefined <em>State Defined</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>State Defined</em>'.
   * @see com.raptor.mcloottable.mcloot.FluidPredicate#isStateDefined()
   * @see #getFluidPredicate()
   * @generated
   */
  EAttribute getFluidPredicate_StateDefined();

  /**
   * Returns the meta object for the containment reference list '{@link com.raptor.mcloottable.mcloot.FluidPredicate#getProperties <em>Properties</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Properties</em>'.
   * @see com.raptor.mcloottable.mcloot.FluidPredicate#getProperties()
   * @see #getFluidPredicate()
   * @generated
   */
  EReference getFluidPredicate_Properties();

  /**
   * Returns the meta object for class '{@link com.raptor.mcloottable.mcloot.MCJsonValue <em>MC Json Value</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>MC Json Value</em>'.
   * @see com.raptor.mcloottable.mcloot.MCJsonValue
   * @generated
   */
  EClass getMCJsonValue();

  /**
   * Returns the meta object for class '{@link com.raptor.mcloottable.mcloot.MCJsonObject <em>MC Json Object</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>MC Json Object</em>'.
   * @see com.raptor.mcloottable.mcloot.MCJsonObject
   * @generated
   */
  EClass getMCJsonObject();

  /**
   * Returns the meta object for the containment reference list '{@link com.raptor.mcloottable.mcloot.MCJsonObject#getEntries <em>Entries</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Entries</em>'.
   * @see com.raptor.mcloottable.mcloot.MCJsonObject#getEntries()
   * @see #getMCJsonObject()
   * @generated
   */
  EReference getMCJsonObject_Entries();

  /**
   * Returns the meta object for class '{@link com.raptor.mcloottable.mcloot.MCJsonEntry <em>MC Json Entry</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>MC Json Entry</em>'.
   * @see com.raptor.mcloottable.mcloot.MCJsonEntry
   * @generated
   */
  EClass getMCJsonEntry();

  /**
   * Returns the meta object for the attribute '{@link com.raptor.mcloottable.mcloot.MCJsonEntry#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see com.raptor.mcloottable.mcloot.MCJsonEntry#getName()
   * @see #getMCJsonEntry()
   * @generated
   */
  EAttribute getMCJsonEntry_Name();

  /**
   * Returns the meta object for the containment reference '{@link com.raptor.mcloottable.mcloot.MCJsonEntry#getValue <em>Value</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Value</em>'.
   * @see com.raptor.mcloottable.mcloot.MCJsonEntry#getValue()
   * @see #getMCJsonEntry()
   * @generated
   */
  EReference getMCJsonEntry_Value();

  /**
   * Returns the meta object for class '{@link com.raptor.mcloottable.mcloot.MCJsonArray <em>MC Json Array</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>MC Json Array</em>'.
   * @see com.raptor.mcloottable.mcloot.MCJsonArray
   * @generated
   */
  EClass getMCJsonArray();

  /**
   * Returns the meta object for the containment reference list '{@link com.raptor.mcloottable.mcloot.MCJsonArray#getElements <em>Elements</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Elements</em>'.
   * @see com.raptor.mcloottable.mcloot.MCJsonArray#getElements()
   * @see #getMCJsonArray()
   * @generated
   */
  EReference getMCJsonArray_Elements();

  /**
   * Returns the meta object for class '{@link com.raptor.mcloottable.mcloot.MCJsonString <em>MC Json String</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>MC Json String</em>'.
   * @see com.raptor.mcloottable.mcloot.MCJsonString
   * @generated
   */
  EClass getMCJsonString();

  /**
   * Returns the meta object for the attribute '{@link com.raptor.mcloottable.mcloot.MCJsonString#getValue <em>Value</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Value</em>'.
   * @see com.raptor.mcloottable.mcloot.MCJsonString#getValue()
   * @see #getMCJsonString()
   * @generated
   */
  EAttribute getMCJsonString_Value();

  /**
   * Returns the meta object for class '{@link com.raptor.mcloottable.mcloot.MCJsonNumber <em>MC Json Number</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>MC Json Number</em>'.
   * @see com.raptor.mcloottable.mcloot.MCJsonNumber
   * @generated
   */
  EClass getMCJsonNumber();

  /**
   * Returns the meta object for class '{@link com.raptor.mcloottable.mcloot.MCJsonIntegral <em>MC Json Integral</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>MC Json Integral</em>'.
   * @see com.raptor.mcloottable.mcloot.MCJsonIntegral
   * @generated
   */
  EClass getMCJsonIntegral();

  /**
   * Returns the meta object for the attribute '{@link com.raptor.mcloottable.mcloot.MCJsonIntegral#getValue <em>Value</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Value</em>'.
   * @see com.raptor.mcloottable.mcloot.MCJsonIntegral#getValue()
   * @see #getMCJsonIntegral()
   * @generated
   */
  EAttribute getMCJsonIntegral_Value();

  /**
   * Returns the meta object for class '{@link com.raptor.mcloottable.mcloot.MCJsonFloatingPoint <em>MC Json Floating Point</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>MC Json Floating Point</em>'.
   * @see com.raptor.mcloottable.mcloot.MCJsonFloatingPoint
   * @generated
   */
  EClass getMCJsonFloatingPoint();

  /**
   * Returns the meta object for the attribute '{@link com.raptor.mcloottable.mcloot.MCJsonFloatingPoint#getValue <em>Value</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Value</em>'.
   * @see com.raptor.mcloottable.mcloot.MCJsonFloatingPoint#getValue()
   * @see #getMCJsonFloatingPoint()
   * @generated
   */
  EAttribute getMCJsonFloatingPoint_Value();

  /**
   * Returns the meta object for class '{@link com.raptor.mcloottable.mcloot.MCJsonBoolean <em>MC Json Boolean</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>MC Json Boolean</em>'.
   * @see com.raptor.mcloottable.mcloot.MCJsonBoolean
   * @generated
   */
  EClass getMCJsonBoolean();

  /**
   * Returns the meta object for the attribute '{@link com.raptor.mcloottable.mcloot.MCJsonBoolean#isValue <em>Value</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Value</em>'.
   * @see com.raptor.mcloottable.mcloot.MCJsonBoolean#isValue()
   * @see #getMCJsonBoolean()
   * @generated
   */
  EAttribute getMCJsonBoolean_Value();

  /**
   * Returns the meta object for class '{@link com.raptor.mcloottable.mcloot.MCJsonNull <em>MC Json Null</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>MC Json Null</em>'.
   * @see com.raptor.mcloottable.mcloot.MCJsonNull
   * @generated
   */
  EClass getMCJsonNull();

  /**
   * Returns the meta object for class '{@link com.raptor.mcloottable.mcloot.LongRange <em>Long Range</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Long Range</em>'.
   * @see com.raptor.mcloottable.mcloot.LongRange
   * @generated
   */
  EClass getLongRange();

  /**
   * Returns the meta object for class '{@link com.raptor.mcloottable.mcloot.ExactLongRange <em>Exact Long Range</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Exact Long Range</em>'.
   * @see com.raptor.mcloottable.mcloot.ExactLongRange
   * @generated
   */
  EClass getExactLongRange();

  /**
   * Returns the meta object for the attribute '{@link com.raptor.mcloottable.mcloot.ExactLongRange#getValue <em>Value</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Value</em>'.
   * @see com.raptor.mcloottable.mcloot.ExactLongRange#getValue()
   * @see #getExactLongRange()
   * @generated
   */
  EAttribute getExactLongRange_Value();

  /**
   * Returns the meta object for class '{@link com.raptor.mcloottable.mcloot.NormalLongRange <em>Normal Long Range</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Normal Long Range</em>'.
   * @see com.raptor.mcloottable.mcloot.NormalLongRange
   * @generated
   */
  EClass getNormalLongRange();

  /**
   * Returns the meta object for the attribute '{@link com.raptor.mcloottable.mcloot.NormalLongRange#getMin <em>Min</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Min</em>'.
   * @see com.raptor.mcloottable.mcloot.NormalLongRange#getMin()
   * @see #getNormalLongRange()
   * @generated
   */
  EAttribute getNormalLongRange_Min();

  /**
   * Returns the meta object for the attribute '{@link com.raptor.mcloottable.mcloot.NormalLongRange#getMax <em>Max</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Max</em>'.
   * @see com.raptor.mcloottable.mcloot.NormalLongRange#getMax()
   * @see #getNormalLongRange()
   * @generated
   */
  EAttribute getNormalLongRange_Max();

  /**
   * Returns the meta object for class '{@link com.raptor.mcloottable.mcloot.DoubleRange <em>Double Range</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Double Range</em>'.
   * @see com.raptor.mcloottable.mcloot.DoubleRange
   * @generated
   */
  EClass getDoubleRange();

  /**
   * Returns the meta object for class '{@link com.raptor.mcloottable.mcloot.ExactDoubleRange <em>Exact Double Range</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Exact Double Range</em>'.
   * @see com.raptor.mcloottable.mcloot.ExactDoubleRange
   * @generated
   */
  EClass getExactDoubleRange();

  /**
   * Returns the meta object for the attribute '{@link com.raptor.mcloottable.mcloot.ExactDoubleRange#getValue <em>Value</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Value</em>'.
   * @see com.raptor.mcloottable.mcloot.ExactDoubleRange#getValue()
   * @see #getExactDoubleRange()
   * @generated
   */
  EAttribute getExactDoubleRange_Value();

  /**
   * Returns the meta object for class '{@link com.raptor.mcloottable.mcloot.NormalDoubleRange <em>Normal Double Range</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Normal Double Range</em>'.
   * @see com.raptor.mcloottable.mcloot.NormalDoubleRange
   * @generated
   */
  EClass getNormalDoubleRange();

  /**
   * Returns the meta object for the attribute '{@link com.raptor.mcloottable.mcloot.NormalDoubleRange#getMin <em>Min</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Min</em>'.
   * @see com.raptor.mcloottable.mcloot.NormalDoubleRange#getMin()
   * @see #getNormalDoubleRange()
   * @generated
   */
  EAttribute getNormalDoubleRange_Min();

  /**
   * Returns the meta object for the attribute '{@link com.raptor.mcloottable.mcloot.NormalDoubleRange#getMax <em>Max</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Max</em>'.
   * @see com.raptor.mcloottable.mcloot.NormalDoubleRange#getMax()
   * @see #getNormalDoubleRange()
   * @generated
   */
  EAttribute getNormalDoubleRange_Max();

  /**
   * Returns the meta object for class '{@link com.raptor.mcloottable.mcloot.LootFunctionWithConditions <em>Loot Function With Conditions</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Loot Function With Conditions</em>'.
   * @see com.raptor.mcloottable.mcloot.LootFunctionWithConditions
   * @generated
   */
  EClass getLootFunctionWithConditions();

  /**
   * Returns the meta object for the attribute '{@link com.raptor.mcloottable.mcloot.LootFunctionWithConditions#isConditionsDefined <em>Conditions Defined</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Conditions Defined</em>'.
   * @see com.raptor.mcloottable.mcloot.LootFunctionWithConditions#isConditionsDefined()
   * @see #getLootFunctionWithConditions()
   * @generated
   */
  EAttribute getLootFunctionWithConditions_ConditionsDefined();

  /**
   * Returns the meta object for the containment reference list '{@link com.raptor.mcloottable.mcloot.LootFunctionWithConditions#getConditions <em>Conditions</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Conditions</em>'.
   * @see com.raptor.mcloottable.mcloot.LootFunctionWithConditions#getConditions()
   * @see #getLootFunctionWithConditions()
   * @generated
   */
  EReference getLootFunctionWithConditions_Conditions();

  /**
   * Returns the meta object for the containment reference '{@link com.raptor.mcloottable.mcloot.LootFunctionWithConditions#getFunction <em>Function</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Function</em>'.
   * @see com.raptor.mcloottable.mcloot.LootFunctionWithConditions#getFunction()
   * @see #getLootFunctionWithConditions()
   * @generated
   */
  EReference getLootFunctionWithConditions_Function();

  /**
   * Returns the meta object for class '{@link com.raptor.mcloottable.mcloot.AlternativeLootCondition <em>Alternative Loot Condition</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Alternative Loot Condition</em>'.
   * @see com.raptor.mcloottable.mcloot.AlternativeLootCondition
   * @generated
   */
  EClass getAlternativeLootCondition();

  /**
   * Returns the meta object for the containment reference list '{@link com.raptor.mcloottable.mcloot.AlternativeLootCondition#getAlternatives <em>Alternatives</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Alternatives</em>'.
   * @see com.raptor.mcloottable.mcloot.AlternativeLootCondition#getAlternatives()
   * @see #getAlternativeLootCondition()
   * @generated
   */
  EReference getAlternativeLootCondition_Alternatives();

  /**
   * Returns the meta object for class '{@link com.raptor.mcloottable.mcloot.InvertedLootCondition <em>Inverted Loot Condition</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Inverted Loot Condition</em>'.
   * @see com.raptor.mcloottable.mcloot.InvertedLootCondition
   * @generated
   */
  EClass getInvertedLootCondition();

  /**
   * Returns the meta object for the containment reference '{@link com.raptor.mcloottable.mcloot.InvertedLootCondition#getTerm <em>Term</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Term</em>'.
   * @see com.raptor.mcloottable.mcloot.InvertedLootCondition#getTerm()
   * @see #getInvertedLootCondition()
   * @generated
   */
  EReference getInvertedLootCondition_Term();

  /**
   * Returns the meta object for enum '{@link com.raptor.mcloottable.mcloot.EnumEquipmentSlot <em>Enum Equipment Slot</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for enum '<em>Enum Equipment Slot</em>'.
   * @see com.raptor.mcloottable.mcloot.EnumEquipmentSlot
   * @generated
   */
  EEnum getEnumEquipmentSlot();

  /**
   * Returns the meta object for enum '{@link com.raptor.mcloottable.mcloot.EnumGamemode <em>Enum Gamemode</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for enum '<em>Enum Gamemode</em>'.
   * @see com.raptor.mcloottable.mcloot.EnumGamemode
   * @generated
   */
  EEnum getEnumGamemode();

  /**
   * Returns the meta object for enum '{@link com.raptor.mcloottable.mcloot.EnumLootTableType <em>Enum Loot Table Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for enum '<em>Enum Loot Table Type</em>'.
   * @see com.raptor.mcloottable.mcloot.EnumLootTableType
   * @generated
   */
  EEnum getEnumLootTableType();

  /**
   * Returns the meta object for enum '{@link com.raptor.mcloottable.mcloot.EnumBonusFormula <em>Enum Bonus Formula</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for enum '<em>Enum Bonus Formula</em>'.
   * @see com.raptor.mcloottable.mcloot.EnumBonusFormula
   * @generated
   */
  EEnum getEnumBonusFormula();

  /**
   * Returns the meta object for enum '{@link com.raptor.mcloottable.mcloot.EnumNBTSource <em>Enum NBT Source</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for enum '<em>Enum NBT Source</em>'.
   * @see com.raptor.mcloottable.mcloot.EnumNBTSource
   * @generated
   */
  EEnum getEnumNBTSource();

  /**
   * Returns the meta object for enum '{@link com.raptor.mcloottable.mcloot.EnumAttributeModifierOperation <em>Enum Attribute Modifier Operation</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for enum '<em>Enum Attribute Modifier Operation</em>'.
   * @see com.raptor.mcloottable.mcloot.EnumAttributeModifierOperation
   * @generated
   */
  EEnum getEnumAttributeModifierOperation();

  /**
   * Returns the meta object for enum '{@link com.raptor.mcloottable.mcloot.EnumEntitySource <em>Enum Entity Source</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for enum '<em>Enum Entity Source</em>'.
   * @see com.raptor.mcloottable.mcloot.EnumEntitySource
   * @generated
   */
  EEnum getEnumEntitySource();

  /**
   * Returns the factory that creates the instances of the model.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the factory that creates the instances of the model.
   * @generated
   */
  MclootFactory getMclootFactory();

  /**
   * <!-- begin-user-doc -->
   * Defines literals for the meta objects that represent
   * <ul>
   *   <li>each class,</li>
   *   <li>each feature of each class,</li>
   *   <li>each enum,</li>
   *   <li>and each data type</li>
   * </ul>
   * <!-- end-user-doc -->
   * @generated
   */
  interface Literals
  {
    /**
     * The meta object literal for the '{@link com.raptor.mcloottable.mcloot.impl.LootTableImpl <em>Loot Table</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see com.raptor.mcloottable.mcloot.impl.LootTableImpl
     * @see com.raptor.mcloottable.mcloot.impl.MclootPackageImpl#getLootTable()
     * @generated
     */
    EClass LOOT_TABLE = eINSTANCE.getLootTable();

    /**
     * The meta object literal for the '<em><b>Type Defined</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute LOOT_TABLE__TYPE_DEFINED = eINSTANCE.getLootTable_TypeDefined();

    /**
     * The meta object literal for the '<em><b>Type</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute LOOT_TABLE__TYPE = eINSTANCE.getLootTable_Type();

    /**
     * The meta object literal for the '<em><b>Pools Defined</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute LOOT_TABLE__POOLS_DEFINED = eINSTANCE.getLootTable_PoolsDefined();

    /**
     * The meta object literal for the '<em><b>Pools</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference LOOT_TABLE__POOLS = eINSTANCE.getLootTable_Pools();

    /**
     * The meta object literal for the '{@link com.raptor.mcloottable.mcloot.impl.LootPoolImpl <em>Loot Pool</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see com.raptor.mcloottable.mcloot.impl.LootPoolImpl
     * @see com.raptor.mcloottable.mcloot.impl.MclootPackageImpl#getLootPool()
     * @generated
     */
    EClass LOOT_POOL = eINSTANCE.getLootPool();

    /**
     * The meta object literal for the '<em><b>Conditions Defined</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute LOOT_POOL__CONDITIONS_DEFINED = eINSTANCE.getLootPool_ConditionsDefined();

    /**
     * The meta object literal for the '<em><b>Conditions</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference LOOT_POOL__CONDITIONS = eINSTANCE.getLootPool_Conditions();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute LOOT_POOL__NAME = eINSTANCE.getLootPool_Name();

    /**
     * The meta object literal for the '<em><b>Rolls Defined</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute LOOT_POOL__ROLLS_DEFINED = eINSTANCE.getLootPool_RollsDefined();

    /**
     * The meta object literal for the '<em><b>Rolls</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference LOOT_POOL__ROLLS = eINSTANCE.getLootPool_Rolls();

    /**
     * The meta object literal for the '<em><b>Entries Defined</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute LOOT_POOL__ENTRIES_DEFINED = eINSTANCE.getLootPool_EntriesDefined();

    /**
     * The meta object literal for the '<em><b>Entries</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference LOOT_POOL__ENTRIES = eINSTANCE.getLootPool_Entries();

    /**
     * The meta object literal for the '<em><b>Bonus Rolls Defined</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute LOOT_POOL__BONUS_ROLLS_DEFINED = eINSTANCE.getLootPool_BonusRollsDefined();

    /**
     * The meta object literal for the '<em><b>Bonus Rolls</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference LOOT_POOL__BONUS_ROLLS = eINSTANCE.getLootPool_BonusRolls();

    /**
     * The meta object literal for the '<em><b>Functions Defined</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute LOOT_POOL__FUNCTIONS_DEFINED = eINSTANCE.getLootPool_FunctionsDefined();

    /**
     * The meta object literal for the '<em><b>Functions</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference LOOT_POOL__FUNCTIONS = eINSTANCE.getLootPool_Functions();

    /**
     * The meta object literal for the '{@link com.raptor.mcloottable.mcloot.impl.LootEntryImpl <em>Loot Entry</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see com.raptor.mcloottable.mcloot.impl.LootEntryImpl
     * @see com.raptor.mcloottable.mcloot.impl.MclootPackageImpl#getLootEntry()
     * @generated
     */
    EClass LOOT_ENTRY = eINSTANCE.getLootEntry();

    /**
     * The meta object literal for the '<em><b>Conditions Defined</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute LOOT_ENTRY__CONDITIONS_DEFINED = eINSTANCE.getLootEntry_ConditionsDefined();

    /**
     * The meta object literal for the '<em><b>Conditions</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference LOOT_ENTRY__CONDITIONS = eINSTANCE.getLootEntry_Conditions();

    /**
     * The meta object literal for the '<em><b>Type</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute LOOT_ENTRY__TYPE = eINSTANCE.getLootEntry_Type();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute LOOT_ENTRY__NAME = eINSTANCE.getLootEntry_Name();

    /**
     * The meta object literal for the '<em><b>Quality Defined</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute LOOT_ENTRY__QUALITY_DEFINED = eINSTANCE.getLootEntry_QualityDefined();

    /**
     * The meta object literal for the '<em><b>Quality</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute LOOT_ENTRY__QUALITY = eINSTANCE.getLootEntry_Quality();

    /**
     * The meta object literal for the '<em><b>Expand Defined</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute LOOT_ENTRY__EXPAND_DEFINED = eINSTANCE.getLootEntry_ExpandDefined();

    /**
     * The meta object literal for the '<em><b>Expand</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute LOOT_ENTRY__EXPAND = eINSTANCE.getLootEntry_Expand();

    /**
     * The meta object literal for the '<em><b>Functions Defined</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute LOOT_ENTRY__FUNCTIONS_DEFINED = eINSTANCE.getLootEntry_FunctionsDefined();

    /**
     * The meta object literal for the '<em><b>Functions</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference LOOT_ENTRY__FUNCTIONS = eINSTANCE.getLootEntry_Functions();

    /**
     * The meta object literal for the '<em><b>Children Defined</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute LOOT_ENTRY__CHILDREN_DEFINED = eINSTANCE.getLootEntry_ChildrenDefined();

    /**
     * The meta object literal for the '<em><b>Children</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference LOOT_ENTRY__CHILDREN = eINSTANCE.getLootEntry_Children();

    /**
     * The meta object literal for the '<em><b>Entry Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute LOOT_ENTRY__ENTRY_NAME = eINSTANCE.getLootEntry_EntryName();

    /**
     * The meta object literal for the '<em><b>Weight Defined</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute LOOT_ENTRY__WEIGHT_DEFINED = eINSTANCE.getLootEntry_WeightDefined();

    /**
     * The meta object literal for the '<em><b>Weight</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute LOOT_ENTRY__WEIGHT = eINSTANCE.getLootEntry_Weight();

    /**
     * The meta object literal for the '{@link com.raptor.mcloottable.mcloot.impl.LootFunctionImpl <em>Loot Function</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see com.raptor.mcloottable.mcloot.impl.LootFunctionImpl
     * @see com.raptor.mcloottable.mcloot.impl.MclootPackageImpl#getLootFunction()
     * @generated
     */
    EClass LOOT_FUNCTION = eINSTANCE.getLootFunction();

    /**
     * The meta object literal for the '<em><b>Id</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute LOOT_FUNCTION__ID = eINSTANCE.getLootFunction_Id();

    /**
     * The meta object literal for the '{@link com.raptor.mcloottable.mcloot.impl.ApplyBonusLootFunctionImpl <em>Apply Bonus Loot Function</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see com.raptor.mcloottable.mcloot.impl.ApplyBonusLootFunctionImpl
     * @see com.raptor.mcloottable.mcloot.impl.MclootPackageImpl#getApplyBonusLootFunction()
     * @generated
     */
    EClass APPLY_BONUS_LOOT_FUNCTION = eINSTANCE.getApplyBonusLootFunction();

    /**
     * The meta object literal for the '<em><b>Enchantment</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute APPLY_BONUS_LOOT_FUNCTION__ENCHANTMENT = eINSTANCE.getApplyBonusLootFunction_Enchantment();

    /**
     * The meta object literal for the '<em><b>Formula</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute APPLY_BONUS_LOOT_FUNCTION__FORMULA = eINSTANCE.getApplyBonusLootFunction_Formula();

    /**
     * The meta object literal for the '<em><b>Extra Defined</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute APPLY_BONUS_LOOT_FUNCTION__EXTRA_DEFINED = eINSTANCE.getApplyBonusLootFunction_ExtraDefined();

    /**
     * The meta object literal for the '<em><b>Extra</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute APPLY_BONUS_LOOT_FUNCTION__EXTRA = eINSTANCE.getApplyBonusLootFunction_Extra();

    /**
     * The meta object literal for the '<em><b>Probability Defined</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute APPLY_BONUS_LOOT_FUNCTION__PROBABILITY_DEFINED = eINSTANCE.getApplyBonusLootFunction_ProbabilityDefined();

    /**
     * The meta object literal for the '<em><b>Probability</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute APPLY_BONUS_LOOT_FUNCTION__PROBABILITY = eINSTANCE.getApplyBonusLootFunction_Probability();

    /**
     * The meta object literal for the '<em><b>Bonus Multiplier Defined</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute APPLY_BONUS_LOOT_FUNCTION__BONUS_MULTIPLIER_DEFINED = eINSTANCE.getApplyBonusLootFunction_BonusMultiplierDefined();

    /**
     * The meta object literal for the '<em><b>Bonus Multiplier</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute APPLY_BONUS_LOOT_FUNCTION__BONUS_MULTIPLIER = eINSTANCE.getApplyBonusLootFunction_BonusMultiplier();

    /**
     * The meta object literal for the '{@link com.raptor.mcloottable.mcloot.impl.CopyNameLootFunctionImpl <em>Copy Name Loot Function</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see com.raptor.mcloottable.mcloot.impl.CopyNameLootFunctionImpl
     * @see com.raptor.mcloottable.mcloot.impl.MclootPackageImpl#getCopyNameLootFunction()
     * @generated
     */
    EClass COPY_NAME_LOOT_FUNCTION = eINSTANCE.getCopyNameLootFunction();

    /**
     * The meta object literal for the '<em><b>Source</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute COPY_NAME_LOOT_FUNCTION__SOURCE = eINSTANCE.getCopyNameLootFunction_Source();

    /**
     * The meta object literal for the '{@link com.raptor.mcloottable.mcloot.impl.CopyNBTLootFunctionImpl <em>Copy NBT Loot Function</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see com.raptor.mcloottable.mcloot.impl.CopyNBTLootFunctionImpl
     * @see com.raptor.mcloottable.mcloot.impl.MclootPackageImpl#getCopyNBTLootFunction()
     * @generated
     */
    EClass COPY_NBT_LOOT_FUNCTION = eINSTANCE.getCopyNBTLootFunction();

    /**
     * The meta object literal for the '<em><b>Source</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute COPY_NBT_LOOT_FUNCTION__SOURCE = eINSTANCE.getCopyNBTLootFunction_Source();

    /**
     * The meta object literal for the '<em><b>Ops</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference COPY_NBT_LOOT_FUNCTION__OPS = eINSTANCE.getCopyNBTLootFunction_Ops();

    /**
     * The meta object literal for the '{@link com.raptor.mcloottable.mcloot.impl.NBTOperationImpl <em>NBT Operation</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see com.raptor.mcloottable.mcloot.impl.NBTOperationImpl
     * @see com.raptor.mcloottable.mcloot.impl.MclootPackageImpl#getNBTOperation()
     * @generated
     */
    EClass NBT_OPERATION = eINSTANCE.getNBTOperation();

    /**
     * The meta object literal for the '<em><b>Id</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute NBT_OPERATION__ID = eINSTANCE.getNBTOperation_Id();

    /**
     * The meta object literal for the '<em><b>Source</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute NBT_OPERATION__SOURCE = eINSTANCE.getNBTOperation_Source();

    /**
     * The meta object literal for the '<em><b>Target</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute NBT_OPERATION__TARGET = eINSTANCE.getNBTOperation_Target();

    /**
     * The meta object literal for the '{@link com.raptor.mcloottable.mcloot.impl.AppendNBTOperationImpl <em>Append NBT Operation</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see com.raptor.mcloottable.mcloot.impl.AppendNBTOperationImpl
     * @see com.raptor.mcloottable.mcloot.impl.MclootPackageImpl#getAppendNBTOperation()
     * @generated
     */
    EClass APPEND_NBT_OPERATION = eINSTANCE.getAppendNBTOperation();

    /**
     * The meta object literal for the '{@link com.raptor.mcloottable.mcloot.impl.ReplaceNBTOperationImpl <em>Replace NBT Operation</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see com.raptor.mcloottable.mcloot.impl.ReplaceNBTOperationImpl
     * @see com.raptor.mcloottable.mcloot.impl.MclootPackageImpl#getReplaceNBTOperation()
     * @generated
     */
    EClass REPLACE_NBT_OPERATION = eINSTANCE.getReplaceNBTOperation();

    /**
     * The meta object literal for the '{@link com.raptor.mcloottable.mcloot.impl.MergeNBTOperationImpl <em>Merge NBT Operation</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see com.raptor.mcloottable.mcloot.impl.MergeNBTOperationImpl
     * @see com.raptor.mcloottable.mcloot.impl.MclootPackageImpl#getMergeNBTOperation()
     * @generated
     */
    EClass MERGE_NBT_OPERATION = eINSTANCE.getMergeNBTOperation();

    /**
     * The meta object literal for the '{@link com.raptor.mcloottable.mcloot.impl.CopyStateLootFunctionImpl <em>Copy State Loot Function</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see com.raptor.mcloottable.mcloot.impl.CopyStateLootFunctionImpl
     * @see com.raptor.mcloottable.mcloot.impl.MclootPackageImpl#getCopyStateLootFunction()
     * @generated
     */
    EClass COPY_STATE_LOOT_FUNCTION = eINSTANCE.getCopyStateLootFunction();

    /**
     * The meta object literal for the '<em><b>Block</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute COPY_STATE_LOOT_FUNCTION__BLOCK = eINSTANCE.getCopyStateLootFunction_Block();

    /**
     * The meta object literal for the '<em><b>Properties</b></em>' attribute list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute COPY_STATE_LOOT_FUNCTION__PROPERTIES = eINSTANCE.getCopyStateLootFunction_Properties();

    /**
     * The meta object literal for the '{@link com.raptor.mcloottable.mcloot.impl.EnchantRandomlyLootFunctionImpl <em>Enchant Randomly Loot Function</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see com.raptor.mcloottable.mcloot.impl.EnchantRandomlyLootFunctionImpl
     * @see com.raptor.mcloottable.mcloot.impl.MclootPackageImpl#getEnchantRandomlyLootFunction()
     * @generated
     */
    EClass ENCHANT_RANDOMLY_LOOT_FUNCTION = eINSTANCE.getEnchantRandomlyLootFunction();

    /**
     * The meta object literal for the '<em><b>Enchantments</b></em>' attribute list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute ENCHANT_RANDOMLY_LOOT_FUNCTION__ENCHANTMENTS = eINSTANCE.getEnchantRandomlyLootFunction_Enchantments();

    /**
     * The meta object literal for the '{@link com.raptor.mcloottable.mcloot.impl.EnchantWithLevelsLootFunctionImpl <em>Enchant With Levels Loot Function</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see com.raptor.mcloottable.mcloot.impl.EnchantWithLevelsLootFunctionImpl
     * @see com.raptor.mcloottable.mcloot.impl.MclootPackageImpl#getEnchantWithLevelsLootFunction()
     * @generated
     */
    EClass ENCHANT_WITH_LEVELS_LOOT_FUNCTION = eINSTANCE.getEnchantWithLevelsLootFunction();

    /**
     * The meta object literal for the '<em><b>Treasure Defined</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute ENCHANT_WITH_LEVELS_LOOT_FUNCTION__TREASURE_DEFINED = eINSTANCE.getEnchantWithLevelsLootFunction_TreasureDefined();

    /**
     * The meta object literal for the '<em><b>Treasure</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute ENCHANT_WITH_LEVELS_LOOT_FUNCTION__TREASURE = eINSTANCE.getEnchantWithLevelsLootFunction_Treasure();

    /**
     * The meta object literal for the '<em><b>Levels</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ENCHANT_WITH_LEVELS_LOOT_FUNCTION__LEVELS = eINSTANCE.getEnchantWithLevelsLootFunction_Levels();

    /**
     * The meta object literal for the '{@link com.raptor.mcloottable.mcloot.impl.ExplorationMapLootFunctionImpl <em>Exploration Map Loot Function</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see com.raptor.mcloottable.mcloot.impl.ExplorationMapLootFunctionImpl
     * @see com.raptor.mcloottable.mcloot.impl.MclootPackageImpl#getExplorationMapLootFunction()
     * @generated
     */
    EClass EXPLORATION_MAP_LOOT_FUNCTION = eINSTANCE.getExplorationMapLootFunction();

    /**
     * The meta object literal for the '<em><b>Destination</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute EXPLORATION_MAP_LOOT_FUNCTION__DESTINATION = eINSTANCE.getExplorationMapLootFunction_Destination();

    /**
     * The meta object literal for the '<em><b>Decoration</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute EXPLORATION_MAP_LOOT_FUNCTION__DECORATION = eINSTANCE.getExplorationMapLootFunction_Decoration();

    /**
     * The meta object literal for the '<em><b>Zoom Defined</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute EXPLORATION_MAP_LOOT_FUNCTION__ZOOM_DEFINED = eINSTANCE.getExplorationMapLootFunction_ZoomDefined();

    /**
     * The meta object literal for the '<em><b>Zoom</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute EXPLORATION_MAP_LOOT_FUNCTION__ZOOM = eINSTANCE.getExplorationMapLootFunction_Zoom();

    /**
     * The meta object literal for the '<em><b>Search Radius Defined</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute EXPLORATION_MAP_LOOT_FUNCTION__SEARCH_RADIUS_DEFINED = eINSTANCE.getExplorationMapLootFunction_SearchRadiusDefined();

    /**
     * The meta object literal for the '<em><b>Search Radius</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute EXPLORATION_MAP_LOOT_FUNCTION__SEARCH_RADIUS = eINSTANCE.getExplorationMapLootFunction_SearchRadius();

    /**
     * The meta object literal for the '<em><b>Skip Existing Chunks Defined</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute EXPLORATION_MAP_LOOT_FUNCTION__SKIP_EXISTING_CHUNKS_DEFINED = eINSTANCE.getExplorationMapLootFunction_SkipExistingChunksDefined();

    /**
     * The meta object literal for the '<em><b>Skip Existing Chunks</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute EXPLORATION_MAP_LOOT_FUNCTION__SKIP_EXISTING_CHUNKS = eINSTANCE.getExplorationMapLootFunction_SkipExistingChunks();

    /**
     * The meta object literal for the '{@link com.raptor.mcloottable.mcloot.impl.ExplosionDecayLootFunctionImpl <em>Explosion Decay Loot Function</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see com.raptor.mcloottable.mcloot.impl.ExplosionDecayLootFunctionImpl
     * @see com.raptor.mcloottable.mcloot.impl.MclootPackageImpl#getExplosionDecayLootFunction()
     * @generated
     */
    EClass EXPLOSION_DECAY_LOOT_FUNCTION = eINSTANCE.getExplosionDecayLootFunction();

    /**
     * The meta object literal for the '{@link com.raptor.mcloottable.mcloot.impl.FurnaceSmeltLootFunctionImpl <em>Furnace Smelt Loot Function</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see com.raptor.mcloottable.mcloot.impl.FurnaceSmeltLootFunctionImpl
     * @see com.raptor.mcloottable.mcloot.impl.MclootPackageImpl#getFurnaceSmeltLootFunction()
     * @generated
     */
    EClass FURNACE_SMELT_LOOT_FUNCTION = eINSTANCE.getFurnaceSmeltLootFunction();

    /**
     * The meta object literal for the '{@link com.raptor.mcloottable.mcloot.impl.FillPlayerHeadLootFunctionImpl <em>Fill Player Head Loot Function</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see com.raptor.mcloottable.mcloot.impl.FillPlayerHeadLootFunctionImpl
     * @see com.raptor.mcloottable.mcloot.impl.MclootPackageImpl#getFillPlayerHeadLootFunction()
     * @generated
     */
    EClass FILL_PLAYER_HEAD_LOOT_FUNCTION = eINSTANCE.getFillPlayerHeadLootFunction();

    /**
     * The meta object literal for the '<em><b>Entity</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute FILL_PLAYER_HEAD_LOOT_FUNCTION__ENTITY = eINSTANCE.getFillPlayerHeadLootFunction_Entity();

    /**
     * The meta object literal for the '{@link com.raptor.mcloottable.mcloot.impl.LimitCountLootFunctionImpl <em>Limit Count Loot Function</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see com.raptor.mcloottable.mcloot.impl.LimitCountLootFunctionImpl
     * @see com.raptor.mcloottable.mcloot.impl.MclootPackageImpl#getLimitCountLootFunction()
     * @generated
     */
    EClass LIMIT_COUNT_LOOT_FUNCTION = eINSTANCE.getLimitCountLootFunction();

    /**
     * The meta object literal for the '<em><b>Limit</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference LIMIT_COUNT_LOOT_FUNCTION__LIMIT = eINSTANCE.getLimitCountLootFunction_Limit();

    /**
     * The meta object literal for the '{@link com.raptor.mcloottable.mcloot.impl.LootingEnchantLootFunctionImpl <em>Looting Enchant Loot Function</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see com.raptor.mcloottable.mcloot.impl.LootingEnchantLootFunctionImpl
     * @see com.raptor.mcloottable.mcloot.impl.MclootPackageImpl#getLootingEnchantLootFunction()
     * @generated
     */
    EClass LOOTING_ENCHANT_LOOT_FUNCTION = eINSTANCE.getLootingEnchantLootFunction();

    /**
     * The meta object literal for the '<em><b>Limit Defined</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute LOOTING_ENCHANT_LOOT_FUNCTION__LIMIT_DEFINED = eINSTANCE.getLootingEnchantLootFunction_LimitDefined();

    /**
     * The meta object literal for the '<em><b>Limit</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute LOOTING_ENCHANT_LOOT_FUNCTION__LIMIT = eINSTANCE.getLootingEnchantLootFunction_Limit();

    /**
     * The meta object literal for the '<em><b>Count</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference LOOTING_ENCHANT_LOOT_FUNCTION__COUNT = eINSTANCE.getLootingEnchantLootFunction_Count();

    /**
     * The meta object literal for the '{@link com.raptor.mcloottable.mcloot.impl.SetAttributesLootFunctionImpl <em>Set Attributes Loot Function</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see com.raptor.mcloottable.mcloot.impl.SetAttributesLootFunctionImpl
     * @see com.raptor.mcloottable.mcloot.impl.MclootPackageImpl#getSetAttributesLootFunction()
     * @generated
     */
    EClass SET_ATTRIBUTES_LOOT_FUNCTION = eINSTANCE.getSetAttributesLootFunction();

    /**
     * The meta object literal for the '<em><b>Modifiers</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference SET_ATTRIBUTES_LOOT_FUNCTION__MODIFIERS = eINSTANCE.getSetAttributesLootFunction_Modifiers();

    /**
     * The meta object literal for the '{@link com.raptor.mcloottable.mcloot.impl.AttributeModifierImpl <em>Attribute Modifier</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see com.raptor.mcloottable.mcloot.impl.AttributeModifierImpl
     * @see com.raptor.mcloottable.mcloot.impl.MclootPackageImpl#getAttributeModifier()
     * @generated
     */
    EClass ATTRIBUTE_MODIFIER = eINSTANCE.getAttributeModifier();

    /**
     * The meta object literal for the '<em><b>Id</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute ATTRIBUTE_MODIFIER__ID = eINSTANCE.getAttributeModifier_Id();

    /**
     * The meta object literal for the '<em><b>Operation</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute ATTRIBUTE_MODIFIER__OPERATION = eINSTANCE.getAttributeModifier_Operation();

    /**
     * The meta object literal for the '<em><b>Amount</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ATTRIBUTE_MODIFIER__AMOUNT = eINSTANCE.getAttributeModifier_Amount();

    /**
     * The meta object literal for the '<em><b>Attribute Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute ATTRIBUTE_MODIFIER__ATTRIBUTE_NAME = eINSTANCE.getAttributeModifier_AttributeName();

    /**
     * The meta object literal for the '<em><b>Uuid</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute ATTRIBUTE_MODIFIER__UUID = eINSTANCE.getAttributeModifier_Uuid();

    /**
     * The meta object literal for the '<em><b>Slot Defined</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute ATTRIBUTE_MODIFIER__SLOT_DEFINED = eINSTANCE.getAttributeModifier_SlotDefined();

    /**
     * The meta object literal for the '<em><b>Single Slot</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute ATTRIBUTE_MODIFIER__SINGLE_SLOT = eINSTANCE.getAttributeModifier_SingleSlot();

    /**
     * The meta object literal for the '<em><b>Slots</b></em>' attribute list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute ATTRIBUTE_MODIFIER__SLOTS = eINSTANCE.getAttributeModifier_Slots();

    /**
     * The meta object literal for the '{@link com.raptor.mcloottable.mcloot.impl.SetContentsLootFunctionImpl <em>Set Contents Loot Function</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see com.raptor.mcloottable.mcloot.impl.SetContentsLootFunctionImpl
     * @see com.raptor.mcloottable.mcloot.impl.MclootPackageImpl#getSetContentsLootFunction()
     * @generated
     */
    EClass SET_CONTENTS_LOOT_FUNCTION = eINSTANCE.getSetContentsLootFunction();

    /**
     * The meta object literal for the '<em><b>Entries</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference SET_CONTENTS_LOOT_FUNCTION__ENTRIES = eINSTANCE.getSetContentsLootFunction_Entries();

    /**
     * The meta object literal for the '{@link com.raptor.mcloottable.mcloot.impl.SetCountLootFunctionImpl <em>Set Count Loot Function</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see com.raptor.mcloottable.mcloot.impl.SetCountLootFunctionImpl
     * @see com.raptor.mcloottable.mcloot.impl.MclootPackageImpl#getSetCountLootFunction()
     * @generated
     */
    EClass SET_COUNT_LOOT_FUNCTION = eINSTANCE.getSetCountLootFunction();

    /**
     * The meta object literal for the '<em><b>Count</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference SET_COUNT_LOOT_FUNCTION__COUNT = eINSTANCE.getSetCountLootFunction_Count();

    /**
     * The meta object literal for the '{@link com.raptor.mcloottable.mcloot.impl.CountImpl <em>Count</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see com.raptor.mcloottable.mcloot.impl.CountImpl
     * @see com.raptor.mcloottable.mcloot.impl.MclootPackageImpl#getCount()
     * @generated
     */
    EClass COUNT = eINSTANCE.getCount();

    /**
     * The meta object literal for the '{@link com.raptor.mcloottable.mcloot.impl.ExactCountImpl <em>Exact Count</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see com.raptor.mcloottable.mcloot.impl.ExactCountImpl
     * @see com.raptor.mcloottable.mcloot.impl.MclootPackageImpl#getExactCount()
     * @generated
     */
    EClass EXACT_COUNT = eINSTANCE.getExactCount();

    /**
     * The meta object literal for the '<em><b>Amount</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute EXACT_COUNT__AMOUNT = eINSTANCE.getExactCount_Amount();

    /**
     * The meta object literal for the '{@link com.raptor.mcloottable.mcloot.impl.SpecialCountImpl <em>Special Count</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see com.raptor.mcloottable.mcloot.impl.SpecialCountImpl
     * @see com.raptor.mcloottable.mcloot.impl.MclootPackageImpl#getSpecialCount()
     * @generated
     */
    EClass SPECIAL_COUNT = eINSTANCE.getSpecialCount();

    /**
     * The meta object literal for the '{@link com.raptor.mcloottable.mcloot.impl.UniformCountImpl <em>Uniform Count</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see com.raptor.mcloottable.mcloot.impl.UniformCountImpl
     * @see com.raptor.mcloottable.mcloot.impl.MclootPackageImpl#getUniformCount()
     * @generated
     */
    EClass UNIFORM_COUNT = eINSTANCE.getUniformCount();

    /**
     * The meta object literal for the '<em><b>Min</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute UNIFORM_COUNT__MIN = eINSTANCE.getUniformCount_Min();

    /**
     * The meta object literal for the '<em><b>Max</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute UNIFORM_COUNT__MAX = eINSTANCE.getUniformCount_Max();

    /**
     * The meta object literal for the '{@link com.raptor.mcloottable.mcloot.impl.BinomialCountImpl <em>Binomial Count</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see com.raptor.mcloottable.mcloot.impl.BinomialCountImpl
     * @see com.raptor.mcloottable.mcloot.impl.MclootPackageImpl#getBinomialCount()
     * @generated
     */
    EClass BINOMIAL_COUNT = eINSTANCE.getBinomialCount();

    /**
     * The meta object literal for the '<em><b>N</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute BINOMIAL_COUNT__N = eINSTANCE.getBinomialCount_N();

    /**
     * The meta object literal for the '<em><b>P</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute BINOMIAL_COUNT__P = eINSTANCE.getBinomialCount_P();

    /**
     * The meta object literal for the '{@link com.raptor.mcloottable.mcloot.impl.SetDamageLootFunctionImpl <em>Set Damage Loot Function</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see com.raptor.mcloottable.mcloot.impl.SetDamageLootFunctionImpl
     * @see com.raptor.mcloottable.mcloot.impl.MclootPackageImpl#getSetDamageLootFunction()
     * @generated
     */
    EClass SET_DAMAGE_LOOT_FUNCTION = eINSTANCE.getSetDamageLootFunction();

    /**
     * The meta object literal for the '<em><b>Damage</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference SET_DAMAGE_LOOT_FUNCTION__DAMAGE = eINSTANCE.getSetDamageLootFunction_Damage();

    /**
     * The meta object literal for the '{@link com.raptor.mcloottable.mcloot.impl.SetLoreLootFunctionImpl <em>Set Lore Loot Function</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see com.raptor.mcloottable.mcloot.impl.SetLoreLootFunctionImpl
     * @see com.raptor.mcloottable.mcloot.impl.MclootPackageImpl#getSetLoreLootFunction()
     * @generated
     */
    EClass SET_LORE_LOOT_FUNCTION = eINSTANCE.getSetLoreLootFunction();

    /**
     * The meta object literal for the '<em><b>Replace Defined</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute SET_LORE_LOOT_FUNCTION__REPLACE_DEFINED = eINSTANCE.getSetLoreLootFunction_ReplaceDefined();

    /**
     * The meta object literal for the '<em><b>Replace</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute SET_LORE_LOOT_FUNCTION__REPLACE = eINSTANCE.getSetLoreLootFunction_Replace();

    /**
     * The meta object literal for the '<em><b>Entity</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute SET_LORE_LOOT_FUNCTION__ENTITY = eINSTANCE.getSetLoreLootFunction_Entity();

    /**
     * The meta object literal for the '<em><b>Lore</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference SET_LORE_LOOT_FUNCTION__LORE = eINSTANCE.getSetLoreLootFunction_Lore();

    /**
     * The meta object literal for the '{@link com.raptor.mcloottable.mcloot.impl.SetNameLootFunctionImpl <em>Set Name Loot Function</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see com.raptor.mcloottable.mcloot.impl.SetNameLootFunctionImpl
     * @see com.raptor.mcloottable.mcloot.impl.MclootPackageImpl#getSetNameLootFunction()
     * @generated
     */
    EClass SET_NAME_LOOT_FUNCTION = eINSTANCE.getSetNameLootFunction();

    /**
     * The meta object literal for the '<em><b>Entity</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute SET_NAME_LOOT_FUNCTION__ENTITY = eINSTANCE.getSetNameLootFunction_Entity();

    /**
     * The meta object literal for the '<em><b>Item Name</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference SET_NAME_LOOT_FUNCTION__ITEM_NAME = eINSTANCE.getSetNameLootFunction_ItemName();

    /**
     * The meta object literal for the '{@link com.raptor.mcloottable.mcloot.impl.SetNBTLootFunctionImpl <em>Set NBT Loot Function</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see com.raptor.mcloottable.mcloot.impl.SetNBTLootFunctionImpl
     * @see com.raptor.mcloottable.mcloot.impl.MclootPackageImpl#getSetNBTLootFunction()
     * @generated
     */
    EClass SET_NBT_LOOT_FUNCTION = eINSTANCE.getSetNBTLootFunction();

    /**
     * The meta object literal for the '<em><b>Tag</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute SET_NBT_LOOT_FUNCTION__TAG = eINSTANCE.getSetNBTLootFunction_Tag();

    /**
     * The meta object literal for the '{@link com.raptor.mcloottable.mcloot.impl.SetStewEffectLootFunctionImpl <em>Set Stew Effect Loot Function</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see com.raptor.mcloottable.mcloot.impl.SetStewEffectLootFunctionImpl
     * @see com.raptor.mcloottable.mcloot.impl.MclootPackageImpl#getSetStewEffectLootFunction()
     * @generated
     */
    EClass SET_STEW_EFFECT_LOOT_FUNCTION = eINSTANCE.getSetStewEffectLootFunction();

    /**
     * The meta object literal for the '<em><b>Effects</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference SET_STEW_EFFECT_LOOT_FUNCTION__EFFECTS = eINSTANCE.getSetStewEffectLootFunction_Effects();

    /**
     * The meta object literal for the '{@link com.raptor.mcloottable.mcloot.impl.StewEffectImpl <em>Stew Effect</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see com.raptor.mcloottable.mcloot.impl.StewEffectImpl
     * @see com.raptor.mcloottable.mcloot.impl.MclootPackageImpl#getStewEffect()
     * @generated
     */
    EClass STEW_EFFECT = eINSTANCE.getStewEffect();

    /**
     * The meta object literal for the '<em><b>Type</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute STEW_EFFECT__TYPE = eINSTANCE.getStewEffect_Type();

    /**
     * The meta object literal for the '<em><b>Duration</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute STEW_EFFECT__DURATION = eINSTANCE.getStewEffect_Duration();

    /**
     * The meta object literal for the '{@link com.raptor.mcloottable.mcloot.impl.LootConditionImpl <em>Loot Condition</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see com.raptor.mcloottable.mcloot.impl.LootConditionImpl
     * @see com.raptor.mcloottable.mcloot.impl.MclootPackageImpl#getLootCondition()
     * @generated
     */
    EClass LOOT_CONDITION = eINSTANCE.getLootCondition();

    /**
     * The meta object literal for the '{@link com.raptor.mcloottable.mcloot.impl.NamedLootConditionImpl <em>Named Loot Condition</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see com.raptor.mcloottable.mcloot.impl.NamedLootConditionImpl
     * @see com.raptor.mcloottable.mcloot.impl.MclootPackageImpl#getNamedLootCondition()
     * @generated
     */
    EClass NAMED_LOOT_CONDITION = eINSTANCE.getNamedLootCondition();

    /**
     * The meta object literal for the '<em><b>Id</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute NAMED_LOOT_CONDITION__ID = eINSTANCE.getNamedLootCondition_Id();

    /**
     * The meta object literal for the '{@link com.raptor.mcloottable.mcloot.impl.BlockStatePropertiesLootConditionImpl <em>Block State Properties Loot Condition</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see com.raptor.mcloottable.mcloot.impl.BlockStatePropertiesLootConditionImpl
     * @see com.raptor.mcloottable.mcloot.impl.MclootPackageImpl#getBlockStatePropertiesLootCondition()
     * @generated
     */
    EClass BLOCK_STATE_PROPERTIES_LOOT_CONDITION = eINSTANCE.getBlockStatePropertiesLootCondition();

    /**
     * The meta object literal for the '<em><b>Inverted</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute BLOCK_STATE_PROPERTIES_LOOT_CONDITION__INVERTED = eINSTANCE.getBlockStatePropertiesLootCondition_Inverted();

    /**
     * The meta object literal for the '<em><b>Block</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute BLOCK_STATE_PROPERTIES_LOOT_CONDITION__BLOCK = eINSTANCE.getBlockStatePropertiesLootCondition_Block();

    /**
     * The meta object literal for the '<em><b>Properties</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference BLOCK_STATE_PROPERTIES_LOOT_CONDITION__PROPERTIES = eINSTANCE.getBlockStatePropertiesLootCondition_Properties();

    /**
     * The meta object literal for the '{@link com.raptor.mcloottable.mcloot.impl.BlockStatePropertyImpl <em>Block State Property</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see com.raptor.mcloottable.mcloot.impl.BlockStatePropertyImpl
     * @see com.raptor.mcloottable.mcloot.impl.MclootPackageImpl#getBlockStateProperty()
     * @generated
     */
    EClass BLOCK_STATE_PROPERTY = eINSTANCE.getBlockStateProperty();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute BLOCK_STATE_PROPERTY__NAME = eINSTANCE.getBlockStateProperty_Name();

    /**
     * The meta object literal for the '<em><b>Value</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute BLOCK_STATE_PROPERTY__VALUE = eINSTANCE.getBlockStateProperty_Value();

    /**
     * The meta object literal for the '{@link com.raptor.mcloottable.mcloot.impl.DamageSourcePropertiesLootConditionImpl <em>Damage Source Properties Loot Condition</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see com.raptor.mcloottable.mcloot.impl.DamageSourcePropertiesLootConditionImpl
     * @see com.raptor.mcloottable.mcloot.impl.MclootPackageImpl#getDamageSourcePropertiesLootCondition()
     * @generated
     */
    EClass DAMAGE_SOURCE_PROPERTIES_LOOT_CONDITION = eINSTANCE.getDamageSourcePropertiesLootCondition();

    /**
     * The meta object literal for the '<em><b>Bypasses Armor Defined</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute DAMAGE_SOURCE_PROPERTIES_LOOT_CONDITION__BYPASSES_ARMOR_DEFINED = eINSTANCE.getDamageSourcePropertiesLootCondition_BypassesArmorDefined();

    /**
     * The meta object literal for the '<em><b>Bypasses Armor</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute DAMAGE_SOURCE_PROPERTIES_LOOT_CONDITION__BYPASSES_ARMOR = eINSTANCE.getDamageSourcePropertiesLootCondition_BypassesArmor();

    /**
     * The meta object literal for the '<em><b>Bypasses Invulnerability Defined</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute DAMAGE_SOURCE_PROPERTIES_LOOT_CONDITION__BYPASSES_INVULNERABILITY_DEFINED = eINSTANCE.getDamageSourcePropertiesLootCondition_BypassesInvulnerabilityDefined();

    /**
     * The meta object literal for the '<em><b>Bypasses Invulnerability</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute DAMAGE_SOURCE_PROPERTIES_LOOT_CONDITION__BYPASSES_INVULNERABILITY = eINSTANCE.getDamageSourcePropertiesLootCondition_BypassesInvulnerability();

    /**
     * The meta object literal for the '<em><b>Bypasses Magic Defined</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute DAMAGE_SOURCE_PROPERTIES_LOOT_CONDITION__BYPASSES_MAGIC_DEFINED = eINSTANCE.getDamageSourcePropertiesLootCondition_BypassesMagicDefined();

    /**
     * The meta object literal for the '<em><b>Bypasses Magic</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute DAMAGE_SOURCE_PROPERTIES_LOOT_CONDITION__BYPASSES_MAGIC = eINSTANCE.getDamageSourcePropertiesLootCondition_BypassesMagic();

    /**
     * The meta object literal for the '<em><b>Direct Entity</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference DAMAGE_SOURCE_PROPERTIES_LOOT_CONDITION__DIRECT_ENTITY = eINSTANCE.getDamageSourcePropertiesLootCondition_DirectEntity();

    /**
     * The meta object literal for the '<em><b>Explosion Defined</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute DAMAGE_SOURCE_PROPERTIES_LOOT_CONDITION__EXPLOSION_DEFINED = eINSTANCE.getDamageSourcePropertiesLootCondition_ExplosionDefined();

    /**
     * The meta object literal for the '<em><b>Explosion</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute DAMAGE_SOURCE_PROPERTIES_LOOT_CONDITION__EXPLOSION = eINSTANCE.getDamageSourcePropertiesLootCondition_Explosion();

    /**
     * The meta object literal for the '<em><b>Fire Defined</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute DAMAGE_SOURCE_PROPERTIES_LOOT_CONDITION__FIRE_DEFINED = eINSTANCE.getDamageSourcePropertiesLootCondition_FireDefined();

    /**
     * The meta object literal for the '<em><b>Fire</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute DAMAGE_SOURCE_PROPERTIES_LOOT_CONDITION__FIRE = eINSTANCE.getDamageSourcePropertiesLootCondition_Fire();

    /**
     * The meta object literal for the '<em><b>Magic Defined</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute DAMAGE_SOURCE_PROPERTIES_LOOT_CONDITION__MAGIC_DEFINED = eINSTANCE.getDamageSourcePropertiesLootCondition_MagicDefined();

    /**
     * The meta object literal for the '<em><b>Magic</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute DAMAGE_SOURCE_PROPERTIES_LOOT_CONDITION__MAGIC = eINSTANCE.getDamageSourcePropertiesLootCondition_Magic();

    /**
     * The meta object literal for the '<em><b>Projectile Defined</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute DAMAGE_SOURCE_PROPERTIES_LOOT_CONDITION__PROJECTILE_DEFINED = eINSTANCE.getDamageSourcePropertiesLootCondition_ProjectileDefined();

    /**
     * The meta object literal for the '<em><b>Projectile</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute DAMAGE_SOURCE_PROPERTIES_LOOT_CONDITION__PROJECTILE = eINSTANCE.getDamageSourcePropertiesLootCondition_Projectile();

    /**
     * The meta object literal for the '<em><b>Lightning Defined</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute DAMAGE_SOURCE_PROPERTIES_LOOT_CONDITION__LIGHTNING_DEFINED = eINSTANCE.getDamageSourcePropertiesLootCondition_LightningDefined();

    /**
     * The meta object literal for the '<em><b>Lightning</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute DAMAGE_SOURCE_PROPERTIES_LOOT_CONDITION__LIGHTNING = eINSTANCE.getDamageSourcePropertiesLootCondition_Lightning();

    /**
     * The meta object literal for the '<em><b>Source Entity</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference DAMAGE_SOURCE_PROPERTIES_LOOT_CONDITION__SOURCE_ENTITY = eINSTANCE.getDamageSourcePropertiesLootCondition_SourceEntity();

    /**
     * The meta object literal for the '{@link com.raptor.mcloottable.mcloot.impl.EntityPropertiesLootConditionImpl <em>Entity Properties Loot Condition</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see com.raptor.mcloottable.mcloot.impl.EntityPropertiesLootConditionImpl
     * @see com.raptor.mcloottable.mcloot.impl.MclootPackageImpl#getEntityPropertiesLootCondition()
     * @generated
     */
    EClass ENTITY_PROPERTIES_LOOT_CONDITION = eINSTANCE.getEntityPropertiesLootCondition();

    /**
     * The meta object literal for the '<em><b>Entity</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute ENTITY_PROPERTIES_LOOT_CONDITION__ENTITY = eINSTANCE.getEntityPropertiesLootCondition_Entity();

    /**
     * The meta object literal for the '<em><b>Predicate</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ENTITY_PROPERTIES_LOOT_CONDITION__PREDICATE = eINSTANCE.getEntityPropertiesLootCondition_Predicate();

    /**
     * The meta object literal for the '{@link com.raptor.mcloottable.mcloot.impl.EntityScoresLootConditionImpl <em>Entity Scores Loot Condition</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see com.raptor.mcloottable.mcloot.impl.EntityScoresLootConditionImpl
     * @see com.raptor.mcloottable.mcloot.impl.MclootPackageImpl#getEntityScoresLootCondition()
     * @generated
     */
    EClass ENTITY_SCORES_LOOT_CONDITION = eINSTANCE.getEntityScoresLootCondition();

    /**
     * The meta object literal for the '<em><b>Entity</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute ENTITY_SCORES_LOOT_CONDITION__ENTITY = eINSTANCE.getEntityScoresLootCondition_Entity();

    /**
     * The meta object literal for the '<em><b>Scores</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ENTITY_SCORES_LOOT_CONDITION__SCORES = eINSTANCE.getEntityScoresLootCondition_Scores();

    /**
     * The meta object literal for the '{@link com.raptor.mcloottable.mcloot.impl.EntityScoreImpl <em>Entity Score</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see com.raptor.mcloottable.mcloot.impl.EntityScoreImpl
     * @see com.raptor.mcloottable.mcloot.impl.MclootPackageImpl#getEntityScore()
     * @generated
     */
    EClass ENTITY_SCORE = eINSTANCE.getEntityScore();

    /**
     * The meta object literal for the '<em><b>Objective</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute ENTITY_SCORE__OBJECTIVE = eINSTANCE.getEntityScore_Objective();

    /**
     * The meta object literal for the '<em><b>Score</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ENTITY_SCORE__SCORE = eINSTANCE.getEntityScore_Score();

    /**
     * The meta object literal for the '{@link com.raptor.mcloottable.mcloot.impl.KilledByPlayerLootConditionImpl <em>Killed By Player Loot Condition</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see com.raptor.mcloottable.mcloot.impl.KilledByPlayerLootConditionImpl
     * @see com.raptor.mcloottable.mcloot.impl.MclootPackageImpl#getKilledByPlayerLootCondition()
     * @generated
     */
    EClass KILLED_BY_PLAYER_LOOT_CONDITION = eINSTANCE.getKilledByPlayerLootCondition();

    /**
     * The meta object literal for the '{@link com.raptor.mcloottable.mcloot.impl.LocationCheckLootConditionImpl <em>Location Check Loot Condition</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see com.raptor.mcloottable.mcloot.impl.LocationCheckLootConditionImpl
     * @see com.raptor.mcloottable.mcloot.impl.MclootPackageImpl#getLocationCheckLootCondition()
     * @generated
     */
    EClass LOCATION_CHECK_LOOT_CONDITION = eINSTANCE.getLocationCheckLootCondition();

    /**
     * The meta object literal for the '<em><b>Undefined Offset X</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute LOCATION_CHECK_LOOT_CONDITION__UNDEFINED_OFFSET_X = eINSTANCE.getLocationCheckLootCondition_UndefinedOffsetX();

    /**
     * The meta object literal for the '<em><b>Offset X</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute LOCATION_CHECK_LOOT_CONDITION__OFFSET_X = eINSTANCE.getLocationCheckLootCondition_OffsetX();

    /**
     * The meta object literal for the '<em><b>Undefined Offset Y</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute LOCATION_CHECK_LOOT_CONDITION__UNDEFINED_OFFSET_Y = eINSTANCE.getLocationCheckLootCondition_UndefinedOffsetY();

    /**
     * The meta object literal for the '<em><b>Offset Y</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute LOCATION_CHECK_LOOT_CONDITION__OFFSET_Y = eINSTANCE.getLocationCheckLootCondition_OffsetY();

    /**
     * The meta object literal for the '<em><b>Undefined Offset Z</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute LOCATION_CHECK_LOOT_CONDITION__UNDEFINED_OFFSET_Z = eINSTANCE.getLocationCheckLootCondition_UndefinedOffsetZ();

    /**
     * The meta object literal for the '<em><b>Offset Z</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute LOCATION_CHECK_LOOT_CONDITION__OFFSET_Z = eINSTANCE.getLocationCheckLootCondition_OffsetZ();

    /**
     * The meta object literal for the '<em><b>Predicate</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference LOCATION_CHECK_LOOT_CONDITION__PREDICATE = eINSTANCE.getLocationCheckLootCondition_Predicate();

    /**
     * The meta object literal for the '{@link com.raptor.mcloottable.mcloot.impl.MatchToolLootConditionImpl <em>Match Tool Loot Condition</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see com.raptor.mcloottable.mcloot.impl.MatchToolLootConditionImpl
     * @see com.raptor.mcloottable.mcloot.impl.MclootPackageImpl#getMatchToolLootCondition()
     * @generated
     */
    EClass MATCH_TOOL_LOOT_CONDITION = eINSTANCE.getMatchToolLootCondition();

    /**
     * The meta object literal for the '<em><b>Inverted</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute MATCH_TOOL_LOOT_CONDITION__INVERTED = eINSTANCE.getMatchToolLootCondition_Inverted();

    /**
     * The meta object literal for the '<em><b>Predicate</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference MATCH_TOOL_LOOT_CONDITION__PREDICATE = eINSTANCE.getMatchToolLootCondition_Predicate();

    /**
     * The meta object literal for the '{@link com.raptor.mcloottable.mcloot.impl.RandomChanceLootConditionImpl <em>Random Chance Loot Condition</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see com.raptor.mcloottable.mcloot.impl.RandomChanceLootConditionImpl
     * @see com.raptor.mcloottable.mcloot.impl.MclootPackageImpl#getRandomChanceLootCondition()
     * @generated
     */
    EClass RANDOM_CHANCE_LOOT_CONDITION = eINSTANCE.getRandomChanceLootCondition();

    /**
     * The meta object literal for the '<em><b>Chance</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute RANDOM_CHANCE_LOOT_CONDITION__CHANCE = eINSTANCE.getRandomChanceLootCondition_Chance();

    /**
     * The meta object literal for the '<em><b>Looting Multiplier Defined</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute RANDOM_CHANCE_LOOT_CONDITION__LOOTING_MULTIPLIER_DEFINED = eINSTANCE.getRandomChanceLootCondition_LootingMultiplierDefined();

    /**
     * The meta object literal for the '<em><b>Looting Multiplier</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute RANDOM_CHANCE_LOOT_CONDITION__LOOTING_MULTIPLIER = eINSTANCE.getRandomChanceLootCondition_LootingMultiplier();

    /**
     * The meta object literal for the '{@link com.raptor.mcloottable.mcloot.impl.ReferenceLootConditionImpl <em>Reference Loot Condition</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see com.raptor.mcloottable.mcloot.impl.ReferenceLootConditionImpl
     * @see com.raptor.mcloottable.mcloot.impl.MclootPackageImpl#getReferenceLootCondition()
     * @generated
     */
    EClass REFERENCE_LOOT_CONDITION = eINSTANCE.getReferenceLootCondition();

    /**
     * The meta object literal for the '<em><b>Ref</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute REFERENCE_LOOT_CONDITION__REF = eINSTANCE.getReferenceLootCondition_Ref();

    /**
     * The meta object literal for the '{@link com.raptor.mcloottable.mcloot.impl.SurvivesExplosionLootConditionImpl <em>Survives Explosion Loot Condition</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see com.raptor.mcloottable.mcloot.impl.SurvivesExplosionLootConditionImpl
     * @see com.raptor.mcloottable.mcloot.impl.MclootPackageImpl#getSurvivesExplosionLootCondition()
     * @generated
     */
    EClass SURVIVES_EXPLOSION_LOOT_CONDITION = eINSTANCE.getSurvivesExplosionLootCondition();

    /**
     * The meta object literal for the '{@link com.raptor.mcloottable.mcloot.impl.TableBonusLootConditionImpl <em>Table Bonus Loot Condition</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see com.raptor.mcloottable.mcloot.impl.TableBonusLootConditionImpl
     * @see com.raptor.mcloottable.mcloot.impl.MclootPackageImpl#getTableBonusLootCondition()
     * @generated
     */
    EClass TABLE_BONUS_LOOT_CONDITION = eINSTANCE.getTableBonusLootCondition();

    /**
     * The meta object literal for the '<em><b>Enchantment</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute TABLE_BONUS_LOOT_CONDITION__ENCHANTMENT = eINSTANCE.getTableBonusLootCondition_Enchantment();

    /**
     * The meta object literal for the '<em><b>Chances</b></em>' attribute list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute TABLE_BONUS_LOOT_CONDITION__CHANCES = eINSTANCE.getTableBonusLootCondition_Chances();

    /**
     * The meta object literal for the '{@link com.raptor.mcloottable.mcloot.impl.TimeCheckLootConditionImpl <em>Time Check Loot Condition</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see com.raptor.mcloottable.mcloot.impl.TimeCheckLootConditionImpl
     * @see com.raptor.mcloottable.mcloot.impl.MclootPackageImpl#getTimeCheckLootCondition()
     * @generated
     */
    EClass TIME_CHECK_LOOT_CONDITION = eINSTANCE.getTimeCheckLootCondition();

    /**
     * The meta object literal for the '<em><b>Period Defined</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute TIME_CHECK_LOOT_CONDITION__PERIOD_DEFINED = eINSTANCE.getTimeCheckLootCondition_PeriodDefined();

    /**
     * The meta object literal for the '<em><b>Period</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute TIME_CHECK_LOOT_CONDITION__PERIOD = eINSTANCE.getTimeCheckLootCondition_Period();

    /**
     * The meta object literal for the '<em><b>Inverted</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute TIME_CHECK_LOOT_CONDITION__INVERTED = eINSTANCE.getTimeCheckLootCondition_Inverted();

    /**
     * The meta object literal for the '<em><b>Value</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference TIME_CHECK_LOOT_CONDITION__VALUE = eINSTANCE.getTimeCheckLootCondition_Value();

    /**
     * The meta object literal for the '{@link com.raptor.mcloottable.mcloot.impl.ToolEnchantmentLootConditionImpl <em>Tool Enchantment Loot Condition</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see com.raptor.mcloottable.mcloot.impl.ToolEnchantmentLootConditionImpl
     * @see com.raptor.mcloottable.mcloot.impl.MclootPackageImpl#getToolEnchantmentLootCondition()
     * @generated
     */
    EClass TOOL_ENCHANTMENT_LOOT_CONDITION = eINSTANCE.getToolEnchantmentLootCondition();

    /**
     * The meta object literal for the '<em><b>Enchantments</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference TOOL_ENCHANTMENT_LOOT_CONDITION__ENCHANTMENTS = eINSTANCE.getToolEnchantmentLootCondition_Enchantments();

    /**
     * The meta object literal for the '{@link com.raptor.mcloottable.mcloot.impl.EnchantmentLevelImpl <em>Enchantment Level</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see com.raptor.mcloottable.mcloot.impl.EnchantmentLevelImpl
     * @see com.raptor.mcloottable.mcloot.impl.MclootPackageImpl#getEnchantmentLevel()
     * @generated
     */
    EClass ENCHANTMENT_LEVEL = eINSTANCE.getEnchantmentLevel();

    /**
     * The meta object literal for the '<em><b>Enchantment</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute ENCHANTMENT_LEVEL__ENCHANTMENT = eINSTANCE.getEnchantmentLevel_Enchantment();

    /**
     * The meta object literal for the '<em><b>Levels</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ENCHANTMENT_LEVEL__LEVELS = eINSTANCE.getEnchantmentLevel_Levels();

    /**
     * The meta object literal for the '{@link com.raptor.mcloottable.mcloot.impl.WeatherCheckLootConditionImpl <em>Weather Check Loot Condition</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see com.raptor.mcloottable.mcloot.impl.WeatherCheckLootConditionImpl
     * @see com.raptor.mcloottable.mcloot.impl.MclootPackageImpl#getWeatherCheckLootCondition()
     * @generated
     */
    EClass WEATHER_CHECK_LOOT_CONDITION = eINSTANCE.getWeatherCheckLootCondition();

    /**
     * The meta object literal for the '<em><b>Inverted</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute WEATHER_CHECK_LOOT_CONDITION__INVERTED = eINSTANCE.getWeatherCheckLootCondition_Inverted();

    /**
     * The meta object literal for the '<em><b>Raining</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute WEATHER_CHECK_LOOT_CONDITION__RAINING = eINSTANCE.getWeatherCheckLootCondition_Raining();

    /**
     * The meta object literal for the '<em><b>Thundering</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute WEATHER_CHECK_LOOT_CONDITION__THUNDERING = eINSTANCE.getWeatherCheckLootCondition_Thundering();

    /**
     * The meta object literal for the '{@link com.raptor.mcloottable.mcloot.impl.EntityPredicateImpl <em>Entity Predicate</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see com.raptor.mcloottable.mcloot.impl.EntityPredicateImpl
     * @see com.raptor.mcloottable.mcloot.impl.MclootPackageImpl#getEntityPredicate()
     * @generated
     */
    EClass ENTITY_PREDICATE = eINSTANCE.getEntityPredicate();

    /**
     * The meta object literal for the '<em><b>Absolute Distance</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ENTITY_PREDICATE__ABSOLUTE_DISTANCE = eINSTANCE.getEntityPredicate_AbsoluteDistance();

    /**
     * The meta object literal for the '<em><b>Horizontal Distance</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ENTITY_PREDICATE__HORIZONTAL_DISTANCE = eINSTANCE.getEntityPredicate_HorizontalDistance();

    /**
     * The meta object literal for the '<em><b>XDistance</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ENTITY_PREDICATE__XDISTANCE = eINSTANCE.getEntityPredicate_XDistance();

    /**
     * The meta object literal for the '<em><b>YDistance</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ENTITY_PREDICATE__YDISTANCE = eINSTANCE.getEntityPredicate_YDistance();

    /**
     * The meta object literal for the '<em><b>ZDistance</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ENTITY_PREDICATE__ZDISTANCE = eINSTANCE.getEntityPredicate_ZDistance();

    /**
     * The meta object literal for the '<em><b>Effects Defined</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute ENTITY_PREDICATE__EFFECTS_DEFINED = eINSTANCE.getEntityPredicate_EffectsDefined();

    /**
     * The meta object literal for the '<em><b>Effects</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ENTITY_PREDICATE__EFFECTS = eINSTANCE.getEntityPredicate_Effects();

    /**
     * The meta object literal for the '<em><b>Equipment</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ENTITY_PREDICATE__EQUIPMENT = eINSTANCE.getEntityPredicate_Equipment();

    /**
     * The meta object literal for the '<em><b>Default Equipment</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ENTITY_PREDICATE__DEFAULT_EQUIPMENT = eINSTANCE.getEntityPredicate_DefaultEquipment();

    /**
     * The meta object literal for the '<em><b>Flags</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ENTITY_PREDICATE__FLAGS = eINSTANCE.getEntityPredicate_Flags();

    /**
     * The meta object literal for the '<em><b>Nbt</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute ENTITY_PREDICATE__NBT = eINSTANCE.getEntityPredicate_Nbt();

    /**
     * The meta object literal for the '<em><b>Player</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ENTITY_PREDICATE__PLAYER = eINSTANCE.getEntityPredicate_Player();

    /**
     * The meta object literal for the '<em><b>Team</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute ENTITY_PREDICATE__TEAM = eINSTANCE.getEntityPredicate_Team();

    /**
     * The meta object literal for the '<em><b>Type</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute ENTITY_PREDICATE__TYPE = eINSTANCE.getEntityPredicate_Type();

    /**
     * The meta object literal for the '<em><b>Location</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ENTITY_PREDICATE__LOCATION = eINSTANCE.getEntityPredicate_Location();

    /**
     * The meta object literal for the '<em><b>Fishing Hook</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ENTITY_PREDICATE__FISHING_HOOK = eINSTANCE.getEntityPredicate_FishingHook();

    /**
     * The meta object literal for the '{@link com.raptor.mcloottable.mcloot.impl.FishingHookPredicateImpl <em>Fishing Hook Predicate</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see com.raptor.mcloottable.mcloot.impl.FishingHookPredicateImpl
     * @see com.raptor.mcloottable.mcloot.impl.MclootPackageImpl#getFishingHookPredicate()
     * @generated
     */
    EClass FISHING_HOOK_PREDICATE = eINSTANCE.getFishingHookPredicate();

    /**
     * The meta object literal for the '<em><b>In Open Water Defined</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute FISHING_HOOK_PREDICATE__IN_OPEN_WATER_DEFINED = eINSTANCE.getFishingHookPredicate_InOpenWaterDefined();

    /**
     * The meta object literal for the '<em><b>In Open Water</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute FISHING_HOOK_PREDICATE__IN_OPEN_WATER = eINSTANCE.getFishingHookPredicate_InOpenWater();

    /**
     * The meta object literal for the '{@link com.raptor.mcloottable.mcloot.impl.EffectPredicateImpl <em>Effect Predicate</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see com.raptor.mcloottable.mcloot.impl.EffectPredicateImpl
     * @see com.raptor.mcloottable.mcloot.impl.MclootPackageImpl#getEffectPredicate()
     * @generated
     */
    EClass EFFECT_PREDICATE = eINSTANCE.getEffectPredicate();

    /**
     * The meta object literal for the '<em><b>Id</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute EFFECT_PREDICATE__ID = eINSTANCE.getEffectPredicate_Id();

    /**
     * The meta object literal for the '<em><b>Amplifier</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EFFECT_PREDICATE__AMPLIFIER = eINSTANCE.getEffectPredicate_Amplifier();

    /**
     * The meta object literal for the '<em><b>Duration</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EFFECT_PREDICATE__DURATION = eINSTANCE.getEffectPredicate_Duration();

    /**
     * The meta object literal for the '{@link com.raptor.mcloottable.mcloot.impl.EquipmentPredicateImpl <em>Equipment Predicate</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see com.raptor.mcloottable.mcloot.impl.EquipmentPredicateImpl
     * @see com.raptor.mcloottable.mcloot.impl.MclootPackageImpl#getEquipmentPredicate()
     * @generated
     */
    EClass EQUIPMENT_PREDICATE = eINSTANCE.getEquipmentPredicate();

    /**
     * The meta object literal for the '<em><b>Slots</b></em>' attribute list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute EQUIPMENT_PREDICATE__SLOTS = eINSTANCE.getEquipmentPredicate_Slots();

    /**
     * The meta object literal for the '<em><b>Predicate</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EQUIPMENT_PREDICATE__PREDICATE = eINSTANCE.getEquipmentPredicate_Predicate();

    /**
     * The meta object literal for the '{@link com.raptor.mcloottable.mcloot.impl.EntityFlagsImpl <em>Entity Flags</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see com.raptor.mcloottable.mcloot.impl.EntityFlagsImpl
     * @see com.raptor.mcloottable.mcloot.impl.MclootPackageImpl#getEntityFlags()
     * @generated
     */
    EClass ENTITY_FLAGS = eINSTANCE.getEntityFlags();

    /**
     * The meta object literal for the '<em><b>On Fire Defined</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute ENTITY_FLAGS__ON_FIRE_DEFINED = eINSTANCE.getEntityFlags_OnFireDefined();

    /**
     * The meta object literal for the '<em><b>On Fire</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute ENTITY_FLAGS__ON_FIRE = eINSTANCE.getEntityFlags_OnFire();

    /**
     * The meta object literal for the '<em><b>Sneaking Defined</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute ENTITY_FLAGS__SNEAKING_DEFINED = eINSTANCE.getEntityFlags_SneakingDefined();

    /**
     * The meta object literal for the '<em><b>Sneaking</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute ENTITY_FLAGS__SNEAKING = eINSTANCE.getEntityFlags_Sneaking();

    /**
     * The meta object literal for the '<em><b>Sprinting Defined</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute ENTITY_FLAGS__SPRINTING_DEFINED = eINSTANCE.getEntityFlags_SprintingDefined();

    /**
     * The meta object literal for the '<em><b>Sprinting</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute ENTITY_FLAGS__SPRINTING = eINSTANCE.getEntityFlags_Sprinting();

    /**
     * The meta object literal for the '<em><b>Swimming Defined</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute ENTITY_FLAGS__SWIMMING_DEFINED = eINSTANCE.getEntityFlags_SwimmingDefined();

    /**
     * The meta object literal for the '<em><b>Swimming</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute ENTITY_FLAGS__SWIMMING = eINSTANCE.getEntityFlags_Swimming();

    /**
     * The meta object literal for the '<em><b>Baby Defined</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute ENTITY_FLAGS__BABY_DEFINED = eINSTANCE.getEntityFlags_BabyDefined();

    /**
     * The meta object literal for the '<em><b>Baby</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute ENTITY_FLAGS__BABY = eINSTANCE.getEntityFlags_Baby();

    /**
     * The meta object literal for the '{@link com.raptor.mcloottable.mcloot.impl.PlayerPredicateImpl <em>Player Predicate</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see com.raptor.mcloottable.mcloot.impl.PlayerPredicateImpl
     * @see com.raptor.mcloottable.mcloot.impl.MclootPackageImpl#getPlayerPredicate()
     * @generated
     */
    EClass PLAYER_PREDICATE = eINSTANCE.getPlayerPredicate();

    /**
     * The meta object literal for the '<em><b>Advancements Defined</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute PLAYER_PREDICATE__ADVANCEMENTS_DEFINED = eINSTANCE.getPlayerPredicate_AdvancementsDefined();

    /**
     * The meta object literal for the '<em><b>Advancements</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference PLAYER_PREDICATE__ADVANCEMENTS = eINSTANCE.getPlayerPredicate_Advancements();

    /**
     * The meta object literal for the '<em><b>Gamemode Defined</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute PLAYER_PREDICATE__GAMEMODE_DEFINED = eINSTANCE.getPlayerPredicate_GamemodeDefined();

    /**
     * The meta object literal for the '<em><b>Gamemode</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute PLAYER_PREDICATE__GAMEMODE = eINSTANCE.getPlayerPredicate_Gamemode();

    /**
     * The meta object literal for the '<em><b>Recipes Defined</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute PLAYER_PREDICATE__RECIPES_DEFINED = eINSTANCE.getPlayerPredicate_RecipesDefined();

    /**
     * The meta object literal for the '<em><b>Recipes</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference PLAYER_PREDICATE__RECIPES = eINSTANCE.getPlayerPredicate_Recipes();

    /**
     * The meta object literal for the '<em><b>Stats Defined</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute PLAYER_PREDICATE__STATS_DEFINED = eINSTANCE.getPlayerPredicate_StatsDefined();

    /**
     * The meta object literal for the '<em><b>Stats</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference PLAYER_PREDICATE__STATS = eINSTANCE.getPlayerPredicate_Stats();

    /**
     * The meta object literal for the '{@link com.raptor.mcloottable.mcloot.impl.AdvancementPredicateImpl <em>Advancement Predicate</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see com.raptor.mcloottable.mcloot.impl.AdvancementPredicateImpl
     * @see com.raptor.mcloottable.mcloot.impl.MclootPackageImpl#getAdvancementPredicate()
     * @generated
     */
    EClass ADVANCEMENT_PREDICATE = eINSTANCE.getAdvancementPredicate();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute ADVANCEMENT_PREDICATE__NAME = eINSTANCE.getAdvancementPredicate_Name();

    /**
     * The meta object literal for the '<em><b>Did Not Get</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute ADVANCEMENT_PREDICATE__DID_NOT_GET = eINSTANCE.getAdvancementPredicate_DidNotGet();

    /**
     * The meta object literal for the '<em><b>Criteria</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ADVANCEMENT_PREDICATE__CRITERIA = eINSTANCE.getAdvancementPredicate_Criteria();

    /**
     * The meta object literal for the '{@link com.raptor.mcloottable.mcloot.impl.AdvancementCriteriaImpl <em>Advancement Criteria</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see com.raptor.mcloottable.mcloot.impl.AdvancementCriteriaImpl
     * @see com.raptor.mcloottable.mcloot.impl.MclootPackageImpl#getAdvancementCriteria()
     * @generated
     */
    EClass ADVANCEMENT_CRITERIA = eINSTANCE.getAdvancementCriteria();

    /**
     * The meta object literal for the '<em><b>Criteria Names</b></em>' attribute list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute ADVANCEMENT_CRITERIA__CRITERIA_NAMES = eINSTANCE.getAdvancementCriteria_CriteriaNames();

    /**
     * The meta object literal for the '<em><b>Did Not Get</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute ADVANCEMENT_CRITERIA__DID_NOT_GET = eINSTANCE.getAdvancementCriteria_DidNotGet();

    /**
     * The meta object literal for the '{@link com.raptor.mcloottable.mcloot.impl.RecipePredicateImpl <em>Recipe Predicate</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see com.raptor.mcloottable.mcloot.impl.RecipePredicateImpl
     * @see com.raptor.mcloottable.mcloot.impl.MclootPackageImpl#getRecipePredicate()
     * @generated
     */
    EClass RECIPE_PREDICATE = eINSTANCE.getRecipePredicate();

    /**
     * The meta object literal for the '<em><b>Recipe</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute RECIPE_PREDICATE__RECIPE = eINSTANCE.getRecipePredicate_Recipe();

    /**
     * The meta object literal for the '<em><b>Did Not Get</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute RECIPE_PREDICATE__DID_NOT_GET = eINSTANCE.getRecipePredicate_DidNotGet();

    /**
     * The meta object literal for the '{@link com.raptor.mcloottable.mcloot.impl.StatisticPredicateImpl <em>Statistic Predicate</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see com.raptor.mcloottable.mcloot.impl.StatisticPredicateImpl
     * @see com.raptor.mcloottable.mcloot.impl.MclootPackageImpl#getStatisticPredicate()
     * @generated
     */
    EClass STATISTIC_PREDICATE = eINSTANCE.getStatisticPredicate();

    /**
     * The meta object literal for the '<em><b>Type</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute STATISTIC_PREDICATE__TYPE = eINSTANCE.getStatisticPredicate_Type();

    /**
     * The meta object literal for the '{@link com.raptor.mcloottable.mcloot.impl.SingleStatisticPredicateImpl <em>Single Statistic Predicate</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see com.raptor.mcloottable.mcloot.impl.SingleStatisticPredicateImpl
     * @see com.raptor.mcloottable.mcloot.impl.MclootPackageImpl#getSingleStatisticPredicate()
     * @generated
     */
    EClass SINGLE_STATISTIC_PREDICATE = eINSTANCE.getSingleStatisticPredicate();

    /**
     * The meta object literal for the '<em><b>Stat</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute SINGLE_STATISTIC_PREDICATE__STAT = eINSTANCE.getSingleStatisticPredicate_Stat();

    /**
     * The meta object literal for the '<em><b>Value</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference SINGLE_STATISTIC_PREDICATE__VALUE = eINSTANCE.getSingleStatisticPredicate_Value();

    /**
     * The meta object literal for the '{@link com.raptor.mcloottable.mcloot.impl.NamespacedStatisticPredicateImpl <em>Namespaced Statistic Predicate</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see com.raptor.mcloottable.mcloot.impl.NamespacedStatisticPredicateImpl
     * @see com.raptor.mcloottable.mcloot.impl.MclootPackageImpl#getNamespacedStatisticPredicate()
     * @generated
     */
    EClass NAMESPACED_STATISTIC_PREDICATE = eINSTANCE.getNamespacedStatisticPredicate();

    /**
     * The meta object literal for the '<em><b>Stats</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference NAMESPACED_STATISTIC_PREDICATE__STATS = eINSTANCE.getNamespacedStatisticPredicate_Stats();

    /**
     * The meta object literal for the '{@link com.raptor.mcloottable.mcloot.impl.UnnamespacedStatisticPredicateImpl <em>Unnamespaced Statistic Predicate</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see com.raptor.mcloottable.mcloot.impl.UnnamespacedStatisticPredicateImpl
     * @see com.raptor.mcloottable.mcloot.impl.MclootPackageImpl#getUnnamespacedStatisticPredicate()
     * @generated
     */
    EClass UNNAMESPACED_STATISTIC_PREDICATE = eINSTANCE.getUnnamespacedStatisticPredicate();

    /**
     * The meta object literal for the '<em><b>Stat</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute UNNAMESPACED_STATISTIC_PREDICATE__STAT = eINSTANCE.getUnnamespacedStatisticPredicate_Stat();

    /**
     * The meta object literal for the '<em><b>Value</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference UNNAMESPACED_STATISTIC_PREDICATE__VALUE = eINSTANCE.getUnnamespacedStatisticPredicate_Value();

    /**
     * The meta object literal for the '{@link com.raptor.mcloottable.mcloot.impl.LocationPredicateImpl <em>Location Predicate</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see com.raptor.mcloottable.mcloot.impl.LocationPredicateImpl
     * @see com.raptor.mcloottable.mcloot.impl.MclootPackageImpl#getLocationPredicate()
     * @generated
     */
    EClass LOCATION_PREDICATE = eINSTANCE.getLocationPredicate();

    /**
     * The meta object literal for the '<em><b>Biome</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute LOCATION_PREDICATE__BIOME = eINSTANCE.getLocationPredicate_Biome();

    /**
     * The meta object literal for the '<em><b>Block</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference LOCATION_PREDICATE__BLOCK = eINSTANCE.getLocationPredicate_Block();

    /**
     * The meta object literal for the '<em><b>Dimension</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute LOCATION_PREDICATE__DIMENSION = eINSTANCE.getLocationPredicate_Dimension();

    /**
     * The meta object literal for the '<em><b>Feature</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute LOCATION_PREDICATE__FEATURE = eINSTANCE.getLocationPredicate_Feature();

    /**
     * The meta object literal for the '<em><b>Fluid</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference LOCATION_PREDICATE__FLUID = eINSTANCE.getLocationPredicate_Fluid();

    /**
     * The meta object literal for the '<em><b>Light</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference LOCATION_PREDICATE__LIGHT = eINSTANCE.getLocationPredicate_Light();

    /**
     * The meta object literal for the '<em><b>XPos</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference LOCATION_PREDICATE__XPOS = eINSTANCE.getLocationPredicate_XPos();

    /**
     * The meta object literal for the '<em><b>YPos</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference LOCATION_PREDICATE__YPOS = eINSTANCE.getLocationPredicate_YPos();

    /**
     * The meta object literal for the '<em><b>ZPos</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference LOCATION_PREDICATE__ZPOS = eINSTANCE.getLocationPredicate_ZPos();

    /**
     * The meta object literal for the '{@link com.raptor.mcloottable.mcloot.impl.ItemPredicateImpl <em>Item Predicate</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see com.raptor.mcloottable.mcloot.impl.ItemPredicateImpl
     * @see com.raptor.mcloottable.mcloot.impl.MclootPackageImpl#getItemPredicate()
     * @generated
     */
    EClass ITEM_PREDICATE = eINSTANCE.getItemPredicate();

    /**
     * The meta object literal for the '<em><b>Tag</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute ITEM_PREDICATE__TAG = eINSTANCE.getItemPredicate_Tag();

    /**
     * The meta object literal for the '<em><b>Item</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute ITEM_PREDICATE__ITEM = eINSTANCE.getItemPredicate_Item();

    /**
     * The meta object literal for the '<em><b>Count Defined</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute ITEM_PREDICATE__COUNT_DEFINED = eINSTANCE.getItemPredicate_CountDefined();

    /**
     * The meta object literal for the '<em><b>Count</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ITEM_PREDICATE__COUNT = eINSTANCE.getItemPredicate_Count();

    /**
     * The meta object literal for the '<em><b>Durability Defined</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute ITEM_PREDICATE__DURABILITY_DEFINED = eINSTANCE.getItemPredicate_DurabilityDefined();

    /**
     * The meta object literal for the '<em><b>Durability</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ITEM_PREDICATE__DURABILITY = eINSTANCE.getItemPredicate_Durability();

    /**
     * The meta object literal for the '<em><b>Enchantments Defined</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute ITEM_PREDICATE__ENCHANTMENTS_DEFINED = eINSTANCE.getItemPredicate_EnchantmentsDefined();

    /**
     * The meta object literal for the '<em><b>Enchantments</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ITEM_PREDICATE__ENCHANTMENTS = eINSTANCE.getItemPredicate_Enchantments();

    /**
     * The meta object literal for the '<em><b>Stored Enchantments Defined</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute ITEM_PREDICATE__STORED_ENCHANTMENTS_DEFINED = eINSTANCE.getItemPredicate_StoredEnchantmentsDefined();

    /**
     * The meta object literal for the '<em><b>Stored Enchantments</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ITEM_PREDICATE__STORED_ENCHANTMENTS = eINSTANCE.getItemPredicate_StoredEnchantments();

    /**
     * The meta object literal for the '<em><b>Nbt Defined</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute ITEM_PREDICATE__NBT_DEFINED = eINSTANCE.getItemPredicate_NbtDefined();

    /**
     * The meta object literal for the '<em><b>Nbt</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute ITEM_PREDICATE__NBT = eINSTANCE.getItemPredicate_Nbt();

    /**
     * The meta object literal for the '<em><b>Potion Defined</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute ITEM_PREDICATE__POTION_DEFINED = eINSTANCE.getItemPredicate_PotionDefined();

    /**
     * The meta object literal for the '<em><b>Potion</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute ITEM_PREDICATE__POTION = eINSTANCE.getItemPredicate_Potion();

    /**
     * The meta object literal for the '{@link com.raptor.mcloottable.mcloot.impl.BlockPredicateImpl <em>Block Predicate</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see com.raptor.mcloottable.mcloot.impl.BlockPredicateImpl
     * @see com.raptor.mcloottable.mcloot.impl.MclootPackageImpl#getBlockPredicate()
     * @generated
     */
    EClass BLOCK_PREDICATE = eINSTANCE.getBlockPredicate();

    /**
     * The meta object literal for the '<em><b>Tag</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute BLOCK_PREDICATE__TAG = eINSTANCE.getBlockPredicate_Tag();

    /**
     * The meta object literal for the '<em><b>Block</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute BLOCK_PREDICATE__BLOCK = eINSTANCE.getBlockPredicate_Block();

    /**
     * The meta object literal for the '<em><b>Nbt</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute BLOCK_PREDICATE__NBT = eINSTANCE.getBlockPredicate_Nbt();

    /**
     * The meta object literal for the '<em><b>State Defined</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute BLOCK_PREDICATE__STATE_DEFINED = eINSTANCE.getBlockPredicate_StateDefined();

    /**
     * The meta object literal for the '<em><b>Properties</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference BLOCK_PREDICATE__PROPERTIES = eINSTANCE.getBlockPredicate_Properties();

    /**
     * The meta object literal for the '{@link com.raptor.mcloottable.mcloot.impl.BlockStatePropertyPredicateImpl <em>Block State Property Predicate</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see com.raptor.mcloottable.mcloot.impl.BlockStatePropertyPredicateImpl
     * @see com.raptor.mcloottable.mcloot.impl.MclootPackageImpl#getBlockStatePropertyPredicate()
     * @generated
     */
    EClass BLOCK_STATE_PROPERTY_PREDICATE = eINSTANCE.getBlockStatePropertyPredicate();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute BLOCK_STATE_PROPERTY_PREDICATE__NAME = eINSTANCE.getBlockStatePropertyPredicate_Name();

    /**
     * The meta object literal for the '<em><b>Value</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute BLOCK_STATE_PROPERTY_PREDICATE__VALUE = eINSTANCE.getBlockStatePropertyPredicate_Value();

    /**
     * The meta object literal for the '<em><b>Value Range</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference BLOCK_STATE_PROPERTY_PREDICATE__VALUE_RANGE = eINSTANCE.getBlockStatePropertyPredicate_ValueRange();

    /**
     * The meta object literal for the '{@link com.raptor.mcloottable.mcloot.impl.FluidPredicateImpl <em>Fluid Predicate</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see com.raptor.mcloottable.mcloot.impl.FluidPredicateImpl
     * @see com.raptor.mcloottable.mcloot.impl.MclootPackageImpl#getFluidPredicate()
     * @generated
     */
    EClass FLUID_PREDICATE = eINSTANCE.getFluidPredicate();

    /**
     * The meta object literal for the '<em><b>Tag</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute FLUID_PREDICATE__TAG = eINSTANCE.getFluidPredicate_Tag();

    /**
     * The meta object literal for the '<em><b>Fluid</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute FLUID_PREDICATE__FLUID = eINSTANCE.getFluidPredicate_Fluid();

    /**
     * The meta object literal for the '<em><b>State Defined</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute FLUID_PREDICATE__STATE_DEFINED = eINSTANCE.getFluidPredicate_StateDefined();

    /**
     * The meta object literal for the '<em><b>Properties</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference FLUID_PREDICATE__PROPERTIES = eINSTANCE.getFluidPredicate_Properties();

    /**
     * The meta object literal for the '{@link com.raptor.mcloottable.mcloot.impl.MCJsonValueImpl <em>MC Json Value</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see com.raptor.mcloottable.mcloot.impl.MCJsonValueImpl
     * @see com.raptor.mcloottable.mcloot.impl.MclootPackageImpl#getMCJsonValue()
     * @generated
     */
    EClass MC_JSON_VALUE = eINSTANCE.getMCJsonValue();

    /**
     * The meta object literal for the '{@link com.raptor.mcloottable.mcloot.impl.MCJsonObjectImpl <em>MC Json Object</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see com.raptor.mcloottable.mcloot.impl.MCJsonObjectImpl
     * @see com.raptor.mcloottable.mcloot.impl.MclootPackageImpl#getMCJsonObject()
     * @generated
     */
    EClass MC_JSON_OBJECT = eINSTANCE.getMCJsonObject();

    /**
     * The meta object literal for the '<em><b>Entries</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference MC_JSON_OBJECT__ENTRIES = eINSTANCE.getMCJsonObject_Entries();

    /**
     * The meta object literal for the '{@link com.raptor.mcloottable.mcloot.impl.MCJsonEntryImpl <em>MC Json Entry</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see com.raptor.mcloottable.mcloot.impl.MCJsonEntryImpl
     * @see com.raptor.mcloottable.mcloot.impl.MclootPackageImpl#getMCJsonEntry()
     * @generated
     */
    EClass MC_JSON_ENTRY = eINSTANCE.getMCJsonEntry();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute MC_JSON_ENTRY__NAME = eINSTANCE.getMCJsonEntry_Name();

    /**
     * The meta object literal for the '<em><b>Value</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference MC_JSON_ENTRY__VALUE = eINSTANCE.getMCJsonEntry_Value();

    /**
     * The meta object literal for the '{@link com.raptor.mcloottable.mcloot.impl.MCJsonArrayImpl <em>MC Json Array</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see com.raptor.mcloottable.mcloot.impl.MCJsonArrayImpl
     * @see com.raptor.mcloottable.mcloot.impl.MclootPackageImpl#getMCJsonArray()
     * @generated
     */
    EClass MC_JSON_ARRAY = eINSTANCE.getMCJsonArray();

    /**
     * The meta object literal for the '<em><b>Elements</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference MC_JSON_ARRAY__ELEMENTS = eINSTANCE.getMCJsonArray_Elements();

    /**
     * The meta object literal for the '{@link com.raptor.mcloottable.mcloot.impl.MCJsonStringImpl <em>MC Json String</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see com.raptor.mcloottable.mcloot.impl.MCJsonStringImpl
     * @see com.raptor.mcloottable.mcloot.impl.MclootPackageImpl#getMCJsonString()
     * @generated
     */
    EClass MC_JSON_STRING = eINSTANCE.getMCJsonString();

    /**
     * The meta object literal for the '<em><b>Value</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute MC_JSON_STRING__VALUE = eINSTANCE.getMCJsonString_Value();

    /**
     * The meta object literal for the '{@link com.raptor.mcloottable.mcloot.impl.MCJsonNumberImpl <em>MC Json Number</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see com.raptor.mcloottable.mcloot.impl.MCJsonNumberImpl
     * @see com.raptor.mcloottable.mcloot.impl.MclootPackageImpl#getMCJsonNumber()
     * @generated
     */
    EClass MC_JSON_NUMBER = eINSTANCE.getMCJsonNumber();

    /**
     * The meta object literal for the '{@link com.raptor.mcloottable.mcloot.impl.MCJsonIntegralImpl <em>MC Json Integral</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see com.raptor.mcloottable.mcloot.impl.MCJsonIntegralImpl
     * @see com.raptor.mcloottable.mcloot.impl.MclootPackageImpl#getMCJsonIntegral()
     * @generated
     */
    EClass MC_JSON_INTEGRAL = eINSTANCE.getMCJsonIntegral();

    /**
     * The meta object literal for the '<em><b>Value</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute MC_JSON_INTEGRAL__VALUE = eINSTANCE.getMCJsonIntegral_Value();

    /**
     * The meta object literal for the '{@link com.raptor.mcloottable.mcloot.impl.MCJsonFloatingPointImpl <em>MC Json Floating Point</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see com.raptor.mcloottable.mcloot.impl.MCJsonFloatingPointImpl
     * @see com.raptor.mcloottable.mcloot.impl.MclootPackageImpl#getMCJsonFloatingPoint()
     * @generated
     */
    EClass MC_JSON_FLOATING_POINT = eINSTANCE.getMCJsonFloatingPoint();

    /**
     * The meta object literal for the '<em><b>Value</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute MC_JSON_FLOATING_POINT__VALUE = eINSTANCE.getMCJsonFloatingPoint_Value();

    /**
     * The meta object literal for the '{@link com.raptor.mcloottable.mcloot.impl.MCJsonBooleanImpl <em>MC Json Boolean</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see com.raptor.mcloottable.mcloot.impl.MCJsonBooleanImpl
     * @see com.raptor.mcloottable.mcloot.impl.MclootPackageImpl#getMCJsonBoolean()
     * @generated
     */
    EClass MC_JSON_BOOLEAN = eINSTANCE.getMCJsonBoolean();

    /**
     * The meta object literal for the '<em><b>Value</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute MC_JSON_BOOLEAN__VALUE = eINSTANCE.getMCJsonBoolean_Value();

    /**
     * The meta object literal for the '{@link com.raptor.mcloottable.mcloot.impl.MCJsonNullImpl <em>MC Json Null</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see com.raptor.mcloottable.mcloot.impl.MCJsonNullImpl
     * @see com.raptor.mcloottable.mcloot.impl.MclootPackageImpl#getMCJsonNull()
     * @generated
     */
    EClass MC_JSON_NULL = eINSTANCE.getMCJsonNull();

    /**
     * The meta object literal for the '{@link com.raptor.mcloottable.mcloot.impl.LongRangeImpl <em>Long Range</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see com.raptor.mcloottable.mcloot.impl.LongRangeImpl
     * @see com.raptor.mcloottable.mcloot.impl.MclootPackageImpl#getLongRange()
     * @generated
     */
    EClass LONG_RANGE = eINSTANCE.getLongRange();

    /**
     * The meta object literal for the '{@link com.raptor.mcloottable.mcloot.impl.ExactLongRangeImpl <em>Exact Long Range</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see com.raptor.mcloottable.mcloot.impl.ExactLongRangeImpl
     * @see com.raptor.mcloottable.mcloot.impl.MclootPackageImpl#getExactLongRange()
     * @generated
     */
    EClass EXACT_LONG_RANGE = eINSTANCE.getExactLongRange();

    /**
     * The meta object literal for the '<em><b>Value</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute EXACT_LONG_RANGE__VALUE = eINSTANCE.getExactLongRange_Value();

    /**
     * The meta object literal for the '{@link com.raptor.mcloottable.mcloot.impl.NormalLongRangeImpl <em>Normal Long Range</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see com.raptor.mcloottable.mcloot.impl.NormalLongRangeImpl
     * @see com.raptor.mcloottable.mcloot.impl.MclootPackageImpl#getNormalLongRange()
     * @generated
     */
    EClass NORMAL_LONG_RANGE = eINSTANCE.getNormalLongRange();

    /**
     * The meta object literal for the '<em><b>Min</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute NORMAL_LONG_RANGE__MIN = eINSTANCE.getNormalLongRange_Min();

    /**
     * The meta object literal for the '<em><b>Max</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute NORMAL_LONG_RANGE__MAX = eINSTANCE.getNormalLongRange_Max();

    /**
     * The meta object literal for the '{@link com.raptor.mcloottable.mcloot.impl.DoubleRangeImpl <em>Double Range</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see com.raptor.mcloottable.mcloot.impl.DoubleRangeImpl
     * @see com.raptor.mcloottable.mcloot.impl.MclootPackageImpl#getDoubleRange()
     * @generated
     */
    EClass DOUBLE_RANGE = eINSTANCE.getDoubleRange();

    /**
     * The meta object literal for the '{@link com.raptor.mcloottable.mcloot.impl.ExactDoubleRangeImpl <em>Exact Double Range</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see com.raptor.mcloottable.mcloot.impl.ExactDoubleRangeImpl
     * @see com.raptor.mcloottable.mcloot.impl.MclootPackageImpl#getExactDoubleRange()
     * @generated
     */
    EClass EXACT_DOUBLE_RANGE = eINSTANCE.getExactDoubleRange();

    /**
     * The meta object literal for the '<em><b>Value</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute EXACT_DOUBLE_RANGE__VALUE = eINSTANCE.getExactDoubleRange_Value();

    /**
     * The meta object literal for the '{@link com.raptor.mcloottable.mcloot.impl.NormalDoubleRangeImpl <em>Normal Double Range</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see com.raptor.mcloottable.mcloot.impl.NormalDoubleRangeImpl
     * @see com.raptor.mcloottable.mcloot.impl.MclootPackageImpl#getNormalDoubleRange()
     * @generated
     */
    EClass NORMAL_DOUBLE_RANGE = eINSTANCE.getNormalDoubleRange();

    /**
     * The meta object literal for the '<em><b>Min</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute NORMAL_DOUBLE_RANGE__MIN = eINSTANCE.getNormalDoubleRange_Min();

    /**
     * The meta object literal for the '<em><b>Max</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute NORMAL_DOUBLE_RANGE__MAX = eINSTANCE.getNormalDoubleRange_Max();

    /**
     * The meta object literal for the '{@link com.raptor.mcloottable.mcloot.impl.LootFunctionWithConditionsImpl <em>Loot Function With Conditions</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see com.raptor.mcloottable.mcloot.impl.LootFunctionWithConditionsImpl
     * @see com.raptor.mcloottable.mcloot.impl.MclootPackageImpl#getLootFunctionWithConditions()
     * @generated
     */
    EClass LOOT_FUNCTION_WITH_CONDITIONS = eINSTANCE.getLootFunctionWithConditions();

    /**
     * The meta object literal for the '<em><b>Conditions Defined</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute LOOT_FUNCTION_WITH_CONDITIONS__CONDITIONS_DEFINED = eINSTANCE.getLootFunctionWithConditions_ConditionsDefined();

    /**
     * The meta object literal for the '<em><b>Conditions</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference LOOT_FUNCTION_WITH_CONDITIONS__CONDITIONS = eINSTANCE.getLootFunctionWithConditions_Conditions();

    /**
     * The meta object literal for the '<em><b>Function</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference LOOT_FUNCTION_WITH_CONDITIONS__FUNCTION = eINSTANCE.getLootFunctionWithConditions_Function();

    /**
     * The meta object literal for the '{@link com.raptor.mcloottable.mcloot.impl.AlternativeLootConditionImpl <em>Alternative Loot Condition</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see com.raptor.mcloottable.mcloot.impl.AlternativeLootConditionImpl
     * @see com.raptor.mcloottable.mcloot.impl.MclootPackageImpl#getAlternativeLootCondition()
     * @generated
     */
    EClass ALTERNATIVE_LOOT_CONDITION = eINSTANCE.getAlternativeLootCondition();

    /**
     * The meta object literal for the '<em><b>Alternatives</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ALTERNATIVE_LOOT_CONDITION__ALTERNATIVES = eINSTANCE.getAlternativeLootCondition_Alternatives();

    /**
     * The meta object literal for the '{@link com.raptor.mcloottable.mcloot.impl.InvertedLootConditionImpl <em>Inverted Loot Condition</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see com.raptor.mcloottable.mcloot.impl.InvertedLootConditionImpl
     * @see com.raptor.mcloottable.mcloot.impl.MclootPackageImpl#getInvertedLootCondition()
     * @generated
     */
    EClass INVERTED_LOOT_CONDITION = eINSTANCE.getInvertedLootCondition();

    /**
     * The meta object literal for the '<em><b>Term</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference INVERTED_LOOT_CONDITION__TERM = eINSTANCE.getInvertedLootCondition_Term();

    /**
     * The meta object literal for the '{@link com.raptor.mcloottable.mcloot.EnumEquipmentSlot <em>Enum Equipment Slot</em>}' enum.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see com.raptor.mcloottable.mcloot.EnumEquipmentSlot
     * @see com.raptor.mcloottable.mcloot.impl.MclootPackageImpl#getEnumEquipmentSlot()
     * @generated
     */
    EEnum ENUM_EQUIPMENT_SLOT = eINSTANCE.getEnumEquipmentSlot();

    /**
     * The meta object literal for the '{@link com.raptor.mcloottable.mcloot.EnumGamemode <em>Enum Gamemode</em>}' enum.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see com.raptor.mcloottable.mcloot.EnumGamemode
     * @see com.raptor.mcloottable.mcloot.impl.MclootPackageImpl#getEnumGamemode()
     * @generated
     */
    EEnum ENUM_GAMEMODE = eINSTANCE.getEnumGamemode();

    /**
     * The meta object literal for the '{@link com.raptor.mcloottable.mcloot.EnumLootTableType <em>Enum Loot Table Type</em>}' enum.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see com.raptor.mcloottable.mcloot.EnumLootTableType
     * @see com.raptor.mcloottable.mcloot.impl.MclootPackageImpl#getEnumLootTableType()
     * @generated
     */
    EEnum ENUM_LOOT_TABLE_TYPE = eINSTANCE.getEnumLootTableType();

    /**
     * The meta object literal for the '{@link com.raptor.mcloottable.mcloot.EnumBonusFormula <em>Enum Bonus Formula</em>}' enum.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see com.raptor.mcloottable.mcloot.EnumBonusFormula
     * @see com.raptor.mcloottable.mcloot.impl.MclootPackageImpl#getEnumBonusFormula()
     * @generated
     */
    EEnum ENUM_BONUS_FORMULA = eINSTANCE.getEnumBonusFormula();

    /**
     * The meta object literal for the '{@link com.raptor.mcloottable.mcloot.EnumNBTSource <em>Enum NBT Source</em>}' enum.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see com.raptor.mcloottable.mcloot.EnumNBTSource
     * @see com.raptor.mcloottable.mcloot.impl.MclootPackageImpl#getEnumNBTSource()
     * @generated
     */
    EEnum ENUM_NBT_SOURCE = eINSTANCE.getEnumNBTSource();

    /**
     * The meta object literal for the '{@link com.raptor.mcloottable.mcloot.EnumAttributeModifierOperation <em>Enum Attribute Modifier Operation</em>}' enum.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see com.raptor.mcloottable.mcloot.EnumAttributeModifierOperation
     * @see com.raptor.mcloottable.mcloot.impl.MclootPackageImpl#getEnumAttributeModifierOperation()
     * @generated
     */
    EEnum ENUM_ATTRIBUTE_MODIFIER_OPERATION = eINSTANCE.getEnumAttributeModifierOperation();

    /**
     * The meta object literal for the '{@link com.raptor.mcloottable.mcloot.EnumEntitySource <em>Enum Entity Source</em>}' enum.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see com.raptor.mcloottable.mcloot.EnumEntitySource
     * @see com.raptor.mcloottable.mcloot.impl.MclootPackageImpl#getEnumEntitySource()
     * @generated
     */
    EEnum ENUM_ENTITY_SOURCE = eINSTANCE.getEnumEntitySource();

  }

} //MclootPackage
