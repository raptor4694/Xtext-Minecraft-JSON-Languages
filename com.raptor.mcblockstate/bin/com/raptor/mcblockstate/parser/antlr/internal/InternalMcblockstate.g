/*
 * generated by Xtext 2.21.0
 */
grammar InternalMcblockstate;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package com.raptor.mcblockstate.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package com.raptor.mcblockstate.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import com.raptor.mcblockstate.services.McblockstateGrammarAccess;

}

@parser::members {

 	private McblockstateGrammarAccess grammarAccess;

    public InternalMcblockstateParser(TokenStream input, McblockstateGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Blockstate";
   	}

   	@Override
   	protected McblockstateGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleBlockstate
entryRuleBlockstate returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBlockstateRule()); }
	iv_ruleBlockstate=ruleBlockstate
	{ $current=$iv_ruleBlockstate.current; }
	EOF;

// Rule Blockstate
ruleBlockstate returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			('variants' | 'when' | 'apply')=>
			(
				{
					newCompositeNode(grammarAccess.getBlockstateAccess().getVariantsBlockstateParserRuleCall_0_0_0());
				}
				this_VariantsBlockstate_0=ruleVariantsBlockstate
				{
					$current = $this_VariantsBlockstate_0.current;
					afterParserOrEnumRuleCall();
				}
				    |
				{
					newCompositeNode(grammarAccess.getBlockstateAccess().getMultipartBlockstateParserRuleCall_0_0_1());
				}
				this_MultipartBlockstate_1=ruleMultipartBlockstate
				{
					$current = $this_MultipartBlockstate_1.current;
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		{
			newCompositeNode(grammarAccess.getBlockstateAccess().getCustomBlockstateParserRuleCall_1());
		}
		this_CustomBlockstate_2=ruleCustomBlockstate
		{
			$current = $this_CustomBlockstate_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleVariantsBlockstate
entryRuleVariantsBlockstate returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getVariantsBlockstateRule()); }
	iv_ruleVariantsBlockstate=ruleVariantsBlockstate
	{ $current=$iv_ruleVariantsBlockstate.current; }
	EOF;

// Rule VariantsBlockstate
ruleVariantsBlockstate returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='variants'
		{
			newLeafNode(otherlv_0, grammarAccess.getVariantsBlockstateAccess().getVariantsKeyword_0());
		}
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getVariantsBlockstateAccess().getVariantsBlockstateAction_1(),
					$current);
			}
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getVariantsBlockstateAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getVariantsBlockstateAccess().getVariantsVariantParserRuleCall_3_0());
				}
				lv_variants_3_0=ruleVariant
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getVariantsBlockstateRule());
					}
					add(
						$current,
						"variants",
						lv_variants_3_0,
						"com.raptor.mcblockstate.Mcblockstate.Variant");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_4='}'
		{
			newLeafNode(otherlv_4, grammarAccess.getVariantsBlockstateAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleVariant
entryRuleVariant returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getVariantRule()); }
	iv_ruleVariant=ruleVariant
	{ $current=$iv_ruleVariant.current; }
	EOF;

// Rule Variant
ruleVariant returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='['
		{
			newLeafNode(otherlv_0, grammarAccess.getVariantAccess().getLeftSquareBracketKeyword_0());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getVariantAccess().getPropertiesBlockstatePropertyParserRuleCall_1_0_0());
					}
					lv_properties_1_0=ruleBlockstateProperty
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getVariantRule());
						}
						add(
							$current,
							"properties",
							lv_properties_1_0,
							"com.raptor.mcblockstate.Mcblockstate.BlockstateProperty");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				((
					','
					(
						(
							ruleBlockstateProperty
						)
					)
				)
				)=>
				(
					otherlv_2=','
					{
						newLeafNode(otherlv_2, grammarAccess.getVariantAccess().getCommaKeyword_1_1_0_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getVariantAccess().getPropertiesBlockstatePropertyParserRuleCall_1_1_0_1_0());
							}
							lv_properties_3_0=ruleBlockstateProperty
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getVariantRule());
								}
								add(
									$current,
									"properties",
									lv_properties_3_0,
									"com.raptor.mcblockstate.Mcblockstate.BlockstateProperty");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)
			)*
			(
				otherlv_4=','
				{
					newLeafNode(otherlv_4, grammarAccess.getVariantAccess().getCommaKeyword_1_2());
				}
			)?
		)?
		otherlv_5=']'
		{
			newLeafNode(otherlv_5, grammarAccess.getVariantAccess().getRightSquareBracketKeyword_2());
		}
		otherlv_6='='
		{
			newLeafNode(otherlv_6, grammarAccess.getVariantAccess().getEqualsSignKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getVariantAccess().getModelsModelListParserRuleCall_4_0());
				}
				lv_models_7_0=ruleModelList
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getVariantRule());
					}
					set(
						$current,
						"models",
						lv_models_7_0,
						"com.raptor.mcblockstate.Mcblockstate.ModelList");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleBlockstateProperty
entryRuleBlockstateProperty returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBlockstatePropertyRule()); }
	iv_ruleBlockstateProperty=ruleBlockstateProperty
	{ $current=$iv_ruleBlockstateProperty.current; }
	EOF;

// Rule BlockstateProperty
ruleBlockstateProperty returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getBlockstatePropertyAccess().getNameBlockstatePropertyValueParserRuleCall_0_0());
				}
				lv_name_0_0=ruleBlockstatePropertyValue
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBlockstatePropertyRule());
					}
					set(
						$current,
						"name",
						lv_name_0_0,
						"com.raptor.mcblockstate.Mcblockstate.BlockstatePropertyValue");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1='='
		{
			newLeafNode(otherlv_1, grammarAccess.getBlockstatePropertyAccess().getEqualsSignKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getBlockstatePropertyAccess().getValueBlockstatePropertyValueParserRuleCall_2_0());
				}
				lv_value_2_0=ruleBlockstatePropertyValue
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBlockstatePropertyRule());
					}
					set(
						$current,
						"value",
						lv_value_2_0,
						"com.raptor.mcblockstate.Mcblockstate.BlockstatePropertyValue");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleMultipartBlockstate
entryRuleMultipartBlockstate returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMultipartBlockstateRule()); }
	iv_ruleMultipartBlockstate=ruleMultipartBlockstate
	{ $current=$iv_ruleMultipartBlockstate.current; }
	EOF;

// Rule MultipartBlockstate
ruleMultipartBlockstate returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getMultipartBlockstateAccess().getCasesCaseParserRuleCall_0());
			}
			lv_cases_0_0=ruleCase
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getMultipartBlockstateRule());
				}
				add(
					$current,
					"cases",
					lv_cases_0_0,
					"com.raptor.mcblockstate.Mcblockstate.Case");
				afterParserOrEnumRuleCall();
			}
		)
	)+
;

// Entry rule entryRuleCase
entryRuleCase returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCaseRule()); }
	iv_ruleCase=ruleCase
	{ $current=$iv_ruleCase.current; }
	EOF;

// Rule Case
ruleCase returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='when'
			{
				newLeafNode(otherlv_0, grammarAccess.getCaseAccess().getWhenKeyword_0_0());
			}
			otherlv_1='('
			{
				newLeafNode(otherlv_1, grammarAccess.getCaseAccess().getLeftParenthesisKeyword_0_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getCaseAccess().getConditionCaseConditionParserRuleCall_0_2_0());
					}
					lv_condition_2_0=ruleCaseCondition
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCaseRule());
						}
						set(
							$current,
							"condition",
							lv_condition_2_0,
							"com.raptor.mcblockstate.Mcblockstate.CaseCondition");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_3=')'
			{
				newLeafNode(otherlv_3, grammarAccess.getCaseAccess().getRightParenthesisKeyword_0_3());
			}
		)?
		otherlv_4='apply'
		{
			newLeafNode(otherlv_4, grammarAccess.getCaseAccess().getApplyKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getCaseAccess().getModelsModelListParserRuleCall_2_0());
				}
				lv_models_5_0=ruleModelList
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCaseRule());
					}
					set(
						$current,
						"models",
						lv_models_5_0,
						"com.raptor.mcblockstate.Mcblockstate.ModelList");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleCaseCondition
entryRuleCaseCondition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCaseConditionRule()); }
	iv_ruleCaseCondition=ruleCaseCondition
	{ $current=$iv_ruleCaseCondition.current; }
	EOF;

// Rule CaseCondition
ruleCaseCondition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getCaseConditionAccess().getBaseCaseConditionParserRuleCall_0());
		}
		this_BaseCaseCondition_0=ruleBaseCaseCondition
		{
			$current = $this_BaseCaseCondition_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			('|')=>
			(
				otherlv_1='|'
				{
					newLeafNode(otherlv_1, grammarAccess.getCaseConditionAccess().getVerticalLineKeyword_1_0_0());
				}
				(
					{
						$current = forceCreateModelElementAndAdd(
							grammarAccess.getCaseConditionAccess().getOrCaseConditionOptionsAction_1_0_1(),
							$current);
					}
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getCaseConditionAccess().getOptionsBaseCaseConditionParserRuleCall_1_0_2_0());
						}
						lv_options_3_0=ruleBaseCaseCondition
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getCaseConditionRule());
							}
							add(
								$current,
								"options",
								lv_options_3_0,
								"com.raptor.mcblockstate.Mcblockstate.BaseCaseCondition");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					otherlv_4='|'
					{
						newLeafNode(otherlv_4, grammarAccess.getCaseConditionAccess().getVerticalLineKeyword_1_0_3_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getCaseConditionAccess().getOptionsBaseCaseConditionParserRuleCall_1_0_3_1_0());
							}
							lv_options_5_0=ruleBaseCaseCondition
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getCaseConditionRule());
								}
								add(
									$current,
									"options",
									lv_options_5_0,
									"com.raptor.mcblockstate.Mcblockstate.BaseCaseCondition");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)*
			)
		)?
	)
;

// Entry rule entryRuleBaseCaseCondition
entryRuleBaseCaseCondition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBaseCaseConditionRule()); }
	iv_ruleBaseCaseCondition=ruleBaseCaseCondition
	{ $current=$iv_ruleBaseCaseCondition.current; }
	EOF;

// Rule BaseCaseCondition
ruleBaseCaseCondition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='('
			{
				newLeafNode(otherlv_0, grammarAccess.getBaseCaseConditionAccess().getLeftParenthesisKeyword_0_0());
			}
			{
				newCompositeNode(grammarAccess.getBaseCaseConditionAccess().getCaseConditionParserRuleCall_0_1());
			}
			this_CaseCondition_1=ruleCaseCondition
			{
				$current = $this_CaseCondition_1.current;
				afterParserOrEnumRuleCall();
			}
			otherlv_2=')'
			{
				newLeafNode(otherlv_2, grammarAccess.getBaseCaseConditionAccess().getRightParenthesisKeyword_0_2());
			}
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getBaseCaseConditionAccess().getBaseCaseConditionAction_1_0(),
						$current);
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getBaseCaseConditionAccess().getPropertiesBlockstatePropertyPredicateParserRuleCall_1_1_0());
					}
					lv_properties_4_0=ruleBlockstatePropertyPredicate
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getBaseCaseConditionRule());
						}
						add(
							$current,
							"properties",
							lv_properties_4_0,
							"com.raptor.mcblockstate.Mcblockstate.BlockstatePropertyPredicate");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_5='&'
				{
					newLeafNode(otherlv_5, grammarAccess.getBaseCaseConditionAccess().getAmpersandKeyword_1_2_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getBaseCaseConditionAccess().getPropertiesBlockstatePropertyPredicateParserRuleCall_1_2_1_0());
						}
						lv_properties_6_0=ruleBlockstatePropertyPredicate
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getBaseCaseConditionRule());
							}
							add(
								$current,
								"properties",
								lv_properties_6_0,
								"com.raptor.mcblockstate.Mcblockstate.BlockstatePropertyPredicate");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)
	)
;

// Entry rule entryRuleBlockstatePropertyPredicate
entryRuleBlockstatePropertyPredicate returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBlockstatePropertyPredicateRule()); }
	iv_ruleBlockstatePropertyPredicate=ruleBlockstatePropertyPredicate
	{ $current=$iv_ruleBlockstatePropertyPredicate.current; }
	EOF;

// Rule BlockstatePropertyPredicate
ruleBlockstatePropertyPredicate returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getBlockstatePropertyPredicateAccess().getNormalBlockstatePropertyPredicateAction_0_0(),
						$current);
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getBlockstatePropertyPredicateAccess().getNameBlockstatePropertyValueParserRuleCall_0_1_0());
					}
					lv_name_1_0=ruleBlockstatePropertyValue
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getBlockstatePropertyPredicateRule());
						}
						set(
							$current,
							"name",
							lv_name_1_0,
							"com.raptor.mcblockstate.Mcblockstate.BlockstatePropertyValue");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				('=' | '==' | 'in')=>
				(
					(
						(
							otherlv_2='='
							{
								newLeafNode(otherlv_2, grammarAccess.getBlockstatePropertyPredicateAccess().getEqualsSignKeyword_0_2_0_0_0_0());
							}
							    |
							otherlv_3='=='
							{
								newLeafNode(otherlv_3, grammarAccess.getBlockstatePropertyPredicateAccess().getEqualsSignEqualsSignKeyword_0_2_0_0_0_1());
							}
						)
						(
							(
								{
									newCompositeNode(grammarAccess.getBlockstatePropertyPredicateAccess().getValuesBlockstatePropertyValueParserRuleCall_0_2_0_0_1_0());
								}
								lv_values_4_0=ruleBlockstatePropertyValue
								{
									if ($current==null) {
										$current = createModelElementForParent(grammarAccess.getBlockstatePropertyPredicateRule());
									}
									add(
										$current,
										"values",
										lv_values_4_0,
										"com.raptor.mcblockstate.Mcblockstate.BlockstatePropertyValue");
									afterParserOrEnumRuleCall();
								}
							)
						)
					)
					    |
					(
						otherlv_5='in'
						{
							newLeafNode(otherlv_5, grammarAccess.getBlockstatePropertyPredicateAccess().getInKeyword_0_2_0_1_0());
						}
						otherlv_6='('
						{
							newLeafNode(otherlv_6, grammarAccess.getBlockstatePropertyPredicateAccess().getLeftParenthesisKeyword_0_2_0_1_1());
						}
						(
							(
								(
									{
										newCompositeNode(grammarAccess.getBlockstatePropertyPredicateAccess().getValuesBlockstatePropertyValueParserRuleCall_0_2_0_1_2_0_0());
									}
									lv_values_7_0=ruleBlockstatePropertyValue
									{
										if ($current==null) {
											$current = createModelElementForParent(grammarAccess.getBlockstatePropertyPredicateRule());
										}
										add(
											$current,
											"values",
											lv_values_7_0,
											"com.raptor.mcblockstate.Mcblockstate.BlockstatePropertyValue");
										afterParserOrEnumRuleCall();
									}
								)
							)
							(
								otherlv_8=','
								{
									newLeafNode(otherlv_8, grammarAccess.getBlockstatePropertyPredicateAccess().getCommaKeyword_0_2_0_1_2_1_0());
								}
								(
									(
										{
											newCompositeNode(grammarAccess.getBlockstatePropertyPredicateAccess().getValuesBlockstatePropertyValueParserRuleCall_0_2_0_1_2_1_1_0());
										}
										lv_values_9_0=ruleBlockstatePropertyValue
										{
											if ($current==null) {
												$current = createModelElementForParent(grammarAccess.getBlockstatePropertyPredicateRule());
											}
											add(
												$current,
												"values",
												lv_values_9_0,
												"com.raptor.mcblockstate.Mcblockstate.BlockstatePropertyValue");
											afterParserOrEnumRuleCall();
										}
									)
								)
							)*
							(
								otherlv_10=','
								{
									newLeafNode(otherlv_10, grammarAccess.getBlockstatePropertyPredicateAccess().getCommaKeyword_0_2_0_1_2_2());
								}
							)?
						)?
						otherlv_11=')'
						{
							newLeafNode(otherlv_11, grammarAccess.getBlockstatePropertyPredicateAccess().getRightParenthesisKeyword_0_2_0_1_3());
						}
					)
				)
			)
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getBlockstatePropertyPredicateAccess().getBooleanBlockstatePropertyPredicateAction_1_0(),
						$current);
				}
			)
			(
				(
					lv_inverted_13_0='!'
					{
						newLeafNode(lv_inverted_13_0, grammarAccess.getBlockstatePropertyPredicateAccess().getInvertedExclamationMarkKeyword_1_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getBlockstatePropertyPredicateRule());
						}
						setWithLastConsumed($current, "inverted", true, "!");
					}
				)
			)?
			(
				(
					{
						newCompositeNode(grammarAccess.getBlockstatePropertyPredicateAccess().getNameBlockstatePropertyValueParserRuleCall_1_2_0());
					}
					lv_name_14_0=ruleBlockstatePropertyValue
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getBlockstatePropertyPredicateRule());
						}
						set(
							$current,
							"name",
							lv_name_14_0,
							"com.raptor.mcblockstate.Mcblockstate.BlockstatePropertyValue");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
	)
;

// Entry rule entryRuleCustomBlockstate
entryRuleCustomBlockstate returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCustomBlockstateRule()); }
	iv_ruleCustomBlockstate=ruleCustomBlockstate
	{ $current=$iv_ruleCustomBlockstate.current; }
	EOF;

// Rule CustomBlockstate
ruleCustomBlockstate returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getCustomBlockstateAccess().getJsonMCJsonObjectParserRuleCall_0());
			}
			lv_json_0_0=ruleMCJsonObject
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getCustomBlockstateRule());
				}
				set(
					$current,
					"json",
					lv_json_0_0,
					"com.raptor.mcblockstate.Mcblockstate.MCJsonObject");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleBlockstatePropertyValue
entryRuleBlockstatePropertyValue returns [String current=null]:
	{ newCompositeNode(grammarAccess.getBlockstatePropertyValueRule()); }
	iv_ruleBlockstatePropertyValue=ruleBlockstatePropertyValue
	{ $current=$iv_ruleBlockstatePropertyValue.current.getText(); }
	EOF;

// Rule BlockstatePropertyValue
ruleBlockstatePropertyValue returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='true'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getBlockstatePropertyValueAccess().getTrueKeyword_0());
		}
		    |
		kw='false'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getBlockstatePropertyValueAccess().getFalseKeyword_1());
		}
		    |
		kw='null'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getBlockstatePropertyValueAccess().getNullKeyword_2());
		}
		    |
		kw='variants'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getBlockstatePropertyValueAccess().getVariantsKeyword_3());
		}
		    |
		kw='multipart'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getBlockstatePropertyValueAccess().getMultipartKeyword_4());
		}
		    |
		kw='in'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getBlockstatePropertyValueAccess().getInKeyword_5());
		}
		    |
		kw='when'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getBlockstatePropertyValueAccess().getWhenKeyword_6());
		}
		    |
		kw='apply'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getBlockstatePropertyValueAccess().getApplyKeyword_7());
		}
		    |
		kw='x'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getBlockstatePropertyValueAccess().getXKeyword_8());
		}
		    |
		kw='y'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getBlockstatePropertyValueAccess().getYKeyword_9());
		}
		    |
		kw='uvlock'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getBlockstatePropertyValueAccess().getUvlockKeyword_10());
		}
		    |
		this_ID_11=RULE_ID
		{
			$current.merge(this_ID_11);
		}
		{
			newLeafNode(this_ID_11, grammarAccess.getBlockstatePropertyValueAccess().getIDTerminalRuleCall_11());
		}
		    |
		this_STRING_12=RULE_STRING
		{
			$current.merge(this_STRING_12);
		}
		{
			newLeafNode(this_STRING_12, grammarAccess.getBlockstatePropertyValueAccess().getSTRINGTerminalRuleCall_12());
		}
		    |
		this_DOUBLE_13=RULE_DOUBLE
		{
			$current.merge(this_DOUBLE_13);
		}
		{
			newLeafNode(this_DOUBLE_13, grammarAccess.getBlockstatePropertyValueAccess().getDOUBLETerminalRuleCall_13());
		}
		    |
		{
			newCompositeNode(grammarAccess.getBlockstatePropertyValueAccess().getLONGParserRuleCall_14());
		}
		this_LONG_14=ruleLONG
		{
			$current.merge(this_LONG_14);
		}
		{
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleModelList
entryRuleModelList returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getModelListRule()); }
	iv_ruleModelList=ruleModelList
	{ $current=$iv_ruleModelList.current; }
	EOF;

// Rule ModelList
ruleModelList returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='{'
			{
				newLeafNode(otherlv_0, grammarAccess.getModelListAccess().getLeftCurlyBracketKeyword_0_0());
			}
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getModelListAccess().getModelListAction_0_1(),
						$current);
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getModelListAccess().getModelsModelParserRuleCall_0_2_0());
					}
					lv_models_2_0=ruleModel
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getModelListRule());
						}
						add(
							$current,
							"models",
							lv_models_2_0,
							"com.raptor.mcblockstate.Mcblockstate.Model");
						afterParserOrEnumRuleCall();
					}
				)
			)*
			(
				('}')=>
				otherlv_3='}'
				{
					newLeafNode(otherlv_3, grammarAccess.getModelListAccess().getRightCurlyBracketKeyword_0_3());
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getModelListAccess().getModelsModelParserRuleCall_1_0());
				}
				lv_models_4_0=ruleModel
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getModelListRule());
					}
					add(
						$current,
						"models",
						lv_models_4_0,
						"com.raptor.mcblockstate.Mcblockstate.Model");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleModel
entryRuleModel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getModelRule()); }
	iv_ruleModel=ruleModel
	{ $current=$iv_ruleModel.current; }
	EOF;

// Rule Model
ruleModel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getModelAccess().getLocationNamespacedLocationParserRuleCall_0_0());
				}
				lv_location_0_0=ruleNamespacedLocation
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getModelRule());
					}
					set(
						$current,
						"location",
						lv_location_0_0,
						"com.raptor.mcblockstate.Mcblockstate.NamespacedLocation");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			('*')=>
			(
				(
					(
						lv_weightDefined_1_0='*'
						{
							newLeafNode(lv_weightDefined_1_0, grammarAccess.getModelAccess().getWeightDefinedAsteriskKeyword_1_0_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getModelRule());
							}
							setWithLastConsumed($current, "weightDefined", true, "*");
						}
					)
				)
				(
					(
						lv_weight_2_0=RULE_ULONG
						{
							newLeafNode(lv_weight_2_0, grammarAccess.getModelAccess().getWeightULONGTerminalRuleCall_1_0_1_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getModelRule());
							}
							setWithLastConsumed(
								$current,
								"weight",
								lv_weight_2_0,
								"com.raptor.mcblockstate.Mcblockstate.ULONG");
						}
					)
				)
			)
		)?
		(
			('(')=>
			(
				otherlv_3='('
				{
					newLeafNode(otherlv_3, grammarAccess.getModelAccess().getLeftParenthesisKeyword_2_0_0());
				}
				(
					(
						{ 
						  getUnorderedGroupHelper().enter(grammarAccess.getModelAccess().getUnorderedGroup_2_0_1());
						}
						(
							(
					(
						{getUnorderedGroupHelper().canSelect(grammarAccess.getModelAccess().getUnorderedGroup_2_0_1(), 0)}?=>(
							{
								getUnorderedGroupHelper().select(grammarAccess.getModelAccess().getUnorderedGroup_2_0_1(), 0);
							}
										({true}?=>((
											(
												lv_xDefined_5_0='x'
												{
													newLeafNode(lv_xDefined_5_0, grammarAccess.getModelAccess().getXDefinedXKeyword_2_0_1_0_0_0());
												}
												{
													if ($current==null) {
														$current = createModelElement(grammarAccess.getModelRule());
													}
													setWithLastConsumed($current, "xDefined", true, "x");
												}
											)
										)
										otherlv_6='='
										{
											newLeafNode(otherlv_6, grammarAccess.getModelAccess().getEqualsSignKeyword_2_0_1_0_1());
										}
										(
											(
												{
													newCompositeNode(grammarAccess.getModelAccess().getXLONGParserRuleCall_2_0_1_0_2_0());
												}
												lv_x_7_0=ruleLONG
												{
													if ($current==null) {
														$current = createModelElementForParent(grammarAccess.getModelRule());
													}
													set(
														$current,
														"x",
														lv_x_7_0,
														"com.raptor.mcblockstate.Mcblockstate.LONG");
													afterParserOrEnumRuleCall();
												}
											)
										)
										))
							{ 
								getUnorderedGroupHelper().returnFromSelection(grammarAccess.getModelAccess().getUnorderedGroup_2_0_1());
							}
						)
					)|
					(
						{getUnorderedGroupHelper().canSelect(grammarAccess.getModelAccess().getUnorderedGroup_2_0_1(), 1)}?=>(
							{
								getUnorderedGroupHelper().select(grammarAccess.getModelAccess().getUnorderedGroup_2_0_1(), 1);
							}
										({true}?=>((
											(
												lv_yDefined_8_0='y'
												{
													newLeafNode(lv_yDefined_8_0, grammarAccess.getModelAccess().getYDefinedYKeyword_2_0_1_1_0_0());
												}
												{
													if ($current==null) {
														$current = createModelElement(grammarAccess.getModelRule());
													}
													setWithLastConsumed($current, "yDefined", true, "y");
												}
											)
										)
										otherlv_9='='
										{
											newLeafNode(otherlv_9, grammarAccess.getModelAccess().getEqualsSignKeyword_2_0_1_1_1());
										}
										(
											(
												{
													newCompositeNode(grammarAccess.getModelAccess().getYLONGParserRuleCall_2_0_1_1_2_0());
												}
												lv_y_10_0=ruleLONG
												{
													if ($current==null) {
														$current = createModelElementForParent(grammarAccess.getModelRule());
													}
													set(
														$current,
														"y",
														lv_y_10_0,
														"com.raptor.mcblockstate.Mcblockstate.LONG");
													afterParserOrEnumRuleCall();
												}
											)
										)
										))
							{ 
								getUnorderedGroupHelper().returnFromSelection(grammarAccess.getModelAccess().getUnorderedGroup_2_0_1());
							}
						)
					)|
					(
						{getUnorderedGroupHelper().canSelect(grammarAccess.getModelAccess().getUnorderedGroup_2_0_1(), 2)}?=>(
							{
								getUnorderedGroupHelper().select(grammarAccess.getModelAccess().getUnorderedGroup_2_0_1(), 2);
							}
										({true}?=>((
											(
												lv_uvlockDefined_11_0='uvlock'
												{
													newLeafNode(lv_uvlockDefined_11_0, grammarAccess.getModelAccess().getUvlockDefinedUvlockKeyword_2_0_1_2_0_0());
												}
												{
													if ($current==null) {
														$current = createModelElement(grammarAccess.getModelRule());
													}
													setWithLastConsumed($current, "uvlockDefined", true, "uvlock");
												}
											)
										)
										otherlv_12='='
										{
											newLeafNode(otherlv_12, grammarAccess.getModelAccess().getEqualsSignKeyword_2_0_1_2_1());
										}
										(
											(
												(
													lv_uvlock_13_0='true'
													{
														newLeafNode(lv_uvlock_13_0, grammarAccess.getModelAccess().getUvlockTrueKeyword_2_0_1_2_2_0_0());
													}
													{
														if ($current==null) {
															$current = createModelElement(grammarAccess.getModelRule());
														}
														setWithLastConsumed($current, "uvlock", true, "true");
													}
												)
											)
											    |
											otherlv_14='false'
											{
												newLeafNode(otherlv_14, grammarAccess.getModelAccess().getFalseKeyword_2_0_1_2_2_1());
											}
										)
										))
							{ 
								getUnorderedGroupHelper().returnFromSelection(grammarAccess.getModelAccess().getUnorderedGroup_2_0_1());
							}
						)
					)
							)*
						)
					)
						{ 
						  getUnorderedGroupHelper().leave(grammarAccess.getModelAccess().getUnorderedGroup_2_0_1());
						}
				)
				otherlv_15=')'
				{
					newLeafNode(otherlv_15, grammarAccess.getModelAccess().getRightParenthesisKeyword_2_0_2());
				}
			)
		)?
	)
;

// Entry rule entryRuleMCJsonValue
entryRuleMCJsonValue returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMCJsonValueRule()); }
	iv_ruleMCJsonValue=ruleMCJsonValue
	{ $current=$iv_ruleMCJsonValue.current; }
	EOF;

// Rule MCJsonValue
ruleMCJsonValue returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getMCJsonValueAccess().getMCJsonObjectParserRuleCall_0());
		}
		this_MCJsonObject_0=ruleMCJsonObject
		{
			$current = $this_MCJsonObject_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getMCJsonValueAccess().getMCJsonArrayParserRuleCall_1());
		}
		this_MCJsonArray_1=ruleMCJsonArray
		{
			$current = $this_MCJsonArray_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getMCJsonValueAccess().getMCJsonStringParserRuleCall_2());
		}
		this_MCJsonString_2=ruleMCJsonString
		{
			$current = $this_MCJsonString_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getMCJsonValueAccess().getMCJsonNumberParserRuleCall_3());
		}
		this_MCJsonNumber_3=ruleMCJsonNumber
		{
			$current = $this_MCJsonNumber_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getMCJsonValueAccess().getMCJsonBooleanParserRuleCall_4());
		}
		this_MCJsonBoolean_4=ruleMCJsonBoolean
		{
			$current = $this_MCJsonBoolean_4.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getMCJsonValueAccess().getMCJsonNullParserRuleCall_5());
		}
		this_MCJsonNull_5=ruleMCJsonNull
		{
			$current = $this_MCJsonNull_5.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleMCJsonObject
entryRuleMCJsonObject returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMCJsonObjectRule()); }
	iv_ruleMCJsonObject=ruleMCJsonObject
	{ $current=$iv_ruleMCJsonObject.current; }
	EOF;

// Rule MCJsonObject
ruleMCJsonObject returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='{'
		{
			newLeafNode(otherlv_0, grammarAccess.getMCJsonObjectAccess().getLeftCurlyBracketKeyword_0());
		}
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getMCJsonObjectAccess().getMCJsonObjectAction_1(),
					$current);
			}
		)
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getMCJsonObjectAccess().getEntriesMCJsonEntryParserRuleCall_2_0_0());
					}
					lv_entries_2_0=ruleMCJsonEntry
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMCJsonObjectRule());
						}
						add(
							$current,
							"entries",
							lv_entries_2_0,
							"com.raptor.mcblockstate.Mcblockstate.MCJsonEntry");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_3=','
				{
					newLeafNode(otherlv_3, grammarAccess.getMCJsonObjectAccess().getCommaKeyword_2_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getMCJsonObjectAccess().getEntriesMCJsonEntryParserRuleCall_2_1_1_0());
						}
						lv_entries_4_0=ruleMCJsonEntry
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getMCJsonObjectRule());
							}
							add(
								$current,
								"entries",
								lv_entries_4_0,
								"com.raptor.mcblockstate.Mcblockstate.MCJsonEntry");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			(
				otherlv_5=','
				{
					newLeafNode(otherlv_5, grammarAccess.getMCJsonObjectAccess().getCommaKeyword_2_2());
				}
			)?
		)?
		otherlv_6='}'
		{
			newLeafNode(otherlv_6, grammarAccess.getMCJsonObjectAccess().getRightCurlyBracketKeyword_3());
		}
	)
;

// Entry rule entryRuleMCJsonEntry
entryRuleMCJsonEntry returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMCJsonEntryRule()); }
	iv_ruleMCJsonEntry=ruleMCJsonEntry
	{ $current=$iv_ruleMCJsonEntry.current; }
	EOF;

// Rule MCJsonEntry
ruleMCJsonEntry returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0=RULE_STRING
				{
					newLeafNode(lv_name_0_0, grammarAccess.getMCJsonEntryAccess().getNameSTRINGTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMCJsonEntryRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_0_0,
						"com.raptor.mcblockstate.Mcblockstate.STRING");
				}
			)
		)
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getMCJsonEntryAccess().getColonKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getMCJsonEntryAccess().getValueMCJsonValueParserRuleCall_2_0());
				}
				lv_value_2_0=ruleMCJsonValue
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMCJsonEntryRule());
					}
					set(
						$current,
						"value",
						lv_value_2_0,
						"com.raptor.mcblockstate.Mcblockstate.MCJsonValue");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleMCJsonArray
entryRuleMCJsonArray returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMCJsonArrayRule()); }
	iv_ruleMCJsonArray=ruleMCJsonArray
	{ $current=$iv_ruleMCJsonArray.current; }
	EOF;

// Rule MCJsonArray
ruleMCJsonArray returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='['
		{
			newLeafNode(otherlv_0, grammarAccess.getMCJsonArrayAccess().getLeftSquareBracketKeyword_0());
		}
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getMCJsonArrayAccess().getMCJsonArrayAction_1(),
					$current);
			}
		)
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getMCJsonArrayAccess().getElementsMCJsonValueParserRuleCall_2_0_0());
					}
					lv_elements_2_0=ruleMCJsonValue
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMCJsonArrayRule());
						}
						add(
							$current,
							"elements",
							lv_elements_2_0,
							"com.raptor.mcblockstate.Mcblockstate.MCJsonValue");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_3=','
				{
					newLeafNode(otherlv_3, grammarAccess.getMCJsonArrayAccess().getCommaKeyword_2_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getMCJsonArrayAccess().getElementsMCJsonValueParserRuleCall_2_1_1_0());
						}
						lv_elements_4_0=ruleMCJsonValue
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getMCJsonArrayRule());
							}
							add(
								$current,
								"elements",
								lv_elements_4_0,
								"com.raptor.mcblockstate.Mcblockstate.MCJsonValue");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			(
				otherlv_5=','
				{
					newLeafNode(otherlv_5, grammarAccess.getMCJsonArrayAccess().getCommaKeyword_2_2());
				}
			)?
		)?
		otherlv_6=']'
		{
			newLeafNode(otherlv_6, grammarAccess.getMCJsonArrayAccess().getRightSquareBracketKeyword_3());
		}
	)
;

// Entry rule entryRuleMCJsonString
entryRuleMCJsonString returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMCJsonStringRule()); }
	iv_ruleMCJsonString=ruleMCJsonString
	{ $current=$iv_ruleMCJsonString.current; }
	EOF;

// Rule MCJsonString
ruleMCJsonString returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_value_0_0=RULE_STRING
			{
				newLeafNode(lv_value_0_0, grammarAccess.getMCJsonStringAccess().getValueSTRINGTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getMCJsonStringRule());
				}
				setWithLastConsumed(
					$current,
					"value",
					lv_value_0_0,
					"com.raptor.mcblockstate.Mcblockstate.STRING");
			}
		)
	)
;

// Entry rule entryRuleMCJsonNumber
entryRuleMCJsonNumber returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMCJsonNumberRule()); }
	iv_ruleMCJsonNumber=ruleMCJsonNumber
	{ $current=$iv_ruleMCJsonNumber.current; }
	EOF;

// Rule MCJsonNumber
ruleMCJsonNumber returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getMCJsonNumberAccess().getMCJsonIntegralParserRuleCall_0());
		}
		this_MCJsonIntegral_0=ruleMCJsonIntegral
		{
			$current = $this_MCJsonIntegral_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getMCJsonNumberAccess().getMCJsonFloatingPointParserRuleCall_1());
		}
		this_MCJsonFloatingPoint_1=ruleMCJsonFloatingPoint
		{
			$current = $this_MCJsonFloatingPoint_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleMCJsonIntegral
entryRuleMCJsonIntegral returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMCJsonIntegralRule()); }
	iv_ruleMCJsonIntegral=ruleMCJsonIntegral
	{ $current=$iv_ruleMCJsonIntegral.current; }
	EOF;

// Rule MCJsonIntegral
ruleMCJsonIntegral returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getMCJsonIntegralAccess().getValueLONGParserRuleCall_0());
			}
			lv_value_0_0=ruleLONG
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getMCJsonIntegralRule());
				}
				set(
					$current,
					"value",
					lv_value_0_0,
					"com.raptor.mcblockstate.Mcblockstate.LONG");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleMCJsonFloatingPoint
entryRuleMCJsonFloatingPoint returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMCJsonFloatingPointRule()); }
	iv_ruleMCJsonFloatingPoint=ruleMCJsonFloatingPoint
	{ $current=$iv_ruleMCJsonFloatingPoint.current; }
	EOF;

// Rule MCJsonFloatingPoint
ruleMCJsonFloatingPoint returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_value_0_0=RULE_DOUBLE
			{
				newLeafNode(lv_value_0_0, grammarAccess.getMCJsonFloatingPointAccess().getValueDOUBLETerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getMCJsonFloatingPointRule());
				}
				setWithLastConsumed(
					$current,
					"value",
					lv_value_0_0,
					"com.raptor.mcblockstate.Mcblockstate.DOUBLE");
			}
		)
	)
;

// Entry rule entryRuleMCJsonBoolean
entryRuleMCJsonBoolean returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMCJsonBooleanRule()); }
	iv_ruleMCJsonBoolean=ruleMCJsonBoolean
	{ $current=$iv_ruleMCJsonBoolean.current; }
	EOF;

// Rule MCJsonBoolean
ruleMCJsonBoolean returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_value_0_0='true'
				{
					newLeafNode(lv_value_0_0, grammarAccess.getMCJsonBooleanAccess().getValueTrueKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMCJsonBooleanRule());
					}
					setWithLastConsumed($current, "value", true, "true");
				}
			)
		)
		    |
		(
			otherlv_1='false'
			{
				newLeafNode(otherlv_1, grammarAccess.getMCJsonBooleanAccess().getFalseKeyword_1_0());
			}
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getMCJsonBooleanAccess().getMCJsonBooleanAction_1_1(),
						$current);
				}
			)
		)
	)
;

// Entry rule entryRuleMCJsonNull
entryRuleMCJsonNull returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMCJsonNullRule()); }
	iv_ruleMCJsonNull=ruleMCJsonNull
	{ $current=$iv_ruleMCJsonNull.current; }
	EOF;

// Rule MCJsonNull
ruleMCJsonNull returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='null'
		{
			newLeafNode(otherlv_0, grammarAccess.getMCJsonNullAccess().getNullKeyword_0());
		}
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getMCJsonNullAccess().getMCJsonNullAction_1(),
					$current);
			}
		)
	)
;

// Entry rule entryRuleNamespacedLocation
entryRuleNamespacedLocation returns [String current=null]@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}:
	{ newCompositeNode(grammarAccess.getNamespacedLocationRule()); }
	iv_ruleNamespacedLocation=ruleNamespacedLocation
	{ $current=$iv_ruleNamespacedLocation.current.getText(); }
	EOF;
finally {
	myHiddenTokenState.restore();
}

// Rule NamespacedLocation
ruleNamespacedLocation returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getNamespacedLocationAccess().getKeyParserRuleCall_0());
		}
		this_Key_0=ruleKey
		{
			$current.merge(this_Key_0);
		}
		{
			afterParserOrEnumRuleCall();
		}
		(
			(':')=>
			(
				kw=':'
				{
					$current.merge(kw);
					newLeafNode(kw, grammarAccess.getNamespacedLocationAccess().getColonKeyword_1_0_0());
				}
				{
					newCompositeNode(grammarAccess.getNamespacedLocationAccess().getKeyParserRuleCall_1_0_1());
				}
				this_Key_2=ruleKey
				{
					$current.merge(this_Key_2);
				}
				{
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			('/')=>
			(
				kw='/'
				{
					$current.merge(kw);
					newLeafNode(kw, grammarAccess.getNamespacedLocationAccess().getSolidusKeyword_2_0_0());
				}
				{
					newCompositeNode(grammarAccess.getNamespacedLocationAccess().getKeyParserRuleCall_2_0_1());
				}
				this_Key_4=ruleKey
				{
					$current.merge(this_Key_4);
				}
				{
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;
finally {
	myHiddenTokenState.restore();
}

// Entry rule entryRuleKey
entryRuleKey returns [String current=null]@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}:
	{ newCompositeNode(grammarAccess.getKeyRule()); }
	iv_ruleKey=ruleKey
	{ $current=$iv_ruleKey.current.getText(); }
	EOF;
finally {
	myHiddenTokenState.restore();
}

// Rule Key
ruleKey returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getKeyAccess().getIdentifierParserRuleCall_0());
		}
		this_Identifier_0=ruleIdentifier
		{
			$current.merge(this_Identifier_0);
		}
		{
			afterParserOrEnumRuleCall();
		}
		(
			kw='.'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getKeyAccess().getFullStopKeyword_1_0());
			}
			{
				newCompositeNode(grammarAccess.getKeyAccess().getIdentifierParserRuleCall_1_1());
			}
			this_Identifier_2=ruleIdentifier
			{
				$current.merge(this_Identifier_2);
			}
			{
				afterParserOrEnumRuleCall();
			}
		)*
	)
;
finally {
	myHiddenTokenState.restore();
}

// Entry rule entryRuleIdentifier
entryRuleIdentifier returns [String current=null]@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}:
	{ newCompositeNode(grammarAccess.getIdentifierRule()); }
	iv_ruleIdentifier=ruleIdentifier
	{ $current=$iv_ruleIdentifier.current.getText(); }
	EOF;
finally {
	myHiddenTokenState.restore();
}

// Rule Identifier
ruleIdentifier returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}
@after {
	leaveRule();
}:
	(
		this_ID_0=RULE_ID
		{
			$current.merge(this_ID_0);
		}
		{
			newLeafNode(this_ID_0, grammarAccess.getIdentifierAccess().getIDTerminalRuleCall_0());
		}
		    |
		{
			newCompositeNode(grammarAccess.getIdentifierAccess().getKeywordParserRuleCall_1());
		}
		this_Keyword_1=ruleKeyword
		{
			$current.merge(this_Keyword_1);
		}
		{
			afterParserOrEnumRuleCall();
		}
	)
;
finally {
	myHiddenTokenState.restore();
}

// Entry rule entryRuleKeyword
entryRuleKeyword returns [String current=null]:
	{ newCompositeNode(grammarAccess.getKeywordRule()); }
	iv_ruleKeyword=ruleKeyword
	{ $current=$iv_ruleKeyword.current.getText(); }
	EOF;

// Rule Keyword
ruleKeyword returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='apply'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getKeywordAccess().getApplyKeyword_0());
		}
		    |
		kw='false'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getKeywordAccess().getFalseKeyword_1());
		}
		    |
		kw='multipart'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getKeywordAccess().getMultipartKeyword_2());
		}
		    |
		kw='null'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getKeywordAccess().getNullKeyword_3());
		}
		    |
		kw='true'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getKeywordAccess().getTrueKeyword_4());
		}
		    |
		kw='uvlock'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getKeywordAccess().getUvlockKeyword_5());
		}
		    |
		kw='variants'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getKeywordAccess().getVariantsKeyword_6());
		}
		    |
		kw='when'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getKeywordAccess().getWhenKeyword_7());
		}
	)
;

// Entry rule entryRuleLONG
entryRuleLONG returns [String current=null]:
	{ newCompositeNode(grammarAccess.getLONGRule()); }
	iv_ruleLONG=ruleLONG
	{ $current=$iv_ruleLONG.current.getText(); }
	EOF;

// Rule LONG
ruleLONG returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_ULONG_0=RULE_ULONG
		{
			$current.merge(this_ULONG_0);
		}
		{
			newLeafNode(this_ULONG_0, grammarAccess.getLONGAccess().getULONGTerminalRuleCall_0());
		}
		    |
		this_SLONG_1=RULE_SLONG
		{
			$current.merge(this_SLONG_1);
		}
		{
			newLeafNode(this_SLONG_1, grammarAccess.getLONGAccess().getSLONGTerminalRuleCall_1());
		}
	)
;

fragment RULE_SIGN : ('+'|'-');

fragment RULE_DIGITS : ('0'..'9')+;

fragment RULE_EXPONENT : ('e'|'E') RULE_SIGN? RULE_DIGITS;

RULE_DOUBLE : RULE_SIGN? ('.' RULE_DIGITS RULE_EXPONENT?|RULE_DIGITS ('.' RULE_DIGITS RULE_EXPONENT?|RULE_EXPONENT));

RULE_ULONG : RULE_DIGITS;

RULE_SLONG : RULE_SIGN RULE_DIGITS;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ID : ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
