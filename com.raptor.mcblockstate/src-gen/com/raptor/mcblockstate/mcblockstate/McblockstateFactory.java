/**
 * generated by Xtext 2.21.0
 */
package com.raptor.mcblockstate.mcblockstate;

import org.eclipse.emf.ecore.EFactory;

/**
 * <!-- begin-user-doc -->
 * The <b>Factory</b> for the model.
 * It provides a create method for each non-abstract class of the model.
 * <!-- end-user-doc -->
 * @see com.raptor.mcblockstate.mcblockstate.McblockstatePackage
 * @generated
 */
public interface McblockstateFactory extends EFactory
{
  /**
   * The singleton instance of the factory.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  McblockstateFactory eINSTANCE = com.raptor.mcblockstate.mcblockstate.impl.McblockstateFactoryImpl.init();

  /**
   * Returns a new object of class '<em>Blockstate</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Blockstate</em>'.
   * @generated
   */
  Blockstate createBlockstate();

  /**
   * Returns a new object of class '<em>Variants Blockstate</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Variants Blockstate</em>'.
   * @generated
   */
  VariantsBlockstate createVariantsBlockstate();

  /**
   * Returns a new object of class '<em>Variant</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Variant</em>'.
   * @generated
   */
  Variant createVariant();

  /**
   * Returns a new object of class '<em>Blockstate Property</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Blockstate Property</em>'.
   * @generated
   */
  BlockstateProperty createBlockstateProperty();

  /**
   * Returns a new object of class '<em>Multipart Blockstate</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Multipart Blockstate</em>'.
   * @generated
   */
  MultipartBlockstate createMultipartBlockstate();

  /**
   * Returns a new object of class '<em>Case</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Case</em>'.
   * @generated
   */
  Case createCase();

  /**
   * Returns a new object of class '<em>Case Condition</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Case Condition</em>'.
   * @generated
   */
  CaseCondition createCaseCondition();

  /**
   * Returns a new object of class '<em>Blockstate Property Predicate</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Blockstate Property Predicate</em>'.
   * @generated
   */
  BlockstatePropertyPredicate createBlockstatePropertyPredicate();

  /**
   * Returns a new object of class '<em>Custom Blockstate</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Custom Blockstate</em>'.
   * @generated
   */
  CustomBlockstate createCustomBlockstate();

  /**
   * Returns a new object of class '<em>Model List</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Model List</em>'.
   * @generated
   */
  ModelList createModelList();

  /**
   * Returns a new object of class '<em>Model</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Model</em>'.
   * @generated
   */
  Model createModel();

  /**
   * Returns a new object of class '<em>MC Json Value</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>MC Json Value</em>'.
   * @generated
   */
  MCJsonValue createMCJsonValue();

  /**
   * Returns a new object of class '<em>MC Json Object</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>MC Json Object</em>'.
   * @generated
   */
  MCJsonObject createMCJsonObject();

  /**
   * Returns a new object of class '<em>MC Json Entry</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>MC Json Entry</em>'.
   * @generated
   */
  MCJsonEntry createMCJsonEntry();

  /**
   * Returns a new object of class '<em>MC Json Array</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>MC Json Array</em>'.
   * @generated
   */
  MCJsonArray createMCJsonArray();

  /**
   * Returns a new object of class '<em>MC Json String</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>MC Json String</em>'.
   * @generated
   */
  MCJsonString createMCJsonString();

  /**
   * Returns a new object of class '<em>MC Json Number</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>MC Json Number</em>'.
   * @generated
   */
  MCJsonNumber createMCJsonNumber();

  /**
   * Returns a new object of class '<em>MC Json Integral</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>MC Json Integral</em>'.
   * @generated
   */
  MCJsonIntegral createMCJsonIntegral();

  /**
   * Returns a new object of class '<em>MC Json Floating Point</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>MC Json Floating Point</em>'.
   * @generated
   */
  MCJsonFloatingPoint createMCJsonFloatingPoint();

  /**
   * Returns a new object of class '<em>MC Json Boolean</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>MC Json Boolean</em>'.
   * @generated
   */
  MCJsonBoolean createMCJsonBoolean();

  /**
   * Returns a new object of class '<em>MC Json Null</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>MC Json Null</em>'.
   * @generated
   */
  MCJsonNull createMCJsonNull();

  /**
   * Returns a new object of class '<em>Or Case Condition</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Or Case Condition</em>'.
   * @generated
   */
  OrCaseCondition createOrCaseCondition();

  /**
   * Returns a new object of class '<em>Base Case Condition</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Base Case Condition</em>'.
   * @generated
   */
  BaseCaseCondition createBaseCaseCondition();

  /**
   * Returns a new object of class '<em>Normal Blockstate Property Predicate</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Normal Blockstate Property Predicate</em>'.
   * @generated
   */
  NormalBlockstatePropertyPredicate createNormalBlockstatePropertyPredicate();

  /**
   * Returns a new object of class '<em>Boolean Blockstate Property Predicate</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Boolean Blockstate Property Predicate</em>'.
   * @generated
   */
  BooleanBlockstatePropertyPredicate createBooleanBlockstatePropertyPredicate();

  /**
   * Returns the package supported by this factory.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the package supported by this factory.
   * @generated
   */
  McblockstatePackage getMcblockstatePackage();

} //McblockstateFactory
