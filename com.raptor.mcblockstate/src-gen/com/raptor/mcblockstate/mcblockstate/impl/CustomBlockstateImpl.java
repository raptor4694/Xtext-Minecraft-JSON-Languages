/**
 * generated by Xtext 2.21.0
 */
package com.raptor.mcblockstate.mcblockstate.impl;

import com.raptor.mcblockstate.mcblockstate.CustomBlockstate;
import com.raptor.mcblockstate.mcblockstate.MCJsonObject;
import com.raptor.mcblockstate.mcblockstate.McblockstatePackage;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Custom Blockstate</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link com.raptor.mcblockstate.mcblockstate.impl.CustomBlockstateImpl#getJson <em>Json</em>}</li>
 * </ul>
 *
 * @generated
 */
public class CustomBlockstateImpl extends BlockstateImpl implements CustomBlockstate
{
  /**
   * The cached value of the '{@link #getJson() <em>Json</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getJson()
   * @generated
   * @ordered
   */
  protected MCJsonObject json;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected CustomBlockstateImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return McblockstatePackage.Literals.CUSTOM_BLOCKSTATE;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public MCJsonObject getJson()
  {
    return json;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetJson(MCJsonObject newJson, NotificationChain msgs)
  {
    MCJsonObject oldJson = json;
    json = newJson;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, McblockstatePackage.CUSTOM_BLOCKSTATE__JSON, oldJson, newJson);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setJson(MCJsonObject newJson)
  {
    if (newJson != json)
    {
      NotificationChain msgs = null;
      if (json != null)
        msgs = ((InternalEObject)json).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - McblockstatePackage.CUSTOM_BLOCKSTATE__JSON, null, msgs);
      if (newJson != null)
        msgs = ((InternalEObject)newJson).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - McblockstatePackage.CUSTOM_BLOCKSTATE__JSON, null, msgs);
      msgs = basicSetJson(newJson, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, McblockstatePackage.CUSTOM_BLOCKSTATE__JSON, newJson, newJson));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case McblockstatePackage.CUSTOM_BLOCKSTATE__JSON:
        return basicSetJson(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case McblockstatePackage.CUSTOM_BLOCKSTATE__JSON:
        return getJson();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case McblockstatePackage.CUSTOM_BLOCKSTATE__JSON:
        setJson((MCJsonObject)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case McblockstatePackage.CUSTOM_BLOCKSTATE__JSON:
        setJson((MCJsonObject)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case McblockstatePackage.CUSTOM_BLOCKSTATE__JSON:
        return json != null;
    }
    return super.eIsSet(featureID);
  }

} //CustomBlockstateImpl
