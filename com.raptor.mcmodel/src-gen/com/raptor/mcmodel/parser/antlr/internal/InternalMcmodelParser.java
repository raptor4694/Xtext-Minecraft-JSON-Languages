package com.raptor.mcmodel.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import com.raptor.mcmodel.services.McmodelGrammarAccess;



import org.antlr.runtime.*;
import java.util.Stack;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
@SuppressWarnings("all")
public class InternalMcmodelParser extends AbstractInternalAntlrParser {
    public static final String[] tokenNames = new String[] {
        "<invalid>", "<EOR>", "<DOWN>", "<UP>", "RULE_WS", "RULE_PERCENTAGE", "RULE_STRING", "RULE_DOUBLE", "RULE_ID", "RULE_ULONG", "RULE_SLONG", "RULE_SIGN", "RULE_DIGITS", "RULE_EXPONENT", "RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_ANY_OTHER", "'parent'", "'='", "'ambientocclusion'", "'true'", "'false'", "'display'", "'textures'", "'{'", "'}'", "'elements'", "'gui_light'", "'overrides'", "'#'", "'from'", "'to'", "'rotation'", "'faces'", "'default'", "'shade'", "'origin'", "'axis'", "'angle'", "'rescale'", "','", "'@'", "'('", "'cullface'", "'tintindex'", "')'", "'thirdperson_righthand'", "'thirdperson_lefthand'", "'firstperson_righthand'", "'firstperson_lefthand'", "'gui'", "'head'", "'ground'", "'fixed'", "'translation'", "'scale'", "'apply'", "'when'", "'=='", "'&'", "'!'", "'blocking'", "'!='", "'broken'", "'cast'", "'cooldown'", "'damage'", "'damaged'", "'lefthanded'", "'pull'", "'pulling'", "'throwing'", "'time'", "'custom_model_data'", "':'", "'['", "']'", "'null'", "'/'", "'.'", "'down'", "'east'", "'front'", "'north'", "'side'", "'south'", "'west'", "'x'", "'y'", "'z'", "'up'"
    };
    public static final int T__50=50;
    public static final int T__90=90;
    public static final int RULE_SIGN=11;
    public static final int T__19=19;
    public static final int T__59=59;
    public static final int T__17=17;
    public static final int T__18=18;
    public static final int T__55=55;
    public static final int T__56=56;
    public static final int T__57=57;
    public static final int T__58=58;
    public static final int T__51=51;
    public static final int T__52=52;
    public static final int T__53=53;
    public static final int T__54=54;
    public static final int T__60=60;
    public static final int T__61=61;
    public static final int RULE_ID=8;
    public static final int T__26=26;
    public static final int RULE_PERCENTAGE=5;
    public static final int RULE_SLONG=10;
    public static final int T__27=27;
    public static final int T__28=28;
    public static final int T__29=29;
    public static final int T__22=22;
    public static final int T__66=66;
    public static final int RULE_ML_COMMENT=14;
    public static final int T__23=23;
    public static final int T__67=67;
    public static final int T__24=24;
    public static final int T__68=68;
    public static final int T__25=25;
    public static final int T__69=69;
    public static final int T__62=62;
    public static final int T__63=63;
    public static final int T__20=20;
    public static final int T__64=64;
    public static final int T__21=21;
    public static final int T__65=65;
    public static final int T__70=70;
    public static final int T__71=71;
    public static final int T__72=72;
    public static final int RULE_STRING=6;
    public static final int RULE_DIGITS=12;
    public static final int RULE_SL_COMMENT=15;
    public static final int T__37=37;
    public static final int RULE_DOUBLE=7;
    public static final int T__38=38;
    public static final int T__39=39;
    public static final int T__33=33;
    public static final int T__77=77;
    public static final int T__34=34;
    public static final int T__78=78;
    public static final int T__35=35;
    public static final int T__79=79;
    public static final int RULE_ULONG=9;
    public static final int T__36=36;
    public static final int T__73=73;
    public static final int EOF=-1;
    public static final int T__30=30;
    public static final int T__74=74;
    public static final int T__31=31;
    public static final int T__75=75;
    public static final int T__32=32;
    public static final int T__76=76;
    public static final int T__80=80;
    public static final int T__81=81;
    public static final int T__82=82;
    public static final int T__83=83;
    public static final int RULE_WS=4;
    public static final int RULE_ANY_OTHER=16;
    public static final int RULE_EXPONENT=13;
    public static final int T__48=48;
    public static final int T__49=49;
    public static final int T__44=44;
    public static final int T__88=88;
    public static final int T__45=45;
    public static final int T__89=89;
    public static final int T__46=46;
    public static final int T__47=47;
    public static final int T__40=40;
    public static final int T__84=84;
    public static final int T__41=41;
    public static final int T__85=85;
    public static final int T__42=42;
    public static final int T__86=86;
    public static final int T__43=43;
    public static final int T__87=87;

    // delegates
    // delegators


        public InternalMcmodelParser(TokenStream input) {
            this(input, new RecognizerSharedState());
        }
        public InternalMcmodelParser(TokenStream input, RecognizerSharedState state) {
            super(input, state);
             
        }
        

    public String[] getTokenNames() { return InternalMcmodelParser.tokenNames; }
    public String getGrammarFileName() { return "InternalMcmodel.g"; }



     	private McmodelGrammarAccess grammarAccess;

        public InternalMcmodelParser(TokenStream input, McmodelGrammarAccess grammarAccess) {
            this(input);
            this.grammarAccess = grammarAccess;
            registerRules(grammarAccess.getGrammar());
        }

        @Override
        protected String getFirstRuleName() {
        	return "Model";
       	}

       	@Override
       	protected McmodelGrammarAccess getGrammarAccess() {
       		return grammarAccess;
       	}




    // $ANTLR start "entryRuleModel"
    // InternalMcmodel.g:65:1: entryRuleModel returns [EObject current=null] : iv_ruleModel= ruleModel EOF ;
    public final EObject entryRuleModel() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleModel = null;


        try {
            // InternalMcmodel.g:65:46: (iv_ruleModel= ruleModel EOF )
            // InternalMcmodel.g:66:2: iv_ruleModel= ruleModel EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getModelRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleModel=ruleModel();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleModel; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleModel"


    // $ANTLR start "ruleModel"
    // InternalMcmodel.g:72:1: ruleModel returns [EObject current=null] : ( () ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'parent' otherlv_3= '=' ( (lv_parent_4_0= ruleNamespacedLocation ) ) (this_WS_5= RULE_WS )? ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_ambientocclusionDefined_6_0= 'ambientocclusion' ) ) otherlv_7= '=' ( ( (lv_ambientocclusion_8_0= 'true' ) ) | otherlv_9= 'false' ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_displayDefined_10_0= 'display' ) ) ( (lv_display_11_0= ruleDisplay ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_texturesDefined_12_0= 'textures' ) ) otherlv_13= '{' ( (lv_textures_14_0= ruleTexture ) )* otherlv_15= '}' ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_elementsDefined_16_0= 'elements' ) ) otherlv_17= '{' ( (lv_elements_18_0= ruleElement ) )* otherlv_19= '}' ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_guiLightDefined_20_0= 'gui_light' ) ) otherlv_21= '=' ( (lv_guiLight_22_0= ruleEnumGuiLight ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_overridesDefined_23_0= 'overrides' ) ) otherlv_24= '{' ( (lv_overrides_25_0= ruleItemOverride ) )* otherlv_26= '}' ) ) ) ) )* ) ) ) ) ;
    public final EObject ruleModel() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token otherlv_3=null;
        Token this_WS_5=null;
        Token lv_ambientocclusionDefined_6_0=null;
        Token otherlv_7=null;
        Token lv_ambientocclusion_8_0=null;
        Token otherlv_9=null;
        Token lv_displayDefined_10_0=null;
        Token lv_texturesDefined_12_0=null;
        Token otherlv_13=null;
        Token otherlv_15=null;
        Token lv_elementsDefined_16_0=null;
        Token otherlv_17=null;
        Token otherlv_19=null;
        Token lv_guiLightDefined_20_0=null;
        Token otherlv_21=null;
        Token lv_overridesDefined_23_0=null;
        Token otherlv_24=null;
        Token otherlv_26=null;
        AntlrDatatypeRuleToken lv_parent_4_0 = null;

        EObject lv_display_11_0 = null;

        EObject lv_textures_14_0 = null;

        EObject lv_elements_18_0 = null;

        Enumerator lv_guiLight_22_0 = null;

        EObject lv_overrides_25_0 = null;



        	enterRule();

        try {
            // InternalMcmodel.g:78:2: ( ( () ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'parent' otherlv_3= '=' ( (lv_parent_4_0= ruleNamespacedLocation ) ) (this_WS_5= RULE_WS )? ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_ambientocclusionDefined_6_0= 'ambientocclusion' ) ) otherlv_7= '=' ( ( (lv_ambientocclusion_8_0= 'true' ) ) | otherlv_9= 'false' ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_displayDefined_10_0= 'display' ) ) ( (lv_display_11_0= ruleDisplay ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_texturesDefined_12_0= 'textures' ) ) otherlv_13= '{' ( (lv_textures_14_0= ruleTexture ) )* otherlv_15= '}' ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_elementsDefined_16_0= 'elements' ) ) otherlv_17= '{' ( (lv_elements_18_0= ruleElement ) )* otherlv_19= '}' ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_guiLightDefined_20_0= 'gui_light' ) ) otherlv_21= '=' ( (lv_guiLight_22_0= ruleEnumGuiLight ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_overridesDefined_23_0= 'overrides' ) ) otherlv_24= '{' ( (lv_overrides_25_0= ruleItemOverride ) )* otherlv_26= '}' ) ) ) ) )* ) ) ) ) )
            // InternalMcmodel.g:79:2: ( () ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'parent' otherlv_3= '=' ( (lv_parent_4_0= ruleNamespacedLocation ) ) (this_WS_5= RULE_WS )? ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_ambientocclusionDefined_6_0= 'ambientocclusion' ) ) otherlv_7= '=' ( ( (lv_ambientocclusion_8_0= 'true' ) ) | otherlv_9= 'false' ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_displayDefined_10_0= 'display' ) ) ( (lv_display_11_0= ruleDisplay ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_texturesDefined_12_0= 'textures' ) ) otherlv_13= '{' ( (lv_textures_14_0= ruleTexture ) )* otherlv_15= '}' ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_elementsDefined_16_0= 'elements' ) ) otherlv_17= '{' ( (lv_elements_18_0= ruleElement ) )* otherlv_19= '}' ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_guiLightDefined_20_0= 'gui_light' ) ) otherlv_21= '=' ( (lv_guiLight_22_0= ruleEnumGuiLight ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_overridesDefined_23_0= 'overrides' ) ) otherlv_24= '{' ( (lv_overrides_25_0= ruleItemOverride ) )* otherlv_26= '}' ) ) ) ) )* ) ) ) )
            {
            // InternalMcmodel.g:79:2: ( () ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'parent' otherlv_3= '=' ( (lv_parent_4_0= ruleNamespacedLocation ) ) (this_WS_5= RULE_WS )? ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_ambientocclusionDefined_6_0= 'ambientocclusion' ) ) otherlv_7= '=' ( ( (lv_ambientocclusion_8_0= 'true' ) ) | otherlv_9= 'false' ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_displayDefined_10_0= 'display' ) ) ( (lv_display_11_0= ruleDisplay ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_texturesDefined_12_0= 'textures' ) ) otherlv_13= '{' ( (lv_textures_14_0= ruleTexture ) )* otherlv_15= '}' ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_elementsDefined_16_0= 'elements' ) ) otherlv_17= '{' ( (lv_elements_18_0= ruleElement ) )* otherlv_19= '}' ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_guiLightDefined_20_0= 'gui_light' ) ) otherlv_21= '=' ( (lv_guiLight_22_0= ruleEnumGuiLight ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_overridesDefined_23_0= 'overrides' ) ) otherlv_24= '{' ( (lv_overrides_25_0= ruleItemOverride ) )* otherlv_26= '}' ) ) ) ) )* ) ) ) )
            // InternalMcmodel.g:80:3: () ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'parent' otherlv_3= '=' ( (lv_parent_4_0= ruleNamespacedLocation ) ) (this_WS_5= RULE_WS )? ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_ambientocclusionDefined_6_0= 'ambientocclusion' ) ) otherlv_7= '=' ( ( (lv_ambientocclusion_8_0= 'true' ) ) | otherlv_9= 'false' ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_displayDefined_10_0= 'display' ) ) ( (lv_display_11_0= ruleDisplay ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_texturesDefined_12_0= 'textures' ) ) otherlv_13= '{' ( (lv_textures_14_0= ruleTexture ) )* otherlv_15= '}' ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_elementsDefined_16_0= 'elements' ) ) otherlv_17= '{' ( (lv_elements_18_0= ruleElement ) )* otherlv_19= '}' ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_guiLightDefined_20_0= 'gui_light' ) ) otherlv_21= '=' ( (lv_guiLight_22_0= ruleEnumGuiLight ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_overridesDefined_23_0= 'overrides' ) ) otherlv_24= '{' ( (lv_overrides_25_0= ruleItemOverride ) )* otherlv_26= '}' ) ) ) ) )* ) ) )
            {
            // InternalMcmodel.g:80:3: ()
            // InternalMcmodel.g:81:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getModelAccess().getModelAction_0(),
              					current);
              			
            }

            }

            // InternalMcmodel.g:87:3: ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'parent' otherlv_3= '=' ( (lv_parent_4_0= ruleNamespacedLocation ) ) (this_WS_5= RULE_WS )? ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_ambientocclusionDefined_6_0= 'ambientocclusion' ) ) otherlv_7= '=' ( ( (lv_ambientocclusion_8_0= 'true' ) ) | otherlv_9= 'false' ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_displayDefined_10_0= 'display' ) ) ( (lv_display_11_0= ruleDisplay ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_texturesDefined_12_0= 'textures' ) ) otherlv_13= '{' ( (lv_textures_14_0= ruleTexture ) )* otherlv_15= '}' ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_elementsDefined_16_0= 'elements' ) ) otherlv_17= '{' ( (lv_elements_18_0= ruleElement ) )* otherlv_19= '}' ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_guiLightDefined_20_0= 'gui_light' ) ) otherlv_21= '=' ( (lv_guiLight_22_0= ruleEnumGuiLight ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_overridesDefined_23_0= 'overrides' ) ) otherlv_24= '{' ( (lv_overrides_25_0= ruleItemOverride ) )* otherlv_26= '}' ) ) ) ) )* ) ) )
            // InternalMcmodel.g:88:4: ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'parent' otherlv_3= '=' ( (lv_parent_4_0= ruleNamespacedLocation ) ) (this_WS_5= RULE_WS )? ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_ambientocclusionDefined_6_0= 'ambientocclusion' ) ) otherlv_7= '=' ( ( (lv_ambientocclusion_8_0= 'true' ) ) | otherlv_9= 'false' ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_displayDefined_10_0= 'display' ) ) ( (lv_display_11_0= ruleDisplay ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_texturesDefined_12_0= 'textures' ) ) otherlv_13= '{' ( (lv_textures_14_0= ruleTexture ) )* otherlv_15= '}' ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_elementsDefined_16_0= 'elements' ) ) otherlv_17= '{' ( (lv_elements_18_0= ruleElement ) )* otherlv_19= '}' ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_guiLightDefined_20_0= 'gui_light' ) ) otherlv_21= '=' ( (lv_guiLight_22_0= ruleEnumGuiLight ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_overridesDefined_23_0= 'overrides' ) ) otherlv_24= '{' ( (lv_overrides_25_0= ruleItemOverride ) )* otherlv_26= '}' ) ) ) ) )* ) )
            {
            // InternalMcmodel.g:88:4: ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'parent' otherlv_3= '=' ( (lv_parent_4_0= ruleNamespacedLocation ) ) (this_WS_5= RULE_WS )? ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_ambientocclusionDefined_6_0= 'ambientocclusion' ) ) otherlv_7= '=' ( ( (lv_ambientocclusion_8_0= 'true' ) ) | otherlv_9= 'false' ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_displayDefined_10_0= 'display' ) ) ( (lv_display_11_0= ruleDisplay ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_texturesDefined_12_0= 'textures' ) ) otherlv_13= '{' ( (lv_textures_14_0= ruleTexture ) )* otherlv_15= '}' ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_elementsDefined_16_0= 'elements' ) ) otherlv_17= '{' ( (lv_elements_18_0= ruleElement ) )* otherlv_19= '}' ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_guiLightDefined_20_0= 'gui_light' ) ) otherlv_21= '=' ( (lv_guiLight_22_0= ruleEnumGuiLight ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_overridesDefined_23_0= 'overrides' ) ) otherlv_24= '{' ( (lv_overrides_25_0= ruleItemOverride ) )* otherlv_26= '}' ) ) ) ) )* ) )
            // InternalMcmodel.g:89:5: ( ( ({...}? => ( ({...}? => (otherlv_2= 'parent' otherlv_3= '=' ( (lv_parent_4_0= ruleNamespacedLocation ) ) (this_WS_5= RULE_WS )? ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_ambientocclusionDefined_6_0= 'ambientocclusion' ) ) otherlv_7= '=' ( ( (lv_ambientocclusion_8_0= 'true' ) ) | otherlv_9= 'false' ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_displayDefined_10_0= 'display' ) ) ( (lv_display_11_0= ruleDisplay ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_texturesDefined_12_0= 'textures' ) ) otherlv_13= '{' ( (lv_textures_14_0= ruleTexture ) )* otherlv_15= '}' ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_elementsDefined_16_0= 'elements' ) ) otherlv_17= '{' ( (lv_elements_18_0= ruleElement ) )* otherlv_19= '}' ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_guiLightDefined_20_0= 'gui_light' ) ) otherlv_21= '=' ( (lv_guiLight_22_0= ruleEnumGuiLight ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_overridesDefined_23_0= 'overrides' ) ) otherlv_24= '{' ( (lv_overrides_25_0= ruleItemOverride ) )* otherlv_26= '}' ) ) ) ) )* )
            {
            getUnorderedGroupHelper().enter(grammarAccess.getModelAccess().getUnorderedGroup_1());
            // InternalMcmodel.g:92:5: ( ( ({...}? => ( ({...}? => (otherlv_2= 'parent' otherlv_3= '=' ( (lv_parent_4_0= ruleNamespacedLocation ) ) (this_WS_5= RULE_WS )? ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_ambientocclusionDefined_6_0= 'ambientocclusion' ) ) otherlv_7= '=' ( ( (lv_ambientocclusion_8_0= 'true' ) ) | otherlv_9= 'false' ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_displayDefined_10_0= 'display' ) ) ( (lv_display_11_0= ruleDisplay ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_texturesDefined_12_0= 'textures' ) ) otherlv_13= '{' ( (lv_textures_14_0= ruleTexture ) )* otherlv_15= '}' ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_elementsDefined_16_0= 'elements' ) ) otherlv_17= '{' ( (lv_elements_18_0= ruleElement ) )* otherlv_19= '}' ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_guiLightDefined_20_0= 'gui_light' ) ) otherlv_21= '=' ( (lv_guiLight_22_0= ruleEnumGuiLight ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_overridesDefined_23_0= 'overrides' ) ) otherlv_24= '{' ( (lv_overrides_25_0= ruleItemOverride ) )* otherlv_26= '}' ) ) ) ) )* )
            // InternalMcmodel.g:93:6: ( ({...}? => ( ({...}? => (otherlv_2= 'parent' otherlv_3= '=' ( (lv_parent_4_0= ruleNamespacedLocation ) ) (this_WS_5= RULE_WS )? ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_ambientocclusionDefined_6_0= 'ambientocclusion' ) ) otherlv_7= '=' ( ( (lv_ambientocclusion_8_0= 'true' ) ) | otherlv_9= 'false' ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_displayDefined_10_0= 'display' ) ) ( (lv_display_11_0= ruleDisplay ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_texturesDefined_12_0= 'textures' ) ) otherlv_13= '{' ( (lv_textures_14_0= ruleTexture ) )* otherlv_15= '}' ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_elementsDefined_16_0= 'elements' ) ) otherlv_17= '{' ( (lv_elements_18_0= ruleElement ) )* otherlv_19= '}' ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_guiLightDefined_20_0= 'gui_light' ) ) otherlv_21= '=' ( (lv_guiLight_22_0= ruleEnumGuiLight ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_overridesDefined_23_0= 'overrides' ) ) otherlv_24= '{' ( (lv_overrides_25_0= ruleItemOverride ) )* otherlv_26= '}' ) ) ) ) )*
            {
            // InternalMcmodel.g:93:6: ( ({...}? => ( ({...}? => (otherlv_2= 'parent' otherlv_3= '=' ( (lv_parent_4_0= ruleNamespacedLocation ) ) (this_WS_5= RULE_WS )? ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_ambientocclusionDefined_6_0= 'ambientocclusion' ) ) otherlv_7= '=' ( ( (lv_ambientocclusion_8_0= 'true' ) ) | otherlv_9= 'false' ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_displayDefined_10_0= 'display' ) ) ( (lv_display_11_0= ruleDisplay ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_texturesDefined_12_0= 'textures' ) ) otherlv_13= '{' ( (lv_textures_14_0= ruleTexture ) )* otherlv_15= '}' ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_elementsDefined_16_0= 'elements' ) ) otherlv_17= '{' ( (lv_elements_18_0= ruleElement ) )* otherlv_19= '}' ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_guiLightDefined_20_0= 'gui_light' ) ) otherlv_21= '=' ( (lv_guiLight_22_0= ruleEnumGuiLight ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_overridesDefined_23_0= 'overrides' ) ) otherlv_24= '{' ( (lv_overrides_25_0= ruleItemOverride ) )* otherlv_26= '}' ) ) ) ) )*
            loop6:
            do {
                int alt6=8;
                int LA6_0 = input.LA(1);

                if ( LA6_0 == 17 && getUnorderedGroupHelper().canSelect(grammarAccess.getModelAccess().getUnorderedGroup_1(), 0) ) {
                    alt6=1;
                }
                else if ( LA6_0 == 19 && getUnorderedGroupHelper().canSelect(grammarAccess.getModelAccess().getUnorderedGroup_1(), 1) ) {
                    alt6=2;
                }
                else if ( LA6_0 == 22 && getUnorderedGroupHelper().canSelect(grammarAccess.getModelAccess().getUnorderedGroup_1(), 2) ) {
                    alt6=3;
                }
                else if ( LA6_0 == 23 && getUnorderedGroupHelper().canSelect(grammarAccess.getModelAccess().getUnorderedGroup_1(), 3) ) {
                    alt6=4;
                }
                else if ( LA6_0 == 26 && getUnorderedGroupHelper().canSelect(grammarAccess.getModelAccess().getUnorderedGroup_1(), 4) ) {
                    alt6=5;
                }
                else if ( LA6_0 == 27 && getUnorderedGroupHelper().canSelect(grammarAccess.getModelAccess().getUnorderedGroup_1(), 5) ) {
                    alt6=6;
                }
                else if ( LA6_0 == 28 && getUnorderedGroupHelper().canSelect(grammarAccess.getModelAccess().getUnorderedGroup_1(), 6) ) {
                    alt6=7;
                }


                switch (alt6) {
            	case 1 :
            	    // InternalMcmodel.g:94:4: ({...}? => ( ({...}? => (otherlv_2= 'parent' otherlv_3= '=' ( (lv_parent_4_0= ruleNamespacedLocation ) ) (this_WS_5= RULE_WS )? ) ) ) )
            	    {
            	    // InternalMcmodel.g:94:4: ({...}? => ( ({...}? => (otherlv_2= 'parent' otherlv_3= '=' ( (lv_parent_4_0= ruleNamespacedLocation ) ) (this_WS_5= RULE_WS )? ) ) ) )
            	    // InternalMcmodel.g:95:5: {...}? => ( ({...}? => (otherlv_2= 'parent' otherlv_3= '=' ( (lv_parent_4_0= ruleNamespacedLocation ) ) (this_WS_5= RULE_WS )? ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getModelAccess().getUnorderedGroup_1(), 0) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleModel", "getUnorderedGroupHelper().canSelect(grammarAccess.getModelAccess().getUnorderedGroup_1(), 0)");
            	    }
            	    // InternalMcmodel.g:95:102: ( ({...}? => (otherlv_2= 'parent' otherlv_3= '=' ( (lv_parent_4_0= ruleNamespacedLocation ) ) (this_WS_5= RULE_WS )? ) ) )
            	    // InternalMcmodel.g:96:6: ({...}? => (otherlv_2= 'parent' otherlv_3= '=' ( (lv_parent_4_0= ruleNamespacedLocation ) ) (this_WS_5= RULE_WS )? ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getModelAccess().getUnorderedGroup_1(), 0);
            	    // InternalMcmodel.g:99:9: ({...}? => (otherlv_2= 'parent' otherlv_3= '=' ( (lv_parent_4_0= ruleNamespacedLocation ) ) (this_WS_5= RULE_WS )? ) )
            	    // InternalMcmodel.g:99:10: {...}? => (otherlv_2= 'parent' otherlv_3= '=' ( (lv_parent_4_0= ruleNamespacedLocation ) ) (this_WS_5= RULE_WS )? )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleModel", "true");
            	    }
            	    // InternalMcmodel.g:99:19: (otherlv_2= 'parent' otherlv_3= '=' ( (lv_parent_4_0= ruleNamespacedLocation ) ) (this_WS_5= RULE_WS )? )
            	    // InternalMcmodel.g:99:20: otherlv_2= 'parent' otherlv_3= '=' ( (lv_parent_4_0= ruleNamespacedLocation ) ) (this_WS_5= RULE_WS )?
            	    {
            	    otherlv_2=(Token)match(input,17,FOLLOW_3); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_2, grammarAccess.getModelAccess().getParentKeyword_1_0_0());
            	      								
            	    }
            	    otherlv_3=(Token)match(input,18,FOLLOW_4); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_3, grammarAccess.getModelAccess().getEqualsSignKeyword_1_0_1());
            	      								
            	    }
            	    // InternalMcmodel.g:107:9: ( (lv_parent_4_0= ruleNamespacedLocation ) )
            	    // InternalMcmodel.g:108:10: (lv_parent_4_0= ruleNamespacedLocation )
            	    {
            	    // InternalMcmodel.g:108:10: (lv_parent_4_0= ruleNamespacedLocation )
            	    // InternalMcmodel.g:109:11: lv_parent_4_0= ruleNamespacedLocation
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getModelAccess().getParentNamespacedLocationParserRuleCall_1_0_2_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_5);
            	    lv_parent_4_0=ruleNamespacedLocation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getModelRule());
            	      											}
            	      											set(
            	      												current,
            	      												"parent",
            	      												lv_parent_4_0,
            	      												"com.raptor.mcmodel.Mcmodel.NamespacedLocation");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }

            	    // InternalMcmodel.g:126:9: (this_WS_5= RULE_WS )?
            	    int alt1=2;
            	    int LA1_0 = input.LA(1);

            	    if ( (LA1_0==RULE_WS) ) {
            	        alt1=1;
            	    }
            	    switch (alt1) {
            	        case 1 :
            	            // InternalMcmodel.g:127:10: this_WS_5= RULE_WS
            	            {
            	            this_WS_5=(Token)match(input,RULE_WS,FOLLOW_6); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(this_WS_5, grammarAccess.getModelAccess().getWSTerminalRuleCall_1_0_3());
            	              									
            	            }

            	            }
            	            break;

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getModelAccess().getUnorderedGroup_1());

            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // InternalMcmodel.g:138:4: ({...}? => ( ({...}? => ( ( (lv_ambientocclusionDefined_6_0= 'ambientocclusion' ) ) otherlv_7= '=' ( ( (lv_ambientocclusion_8_0= 'true' ) ) | otherlv_9= 'false' ) ) ) ) )
            	    {
            	    // InternalMcmodel.g:138:4: ({...}? => ( ({...}? => ( ( (lv_ambientocclusionDefined_6_0= 'ambientocclusion' ) ) otherlv_7= '=' ( ( (lv_ambientocclusion_8_0= 'true' ) ) | otherlv_9= 'false' ) ) ) ) )
            	    // InternalMcmodel.g:139:5: {...}? => ( ({...}? => ( ( (lv_ambientocclusionDefined_6_0= 'ambientocclusion' ) ) otherlv_7= '=' ( ( (lv_ambientocclusion_8_0= 'true' ) ) | otherlv_9= 'false' ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getModelAccess().getUnorderedGroup_1(), 1) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleModel", "getUnorderedGroupHelper().canSelect(grammarAccess.getModelAccess().getUnorderedGroup_1(), 1)");
            	    }
            	    // InternalMcmodel.g:139:102: ( ({...}? => ( ( (lv_ambientocclusionDefined_6_0= 'ambientocclusion' ) ) otherlv_7= '=' ( ( (lv_ambientocclusion_8_0= 'true' ) ) | otherlv_9= 'false' ) ) ) )
            	    // InternalMcmodel.g:140:6: ({...}? => ( ( (lv_ambientocclusionDefined_6_0= 'ambientocclusion' ) ) otherlv_7= '=' ( ( (lv_ambientocclusion_8_0= 'true' ) ) | otherlv_9= 'false' ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getModelAccess().getUnorderedGroup_1(), 1);
            	    // InternalMcmodel.g:143:9: ({...}? => ( ( (lv_ambientocclusionDefined_6_0= 'ambientocclusion' ) ) otherlv_7= '=' ( ( (lv_ambientocclusion_8_0= 'true' ) ) | otherlv_9= 'false' ) ) )
            	    // InternalMcmodel.g:143:10: {...}? => ( ( (lv_ambientocclusionDefined_6_0= 'ambientocclusion' ) ) otherlv_7= '=' ( ( (lv_ambientocclusion_8_0= 'true' ) ) | otherlv_9= 'false' ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleModel", "true");
            	    }
            	    // InternalMcmodel.g:143:19: ( ( (lv_ambientocclusionDefined_6_0= 'ambientocclusion' ) ) otherlv_7= '=' ( ( (lv_ambientocclusion_8_0= 'true' ) ) | otherlv_9= 'false' ) )
            	    // InternalMcmodel.g:143:20: ( (lv_ambientocclusionDefined_6_0= 'ambientocclusion' ) ) otherlv_7= '=' ( ( (lv_ambientocclusion_8_0= 'true' ) ) | otherlv_9= 'false' )
            	    {
            	    // InternalMcmodel.g:143:20: ( (lv_ambientocclusionDefined_6_0= 'ambientocclusion' ) )
            	    // InternalMcmodel.g:144:10: (lv_ambientocclusionDefined_6_0= 'ambientocclusion' )
            	    {
            	    // InternalMcmodel.g:144:10: (lv_ambientocclusionDefined_6_0= 'ambientocclusion' )
            	    // InternalMcmodel.g:145:11: lv_ambientocclusionDefined_6_0= 'ambientocclusion'
            	    {
            	    lv_ambientocclusionDefined_6_0=(Token)match(input,19,FOLLOW_3); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											newLeafNode(lv_ambientocclusionDefined_6_0, grammarAccess.getModelAccess().getAmbientocclusionDefinedAmbientocclusionKeyword_1_1_0_0());
            	      										
            	    }
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElement(grammarAccess.getModelRule());
            	      											}
            	      											setWithLastConsumed(current, "ambientocclusionDefined", true, "ambientocclusion");
            	      										
            	    }

            	    }


            	    }

            	    otherlv_7=(Token)match(input,18,FOLLOW_7); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_7, grammarAccess.getModelAccess().getEqualsSignKeyword_1_1_1());
            	      								
            	    }
            	    // InternalMcmodel.g:161:9: ( ( (lv_ambientocclusion_8_0= 'true' ) ) | otherlv_9= 'false' )
            	    int alt2=2;
            	    int LA2_0 = input.LA(1);

            	    if ( (LA2_0==20) ) {
            	        alt2=1;
            	    }
            	    else if ( (LA2_0==21) ) {
            	        alt2=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 2, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt2) {
            	        case 1 :
            	            // InternalMcmodel.g:162:10: ( (lv_ambientocclusion_8_0= 'true' ) )
            	            {
            	            // InternalMcmodel.g:162:10: ( (lv_ambientocclusion_8_0= 'true' ) )
            	            // InternalMcmodel.g:163:11: (lv_ambientocclusion_8_0= 'true' )
            	            {
            	            // InternalMcmodel.g:163:11: (lv_ambientocclusion_8_0= 'true' )
            	            // InternalMcmodel.g:164:12: lv_ambientocclusion_8_0= 'true'
            	            {
            	            lv_ambientocclusion_8_0=(Token)match(input,20,FOLLOW_6); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              												newLeafNode(lv_ambientocclusion_8_0, grammarAccess.getModelAccess().getAmbientocclusionTrueKeyword_1_1_2_0_0());
            	              											
            	            }
            	            if ( state.backtracking==0 ) {

            	              												if (current==null) {
            	              													current = createModelElement(grammarAccess.getModelRule());
            	              												}
            	              												setWithLastConsumed(current, "ambientocclusion", true, "true");
            	              											
            	            }

            	            }


            	            }


            	            }
            	            break;
            	        case 2 :
            	            // InternalMcmodel.g:177:10: otherlv_9= 'false'
            	            {
            	            otherlv_9=(Token)match(input,21,FOLLOW_6); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(otherlv_9, grammarAccess.getModelAccess().getFalseKeyword_1_1_2_1());
            	              									
            	            }

            	            }
            	            break;

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getModelAccess().getUnorderedGroup_1());

            	    }


            	    }


            	    }
            	    break;
            	case 3 :
            	    // InternalMcmodel.g:188:4: ({...}? => ( ({...}? => ( ( (lv_displayDefined_10_0= 'display' ) ) ( (lv_display_11_0= ruleDisplay ) ) ) ) ) )
            	    {
            	    // InternalMcmodel.g:188:4: ({...}? => ( ({...}? => ( ( (lv_displayDefined_10_0= 'display' ) ) ( (lv_display_11_0= ruleDisplay ) ) ) ) ) )
            	    // InternalMcmodel.g:189:5: {...}? => ( ({...}? => ( ( (lv_displayDefined_10_0= 'display' ) ) ( (lv_display_11_0= ruleDisplay ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getModelAccess().getUnorderedGroup_1(), 2) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleModel", "getUnorderedGroupHelper().canSelect(grammarAccess.getModelAccess().getUnorderedGroup_1(), 2)");
            	    }
            	    // InternalMcmodel.g:189:102: ( ({...}? => ( ( (lv_displayDefined_10_0= 'display' ) ) ( (lv_display_11_0= ruleDisplay ) ) ) ) )
            	    // InternalMcmodel.g:190:6: ({...}? => ( ( (lv_displayDefined_10_0= 'display' ) ) ( (lv_display_11_0= ruleDisplay ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getModelAccess().getUnorderedGroup_1(), 2);
            	    // InternalMcmodel.g:193:9: ({...}? => ( ( (lv_displayDefined_10_0= 'display' ) ) ( (lv_display_11_0= ruleDisplay ) ) ) )
            	    // InternalMcmodel.g:193:10: {...}? => ( ( (lv_displayDefined_10_0= 'display' ) ) ( (lv_display_11_0= ruleDisplay ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleModel", "true");
            	    }
            	    // InternalMcmodel.g:193:19: ( ( (lv_displayDefined_10_0= 'display' ) ) ( (lv_display_11_0= ruleDisplay ) ) )
            	    // InternalMcmodel.g:193:20: ( (lv_displayDefined_10_0= 'display' ) ) ( (lv_display_11_0= ruleDisplay ) )
            	    {
            	    // InternalMcmodel.g:193:20: ( (lv_displayDefined_10_0= 'display' ) )
            	    // InternalMcmodel.g:194:10: (lv_displayDefined_10_0= 'display' )
            	    {
            	    // InternalMcmodel.g:194:10: (lv_displayDefined_10_0= 'display' )
            	    // InternalMcmodel.g:195:11: lv_displayDefined_10_0= 'display'
            	    {
            	    lv_displayDefined_10_0=(Token)match(input,22,FOLLOW_8); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											newLeafNode(lv_displayDefined_10_0, grammarAccess.getModelAccess().getDisplayDefinedDisplayKeyword_1_2_0_0());
            	      										
            	    }
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElement(grammarAccess.getModelRule());
            	      											}
            	      											setWithLastConsumed(current, "displayDefined", true, "display");
            	      										
            	    }

            	    }


            	    }

            	    // InternalMcmodel.g:207:9: ( (lv_display_11_0= ruleDisplay ) )
            	    // InternalMcmodel.g:208:10: (lv_display_11_0= ruleDisplay )
            	    {
            	    // InternalMcmodel.g:208:10: (lv_display_11_0= ruleDisplay )
            	    // InternalMcmodel.g:209:11: lv_display_11_0= ruleDisplay
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getModelAccess().getDisplayDisplayParserRuleCall_1_2_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_6);
            	    lv_display_11_0=ruleDisplay();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getModelRule());
            	      											}
            	      											set(
            	      												current,
            	      												"display",
            	      												lv_display_11_0,
            	      												"com.raptor.mcmodel.Mcmodel.Display");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getModelAccess().getUnorderedGroup_1());

            	    }


            	    }


            	    }
            	    break;
            	case 4 :
            	    // InternalMcmodel.g:232:4: ({...}? => ( ({...}? => ( ( (lv_texturesDefined_12_0= 'textures' ) ) otherlv_13= '{' ( (lv_textures_14_0= ruleTexture ) )* otherlv_15= '}' ) ) ) )
            	    {
            	    // InternalMcmodel.g:232:4: ({...}? => ( ({...}? => ( ( (lv_texturesDefined_12_0= 'textures' ) ) otherlv_13= '{' ( (lv_textures_14_0= ruleTexture ) )* otherlv_15= '}' ) ) ) )
            	    // InternalMcmodel.g:233:5: {...}? => ( ({...}? => ( ( (lv_texturesDefined_12_0= 'textures' ) ) otherlv_13= '{' ( (lv_textures_14_0= ruleTexture ) )* otherlv_15= '}' ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getModelAccess().getUnorderedGroup_1(), 3) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleModel", "getUnorderedGroupHelper().canSelect(grammarAccess.getModelAccess().getUnorderedGroup_1(), 3)");
            	    }
            	    // InternalMcmodel.g:233:102: ( ({...}? => ( ( (lv_texturesDefined_12_0= 'textures' ) ) otherlv_13= '{' ( (lv_textures_14_0= ruleTexture ) )* otherlv_15= '}' ) ) )
            	    // InternalMcmodel.g:234:6: ({...}? => ( ( (lv_texturesDefined_12_0= 'textures' ) ) otherlv_13= '{' ( (lv_textures_14_0= ruleTexture ) )* otherlv_15= '}' ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getModelAccess().getUnorderedGroup_1(), 3);
            	    // InternalMcmodel.g:237:9: ({...}? => ( ( (lv_texturesDefined_12_0= 'textures' ) ) otherlv_13= '{' ( (lv_textures_14_0= ruleTexture ) )* otherlv_15= '}' ) )
            	    // InternalMcmodel.g:237:10: {...}? => ( ( (lv_texturesDefined_12_0= 'textures' ) ) otherlv_13= '{' ( (lv_textures_14_0= ruleTexture ) )* otherlv_15= '}' )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleModel", "true");
            	    }
            	    // InternalMcmodel.g:237:19: ( ( (lv_texturesDefined_12_0= 'textures' ) ) otherlv_13= '{' ( (lv_textures_14_0= ruleTexture ) )* otherlv_15= '}' )
            	    // InternalMcmodel.g:237:20: ( (lv_texturesDefined_12_0= 'textures' ) ) otherlv_13= '{' ( (lv_textures_14_0= ruleTexture ) )* otherlv_15= '}'
            	    {
            	    // InternalMcmodel.g:237:20: ( (lv_texturesDefined_12_0= 'textures' ) )
            	    // InternalMcmodel.g:238:10: (lv_texturesDefined_12_0= 'textures' )
            	    {
            	    // InternalMcmodel.g:238:10: (lv_texturesDefined_12_0= 'textures' )
            	    // InternalMcmodel.g:239:11: lv_texturesDefined_12_0= 'textures'
            	    {
            	    lv_texturesDefined_12_0=(Token)match(input,23,FOLLOW_8); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											newLeafNode(lv_texturesDefined_12_0, grammarAccess.getModelAccess().getTexturesDefinedTexturesKeyword_1_3_0_0());
            	      										
            	    }
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElement(grammarAccess.getModelRule());
            	      											}
            	      											setWithLastConsumed(current, "texturesDefined", true, "textures");
            	      										
            	    }

            	    }


            	    }

            	    otherlv_13=(Token)match(input,24,FOLLOW_9); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_13, grammarAccess.getModelAccess().getLeftCurlyBracketKeyword_1_3_1());
            	      								
            	    }
            	    // InternalMcmodel.g:255:9: ( (lv_textures_14_0= ruleTexture ) )*
            	    loop3:
            	    do {
            	        int alt3=2;
            	        int LA3_0 = input.LA(1);

            	        if ( (LA3_0==RULE_ID||LA3_0==17||(LA3_0>=19 && LA3_0<=23)||(LA3_0>=26 && LA3_0<=28)||LA3_0==30||(LA3_0>=32 && LA3_0<=39)||(LA3_0>=43 && LA3_0<=44)||(LA3_0>=46 && LA3_0<=57)||LA3_0==61||(LA3_0>=63 && LA3_0<=73)||LA3_0==77||(LA3_0>=80 && LA3_0<=86)) ) {
            	            alt3=1;
            	        }


            	        switch (alt3) {
            	    	case 1 :
            	    	    // InternalMcmodel.g:256:10: (lv_textures_14_0= ruleTexture )
            	    	    {
            	    	    // InternalMcmodel.g:256:10: (lv_textures_14_0= ruleTexture )
            	    	    // InternalMcmodel.g:257:11: lv_textures_14_0= ruleTexture
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      											newCompositeNode(grammarAccess.getModelAccess().getTexturesTextureParserRuleCall_1_3_2_0());
            	    	      										
            	    	    }
            	    	    pushFollow(FOLLOW_9);
            	    	    lv_textures_14_0=ruleTexture();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      											if (current==null) {
            	    	      												current = createModelElementForParent(grammarAccess.getModelRule());
            	    	      											}
            	    	      											add(
            	    	      												current,
            	    	      												"textures",
            	    	      												lv_textures_14_0,
            	    	      												"com.raptor.mcmodel.Mcmodel.Texture");
            	    	      											afterParserOrEnumRuleCall();
            	    	      										
            	    	    }

            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop3;
            	        }
            	    } while (true);

            	    otherlv_15=(Token)match(input,25,FOLLOW_6); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_15, grammarAccess.getModelAccess().getRightCurlyBracketKeyword_1_3_3());
            	      								
            	    }

            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getModelAccess().getUnorderedGroup_1());

            	    }


            	    }


            	    }
            	    break;
            	case 5 :
            	    // InternalMcmodel.g:284:4: ({...}? => ( ({...}? => ( ( (lv_elementsDefined_16_0= 'elements' ) ) otherlv_17= '{' ( (lv_elements_18_0= ruleElement ) )* otherlv_19= '}' ) ) ) )
            	    {
            	    // InternalMcmodel.g:284:4: ({...}? => ( ({...}? => ( ( (lv_elementsDefined_16_0= 'elements' ) ) otherlv_17= '{' ( (lv_elements_18_0= ruleElement ) )* otherlv_19= '}' ) ) ) )
            	    // InternalMcmodel.g:285:5: {...}? => ( ({...}? => ( ( (lv_elementsDefined_16_0= 'elements' ) ) otherlv_17= '{' ( (lv_elements_18_0= ruleElement ) )* otherlv_19= '}' ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getModelAccess().getUnorderedGroup_1(), 4) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleModel", "getUnorderedGroupHelper().canSelect(grammarAccess.getModelAccess().getUnorderedGroup_1(), 4)");
            	    }
            	    // InternalMcmodel.g:285:102: ( ({...}? => ( ( (lv_elementsDefined_16_0= 'elements' ) ) otherlv_17= '{' ( (lv_elements_18_0= ruleElement ) )* otherlv_19= '}' ) ) )
            	    // InternalMcmodel.g:286:6: ({...}? => ( ( (lv_elementsDefined_16_0= 'elements' ) ) otherlv_17= '{' ( (lv_elements_18_0= ruleElement ) )* otherlv_19= '}' ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getModelAccess().getUnorderedGroup_1(), 4);
            	    // InternalMcmodel.g:289:9: ({...}? => ( ( (lv_elementsDefined_16_0= 'elements' ) ) otherlv_17= '{' ( (lv_elements_18_0= ruleElement ) )* otherlv_19= '}' ) )
            	    // InternalMcmodel.g:289:10: {...}? => ( ( (lv_elementsDefined_16_0= 'elements' ) ) otherlv_17= '{' ( (lv_elements_18_0= ruleElement ) )* otherlv_19= '}' )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleModel", "true");
            	    }
            	    // InternalMcmodel.g:289:19: ( ( (lv_elementsDefined_16_0= 'elements' ) ) otherlv_17= '{' ( (lv_elements_18_0= ruleElement ) )* otherlv_19= '}' )
            	    // InternalMcmodel.g:289:20: ( (lv_elementsDefined_16_0= 'elements' ) ) otherlv_17= '{' ( (lv_elements_18_0= ruleElement ) )* otherlv_19= '}'
            	    {
            	    // InternalMcmodel.g:289:20: ( (lv_elementsDefined_16_0= 'elements' ) )
            	    // InternalMcmodel.g:290:10: (lv_elementsDefined_16_0= 'elements' )
            	    {
            	    // InternalMcmodel.g:290:10: (lv_elementsDefined_16_0= 'elements' )
            	    // InternalMcmodel.g:291:11: lv_elementsDefined_16_0= 'elements'
            	    {
            	    lv_elementsDefined_16_0=(Token)match(input,26,FOLLOW_8); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											newLeafNode(lv_elementsDefined_16_0, grammarAccess.getModelAccess().getElementsDefinedElementsKeyword_1_4_0_0());
            	      										
            	    }
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElement(grammarAccess.getModelRule());
            	      											}
            	      											setWithLastConsumed(current, "elementsDefined", true, "elements");
            	      										
            	    }

            	    }


            	    }

            	    otherlv_17=(Token)match(input,24,FOLLOW_10); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_17, grammarAccess.getModelAccess().getLeftCurlyBracketKeyword_1_4_1());
            	      								
            	    }
            	    // InternalMcmodel.g:307:9: ( (lv_elements_18_0= ruleElement ) )*
            	    loop4:
            	    do {
            	        int alt4=2;
            	        int LA4_0 = input.LA(1);

            	        if ( (LA4_0==30) ) {
            	            alt4=1;
            	        }


            	        switch (alt4) {
            	    	case 1 :
            	    	    // InternalMcmodel.g:308:10: (lv_elements_18_0= ruleElement )
            	    	    {
            	    	    // InternalMcmodel.g:308:10: (lv_elements_18_0= ruleElement )
            	    	    // InternalMcmodel.g:309:11: lv_elements_18_0= ruleElement
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      											newCompositeNode(grammarAccess.getModelAccess().getElementsElementParserRuleCall_1_4_2_0());
            	    	      										
            	    	    }
            	    	    pushFollow(FOLLOW_10);
            	    	    lv_elements_18_0=ruleElement();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      											if (current==null) {
            	    	      												current = createModelElementForParent(grammarAccess.getModelRule());
            	    	      											}
            	    	      											add(
            	    	      												current,
            	    	      												"elements",
            	    	      												lv_elements_18_0,
            	    	      												"com.raptor.mcmodel.Mcmodel.Element");
            	    	      											afterParserOrEnumRuleCall();
            	    	      										
            	    	    }

            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop4;
            	        }
            	    } while (true);

            	    otherlv_19=(Token)match(input,25,FOLLOW_6); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_19, grammarAccess.getModelAccess().getRightCurlyBracketKeyword_1_4_3());
            	      								
            	    }

            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getModelAccess().getUnorderedGroup_1());

            	    }


            	    }


            	    }
            	    break;
            	case 6 :
            	    // InternalMcmodel.g:336:4: ({...}? => ( ({...}? => ( ( (lv_guiLightDefined_20_0= 'gui_light' ) ) otherlv_21= '=' ( (lv_guiLight_22_0= ruleEnumGuiLight ) ) ) ) ) )
            	    {
            	    // InternalMcmodel.g:336:4: ({...}? => ( ({...}? => ( ( (lv_guiLightDefined_20_0= 'gui_light' ) ) otherlv_21= '=' ( (lv_guiLight_22_0= ruleEnumGuiLight ) ) ) ) ) )
            	    // InternalMcmodel.g:337:5: {...}? => ( ({...}? => ( ( (lv_guiLightDefined_20_0= 'gui_light' ) ) otherlv_21= '=' ( (lv_guiLight_22_0= ruleEnumGuiLight ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getModelAccess().getUnorderedGroup_1(), 5) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleModel", "getUnorderedGroupHelper().canSelect(grammarAccess.getModelAccess().getUnorderedGroup_1(), 5)");
            	    }
            	    // InternalMcmodel.g:337:102: ( ({...}? => ( ( (lv_guiLightDefined_20_0= 'gui_light' ) ) otherlv_21= '=' ( (lv_guiLight_22_0= ruleEnumGuiLight ) ) ) ) )
            	    // InternalMcmodel.g:338:6: ({...}? => ( ( (lv_guiLightDefined_20_0= 'gui_light' ) ) otherlv_21= '=' ( (lv_guiLight_22_0= ruleEnumGuiLight ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getModelAccess().getUnorderedGroup_1(), 5);
            	    // InternalMcmodel.g:341:9: ({...}? => ( ( (lv_guiLightDefined_20_0= 'gui_light' ) ) otherlv_21= '=' ( (lv_guiLight_22_0= ruleEnumGuiLight ) ) ) )
            	    // InternalMcmodel.g:341:10: {...}? => ( ( (lv_guiLightDefined_20_0= 'gui_light' ) ) otherlv_21= '=' ( (lv_guiLight_22_0= ruleEnumGuiLight ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleModel", "true");
            	    }
            	    // InternalMcmodel.g:341:19: ( ( (lv_guiLightDefined_20_0= 'gui_light' ) ) otherlv_21= '=' ( (lv_guiLight_22_0= ruleEnumGuiLight ) ) )
            	    // InternalMcmodel.g:341:20: ( (lv_guiLightDefined_20_0= 'gui_light' ) ) otherlv_21= '=' ( (lv_guiLight_22_0= ruleEnumGuiLight ) )
            	    {
            	    // InternalMcmodel.g:341:20: ( (lv_guiLightDefined_20_0= 'gui_light' ) )
            	    // InternalMcmodel.g:342:10: (lv_guiLightDefined_20_0= 'gui_light' )
            	    {
            	    // InternalMcmodel.g:342:10: (lv_guiLightDefined_20_0= 'gui_light' )
            	    // InternalMcmodel.g:343:11: lv_guiLightDefined_20_0= 'gui_light'
            	    {
            	    lv_guiLightDefined_20_0=(Token)match(input,27,FOLLOW_3); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											newLeafNode(lv_guiLightDefined_20_0, grammarAccess.getModelAccess().getGuiLightDefinedGui_lightKeyword_1_5_0_0());
            	      										
            	    }
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElement(grammarAccess.getModelRule());
            	      											}
            	      											setWithLastConsumed(current, "guiLightDefined", true, "gui_light");
            	      										
            	    }

            	    }


            	    }

            	    otherlv_21=(Token)match(input,18,FOLLOW_11); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_21, grammarAccess.getModelAccess().getEqualsSignKeyword_1_5_1());
            	      								
            	    }
            	    // InternalMcmodel.g:359:9: ( (lv_guiLight_22_0= ruleEnumGuiLight ) )
            	    // InternalMcmodel.g:360:10: (lv_guiLight_22_0= ruleEnumGuiLight )
            	    {
            	    // InternalMcmodel.g:360:10: (lv_guiLight_22_0= ruleEnumGuiLight )
            	    // InternalMcmodel.g:361:11: lv_guiLight_22_0= ruleEnumGuiLight
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getModelAccess().getGuiLightEnumGuiLightEnumRuleCall_1_5_2_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_6);
            	    lv_guiLight_22_0=ruleEnumGuiLight();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getModelRule());
            	      											}
            	      											set(
            	      												current,
            	      												"guiLight",
            	      												lv_guiLight_22_0,
            	      												"com.raptor.mcmodel.Mcmodel.EnumGuiLight");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getModelAccess().getUnorderedGroup_1());

            	    }


            	    }


            	    }
            	    break;
            	case 7 :
            	    // InternalMcmodel.g:384:4: ({...}? => ( ({...}? => ( ( (lv_overridesDefined_23_0= 'overrides' ) ) otherlv_24= '{' ( (lv_overrides_25_0= ruleItemOverride ) )* otherlv_26= '}' ) ) ) )
            	    {
            	    // InternalMcmodel.g:384:4: ({...}? => ( ({...}? => ( ( (lv_overridesDefined_23_0= 'overrides' ) ) otherlv_24= '{' ( (lv_overrides_25_0= ruleItemOverride ) )* otherlv_26= '}' ) ) ) )
            	    // InternalMcmodel.g:385:5: {...}? => ( ({...}? => ( ( (lv_overridesDefined_23_0= 'overrides' ) ) otherlv_24= '{' ( (lv_overrides_25_0= ruleItemOverride ) )* otherlv_26= '}' ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getModelAccess().getUnorderedGroup_1(), 6) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleModel", "getUnorderedGroupHelper().canSelect(grammarAccess.getModelAccess().getUnorderedGroup_1(), 6)");
            	    }
            	    // InternalMcmodel.g:385:102: ( ({...}? => ( ( (lv_overridesDefined_23_0= 'overrides' ) ) otherlv_24= '{' ( (lv_overrides_25_0= ruleItemOverride ) )* otherlv_26= '}' ) ) )
            	    // InternalMcmodel.g:386:6: ({...}? => ( ( (lv_overridesDefined_23_0= 'overrides' ) ) otherlv_24= '{' ( (lv_overrides_25_0= ruleItemOverride ) )* otherlv_26= '}' ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getModelAccess().getUnorderedGroup_1(), 6);
            	    // InternalMcmodel.g:389:9: ({...}? => ( ( (lv_overridesDefined_23_0= 'overrides' ) ) otherlv_24= '{' ( (lv_overrides_25_0= ruleItemOverride ) )* otherlv_26= '}' ) )
            	    // InternalMcmodel.g:389:10: {...}? => ( ( (lv_overridesDefined_23_0= 'overrides' ) ) otherlv_24= '{' ( (lv_overrides_25_0= ruleItemOverride ) )* otherlv_26= '}' )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleModel", "true");
            	    }
            	    // InternalMcmodel.g:389:19: ( ( (lv_overridesDefined_23_0= 'overrides' ) ) otherlv_24= '{' ( (lv_overrides_25_0= ruleItemOverride ) )* otherlv_26= '}' )
            	    // InternalMcmodel.g:389:20: ( (lv_overridesDefined_23_0= 'overrides' ) ) otherlv_24= '{' ( (lv_overrides_25_0= ruleItemOverride ) )* otherlv_26= '}'
            	    {
            	    // InternalMcmodel.g:389:20: ( (lv_overridesDefined_23_0= 'overrides' ) )
            	    // InternalMcmodel.g:390:10: (lv_overridesDefined_23_0= 'overrides' )
            	    {
            	    // InternalMcmodel.g:390:10: (lv_overridesDefined_23_0= 'overrides' )
            	    // InternalMcmodel.g:391:11: lv_overridesDefined_23_0= 'overrides'
            	    {
            	    lv_overridesDefined_23_0=(Token)match(input,28,FOLLOW_8); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											newLeafNode(lv_overridesDefined_23_0, grammarAccess.getModelAccess().getOverridesDefinedOverridesKeyword_1_6_0_0());
            	      										
            	    }
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElement(grammarAccess.getModelRule());
            	      											}
            	      											setWithLastConsumed(current, "overridesDefined", true, "overrides");
            	      										
            	    }

            	    }


            	    }

            	    otherlv_24=(Token)match(input,24,FOLLOW_12); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_24, grammarAccess.getModelAccess().getLeftCurlyBracketKeyword_1_6_1());
            	      								
            	    }
            	    // InternalMcmodel.g:407:9: ( (lv_overrides_25_0= ruleItemOverride ) )*
            	    loop5:
            	    do {
            	        int alt5=2;
            	        int LA5_0 = input.LA(1);

            	        if ( (LA5_0==57) ) {
            	            alt5=1;
            	        }


            	        switch (alt5) {
            	    	case 1 :
            	    	    // InternalMcmodel.g:408:10: (lv_overrides_25_0= ruleItemOverride )
            	    	    {
            	    	    // InternalMcmodel.g:408:10: (lv_overrides_25_0= ruleItemOverride )
            	    	    // InternalMcmodel.g:409:11: lv_overrides_25_0= ruleItemOverride
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      											newCompositeNode(grammarAccess.getModelAccess().getOverridesItemOverrideParserRuleCall_1_6_2_0());
            	    	      										
            	    	    }
            	    	    pushFollow(FOLLOW_12);
            	    	    lv_overrides_25_0=ruleItemOverride();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      											if (current==null) {
            	    	      												current = createModelElementForParent(grammarAccess.getModelRule());
            	    	      											}
            	    	      											add(
            	    	      												current,
            	    	      												"overrides",
            	    	      												lv_overrides_25_0,
            	    	      												"com.raptor.mcmodel.Mcmodel.ItemOverride");
            	    	      											afterParserOrEnumRuleCall();
            	    	      										
            	    	    }

            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop5;
            	        }
            	    } while (true);

            	    otherlv_26=(Token)match(input,25,FOLLOW_6); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_26, grammarAccess.getModelAccess().getRightCurlyBracketKeyword_1_6_3());
            	      								
            	    }

            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getModelAccess().getUnorderedGroup_1());

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop6;
                }
            } while (true);


            }


            }

            getUnorderedGroupHelper().leave(grammarAccess.getModelAccess().getUnorderedGroup_1());

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleModel"


    // $ANTLR start "entryRuleTexture"
    // InternalMcmodel.g:447:1: entryRuleTexture returns [EObject current=null] : iv_ruleTexture= ruleTexture EOF ;
    public final EObject entryRuleTexture() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTexture = null;


        try {
            // InternalMcmodel.g:447:48: (iv_ruleTexture= ruleTexture EOF )
            // InternalMcmodel.g:448:2: iv_ruleTexture= ruleTexture EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTextureRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTexture=ruleTexture();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTexture; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTexture"


    // $ANTLR start "ruleTexture"
    // InternalMcmodel.g:454:1: ruleTexture returns [EObject current=null] : ( ( (lv_name_0_0= ruleIdentifier ) ) otherlv_1= '=' ( (lv_value_2_0= ruleTextureValue ) ) ) ;
    public final EObject ruleTexture() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        AntlrDatatypeRuleToken lv_name_0_0 = null;

        AntlrDatatypeRuleToken lv_value_2_0 = null;



        	enterRule();

        try {
            // InternalMcmodel.g:460:2: ( ( ( (lv_name_0_0= ruleIdentifier ) ) otherlv_1= '=' ( (lv_value_2_0= ruleTextureValue ) ) ) )
            // InternalMcmodel.g:461:2: ( ( (lv_name_0_0= ruleIdentifier ) ) otherlv_1= '=' ( (lv_value_2_0= ruleTextureValue ) ) )
            {
            // InternalMcmodel.g:461:2: ( ( (lv_name_0_0= ruleIdentifier ) ) otherlv_1= '=' ( (lv_value_2_0= ruleTextureValue ) ) )
            // InternalMcmodel.g:462:3: ( (lv_name_0_0= ruleIdentifier ) ) otherlv_1= '=' ( (lv_value_2_0= ruleTextureValue ) )
            {
            // InternalMcmodel.g:462:3: ( (lv_name_0_0= ruleIdentifier ) )
            // InternalMcmodel.g:463:4: (lv_name_0_0= ruleIdentifier )
            {
            // InternalMcmodel.g:463:4: (lv_name_0_0= ruleIdentifier )
            // InternalMcmodel.g:464:5: lv_name_0_0= ruleIdentifier
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getTextureAccess().getNameIdentifierParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_3);
            lv_name_0_0=ruleIdentifier();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getTextureRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_0_0,
              						"com.raptor.mcmodel.Mcmodel.Identifier");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_1=(Token)match(input,18,FOLLOW_13); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getTextureAccess().getEqualsSignKeyword_1());
              		
            }
            // InternalMcmodel.g:485:3: ( (lv_value_2_0= ruleTextureValue ) )
            // InternalMcmodel.g:486:4: (lv_value_2_0= ruleTextureValue )
            {
            // InternalMcmodel.g:486:4: (lv_value_2_0= ruleTextureValue )
            // InternalMcmodel.g:487:5: lv_value_2_0= ruleTextureValue
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getTextureAccess().getValueTextureValueParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_value_2_0=ruleTextureValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getTextureRule());
              					}
              					set(
              						current,
              						"value",
              						lv_value_2_0,
              						"com.raptor.mcmodel.Mcmodel.TextureValue");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTexture"


    // $ANTLR start "entryRuleTextureValue"
    // InternalMcmodel.g:508:1: entryRuleTextureValue returns [String current=null] : iv_ruleTextureValue= ruleTextureValue EOF ;
    public final String entryRuleTextureValue() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleTextureValue = null;


        try {
            // InternalMcmodel.g:508:52: (iv_ruleTextureValue= ruleTextureValue EOF )
            // InternalMcmodel.g:509:2: iv_ruleTextureValue= ruleTextureValue EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTextureValueRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTextureValue=ruleTextureValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTextureValue.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTextureValue"


    // $ANTLR start "ruleTextureValue"
    // InternalMcmodel.g:515:1: ruleTextureValue returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : ( ( ( ruleNamespacedLocation )=>this_NamespacedLocation_0= ruleNamespacedLocation ) | this_ReferenceTextureValue_1= ruleReferenceTextureValue ) ;
    public final AntlrDatatypeRuleToken ruleTextureValue() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        AntlrDatatypeRuleToken this_NamespacedLocation_0 = null;

        AntlrDatatypeRuleToken this_ReferenceTextureValue_1 = null;



        	enterRule();

        try {
            // InternalMcmodel.g:521:2: ( ( ( ( ruleNamespacedLocation )=>this_NamespacedLocation_0= ruleNamespacedLocation ) | this_ReferenceTextureValue_1= ruleReferenceTextureValue ) )
            // InternalMcmodel.g:522:2: ( ( ( ruleNamespacedLocation )=>this_NamespacedLocation_0= ruleNamespacedLocation ) | this_ReferenceTextureValue_1= ruleReferenceTextureValue )
            {
            // InternalMcmodel.g:522:2: ( ( ( ruleNamespacedLocation )=>this_NamespacedLocation_0= ruleNamespacedLocation ) | this_ReferenceTextureValue_1= ruleReferenceTextureValue )
            int alt7=2;
            alt7 = dfa7.predict(input);
            switch (alt7) {
                case 1 :
                    // InternalMcmodel.g:523:3: ( ( ruleNamespacedLocation )=>this_NamespacedLocation_0= ruleNamespacedLocation )
                    {
                    // InternalMcmodel.g:523:3: ( ( ruleNamespacedLocation )=>this_NamespacedLocation_0= ruleNamespacedLocation )
                    // InternalMcmodel.g:524:4: ( ruleNamespacedLocation )=>this_NamespacedLocation_0= ruleNamespacedLocation
                    {
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getTextureValueAccess().getNamespacedLocationParserRuleCall_0());
                      			
                    }
                    pushFollow(FOLLOW_2);
                    this_NamespacedLocation_0=ruleNamespacedLocation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_NamespacedLocation_0);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalMcmodel.g:537:3: this_ReferenceTextureValue_1= ruleReferenceTextureValue
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getTextureValueAccess().getReferenceTextureValueParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_ReferenceTextureValue_1=ruleReferenceTextureValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_ReferenceTextureValue_1);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTextureValue"


    // $ANTLR start "entryRuleReferenceTextureValue"
    // InternalMcmodel.g:551:1: entryRuleReferenceTextureValue returns [String current=null] : iv_ruleReferenceTextureValue= ruleReferenceTextureValue EOF ;
    public final String entryRuleReferenceTextureValue() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleReferenceTextureValue = null;



        	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();

        try {
            // InternalMcmodel.g:553:2: (iv_ruleReferenceTextureValue= ruleReferenceTextureValue EOF )
            // InternalMcmodel.g:554:2: iv_ruleReferenceTextureValue= ruleReferenceTextureValue EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getReferenceTextureValueRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleReferenceTextureValue=ruleReferenceTextureValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleReferenceTextureValue.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {

            	myHiddenTokenState.restore();

        }
        return current;
    }
    // $ANTLR end "entryRuleReferenceTextureValue"


    // $ANTLR start "ruleReferenceTextureValue"
    // InternalMcmodel.g:563:1: ruleReferenceTextureValue returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= '#' this_Identifier_1= ruleIdentifier ) ;
    public final AntlrDatatypeRuleToken ruleReferenceTextureValue() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        AntlrDatatypeRuleToken this_Identifier_1 = null;



        	enterRule();
        	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();

        try {
            // InternalMcmodel.g:570:2: ( (kw= '#' this_Identifier_1= ruleIdentifier ) )
            // InternalMcmodel.g:571:2: (kw= '#' this_Identifier_1= ruleIdentifier )
            {
            // InternalMcmodel.g:571:2: (kw= '#' this_Identifier_1= ruleIdentifier )
            // InternalMcmodel.g:572:3: kw= '#' this_Identifier_1= ruleIdentifier
            {
            kw=(Token)match(input,29,FOLLOW_4); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(kw);
              			newLeafNode(kw, grammarAccess.getReferenceTextureValueAccess().getNumberSignKeyword_0());
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getReferenceTextureValueAccess().getIdentifierParserRuleCall_1());
              		
            }
            pushFollow(FOLLOW_2);
            this_Identifier_1=ruleIdentifier();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(this_Identifier_1);
              		
            }
            if ( state.backtracking==0 ) {

              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {

            	myHiddenTokenState.restore();

        }
        return current;
    }
    // $ANTLR end "ruleReferenceTextureValue"


    // $ANTLR start "entryRuleElement"
    // InternalMcmodel.g:594:1: entryRuleElement returns [EObject current=null] : iv_ruleElement= ruleElement EOF ;
    public final EObject entryRuleElement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleElement = null;


        try {
            // InternalMcmodel.g:594:48: (iv_ruleElement= ruleElement EOF )
            // InternalMcmodel.g:595:2: iv_ruleElement= ruleElement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getElementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleElement=ruleElement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleElement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleElement"


    // $ANTLR start "ruleElement"
    // InternalMcmodel.g:601:1: ruleElement returns [EObject current=null] : (otherlv_0= 'from' ( (lv_from_1_0= ruleVec3d ) ) otherlv_2= 'to' ( (lv_to_3_0= ruleVec3d ) ) otherlv_4= '{' ( ( ( ( ({...}? => ( ({...}? => (otherlv_6= 'rotation' ( (lv_rotation_7_0= ruleRotation ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'faces' otherlv_9= '{' ( (lv_faces_10_0= ruleFaces ) )* (otherlv_11= 'default' otherlv_12= '=' ( (lv_defaultFace_13_0= ruleFace ) ) )? otherlv_14= '}' ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_shadeDefined_15_0= 'shade' ) ) otherlv_16= '=' ( ( (lv_shade_17_0= 'true' ) ) | otherlv_18= 'false' ) ) ) ) ) )+ {...}?) ) ) otherlv_19= '}' ) ;
    public final EObject ruleElement() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        Token otherlv_12=null;
        Token otherlv_14=null;
        Token lv_shadeDefined_15_0=null;
        Token otherlv_16=null;
        Token lv_shade_17_0=null;
        Token otherlv_18=null;
        Token otherlv_19=null;
        EObject lv_from_1_0 = null;

        EObject lv_to_3_0 = null;

        EObject lv_rotation_7_0 = null;

        EObject lv_faces_10_0 = null;

        EObject lv_defaultFace_13_0 = null;



        	enterRule();

        try {
            // InternalMcmodel.g:607:2: ( (otherlv_0= 'from' ( (lv_from_1_0= ruleVec3d ) ) otherlv_2= 'to' ( (lv_to_3_0= ruleVec3d ) ) otherlv_4= '{' ( ( ( ( ({...}? => ( ({...}? => (otherlv_6= 'rotation' ( (lv_rotation_7_0= ruleRotation ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'faces' otherlv_9= '{' ( (lv_faces_10_0= ruleFaces ) )* (otherlv_11= 'default' otherlv_12= '=' ( (lv_defaultFace_13_0= ruleFace ) ) )? otherlv_14= '}' ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_shadeDefined_15_0= 'shade' ) ) otherlv_16= '=' ( ( (lv_shade_17_0= 'true' ) ) | otherlv_18= 'false' ) ) ) ) ) )+ {...}?) ) ) otherlv_19= '}' ) )
            // InternalMcmodel.g:608:2: (otherlv_0= 'from' ( (lv_from_1_0= ruleVec3d ) ) otherlv_2= 'to' ( (lv_to_3_0= ruleVec3d ) ) otherlv_4= '{' ( ( ( ( ({...}? => ( ({...}? => (otherlv_6= 'rotation' ( (lv_rotation_7_0= ruleRotation ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'faces' otherlv_9= '{' ( (lv_faces_10_0= ruleFaces ) )* (otherlv_11= 'default' otherlv_12= '=' ( (lv_defaultFace_13_0= ruleFace ) ) )? otherlv_14= '}' ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_shadeDefined_15_0= 'shade' ) ) otherlv_16= '=' ( ( (lv_shade_17_0= 'true' ) ) | otherlv_18= 'false' ) ) ) ) ) )+ {...}?) ) ) otherlv_19= '}' )
            {
            // InternalMcmodel.g:608:2: (otherlv_0= 'from' ( (lv_from_1_0= ruleVec3d ) ) otherlv_2= 'to' ( (lv_to_3_0= ruleVec3d ) ) otherlv_4= '{' ( ( ( ( ({...}? => ( ({...}? => (otherlv_6= 'rotation' ( (lv_rotation_7_0= ruleRotation ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'faces' otherlv_9= '{' ( (lv_faces_10_0= ruleFaces ) )* (otherlv_11= 'default' otherlv_12= '=' ( (lv_defaultFace_13_0= ruleFace ) ) )? otherlv_14= '}' ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_shadeDefined_15_0= 'shade' ) ) otherlv_16= '=' ( ( (lv_shade_17_0= 'true' ) ) | otherlv_18= 'false' ) ) ) ) ) )+ {...}?) ) ) otherlv_19= '}' )
            // InternalMcmodel.g:609:3: otherlv_0= 'from' ( (lv_from_1_0= ruleVec3d ) ) otherlv_2= 'to' ( (lv_to_3_0= ruleVec3d ) ) otherlv_4= '{' ( ( ( ( ({...}? => ( ({...}? => (otherlv_6= 'rotation' ( (lv_rotation_7_0= ruleRotation ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'faces' otherlv_9= '{' ( (lv_faces_10_0= ruleFaces ) )* (otherlv_11= 'default' otherlv_12= '=' ( (lv_defaultFace_13_0= ruleFace ) ) )? otherlv_14= '}' ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_shadeDefined_15_0= 'shade' ) ) otherlv_16= '=' ( ( (lv_shade_17_0= 'true' ) ) | otherlv_18= 'false' ) ) ) ) ) )+ {...}?) ) ) otherlv_19= '}'
            {
            otherlv_0=(Token)match(input,30,FOLLOW_14); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getElementAccess().getFromKeyword_0());
              		
            }
            // InternalMcmodel.g:613:3: ( (lv_from_1_0= ruleVec3d ) )
            // InternalMcmodel.g:614:4: (lv_from_1_0= ruleVec3d )
            {
            // InternalMcmodel.g:614:4: (lv_from_1_0= ruleVec3d )
            // InternalMcmodel.g:615:5: lv_from_1_0= ruleVec3d
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getElementAccess().getFromVec3dParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_15);
            lv_from_1_0=ruleVec3d();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getElementRule());
              					}
              					set(
              						current,
              						"from",
              						lv_from_1_0,
              						"com.raptor.mcmodel.Mcmodel.Vec3d");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_2=(Token)match(input,31,FOLLOW_14); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getElementAccess().getToKeyword_2());
              		
            }
            // InternalMcmodel.g:636:3: ( (lv_to_3_0= ruleVec3d ) )
            // InternalMcmodel.g:637:4: (lv_to_3_0= ruleVec3d )
            {
            // InternalMcmodel.g:637:4: (lv_to_3_0= ruleVec3d )
            // InternalMcmodel.g:638:5: lv_to_3_0= ruleVec3d
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getElementAccess().getToVec3dParserRuleCall_3_0());
              				
            }
            pushFollow(FOLLOW_8);
            lv_to_3_0=ruleVec3d();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getElementRule());
              					}
              					set(
              						current,
              						"to",
              						lv_to_3_0,
              						"com.raptor.mcmodel.Mcmodel.Vec3d");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_4=(Token)match(input,24,FOLLOW_16); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getElementAccess().getLeftCurlyBracketKeyword_4());
              		
            }
            // InternalMcmodel.g:659:3: ( ( ( ( ({...}? => ( ({...}? => (otherlv_6= 'rotation' ( (lv_rotation_7_0= ruleRotation ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'faces' otherlv_9= '{' ( (lv_faces_10_0= ruleFaces ) )* (otherlv_11= 'default' otherlv_12= '=' ( (lv_defaultFace_13_0= ruleFace ) ) )? otherlv_14= '}' ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_shadeDefined_15_0= 'shade' ) ) otherlv_16= '=' ( ( (lv_shade_17_0= 'true' ) ) | otherlv_18= 'false' ) ) ) ) ) )+ {...}?) ) )
            // InternalMcmodel.g:660:4: ( ( ( ({...}? => ( ({...}? => (otherlv_6= 'rotation' ( (lv_rotation_7_0= ruleRotation ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'faces' otherlv_9= '{' ( (lv_faces_10_0= ruleFaces ) )* (otherlv_11= 'default' otherlv_12= '=' ( (lv_defaultFace_13_0= ruleFace ) ) )? otherlv_14= '}' ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_shadeDefined_15_0= 'shade' ) ) otherlv_16= '=' ( ( (lv_shade_17_0= 'true' ) ) | otherlv_18= 'false' ) ) ) ) ) )+ {...}?) )
            {
            // InternalMcmodel.g:660:4: ( ( ( ({...}? => ( ({...}? => (otherlv_6= 'rotation' ( (lv_rotation_7_0= ruleRotation ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'faces' otherlv_9= '{' ( (lv_faces_10_0= ruleFaces ) )* (otherlv_11= 'default' otherlv_12= '=' ( (lv_defaultFace_13_0= ruleFace ) ) )? otherlv_14= '}' ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_shadeDefined_15_0= 'shade' ) ) otherlv_16= '=' ( ( (lv_shade_17_0= 'true' ) ) | otherlv_18= 'false' ) ) ) ) ) )+ {...}?) )
            // InternalMcmodel.g:661:5: ( ( ({...}? => ( ({...}? => (otherlv_6= 'rotation' ( (lv_rotation_7_0= ruleRotation ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'faces' otherlv_9= '{' ( (lv_faces_10_0= ruleFaces ) )* (otherlv_11= 'default' otherlv_12= '=' ( (lv_defaultFace_13_0= ruleFace ) ) )? otherlv_14= '}' ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_shadeDefined_15_0= 'shade' ) ) otherlv_16= '=' ( ( (lv_shade_17_0= 'true' ) ) | otherlv_18= 'false' ) ) ) ) ) )+ {...}?)
            {
            getUnorderedGroupHelper().enter(grammarAccess.getElementAccess().getUnorderedGroup_5());
            // InternalMcmodel.g:664:5: ( ( ({...}? => ( ({...}? => (otherlv_6= 'rotation' ( (lv_rotation_7_0= ruleRotation ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'faces' otherlv_9= '{' ( (lv_faces_10_0= ruleFaces ) )* (otherlv_11= 'default' otherlv_12= '=' ( (lv_defaultFace_13_0= ruleFace ) ) )? otherlv_14= '}' ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_shadeDefined_15_0= 'shade' ) ) otherlv_16= '=' ( ( (lv_shade_17_0= 'true' ) ) | otherlv_18= 'false' ) ) ) ) ) )+ {...}?)
            // InternalMcmodel.g:665:6: ( ({...}? => ( ({...}? => (otherlv_6= 'rotation' ( (lv_rotation_7_0= ruleRotation ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'faces' otherlv_9= '{' ( (lv_faces_10_0= ruleFaces ) )* (otherlv_11= 'default' otherlv_12= '=' ( (lv_defaultFace_13_0= ruleFace ) ) )? otherlv_14= '}' ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_shadeDefined_15_0= 'shade' ) ) otherlv_16= '=' ( ( (lv_shade_17_0= 'true' ) ) | otherlv_18= 'false' ) ) ) ) ) )+ {...}?
            {
            // InternalMcmodel.g:665:6: ( ({...}? => ( ({...}? => (otherlv_6= 'rotation' ( (lv_rotation_7_0= ruleRotation ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'faces' otherlv_9= '{' ( (lv_faces_10_0= ruleFaces ) )* (otherlv_11= 'default' otherlv_12= '=' ( (lv_defaultFace_13_0= ruleFace ) ) )? otherlv_14= '}' ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_shadeDefined_15_0= 'shade' ) ) otherlv_16= '=' ( ( (lv_shade_17_0= 'true' ) ) | otherlv_18= 'false' ) ) ) ) ) )+
            int cnt11=0;
            loop11:
            do {
                int alt11=4;
                int LA11_0 = input.LA(1);

                if ( LA11_0 == 32 && getUnorderedGroupHelper().canSelect(grammarAccess.getElementAccess().getUnorderedGroup_5(), 0) ) {
                    alt11=1;
                }
                else if ( LA11_0 == 33 && getUnorderedGroupHelper().canSelect(grammarAccess.getElementAccess().getUnorderedGroup_5(), 1) ) {
                    alt11=2;
                }
                else if ( LA11_0 == 35 && getUnorderedGroupHelper().canSelect(grammarAccess.getElementAccess().getUnorderedGroup_5(), 2) ) {
                    alt11=3;
                }


                switch (alt11) {
            	case 1 :
            	    // InternalMcmodel.g:666:4: ({...}? => ( ({...}? => (otherlv_6= 'rotation' ( (lv_rotation_7_0= ruleRotation ) ) ) ) ) )
            	    {
            	    // InternalMcmodel.g:666:4: ({...}? => ( ({...}? => (otherlv_6= 'rotation' ( (lv_rotation_7_0= ruleRotation ) ) ) ) ) )
            	    // InternalMcmodel.g:667:5: {...}? => ( ({...}? => (otherlv_6= 'rotation' ( (lv_rotation_7_0= ruleRotation ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getElementAccess().getUnorderedGroup_5(), 0) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleElement", "getUnorderedGroupHelper().canSelect(grammarAccess.getElementAccess().getUnorderedGroup_5(), 0)");
            	    }
            	    // InternalMcmodel.g:667:104: ( ({...}? => (otherlv_6= 'rotation' ( (lv_rotation_7_0= ruleRotation ) ) ) ) )
            	    // InternalMcmodel.g:668:6: ({...}? => (otherlv_6= 'rotation' ( (lv_rotation_7_0= ruleRotation ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getElementAccess().getUnorderedGroup_5(), 0);
            	    // InternalMcmodel.g:671:9: ({...}? => (otherlv_6= 'rotation' ( (lv_rotation_7_0= ruleRotation ) ) ) )
            	    // InternalMcmodel.g:671:10: {...}? => (otherlv_6= 'rotation' ( (lv_rotation_7_0= ruleRotation ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleElement", "true");
            	    }
            	    // InternalMcmodel.g:671:19: (otherlv_6= 'rotation' ( (lv_rotation_7_0= ruleRotation ) ) )
            	    // InternalMcmodel.g:671:20: otherlv_6= 'rotation' ( (lv_rotation_7_0= ruleRotation ) )
            	    {
            	    otherlv_6=(Token)match(input,32,FOLLOW_8); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_6, grammarAccess.getElementAccess().getRotationKeyword_5_0_0());
            	      								
            	    }
            	    // InternalMcmodel.g:675:9: ( (lv_rotation_7_0= ruleRotation ) )
            	    // InternalMcmodel.g:676:10: (lv_rotation_7_0= ruleRotation )
            	    {
            	    // InternalMcmodel.g:676:10: (lv_rotation_7_0= ruleRotation )
            	    // InternalMcmodel.g:677:11: lv_rotation_7_0= ruleRotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getElementAccess().getRotationRotationParserRuleCall_5_0_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_17);
            	    lv_rotation_7_0=ruleRotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getElementRule());
            	      											}
            	      											set(
            	      												current,
            	      												"rotation",
            	      												lv_rotation_7_0,
            	      												"com.raptor.mcmodel.Mcmodel.Rotation");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getElementAccess().getUnorderedGroup_5());

            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // InternalMcmodel.g:700:4: ({...}? => ( ({...}? => (otherlv_8= 'faces' otherlv_9= '{' ( (lv_faces_10_0= ruleFaces ) )* (otherlv_11= 'default' otherlv_12= '=' ( (lv_defaultFace_13_0= ruleFace ) ) )? otherlv_14= '}' ) ) ) )
            	    {
            	    // InternalMcmodel.g:700:4: ({...}? => ( ({...}? => (otherlv_8= 'faces' otherlv_9= '{' ( (lv_faces_10_0= ruleFaces ) )* (otherlv_11= 'default' otherlv_12= '=' ( (lv_defaultFace_13_0= ruleFace ) ) )? otherlv_14= '}' ) ) ) )
            	    // InternalMcmodel.g:701:5: {...}? => ( ({...}? => (otherlv_8= 'faces' otherlv_9= '{' ( (lv_faces_10_0= ruleFaces ) )* (otherlv_11= 'default' otherlv_12= '=' ( (lv_defaultFace_13_0= ruleFace ) ) )? otherlv_14= '}' ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getElementAccess().getUnorderedGroup_5(), 1) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleElement", "getUnorderedGroupHelper().canSelect(grammarAccess.getElementAccess().getUnorderedGroup_5(), 1)");
            	    }
            	    // InternalMcmodel.g:701:104: ( ({...}? => (otherlv_8= 'faces' otherlv_9= '{' ( (lv_faces_10_0= ruleFaces ) )* (otherlv_11= 'default' otherlv_12= '=' ( (lv_defaultFace_13_0= ruleFace ) ) )? otherlv_14= '}' ) ) )
            	    // InternalMcmodel.g:702:6: ({...}? => (otherlv_8= 'faces' otherlv_9= '{' ( (lv_faces_10_0= ruleFaces ) )* (otherlv_11= 'default' otherlv_12= '=' ( (lv_defaultFace_13_0= ruleFace ) ) )? otherlv_14= '}' ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getElementAccess().getUnorderedGroup_5(), 1);
            	    // InternalMcmodel.g:705:9: ({...}? => (otherlv_8= 'faces' otherlv_9= '{' ( (lv_faces_10_0= ruleFaces ) )* (otherlv_11= 'default' otherlv_12= '=' ( (lv_defaultFace_13_0= ruleFace ) ) )? otherlv_14= '}' ) )
            	    // InternalMcmodel.g:705:10: {...}? => (otherlv_8= 'faces' otherlv_9= '{' ( (lv_faces_10_0= ruleFaces ) )* (otherlv_11= 'default' otherlv_12= '=' ( (lv_defaultFace_13_0= ruleFace ) ) )? otherlv_14= '}' )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleElement", "true");
            	    }
            	    // InternalMcmodel.g:705:19: (otherlv_8= 'faces' otherlv_9= '{' ( (lv_faces_10_0= ruleFaces ) )* (otherlv_11= 'default' otherlv_12= '=' ( (lv_defaultFace_13_0= ruleFace ) ) )? otherlv_14= '}' )
            	    // InternalMcmodel.g:705:20: otherlv_8= 'faces' otherlv_9= '{' ( (lv_faces_10_0= ruleFaces ) )* (otherlv_11= 'default' otherlv_12= '=' ( (lv_defaultFace_13_0= ruleFace ) ) )? otherlv_14= '}'
            	    {
            	    otherlv_8=(Token)match(input,33,FOLLOW_8); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_8, grammarAccess.getElementAccess().getFacesKeyword_5_1_0());
            	      								
            	    }
            	    otherlv_9=(Token)match(input,24,FOLLOW_18); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_9, grammarAccess.getElementAccess().getLeftCurlyBracketKeyword_5_1_1());
            	      								
            	    }
            	    // InternalMcmodel.g:713:9: ( (lv_faces_10_0= ruleFaces ) )*
            	    loop8:
            	    do {
            	        int alt8=2;
            	        int LA8_0 = input.LA(1);

            	        if ( ((LA8_0>=80 && LA8_0<=81)||LA8_0==83||(LA8_0>=85 && LA8_0<=86)||LA8_0==90) ) {
            	            alt8=1;
            	        }


            	        switch (alt8) {
            	    	case 1 :
            	    	    // InternalMcmodel.g:714:10: (lv_faces_10_0= ruleFaces )
            	    	    {
            	    	    // InternalMcmodel.g:714:10: (lv_faces_10_0= ruleFaces )
            	    	    // InternalMcmodel.g:715:11: lv_faces_10_0= ruleFaces
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      											newCompositeNode(grammarAccess.getElementAccess().getFacesFacesParserRuleCall_5_1_2_0());
            	    	      										
            	    	    }
            	    	    pushFollow(FOLLOW_18);
            	    	    lv_faces_10_0=ruleFaces();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      											if (current==null) {
            	    	      												current = createModelElementForParent(grammarAccess.getElementRule());
            	    	      											}
            	    	      											add(
            	    	      												current,
            	    	      												"faces",
            	    	      												lv_faces_10_0,
            	    	      												"com.raptor.mcmodel.Mcmodel.Faces");
            	    	      											afterParserOrEnumRuleCall();
            	    	      										
            	    	    }

            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop8;
            	        }
            	    } while (true);

            	    // InternalMcmodel.g:732:9: (otherlv_11= 'default' otherlv_12= '=' ( (lv_defaultFace_13_0= ruleFace ) ) )?
            	    int alt9=2;
            	    int LA9_0 = input.LA(1);

            	    if ( (LA9_0==34) ) {
            	        alt9=1;
            	    }
            	    switch (alt9) {
            	        case 1 :
            	            // InternalMcmodel.g:733:10: otherlv_11= 'default' otherlv_12= '=' ( (lv_defaultFace_13_0= ruleFace ) )
            	            {
            	            otherlv_11=(Token)match(input,34,FOLLOW_3); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(otherlv_11, grammarAccess.getElementAccess().getDefaultKeyword_5_1_3_0());
            	              									
            	            }
            	            otherlv_12=(Token)match(input,18,FOLLOW_13); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(otherlv_12, grammarAccess.getElementAccess().getEqualsSignKeyword_5_1_3_1());
            	              									
            	            }
            	            // InternalMcmodel.g:741:10: ( (lv_defaultFace_13_0= ruleFace ) )
            	            // InternalMcmodel.g:742:11: (lv_defaultFace_13_0= ruleFace )
            	            {
            	            // InternalMcmodel.g:742:11: (lv_defaultFace_13_0= ruleFace )
            	            // InternalMcmodel.g:743:12: lv_defaultFace_13_0= ruleFace
            	            {
            	            if ( state.backtracking==0 ) {

            	              												newCompositeNode(grammarAccess.getElementAccess().getDefaultFaceFaceParserRuleCall_5_1_3_2_0());
            	              											
            	            }
            	            pushFollow(FOLLOW_19);
            	            lv_defaultFace_13_0=ruleFace();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              												if (current==null) {
            	              													current = createModelElementForParent(grammarAccess.getElementRule());
            	              												}
            	              												set(
            	              													current,
            	              													"defaultFace",
            	              													lv_defaultFace_13_0,
            	              													"com.raptor.mcmodel.Mcmodel.Face");
            	              												afterParserOrEnumRuleCall();
            	              											
            	            }

            	            }


            	            }


            	            }
            	            break;

            	    }

            	    otherlv_14=(Token)match(input,25,FOLLOW_17); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_14, grammarAccess.getElementAccess().getRightCurlyBracketKeyword_5_1_4());
            	      								
            	    }

            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getElementAccess().getUnorderedGroup_5());

            	    }


            	    }


            	    }
            	    break;
            	case 3 :
            	    // InternalMcmodel.g:771:4: ({...}? => ( ({...}? => ( ( (lv_shadeDefined_15_0= 'shade' ) ) otherlv_16= '=' ( ( (lv_shade_17_0= 'true' ) ) | otherlv_18= 'false' ) ) ) ) )
            	    {
            	    // InternalMcmodel.g:771:4: ({...}? => ( ({...}? => ( ( (lv_shadeDefined_15_0= 'shade' ) ) otherlv_16= '=' ( ( (lv_shade_17_0= 'true' ) ) | otherlv_18= 'false' ) ) ) ) )
            	    // InternalMcmodel.g:772:5: {...}? => ( ({...}? => ( ( (lv_shadeDefined_15_0= 'shade' ) ) otherlv_16= '=' ( ( (lv_shade_17_0= 'true' ) ) | otherlv_18= 'false' ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getElementAccess().getUnorderedGroup_5(), 2) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleElement", "getUnorderedGroupHelper().canSelect(grammarAccess.getElementAccess().getUnorderedGroup_5(), 2)");
            	    }
            	    // InternalMcmodel.g:772:104: ( ({...}? => ( ( (lv_shadeDefined_15_0= 'shade' ) ) otherlv_16= '=' ( ( (lv_shade_17_0= 'true' ) ) | otherlv_18= 'false' ) ) ) )
            	    // InternalMcmodel.g:773:6: ({...}? => ( ( (lv_shadeDefined_15_0= 'shade' ) ) otherlv_16= '=' ( ( (lv_shade_17_0= 'true' ) ) | otherlv_18= 'false' ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getElementAccess().getUnorderedGroup_5(), 2);
            	    // InternalMcmodel.g:776:9: ({...}? => ( ( (lv_shadeDefined_15_0= 'shade' ) ) otherlv_16= '=' ( ( (lv_shade_17_0= 'true' ) ) | otherlv_18= 'false' ) ) )
            	    // InternalMcmodel.g:776:10: {...}? => ( ( (lv_shadeDefined_15_0= 'shade' ) ) otherlv_16= '=' ( ( (lv_shade_17_0= 'true' ) ) | otherlv_18= 'false' ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleElement", "true");
            	    }
            	    // InternalMcmodel.g:776:19: ( ( (lv_shadeDefined_15_0= 'shade' ) ) otherlv_16= '=' ( ( (lv_shade_17_0= 'true' ) ) | otherlv_18= 'false' ) )
            	    // InternalMcmodel.g:776:20: ( (lv_shadeDefined_15_0= 'shade' ) ) otherlv_16= '=' ( ( (lv_shade_17_0= 'true' ) ) | otherlv_18= 'false' )
            	    {
            	    // InternalMcmodel.g:776:20: ( (lv_shadeDefined_15_0= 'shade' ) )
            	    // InternalMcmodel.g:777:10: (lv_shadeDefined_15_0= 'shade' )
            	    {
            	    // InternalMcmodel.g:777:10: (lv_shadeDefined_15_0= 'shade' )
            	    // InternalMcmodel.g:778:11: lv_shadeDefined_15_0= 'shade'
            	    {
            	    lv_shadeDefined_15_0=(Token)match(input,35,FOLLOW_3); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											newLeafNode(lv_shadeDefined_15_0, grammarAccess.getElementAccess().getShadeDefinedShadeKeyword_5_2_0_0());
            	      										
            	    }
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElement(grammarAccess.getElementRule());
            	      											}
            	      											setWithLastConsumed(current, "shadeDefined", true, "shade");
            	      										
            	    }

            	    }


            	    }

            	    otherlv_16=(Token)match(input,18,FOLLOW_7); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_16, grammarAccess.getElementAccess().getEqualsSignKeyword_5_2_1());
            	      								
            	    }
            	    // InternalMcmodel.g:794:9: ( ( (lv_shade_17_0= 'true' ) ) | otherlv_18= 'false' )
            	    int alt10=2;
            	    int LA10_0 = input.LA(1);

            	    if ( (LA10_0==20) ) {
            	        alt10=1;
            	    }
            	    else if ( (LA10_0==21) ) {
            	        alt10=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 10, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt10) {
            	        case 1 :
            	            // InternalMcmodel.g:795:10: ( (lv_shade_17_0= 'true' ) )
            	            {
            	            // InternalMcmodel.g:795:10: ( (lv_shade_17_0= 'true' ) )
            	            // InternalMcmodel.g:796:11: (lv_shade_17_0= 'true' )
            	            {
            	            // InternalMcmodel.g:796:11: (lv_shade_17_0= 'true' )
            	            // InternalMcmodel.g:797:12: lv_shade_17_0= 'true'
            	            {
            	            lv_shade_17_0=(Token)match(input,20,FOLLOW_17); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              												newLeafNode(lv_shade_17_0, grammarAccess.getElementAccess().getShadeTrueKeyword_5_2_2_0_0());
            	              											
            	            }
            	            if ( state.backtracking==0 ) {

            	              												if (current==null) {
            	              													current = createModelElement(grammarAccess.getElementRule());
            	              												}
            	              												setWithLastConsumed(current, "shade", true, "true");
            	              											
            	            }

            	            }


            	            }


            	            }
            	            break;
            	        case 2 :
            	            // InternalMcmodel.g:810:10: otherlv_18= 'false'
            	            {
            	            otherlv_18=(Token)match(input,21,FOLLOW_17); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(otherlv_18, grammarAccess.getElementAccess().getFalseKeyword_5_2_2_1());
            	              									
            	            }

            	            }
            	            break;

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getElementAccess().getUnorderedGroup_5());

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt11 >= 1 ) break loop11;
            	    if (state.backtracking>0) {state.failed=true; return current;}
                        EarlyExitException eee =
                            new EarlyExitException(11, input);
                        throw eee;
                }
                cnt11++;
            } while (true);

            if ( ! getUnorderedGroupHelper().canLeave(grammarAccess.getElementAccess().getUnorderedGroup_5()) ) {
                if (state.backtracking>0) {state.failed=true; return current;}
                throw new FailedPredicateException(input, "ruleElement", "getUnorderedGroupHelper().canLeave(grammarAccess.getElementAccess().getUnorderedGroup_5())");
            }

            }


            }

            getUnorderedGroupHelper().leave(grammarAccess.getElementAccess().getUnorderedGroup_5());

            }

            otherlv_19=(Token)match(input,25,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_19, grammarAccess.getElementAccess().getRightCurlyBracketKeyword_6());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleElement"


    // $ANTLR start "entryRuleRotation"
    // InternalMcmodel.g:837:1: entryRuleRotation returns [EObject current=null] : iv_ruleRotation= ruleRotation EOF ;
    public final EObject entryRuleRotation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleRotation = null;


        try {
            // InternalMcmodel.g:837:49: (iv_ruleRotation= ruleRotation EOF )
            // InternalMcmodel.g:838:2: iv_ruleRotation= ruleRotation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRotationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleRotation=ruleRotation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleRotation; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleRotation"


    // $ANTLR start "ruleRotation"
    // InternalMcmodel.g:844:1: ruleRotation returns [EObject current=null] : ( () otherlv_1= '{' ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= 'origin' otherlv_4= '=' ( (lv_origin_5_0= ruleVec3d ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'axis' otherlv_7= '=' ( (lv_axis_8_0= ruleEnumAxis ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= 'angle' otherlv_10= '=' ( (lv_angle_11_0= ruleNUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_rescaleDefined_12_0= 'rescale' ) ) otherlv_13= '=' ( ( (lv_rescale_14_0= 'true' ) ) | otherlv_15= 'false' ) ) ) ) ) )+ {...}?) ) ) otherlv_16= '}' ) ;
    public final EObject ruleRotation() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token otherlv_10=null;
        Token lv_rescaleDefined_12_0=null;
        Token otherlv_13=null;
        Token lv_rescale_14_0=null;
        Token otherlv_15=null;
        Token otherlv_16=null;
        EObject lv_origin_5_0 = null;

        Enumerator lv_axis_8_0 = null;

        AntlrDatatypeRuleToken lv_angle_11_0 = null;



        	enterRule();

        try {
            // InternalMcmodel.g:850:2: ( ( () otherlv_1= '{' ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= 'origin' otherlv_4= '=' ( (lv_origin_5_0= ruleVec3d ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'axis' otherlv_7= '=' ( (lv_axis_8_0= ruleEnumAxis ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= 'angle' otherlv_10= '=' ( (lv_angle_11_0= ruleNUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_rescaleDefined_12_0= 'rescale' ) ) otherlv_13= '=' ( ( (lv_rescale_14_0= 'true' ) ) | otherlv_15= 'false' ) ) ) ) ) )+ {...}?) ) ) otherlv_16= '}' ) )
            // InternalMcmodel.g:851:2: ( () otherlv_1= '{' ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= 'origin' otherlv_4= '=' ( (lv_origin_5_0= ruleVec3d ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'axis' otherlv_7= '=' ( (lv_axis_8_0= ruleEnumAxis ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= 'angle' otherlv_10= '=' ( (lv_angle_11_0= ruleNUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_rescaleDefined_12_0= 'rescale' ) ) otherlv_13= '=' ( ( (lv_rescale_14_0= 'true' ) ) | otherlv_15= 'false' ) ) ) ) ) )+ {...}?) ) ) otherlv_16= '}' )
            {
            // InternalMcmodel.g:851:2: ( () otherlv_1= '{' ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= 'origin' otherlv_4= '=' ( (lv_origin_5_0= ruleVec3d ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'axis' otherlv_7= '=' ( (lv_axis_8_0= ruleEnumAxis ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= 'angle' otherlv_10= '=' ( (lv_angle_11_0= ruleNUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_rescaleDefined_12_0= 'rescale' ) ) otherlv_13= '=' ( ( (lv_rescale_14_0= 'true' ) ) | otherlv_15= 'false' ) ) ) ) ) )+ {...}?) ) ) otherlv_16= '}' )
            // InternalMcmodel.g:852:3: () otherlv_1= '{' ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= 'origin' otherlv_4= '=' ( (lv_origin_5_0= ruleVec3d ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'axis' otherlv_7= '=' ( (lv_axis_8_0= ruleEnumAxis ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= 'angle' otherlv_10= '=' ( (lv_angle_11_0= ruleNUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_rescaleDefined_12_0= 'rescale' ) ) otherlv_13= '=' ( ( (lv_rescale_14_0= 'true' ) ) | otherlv_15= 'false' ) ) ) ) ) )+ {...}?) ) ) otherlv_16= '}'
            {
            // InternalMcmodel.g:852:3: ()
            // InternalMcmodel.g:853:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getRotationAccess().getRotationAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,24,FOLLOW_20); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getRotationAccess().getLeftCurlyBracketKeyword_1());
              		
            }
            // InternalMcmodel.g:863:3: ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= 'origin' otherlv_4= '=' ( (lv_origin_5_0= ruleVec3d ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'axis' otherlv_7= '=' ( (lv_axis_8_0= ruleEnumAxis ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= 'angle' otherlv_10= '=' ( (lv_angle_11_0= ruleNUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_rescaleDefined_12_0= 'rescale' ) ) otherlv_13= '=' ( ( (lv_rescale_14_0= 'true' ) ) | otherlv_15= 'false' ) ) ) ) ) )+ {...}?) ) )
            // InternalMcmodel.g:864:4: ( ( ( ({...}? => ( ({...}? => (otherlv_3= 'origin' otherlv_4= '=' ( (lv_origin_5_0= ruleVec3d ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'axis' otherlv_7= '=' ( (lv_axis_8_0= ruleEnumAxis ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= 'angle' otherlv_10= '=' ( (lv_angle_11_0= ruleNUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_rescaleDefined_12_0= 'rescale' ) ) otherlv_13= '=' ( ( (lv_rescale_14_0= 'true' ) ) | otherlv_15= 'false' ) ) ) ) ) )+ {...}?) )
            {
            // InternalMcmodel.g:864:4: ( ( ( ({...}? => ( ({...}? => (otherlv_3= 'origin' otherlv_4= '=' ( (lv_origin_5_0= ruleVec3d ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'axis' otherlv_7= '=' ( (lv_axis_8_0= ruleEnumAxis ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= 'angle' otherlv_10= '=' ( (lv_angle_11_0= ruleNUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_rescaleDefined_12_0= 'rescale' ) ) otherlv_13= '=' ( ( (lv_rescale_14_0= 'true' ) ) | otherlv_15= 'false' ) ) ) ) ) )+ {...}?) )
            // InternalMcmodel.g:865:5: ( ( ({...}? => ( ({...}? => (otherlv_3= 'origin' otherlv_4= '=' ( (lv_origin_5_0= ruleVec3d ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'axis' otherlv_7= '=' ( (lv_axis_8_0= ruleEnumAxis ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= 'angle' otherlv_10= '=' ( (lv_angle_11_0= ruleNUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_rescaleDefined_12_0= 'rescale' ) ) otherlv_13= '=' ( ( (lv_rescale_14_0= 'true' ) ) | otherlv_15= 'false' ) ) ) ) ) )+ {...}?)
            {
            getUnorderedGroupHelper().enter(grammarAccess.getRotationAccess().getUnorderedGroup_2());
            // InternalMcmodel.g:868:5: ( ( ({...}? => ( ({...}? => (otherlv_3= 'origin' otherlv_4= '=' ( (lv_origin_5_0= ruleVec3d ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'axis' otherlv_7= '=' ( (lv_axis_8_0= ruleEnumAxis ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= 'angle' otherlv_10= '=' ( (lv_angle_11_0= ruleNUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_rescaleDefined_12_0= 'rescale' ) ) otherlv_13= '=' ( ( (lv_rescale_14_0= 'true' ) ) | otherlv_15= 'false' ) ) ) ) ) )+ {...}?)
            // InternalMcmodel.g:869:6: ( ({...}? => ( ({...}? => (otherlv_3= 'origin' otherlv_4= '=' ( (lv_origin_5_0= ruleVec3d ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'axis' otherlv_7= '=' ( (lv_axis_8_0= ruleEnumAxis ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= 'angle' otherlv_10= '=' ( (lv_angle_11_0= ruleNUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_rescaleDefined_12_0= 'rescale' ) ) otherlv_13= '=' ( ( (lv_rescale_14_0= 'true' ) ) | otherlv_15= 'false' ) ) ) ) ) )+ {...}?
            {
            // InternalMcmodel.g:869:6: ( ({...}? => ( ({...}? => (otherlv_3= 'origin' otherlv_4= '=' ( (lv_origin_5_0= ruleVec3d ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'axis' otherlv_7= '=' ( (lv_axis_8_0= ruleEnumAxis ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= 'angle' otherlv_10= '=' ( (lv_angle_11_0= ruleNUMBER ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_rescaleDefined_12_0= 'rescale' ) ) otherlv_13= '=' ( ( (lv_rescale_14_0= 'true' ) ) | otherlv_15= 'false' ) ) ) ) ) )+
            int cnt13=0;
            loop13:
            do {
                int alt13=5;
                int LA13_0 = input.LA(1);

                if ( LA13_0 == 36 && getUnorderedGroupHelper().canSelect(grammarAccess.getRotationAccess().getUnorderedGroup_2(), 0) ) {
                    alt13=1;
                }
                else if ( LA13_0 == 37 && getUnorderedGroupHelper().canSelect(grammarAccess.getRotationAccess().getUnorderedGroup_2(), 1) ) {
                    alt13=2;
                }
                else if ( LA13_0 == 38 && getUnorderedGroupHelper().canSelect(grammarAccess.getRotationAccess().getUnorderedGroup_2(), 2) ) {
                    alt13=3;
                }
                else if ( LA13_0 == 39 && getUnorderedGroupHelper().canSelect(grammarAccess.getRotationAccess().getUnorderedGroup_2(), 3) ) {
                    alt13=4;
                }


                switch (alt13) {
            	case 1 :
            	    // InternalMcmodel.g:870:4: ({...}? => ( ({...}? => (otherlv_3= 'origin' otherlv_4= '=' ( (lv_origin_5_0= ruleVec3d ) ) ) ) ) )
            	    {
            	    // InternalMcmodel.g:870:4: ({...}? => ( ({...}? => (otherlv_3= 'origin' otherlv_4= '=' ( (lv_origin_5_0= ruleVec3d ) ) ) ) ) )
            	    // InternalMcmodel.g:871:5: {...}? => ( ({...}? => (otherlv_3= 'origin' otherlv_4= '=' ( (lv_origin_5_0= ruleVec3d ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getRotationAccess().getUnorderedGroup_2(), 0) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleRotation", "getUnorderedGroupHelper().canSelect(grammarAccess.getRotationAccess().getUnorderedGroup_2(), 0)");
            	    }
            	    // InternalMcmodel.g:871:105: ( ({...}? => (otherlv_3= 'origin' otherlv_4= '=' ( (lv_origin_5_0= ruleVec3d ) ) ) ) )
            	    // InternalMcmodel.g:872:6: ({...}? => (otherlv_3= 'origin' otherlv_4= '=' ( (lv_origin_5_0= ruleVec3d ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getRotationAccess().getUnorderedGroup_2(), 0);
            	    // InternalMcmodel.g:875:9: ({...}? => (otherlv_3= 'origin' otherlv_4= '=' ( (lv_origin_5_0= ruleVec3d ) ) ) )
            	    // InternalMcmodel.g:875:10: {...}? => (otherlv_3= 'origin' otherlv_4= '=' ( (lv_origin_5_0= ruleVec3d ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleRotation", "true");
            	    }
            	    // InternalMcmodel.g:875:19: (otherlv_3= 'origin' otherlv_4= '=' ( (lv_origin_5_0= ruleVec3d ) ) )
            	    // InternalMcmodel.g:875:20: otherlv_3= 'origin' otherlv_4= '=' ( (lv_origin_5_0= ruleVec3d ) )
            	    {
            	    otherlv_3=(Token)match(input,36,FOLLOW_3); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_3, grammarAccess.getRotationAccess().getOriginKeyword_2_0_0());
            	      								
            	    }
            	    otherlv_4=(Token)match(input,18,FOLLOW_14); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_4, grammarAccess.getRotationAccess().getEqualsSignKeyword_2_0_1());
            	      								
            	    }
            	    // InternalMcmodel.g:883:9: ( (lv_origin_5_0= ruleVec3d ) )
            	    // InternalMcmodel.g:884:10: (lv_origin_5_0= ruleVec3d )
            	    {
            	    // InternalMcmodel.g:884:10: (lv_origin_5_0= ruleVec3d )
            	    // InternalMcmodel.g:885:11: lv_origin_5_0= ruleVec3d
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getRotationAccess().getOriginVec3dParserRuleCall_2_0_2_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_21);
            	    lv_origin_5_0=ruleVec3d();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getRotationRule());
            	      											}
            	      											set(
            	      												current,
            	      												"origin",
            	      												lv_origin_5_0,
            	      												"com.raptor.mcmodel.Mcmodel.Vec3d");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getRotationAccess().getUnorderedGroup_2());

            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // InternalMcmodel.g:908:4: ({...}? => ( ({...}? => (otherlv_6= 'axis' otherlv_7= '=' ( (lv_axis_8_0= ruleEnumAxis ) ) ) ) ) )
            	    {
            	    // InternalMcmodel.g:908:4: ({...}? => ( ({...}? => (otherlv_6= 'axis' otherlv_7= '=' ( (lv_axis_8_0= ruleEnumAxis ) ) ) ) ) )
            	    // InternalMcmodel.g:909:5: {...}? => ( ({...}? => (otherlv_6= 'axis' otherlv_7= '=' ( (lv_axis_8_0= ruleEnumAxis ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getRotationAccess().getUnorderedGroup_2(), 1) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleRotation", "getUnorderedGroupHelper().canSelect(grammarAccess.getRotationAccess().getUnorderedGroup_2(), 1)");
            	    }
            	    // InternalMcmodel.g:909:105: ( ({...}? => (otherlv_6= 'axis' otherlv_7= '=' ( (lv_axis_8_0= ruleEnumAxis ) ) ) ) )
            	    // InternalMcmodel.g:910:6: ({...}? => (otherlv_6= 'axis' otherlv_7= '=' ( (lv_axis_8_0= ruleEnumAxis ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getRotationAccess().getUnorderedGroup_2(), 1);
            	    // InternalMcmodel.g:913:9: ({...}? => (otherlv_6= 'axis' otherlv_7= '=' ( (lv_axis_8_0= ruleEnumAxis ) ) ) )
            	    // InternalMcmodel.g:913:10: {...}? => (otherlv_6= 'axis' otherlv_7= '=' ( (lv_axis_8_0= ruleEnumAxis ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleRotation", "true");
            	    }
            	    // InternalMcmodel.g:913:19: (otherlv_6= 'axis' otherlv_7= '=' ( (lv_axis_8_0= ruleEnumAxis ) ) )
            	    // InternalMcmodel.g:913:20: otherlv_6= 'axis' otherlv_7= '=' ( (lv_axis_8_0= ruleEnumAxis ) )
            	    {
            	    otherlv_6=(Token)match(input,37,FOLLOW_3); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_6, grammarAccess.getRotationAccess().getAxisKeyword_2_1_0());
            	      								
            	    }
            	    otherlv_7=(Token)match(input,18,FOLLOW_22); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_7, grammarAccess.getRotationAccess().getEqualsSignKeyword_2_1_1());
            	      								
            	    }
            	    // InternalMcmodel.g:921:9: ( (lv_axis_8_0= ruleEnumAxis ) )
            	    // InternalMcmodel.g:922:10: (lv_axis_8_0= ruleEnumAxis )
            	    {
            	    // InternalMcmodel.g:922:10: (lv_axis_8_0= ruleEnumAxis )
            	    // InternalMcmodel.g:923:11: lv_axis_8_0= ruleEnumAxis
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getRotationAccess().getAxisEnumAxisEnumRuleCall_2_1_2_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_21);
            	    lv_axis_8_0=ruleEnumAxis();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getRotationRule());
            	      											}
            	      											set(
            	      												current,
            	      												"axis",
            	      												lv_axis_8_0,
            	      												"com.raptor.mcmodel.Mcmodel.EnumAxis");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getRotationAccess().getUnorderedGroup_2());

            	    }


            	    }


            	    }
            	    break;
            	case 3 :
            	    // InternalMcmodel.g:946:4: ({...}? => ( ({...}? => (otherlv_9= 'angle' otherlv_10= '=' ( (lv_angle_11_0= ruleNUMBER ) ) ) ) ) )
            	    {
            	    // InternalMcmodel.g:946:4: ({...}? => ( ({...}? => (otherlv_9= 'angle' otherlv_10= '=' ( (lv_angle_11_0= ruleNUMBER ) ) ) ) ) )
            	    // InternalMcmodel.g:947:5: {...}? => ( ({...}? => (otherlv_9= 'angle' otherlv_10= '=' ( (lv_angle_11_0= ruleNUMBER ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getRotationAccess().getUnorderedGroup_2(), 2) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleRotation", "getUnorderedGroupHelper().canSelect(grammarAccess.getRotationAccess().getUnorderedGroup_2(), 2)");
            	    }
            	    // InternalMcmodel.g:947:105: ( ({...}? => (otherlv_9= 'angle' otherlv_10= '=' ( (lv_angle_11_0= ruleNUMBER ) ) ) ) )
            	    // InternalMcmodel.g:948:6: ({...}? => (otherlv_9= 'angle' otherlv_10= '=' ( (lv_angle_11_0= ruleNUMBER ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getRotationAccess().getUnorderedGroup_2(), 2);
            	    // InternalMcmodel.g:951:9: ({...}? => (otherlv_9= 'angle' otherlv_10= '=' ( (lv_angle_11_0= ruleNUMBER ) ) ) )
            	    // InternalMcmodel.g:951:10: {...}? => (otherlv_9= 'angle' otherlv_10= '=' ( (lv_angle_11_0= ruleNUMBER ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleRotation", "true");
            	    }
            	    // InternalMcmodel.g:951:19: (otherlv_9= 'angle' otherlv_10= '=' ( (lv_angle_11_0= ruleNUMBER ) ) )
            	    // InternalMcmodel.g:951:20: otherlv_9= 'angle' otherlv_10= '=' ( (lv_angle_11_0= ruleNUMBER ) )
            	    {
            	    otherlv_9=(Token)match(input,38,FOLLOW_3); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_9, grammarAccess.getRotationAccess().getAngleKeyword_2_2_0());
            	      								
            	    }
            	    otherlv_10=(Token)match(input,18,FOLLOW_23); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_10, grammarAccess.getRotationAccess().getEqualsSignKeyword_2_2_1());
            	      								
            	    }
            	    // InternalMcmodel.g:959:9: ( (lv_angle_11_0= ruleNUMBER ) )
            	    // InternalMcmodel.g:960:10: (lv_angle_11_0= ruleNUMBER )
            	    {
            	    // InternalMcmodel.g:960:10: (lv_angle_11_0= ruleNUMBER )
            	    // InternalMcmodel.g:961:11: lv_angle_11_0= ruleNUMBER
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getRotationAccess().getAngleNUMBERParserRuleCall_2_2_2_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_21);
            	    lv_angle_11_0=ruleNUMBER();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getRotationRule());
            	      											}
            	      											set(
            	      												current,
            	      												"angle",
            	      												lv_angle_11_0,
            	      												"com.raptor.mcmodel.Mcmodel.NUMBER");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getRotationAccess().getUnorderedGroup_2());

            	    }


            	    }


            	    }
            	    break;
            	case 4 :
            	    // InternalMcmodel.g:984:4: ({...}? => ( ({...}? => ( ( (lv_rescaleDefined_12_0= 'rescale' ) ) otherlv_13= '=' ( ( (lv_rescale_14_0= 'true' ) ) | otherlv_15= 'false' ) ) ) ) )
            	    {
            	    // InternalMcmodel.g:984:4: ({...}? => ( ({...}? => ( ( (lv_rescaleDefined_12_0= 'rescale' ) ) otherlv_13= '=' ( ( (lv_rescale_14_0= 'true' ) ) | otherlv_15= 'false' ) ) ) ) )
            	    // InternalMcmodel.g:985:5: {...}? => ( ({...}? => ( ( (lv_rescaleDefined_12_0= 'rescale' ) ) otherlv_13= '=' ( ( (lv_rescale_14_0= 'true' ) ) | otherlv_15= 'false' ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getRotationAccess().getUnorderedGroup_2(), 3) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleRotation", "getUnorderedGroupHelper().canSelect(grammarAccess.getRotationAccess().getUnorderedGroup_2(), 3)");
            	    }
            	    // InternalMcmodel.g:985:105: ( ({...}? => ( ( (lv_rescaleDefined_12_0= 'rescale' ) ) otherlv_13= '=' ( ( (lv_rescale_14_0= 'true' ) ) | otherlv_15= 'false' ) ) ) )
            	    // InternalMcmodel.g:986:6: ({...}? => ( ( (lv_rescaleDefined_12_0= 'rescale' ) ) otherlv_13= '=' ( ( (lv_rescale_14_0= 'true' ) ) | otherlv_15= 'false' ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getRotationAccess().getUnorderedGroup_2(), 3);
            	    // InternalMcmodel.g:989:9: ({...}? => ( ( (lv_rescaleDefined_12_0= 'rescale' ) ) otherlv_13= '=' ( ( (lv_rescale_14_0= 'true' ) ) | otherlv_15= 'false' ) ) )
            	    // InternalMcmodel.g:989:10: {...}? => ( ( (lv_rescaleDefined_12_0= 'rescale' ) ) otherlv_13= '=' ( ( (lv_rescale_14_0= 'true' ) ) | otherlv_15= 'false' ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleRotation", "true");
            	    }
            	    // InternalMcmodel.g:989:19: ( ( (lv_rescaleDefined_12_0= 'rescale' ) ) otherlv_13= '=' ( ( (lv_rescale_14_0= 'true' ) ) | otherlv_15= 'false' ) )
            	    // InternalMcmodel.g:989:20: ( (lv_rescaleDefined_12_0= 'rescale' ) ) otherlv_13= '=' ( ( (lv_rescale_14_0= 'true' ) ) | otherlv_15= 'false' )
            	    {
            	    // InternalMcmodel.g:989:20: ( (lv_rescaleDefined_12_0= 'rescale' ) )
            	    // InternalMcmodel.g:990:10: (lv_rescaleDefined_12_0= 'rescale' )
            	    {
            	    // InternalMcmodel.g:990:10: (lv_rescaleDefined_12_0= 'rescale' )
            	    // InternalMcmodel.g:991:11: lv_rescaleDefined_12_0= 'rescale'
            	    {
            	    lv_rescaleDefined_12_0=(Token)match(input,39,FOLLOW_3); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											newLeafNode(lv_rescaleDefined_12_0, grammarAccess.getRotationAccess().getRescaleDefinedRescaleKeyword_2_3_0_0());
            	      										
            	    }
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElement(grammarAccess.getRotationRule());
            	      											}
            	      											setWithLastConsumed(current, "rescaleDefined", true, "rescale");
            	      										
            	    }

            	    }


            	    }

            	    otherlv_13=(Token)match(input,18,FOLLOW_7); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_13, grammarAccess.getRotationAccess().getEqualsSignKeyword_2_3_1());
            	      								
            	    }
            	    // InternalMcmodel.g:1007:9: ( ( (lv_rescale_14_0= 'true' ) ) | otherlv_15= 'false' )
            	    int alt12=2;
            	    int LA12_0 = input.LA(1);

            	    if ( (LA12_0==20) ) {
            	        alt12=1;
            	    }
            	    else if ( (LA12_0==21) ) {
            	        alt12=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 12, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt12) {
            	        case 1 :
            	            // InternalMcmodel.g:1008:10: ( (lv_rescale_14_0= 'true' ) )
            	            {
            	            // InternalMcmodel.g:1008:10: ( (lv_rescale_14_0= 'true' ) )
            	            // InternalMcmodel.g:1009:11: (lv_rescale_14_0= 'true' )
            	            {
            	            // InternalMcmodel.g:1009:11: (lv_rescale_14_0= 'true' )
            	            // InternalMcmodel.g:1010:12: lv_rescale_14_0= 'true'
            	            {
            	            lv_rescale_14_0=(Token)match(input,20,FOLLOW_21); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              												newLeafNode(lv_rescale_14_0, grammarAccess.getRotationAccess().getRescaleTrueKeyword_2_3_2_0_0());
            	              											
            	            }
            	            if ( state.backtracking==0 ) {

            	              												if (current==null) {
            	              													current = createModelElement(grammarAccess.getRotationRule());
            	              												}
            	              												setWithLastConsumed(current, "rescale", true, "true");
            	              											
            	            }

            	            }


            	            }


            	            }
            	            break;
            	        case 2 :
            	            // InternalMcmodel.g:1023:10: otherlv_15= 'false'
            	            {
            	            otherlv_15=(Token)match(input,21,FOLLOW_21); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(otherlv_15, grammarAccess.getRotationAccess().getFalseKeyword_2_3_2_1());
            	              									
            	            }

            	            }
            	            break;

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getRotationAccess().getUnorderedGroup_2());

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt13 >= 1 ) break loop13;
            	    if (state.backtracking>0) {state.failed=true; return current;}
                        EarlyExitException eee =
                            new EarlyExitException(13, input);
                        throw eee;
                }
                cnt13++;
            } while (true);

            if ( ! getUnorderedGroupHelper().canLeave(grammarAccess.getRotationAccess().getUnorderedGroup_2()) ) {
                if (state.backtracking>0) {state.failed=true; return current;}
                throw new FailedPredicateException(input, "ruleRotation", "getUnorderedGroupHelper().canLeave(grammarAccess.getRotationAccess().getUnorderedGroup_2())");
            }

            }


            }

            getUnorderedGroupHelper().leave(grammarAccess.getRotationAccess().getUnorderedGroup_2());

            }

            otherlv_16=(Token)match(input,25,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_16, grammarAccess.getRotationAccess().getRightCurlyBracketKeyword_3());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRotation"


    // $ANTLR start "entryRuleFaces"
    // InternalMcmodel.g:1050:1: entryRuleFaces returns [EObject current=null] : iv_ruleFaces= ruleFaces EOF ;
    public final EObject entryRuleFaces() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFaces = null;


        try {
            // InternalMcmodel.g:1050:46: (iv_ruleFaces= ruleFaces EOF )
            // InternalMcmodel.g:1051:2: iv_ruleFaces= ruleFaces EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFacesRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleFaces=ruleFaces();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFaces; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFaces"


    // $ANTLR start "ruleFaces"
    // InternalMcmodel.g:1057:1: ruleFaces returns [EObject current=null] : ( ( (lv_sides_0_0= ruleEnumFace ) ) (otherlv_1= ',' ( (lv_sides_2_0= ruleEnumFace ) ) )* otherlv_3= '=' ( (lv_face_4_0= ruleFace ) ) ) ;
    public final EObject ruleFaces() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Enumerator lv_sides_0_0 = null;

        Enumerator lv_sides_2_0 = null;

        EObject lv_face_4_0 = null;



        	enterRule();

        try {
            // InternalMcmodel.g:1063:2: ( ( ( (lv_sides_0_0= ruleEnumFace ) ) (otherlv_1= ',' ( (lv_sides_2_0= ruleEnumFace ) ) )* otherlv_3= '=' ( (lv_face_4_0= ruleFace ) ) ) )
            // InternalMcmodel.g:1064:2: ( ( (lv_sides_0_0= ruleEnumFace ) ) (otherlv_1= ',' ( (lv_sides_2_0= ruleEnumFace ) ) )* otherlv_3= '=' ( (lv_face_4_0= ruleFace ) ) )
            {
            // InternalMcmodel.g:1064:2: ( ( (lv_sides_0_0= ruleEnumFace ) ) (otherlv_1= ',' ( (lv_sides_2_0= ruleEnumFace ) ) )* otherlv_3= '=' ( (lv_face_4_0= ruleFace ) ) )
            // InternalMcmodel.g:1065:3: ( (lv_sides_0_0= ruleEnumFace ) ) (otherlv_1= ',' ( (lv_sides_2_0= ruleEnumFace ) ) )* otherlv_3= '=' ( (lv_face_4_0= ruleFace ) )
            {
            // InternalMcmodel.g:1065:3: ( (lv_sides_0_0= ruleEnumFace ) )
            // InternalMcmodel.g:1066:4: (lv_sides_0_0= ruleEnumFace )
            {
            // InternalMcmodel.g:1066:4: (lv_sides_0_0= ruleEnumFace )
            // InternalMcmodel.g:1067:5: lv_sides_0_0= ruleEnumFace
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getFacesAccess().getSidesEnumFaceEnumRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_24);
            lv_sides_0_0=ruleEnumFace();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getFacesRule());
              					}
              					add(
              						current,
              						"sides",
              						lv_sides_0_0,
              						"com.raptor.mcmodel.Mcmodel.EnumFace");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalMcmodel.g:1084:3: (otherlv_1= ',' ( (lv_sides_2_0= ruleEnumFace ) ) )*
            loop14:
            do {
                int alt14=2;
                int LA14_0 = input.LA(1);

                if ( (LA14_0==40) ) {
                    alt14=1;
                }


                switch (alt14) {
            	case 1 :
            	    // InternalMcmodel.g:1085:4: otherlv_1= ',' ( (lv_sides_2_0= ruleEnumFace ) )
            	    {
            	    otherlv_1=(Token)match(input,40,FOLLOW_25); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_1, grammarAccess.getFacesAccess().getCommaKeyword_1_0());
            	      			
            	    }
            	    // InternalMcmodel.g:1089:4: ( (lv_sides_2_0= ruleEnumFace ) )
            	    // InternalMcmodel.g:1090:5: (lv_sides_2_0= ruleEnumFace )
            	    {
            	    // InternalMcmodel.g:1090:5: (lv_sides_2_0= ruleEnumFace )
            	    // InternalMcmodel.g:1091:6: lv_sides_2_0= ruleEnumFace
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getFacesAccess().getSidesEnumFaceEnumRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_24);
            	    lv_sides_2_0=ruleEnumFace();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getFacesRule());
            	      						}
            	      						add(
            	      							current,
            	      							"sides",
            	      							lv_sides_2_0,
            	      							"com.raptor.mcmodel.Mcmodel.EnumFace");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop14;
                }
            } while (true);

            otherlv_3=(Token)match(input,18,FOLLOW_13); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getFacesAccess().getEqualsSignKeyword_2());
              		
            }
            // InternalMcmodel.g:1113:3: ( (lv_face_4_0= ruleFace ) )
            // InternalMcmodel.g:1114:4: (lv_face_4_0= ruleFace )
            {
            // InternalMcmodel.g:1114:4: (lv_face_4_0= ruleFace )
            // InternalMcmodel.g:1115:5: lv_face_4_0= ruleFace
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getFacesAccess().getFaceFaceParserRuleCall_3_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_face_4_0=ruleFace();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getFacesRule());
              					}
              					set(
              						current,
              						"face",
              						lv_face_4_0,
              						"com.raptor.mcmodel.Mcmodel.Face");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFaces"


    // $ANTLR start "entryRuleFace"
    // InternalMcmodel.g:1136:1: entryRuleFace returns [EObject current=null] : iv_ruleFace= ruleFace EOF ;
    public final EObject entryRuleFace() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFace = null;


        try {
            // InternalMcmodel.g:1136:45: (iv_ruleFace= ruleFace EOF )
            // InternalMcmodel.g:1137:2: iv_ruleFace= ruleFace EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFaceRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleFace=ruleFace();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFace; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFace"


    // $ANTLR start "ruleFace"
    // InternalMcmodel.g:1143:1: ruleFace returns [EObject current=null] : ( ( (lv_texture_0_0= ruleTextureValue ) ) (otherlv_1= '@' ( (lv_uv_2_0= ruleVec4d ) ) )? (otherlv_3= '(' ( ( ( ( ({...}? => ( ({...}? => ( ( (lv_cullfaceDefined_5_0= 'cullface' ) ) otherlv_6= '=' ( (lv_cullface_7_0= ruleEnumFace ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_rotationDefined_8_0= 'rotation' ) ) otherlv_9= '=' ( (lv_rotation_10_0= ruleLONG ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_tintindexDefined_11_0= 'tintindex' ) ) otherlv_12= '=' ( (lv_tintindex_13_0= ruleLONG ) ) ) ) ) ) )* ) ) ) otherlv_14= ')' )? ) ;
    public final EObject ruleFace() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token lv_cullfaceDefined_5_0=null;
        Token otherlv_6=null;
        Token lv_rotationDefined_8_0=null;
        Token otherlv_9=null;
        Token lv_tintindexDefined_11_0=null;
        Token otherlv_12=null;
        Token otherlv_14=null;
        AntlrDatatypeRuleToken lv_texture_0_0 = null;

        EObject lv_uv_2_0 = null;

        Enumerator lv_cullface_7_0 = null;

        AntlrDatatypeRuleToken lv_rotation_10_0 = null;

        AntlrDatatypeRuleToken lv_tintindex_13_0 = null;



        	enterRule();

        try {
            // InternalMcmodel.g:1149:2: ( ( ( (lv_texture_0_0= ruleTextureValue ) ) (otherlv_1= '@' ( (lv_uv_2_0= ruleVec4d ) ) )? (otherlv_3= '(' ( ( ( ( ({...}? => ( ({...}? => ( ( (lv_cullfaceDefined_5_0= 'cullface' ) ) otherlv_6= '=' ( (lv_cullface_7_0= ruleEnumFace ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_rotationDefined_8_0= 'rotation' ) ) otherlv_9= '=' ( (lv_rotation_10_0= ruleLONG ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_tintindexDefined_11_0= 'tintindex' ) ) otherlv_12= '=' ( (lv_tintindex_13_0= ruleLONG ) ) ) ) ) ) )* ) ) ) otherlv_14= ')' )? ) )
            // InternalMcmodel.g:1150:2: ( ( (lv_texture_0_0= ruleTextureValue ) ) (otherlv_1= '@' ( (lv_uv_2_0= ruleVec4d ) ) )? (otherlv_3= '(' ( ( ( ( ({...}? => ( ({...}? => ( ( (lv_cullfaceDefined_5_0= 'cullface' ) ) otherlv_6= '=' ( (lv_cullface_7_0= ruleEnumFace ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_rotationDefined_8_0= 'rotation' ) ) otherlv_9= '=' ( (lv_rotation_10_0= ruleLONG ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_tintindexDefined_11_0= 'tintindex' ) ) otherlv_12= '=' ( (lv_tintindex_13_0= ruleLONG ) ) ) ) ) ) )* ) ) ) otherlv_14= ')' )? )
            {
            // InternalMcmodel.g:1150:2: ( ( (lv_texture_0_0= ruleTextureValue ) ) (otherlv_1= '@' ( (lv_uv_2_0= ruleVec4d ) ) )? (otherlv_3= '(' ( ( ( ( ({...}? => ( ({...}? => ( ( (lv_cullfaceDefined_5_0= 'cullface' ) ) otherlv_6= '=' ( (lv_cullface_7_0= ruleEnumFace ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_rotationDefined_8_0= 'rotation' ) ) otherlv_9= '=' ( (lv_rotation_10_0= ruleLONG ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_tintindexDefined_11_0= 'tintindex' ) ) otherlv_12= '=' ( (lv_tintindex_13_0= ruleLONG ) ) ) ) ) ) )* ) ) ) otherlv_14= ')' )? )
            // InternalMcmodel.g:1151:3: ( (lv_texture_0_0= ruleTextureValue ) ) (otherlv_1= '@' ( (lv_uv_2_0= ruleVec4d ) ) )? (otherlv_3= '(' ( ( ( ( ({...}? => ( ({...}? => ( ( (lv_cullfaceDefined_5_0= 'cullface' ) ) otherlv_6= '=' ( (lv_cullface_7_0= ruleEnumFace ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_rotationDefined_8_0= 'rotation' ) ) otherlv_9= '=' ( (lv_rotation_10_0= ruleLONG ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_tintindexDefined_11_0= 'tintindex' ) ) otherlv_12= '=' ( (lv_tintindex_13_0= ruleLONG ) ) ) ) ) ) )* ) ) ) otherlv_14= ')' )?
            {
            // InternalMcmodel.g:1151:3: ( (lv_texture_0_0= ruleTextureValue ) )
            // InternalMcmodel.g:1152:4: (lv_texture_0_0= ruleTextureValue )
            {
            // InternalMcmodel.g:1152:4: (lv_texture_0_0= ruleTextureValue )
            // InternalMcmodel.g:1153:5: lv_texture_0_0= ruleTextureValue
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getFaceAccess().getTextureTextureValueParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_26);
            lv_texture_0_0=ruleTextureValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getFaceRule());
              					}
              					set(
              						current,
              						"texture",
              						lv_texture_0_0,
              						"com.raptor.mcmodel.Mcmodel.TextureValue");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalMcmodel.g:1170:3: (otherlv_1= '@' ( (lv_uv_2_0= ruleVec4d ) ) )?
            int alt15=2;
            int LA15_0 = input.LA(1);

            if ( (LA15_0==41) ) {
                alt15=1;
            }
            switch (alt15) {
                case 1 :
                    // InternalMcmodel.g:1171:4: otherlv_1= '@' ( (lv_uv_2_0= ruleVec4d ) )
                    {
                    otherlv_1=(Token)match(input,41,FOLLOW_14); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getFaceAccess().getCommercialAtKeyword_1_0());
                      			
                    }
                    // InternalMcmodel.g:1175:4: ( (lv_uv_2_0= ruleVec4d ) )
                    // InternalMcmodel.g:1176:5: (lv_uv_2_0= ruleVec4d )
                    {
                    // InternalMcmodel.g:1176:5: (lv_uv_2_0= ruleVec4d )
                    // InternalMcmodel.g:1177:6: lv_uv_2_0= ruleVec4d
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getFaceAccess().getUvVec4dParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_27);
                    lv_uv_2_0=ruleVec4d();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getFaceRule());
                      						}
                      						set(
                      							current,
                      							"uv",
                      							lv_uv_2_0,
                      							"com.raptor.mcmodel.Mcmodel.Vec4d");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalMcmodel.g:1195:3: (otherlv_3= '(' ( ( ( ( ({...}? => ( ({...}? => ( ( (lv_cullfaceDefined_5_0= 'cullface' ) ) otherlv_6= '=' ( (lv_cullface_7_0= ruleEnumFace ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_rotationDefined_8_0= 'rotation' ) ) otherlv_9= '=' ( (lv_rotation_10_0= ruleLONG ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_tintindexDefined_11_0= 'tintindex' ) ) otherlv_12= '=' ( (lv_tintindex_13_0= ruleLONG ) ) ) ) ) ) )* ) ) ) otherlv_14= ')' )?
            int alt17=2;
            int LA17_0 = input.LA(1);

            if ( (LA17_0==42) ) {
                alt17=1;
            }
            switch (alt17) {
                case 1 :
                    // InternalMcmodel.g:1196:4: otherlv_3= '(' ( ( ( ( ({...}? => ( ({...}? => ( ( (lv_cullfaceDefined_5_0= 'cullface' ) ) otherlv_6= '=' ( (lv_cullface_7_0= ruleEnumFace ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_rotationDefined_8_0= 'rotation' ) ) otherlv_9= '=' ( (lv_rotation_10_0= ruleLONG ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_tintindexDefined_11_0= 'tintindex' ) ) otherlv_12= '=' ( (lv_tintindex_13_0= ruleLONG ) ) ) ) ) ) )* ) ) ) otherlv_14= ')'
                    {
                    otherlv_3=(Token)match(input,42,FOLLOW_28); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getFaceAccess().getLeftParenthesisKeyword_2_0());
                      			
                    }
                    // InternalMcmodel.g:1200:4: ( ( ( ( ({...}? => ( ({...}? => ( ( (lv_cullfaceDefined_5_0= 'cullface' ) ) otherlv_6= '=' ( (lv_cullface_7_0= ruleEnumFace ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_rotationDefined_8_0= 'rotation' ) ) otherlv_9= '=' ( (lv_rotation_10_0= ruleLONG ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_tintindexDefined_11_0= 'tintindex' ) ) otherlv_12= '=' ( (lv_tintindex_13_0= ruleLONG ) ) ) ) ) ) )* ) ) )
                    // InternalMcmodel.g:1201:5: ( ( ( ({...}? => ( ({...}? => ( ( (lv_cullfaceDefined_5_0= 'cullface' ) ) otherlv_6= '=' ( (lv_cullface_7_0= ruleEnumFace ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_rotationDefined_8_0= 'rotation' ) ) otherlv_9= '=' ( (lv_rotation_10_0= ruleLONG ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_tintindexDefined_11_0= 'tintindex' ) ) otherlv_12= '=' ( (lv_tintindex_13_0= ruleLONG ) ) ) ) ) ) )* ) )
                    {
                    // InternalMcmodel.g:1201:5: ( ( ( ({...}? => ( ({...}? => ( ( (lv_cullfaceDefined_5_0= 'cullface' ) ) otherlv_6= '=' ( (lv_cullface_7_0= ruleEnumFace ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_rotationDefined_8_0= 'rotation' ) ) otherlv_9= '=' ( (lv_rotation_10_0= ruleLONG ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_tintindexDefined_11_0= 'tintindex' ) ) otherlv_12= '=' ( (lv_tintindex_13_0= ruleLONG ) ) ) ) ) ) )* ) )
                    // InternalMcmodel.g:1202:6: ( ( ({...}? => ( ({...}? => ( ( (lv_cullfaceDefined_5_0= 'cullface' ) ) otherlv_6= '=' ( (lv_cullface_7_0= ruleEnumFace ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_rotationDefined_8_0= 'rotation' ) ) otherlv_9= '=' ( (lv_rotation_10_0= ruleLONG ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_tintindexDefined_11_0= 'tintindex' ) ) otherlv_12= '=' ( (lv_tintindex_13_0= ruleLONG ) ) ) ) ) ) )* )
                    {
                    getUnorderedGroupHelper().enter(grammarAccess.getFaceAccess().getUnorderedGroup_2_1());
                    // InternalMcmodel.g:1205:6: ( ( ({...}? => ( ({...}? => ( ( (lv_cullfaceDefined_5_0= 'cullface' ) ) otherlv_6= '=' ( (lv_cullface_7_0= ruleEnumFace ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_rotationDefined_8_0= 'rotation' ) ) otherlv_9= '=' ( (lv_rotation_10_0= ruleLONG ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_tintindexDefined_11_0= 'tintindex' ) ) otherlv_12= '=' ( (lv_tintindex_13_0= ruleLONG ) ) ) ) ) ) )* )
                    // InternalMcmodel.g:1206:7: ( ({...}? => ( ({...}? => ( ( (lv_cullfaceDefined_5_0= 'cullface' ) ) otherlv_6= '=' ( (lv_cullface_7_0= ruleEnumFace ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_rotationDefined_8_0= 'rotation' ) ) otherlv_9= '=' ( (lv_rotation_10_0= ruleLONG ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_tintindexDefined_11_0= 'tintindex' ) ) otherlv_12= '=' ( (lv_tintindex_13_0= ruleLONG ) ) ) ) ) ) )*
                    {
                    // InternalMcmodel.g:1206:7: ( ({...}? => ( ({...}? => ( ( (lv_cullfaceDefined_5_0= 'cullface' ) ) otherlv_6= '=' ( (lv_cullface_7_0= ruleEnumFace ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_rotationDefined_8_0= 'rotation' ) ) otherlv_9= '=' ( (lv_rotation_10_0= ruleLONG ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_tintindexDefined_11_0= 'tintindex' ) ) otherlv_12= '=' ( (lv_tintindex_13_0= ruleLONG ) ) ) ) ) ) )*
                    loop16:
                    do {
                        int alt16=4;
                        int LA16_0 = input.LA(1);

                        if ( LA16_0 == 43 && getUnorderedGroupHelper().canSelect(grammarAccess.getFaceAccess().getUnorderedGroup_2_1(), 0) ) {
                            alt16=1;
                        }
                        else if ( LA16_0 == 32 && getUnorderedGroupHelper().canSelect(grammarAccess.getFaceAccess().getUnorderedGroup_2_1(), 1) ) {
                            alt16=2;
                        }
                        else if ( LA16_0 == 44 && getUnorderedGroupHelper().canSelect(grammarAccess.getFaceAccess().getUnorderedGroup_2_1(), 2) ) {
                            alt16=3;
                        }


                        switch (alt16) {
                    	case 1 :
                    	    // InternalMcmodel.g:1207:5: ({...}? => ( ({...}? => ( ( (lv_cullfaceDefined_5_0= 'cullface' ) ) otherlv_6= '=' ( (lv_cullface_7_0= ruleEnumFace ) ) ) ) ) )
                    	    {
                    	    // InternalMcmodel.g:1207:5: ({...}? => ( ({...}? => ( ( (lv_cullfaceDefined_5_0= 'cullface' ) ) otherlv_6= '=' ( (lv_cullface_7_0= ruleEnumFace ) ) ) ) ) )
                    	    // InternalMcmodel.g:1208:6: {...}? => ( ({...}? => ( ( (lv_cullfaceDefined_5_0= 'cullface' ) ) otherlv_6= '=' ( (lv_cullface_7_0= ruleEnumFace ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getFaceAccess().getUnorderedGroup_2_1(), 0) ) {
                    	        if (state.backtracking>0) {state.failed=true; return current;}
                    	        throw new FailedPredicateException(input, "ruleFace", "getUnorderedGroupHelper().canSelect(grammarAccess.getFaceAccess().getUnorderedGroup_2_1(), 0)");
                    	    }
                    	    // InternalMcmodel.g:1208:104: ( ({...}? => ( ( (lv_cullfaceDefined_5_0= 'cullface' ) ) otherlv_6= '=' ( (lv_cullface_7_0= ruleEnumFace ) ) ) ) )
                    	    // InternalMcmodel.g:1209:7: ({...}? => ( ( (lv_cullfaceDefined_5_0= 'cullface' ) ) otherlv_6= '=' ( (lv_cullface_7_0= ruleEnumFace ) ) ) )
                    	    {
                    	    getUnorderedGroupHelper().select(grammarAccess.getFaceAccess().getUnorderedGroup_2_1(), 0);
                    	    // InternalMcmodel.g:1212:10: ({...}? => ( ( (lv_cullfaceDefined_5_0= 'cullface' ) ) otherlv_6= '=' ( (lv_cullface_7_0= ruleEnumFace ) ) ) )
                    	    // InternalMcmodel.g:1212:11: {...}? => ( ( (lv_cullfaceDefined_5_0= 'cullface' ) ) otherlv_6= '=' ( (lv_cullface_7_0= ruleEnumFace ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        if (state.backtracking>0) {state.failed=true; return current;}
                    	        throw new FailedPredicateException(input, "ruleFace", "true");
                    	    }
                    	    // InternalMcmodel.g:1212:20: ( ( (lv_cullfaceDefined_5_0= 'cullface' ) ) otherlv_6= '=' ( (lv_cullface_7_0= ruleEnumFace ) ) )
                    	    // InternalMcmodel.g:1212:21: ( (lv_cullfaceDefined_5_0= 'cullface' ) ) otherlv_6= '=' ( (lv_cullface_7_0= ruleEnumFace ) )
                    	    {
                    	    // InternalMcmodel.g:1212:21: ( (lv_cullfaceDefined_5_0= 'cullface' ) )
                    	    // InternalMcmodel.g:1213:11: (lv_cullfaceDefined_5_0= 'cullface' )
                    	    {
                    	    // InternalMcmodel.g:1213:11: (lv_cullfaceDefined_5_0= 'cullface' )
                    	    // InternalMcmodel.g:1214:12: lv_cullfaceDefined_5_0= 'cullface'
                    	    {
                    	    lv_cullfaceDefined_5_0=(Token)match(input,43,FOLLOW_3); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      												newLeafNode(lv_cullfaceDefined_5_0, grammarAccess.getFaceAccess().getCullfaceDefinedCullfaceKeyword_2_1_0_0_0());
                    	      											
                    	    }
                    	    if ( state.backtracking==0 ) {

                    	      												if (current==null) {
                    	      													current = createModelElement(grammarAccess.getFaceRule());
                    	      												}
                    	      												setWithLastConsumed(current, "cullfaceDefined", true, "cullface");
                    	      											
                    	    }

                    	    }


                    	    }

                    	    otherlv_6=(Token)match(input,18,FOLLOW_25); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      										newLeafNode(otherlv_6, grammarAccess.getFaceAccess().getEqualsSignKeyword_2_1_0_1());
                    	      									
                    	    }
                    	    // InternalMcmodel.g:1230:10: ( (lv_cullface_7_0= ruleEnumFace ) )
                    	    // InternalMcmodel.g:1231:11: (lv_cullface_7_0= ruleEnumFace )
                    	    {
                    	    // InternalMcmodel.g:1231:11: (lv_cullface_7_0= ruleEnumFace )
                    	    // InternalMcmodel.g:1232:12: lv_cullface_7_0= ruleEnumFace
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      												newCompositeNode(grammarAccess.getFaceAccess().getCullfaceEnumFaceEnumRuleCall_2_1_0_2_0());
                    	      											
                    	    }
                    	    pushFollow(FOLLOW_28);
                    	    lv_cullface_7_0=ruleEnumFace();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      												if (current==null) {
                    	      													current = createModelElementForParent(grammarAccess.getFaceRule());
                    	      												}
                    	      												set(
                    	      													current,
                    	      													"cullface",
                    	      													lv_cullface_7_0,
                    	      													"com.raptor.mcmodel.Mcmodel.EnumFace");
                    	      												afterParserOrEnumRuleCall();
                    	      											
                    	    }

                    	    }


                    	    }


                    	    }


                    	    }

                    	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getFaceAccess().getUnorderedGroup_2_1());

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 2 :
                    	    // InternalMcmodel.g:1255:5: ({...}? => ( ({...}? => ( ( (lv_rotationDefined_8_0= 'rotation' ) ) otherlv_9= '=' ( (lv_rotation_10_0= ruleLONG ) ) ) ) ) )
                    	    {
                    	    // InternalMcmodel.g:1255:5: ({...}? => ( ({...}? => ( ( (lv_rotationDefined_8_0= 'rotation' ) ) otherlv_9= '=' ( (lv_rotation_10_0= ruleLONG ) ) ) ) ) )
                    	    // InternalMcmodel.g:1256:6: {...}? => ( ({...}? => ( ( (lv_rotationDefined_8_0= 'rotation' ) ) otherlv_9= '=' ( (lv_rotation_10_0= ruleLONG ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getFaceAccess().getUnorderedGroup_2_1(), 1) ) {
                    	        if (state.backtracking>0) {state.failed=true; return current;}
                    	        throw new FailedPredicateException(input, "ruleFace", "getUnorderedGroupHelper().canSelect(grammarAccess.getFaceAccess().getUnorderedGroup_2_1(), 1)");
                    	    }
                    	    // InternalMcmodel.g:1256:104: ( ({...}? => ( ( (lv_rotationDefined_8_0= 'rotation' ) ) otherlv_9= '=' ( (lv_rotation_10_0= ruleLONG ) ) ) ) )
                    	    // InternalMcmodel.g:1257:7: ({...}? => ( ( (lv_rotationDefined_8_0= 'rotation' ) ) otherlv_9= '=' ( (lv_rotation_10_0= ruleLONG ) ) ) )
                    	    {
                    	    getUnorderedGroupHelper().select(grammarAccess.getFaceAccess().getUnorderedGroup_2_1(), 1);
                    	    // InternalMcmodel.g:1260:10: ({...}? => ( ( (lv_rotationDefined_8_0= 'rotation' ) ) otherlv_9= '=' ( (lv_rotation_10_0= ruleLONG ) ) ) )
                    	    // InternalMcmodel.g:1260:11: {...}? => ( ( (lv_rotationDefined_8_0= 'rotation' ) ) otherlv_9= '=' ( (lv_rotation_10_0= ruleLONG ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        if (state.backtracking>0) {state.failed=true; return current;}
                    	        throw new FailedPredicateException(input, "ruleFace", "true");
                    	    }
                    	    // InternalMcmodel.g:1260:20: ( ( (lv_rotationDefined_8_0= 'rotation' ) ) otherlv_9= '=' ( (lv_rotation_10_0= ruleLONG ) ) )
                    	    // InternalMcmodel.g:1260:21: ( (lv_rotationDefined_8_0= 'rotation' ) ) otherlv_9= '=' ( (lv_rotation_10_0= ruleLONG ) )
                    	    {
                    	    // InternalMcmodel.g:1260:21: ( (lv_rotationDefined_8_0= 'rotation' ) )
                    	    // InternalMcmodel.g:1261:11: (lv_rotationDefined_8_0= 'rotation' )
                    	    {
                    	    // InternalMcmodel.g:1261:11: (lv_rotationDefined_8_0= 'rotation' )
                    	    // InternalMcmodel.g:1262:12: lv_rotationDefined_8_0= 'rotation'
                    	    {
                    	    lv_rotationDefined_8_0=(Token)match(input,32,FOLLOW_3); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      												newLeafNode(lv_rotationDefined_8_0, grammarAccess.getFaceAccess().getRotationDefinedRotationKeyword_2_1_1_0_0());
                    	      											
                    	    }
                    	    if ( state.backtracking==0 ) {

                    	      												if (current==null) {
                    	      													current = createModelElement(grammarAccess.getFaceRule());
                    	      												}
                    	      												setWithLastConsumed(current, "rotationDefined", true, "rotation");
                    	      											
                    	    }

                    	    }


                    	    }

                    	    otherlv_9=(Token)match(input,18,FOLLOW_29); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      										newLeafNode(otherlv_9, grammarAccess.getFaceAccess().getEqualsSignKeyword_2_1_1_1());
                    	      									
                    	    }
                    	    // InternalMcmodel.g:1278:10: ( (lv_rotation_10_0= ruleLONG ) )
                    	    // InternalMcmodel.g:1279:11: (lv_rotation_10_0= ruleLONG )
                    	    {
                    	    // InternalMcmodel.g:1279:11: (lv_rotation_10_0= ruleLONG )
                    	    // InternalMcmodel.g:1280:12: lv_rotation_10_0= ruleLONG
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      												newCompositeNode(grammarAccess.getFaceAccess().getRotationLONGParserRuleCall_2_1_1_2_0());
                    	      											
                    	    }
                    	    pushFollow(FOLLOW_28);
                    	    lv_rotation_10_0=ruleLONG();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      												if (current==null) {
                    	      													current = createModelElementForParent(grammarAccess.getFaceRule());
                    	      												}
                    	      												set(
                    	      													current,
                    	      													"rotation",
                    	      													lv_rotation_10_0,
                    	      													"com.raptor.mcmodel.Mcmodel.LONG");
                    	      												afterParserOrEnumRuleCall();
                    	      											
                    	    }

                    	    }


                    	    }


                    	    }


                    	    }

                    	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getFaceAccess().getUnorderedGroup_2_1());

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 3 :
                    	    // InternalMcmodel.g:1303:5: ({...}? => ( ({...}? => ( ( (lv_tintindexDefined_11_0= 'tintindex' ) ) otherlv_12= '=' ( (lv_tintindex_13_0= ruleLONG ) ) ) ) ) )
                    	    {
                    	    // InternalMcmodel.g:1303:5: ({...}? => ( ({...}? => ( ( (lv_tintindexDefined_11_0= 'tintindex' ) ) otherlv_12= '=' ( (lv_tintindex_13_0= ruleLONG ) ) ) ) ) )
                    	    // InternalMcmodel.g:1304:6: {...}? => ( ({...}? => ( ( (lv_tintindexDefined_11_0= 'tintindex' ) ) otherlv_12= '=' ( (lv_tintindex_13_0= ruleLONG ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getFaceAccess().getUnorderedGroup_2_1(), 2) ) {
                    	        if (state.backtracking>0) {state.failed=true; return current;}
                    	        throw new FailedPredicateException(input, "ruleFace", "getUnorderedGroupHelper().canSelect(grammarAccess.getFaceAccess().getUnorderedGroup_2_1(), 2)");
                    	    }
                    	    // InternalMcmodel.g:1304:104: ( ({...}? => ( ( (lv_tintindexDefined_11_0= 'tintindex' ) ) otherlv_12= '=' ( (lv_tintindex_13_0= ruleLONG ) ) ) ) )
                    	    // InternalMcmodel.g:1305:7: ({...}? => ( ( (lv_tintindexDefined_11_0= 'tintindex' ) ) otherlv_12= '=' ( (lv_tintindex_13_0= ruleLONG ) ) ) )
                    	    {
                    	    getUnorderedGroupHelper().select(grammarAccess.getFaceAccess().getUnorderedGroup_2_1(), 2);
                    	    // InternalMcmodel.g:1308:10: ({...}? => ( ( (lv_tintindexDefined_11_0= 'tintindex' ) ) otherlv_12= '=' ( (lv_tintindex_13_0= ruleLONG ) ) ) )
                    	    // InternalMcmodel.g:1308:11: {...}? => ( ( (lv_tintindexDefined_11_0= 'tintindex' ) ) otherlv_12= '=' ( (lv_tintindex_13_0= ruleLONG ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        if (state.backtracking>0) {state.failed=true; return current;}
                    	        throw new FailedPredicateException(input, "ruleFace", "true");
                    	    }
                    	    // InternalMcmodel.g:1308:20: ( ( (lv_tintindexDefined_11_0= 'tintindex' ) ) otherlv_12= '=' ( (lv_tintindex_13_0= ruleLONG ) ) )
                    	    // InternalMcmodel.g:1308:21: ( (lv_tintindexDefined_11_0= 'tintindex' ) ) otherlv_12= '=' ( (lv_tintindex_13_0= ruleLONG ) )
                    	    {
                    	    // InternalMcmodel.g:1308:21: ( (lv_tintindexDefined_11_0= 'tintindex' ) )
                    	    // InternalMcmodel.g:1309:11: (lv_tintindexDefined_11_0= 'tintindex' )
                    	    {
                    	    // InternalMcmodel.g:1309:11: (lv_tintindexDefined_11_0= 'tintindex' )
                    	    // InternalMcmodel.g:1310:12: lv_tintindexDefined_11_0= 'tintindex'
                    	    {
                    	    lv_tintindexDefined_11_0=(Token)match(input,44,FOLLOW_3); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      												newLeafNode(lv_tintindexDefined_11_0, grammarAccess.getFaceAccess().getTintindexDefinedTintindexKeyword_2_1_2_0_0());
                    	      											
                    	    }
                    	    if ( state.backtracking==0 ) {

                    	      												if (current==null) {
                    	      													current = createModelElement(grammarAccess.getFaceRule());
                    	      												}
                    	      												setWithLastConsumed(current, "tintindexDefined", true, "tintindex");
                    	      											
                    	    }

                    	    }


                    	    }

                    	    otherlv_12=(Token)match(input,18,FOLLOW_29); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      										newLeafNode(otherlv_12, grammarAccess.getFaceAccess().getEqualsSignKeyword_2_1_2_1());
                    	      									
                    	    }
                    	    // InternalMcmodel.g:1326:10: ( (lv_tintindex_13_0= ruleLONG ) )
                    	    // InternalMcmodel.g:1327:11: (lv_tintindex_13_0= ruleLONG )
                    	    {
                    	    // InternalMcmodel.g:1327:11: (lv_tintindex_13_0= ruleLONG )
                    	    // InternalMcmodel.g:1328:12: lv_tintindex_13_0= ruleLONG
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      												newCompositeNode(grammarAccess.getFaceAccess().getTintindexLONGParserRuleCall_2_1_2_2_0());
                    	      											
                    	    }
                    	    pushFollow(FOLLOW_28);
                    	    lv_tintindex_13_0=ruleLONG();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      												if (current==null) {
                    	      													current = createModelElementForParent(grammarAccess.getFaceRule());
                    	      												}
                    	      												set(
                    	      													current,
                    	      													"tintindex",
                    	      													lv_tintindex_13_0,
                    	      													"com.raptor.mcmodel.Mcmodel.LONG");
                    	      												afterParserOrEnumRuleCall();
                    	      											
                    	    }

                    	    }


                    	    }


                    	    }


                    	    }

                    	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getFaceAccess().getUnorderedGroup_2_1());

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop16;
                        }
                    } while (true);


                    }


                    }

                    getUnorderedGroupHelper().leave(grammarAccess.getFaceAccess().getUnorderedGroup_2_1());

                    }

                    otherlv_14=(Token)match(input,45,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_14, grammarAccess.getFaceAccess().getRightParenthesisKeyword_2_2());
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFace"


    // $ANTLR start "entryRuleDisplay"
    // InternalMcmodel.g:1367:1: entryRuleDisplay returns [EObject current=null] : iv_ruleDisplay= ruleDisplay EOF ;
    public final EObject entryRuleDisplay() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDisplay = null;


        try {
            // InternalMcmodel.g:1367:48: (iv_ruleDisplay= ruleDisplay EOF )
            // InternalMcmodel.g:1368:2: iv_ruleDisplay= ruleDisplay EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDisplayRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDisplay=ruleDisplay();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDisplay; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDisplay"


    // $ANTLR start "ruleDisplay"
    // InternalMcmodel.g:1374:1: ruleDisplay returns [EObject current=null] : ( () otherlv_1= '{' ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= 'thirdperson_righthand' ( (lv_thirdperson_righthand_4_0= ruleMorph ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= 'thirdperson_lefthand' ( (lv_thirdperson_lefthand_6_0= ruleMorph ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= 'firstperson_righthand' ( (lv_firstperson_righthand_8_0= ruleMorph ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= 'firstperson_lefthand' ( (lv_firstperson_lefthand_10_0= ruleMorph ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= 'gui' ( (lv_gui_12_0= ruleMorph ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= 'head' ( (lv_head_14_0= ruleMorph ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= 'ground' ( (lv_ground_16_0= ruleMorph ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= 'fixed' ( (lv_fixed_18_0= ruleMorph ) ) ) ) ) ) )* ) ) ) otherlv_19= '}' ) ;
    public final EObject ruleDisplay() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        Token otherlv_13=null;
        Token otherlv_15=null;
        Token otherlv_17=null;
        Token otherlv_19=null;
        EObject lv_thirdperson_righthand_4_0 = null;

        EObject lv_thirdperson_lefthand_6_0 = null;

        EObject lv_firstperson_righthand_8_0 = null;

        EObject lv_firstperson_lefthand_10_0 = null;

        EObject lv_gui_12_0 = null;

        EObject lv_head_14_0 = null;

        EObject lv_ground_16_0 = null;

        EObject lv_fixed_18_0 = null;



        	enterRule();

        try {
            // InternalMcmodel.g:1380:2: ( ( () otherlv_1= '{' ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= 'thirdperson_righthand' ( (lv_thirdperson_righthand_4_0= ruleMorph ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= 'thirdperson_lefthand' ( (lv_thirdperson_lefthand_6_0= ruleMorph ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= 'firstperson_righthand' ( (lv_firstperson_righthand_8_0= ruleMorph ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= 'firstperson_lefthand' ( (lv_firstperson_lefthand_10_0= ruleMorph ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= 'gui' ( (lv_gui_12_0= ruleMorph ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= 'head' ( (lv_head_14_0= ruleMorph ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= 'ground' ( (lv_ground_16_0= ruleMorph ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= 'fixed' ( (lv_fixed_18_0= ruleMorph ) ) ) ) ) ) )* ) ) ) otherlv_19= '}' ) )
            // InternalMcmodel.g:1381:2: ( () otherlv_1= '{' ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= 'thirdperson_righthand' ( (lv_thirdperson_righthand_4_0= ruleMorph ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= 'thirdperson_lefthand' ( (lv_thirdperson_lefthand_6_0= ruleMorph ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= 'firstperson_righthand' ( (lv_firstperson_righthand_8_0= ruleMorph ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= 'firstperson_lefthand' ( (lv_firstperson_lefthand_10_0= ruleMorph ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= 'gui' ( (lv_gui_12_0= ruleMorph ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= 'head' ( (lv_head_14_0= ruleMorph ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= 'ground' ( (lv_ground_16_0= ruleMorph ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= 'fixed' ( (lv_fixed_18_0= ruleMorph ) ) ) ) ) ) )* ) ) ) otherlv_19= '}' )
            {
            // InternalMcmodel.g:1381:2: ( () otherlv_1= '{' ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= 'thirdperson_righthand' ( (lv_thirdperson_righthand_4_0= ruleMorph ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= 'thirdperson_lefthand' ( (lv_thirdperson_lefthand_6_0= ruleMorph ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= 'firstperson_righthand' ( (lv_firstperson_righthand_8_0= ruleMorph ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= 'firstperson_lefthand' ( (lv_firstperson_lefthand_10_0= ruleMorph ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= 'gui' ( (lv_gui_12_0= ruleMorph ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= 'head' ( (lv_head_14_0= ruleMorph ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= 'ground' ( (lv_ground_16_0= ruleMorph ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= 'fixed' ( (lv_fixed_18_0= ruleMorph ) ) ) ) ) ) )* ) ) ) otherlv_19= '}' )
            // InternalMcmodel.g:1382:3: () otherlv_1= '{' ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= 'thirdperson_righthand' ( (lv_thirdperson_righthand_4_0= ruleMorph ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= 'thirdperson_lefthand' ( (lv_thirdperson_lefthand_6_0= ruleMorph ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= 'firstperson_righthand' ( (lv_firstperson_righthand_8_0= ruleMorph ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= 'firstperson_lefthand' ( (lv_firstperson_lefthand_10_0= ruleMorph ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= 'gui' ( (lv_gui_12_0= ruleMorph ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= 'head' ( (lv_head_14_0= ruleMorph ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= 'ground' ( (lv_ground_16_0= ruleMorph ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= 'fixed' ( (lv_fixed_18_0= ruleMorph ) ) ) ) ) ) )* ) ) ) otherlv_19= '}'
            {
            // InternalMcmodel.g:1382:3: ()
            // InternalMcmodel.g:1383:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getDisplayAccess().getDisplayAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,24,FOLLOW_30); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getDisplayAccess().getLeftCurlyBracketKeyword_1());
              		
            }
            // InternalMcmodel.g:1393:3: ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= 'thirdperson_righthand' ( (lv_thirdperson_righthand_4_0= ruleMorph ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= 'thirdperson_lefthand' ( (lv_thirdperson_lefthand_6_0= ruleMorph ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= 'firstperson_righthand' ( (lv_firstperson_righthand_8_0= ruleMorph ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= 'firstperson_lefthand' ( (lv_firstperson_lefthand_10_0= ruleMorph ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= 'gui' ( (lv_gui_12_0= ruleMorph ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= 'head' ( (lv_head_14_0= ruleMorph ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= 'ground' ( (lv_ground_16_0= ruleMorph ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= 'fixed' ( (lv_fixed_18_0= ruleMorph ) ) ) ) ) ) )* ) ) )
            // InternalMcmodel.g:1394:4: ( ( ( ({...}? => ( ({...}? => (otherlv_3= 'thirdperson_righthand' ( (lv_thirdperson_righthand_4_0= ruleMorph ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= 'thirdperson_lefthand' ( (lv_thirdperson_lefthand_6_0= ruleMorph ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= 'firstperson_righthand' ( (lv_firstperson_righthand_8_0= ruleMorph ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= 'firstperson_lefthand' ( (lv_firstperson_lefthand_10_0= ruleMorph ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= 'gui' ( (lv_gui_12_0= ruleMorph ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= 'head' ( (lv_head_14_0= ruleMorph ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= 'ground' ( (lv_ground_16_0= ruleMorph ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= 'fixed' ( (lv_fixed_18_0= ruleMorph ) ) ) ) ) ) )* ) )
            {
            // InternalMcmodel.g:1394:4: ( ( ( ({...}? => ( ({...}? => (otherlv_3= 'thirdperson_righthand' ( (lv_thirdperson_righthand_4_0= ruleMorph ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= 'thirdperson_lefthand' ( (lv_thirdperson_lefthand_6_0= ruleMorph ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= 'firstperson_righthand' ( (lv_firstperson_righthand_8_0= ruleMorph ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= 'firstperson_lefthand' ( (lv_firstperson_lefthand_10_0= ruleMorph ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= 'gui' ( (lv_gui_12_0= ruleMorph ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= 'head' ( (lv_head_14_0= ruleMorph ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= 'ground' ( (lv_ground_16_0= ruleMorph ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= 'fixed' ( (lv_fixed_18_0= ruleMorph ) ) ) ) ) ) )* ) )
            // InternalMcmodel.g:1395:5: ( ( ({...}? => ( ({...}? => (otherlv_3= 'thirdperson_righthand' ( (lv_thirdperson_righthand_4_0= ruleMorph ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= 'thirdperson_lefthand' ( (lv_thirdperson_lefthand_6_0= ruleMorph ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= 'firstperson_righthand' ( (lv_firstperson_righthand_8_0= ruleMorph ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= 'firstperson_lefthand' ( (lv_firstperson_lefthand_10_0= ruleMorph ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= 'gui' ( (lv_gui_12_0= ruleMorph ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= 'head' ( (lv_head_14_0= ruleMorph ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= 'ground' ( (lv_ground_16_0= ruleMorph ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= 'fixed' ( (lv_fixed_18_0= ruleMorph ) ) ) ) ) ) )* )
            {
            getUnorderedGroupHelper().enter(grammarAccess.getDisplayAccess().getUnorderedGroup_2());
            // InternalMcmodel.g:1398:5: ( ( ({...}? => ( ({...}? => (otherlv_3= 'thirdperson_righthand' ( (lv_thirdperson_righthand_4_0= ruleMorph ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= 'thirdperson_lefthand' ( (lv_thirdperson_lefthand_6_0= ruleMorph ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= 'firstperson_righthand' ( (lv_firstperson_righthand_8_0= ruleMorph ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= 'firstperson_lefthand' ( (lv_firstperson_lefthand_10_0= ruleMorph ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= 'gui' ( (lv_gui_12_0= ruleMorph ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= 'head' ( (lv_head_14_0= ruleMorph ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= 'ground' ( (lv_ground_16_0= ruleMorph ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= 'fixed' ( (lv_fixed_18_0= ruleMorph ) ) ) ) ) ) )* )
            // InternalMcmodel.g:1399:6: ( ({...}? => ( ({...}? => (otherlv_3= 'thirdperson_righthand' ( (lv_thirdperson_righthand_4_0= ruleMorph ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= 'thirdperson_lefthand' ( (lv_thirdperson_lefthand_6_0= ruleMorph ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= 'firstperson_righthand' ( (lv_firstperson_righthand_8_0= ruleMorph ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= 'firstperson_lefthand' ( (lv_firstperson_lefthand_10_0= ruleMorph ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= 'gui' ( (lv_gui_12_0= ruleMorph ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= 'head' ( (lv_head_14_0= ruleMorph ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= 'ground' ( (lv_ground_16_0= ruleMorph ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= 'fixed' ( (lv_fixed_18_0= ruleMorph ) ) ) ) ) ) )*
            {
            // InternalMcmodel.g:1399:6: ( ({...}? => ( ({...}? => (otherlv_3= 'thirdperson_righthand' ( (lv_thirdperson_righthand_4_0= ruleMorph ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= 'thirdperson_lefthand' ( (lv_thirdperson_lefthand_6_0= ruleMorph ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= 'firstperson_righthand' ( (lv_firstperson_righthand_8_0= ruleMorph ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= 'firstperson_lefthand' ( (lv_firstperson_lefthand_10_0= ruleMorph ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= 'gui' ( (lv_gui_12_0= ruleMorph ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= 'head' ( (lv_head_14_0= ruleMorph ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= 'ground' ( (lv_ground_16_0= ruleMorph ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= 'fixed' ( (lv_fixed_18_0= ruleMorph ) ) ) ) ) ) )*
            loop18:
            do {
                int alt18=9;
                alt18 = dfa18.predict(input);
                switch (alt18) {
            	case 1 :
            	    // InternalMcmodel.g:1400:4: ({...}? => ( ({...}? => (otherlv_3= 'thirdperson_righthand' ( (lv_thirdperson_righthand_4_0= ruleMorph ) ) ) ) ) )
            	    {
            	    // InternalMcmodel.g:1400:4: ({...}? => ( ({...}? => (otherlv_3= 'thirdperson_righthand' ( (lv_thirdperson_righthand_4_0= ruleMorph ) ) ) ) ) )
            	    // InternalMcmodel.g:1401:5: {...}? => ( ({...}? => (otherlv_3= 'thirdperson_righthand' ( (lv_thirdperson_righthand_4_0= ruleMorph ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getDisplayAccess().getUnorderedGroup_2(), 0) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleDisplay", "getUnorderedGroupHelper().canSelect(grammarAccess.getDisplayAccess().getUnorderedGroup_2(), 0)");
            	    }
            	    // InternalMcmodel.g:1401:104: ( ({...}? => (otherlv_3= 'thirdperson_righthand' ( (lv_thirdperson_righthand_4_0= ruleMorph ) ) ) ) )
            	    // InternalMcmodel.g:1402:6: ({...}? => (otherlv_3= 'thirdperson_righthand' ( (lv_thirdperson_righthand_4_0= ruleMorph ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getDisplayAccess().getUnorderedGroup_2(), 0);
            	    // InternalMcmodel.g:1405:9: ({...}? => (otherlv_3= 'thirdperson_righthand' ( (lv_thirdperson_righthand_4_0= ruleMorph ) ) ) )
            	    // InternalMcmodel.g:1405:10: {...}? => (otherlv_3= 'thirdperson_righthand' ( (lv_thirdperson_righthand_4_0= ruleMorph ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleDisplay", "true");
            	    }
            	    // InternalMcmodel.g:1405:19: (otherlv_3= 'thirdperson_righthand' ( (lv_thirdperson_righthand_4_0= ruleMorph ) ) )
            	    // InternalMcmodel.g:1405:20: otherlv_3= 'thirdperson_righthand' ( (lv_thirdperson_righthand_4_0= ruleMorph ) )
            	    {
            	    otherlv_3=(Token)match(input,46,FOLLOW_8); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_3, grammarAccess.getDisplayAccess().getThirdperson_righthandKeyword_2_0_0());
            	      								
            	    }
            	    // InternalMcmodel.g:1409:9: ( (lv_thirdperson_righthand_4_0= ruleMorph ) )
            	    // InternalMcmodel.g:1410:10: (lv_thirdperson_righthand_4_0= ruleMorph )
            	    {
            	    // InternalMcmodel.g:1410:10: (lv_thirdperson_righthand_4_0= ruleMorph )
            	    // InternalMcmodel.g:1411:11: lv_thirdperson_righthand_4_0= ruleMorph
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getDisplayAccess().getThirdperson_righthandMorphParserRuleCall_2_0_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_30);
            	    lv_thirdperson_righthand_4_0=ruleMorph();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getDisplayRule());
            	      											}
            	      											set(
            	      												current,
            	      												"thirdperson_righthand",
            	      												lv_thirdperson_righthand_4_0,
            	      												"com.raptor.mcmodel.Mcmodel.Morph");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getDisplayAccess().getUnorderedGroup_2());

            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // InternalMcmodel.g:1434:4: ({...}? => ( ({...}? => (otherlv_5= 'thirdperson_lefthand' ( (lv_thirdperson_lefthand_6_0= ruleMorph ) ) ) ) ) )
            	    {
            	    // InternalMcmodel.g:1434:4: ({...}? => ( ({...}? => (otherlv_5= 'thirdperson_lefthand' ( (lv_thirdperson_lefthand_6_0= ruleMorph ) ) ) ) ) )
            	    // InternalMcmodel.g:1435:5: {...}? => ( ({...}? => (otherlv_5= 'thirdperson_lefthand' ( (lv_thirdperson_lefthand_6_0= ruleMorph ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getDisplayAccess().getUnorderedGroup_2(), 1) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleDisplay", "getUnorderedGroupHelper().canSelect(grammarAccess.getDisplayAccess().getUnorderedGroup_2(), 1)");
            	    }
            	    // InternalMcmodel.g:1435:104: ( ({...}? => (otherlv_5= 'thirdperson_lefthand' ( (lv_thirdperson_lefthand_6_0= ruleMorph ) ) ) ) )
            	    // InternalMcmodel.g:1436:6: ({...}? => (otherlv_5= 'thirdperson_lefthand' ( (lv_thirdperson_lefthand_6_0= ruleMorph ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getDisplayAccess().getUnorderedGroup_2(), 1);
            	    // InternalMcmodel.g:1439:9: ({...}? => (otherlv_5= 'thirdperson_lefthand' ( (lv_thirdperson_lefthand_6_0= ruleMorph ) ) ) )
            	    // InternalMcmodel.g:1439:10: {...}? => (otherlv_5= 'thirdperson_lefthand' ( (lv_thirdperson_lefthand_6_0= ruleMorph ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleDisplay", "true");
            	    }
            	    // InternalMcmodel.g:1439:19: (otherlv_5= 'thirdperson_lefthand' ( (lv_thirdperson_lefthand_6_0= ruleMorph ) ) )
            	    // InternalMcmodel.g:1439:20: otherlv_5= 'thirdperson_lefthand' ( (lv_thirdperson_lefthand_6_0= ruleMorph ) )
            	    {
            	    otherlv_5=(Token)match(input,47,FOLLOW_8); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_5, grammarAccess.getDisplayAccess().getThirdperson_lefthandKeyword_2_1_0());
            	      								
            	    }
            	    // InternalMcmodel.g:1443:9: ( (lv_thirdperson_lefthand_6_0= ruleMorph ) )
            	    // InternalMcmodel.g:1444:10: (lv_thirdperson_lefthand_6_0= ruleMorph )
            	    {
            	    // InternalMcmodel.g:1444:10: (lv_thirdperson_lefthand_6_0= ruleMorph )
            	    // InternalMcmodel.g:1445:11: lv_thirdperson_lefthand_6_0= ruleMorph
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getDisplayAccess().getThirdperson_lefthandMorphParserRuleCall_2_1_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_30);
            	    lv_thirdperson_lefthand_6_0=ruleMorph();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getDisplayRule());
            	      											}
            	      											set(
            	      												current,
            	      												"thirdperson_lefthand",
            	      												lv_thirdperson_lefthand_6_0,
            	      												"com.raptor.mcmodel.Mcmodel.Morph");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getDisplayAccess().getUnorderedGroup_2());

            	    }


            	    }


            	    }
            	    break;
            	case 3 :
            	    // InternalMcmodel.g:1468:4: ({...}? => ( ({...}? => (otherlv_7= 'firstperson_righthand' ( (lv_firstperson_righthand_8_0= ruleMorph ) ) ) ) ) )
            	    {
            	    // InternalMcmodel.g:1468:4: ({...}? => ( ({...}? => (otherlv_7= 'firstperson_righthand' ( (lv_firstperson_righthand_8_0= ruleMorph ) ) ) ) ) )
            	    // InternalMcmodel.g:1469:5: {...}? => ( ({...}? => (otherlv_7= 'firstperson_righthand' ( (lv_firstperson_righthand_8_0= ruleMorph ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getDisplayAccess().getUnorderedGroup_2(), 2) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleDisplay", "getUnorderedGroupHelper().canSelect(grammarAccess.getDisplayAccess().getUnorderedGroup_2(), 2)");
            	    }
            	    // InternalMcmodel.g:1469:104: ( ({...}? => (otherlv_7= 'firstperson_righthand' ( (lv_firstperson_righthand_8_0= ruleMorph ) ) ) ) )
            	    // InternalMcmodel.g:1470:6: ({...}? => (otherlv_7= 'firstperson_righthand' ( (lv_firstperson_righthand_8_0= ruleMorph ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getDisplayAccess().getUnorderedGroup_2(), 2);
            	    // InternalMcmodel.g:1473:9: ({...}? => (otherlv_7= 'firstperson_righthand' ( (lv_firstperson_righthand_8_0= ruleMorph ) ) ) )
            	    // InternalMcmodel.g:1473:10: {...}? => (otherlv_7= 'firstperson_righthand' ( (lv_firstperson_righthand_8_0= ruleMorph ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleDisplay", "true");
            	    }
            	    // InternalMcmodel.g:1473:19: (otherlv_7= 'firstperson_righthand' ( (lv_firstperson_righthand_8_0= ruleMorph ) ) )
            	    // InternalMcmodel.g:1473:20: otherlv_7= 'firstperson_righthand' ( (lv_firstperson_righthand_8_0= ruleMorph ) )
            	    {
            	    otherlv_7=(Token)match(input,48,FOLLOW_8); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_7, grammarAccess.getDisplayAccess().getFirstperson_righthandKeyword_2_2_0());
            	      								
            	    }
            	    // InternalMcmodel.g:1477:9: ( (lv_firstperson_righthand_8_0= ruleMorph ) )
            	    // InternalMcmodel.g:1478:10: (lv_firstperson_righthand_8_0= ruleMorph )
            	    {
            	    // InternalMcmodel.g:1478:10: (lv_firstperson_righthand_8_0= ruleMorph )
            	    // InternalMcmodel.g:1479:11: lv_firstperson_righthand_8_0= ruleMorph
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getDisplayAccess().getFirstperson_righthandMorphParserRuleCall_2_2_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_30);
            	    lv_firstperson_righthand_8_0=ruleMorph();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getDisplayRule());
            	      											}
            	      											set(
            	      												current,
            	      												"firstperson_righthand",
            	      												lv_firstperson_righthand_8_0,
            	      												"com.raptor.mcmodel.Mcmodel.Morph");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getDisplayAccess().getUnorderedGroup_2());

            	    }


            	    }


            	    }
            	    break;
            	case 4 :
            	    // InternalMcmodel.g:1502:4: ({...}? => ( ({...}? => (otherlv_9= 'firstperson_lefthand' ( (lv_firstperson_lefthand_10_0= ruleMorph ) ) ) ) ) )
            	    {
            	    // InternalMcmodel.g:1502:4: ({...}? => ( ({...}? => (otherlv_9= 'firstperson_lefthand' ( (lv_firstperson_lefthand_10_0= ruleMorph ) ) ) ) ) )
            	    // InternalMcmodel.g:1503:5: {...}? => ( ({...}? => (otherlv_9= 'firstperson_lefthand' ( (lv_firstperson_lefthand_10_0= ruleMorph ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getDisplayAccess().getUnorderedGroup_2(), 3) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleDisplay", "getUnorderedGroupHelper().canSelect(grammarAccess.getDisplayAccess().getUnorderedGroup_2(), 3)");
            	    }
            	    // InternalMcmodel.g:1503:104: ( ({...}? => (otherlv_9= 'firstperson_lefthand' ( (lv_firstperson_lefthand_10_0= ruleMorph ) ) ) ) )
            	    // InternalMcmodel.g:1504:6: ({...}? => (otherlv_9= 'firstperson_lefthand' ( (lv_firstperson_lefthand_10_0= ruleMorph ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getDisplayAccess().getUnorderedGroup_2(), 3);
            	    // InternalMcmodel.g:1507:9: ({...}? => (otherlv_9= 'firstperson_lefthand' ( (lv_firstperson_lefthand_10_0= ruleMorph ) ) ) )
            	    // InternalMcmodel.g:1507:10: {...}? => (otherlv_9= 'firstperson_lefthand' ( (lv_firstperson_lefthand_10_0= ruleMorph ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleDisplay", "true");
            	    }
            	    // InternalMcmodel.g:1507:19: (otherlv_9= 'firstperson_lefthand' ( (lv_firstperson_lefthand_10_0= ruleMorph ) ) )
            	    // InternalMcmodel.g:1507:20: otherlv_9= 'firstperson_lefthand' ( (lv_firstperson_lefthand_10_0= ruleMorph ) )
            	    {
            	    otherlv_9=(Token)match(input,49,FOLLOW_8); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_9, grammarAccess.getDisplayAccess().getFirstperson_lefthandKeyword_2_3_0());
            	      								
            	    }
            	    // InternalMcmodel.g:1511:9: ( (lv_firstperson_lefthand_10_0= ruleMorph ) )
            	    // InternalMcmodel.g:1512:10: (lv_firstperson_lefthand_10_0= ruleMorph )
            	    {
            	    // InternalMcmodel.g:1512:10: (lv_firstperson_lefthand_10_0= ruleMorph )
            	    // InternalMcmodel.g:1513:11: lv_firstperson_lefthand_10_0= ruleMorph
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getDisplayAccess().getFirstperson_lefthandMorphParserRuleCall_2_3_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_30);
            	    lv_firstperson_lefthand_10_0=ruleMorph();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getDisplayRule());
            	      											}
            	      											set(
            	      												current,
            	      												"firstperson_lefthand",
            	      												lv_firstperson_lefthand_10_0,
            	      												"com.raptor.mcmodel.Mcmodel.Morph");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getDisplayAccess().getUnorderedGroup_2());

            	    }


            	    }


            	    }
            	    break;
            	case 5 :
            	    // InternalMcmodel.g:1536:4: ({...}? => ( ({...}? => (otherlv_11= 'gui' ( (lv_gui_12_0= ruleMorph ) ) ) ) ) )
            	    {
            	    // InternalMcmodel.g:1536:4: ({...}? => ( ({...}? => (otherlv_11= 'gui' ( (lv_gui_12_0= ruleMorph ) ) ) ) ) )
            	    // InternalMcmodel.g:1537:5: {...}? => ( ({...}? => (otherlv_11= 'gui' ( (lv_gui_12_0= ruleMorph ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getDisplayAccess().getUnorderedGroup_2(), 4) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleDisplay", "getUnorderedGroupHelper().canSelect(grammarAccess.getDisplayAccess().getUnorderedGroup_2(), 4)");
            	    }
            	    // InternalMcmodel.g:1537:104: ( ({...}? => (otherlv_11= 'gui' ( (lv_gui_12_0= ruleMorph ) ) ) ) )
            	    // InternalMcmodel.g:1538:6: ({...}? => (otherlv_11= 'gui' ( (lv_gui_12_0= ruleMorph ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getDisplayAccess().getUnorderedGroup_2(), 4);
            	    // InternalMcmodel.g:1541:9: ({...}? => (otherlv_11= 'gui' ( (lv_gui_12_0= ruleMorph ) ) ) )
            	    // InternalMcmodel.g:1541:10: {...}? => (otherlv_11= 'gui' ( (lv_gui_12_0= ruleMorph ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleDisplay", "true");
            	    }
            	    // InternalMcmodel.g:1541:19: (otherlv_11= 'gui' ( (lv_gui_12_0= ruleMorph ) ) )
            	    // InternalMcmodel.g:1541:20: otherlv_11= 'gui' ( (lv_gui_12_0= ruleMorph ) )
            	    {
            	    otherlv_11=(Token)match(input,50,FOLLOW_8); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_11, grammarAccess.getDisplayAccess().getGuiKeyword_2_4_0());
            	      								
            	    }
            	    // InternalMcmodel.g:1545:9: ( (lv_gui_12_0= ruleMorph ) )
            	    // InternalMcmodel.g:1546:10: (lv_gui_12_0= ruleMorph )
            	    {
            	    // InternalMcmodel.g:1546:10: (lv_gui_12_0= ruleMorph )
            	    // InternalMcmodel.g:1547:11: lv_gui_12_0= ruleMorph
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getDisplayAccess().getGuiMorphParserRuleCall_2_4_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_30);
            	    lv_gui_12_0=ruleMorph();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getDisplayRule());
            	      											}
            	      											set(
            	      												current,
            	      												"gui",
            	      												lv_gui_12_0,
            	      												"com.raptor.mcmodel.Mcmodel.Morph");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getDisplayAccess().getUnorderedGroup_2());

            	    }


            	    }


            	    }
            	    break;
            	case 6 :
            	    // InternalMcmodel.g:1570:4: ({...}? => ( ({...}? => (otherlv_13= 'head' ( (lv_head_14_0= ruleMorph ) ) ) ) ) )
            	    {
            	    // InternalMcmodel.g:1570:4: ({...}? => ( ({...}? => (otherlv_13= 'head' ( (lv_head_14_0= ruleMorph ) ) ) ) ) )
            	    // InternalMcmodel.g:1571:5: {...}? => ( ({...}? => (otherlv_13= 'head' ( (lv_head_14_0= ruleMorph ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getDisplayAccess().getUnorderedGroup_2(), 5) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleDisplay", "getUnorderedGroupHelper().canSelect(grammarAccess.getDisplayAccess().getUnorderedGroup_2(), 5)");
            	    }
            	    // InternalMcmodel.g:1571:104: ( ({...}? => (otherlv_13= 'head' ( (lv_head_14_0= ruleMorph ) ) ) ) )
            	    // InternalMcmodel.g:1572:6: ({...}? => (otherlv_13= 'head' ( (lv_head_14_0= ruleMorph ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getDisplayAccess().getUnorderedGroup_2(), 5);
            	    // InternalMcmodel.g:1575:9: ({...}? => (otherlv_13= 'head' ( (lv_head_14_0= ruleMorph ) ) ) )
            	    // InternalMcmodel.g:1575:10: {...}? => (otherlv_13= 'head' ( (lv_head_14_0= ruleMorph ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleDisplay", "true");
            	    }
            	    // InternalMcmodel.g:1575:19: (otherlv_13= 'head' ( (lv_head_14_0= ruleMorph ) ) )
            	    // InternalMcmodel.g:1575:20: otherlv_13= 'head' ( (lv_head_14_0= ruleMorph ) )
            	    {
            	    otherlv_13=(Token)match(input,51,FOLLOW_8); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_13, grammarAccess.getDisplayAccess().getHeadKeyword_2_5_0());
            	      								
            	    }
            	    // InternalMcmodel.g:1579:9: ( (lv_head_14_0= ruleMorph ) )
            	    // InternalMcmodel.g:1580:10: (lv_head_14_0= ruleMorph )
            	    {
            	    // InternalMcmodel.g:1580:10: (lv_head_14_0= ruleMorph )
            	    // InternalMcmodel.g:1581:11: lv_head_14_0= ruleMorph
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getDisplayAccess().getHeadMorphParserRuleCall_2_5_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_30);
            	    lv_head_14_0=ruleMorph();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getDisplayRule());
            	      											}
            	      											set(
            	      												current,
            	      												"head",
            	      												lv_head_14_0,
            	      												"com.raptor.mcmodel.Mcmodel.Morph");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getDisplayAccess().getUnorderedGroup_2());

            	    }


            	    }


            	    }
            	    break;
            	case 7 :
            	    // InternalMcmodel.g:1604:4: ({...}? => ( ({...}? => (otherlv_15= 'ground' ( (lv_ground_16_0= ruleMorph ) ) ) ) ) )
            	    {
            	    // InternalMcmodel.g:1604:4: ({...}? => ( ({...}? => (otherlv_15= 'ground' ( (lv_ground_16_0= ruleMorph ) ) ) ) ) )
            	    // InternalMcmodel.g:1605:5: {...}? => ( ({...}? => (otherlv_15= 'ground' ( (lv_ground_16_0= ruleMorph ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getDisplayAccess().getUnorderedGroup_2(), 6) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleDisplay", "getUnorderedGroupHelper().canSelect(grammarAccess.getDisplayAccess().getUnorderedGroup_2(), 6)");
            	    }
            	    // InternalMcmodel.g:1605:104: ( ({...}? => (otherlv_15= 'ground' ( (lv_ground_16_0= ruleMorph ) ) ) ) )
            	    // InternalMcmodel.g:1606:6: ({...}? => (otherlv_15= 'ground' ( (lv_ground_16_0= ruleMorph ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getDisplayAccess().getUnorderedGroup_2(), 6);
            	    // InternalMcmodel.g:1609:9: ({...}? => (otherlv_15= 'ground' ( (lv_ground_16_0= ruleMorph ) ) ) )
            	    // InternalMcmodel.g:1609:10: {...}? => (otherlv_15= 'ground' ( (lv_ground_16_0= ruleMorph ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleDisplay", "true");
            	    }
            	    // InternalMcmodel.g:1609:19: (otherlv_15= 'ground' ( (lv_ground_16_0= ruleMorph ) ) )
            	    // InternalMcmodel.g:1609:20: otherlv_15= 'ground' ( (lv_ground_16_0= ruleMorph ) )
            	    {
            	    otherlv_15=(Token)match(input,52,FOLLOW_8); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_15, grammarAccess.getDisplayAccess().getGroundKeyword_2_6_0());
            	      								
            	    }
            	    // InternalMcmodel.g:1613:9: ( (lv_ground_16_0= ruleMorph ) )
            	    // InternalMcmodel.g:1614:10: (lv_ground_16_0= ruleMorph )
            	    {
            	    // InternalMcmodel.g:1614:10: (lv_ground_16_0= ruleMorph )
            	    // InternalMcmodel.g:1615:11: lv_ground_16_0= ruleMorph
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getDisplayAccess().getGroundMorphParserRuleCall_2_6_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_30);
            	    lv_ground_16_0=ruleMorph();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getDisplayRule());
            	      											}
            	      											set(
            	      												current,
            	      												"ground",
            	      												lv_ground_16_0,
            	      												"com.raptor.mcmodel.Mcmodel.Morph");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getDisplayAccess().getUnorderedGroup_2());

            	    }


            	    }


            	    }
            	    break;
            	case 8 :
            	    // InternalMcmodel.g:1638:4: ({...}? => ( ({...}? => (otherlv_17= 'fixed' ( (lv_fixed_18_0= ruleMorph ) ) ) ) ) )
            	    {
            	    // InternalMcmodel.g:1638:4: ({...}? => ( ({...}? => (otherlv_17= 'fixed' ( (lv_fixed_18_0= ruleMorph ) ) ) ) ) )
            	    // InternalMcmodel.g:1639:5: {...}? => ( ({...}? => (otherlv_17= 'fixed' ( (lv_fixed_18_0= ruleMorph ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getDisplayAccess().getUnorderedGroup_2(), 7) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleDisplay", "getUnorderedGroupHelper().canSelect(grammarAccess.getDisplayAccess().getUnorderedGroup_2(), 7)");
            	    }
            	    // InternalMcmodel.g:1639:104: ( ({...}? => (otherlv_17= 'fixed' ( (lv_fixed_18_0= ruleMorph ) ) ) ) )
            	    // InternalMcmodel.g:1640:6: ({...}? => (otherlv_17= 'fixed' ( (lv_fixed_18_0= ruleMorph ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getDisplayAccess().getUnorderedGroup_2(), 7);
            	    // InternalMcmodel.g:1643:9: ({...}? => (otherlv_17= 'fixed' ( (lv_fixed_18_0= ruleMorph ) ) ) )
            	    // InternalMcmodel.g:1643:10: {...}? => (otherlv_17= 'fixed' ( (lv_fixed_18_0= ruleMorph ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleDisplay", "true");
            	    }
            	    // InternalMcmodel.g:1643:19: (otherlv_17= 'fixed' ( (lv_fixed_18_0= ruleMorph ) ) )
            	    // InternalMcmodel.g:1643:20: otherlv_17= 'fixed' ( (lv_fixed_18_0= ruleMorph ) )
            	    {
            	    otherlv_17=(Token)match(input,53,FOLLOW_8); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_17, grammarAccess.getDisplayAccess().getFixedKeyword_2_7_0());
            	      								
            	    }
            	    // InternalMcmodel.g:1647:9: ( (lv_fixed_18_0= ruleMorph ) )
            	    // InternalMcmodel.g:1648:10: (lv_fixed_18_0= ruleMorph )
            	    {
            	    // InternalMcmodel.g:1648:10: (lv_fixed_18_0= ruleMorph )
            	    // InternalMcmodel.g:1649:11: lv_fixed_18_0= ruleMorph
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getDisplayAccess().getFixedMorphParserRuleCall_2_7_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_30);
            	    lv_fixed_18_0=ruleMorph();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getDisplayRule());
            	      											}
            	      											set(
            	      												current,
            	      												"fixed",
            	      												lv_fixed_18_0,
            	      												"com.raptor.mcmodel.Mcmodel.Morph");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getDisplayAccess().getUnorderedGroup_2());

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop18;
                }
            } while (true);


            }


            }

            getUnorderedGroupHelper().leave(grammarAccess.getDisplayAccess().getUnorderedGroup_2());

            }

            otherlv_19=(Token)match(input,25,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_19, grammarAccess.getDisplayAccess().getRightCurlyBracketKeyword_3());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDisplay"


    // $ANTLR start "entryRuleMorph"
    // InternalMcmodel.g:1687:1: entryRuleMorph returns [EObject current=null] : iv_ruleMorph= ruleMorph EOF ;
    public final EObject entryRuleMorph() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleMorph = null;


        try {
            // InternalMcmodel.g:1687:46: (iv_ruleMorph= ruleMorph EOF )
            // InternalMcmodel.g:1688:2: iv_ruleMorph= ruleMorph EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMorphRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleMorph=ruleMorph();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMorph; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMorph"


    // $ANTLR start "ruleMorph"
    // InternalMcmodel.g:1694:1: ruleMorph returns [EObject current=null] : ( () otherlv_1= '{' ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= 'rotation' otherlv_4= '=' ( (lv_rotation_5_0= ruleVec3d ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'translation' otherlv_7= '=' ( (lv_translation_8_0= ruleVec3d ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= 'scale' otherlv_10= '=' ( ( (lv_scale_11_1= ruleVec3d | lv_scale_11_2= ruleVec3dPercentage ) ) ) ) ) ) ) )* ) ) ) otherlv_12= '}' ) ;
    public final EObject ruleMorph() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        EObject lv_rotation_5_0 = null;

        EObject lv_translation_8_0 = null;

        EObject lv_scale_11_1 = null;

        EObject lv_scale_11_2 = null;



        	enterRule();

        try {
            // InternalMcmodel.g:1700:2: ( ( () otherlv_1= '{' ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= 'rotation' otherlv_4= '=' ( (lv_rotation_5_0= ruleVec3d ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'translation' otherlv_7= '=' ( (lv_translation_8_0= ruleVec3d ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= 'scale' otherlv_10= '=' ( ( (lv_scale_11_1= ruleVec3d | lv_scale_11_2= ruleVec3dPercentage ) ) ) ) ) ) ) )* ) ) ) otherlv_12= '}' ) )
            // InternalMcmodel.g:1701:2: ( () otherlv_1= '{' ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= 'rotation' otherlv_4= '=' ( (lv_rotation_5_0= ruleVec3d ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'translation' otherlv_7= '=' ( (lv_translation_8_0= ruleVec3d ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= 'scale' otherlv_10= '=' ( ( (lv_scale_11_1= ruleVec3d | lv_scale_11_2= ruleVec3dPercentage ) ) ) ) ) ) ) )* ) ) ) otherlv_12= '}' )
            {
            // InternalMcmodel.g:1701:2: ( () otherlv_1= '{' ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= 'rotation' otherlv_4= '=' ( (lv_rotation_5_0= ruleVec3d ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'translation' otherlv_7= '=' ( (lv_translation_8_0= ruleVec3d ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= 'scale' otherlv_10= '=' ( ( (lv_scale_11_1= ruleVec3d | lv_scale_11_2= ruleVec3dPercentage ) ) ) ) ) ) ) )* ) ) ) otherlv_12= '}' )
            // InternalMcmodel.g:1702:3: () otherlv_1= '{' ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= 'rotation' otherlv_4= '=' ( (lv_rotation_5_0= ruleVec3d ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'translation' otherlv_7= '=' ( (lv_translation_8_0= ruleVec3d ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= 'scale' otherlv_10= '=' ( ( (lv_scale_11_1= ruleVec3d | lv_scale_11_2= ruleVec3dPercentage ) ) ) ) ) ) ) )* ) ) ) otherlv_12= '}'
            {
            // InternalMcmodel.g:1702:3: ()
            // InternalMcmodel.g:1703:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getMorphAccess().getMorphAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,24,FOLLOW_31); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getMorphAccess().getLeftCurlyBracketKeyword_1());
              		
            }
            // InternalMcmodel.g:1713:3: ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= 'rotation' otherlv_4= '=' ( (lv_rotation_5_0= ruleVec3d ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'translation' otherlv_7= '=' ( (lv_translation_8_0= ruleVec3d ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= 'scale' otherlv_10= '=' ( ( (lv_scale_11_1= ruleVec3d | lv_scale_11_2= ruleVec3dPercentage ) ) ) ) ) ) ) )* ) ) )
            // InternalMcmodel.g:1714:4: ( ( ( ({...}? => ( ({...}? => (otherlv_3= 'rotation' otherlv_4= '=' ( (lv_rotation_5_0= ruleVec3d ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'translation' otherlv_7= '=' ( (lv_translation_8_0= ruleVec3d ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= 'scale' otherlv_10= '=' ( ( (lv_scale_11_1= ruleVec3d | lv_scale_11_2= ruleVec3dPercentage ) ) ) ) ) ) ) )* ) )
            {
            // InternalMcmodel.g:1714:4: ( ( ( ({...}? => ( ({...}? => (otherlv_3= 'rotation' otherlv_4= '=' ( (lv_rotation_5_0= ruleVec3d ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'translation' otherlv_7= '=' ( (lv_translation_8_0= ruleVec3d ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= 'scale' otherlv_10= '=' ( ( (lv_scale_11_1= ruleVec3d | lv_scale_11_2= ruleVec3dPercentage ) ) ) ) ) ) ) )* ) )
            // InternalMcmodel.g:1715:5: ( ( ({...}? => ( ({...}? => (otherlv_3= 'rotation' otherlv_4= '=' ( (lv_rotation_5_0= ruleVec3d ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'translation' otherlv_7= '=' ( (lv_translation_8_0= ruleVec3d ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= 'scale' otherlv_10= '=' ( ( (lv_scale_11_1= ruleVec3d | lv_scale_11_2= ruleVec3dPercentage ) ) ) ) ) ) ) )* )
            {
            getUnorderedGroupHelper().enter(grammarAccess.getMorphAccess().getUnorderedGroup_2());
            // InternalMcmodel.g:1718:5: ( ( ({...}? => ( ({...}? => (otherlv_3= 'rotation' otherlv_4= '=' ( (lv_rotation_5_0= ruleVec3d ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'translation' otherlv_7= '=' ( (lv_translation_8_0= ruleVec3d ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= 'scale' otherlv_10= '=' ( ( (lv_scale_11_1= ruleVec3d | lv_scale_11_2= ruleVec3dPercentage ) ) ) ) ) ) ) )* )
            // InternalMcmodel.g:1719:6: ( ({...}? => ( ({...}? => (otherlv_3= 'rotation' otherlv_4= '=' ( (lv_rotation_5_0= ruleVec3d ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'translation' otherlv_7= '=' ( (lv_translation_8_0= ruleVec3d ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= 'scale' otherlv_10= '=' ( ( (lv_scale_11_1= ruleVec3d | lv_scale_11_2= ruleVec3dPercentage ) ) ) ) ) ) ) )*
            {
            // InternalMcmodel.g:1719:6: ( ({...}? => ( ({...}? => (otherlv_3= 'rotation' otherlv_4= '=' ( (lv_rotation_5_0= ruleVec3d ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'translation' otherlv_7= '=' ( (lv_translation_8_0= ruleVec3d ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= 'scale' otherlv_10= '=' ( ( (lv_scale_11_1= ruleVec3d | lv_scale_11_2= ruleVec3dPercentage ) ) ) ) ) ) ) )*
            loop20:
            do {
                int alt20=4;
                int LA20_0 = input.LA(1);

                if ( LA20_0 == 32 && getUnorderedGroupHelper().canSelect(grammarAccess.getMorphAccess().getUnorderedGroup_2(), 0) ) {
                    alt20=1;
                }
                else if ( LA20_0 == 54 && getUnorderedGroupHelper().canSelect(grammarAccess.getMorphAccess().getUnorderedGroup_2(), 1) ) {
                    alt20=2;
                }
                else if ( LA20_0 == 55 && getUnorderedGroupHelper().canSelect(grammarAccess.getMorphAccess().getUnorderedGroup_2(), 2) ) {
                    alt20=3;
                }


                switch (alt20) {
            	case 1 :
            	    // InternalMcmodel.g:1720:4: ({...}? => ( ({...}? => (otherlv_3= 'rotation' otherlv_4= '=' ( (lv_rotation_5_0= ruleVec3d ) ) ) ) ) )
            	    {
            	    // InternalMcmodel.g:1720:4: ({...}? => ( ({...}? => (otherlv_3= 'rotation' otherlv_4= '=' ( (lv_rotation_5_0= ruleVec3d ) ) ) ) ) )
            	    // InternalMcmodel.g:1721:5: {...}? => ( ({...}? => (otherlv_3= 'rotation' otherlv_4= '=' ( (lv_rotation_5_0= ruleVec3d ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getMorphAccess().getUnorderedGroup_2(), 0) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleMorph", "getUnorderedGroupHelper().canSelect(grammarAccess.getMorphAccess().getUnorderedGroup_2(), 0)");
            	    }
            	    // InternalMcmodel.g:1721:102: ( ({...}? => (otherlv_3= 'rotation' otherlv_4= '=' ( (lv_rotation_5_0= ruleVec3d ) ) ) ) )
            	    // InternalMcmodel.g:1722:6: ({...}? => (otherlv_3= 'rotation' otherlv_4= '=' ( (lv_rotation_5_0= ruleVec3d ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getMorphAccess().getUnorderedGroup_2(), 0);
            	    // InternalMcmodel.g:1725:9: ({...}? => (otherlv_3= 'rotation' otherlv_4= '=' ( (lv_rotation_5_0= ruleVec3d ) ) ) )
            	    // InternalMcmodel.g:1725:10: {...}? => (otherlv_3= 'rotation' otherlv_4= '=' ( (lv_rotation_5_0= ruleVec3d ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleMorph", "true");
            	    }
            	    // InternalMcmodel.g:1725:19: (otherlv_3= 'rotation' otherlv_4= '=' ( (lv_rotation_5_0= ruleVec3d ) ) )
            	    // InternalMcmodel.g:1725:20: otherlv_3= 'rotation' otherlv_4= '=' ( (lv_rotation_5_0= ruleVec3d ) )
            	    {
            	    otherlv_3=(Token)match(input,32,FOLLOW_3); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_3, grammarAccess.getMorphAccess().getRotationKeyword_2_0_0());
            	      								
            	    }
            	    otherlv_4=(Token)match(input,18,FOLLOW_14); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_4, grammarAccess.getMorphAccess().getEqualsSignKeyword_2_0_1());
            	      								
            	    }
            	    // InternalMcmodel.g:1733:9: ( (lv_rotation_5_0= ruleVec3d ) )
            	    // InternalMcmodel.g:1734:10: (lv_rotation_5_0= ruleVec3d )
            	    {
            	    // InternalMcmodel.g:1734:10: (lv_rotation_5_0= ruleVec3d )
            	    // InternalMcmodel.g:1735:11: lv_rotation_5_0= ruleVec3d
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getMorphAccess().getRotationVec3dParserRuleCall_2_0_2_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_31);
            	    lv_rotation_5_0=ruleVec3d();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getMorphRule());
            	      											}
            	      											set(
            	      												current,
            	      												"rotation",
            	      												lv_rotation_5_0,
            	      												"com.raptor.mcmodel.Mcmodel.Vec3d");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getMorphAccess().getUnorderedGroup_2());

            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // InternalMcmodel.g:1758:4: ({...}? => ( ({...}? => (otherlv_6= 'translation' otherlv_7= '=' ( (lv_translation_8_0= ruleVec3d ) ) ) ) ) )
            	    {
            	    // InternalMcmodel.g:1758:4: ({...}? => ( ({...}? => (otherlv_6= 'translation' otherlv_7= '=' ( (lv_translation_8_0= ruleVec3d ) ) ) ) ) )
            	    // InternalMcmodel.g:1759:5: {...}? => ( ({...}? => (otherlv_6= 'translation' otherlv_7= '=' ( (lv_translation_8_0= ruleVec3d ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getMorphAccess().getUnorderedGroup_2(), 1) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleMorph", "getUnorderedGroupHelper().canSelect(grammarAccess.getMorphAccess().getUnorderedGroup_2(), 1)");
            	    }
            	    // InternalMcmodel.g:1759:102: ( ({...}? => (otherlv_6= 'translation' otherlv_7= '=' ( (lv_translation_8_0= ruleVec3d ) ) ) ) )
            	    // InternalMcmodel.g:1760:6: ({...}? => (otherlv_6= 'translation' otherlv_7= '=' ( (lv_translation_8_0= ruleVec3d ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getMorphAccess().getUnorderedGroup_2(), 1);
            	    // InternalMcmodel.g:1763:9: ({...}? => (otherlv_6= 'translation' otherlv_7= '=' ( (lv_translation_8_0= ruleVec3d ) ) ) )
            	    // InternalMcmodel.g:1763:10: {...}? => (otherlv_6= 'translation' otherlv_7= '=' ( (lv_translation_8_0= ruleVec3d ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleMorph", "true");
            	    }
            	    // InternalMcmodel.g:1763:19: (otherlv_6= 'translation' otherlv_7= '=' ( (lv_translation_8_0= ruleVec3d ) ) )
            	    // InternalMcmodel.g:1763:20: otherlv_6= 'translation' otherlv_7= '=' ( (lv_translation_8_0= ruleVec3d ) )
            	    {
            	    otherlv_6=(Token)match(input,54,FOLLOW_3); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_6, grammarAccess.getMorphAccess().getTranslationKeyword_2_1_0());
            	      								
            	    }
            	    otherlv_7=(Token)match(input,18,FOLLOW_14); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_7, grammarAccess.getMorphAccess().getEqualsSignKeyword_2_1_1());
            	      								
            	    }
            	    // InternalMcmodel.g:1771:9: ( (lv_translation_8_0= ruleVec3d ) )
            	    // InternalMcmodel.g:1772:10: (lv_translation_8_0= ruleVec3d )
            	    {
            	    // InternalMcmodel.g:1772:10: (lv_translation_8_0= ruleVec3d )
            	    // InternalMcmodel.g:1773:11: lv_translation_8_0= ruleVec3d
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getMorphAccess().getTranslationVec3dParserRuleCall_2_1_2_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_31);
            	    lv_translation_8_0=ruleVec3d();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getMorphRule());
            	      											}
            	      											set(
            	      												current,
            	      												"translation",
            	      												lv_translation_8_0,
            	      												"com.raptor.mcmodel.Mcmodel.Vec3d");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getMorphAccess().getUnorderedGroup_2());

            	    }


            	    }


            	    }
            	    break;
            	case 3 :
            	    // InternalMcmodel.g:1796:4: ({...}? => ( ({...}? => (otherlv_9= 'scale' otherlv_10= '=' ( ( (lv_scale_11_1= ruleVec3d | lv_scale_11_2= ruleVec3dPercentage ) ) ) ) ) ) )
            	    {
            	    // InternalMcmodel.g:1796:4: ({...}? => ( ({...}? => (otherlv_9= 'scale' otherlv_10= '=' ( ( (lv_scale_11_1= ruleVec3d | lv_scale_11_2= ruleVec3dPercentage ) ) ) ) ) ) )
            	    // InternalMcmodel.g:1797:5: {...}? => ( ({...}? => (otherlv_9= 'scale' otherlv_10= '=' ( ( (lv_scale_11_1= ruleVec3d | lv_scale_11_2= ruleVec3dPercentage ) ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getMorphAccess().getUnorderedGroup_2(), 2) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleMorph", "getUnorderedGroupHelper().canSelect(grammarAccess.getMorphAccess().getUnorderedGroup_2(), 2)");
            	    }
            	    // InternalMcmodel.g:1797:102: ( ({...}? => (otherlv_9= 'scale' otherlv_10= '=' ( ( (lv_scale_11_1= ruleVec3d | lv_scale_11_2= ruleVec3dPercentage ) ) ) ) ) )
            	    // InternalMcmodel.g:1798:6: ({...}? => (otherlv_9= 'scale' otherlv_10= '=' ( ( (lv_scale_11_1= ruleVec3d | lv_scale_11_2= ruleVec3dPercentage ) ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getMorphAccess().getUnorderedGroup_2(), 2);
            	    // InternalMcmodel.g:1801:9: ({...}? => (otherlv_9= 'scale' otherlv_10= '=' ( ( (lv_scale_11_1= ruleVec3d | lv_scale_11_2= ruleVec3dPercentage ) ) ) ) )
            	    // InternalMcmodel.g:1801:10: {...}? => (otherlv_9= 'scale' otherlv_10= '=' ( ( (lv_scale_11_1= ruleVec3d | lv_scale_11_2= ruleVec3dPercentage ) ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleMorph", "true");
            	    }
            	    // InternalMcmodel.g:1801:19: (otherlv_9= 'scale' otherlv_10= '=' ( ( (lv_scale_11_1= ruleVec3d | lv_scale_11_2= ruleVec3dPercentage ) ) ) )
            	    // InternalMcmodel.g:1801:20: otherlv_9= 'scale' otherlv_10= '=' ( ( (lv_scale_11_1= ruleVec3d | lv_scale_11_2= ruleVec3dPercentage ) ) )
            	    {
            	    otherlv_9=(Token)match(input,55,FOLLOW_3); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_9, grammarAccess.getMorphAccess().getScaleKeyword_2_2_0());
            	      								
            	    }
            	    otherlv_10=(Token)match(input,18,FOLLOW_14); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_10, grammarAccess.getMorphAccess().getEqualsSignKeyword_2_2_1());
            	      								
            	    }
            	    // InternalMcmodel.g:1809:9: ( ( (lv_scale_11_1= ruleVec3d | lv_scale_11_2= ruleVec3dPercentage ) ) )
            	    // InternalMcmodel.g:1810:10: ( (lv_scale_11_1= ruleVec3d | lv_scale_11_2= ruleVec3dPercentage ) )
            	    {
            	    // InternalMcmodel.g:1810:10: ( (lv_scale_11_1= ruleVec3d | lv_scale_11_2= ruleVec3dPercentage ) )
            	    // InternalMcmodel.g:1811:11: (lv_scale_11_1= ruleVec3d | lv_scale_11_2= ruleVec3dPercentage )
            	    {
            	    // InternalMcmodel.g:1811:11: (lv_scale_11_1= ruleVec3d | lv_scale_11_2= ruleVec3dPercentage )
            	    int alt19=2;
            	    int LA19_0 = input.LA(1);

            	    if ( (LA19_0==42) ) {
            	        int LA19_1 = input.LA(2);

            	        if ( (LA19_1==RULE_PERCENTAGE) ) {
            	            alt19=2;
            	        }
            	        else if ( (LA19_1==RULE_DOUBLE||(LA19_1>=RULE_ULONG && LA19_1<=RULE_SLONG)) ) {
            	            alt19=1;
            	        }
            	        else {
            	            if (state.backtracking>0) {state.failed=true; return current;}
            	            NoViableAltException nvae =
            	                new NoViableAltException("", 19, 1, input);

            	            throw nvae;
            	        }
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 19, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt19) {
            	        case 1 :
            	            // InternalMcmodel.g:1812:12: lv_scale_11_1= ruleVec3d
            	            {
            	            if ( state.backtracking==0 ) {

            	              												newCompositeNode(grammarAccess.getMorphAccess().getScaleVec3dParserRuleCall_2_2_2_0_0());
            	              											
            	            }
            	            pushFollow(FOLLOW_31);
            	            lv_scale_11_1=ruleVec3d();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              												if (current==null) {
            	              													current = createModelElementForParent(grammarAccess.getMorphRule());
            	              												}
            	              												set(
            	              													current,
            	              													"scale",
            	              													lv_scale_11_1,
            	              													"com.raptor.mcmodel.Mcmodel.Vec3d");
            	              												afterParserOrEnumRuleCall();
            	              											
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalMcmodel.g:1828:12: lv_scale_11_2= ruleVec3dPercentage
            	            {
            	            if ( state.backtracking==0 ) {

            	              												newCompositeNode(grammarAccess.getMorphAccess().getScaleVec3dPercentageParserRuleCall_2_2_2_0_1());
            	              											
            	            }
            	            pushFollow(FOLLOW_31);
            	            lv_scale_11_2=ruleVec3dPercentage();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              												if (current==null) {
            	              													current = createModelElementForParent(grammarAccess.getMorphRule());
            	              												}
            	              												set(
            	              													current,
            	              													"scale",
            	              													lv_scale_11_2,
            	              													"com.raptor.mcmodel.Mcmodel.Vec3dPercentage");
            	              												afterParserOrEnumRuleCall();
            	              											
            	            }

            	            }
            	            break;

            	    }


            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getMorphAccess().getUnorderedGroup_2());

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop20;
                }
            } while (true);


            }


            }

            getUnorderedGroupHelper().leave(grammarAccess.getMorphAccess().getUnorderedGroup_2());

            }

            otherlv_12=(Token)match(input,25,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_12, grammarAccess.getMorphAccess().getRightCurlyBracketKeyword_3());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMorph"


    // $ANTLR start "entryRuleItemOverride"
    // InternalMcmodel.g:1867:1: entryRuleItemOverride returns [EObject current=null] : iv_ruleItemOverride= ruleItemOverride EOF ;
    public final EObject entryRuleItemOverride() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleItemOverride = null;


        try {
            // InternalMcmodel.g:1867:53: (iv_ruleItemOverride= ruleItemOverride EOF )
            // InternalMcmodel.g:1868:2: iv_ruleItemOverride= ruleItemOverride EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getItemOverrideRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleItemOverride=ruleItemOverride();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleItemOverride; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleItemOverride"


    // $ANTLR start "ruleItemOverride"
    // InternalMcmodel.g:1874:1: ruleItemOverride returns [EObject current=null] : ( ( (lv_predicate_0_0= ruleOverridePredicate ) ) otherlv_1= 'apply' ( (lv_model_2_0= ruleNamespacedLocation ) ) ) ;
    public final EObject ruleItemOverride() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_predicate_0_0 = null;

        AntlrDatatypeRuleToken lv_model_2_0 = null;



        	enterRule();

        try {
            // InternalMcmodel.g:1880:2: ( ( ( (lv_predicate_0_0= ruleOverridePredicate ) ) otherlv_1= 'apply' ( (lv_model_2_0= ruleNamespacedLocation ) ) ) )
            // InternalMcmodel.g:1881:2: ( ( (lv_predicate_0_0= ruleOverridePredicate ) ) otherlv_1= 'apply' ( (lv_model_2_0= ruleNamespacedLocation ) ) )
            {
            // InternalMcmodel.g:1881:2: ( ( (lv_predicate_0_0= ruleOverridePredicate ) ) otherlv_1= 'apply' ( (lv_model_2_0= ruleNamespacedLocation ) ) )
            // InternalMcmodel.g:1882:3: ( (lv_predicate_0_0= ruleOverridePredicate ) ) otherlv_1= 'apply' ( (lv_model_2_0= ruleNamespacedLocation ) )
            {
            // InternalMcmodel.g:1882:3: ( (lv_predicate_0_0= ruleOverridePredicate ) )
            // InternalMcmodel.g:1883:4: (lv_predicate_0_0= ruleOverridePredicate )
            {
            // InternalMcmodel.g:1883:4: (lv_predicate_0_0= ruleOverridePredicate )
            // InternalMcmodel.g:1884:5: lv_predicate_0_0= ruleOverridePredicate
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getItemOverrideAccess().getPredicateOverridePredicateParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_32);
            lv_predicate_0_0=ruleOverridePredicate();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getItemOverrideRule());
              					}
              					set(
              						current,
              						"predicate",
              						lv_predicate_0_0,
              						"com.raptor.mcmodel.Mcmodel.OverridePredicate");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_1=(Token)match(input,56,FOLLOW_4); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getItemOverrideAccess().getApplyKeyword_1());
              		
            }
            // InternalMcmodel.g:1905:3: ( (lv_model_2_0= ruleNamespacedLocation ) )
            // InternalMcmodel.g:1906:4: (lv_model_2_0= ruleNamespacedLocation )
            {
            // InternalMcmodel.g:1906:4: (lv_model_2_0= ruleNamespacedLocation )
            // InternalMcmodel.g:1907:5: lv_model_2_0= ruleNamespacedLocation
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getItemOverrideAccess().getModelNamespacedLocationParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_model_2_0=ruleNamespacedLocation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getItemOverrideRule());
              					}
              					set(
              						current,
              						"model",
              						lv_model_2_0,
              						"com.raptor.mcmodel.Mcmodel.NamespacedLocation");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleItemOverride"


    // $ANTLR start "entryRuleOverridePredicate"
    // InternalMcmodel.g:1928:1: entryRuleOverridePredicate returns [EObject current=null] : iv_ruleOverridePredicate= ruleOverridePredicate EOF ;
    public final EObject entryRuleOverridePredicate() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleOverridePredicate = null;


        try {
            // InternalMcmodel.g:1928:58: (iv_ruleOverridePredicate= ruleOverridePredicate EOF )
            // InternalMcmodel.g:1929:2: iv_ruleOverridePredicate= ruleOverridePredicate EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOverridePredicateRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOverridePredicate=ruleOverridePredicate();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOverridePredicate; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOverridePredicate"


    // $ANTLR start "ruleOverridePredicate"
    // InternalMcmodel.g:1935:1: ruleOverridePredicate returns [EObject current=null] : (otherlv_0= 'when' otherlv_1= '(' (this_OverridePredicate_1_2= ruleOverridePredicate_1 | this_OverridePredicate_2_3= ruleOverridePredicate_2 | this_OverridePredicate_3_4= ruleOverridePredicate_3 | this_OverridePredicate_4_5= ruleOverridePredicate_4 | this_OverridePredicate_5_6= ruleOverridePredicate_5 | this_OverridePredicate_6_7= ruleOverridePredicate_6 | this_OverridePredicate_7_8= ruleOverridePredicate_7 | this_OverridePredicate_8_9= ruleOverridePredicate_8 | this_OverridePredicate_9_10= ruleOverridePredicate_9 | this_OverridePredicate_10_11= ruleOverridePredicate_10 | this_OverridePredicate_11_12= ruleOverridePredicate_11 | this_OverridePredicate_12_13= ruleOverridePredicate_12 | this_OverridePredicate_13_14= ruleOverridePredicate_13 ) otherlv_15= ')' ) ;
    public final EObject ruleOverridePredicate() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_15=null;
        EObject this_OverridePredicate_1_2 = null;

        EObject this_OverridePredicate_2_3 = null;

        EObject this_OverridePredicate_3_4 = null;

        EObject this_OverridePredicate_4_5 = null;

        EObject this_OverridePredicate_5_6 = null;

        EObject this_OverridePredicate_6_7 = null;

        EObject this_OverridePredicate_7_8 = null;

        EObject this_OverridePredicate_8_9 = null;

        EObject this_OverridePredicate_9_10 = null;

        EObject this_OverridePredicate_10_11 = null;

        EObject this_OverridePredicate_11_12 = null;

        EObject this_OverridePredicate_12_13 = null;

        EObject this_OverridePredicate_13_14 = null;



        	enterRule();

        try {
            // InternalMcmodel.g:1941:2: ( (otherlv_0= 'when' otherlv_1= '(' (this_OverridePredicate_1_2= ruleOverridePredicate_1 | this_OverridePredicate_2_3= ruleOverridePredicate_2 | this_OverridePredicate_3_4= ruleOverridePredicate_3 | this_OverridePredicate_4_5= ruleOverridePredicate_4 | this_OverridePredicate_5_6= ruleOverridePredicate_5 | this_OverridePredicate_6_7= ruleOverridePredicate_6 | this_OverridePredicate_7_8= ruleOverridePredicate_7 | this_OverridePredicate_8_9= ruleOverridePredicate_8 | this_OverridePredicate_9_10= ruleOverridePredicate_9 | this_OverridePredicate_10_11= ruleOverridePredicate_10 | this_OverridePredicate_11_12= ruleOverridePredicate_11 | this_OverridePredicate_12_13= ruleOverridePredicate_12 | this_OverridePredicate_13_14= ruleOverridePredicate_13 ) otherlv_15= ')' ) )
            // InternalMcmodel.g:1942:2: (otherlv_0= 'when' otherlv_1= '(' (this_OverridePredicate_1_2= ruleOverridePredicate_1 | this_OverridePredicate_2_3= ruleOverridePredicate_2 | this_OverridePredicate_3_4= ruleOverridePredicate_3 | this_OverridePredicate_4_5= ruleOverridePredicate_4 | this_OverridePredicate_5_6= ruleOverridePredicate_5 | this_OverridePredicate_6_7= ruleOverridePredicate_6 | this_OverridePredicate_7_8= ruleOverridePredicate_7 | this_OverridePredicate_8_9= ruleOverridePredicate_8 | this_OverridePredicate_9_10= ruleOverridePredicate_9 | this_OverridePredicate_10_11= ruleOverridePredicate_10 | this_OverridePredicate_11_12= ruleOverridePredicate_11 | this_OverridePredicate_12_13= ruleOverridePredicate_12 | this_OverridePredicate_13_14= ruleOverridePredicate_13 ) otherlv_15= ')' )
            {
            // InternalMcmodel.g:1942:2: (otherlv_0= 'when' otherlv_1= '(' (this_OverridePredicate_1_2= ruleOverridePredicate_1 | this_OverridePredicate_2_3= ruleOverridePredicate_2 | this_OverridePredicate_3_4= ruleOverridePredicate_3 | this_OverridePredicate_4_5= ruleOverridePredicate_4 | this_OverridePredicate_5_6= ruleOverridePredicate_5 | this_OverridePredicate_6_7= ruleOverridePredicate_6 | this_OverridePredicate_7_8= ruleOverridePredicate_7 | this_OverridePredicate_8_9= ruleOverridePredicate_8 | this_OverridePredicate_9_10= ruleOverridePredicate_9 | this_OverridePredicate_10_11= ruleOverridePredicate_10 | this_OverridePredicate_11_12= ruleOverridePredicate_11 | this_OverridePredicate_12_13= ruleOverridePredicate_12 | this_OverridePredicate_13_14= ruleOverridePredicate_13 ) otherlv_15= ')' )
            // InternalMcmodel.g:1943:3: otherlv_0= 'when' otherlv_1= '(' (this_OverridePredicate_1_2= ruleOverridePredicate_1 | this_OverridePredicate_2_3= ruleOverridePredicate_2 | this_OverridePredicate_3_4= ruleOverridePredicate_3 | this_OverridePredicate_4_5= ruleOverridePredicate_4 | this_OverridePredicate_5_6= ruleOverridePredicate_5 | this_OverridePredicate_6_7= ruleOverridePredicate_6 | this_OverridePredicate_7_8= ruleOverridePredicate_7 | this_OverridePredicate_8_9= ruleOverridePredicate_8 | this_OverridePredicate_9_10= ruleOverridePredicate_9 | this_OverridePredicate_10_11= ruleOverridePredicate_10 | this_OverridePredicate_11_12= ruleOverridePredicate_11 | this_OverridePredicate_12_13= ruleOverridePredicate_12 | this_OverridePredicate_13_14= ruleOverridePredicate_13 ) otherlv_15= ')'
            {
            otherlv_0=(Token)match(input,57,FOLLOW_14); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getOverridePredicateAccess().getWhenKeyword_0());
              		
            }
            otherlv_1=(Token)match(input,42,FOLLOW_33); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getOverridePredicateAccess().getLeftParenthesisKeyword_1());
              		
            }
            // InternalMcmodel.g:1951:3: (this_OverridePredicate_1_2= ruleOverridePredicate_1 | this_OverridePredicate_2_3= ruleOverridePredicate_2 | this_OverridePredicate_3_4= ruleOverridePredicate_3 | this_OverridePredicate_4_5= ruleOverridePredicate_4 | this_OverridePredicate_5_6= ruleOverridePredicate_5 | this_OverridePredicate_6_7= ruleOverridePredicate_6 | this_OverridePredicate_7_8= ruleOverridePredicate_7 | this_OverridePredicate_8_9= ruleOverridePredicate_8 | this_OverridePredicate_9_10= ruleOverridePredicate_9 | this_OverridePredicate_10_11= ruleOverridePredicate_10 | this_OverridePredicate_11_12= ruleOverridePredicate_11 | this_OverridePredicate_12_13= ruleOverridePredicate_12 | this_OverridePredicate_13_14= ruleOverridePredicate_13 )
            int alt21=13;
            alt21 = dfa21.predict(input);
            switch (alt21) {
                case 1 :
                    // InternalMcmodel.g:1952:4: this_OverridePredicate_1_2= ruleOverridePredicate_1
                    {
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getOverridePredicateAccess().getOverridePredicate_1ParserRuleCall_2_0());
                      			
                    }
                    pushFollow(FOLLOW_34);
                    this_OverridePredicate_1_2=ruleOverridePredicate_1();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_OverridePredicate_1_2;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalMcmodel.g:1961:4: this_OverridePredicate_2_3= ruleOverridePredicate_2
                    {
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getOverridePredicateAccess().getOverridePredicate_2ParserRuleCall_2_1());
                      			
                    }
                    pushFollow(FOLLOW_34);
                    this_OverridePredicate_2_3=ruleOverridePredicate_2();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_OverridePredicate_2_3;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }
                    break;
                case 3 :
                    // InternalMcmodel.g:1970:4: this_OverridePredicate_3_4= ruleOverridePredicate_3
                    {
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getOverridePredicateAccess().getOverridePredicate_3ParserRuleCall_2_2());
                      			
                    }
                    pushFollow(FOLLOW_34);
                    this_OverridePredicate_3_4=ruleOverridePredicate_3();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_OverridePredicate_3_4;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }
                    break;
                case 4 :
                    // InternalMcmodel.g:1979:4: this_OverridePredicate_4_5= ruleOverridePredicate_4
                    {
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getOverridePredicateAccess().getOverridePredicate_4ParserRuleCall_2_3());
                      			
                    }
                    pushFollow(FOLLOW_34);
                    this_OverridePredicate_4_5=ruleOverridePredicate_4();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_OverridePredicate_4_5;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }
                    break;
                case 5 :
                    // InternalMcmodel.g:1988:4: this_OverridePredicate_5_6= ruleOverridePredicate_5
                    {
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getOverridePredicateAccess().getOverridePredicate_5ParserRuleCall_2_4());
                      			
                    }
                    pushFollow(FOLLOW_34);
                    this_OverridePredicate_5_6=ruleOverridePredicate_5();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_OverridePredicate_5_6;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }
                    break;
                case 6 :
                    // InternalMcmodel.g:1997:4: this_OverridePredicate_6_7= ruleOverridePredicate_6
                    {
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getOverridePredicateAccess().getOverridePredicate_6ParserRuleCall_2_5());
                      			
                    }
                    pushFollow(FOLLOW_34);
                    this_OverridePredicate_6_7=ruleOverridePredicate_6();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_OverridePredicate_6_7;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }
                    break;
                case 7 :
                    // InternalMcmodel.g:2006:4: this_OverridePredicate_7_8= ruleOverridePredicate_7
                    {
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getOverridePredicateAccess().getOverridePredicate_7ParserRuleCall_2_6());
                      			
                    }
                    pushFollow(FOLLOW_34);
                    this_OverridePredicate_7_8=ruleOverridePredicate_7();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_OverridePredicate_7_8;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }
                    break;
                case 8 :
                    // InternalMcmodel.g:2015:4: this_OverridePredicate_8_9= ruleOverridePredicate_8
                    {
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getOverridePredicateAccess().getOverridePredicate_8ParserRuleCall_2_7());
                      			
                    }
                    pushFollow(FOLLOW_34);
                    this_OverridePredicate_8_9=ruleOverridePredicate_8();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_OverridePredicate_8_9;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }
                    break;
                case 9 :
                    // InternalMcmodel.g:2024:4: this_OverridePredicate_9_10= ruleOverridePredicate_9
                    {
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getOverridePredicateAccess().getOverridePredicate_9ParserRuleCall_2_8());
                      			
                    }
                    pushFollow(FOLLOW_34);
                    this_OverridePredicate_9_10=ruleOverridePredicate_9();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_OverridePredicate_9_10;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }
                    break;
                case 10 :
                    // InternalMcmodel.g:2033:4: this_OverridePredicate_10_11= ruleOverridePredicate_10
                    {
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getOverridePredicateAccess().getOverridePredicate_10ParserRuleCall_2_9());
                      			
                    }
                    pushFollow(FOLLOW_34);
                    this_OverridePredicate_10_11=ruleOverridePredicate_10();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_OverridePredicate_10_11;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }
                    break;
                case 11 :
                    // InternalMcmodel.g:2042:4: this_OverridePredicate_11_12= ruleOverridePredicate_11
                    {
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getOverridePredicateAccess().getOverridePredicate_11ParserRuleCall_2_10());
                      			
                    }
                    pushFollow(FOLLOW_34);
                    this_OverridePredicate_11_12=ruleOverridePredicate_11();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_OverridePredicate_11_12;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }
                    break;
                case 12 :
                    // InternalMcmodel.g:2051:4: this_OverridePredicate_12_13= ruleOverridePredicate_12
                    {
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getOverridePredicateAccess().getOverridePredicate_12ParserRuleCall_2_11());
                      			
                    }
                    pushFollow(FOLLOW_34);
                    this_OverridePredicate_12_13=ruleOverridePredicate_12();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_OverridePredicate_12_13;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }
                    break;
                case 13 :
                    // InternalMcmodel.g:2060:4: this_OverridePredicate_13_14= ruleOverridePredicate_13
                    {
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getOverridePredicateAccess().getOverridePredicate_13ParserRuleCall_2_12());
                      			
                    }
                    pushFollow(FOLLOW_34);
                    this_OverridePredicate_13_14=ruleOverridePredicate_13();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_OverridePredicate_13_14;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }
                    break;

            }

            otherlv_15=(Token)match(input,45,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_15, grammarAccess.getOverridePredicateAccess().getRightParenthesisKeyword_3());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOverridePredicate"


    // $ANTLR start "entryRuleOverridePredicate_1"
    // InternalMcmodel.g:2077:1: entryRuleOverridePredicate_1 returns [EObject current=null] : iv_ruleOverridePredicate_1= ruleOverridePredicate_1 EOF ;
    public final EObject entryRuleOverridePredicate_1() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleOverridePredicate_1 = null;


        try {
            // InternalMcmodel.g:2077:60: (iv_ruleOverridePredicate_1= ruleOverridePredicate_1 EOF )
            // InternalMcmodel.g:2078:2: iv_ruleOverridePredicate_1= ruleOverridePredicate_1 EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOverridePredicate_1Rule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOverridePredicate_1=ruleOverridePredicate_1();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOverridePredicate_1; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOverridePredicate_1"


    // $ANTLR start "ruleOverridePredicate_1"
    // InternalMcmodel.g:2084:1: ruleOverridePredicate_1 returns [EObject current=null] : ( ( (lv_angleDefined_0_0= 'angle' ) ) (otherlv_1= '=' | otherlv_2= '==' ) ( (lv_angle_3_0= RULE_PERCENTAGE ) ) ( ( ( ( ({...}? => ( ({...}? => (otherlv_5= '&' ( ( ( (lv_blockingDefined_6_0= '!' ) ) otherlv_7= 'blocking' ) | ( ( (lv_blockingDefined_8_0= 'blocking' ) ) ( (otherlv_9= '!=' ( ( (lv_blocking_10_0= 'false' ) ) | otherlv_11= 'true' ) ) | ( (otherlv_12= '=' | otherlv_13= '==' ) ( ( (lv_blocking_14_0= 'true' ) ) | otherlv_15= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= '&' ( ( ( (lv_brokenDefined_17_0= '!' ) ) otherlv_18= 'broken' ) | ( ( (lv_brokenDefined_19_0= 'broken' ) ) ( (otherlv_20= '!=' ( ( (lv_broken_21_0= 'false' ) ) | otherlv_22= 'true' ) ) | ( (otherlv_23= '=' | otherlv_24= '==' ) ( ( (lv_broken_25_0= 'true' ) ) | otherlv_26= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= '&' ( ( ( (lv_castDefined_28_0= '!' ) ) otherlv_29= 'cast' ) | ( ( (lv_castDefined_30_0= 'cast' ) ) ( (otherlv_31= '!=' ( ( (lv_cast_32_0= 'false' ) ) | otherlv_33= 'true' ) ) | ( (otherlv_34= '=' | otherlv_35= '==' ) ( ( (lv_cast_36_0= 'true' ) ) | otherlv_37= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_38= '&' ( (lv_cooldownDefined_39_0= 'cooldown' ) ) (otherlv_40= '=' | otherlv_41= '==' ) ( (lv_cooldown_42_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= '&' ( (lv_damageDefined_44_0= 'damage' ) ) (otherlv_45= '=' | otherlv_46= '==' ) ( (lv_damage_47_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_48= '&' ( ( ( (lv_damagedDefined_49_0= '!' ) ) otherlv_50= 'damaged' ) | ( ( (lv_damagedDefined_51_0= 'damaged' ) ) ( (otherlv_52= '!=' ( ( (lv_damaged_53_0= 'false' ) ) | otherlv_54= 'true' ) ) | ( (otherlv_55= '=' | otherlv_56= '==' ) ( ( (lv_damaged_57_0= 'true' ) ) | otherlv_58= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_59= '&' ( ( ( (lv_lefthandedDefined_60_0= '!' ) ) otherlv_61= 'lefthanded' ) | ( ( (lv_lefthandedDefined_62_0= 'lefthanded' ) ) ( (otherlv_63= '!=' ( ( (lv_lefthanded_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_lefthanded_68_0= 'true' ) ) | otherlv_69= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_70= '&' ( (lv_pullDefined_71_0= 'pull' ) ) (otherlv_72= '=' | otherlv_73= '==' ) ( (lv_pull_74_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_75= '&' ( ( ( (lv_pullingDefined_76_0= '!' ) ) otherlv_77= 'pulling' ) | ( ( (lv_pullingDefined_78_0= 'pulling' ) ) ( (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) ) | ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_86= '&' ( ( ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing' ) | ( ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_97= '&' ( (lv_timeDefined_98_0= 'time' ) ) (otherlv_99= '=' | otherlv_100= '==' ) ( (lv_time_101_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) ) ) ) ) ) )* ) ) ) ) ;
    public final EObject ruleOverridePredicate_1() throws RecognitionException {
        EObject current = null;

        Token lv_angleDefined_0_0=null;
        Token otherlv_1=null;
        Token otherlv_2=null;
        Token lv_angle_3_0=null;
        Token otherlv_5=null;
        Token lv_blockingDefined_6_0=null;
        Token otherlv_7=null;
        Token lv_blockingDefined_8_0=null;
        Token otherlv_9=null;
        Token lv_blocking_10_0=null;
        Token otherlv_11=null;
        Token otherlv_12=null;
        Token otherlv_13=null;
        Token lv_blocking_14_0=null;
        Token otherlv_15=null;
        Token otherlv_16=null;
        Token lv_brokenDefined_17_0=null;
        Token otherlv_18=null;
        Token lv_brokenDefined_19_0=null;
        Token otherlv_20=null;
        Token lv_broken_21_0=null;
        Token otherlv_22=null;
        Token otherlv_23=null;
        Token otherlv_24=null;
        Token lv_broken_25_0=null;
        Token otherlv_26=null;
        Token otherlv_27=null;
        Token lv_castDefined_28_0=null;
        Token otherlv_29=null;
        Token lv_castDefined_30_0=null;
        Token otherlv_31=null;
        Token lv_cast_32_0=null;
        Token otherlv_33=null;
        Token otherlv_34=null;
        Token otherlv_35=null;
        Token lv_cast_36_0=null;
        Token otherlv_37=null;
        Token otherlv_38=null;
        Token lv_cooldownDefined_39_0=null;
        Token otherlv_40=null;
        Token otherlv_41=null;
        Token lv_cooldown_42_0=null;
        Token otherlv_43=null;
        Token lv_damageDefined_44_0=null;
        Token otherlv_45=null;
        Token otherlv_46=null;
        Token lv_damage_47_0=null;
        Token otherlv_48=null;
        Token lv_damagedDefined_49_0=null;
        Token otherlv_50=null;
        Token lv_damagedDefined_51_0=null;
        Token otherlv_52=null;
        Token lv_damaged_53_0=null;
        Token otherlv_54=null;
        Token otherlv_55=null;
        Token otherlv_56=null;
        Token lv_damaged_57_0=null;
        Token otherlv_58=null;
        Token otherlv_59=null;
        Token lv_lefthandedDefined_60_0=null;
        Token otherlv_61=null;
        Token lv_lefthandedDefined_62_0=null;
        Token otherlv_63=null;
        Token lv_lefthanded_64_0=null;
        Token otherlv_65=null;
        Token otherlv_66=null;
        Token otherlv_67=null;
        Token lv_lefthanded_68_0=null;
        Token otherlv_69=null;
        Token otherlv_70=null;
        Token lv_pullDefined_71_0=null;
        Token otherlv_72=null;
        Token otherlv_73=null;
        Token lv_pull_74_0=null;
        Token otherlv_75=null;
        Token lv_pullingDefined_76_0=null;
        Token otherlv_77=null;
        Token lv_pullingDefined_78_0=null;
        Token otherlv_79=null;
        Token lv_pulling_80_0=null;
        Token otherlv_81=null;
        Token otherlv_82=null;
        Token otherlv_83=null;
        Token lv_pulling_84_0=null;
        Token otherlv_85=null;
        Token otherlv_86=null;
        Token lv_throwingDefined_87_0=null;
        Token otherlv_88=null;
        Token lv_throwingDefined_89_0=null;
        Token otherlv_90=null;
        Token lv_throwing_91_0=null;
        Token otherlv_92=null;
        Token otherlv_93=null;
        Token otherlv_94=null;
        Token lv_throwing_95_0=null;
        Token otherlv_96=null;
        Token otherlv_97=null;
        Token lv_timeDefined_98_0=null;
        Token otherlv_99=null;
        Token otherlv_100=null;
        Token lv_time_101_0=null;
        Token otherlv_102=null;
        Token lv_customModelDataDefined_103_0=null;
        Token otherlv_104=null;
        Token otherlv_105=null;
        AntlrDatatypeRuleToken lv_customModelData_106_0 = null;



        	enterRule();

        try {
            // InternalMcmodel.g:2090:2: ( ( ( (lv_angleDefined_0_0= 'angle' ) ) (otherlv_1= '=' | otherlv_2= '==' ) ( (lv_angle_3_0= RULE_PERCENTAGE ) ) ( ( ( ( ({...}? => ( ({...}? => (otherlv_5= '&' ( ( ( (lv_blockingDefined_6_0= '!' ) ) otherlv_7= 'blocking' ) | ( ( (lv_blockingDefined_8_0= 'blocking' ) ) ( (otherlv_9= '!=' ( ( (lv_blocking_10_0= 'false' ) ) | otherlv_11= 'true' ) ) | ( (otherlv_12= '=' | otherlv_13= '==' ) ( ( (lv_blocking_14_0= 'true' ) ) | otherlv_15= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= '&' ( ( ( (lv_brokenDefined_17_0= '!' ) ) otherlv_18= 'broken' ) | ( ( (lv_brokenDefined_19_0= 'broken' ) ) ( (otherlv_20= '!=' ( ( (lv_broken_21_0= 'false' ) ) | otherlv_22= 'true' ) ) | ( (otherlv_23= '=' | otherlv_24= '==' ) ( ( (lv_broken_25_0= 'true' ) ) | otherlv_26= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= '&' ( ( ( (lv_castDefined_28_0= '!' ) ) otherlv_29= 'cast' ) | ( ( (lv_castDefined_30_0= 'cast' ) ) ( (otherlv_31= '!=' ( ( (lv_cast_32_0= 'false' ) ) | otherlv_33= 'true' ) ) | ( (otherlv_34= '=' | otherlv_35= '==' ) ( ( (lv_cast_36_0= 'true' ) ) | otherlv_37= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_38= '&' ( (lv_cooldownDefined_39_0= 'cooldown' ) ) (otherlv_40= '=' | otherlv_41= '==' ) ( (lv_cooldown_42_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= '&' ( (lv_damageDefined_44_0= 'damage' ) ) (otherlv_45= '=' | otherlv_46= '==' ) ( (lv_damage_47_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_48= '&' ( ( ( (lv_damagedDefined_49_0= '!' ) ) otherlv_50= 'damaged' ) | ( ( (lv_damagedDefined_51_0= 'damaged' ) ) ( (otherlv_52= '!=' ( ( (lv_damaged_53_0= 'false' ) ) | otherlv_54= 'true' ) ) | ( (otherlv_55= '=' | otherlv_56= '==' ) ( ( (lv_damaged_57_0= 'true' ) ) | otherlv_58= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_59= '&' ( ( ( (lv_lefthandedDefined_60_0= '!' ) ) otherlv_61= 'lefthanded' ) | ( ( (lv_lefthandedDefined_62_0= 'lefthanded' ) ) ( (otherlv_63= '!=' ( ( (lv_lefthanded_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_lefthanded_68_0= 'true' ) ) | otherlv_69= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_70= '&' ( (lv_pullDefined_71_0= 'pull' ) ) (otherlv_72= '=' | otherlv_73= '==' ) ( (lv_pull_74_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_75= '&' ( ( ( (lv_pullingDefined_76_0= '!' ) ) otherlv_77= 'pulling' ) | ( ( (lv_pullingDefined_78_0= 'pulling' ) ) ( (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) ) | ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_86= '&' ( ( ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing' ) | ( ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_97= '&' ( (lv_timeDefined_98_0= 'time' ) ) (otherlv_99= '=' | otherlv_100= '==' ) ( (lv_time_101_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) ) ) ) ) ) )* ) ) ) ) )
            // InternalMcmodel.g:2091:2: ( ( (lv_angleDefined_0_0= 'angle' ) ) (otherlv_1= '=' | otherlv_2= '==' ) ( (lv_angle_3_0= RULE_PERCENTAGE ) ) ( ( ( ( ({...}? => ( ({...}? => (otherlv_5= '&' ( ( ( (lv_blockingDefined_6_0= '!' ) ) otherlv_7= 'blocking' ) | ( ( (lv_blockingDefined_8_0= 'blocking' ) ) ( (otherlv_9= '!=' ( ( (lv_blocking_10_0= 'false' ) ) | otherlv_11= 'true' ) ) | ( (otherlv_12= '=' | otherlv_13= '==' ) ( ( (lv_blocking_14_0= 'true' ) ) | otherlv_15= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= '&' ( ( ( (lv_brokenDefined_17_0= '!' ) ) otherlv_18= 'broken' ) | ( ( (lv_brokenDefined_19_0= 'broken' ) ) ( (otherlv_20= '!=' ( ( (lv_broken_21_0= 'false' ) ) | otherlv_22= 'true' ) ) | ( (otherlv_23= '=' | otherlv_24= '==' ) ( ( (lv_broken_25_0= 'true' ) ) | otherlv_26= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= '&' ( ( ( (lv_castDefined_28_0= '!' ) ) otherlv_29= 'cast' ) | ( ( (lv_castDefined_30_0= 'cast' ) ) ( (otherlv_31= '!=' ( ( (lv_cast_32_0= 'false' ) ) | otherlv_33= 'true' ) ) | ( (otherlv_34= '=' | otherlv_35= '==' ) ( ( (lv_cast_36_0= 'true' ) ) | otherlv_37= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_38= '&' ( (lv_cooldownDefined_39_0= 'cooldown' ) ) (otherlv_40= '=' | otherlv_41= '==' ) ( (lv_cooldown_42_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= '&' ( (lv_damageDefined_44_0= 'damage' ) ) (otherlv_45= '=' | otherlv_46= '==' ) ( (lv_damage_47_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_48= '&' ( ( ( (lv_damagedDefined_49_0= '!' ) ) otherlv_50= 'damaged' ) | ( ( (lv_damagedDefined_51_0= 'damaged' ) ) ( (otherlv_52= '!=' ( ( (lv_damaged_53_0= 'false' ) ) | otherlv_54= 'true' ) ) | ( (otherlv_55= '=' | otherlv_56= '==' ) ( ( (lv_damaged_57_0= 'true' ) ) | otherlv_58= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_59= '&' ( ( ( (lv_lefthandedDefined_60_0= '!' ) ) otherlv_61= 'lefthanded' ) | ( ( (lv_lefthandedDefined_62_0= 'lefthanded' ) ) ( (otherlv_63= '!=' ( ( (lv_lefthanded_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_lefthanded_68_0= 'true' ) ) | otherlv_69= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_70= '&' ( (lv_pullDefined_71_0= 'pull' ) ) (otherlv_72= '=' | otherlv_73= '==' ) ( (lv_pull_74_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_75= '&' ( ( ( (lv_pullingDefined_76_0= '!' ) ) otherlv_77= 'pulling' ) | ( ( (lv_pullingDefined_78_0= 'pulling' ) ) ( (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) ) | ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_86= '&' ( ( ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing' ) | ( ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_97= '&' ( (lv_timeDefined_98_0= 'time' ) ) (otherlv_99= '=' | otherlv_100= '==' ) ( (lv_time_101_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) ) ) ) ) ) )* ) ) ) )
            {
            // InternalMcmodel.g:2091:2: ( ( (lv_angleDefined_0_0= 'angle' ) ) (otherlv_1= '=' | otherlv_2= '==' ) ( (lv_angle_3_0= RULE_PERCENTAGE ) ) ( ( ( ( ({...}? => ( ({...}? => (otherlv_5= '&' ( ( ( (lv_blockingDefined_6_0= '!' ) ) otherlv_7= 'blocking' ) | ( ( (lv_blockingDefined_8_0= 'blocking' ) ) ( (otherlv_9= '!=' ( ( (lv_blocking_10_0= 'false' ) ) | otherlv_11= 'true' ) ) | ( (otherlv_12= '=' | otherlv_13= '==' ) ( ( (lv_blocking_14_0= 'true' ) ) | otherlv_15= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= '&' ( ( ( (lv_brokenDefined_17_0= '!' ) ) otherlv_18= 'broken' ) | ( ( (lv_brokenDefined_19_0= 'broken' ) ) ( (otherlv_20= '!=' ( ( (lv_broken_21_0= 'false' ) ) | otherlv_22= 'true' ) ) | ( (otherlv_23= '=' | otherlv_24= '==' ) ( ( (lv_broken_25_0= 'true' ) ) | otherlv_26= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= '&' ( ( ( (lv_castDefined_28_0= '!' ) ) otherlv_29= 'cast' ) | ( ( (lv_castDefined_30_0= 'cast' ) ) ( (otherlv_31= '!=' ( ( (lv_cast_32_0= 'false' ) ) | otherlv_33= 'true' ) ) | ( (otherlv_34= '=' | otherlv_35= '==' ) ( ( (lv_cast_36_0= 'true' ) ) | otherlv_37= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_38= '&' ( (lv_cooldownDefined_39_0= 'cooldown' ) ) (otherlv_40= '=' | otherlv_41= '==' ) ( (lv_cooldown_42_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= '&' ( (lv_damageDefined_44_0= 'damage' ) ) (otherlv_45= '=' | otherlv_46= '==' ) ( (lv_damage_47_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_48= '&' ( ( ( (lv_damagedDefined_49_0= '!' ) ) otherlv_50= 'damaged' ) | ( ( (lv_damagedDefined_51_0= 'damaged' ) ) ( (otherlv_52= '!=' ( ( (lv_damaged_53_0= 'false' ) ) | otherlv_54= 'true' ) ) | ( (otherlv_55= '=' | otherlv_56= '==' ) ( ( (lv_damaged_57_0= 'true' ) ) | otherlv_58= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_59= '&' ( ( ( (lv_lefthandedDefined_60_0= '!' ) ) otherlv_61= 'lefthanded' ) | ( ( (lv_lefthandedDefined_62_0= 'lefthanded' ) ) ( (otherlv_63= '!=' ( ( (lv_lefthanded_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_lefthanded_68_0= 'true' ) ) | otherlv_69= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_70= '&' ( (lv_pullDefined_71_0= 'pull' ) ) (otherlv_72= '=' | otherlv_73= '==' ) ( (lv_pull_74_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_75= '&' ( ( ( (lv_pullingDefined_76_0= '!' ) ) otherlv_77= 'pulling' ) | ( ( (lv_pullingDefined_78_0= 'pulling' ) ) ( (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) ) | ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_86= '&' ( ( ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing' ) | ( ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_97= '&' ( (lv_timeDefined_98_0= 'time' ) ) (otherlv_99= '=' | otherlv_100= '==' ) ( (lv_time_101_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) ) ) ) ) ) )* ) ) ) )
            // InternalMcmodel.g:2092:3: ( (lv_angleDefined_0_0= 'angle' ) ) (otherlv_1= '=' | otherlv_2= '==' ) ( (lv_angle_3_0= RULE_PERCENTAGE ) ) ( ( ( ( ({...}? => ( ({...}? => (otherlv_5= '&' ( ( ( (lv_blockingDefined_6_0= '!' ) ) otherlv_7= 'blocking' ) | ( ( (lv_blockingDefined_8_0= 'blocking' ) ) ( (otherlv_9= '!=' ( ( (lv_blocking_10_0= 'false' ) ) | otherlv_11= 'true' ) ) | ( (otherlv_12= '=' | otherlv_13= '==' ) ( ( (lv_blocking_14_0= 'true' ) ) | otherlv_15= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= '&' ( ( ( (lv_brokenDefined_17_0= '!' ) ) otherlv_18= 'broken' ) | ( ( (lv_brokenDefined_19_0= 'broken' ) ) ( (otherlv_20= '!=' ( ( (lv_broken_21_0= 'false' ) ) | otherlv_22= 'true' ) ) | ( (otherlv_23= '=' | otherlv_24= '==' ) ( ( (lv_broken_25_0= 'true' ) ) | otherlv_26= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= '&' ( ( ( (lv_castDefined_28_0= '!' ) ) otherlv_29= 'cast' ) | ( ( (lv_castDefined_30_0= 'cast' ) ) ( (otherlv_31= '!=' ( ( (lv_cast_32_0= 'false' ) ) | otherlv_33= 'true' ) ) | ( (otherlv_34= '=' | otherlv_35= '==' ) ( ( (lv_cast_36_0= 'true' ) ) | otherlv_37= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_38= '&' ( (lv_cooldownDefined_39_0= 'cooldown' ) ) (otherlv_40= '=' | otherlv_41= '==' ) ( (lv_cooldown_42_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= '&' ( (lv_damageDefined_44_0= 'damage' ) ) (otherlv_45= '=' | otherlv_46= '==' ) ( (lv_damage_47_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_48= '&' ( ( ( (lv_damagedDefined_49_0= '!' ) ) otherlv_50= 'damaged' ) | ( ( (lv_damagedDefined_51_0= 'damaged' ) ) ( (otherlv_52= '!=' ( ( (lv_damaged_53_0= 'false' ) ) | otherlv_54= 'true' ) ) | ( (otherlv_55= '=' | otherlv_56= '==' ) ( ( (lv_damaged_57_0= 'true' ) ) | otherlv_58= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_59= '&' ( ( ( (lv_lefthandedDefined_60_0= '!' ) ) otherlv_61= 'lefthanded' ) | ( ( (lv_lefthandedDefined_62_0= 'lefthanded' ) ) ( (otherlv_63= '!=' ( ( (lv_lefthanded_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_lefthanded_68_0= 'true' ) ) | otherlv_69= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_70= '&' ( (lv_pullDefined_71_0= 'pull' ) ) (otherlv_72= '=' | otherlv_73= '==' ) ( (lv_pull_74_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_75= '&' ( ( ( (lv_pullingDefined_76_0= '!' ) ) otherlv_77= 'pulling' ) | ( ( (lv_pullingDefined_78_0= 'pulling' ) ) ( (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) ) | ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_86= '&' ( ( ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing' ) | ( ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_97= '&' ( (lv_timeDefined_98_0= 'time' ) ) (otherlv_99= '=' | otherlv_100= '==' ) ( (lv_time_101_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) ) ) ) ) ) )* ) ) )
            {
            // InternalMcmodel.g:2092:3: ( (lv_angleDefined_0_0= 'angle' ) )
            // InternalMcmodel.g:2093:4: (lv_angleDefined_0_0= 'angle' )
            {
            // InternalMcmodel.g:2093:4: (lv_angleDefined_0_0= 'angle' )
            // InternalMcmodel.g:2094:5: lv_angleDefined_0_0= 'angle'
            {
            lv_angleDefined_0_0=(Token)match(input,38,FOLLOW_35); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_angleDefined_0_0, grammarAccess.getOverridePredicate_1Access().getAngleDefinedAngleKeyword_0_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getOverridePredicate_1Rule());
              					}
              					setWithLastConsumed(current, "angleDefined", true, "angle");
              				
            }

            }


            }

            // InternalMcmodel.g:2106:3: (otherlv_1= '=' | otherlv_2= '==' )
            int alt22=2;
            int LA22_0 = input.LA(1);

            if ( (LA22_0==18) ) {
                alt22=1;
            }
            else if ( (LA22_0==58) ) {
                alt22=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 22, 0, input);

                throw nvae;
            }
            switch (alt22) {
                case 1 :
                    // InternalMcmodel.g:2107:4: otherlv_1= '='
                    {
                    otherlv_1=(Token)match(input,18,FOLLOW_36); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getOverridePredicate_1Access().getEqualsSignKeyword_1_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalMcmodel.g:2112:4: otherlv_2= '=='
                    {
                    otherlv_2=(Token)match(input,58,FOLLOW_36); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getOverridePredicate_1Access().getEqualsSignEqualsSignKeyword_1_1());
                      			
                    }

                    }
                    break;

            }

            // InternalMcmodel.g:2117:3: ( (lv_angle_3_0= RULE_PERCENTAGE ) )
            // InternalMcmodel.g:2118:4: (lv_angle_3_0= RULE_PERCENTAGE )
            {
            // InternalMcmodel.g:2118:4: (lv_angle_3_0= RULE_PERCENTAGE )
            // InternalMcmodel.g:2119:5: lv_angle_3_0= RULE_PERCENTAGE
            {
            lv_angle_3_0=(Token)match(input,RULE_PERCENTAGE,FOLLOW_37); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_angle_3_0, grammarAccess.getOverridePredicate_1Access().getAnglePERCENTAGETerminalRuleCall_2_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getOverridePredicate_1Rule());
              					}
              					setWithLastConsumed(
              						current,
              						"angle",
              						lv_angle_3_0,
              						"com.raptor.mcmodel.Mcmodel.PERCENTAGE");
              				
            }

            }


            }

            // InternalMcmodel.g:2135:3: ( ( ( ( ({...}? => ( ({...}? => (otherlv_5= '&' ( ( ( (lv_blockingDefined_6_0= '!' ) ) otherlv_7= 'blocking' ) | ( ( (lv_blockingDefined_8_0= 'blocking' ) ) ( (otherlv_9= '!=' ( ( (lv_blocking_10_0= 'false' ) ) | otherlv_11= 'true' ) ) | ( (otherlv_12= '=' | otherlv_13= '==' ) ( ( (lv_blocking_14_0= 'true' ) ) | otherlv_15= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= '&' ( ( ( (lv_brokenDefined_17_0= '!' ) ) otherlv_18= 'broken' ) | ( ( (lv_brokenDefined_19_0= 'broken' ) ) ( (otherlv_20= '!=' ( ( (lv_broken_21_0= 'false' ) ) | otherlv_22= 'true' ) ) | ( (otherlv_23= '=' | otherlv_24= '==' ) ( ( (lv_broken_25_0= 'true' ) ) | otherlv_26= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= '&' ( ( ( (lv_castDefined_28_0= '!' ) ) otherlv_29= 'cast' ) | ( ( (lv_castDefined_30_0= 'cast' ) ) ( (otherlv_31= '!=' ( ( (lv_cast_32_0= 'false' ) ) | otherlv_33= 'true' ) ) | ( (otherlv_34= '=' | otherlv_35= '==' ) ( ( (lv_cast_36_0= 'true' ) ) | otherlv_37= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_38= '&' ( (lv_cooldownDefined_39_0= 'cooldown' ) ) (otherlv_40= '=' | otherlv_41= '==' ) ( (lv_cooldown_42_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= '&' ( (lv_damageDefined_44_0= 'damage' ) ) (otherlv_45= '=' | otherlv_46= '==' ) ( (lv_damage_47_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_48= '&' ( ( ( (lv_damagedDefined_49_0= '!' ) ) otherlv_50= 'damaged' ) | ( ( (lv_damagedDefined_51_0= 'damaged' ) ) ( (otherlv_52= '!=' ( ( (lv_damaged_53_0= 'false' ) ) | otherlv_54= 'true' ) ) | ( (otherlv_55= '=' | otherlv_56= '==' ) ( ( (lv_damaged_57_0= 'true' ) ) | otherlv_58= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_59= '&' ( ( ( (lv_lefthandedDefined_60_0= '!' ) ) otherlv_61= 'lefthanded' ) | ( ( (lv_lefthandedDefined_62_0= 'lefthanded' ) ) ( (otherlv_63= '!=' ( ( (lv_lefthanded_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_lefthanded_68_0= 'true' ) ) | otherlv_69= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_70= '&' ( (lv_pullDefined_71_0= 'pull' ) ) (otherlv_72= '=' | otherlv_73= '==' ) ( (lv_pull_74_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_75= '&' ( ( ( (lv_pullingDefined_76_0= '!' ) ) otherlv_77= 'pulling' ) | ( ( (lv_pullingDefined_78_0= 'pulling' ) ) ( (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) ) | ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_86= '&' ( ( ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing' ) | ( ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_97= '&' ( (lv_timeDefined_98_0= 'time' ) ) (otherlv_99= '=' | otherlv_100= '==' ) ( (lv_time_101_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) ) ) ) ) ) )* ) ) )
            // InternalMcmodel.g:2136:4: ( ( ( ({...}? => ( ({...}? => (otherlv_5= '&' ( ( ( (lv_blockingDefined_6_0= '!' ) ) otherlv_7= 'blocking' ) | ( ( (lv_blockingDefined_8_0= 'blocking' ) ) ( (otherlv_9= '!=' ( ( (lv_blocking_10_0= 'false' ) ) | otherlv_11= 'true' ) ) | ( (otherlv_12= '=' | otherlv_13= '==' ) ( ( (lv_blocking_14_0= 'true' ) ) | otherlv_15= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= '&' ( ( ( (lv_brokenDefined_17_0= '!' ) ) otherlv_18= 'broken' ) | ( ( (lv_brokenDefined_19_0= 'broken' ) ) ( (otherlv_20= '!=' ( ( (lv_broken_21_0= 'false' ) ) | otherlv_22= 'true' ) ) | ( (otherlv_23= '=' | otherlv_24= '==' ) ( ( (lv_broken_25_0= 'true' ) ) | otherlv_26= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= '&' ( ( ( (lv_castDefined_28_0= '!' ) ) otherlv_29= 'cast' ) | ( ( (lv_castDefined_30_0= 'cast' ) ) ( (otherlv_31= '!=' ( ( (lv_cast_32_0= 'false' ) ) | otherlv_33= 'true' ) ) | ( (otherlv_34= '=' | otherlv_35= '==' ) ( ( (lv_cast_36_0= 'true' ) ) | otherlv_37= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_38= '&' ( (lv_cooldownDefined_39_0= 'cooldown' ) ) (otherlv_40= '=' | otherlv_41= '==' ) ( (lv_cooldown_42_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= '&' ( (lv_damageDefined_44_0= 'damage' ) ) (otherlv_45= '=' | otherlv_46= '==' ) ( (lv_damage_47_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_48= '&' ( ( ( (lv_damagedDefined_49_0= '!' ) ) otherlv_50= 'damaged' ) | ( ( (lv_damagedDefined_51_0= 'damaged' ) ) ( (otherlv_52= '!=' ( ( (lv_damaged_53_0= 'false' ) ) | otherlv_54= 'true' ) ) | ( (otherlv_55= '=' | otherlv_56= '==' ) ( ( (lv_damaged_57_0= 'true' ) ) | otherlv_58= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_59= '&' ( ( ( (lv_lefthandedDefined_60_0= '!' ) ) otherlv_61= 'lefthanded' ) | ( ( (lv_lefthandedDefined_62_0= 'lefthanded' ) ) ( (otherlv_63= '!=' ( ( (lv_lefthanded_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_lefthanded_68_0= 'true' ) ) | otherlv_69= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_70= '&' ( (lv_pullDefined_71_0= 'pull' ) ) (otherlv_72= '=' | otherlv_73= '==' ) ( (lv_pull_74_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_75= '&' ( ( ( (lv_pullingDefined_76_0= '!' ) ) otherlv_77= 'pulling' ) | ( ( (lv_pullingDefined_78_0= 'pulling' ) ) ( (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) ) | ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_86= '&' ( ( ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing' ) | ( ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_97= '&' ( (lv_timeDefined_98_0= 'time' ) ) (otherlv_99= '=' | otherlv_100= '==' ) ( (lv_time_101_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) ) ) ) ) ) )* ) )
            {
            // InternalMcmodel.g:2136:4: ( ( ( ({...}? => ( ({...}? => (otherlv_5= '&' ( ( ( (lv_blockingDefined_6_0= '!' ) ) otherlv_7= 'blocking' ) | ( ( (lv_blockingDefined_8_0= 'blocking' ) ) ( (otherlv_9= '!=' ( ( (lv_blocking_10_0= 'false' ) ) | otherlv_11= 'true' ) ) | ( (otherlv_12= '=' | otherlv_13= '==' ) ( ( (lv_blocking_14_0= 'true' ) ) | otherlv_15= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= '&' ( ( ( (lv_brokenDefined_17_0= '!' ) ) otherlv_18= 'broken' ) | ( ( (lv_brokenDefined_19_0= 'broken' ) ) ( (otherlv_20= '!=' ( ( (lv_broken_21_0= 'false' ) ) | otherlv_22= 'true' ) ) | ( (otherlv_23= '=' | otherlv_24= '==' ) ( ( (lv_broken_25_0= 'true' ) ) | otherlv_26= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= '&' ( ( ( (lv_castDefined_28_0= '!' ) ) otherlv_29= 'cast' ) | ( ( (lv_castDefined_30_0= 'cast' ) ) ( (otherlv_31= '!=' ( ( (lv_cast_32_0= 'false' ) ) | otherlv_33= 'true' ) ) | ( (otherlv_34= '=' | otherlv_35= '==' ) ( ( (lv_cast_36_0= 'true' ) ) | otherlv_37= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_38= '&' ( (lv_cooldownDefined_39_0= 'cooldown' ) ) (otherlv_40= '=' | otherlv_41= '==' ) ( (lv_cooldown_42_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= '&' ( (lv_damageDefined_44_0= 'damage' ) ) (otherlv_45= '=' | otherlv_46= '==' ) ( (lv_damage_47_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_48= '&' ( ( ( (lv_damagedDefined_49_0= '!' ) ) otherlv_50= 'damaged' ) | ( ( (lv_damagedDefined_51_0= 'damaged' ) ) ( (otherlv_52= '!=' ( ( (lv_damaged_53_0= 'false' ) ) | otherlv_54= 'true' ) ) | ( (otherlv_55= '=' | otherlv_56= '==' ) ( ( (lv_damaged_57_0= 'true' ) ) | otherlv_58= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_59= '&' ( ( ( (lv_lefthandedDefined_60_0= '!' ) ) otherlv_61= 'lefthanded' ) | ( ( (lv_lefthandedDefined_62_0= 'lefthanded' ) ) ( (otherlv_63= '!=' ( ( (lv_lefthanded_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_lefthanded_68_0= 'true' ) ) | otherlv_69= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_70= '&' ( (lv_pullDefined_71_0= 'pull' ) ) (otherlv_72= '=' | otherlv_73= '==' ) ( (lv_pull_74_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_75= '&' ( ( ( (lv_pullingDefined_76_0= '!' ) ) otherlv_77= 'pulling' ) | ( ( (lv_pullingDefined_78_0= 'pulling' ) ) ( (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) ) | ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_86= '&' ( ( ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing' ) | ( ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_97= '&' ( (lv_timeDefined_98_0= 'time' ) ) (otherlv_99= '=' | otherlv_100= '==' ) ( (lv_time_101_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) ) ) ) ) ) )* ) )
            // InternalMcmodel.g:2137:5: ( ( ({...}? => ( ({...}? => (otherlv_5= '&' ( ( ( (lv_blockingDefined_6_0= '!' ) ) otherlv_7= 'blocking' ) | ( ( (lv_blockingDefined_8_0= 'blocking' ) ) ( (otherlv_9= '!=' ( ( (lv_blocking_10_0= 'false' ) ) | otherlv_11= 'true' ) ) | ( (otherlv_12= '=' | otherlv_13= '==' ) ( ( (lv_blocking_14_0= 'true' ) ) | otherlv_15= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= '&' ( ( ( (lv_brokenDefined_17_0= '!' ) ) otherlv_18= 'broken' ) | ( ( (lv_brokenDefined_19_0= 'broken' ) ) ( (otherlv_20= '!=' ( ( (lv_broken_21_0= 'false' ) ) | otherlv_22= 'true' ) ) | ( (otherlv_23= '=' | otherlv_24= '==' ) ( ( (lv_broken_25_0= 'true' ) ) | otherlv_26= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= '&' ( ( ( (lv_castDefined_28_0= '!' ) ) otherlv_29= 'cast' ) | ( ( (lv_castDefined_30_0= 'cast' ) ) ( (otherlv_31= '!=' ( ( (lv_cast_32_0= 'false' ) ) | otherlv_33= 'true' ) ) | ( (otherlv_34= '=' | otherlv_35= '==' ) ( ( (lv_cast_36_0= 'true' ) ) | otherlv_37= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_38= '&' ( (lv_cooldownDefined_39_0= 'cooldown' ) ) (otherlv_40= '=' | otherlv_41= '==' ) ( (lv_cooldown_42_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= '&' ( (lv_damageDefined_44_0= 'damage' ) ) (otherlv_45= '=' | otherlv_46= '==' ) ( (lv_damage_47_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_48= '&' ( ( ( (lv_damagedDefined_49_0= '!' ) ) otherlv_50= 'damaged' ) | ( ( (lv_damagedDefined_51_0= 'damaged' ) ) ( (otherlv_52= '!=' ( ( (lv_damaged_53_0= 'false' ) ) | otherlv_54= 'true' ) ) | ( (otherlv_55= '=' | otherlv_56= '==' ) ( ( (lv_damaged_57_0= 'true' ) ) | otherlv_58= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_59= '&' ( ( ( (lv_lefthandedDefined_60_0= '!' ) ) otherlv_61= 'lefthanded' ) | ( ( (lv_lefthandedDefined_62_0= 'lefthanded' ) ) ( (otherlv_63= '!=' ( ( (lv_lefthanded_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_lefthanded_68_0= 'true' ) ) | otherlv_69= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_70= '&' ( (lv_pullDefined_71_0= 'pull' ) ) (otherlv_72= '=' | otherlv_73= '==' ) ( (lv_pull_74_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_75= '&' ( ( ( (lv_pullingDefined_76_0= '!' ) ) otherlv_77= 'pulling' ) | ( ( (lv_pullingDefined_78_0= 'pulling' ) ) ( (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) ) | ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_86= '&' ( ( ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing' ) | ( ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_97= '&' ( (lv_timeDefined_98_0= 'time' ) ) (otherlv_99= '=' | otherlv_100= '==' ) ( (lv_time_101_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) ) ) ) ) ) )* )
            {
            getUnorderedGroupHelper().enter(grammarAccess.getOverridePredicate_1Access().getUnorderedGroup_3());
            // InternalMcmodel.g:2140:5: ( ( ({...}? => ( ({...}? => (otherlv_5= '&' ( ( ( (lv_blockingDefined_6_0= '!' ) ) otherlv_7= 'blocking' ) | ( ( (lv_blockingDefined_8_0= 'blocking' ) ) ( (otherlv_9= '!=' ( ( (lv_blocking_10_0= 'false' ) ) | otherlv_11= 'true' ) ) | ( (otherlv_12= '=' | otherlv_13= '==' ) ( ( (lv_blocking_14_0= 'true' ) ) | otherlv_15= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= '&' ( ( ( (lv_brokenDefined_17_0= '!' ) ) otherlv_18= 'broken' ) | ( ( (lv_brokenDefined_19_0= 'broken' ) ) ( (otherlv_20= '!=' ( ( (lv_broken_21_0= 'false' ) ) | otherlv_22= 'true' ) ) | ( (otherlv_23= '=' | otherlv_24= '==' ) ( ( (lv_broken_25_0= 'true' ) ) | otherlv_26= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= '&' ( ( ( (lv_castDefined_28_0= '!' ) ) otherlv_29= 'cast' ) | ( ( (lv_castDefined_30_0= 'cast' ) ) ( (otherlv_31= '!=' ( ( (lv_cast_32_0= 'false' ) ) | otherlv_33= 'true' ) ) | ( (otherlv_34= '=' | otherlv_35= '==' ) ( ( (lv_cast_36_0= 'true' ) ) | otherlv_37= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_38= '&' ( (lv_cooldownDefined_39_0= 'cooldown' ) ) (otherlv_40= '=' | otherlv_41= '==' ) ( (lv_cooldown_42_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= '&' ( (lv_damageDefined_44_0= 'damage' ) ) (otherlv_45= '=' | otherlv_46= '==' ) ( (lv_damage_47_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_48= '&' ( ( ( (lv_damagedDefined_49_0= '!' ) ) otherlv_50= 'damaged' ) | ( ( (lv_damagedDefined_51_0= 'damaged' ) ) ( (otherlv_52= '!=' ( ( (lv_damaged_53_0= 'false' ) ) | otherlv_54= 'true' ) ) | ( (otherlv_55= '=' | otherlv_56= '==' ) ( ( (lv_damaged_57_0= 'true' ) ) | otherlv_58= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_59= '&' ( ( ( (lv_lefthandedDefined_60_0= '!' ) ) otherlv_61= 'lefthanded' ) | ( ( (lv_lefthandedDefined_62_0= 'lefthanded' ) ) ( (otherlv_63= '!=' ( ( (lv_lefthanded_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_lefthanded_68_0= 'true' ) ) | otherlv_69= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_70= '&' ( (lv_pullDefined_71_0= 'pull' ) ) (otherlv_72= '=' | otherlv_73= '==' ) ( (lv_pull_74_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_75= '&' ( ( ( (lv_pullingDefined_76_0= '!' ) ) otherlv_77= 'pulling' ) | ( ( (lv_pullingDefined_78_0= 'pulling' ) ) ( (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) ) | ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_86= '&' ( ( ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing' ) | ( ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_97= '&' ( (lv_timeDefined_98_0= 'time' ) ) (otherlv_99= '=' | otherlv_100= '==' ) ( (lv_time_101_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) ) ) ) ) ) )* )
            // InternalMcmodel.g:2141:6: ( ({...}? => ( ({...}? => (otherlv_5= '&' ( ( ( (lv_blockingDefined_6_0= '!' ) ) otherlv_7= 'blocking' ) | ( ( (lv_blockingDefined_8_0= 'blocking' ) ) ( (otherlv_9= '!=' ( ( (lv_blocking_10_0= 'false' ) ) | otherlv_11= 'true' ) ) | ( (otherlv_12= '=' | otherlv_13= '==' ) ( ( (lv_blocking_14_0= 'true' ) ) | otherlv_15= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= '&' ( ( ( (lv_brokenDefined_17_0= '!' ) ) otherlv_18= 'broken' ) | ( ( (lv_brokenDefined_19_0= 'broken' ) ) ( (otherlv_20= '!=' ( ( (lv_broken_21_0= 'false' ) ) | otherlv_22= 'true' ) ) | ( (otherlv_23= '=' | otherlv_24= '==' ) ( ( (lv_broken_25_0= 'true' ) ) | otherlv_26= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= '&' ( ( ( (lv_castDefined_28_0= '!' ) ) otherlv_29= 'cast' ) | ( ( (lv_castDefined_30_0= 'cast' ) ) ( (otherlv_31= '!=' ( ( (lv_cast_32_0= 'false' ) ) | otherlv_33= 'true' ) ) | ( (otherlv_34= '=' | otherlv_35= '==' ) ( ( (lv_cast_36_0= 'true' ) ) | otherlv_37= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_38= '&' ( (lv_cooldownDefined_39_0= 'cooldown' ) ) (otherlv_40= '=' | otherlv_41= '==' ) ( (lv_cooldown_42_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= '&' ( (lv_damageDefined_44_0= 'damage' ) ) (otherlv_45= '=' | otherlv_46= '==' ) ( (lv_damage_47_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_48= '&' ( ( ( (lv_damagedDefined_49_0= '!' ) ) otherlv_50= 'damaged' ) | ( ( (lv_damagedDefined_51_0= 'damaged' ) ) ( (otherlv_52= '!=' ( ( (lv_damaged_53_0= 'false' ) ) | otherlv_54= 'true' ) ) | ( (otherlv_55= '=' | otherlv_56= '==' ) ( ( (lv_damaged_57_0= 'true' ) ) | otherlv_58= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_59= '&' ( ( ( (lv_lefthandedDefined_60_0= '!' ) ) otherlv_61= 'lefthanded' ) | ( ( (lv_lefthandedDefined_62_0= 'lefthanded' ) ) ( (otherlv_63= '!=' ( ( (lv_lefthanded_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_lefthanded_68_0= 'true' ) ) | otherlv_69= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_70= '&' ( (lv_pullDefined_71_0= 'pull' ) ) (otherlv_72= '=' | otherlv_73= '==' ) ( (lv_pull_74_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_75= '&' ( ( ( (lv_pullingDefined_76_0= '!' ) ) otherlv_77= 'pulling' ) | ( ( (lv_pullingDefined_78_0= 'pulling' ) ) ( (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) ) | ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_86= '&' ( ( ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing' ) | ( ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_97= '&' ( (lv_timeDefined_98_0= 'time' ) ) (otherlv_99= '=' | otherlv_100= '==' ) ( (lv_time_101_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) ) ) ) ) ) )*
            {
            // InternalMcmodel.g:2141:6: ( ({...}? => ( ({...}? => (otherlv_5= '&' ( ( ( (lv_blockingDefined_6_0= '!' ) ) otherlv_7= 'blocking' ) | ( ( (lv_blockingDefined_8_0= 'blocking' ) ) ( (otherlv_9= '!=' ( ( (lv_blocking_10_0= 'false' ) ) | otherlv_11= 'true' ) ) | ( (otherlv_12= '=' | otherlv_13= '==' ) ( ( (lv_blocking_14_0= 'true' ) ) | otherlv_15= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= '&' ( ( ( (lv_brokenDefined_17_0= '!' ) ) otherlv_18= 'broken' ) | ( ( (lv_brokenDefined_19_0= 'broken' ) ) ( (otherlv_20= '!=' ( ( (lv_broken_21_0= 'false' ) ) | otherlv_22= 'true' ) ) | ( (otherlv_23= '=' | otherlv_24= '==' ) ( ( (lv_broken_25_0= 'true' ) ) | otherlv_26= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= '&' ( ( ( (lv_castDefined_28_0= '!' ) ) otherlv_29= 'cast' ) | ( ( (lv_castDefined_30_0= 'cast' ) ) ( (otherlv_31= '!=' ( ( (lv_cast_32_0= 'false' ) ) | otherlv_33= 'true' ) ) | ( (otherlv_34= '=' | otherlv_35= '==' ) ( ( (lv_cast_36_0= 'true' ) ) | otherlv_37= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_38= '&' ( (lv_cooldownDefined_39_0= 'cooldown' ) ) (otherlv_40= '=' | otherlv_41= '==' ) ( (lv_cooldown_42_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= '&' ( (lv_damageDefined_44_0= 'damage' ) ) (otherlv_45= '=' | otherlv_46= '==' ) ( (lv_damage_47_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_48= '&' ( ( ( (lv_damagedDefined_49_0= '!' ) ) otherlv_50= 'damaged' ) | ( ( (lv_damagedDefined_51_0= 'damaged' ) ) ( (otherlv_52= '!=' ( ( (lv_damaged_53_0= 'false' ) ) | otherlv_54= 'true' ) ) | ( (otherlv_55= '=' | otherlv_56= '==' ) ( ( (lv_damaged_57_0= 'true' ) ) | otherlv_58= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_59= '&' ( ( ( (lv_lefthandedDefined_60_0= '!' ) ) otherlv_61= 'lefthanded' ) | ( ( (lv_lefthandedDefined_62_0= 'lefthanded' ) ) ( (otherlv_63= '!=' ( ( (lv_lefthanded_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_lefthanded_68_0= 'true' ) ) | otherlv_69= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_70= '&' ( (lv_pullDefined_71_0= 'pull' ) ) (otherlv_72= '=' | otherlv_73= '==' ) ( (lv_pull_74_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_75= '&' ( ( ( (lv_pullingDefined_76_0= '!' ) ) otherlv_77= 'pulling' ) | ( ( (lv_pullingDefined_78_0= 'pulling' ) ) ( (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) ) | ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_86= '&' ( ( ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing' ) | ( ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_97= '&' ( (lv_timeDefined_98_0= 'time' ) ) (otherlv_99= '=' | otherlv_100= '==' ) ( (lv_time_101_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) ) ) ) ) ) )*
            loop63:
            do {
                int alt63=13;
                alt63 = dfa63.predict(input);
                switch (alt63) {
            	case 1 :
            	    // InternalMcmodel.g:2142:4: ({...}? => ( ({...}? => (otherlv_5= '&' ( ( ( (lv_blockingDefined_6_0= '!' ) ) otherlv_7= 'blocking' ) | ( ( (lv_blockingDefined_8_0= 'blocking' ) ) ( (otherlv_9= '!=' ( ( (lv_blocking_10_0= 'false' ) ) | otherlv_11= 'true' ) ) | ( (otherlv_12= '=' | otherlv_13= '==' ) ( ( (lv_blocking_14_0= 'true' ) ) | otherlv_15= 'false' ) ) ) ) ) ) ) ) )
            	    {
            	    // InternalMcmodel.g:2142:4: ({...}? => ( ({...}? => (otherlv_5= '&' ( ( ( (lv_blockingDefined_6_0= '!' ) ) otherlv_7= 'blocking' ) | ( ( (lv_blockingDefined_8_0= 'blocking' ) ) ( (otherlv_9= '!=' ( ( (lv_blocking_10_0= 'false' ) ) | otherlv_11= 'true' ) ) | ( (otherlv_12= '=' | otherlv_13= '==' ) ( ( (lv_blocking_14_0= 'true' ) ) | otherlv_15= 'false' ) ) ) ) ) ) ) ) )
            	    // InternalMcmodel.g:2143:5: {...}? => ( ({...}? => (otherlv_5= '&' ( ( ( (lv_blockingDefined_6_0= '!' ) ) otherlv_7= 'blocking' ) | ( ( (lv_blockingDefined_8_0= 'blocking' ) ) ( (otherlv_9= '!=' ( ( (lv_blocking_10_0= 'false' ) ) | otherlv_11= 'true' ) ) | ( (otherlv_12= '=' | otherlv_13= '==' ) ( ( (lv_blocking_14_0= 'true' ) ) | otherlv_15= 'false' ) ) ) ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_1Access().getUnorderedGroup_3(), 0) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_1", "getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_1Access().getUnorderedGroup_3(), 0)");
            	    }
            	    // InternalMcmodel.g:2143:116: ( ({...}? => (otherlv_5= '&' ( ( ( (lv_blockingDefined_6_0= '!' ) ) otherlv_7= 'blocking' ) | ( ( (lv_blockingDefined_8_0= 'blocking' ) ) ( (otherlv_9= '!=' ( ( (lv_blocking_10_0= 'false' ) ) | otherlv_11= 'true' ) ) | ( (otherlv_12= '=' | otherlv_13= '==' ) ( ( (lv_blocking_14_0= 'true' ) ) | otherlv_15= 'false' ) ) ) ) ) ) ) )
            	    // InternalMcmodel.g:2144:6: ({...}? => (otherlv_5= '&' ( ( ( (lv_blockingDefined_6_0= '!' ) ) otherlv_7= 'blocking' ) | ( ( (lv_blockingDefined_8_0= 'blocking' ) ) ( (otherlv_9= '!=' ( ( (lv_blocking_10_0= 'false' ) ) | otherlv_11= 'true' ) ) | ( (otherlv_12= '=' | otherlv_13= '==' ) ( ( (lv_blocking_14_0= 'true' ) ) | otherlv_15= 'false' ) ) ) ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getOverridePredicate_1Access().getUnorderedGroup_3(), 0);
            	    // InternalMcmodel.g:2147:9: ({...}? => (otherlv_5= '&' ( ( ( (lv_blockingDefined_6_0= '!' ) ) otherlv_7= 'blocking' ) | ( ( (lv_blockingDefined_8_0= 'blocking' ) ) ( (otherlv_9= '!=' ( ( (lv_blocking_10_0= 'false' ) ) | otherlv_11= 'true' ) ) | ( (otherlv_12= '=' | otherlv_13= '==' ) ( ( (lv_blocking_14_0= 'true' ) ) | otherlv_15= 'false' ) ) ) ) ) ) )
            	    // InternalMcmodel.g:2147:10: {...}? => (otherlv_5= '&' ( ( ( (lv_blockingDefined_6_0= '!' ) ) otherlv_7= 'blocking' ) | ( ( (lv_blockingDefined_8_0= 'blocking' ) ) ( (otherlv_9= '!=' ( ( (lv_blocking_10_0= 'false' ) ) | otherlv_11= 'true' ) ) | ( (otherlv_12= '=' | otherlv_13= '==' ) ( ( (lv_blocking_14_0= 'true' ) ) | otherlv_15= 'false' ) ) ) ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_1", "true");
            	    }
            	    // InternalMcmodel.g:2147:19: (otherlv_5= '&' ( ( ( (lv_blockingDefined_6_0= '!' ) ) otherlv_7= 'blocking' ) | ( ( (lv_blockingDefined_8_0= 'blocking' ) ) ( (otherlv_9= '!=' ( ( (lv_blocking_10_0= 'false' ) ) | otherlv_11= 'true' ) ) | ( (otherlv_12= '=' | otherlv_13= '==' ) ( ( (lv_blocking_14_0= 'true' ) ) | otherlv_15= 'false' ) ) ) ) ) )
            	    // InternalMcmodel.g:2147:20: otherlv_5= '&' ( ( ( (lv_blockingDefined_6_0= '!' ) ) otherlv_7= 'blocking' ) | ( ( (lv_blockingDefined_8_0= 'blocking' ) ) ( (otherlv_9= '!=' ( ( (lv_blocking_10_0= 'false' ) ) | otherlv_11= 'true' ) ) | ( (otherlv_12= '=' | otherlv_13= '==' ) ( ( (lv_blocking_14_0= 'true' ) ) | otherlv_15= 'false' ) ) ) ) )
            	    {
            	    otherlv_5=(Token)match(input,59,FOLLOW_38); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_5, grammarAccess.getOverridePredicate_1Access().getAmpersandKeyword_3_0_0());
            	      								
            	    }
            	    // InternalMcmodel.g:2151:9: ( ( ( (lv_blockingDefined_6_0= '!' ) ) otherlv_7= 'blocking' ) | ( ( (lv_blockingDefined_8_0= 'blocking' ) ) ( (otherlv_9= '!=' ( ( (lv_blocking_10_0= 'false' ) ) | otherlv_11= 'true' ) ) | ( (otherlv_12= '=' | otherlv_13= '==' ) ( ( (lv_blocking_14_0= 'true' ) ) | otherlv_15= 'false' ) ) ) ) )
            	    int alt27=2;
            	    int LA27_0 = input.LA(1);

            	    if ( (LA27_0==60) ) {
            	        alt27=1;
            	    }
            	    else if ( (LA27_0==61) ) {
            	        alt27=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 27, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt27) {
            	        case 1 :
            	            // InternalMcmodel.g:2152:10: ( ( (lv_blockingDefined_6_0= '!' ) ) otherlv_7= 'blocking' )
            	            {
            	            // InternalMcmodel.g:2152:10: ( ( (lv_blockingDefined_6_0= '!' ) ) otherlv_7= 'blocking' )
            	            // InternalMcmodel.g:2153:11: ( (lv_blockingDefined_6_0= '!' ) ) otherlv_7= 'blocking'
            	            {
            	            // InternalMcmodel.g:2153:11: ( (lv_blockingDefined_6_0= '!' ) )
            	            // InternalMcmodel.g:2154:12: (lv_blockingDefined_6_0= '!' )
            	            {
            	            // InternalMcmodel.g:2154:12: (lv_blockingDefined_6_0= '!' )
            	            // InternalMcmodel.g:2155:13: lv_blockingDefined_6_0= '!'
            	            {
            	            lv_blockingDefined_6_0=(Token)match(input,60,FOLLOW_39); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              													newLeafNode(lv_blockingDefined_6_0, grammarAccess.getOverridePredicate_1Access().getBlockingDefinedExclamationMarkKeyword_3_0_1_0_0_0());
            	              												
            	            }
            	            if ( state.backtracking==0 ) {

            	              													if (current==null) {
            	              														current = createModelElement(grammarAccess.getOverridePredicate_1Rule());
            	              													}
            	              													setWithLastConsumed(current, "blockingDefined", true, "!");
            	              												
            	            }

            	            }


            	            }

            	            otherlv_7=(Token)match(input,61,FOLLOW_37); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              											newLeafNode(otherlv_7, grammarAccess.getOverridePredicate_1Access().getBlockingKeyword_3_0_1_0_1());
            	              										
            	            }

            	            }


            	            }
            	            break;
            	        case 2 :
            	            // InternalMcmodel.g:2173:10: ( ( (lv_blockingDefined_8_0= 'blocking' ) ) ( (otherlv_9= '!=' ( ( (lv_blocking_10_0= 'false' ) ) | otherlv_11= 'true' ) ) | ( (otherlv_12= '=' | otherlv_13= '==' ) ( ( (lv_blocking_14_0= 'true' ) ) | otherlv_15= 'false' ) ) ) )
            	            {
            	            // InternalMcmodel.g:2173:10: ( ( (lv_blockingDefined_8_0= 'blocking' ) ) ( (otherlv_9= '!=' ( ( (lv_blocking_10_0= 'false' ) ) | otherlv_11= 'true' ) ) | ( (otherlv_12= '=' | otherlv_13= '==' ) ( ( (lv_blocking_14_0= 'true' ) ) | otherlv_15= 'false' ) ) ) )
            	            // InternalMcmodel.g:2174:11: ( (lv_blockingDefined_8_0= 'blocking' ) ) ( (otherlv_9= '!=' ( ( (lv_blocking_10_0= 'false' ) ) | otherlv_11= 'true' ) ) | ( (otherlv_12= '=' | otherlv_13= '==' ) ( ( (lv_blocking_14_0= 'true' ) ) | otherlv_15= 'false' ) ) )
            	            {
            	            // InternalMcmodel.g:2174:11: ( (lv_blockingDefined_8_0= 'blocking' ) )
            	            // InternalMcmodel.g:2175:12: (lv_blockingDefined_8_0= 'blocking' )
            	            {
            	            // InternalMcmodel.g:2175:12: (lv_blockingDefined_8_0= 'blocking' )
            	            // InternalMcmodel.g:2176:13: lv_blockingDefined_8_0= 'blocking'
            	            {
            	            lv_blockingDefined_8_0=(Token)match(input,61,FOLLOW_40); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              													newLeafNode(lv_blockingDefined_8_0, grammarAccess.getOverridePredicate_1Access().getBlockingDefinedBlockingKeyword_3_0_1_1_0_0());
            	              												
            	            }
            	            if ( state.backtracking==0 ) {

            	              													if (current==null) {
            	              														current = createModelElement(grammarAccess.getOverridePredicate_1Rule());
            	              													}
            	              													setWithLastConsumed(current, "blockingDefined", true, "blocking");
            	              												
            	            }

            	            }


            	            }

            	            // InternalMcmodel.g:2188:11: ( (otherlv_9= '!=' ( ( (lv_blocking_10_0= 'false' ) ) | otherlv_11= 'true' ) ) | ( (otherlv_12= '=' | otherlv_13= '==' ) ( ( (lv_blocking_14_0= 'true' ) ) | otherlv_15= 'false' ) ) )
            	            int alt26=2;
            	            int LA26_0 = input.LA(1);

            	            if ( (LA26_0==62) ) {
            	                alt26=1;
            	            }
            	            else if ( (LA26_0==18||LA26_0==58) ) {
            	                alt26=2;
            	            }
            	            else {
            	                if (state.backtracking>0) {state.failed=true; return current;}
            	                NoViableAltException nvae =
            	                    new NoViableAltException("", 26, 0, input);

            	                throw nvae;
            	            }
            	            switch (alt26) {
            	                case 1 :
            	                    // InternalMcmodel.g:2189:12: (otherlv_9= '!=' ( ( (lv_blocking_10_0= 'false' ) ) | otherlv_11= 'true' ) )
            	                    {
            	                    // InternalMcmodel.g:2189:12: (otherlv_9= '!=' ( ( (lv_blocking_10_0= 'false' ) ) | otherlv_11= 'true' ) )
            	                    // InternalMcmodel.g:2190:13: otherlv_9= '!=' ( ( (lv_blocking_10_0= 'false' ) ) | otherlv_11= 'true' )
            	                    {
            	                    otherlv_9=(Token)match(input,62,FOLLOW_7); if (state.failed) return current;
            	                    if ( state.backtracking==0 ) {

            	                      													newLeafNode(otherlv_9, grammarAccess.getOverridePredicate_1Access().getExclamationMarkEqualsSignKeyword_3_0_1_1_1_0_0());
            	                      												
            	                    }
            	                    // InternalMcmodel.g:2194:13: ( ( (lv_blocking_10_0= 'false' ) ) | otherlv_11= 'true' )
            	                    int alt23=2;
            	                    int LA23_0 = input.LA(1);

            	                    if ( (LA23_0==21) ) {
            	                        alt23=1;
            	                    }
            	                    else if ( (LA23_0==20) ) {
            	                        alt23=2;
            	                    }
            	                    else {
            	                        if (state.backtracking>0) {state.failed=true; return current;}
            	                        NoViableAltException nvae =
            	                            new NoViableAltException("", 23, 0, input);

            	                        throw nvae;
            	                    }
            	                    switch (alt23) {
            	                        case 1 :
            	                            // InternalMcmodel.g:2195:14: ( (lv_blocking_10_0= 'false' ) )
            	                            {
            	                            // InternalMcmodel.g:2195:14: ( (lv_blocking_10_0= 'false' ) )
            	                            // InternalMcmodel.g:2196:15: (lv_blocking_10_0= 'false' )
            	                            {
            	                            // InternalMcmodel.g:2196:15: (lv_blocking_10_0= 'false' )
            	                            // InternalMcmodel.g:2197:16: lv_blocking_10_0= 'false'
            	                            {
            	                            lv_blocking_10_0=(Token)match(input,21,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              																newLeafNode(lv_blocking_10_0, grammarAccess.getOverridePredicate_1Access().getBlockingFalseKeyword_3_0_1_1_1_0_1_0_0());
            	                              															
            	                            }
            	                            if ( state.backtracking==0 ) {

            	                              																if (current==null) {
            	                              																	current = createModelElement(grammarAccess.getOverridePredicate_1Rule());
            	                              																}
            	                              																setWithLastConsumed(current, "blocking", true, "false");
            	                              															
            	                            }

            	                            }


            	                            }


            	                            }
            	                            break;
            	                        case 2 :
            	                            // InternalMcmodel.g:2210:14: otherlv_11= 'true'
            	                            {
            	                            otherlv_11=(Token)match(input,20,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_11, grammarAccess.getOverridePredicate_1Access().getTrueKeyword_3_0_1_1_1_0_1_1());
            	                              													
            	                            }

            	                            }
            	                            break;

            	                    }


            	                    }


            	                    }
            	                    break;
            	                case 2 :
            	                    // InternalMcmodel.g:2217:12: ( (otherlv_12= '=' | otherlv_13= '==' ) ( ( (lv_blocking_14_0= 'true' ) ) | otherlv_15= 'false' ) )
            	                    {
            	                    // InternalMcmodel.g:2217:12: ( (otherlv_12= '=' | otherlv_13= '==' ) ( ( (lv_blocking_14_0= 'true' ) ) | otherlv_15= 'false' ) )
            	                    // InternalMcmodel.g:2218:13: (otherlv_12= '=' | otherlv_13= '==' ) ( ( (lv_blocking_14_0= 'true' ) ) | otherlv_15= 'false' )
            	                    {
            	                    // InternalMcmodel.g:2218:13: (otherlv_12= '=' | otherlv_13= '==' )
            	                    int alt24=2;
            	                    int LA24_0 = input.LA(1);

            	                    if ( (LA24_0==18) ) {
            	                        alt24=1;
            	                    }
            	                    else if ( (LA24_0==58) ) {
            	                        alt24=2;
            	                    }
            	                    else {
            	                        if (state.backtracking>0) {state.failed=true; return current;}
            	                        NoViableAltException nvae =
            	                            new NoViableAltException("", 24, 0, input);

            	                        throw nvae;
            	                    }
            	                    switch (alt24) {
            	                        case 1 :
            	                            // InternalMcmodel.g:2219:14: otherlv_12= '='
            	                            {
            	                            otherlv_12=(Token)match(input,18,FOLLOW_7); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_12, grammarAccess.getOverridePredicate_1Access().getEqualsSignKeyword_3_0_1_1_1_1_0_0());
            	                              													
            	                            }

            	                            }
            	                            break;
            	                        case 2 :
            	                            // InternalMcmodel.g:2224:14: otherlv_13= '=='
            	                            {
            	                            otherlv_13=(Token)match(input,58,FOLLOW_7); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_13, grammarAccess.getOverridePredicate_1Access().getEqualsSignEqualsSignKeyword_3_0_1_1_1_1_0_1());
            	                              													
            	                            }

            	                            }
            	                            break;

            	                    }

            	                    // InternalMcmodel.g:2229:13: ( ( (lv_blocking_14_0= 'true' ) ) | otherlv_15= 'false' )
            	                    int alt25=2;
            	                    int LA25_0 = input.LA(1);

            	                    if ( (LA25_0==20) ) {
            	                        alt25=1;
            	                    }
            	                    else if ( (LA25_0==21) ) {
            	                        alt25=2;
            	                    }
            	                    else {
            	                        if (state.backtracking>0) {state.failed=true; return current;}
            	                        NoViableAltException nvae =
            	                            new NoViableAltException("", 25, 0, input);

            	                        throw nvae;
            	                    }
            	                    switch (alt25) {
            	                        case 1 :
            	                            // InternalMcmodel.g:2230:14: ( (lv_blocking_14_0= 'true' ) )
            	                            {
            	                            // InternalMcmodel.g:2230:14: ( (lv_blocking_14_0= 'true' ) )
            	                            // InternalMcmodel.g:2231:15: (lv_blocking_14_0= 'true' )
            	                            {
            	                            // InternalMcmodel.g:2231:15: (lv_blocking_14_0= 'true' )
            	                            // InternalMcmodel.g:2232:16: lv_blocking_14_0= 'true'
            	                            {
            	                            lv_blocking_14_0=(Token)match(input,20,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              																newLeafNode(lv_blocking_14_0, grammarAccess.getOverridePredicate_1Access().getBlockingTrueKeyword_3_0_1_1_1_1_1_0_0());
            	                              															
            	                            }
            	                            if ( state.backtracking==0 ) {

            	                              																if (current==null) {
            	                              																	current = createModelElement(grammarAccess.getOverridePredicate_1Rule());
            	                              																}
            	                              																setWithLastConsumed(current, "blocking", true, "true");
            	                              															
            	                            }

            	                            }


            	                            }


            	                            }
            	                            break;
            	                        case 2 :
            	                            // InternalMcmodel.g:2245:14: otherlv_15= 'false'
            	                            {
            	                            otherlv_15=(Token)match(input,21,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_15, grammarAccess.getOverridePredicate_1Access().getFalseKeyword_3_0_1_1_1_1_1_1());
            	                              													
            	                            }

            	                            }
            	                            break;

            	                    }


            	                    }


            	                    }
            	                    break;

            	            }


            	            }


            	            }
            	            break;

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getOverridePredicate_1Access().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // InternalMcmodel.g:2260:4: ({...}? => ( ({...}? => (otherlv_16= '&' ( ( ( (lv_brokenDefined_17_0= '!' ) ) otherlv_18= 'broken' ) | ( ( (lv_brokenDefined_19_0= 'broken' ) ) ( (otherlv_20= '!=' ( ( (lv_broken_21_0= 'false' ) ) | otherlv_22= 'true' ) ) | ( (otherlv_23= '=' | otherlv_24= '==' ) ( ( (lv_broken_25_0= 'true' ) ) | otherlv_26= 'false' ) ) ) ) ) ) ) ) )
            	    {
            	    // InternalMcmodel.g:2260:4: ({...}? => ( ({...}? => (otherlv_16= '&' ( ( ( (lv_brokenDefined_17_0= '!' ) ) otherlv_18= 'broken' ) | ( ( (lv_brokenDefined_19_0= 'broken' ) ) ( (otherlv_20= '!=' ( ( (lv_broken_21_0= 'false' ) ) | otherlv_22= 'true' ) ) | ( (otherlv_23= '=' | otherlv_24= '==' ) ( ( (lv_broken_25_0= 'true' ) ) | otherlv_26= 'false' ) ) ) ) ) ) ) ) )
            	    // InternalMcmodel.g:2261:5: {...}? => ( ({...}? => (otherlv_16= '&' ( ( ( (lv_brokenDefined_17_0= '!' ) ) otherlv_18= 'broken' ) | ( ( (lv_brokenDefined_19_0= 'broken' ) ) ( (otherlv_20= '!=' ( ( (lv_broken_21_0= 'false' ) ) | otherlv_22= 'true' ) ) | ( (otherlv_23= '=' | otherlv_24= '==' ) ( ( (lv_broken_25_0= 'true' ) ) | otherlv_26= 'false' ) ) ) ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_1Access().getUnorderedGroup_3(), 1) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_1", "getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_1Access().getUnorderedGroup_3(), 1)");
            	    }
            	    // InternalMcmodel.g:2261:116: ( ({...}? => (otherlv_16= '&' ( ( ( (lv_brokenDefined_17_0= '!' ) ) otherlv_18= 'broken' ) | ( ( (lv_brokenDefined_19_0= 'broken' ) ) ( (otherlv_20= '!=' ( ( (lv_broken_21_0= 'false' ) ) | otherlv_22= 'true' ) ) | ( (otherlv_23= '=' | otherlv_24= '==' ) ( ( (lv_broken_25_0= 'true' ) ) | otherlv_26= 'false' ) ) ) ) ) ) ) )
            	    // InternalMcmodel.g:2262:6: ({...}? => (otherlv_16= '&' ( ( ( (lv_brokenDefined_17_0= '!' ) ) otherlv_18= 'broken' ) | ( ( (lv_brokenDefined_19_0= 'broken' ) ) ( (otherlv_20= '!=' ( ( (lv_broken_21_0= 'false' ) ) | otherlv_22= 'true' ) ) | ( (otherlv_23= '=' | otherlv_24= '==' ) ( ( (lv_broken_25_0= 'true' ) ) | otherlv_26= 'false' ) ) ) ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getOverridePredicate_1Access().getUnorderedGroup_3(), 1);
            	    // InternalMcmodel.g:2265:9: ({...}? => (otherlv_16= '&' ( ( ( (lv_brokenDefined_17_0= '!' ) ) otherlv_18= 'broken' ) | ( ( (lv_brokenDefined_19_0= 'broken' ) ) ( (otherlv_20= '!=' ( ( (lv_broken_21_0= 'false' ) ) | otherlv_22= 'true' ) ) | ( (otherlv_23= '=' | otherlv_24= '==' ) ( ( (lv_broken_25_0= 'true' ) ) | otherlv_26= 'false' ) ) ) ) ) ) )
            	    // InternalMcmodel.g:2265:10: {...}? => (otherlv_16= '&' ( ( ( (lv_brokenDefined_17_0= '!' ) ) otherlv_18= 'broken' ) | ( ( (lv_brokenDefined_19_0= 'broken' ) ) ( (otherlv_20= '!=' ( ( (lv_broken_21_0= 'false' ) ) | otherlv_22= 'true' ) ) | ( (otherlv_23= '=' | otherlv_24= '==' ) ( ( (lv_broken_25_0= 'true' ) ) | otherlv_26= 'false' ) ) ) ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_1", "true");
            	    }
            	    // InternalMcmodel.g:2265:19: (otherlv_16= '&' ( ( ( (lv_brokenDefined_17_0= '!' ) ) otherlv_18= 'broken' ) | ( ( (lv_brokenDefined_19_0= 'broken' ) ) ( (otherlv_20= '!=' ( ( (lv_broken_21_0= 'false' ) ) | otherlv_22= 'true' ) ) | ( (otherlv_23= '=' | otherlv_24= '==' ) ( ( (lv_broken_25_0= 'true' ) ) | otherlv_26= 'false' ) ) ) ) ) )
            	    // InternalMcmodel.g:2265:20: otherlv_16= '&' ( ( ( (lv_brokenDefined_17_0= '!' ) ) otherlv_18= 'broken' ) | ( ( (lv_brokenDefined_19_0= 'broken' ) ) ( (otherlv_20= '!=' ( ( (lv_broken_21_0= 'false' ) ) | otherlv_22= 'true' ) ) | ( (otherlv_23= '=' | otherlv_24= '==' ) ( ( (lv_broken_25_0= 'true' ) ) | otherlv_26= 'false' ) ) ) ) )
            	    {
            	    otherlv_16=(Token)match(input,59,FOLLOW_41); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_16, grammarAccess.getOverridePredicate_1Access().getAmpersandKeyword_3_1_0());
            	      								
            	    }
            	    // InternalMcmodel.g:2269:9: ( ( ( (lv_brokenDefined_17_0= '!' ) ) otherlv_18= 'broken' ) | ( ( (lv_brokenDefined_19_0= 'broken' ) ) ( (otherlv_20= '!=' ( ( (lv_broken_21_0= 'false' ) ) | otherlv_22= 'true' ) ) | ( (otherlv_23= '=' | otherlv_24= '==' ) ( ( (lv_broken_25_0= 'true' ) ) | otherlv_26= 'false' ) ) ) ) )
            	    int alt32=2;
            	    int LA32_0 = input.LA(1);

            	    if ( (LA32_0==60) ) {
            	        alt32=1;
            	    }
            	    else if ( (LA32_0==63) ) {
            	        alt32=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 32, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt32) {
            	        case 1 :
            	            // InternalMcmodel.g:2270:10: ( ( (lv_brokenDefined_17_0= '!' ) ) otherlv_18= 'broken' )
            	            {
            	            // InternalMcmodel.g:2270:10: ( ( (lv_brokenDefined_17_0= '!' ) ) otherlv_18= 'broken' )
            	            // InternalMcmodel.g:2271:11: ( (lv_brokenDefined_17_0= '!' ) ) otherlv_18= 'broken'
            	            {
            	            // InternalMcmodel.g:2271:11: ( (lv_brokenDefined_17_0= '!' ) )
            	            // InternalMcmodel.g:2272:12: (lv_brokenDefined_17_0= '!' )
            	            {
            	            // InternalMcmodel.g:2272:12: (lv_brokenDefined_17_0= '!' )
            	            // InternalMcmodel.g:2273:13: lv_brokenDefined_17_0= '!'
            	            {
            	            lv_brokenDefined_17_0=(Token)match(input,60,FOLLOW_42); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              													newLeafNode(lv_brokenDefined_17_0, grammarAccess.getOverridePredicate_1Access().getBrokenDefinedExclamationMarkKeyword_3_1_1_0_0_0());
            	              												
            	            }
            	            if ( state.backtracking==0 ) {

            	              													if (current==null) {
            	              														current = createModelElement(grammarAccess.getOverridePredicate_1Rule());
            	              													}
            	              													setWithLastConsumed(current, "brokenDefined", true, "!");
            	              												
            	            }

            	            }


            	            }

            	            otherlv_18=(Token)match(input,63,FOLLOW_37); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              											newLeafNode(otherlv_18, grammarAccess.getOverridePredicate_1Access().getBrokenKeyword_3_1_1_0_1());
            	              										
            	            }

            	            }


            	            }
            	            break;
            	        case 2 :
            	            // InternalMcmodel.g:2291:10: ( ( (lv_brokenDefined_19_0= 'broken' ) ) ( (otherlv_20= '!=' ( ( (lv_broken_21_0= 'false' ) ) | otherlv_22= 'true' ) ) | ( (otherlv_23= '=' | otherlv_24= '==' ) ( ( (lv_broken_25_0= 'true' ) ) | otherlv_26= 'false' ) ) ) )
            	            {
            	            // InternalMcmodel.g:2291:10: ( ( (lv_brokenDefined_19_0= 'broken' ) ) ( (otherlv_20= '!=' ( ( (lv_broken_21_0= 'false' ) ) | otherlv_22= 'true' ) ) | ( (otherlv_23= '=' | otherlv_24= '==' ) ( ( (lv_broken_25_0= 'true' ) ) | otherlv_26= 'false' ) ) ) )
            	            // InternalMcmodel.g:2292:11: ( (lv_brokenDefined_19_0= 'broken' ) ) ( (otherlv_20= '!=' ( ( (lv_broken_21_0= 'false' ) ) | otherlv_22= 'true' ) ) | ( (otherlv_23= '=' | otherlv_24= '==' ) ( ( (lv_broken_25_0= 'true' ) ) | otherlv_26= 'false' ) ) )
            	            {
            	            // InternalMcmodel.g:2292:11: ( (lv_brokenDefined_19_0= 'broken' ) )
            	            // InternalMcmodel.g:2293:12: (lv_brokenDefined_19_0= 'broken' )
            	            {
            	            // InternalMcmodel.g:2293:12: (lv_brokenDefined_19_0= 'broken' )
            	            // InternalMcmodel.g:2294:13: lv_brokenDefined_19_0= 'broken'
            	            {
            	            lv_brokenDefined_19_0=(Token)match(input,63,FOLLOW_40); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              													newLeafNode(lv_brokenDefined_19_0, grammarAccess.getOverridePredicate_1Access().getBrokenDefinedBrokenKeyword_3_1_1_1_0_0());
            	              												
            	            }
            	            if ( state.backtracking==0 ) {

            	              													if (current==null) {
            	              														current = createModelElement(grammarAccess.getOverridePredicate_1Rule());
            	              													}
            	              													setWithLastConsumed(current, "brokenDefined", true, "broken");
            	              												
            	            }

            	            }


            	            }

            	            // InternalMcmodel.g:2306:11: ( (otherlv_20= '!=' ( ( (lv_broken_21_0= 'false' ) ) | otherlv_22= 'true' ) ) | ( (otherlv_23= '=' | otherlv_24= '==' ) ( ( (lv_broken_25_0= 'true' ) ) | otherlv_26= 'false' ) ) )
            	            int alt31=2;
            	            int LA31_0 = input.LA(1);

            	            if ( (LA31_0==62) ) {
            	                alt31=1;
            	            }
            	            else if ( (LA31_0==18||LA31_0==58) ) {
            	                alt31=2;
            	            }
            	            else {
            	                if (state.backtracking>0) {state.failed=true; return current;}
            	                NoViableAltException nvae =
            	                    new NoViableAltException("", 31, 0, input);

            	                throw nvae;
            	            }
            	            switch (alt31) {
            	                case 1 :
            	                    // InternalMcmodel.g:2307:12: (otherlv_20= '!=' ( ( (lv_broken_21_0= 'false' ) ) | otherlv_22= 'true' ) )
            	                    {
            	                    // InternalMcmodel.g:2307:12: (otherlv_20= '!=' ( ( (lv_broken_21_0= 'false' ) ) | otherlv_22= 'true' ) )
            	                    // InternalMcmodel.g:2308:13: otherlv_20= '!=' ( ( (lv_broken_21_0= 'false' ) ) | otherlv_22= 'true' )
            	                    {
            	                    otherlv_20=(Token)match(input,62,FOLLOW_7); if (state.failed) return current;
            	                    if ( state.backtracking==0 ) {

            	                      													newLeafNode(otherlv_20, grammarAccess.getOverridePredicate_1Access().getExclamationMarkEqualsSignKeyword_3_1_1_1_1_0_0());
            	                      												
            	                    }
            	                    // InternalMcmodel.g:2312:13: ( ( (lv_broken_21_0= 'false' ) ) | otherlv_22= 'true' )
            	                    int alt28=2;
            	                    int LA28_0 = input.LA(1);

            	                    if ( (LA28_0==21) ) {
            	                        alt28=1;
            	                    }
            	                    else if ( (LA28_0==20) ) {
            	                        alt28=2;
            	                    }
            	                    else {
            	                        if (state.backtracking>0) {state.failed=true; return current;}
            	                        NoViableAltException nvae =
            	                            new NoViableAltException("", 28, 0, input);

            	                        throw nvae;
            	                    }
            	                    switch (alt28) {
            	                        case 1 :
            	                            // InternalMcmodel.g:2313:14: ( (lv_broken_21_0= 'false' ) )
            	                            {
            	                            // InternalMcmodel.g:2313:14: ( (lv_broken_21_0= 'false' ) )
            	                            // InternalMcmodel.g:2314:15: (lv_broken_21_0= 'false' )
            	                            {
            	                            // InternalMcmodel.g:2314:15: (lv_broken_21_0= 'false' )
            	                            // InternalMcmodel.g:2315:16: lv_broken_21_0= 'false'
            	                            {
            	                            lv_broken_21_0=(Token)match(input,21,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              																newLeafNode(lv_broken_21_0, grammarAccess.getOverridePredicate_1Access().getBrokenFalseKeyword_3_1_1_1_1_0_1_0_0());
            	                              															
            	                            }
            	                            if ( state.backtracking==0 ) {

            	                              																if (current==null) {
            	                              																	current = createModelElement(grammarAccess.getOverridePredicate_1Rule());
            	                              																}
            	                              																setWithLastConsumed(current, "broken", true, "false");
            	                              															
            	                            }

            	                            }


            	                            }


            	                            }
            	                            break;
            	                        case 2 :
            	                            // InternalMcmodel.g:2328:14: otherlv_22= 'true'
            	                            {
            	                            otherlv_22=(Token)match(input,20,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_22, grammarAccess.getOverridePredicate_1Access().getTrueKeyword_3_1_1_1_1_0_1_1());
            	                              													
            	                            }

            	                            }
            	                            break;

            	                    }


            	                    }


            	                    }
            	                    break;
            	                case 2 :
            	                    // InternalMcmodel.g:2335:12: ( (otherlv_23= '=' | otherlv_24= '==' ) ( ( (lv_broken_25_0= 'true' ) ) | otherlv_26= 'false' ) )
            	                    {
            	                    // InternalMcmodel.g:2335:12: ( (otherlv_23= '=' | otherlv_24= '==' ) ( ( (lv_broken_25_0= 'true' ) ) | otherlv_26= 'false' ) )
            	                    // InternalMcmodel.g:2336:13: (otherlv_23= '=' | otherlv_24= '==' ) ( ( (lv_broken_25_0= 'true' ) ) | otherlv_26= 'false' )
            	                    {
            	                    // InternalMcmodel.g:2336:13: (otherlv_23= '=' | otherlv_24= '==' )
            	                    int alt29=2;
            	                    int LA29_0 = input.LA(1);

            	                    if ( (LA29_0==18) ) {
            	                        alt29=1;
            	                    }
            	                    else if ( (LA29_0==58) ) {
            	                        alt29=2;
            	                    }
            	                    else {
            	                        if (state.backtracking>0) {state.failed=true; return current;}
            	                        NoViableAltException nvae =
            	                            new NoViableAltException("", 29, 0, input);

            	                        throw nvae;
            	                    }
            	                    switch (alt29) {
            	                        case 1 :
            	                            // InternalMcmodel.g:2337:14: otherlv_23= '='
            	                            {
            	                            otherlv_23=(Token)match(input,18,FOLLOW_7); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_23, grammarAccess.getOverridePredicate_1Access().getEqualsSignKeyword_3_1_1_1_1_1_0_0());
            	                              													
            	                            }

            	                            }
            	                            break;
            	                        case 2 :
            	                            // InternalMcmodel.g:2342:14: otherlv_24= '=='
            	                            {
            	                            otherlv_24=(Token)match(input,58,FOLLOW_7); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_24, grammarAccess.getOverridePredicate_1Access().getEqualsSignEqualsSignKeyword_3_1_1_1_1_1_0_1());
            	                              													
            	                            }

            	                            }
            	                            break;

            	                    }

            	                    // InternalMcmodel.g:2347:13: ( ( (lv_broken_25_0= 'true' ) ) | otherlv_26= 'false' )
            	                    int alt30=2;
            	                    int LA30_0 = input.LA(1);

            	                    if ( (LA30_0==20) ) {
            	                        alt30=1;
            	                    }
            	                    else if ( (LA30_0==21) ) {
            	                        alt30=2;
            	                    }
            	                    else {
            	                        if (state.backtracking>0) {state.failed=true; return current;}
            	                        NoViableAltException nvae =
            	                            new NoViableAltException("", 30, 0, input);

            	                        throw nvae;
            	                    }
            	                    switch (alt30) {
            	                        case 1 :
            	                            // InternalMcmodel.g:2348:14: ( (lv_broken_25_0= 'true' ) )
            	                            {
            	                            // InternalMcmodel.g:2348:14: ( (lv_broken_25_0= 'true' ) )
            	                            // InternalMcmodel.g:2349:15: (lv_broken_25_0= 'true' )
            	                            {
            	                            // InternalMcmodel.g:2349:15: (lv_broken_25_0= 'true' )
            	                            // InternalMcmodel.g:2350:16: lv_broken_25_0= 'true'
            	                            {
            	                            lv_broken_25_0=(Token)match(input,20,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              																newLeafNode(lv_broken_25_0, grammarAccess.getOverridePredicate_1Access().getBrokenTrueKeyword_3_1_1_1_1_1_1_0_0());
            	                              															
            	                            }
            	                            if ( state.backtracking==0 ) {

            	                              																if (current==null) {
            	                              																	current = createModelElement(grammarAccess.getOverridePredicate_1Rule());
            	                              																}
            	                              																setWithLastConsumed(current, "broken", true, "true");
            	                              															
            	                            }

            	                            }


            	                            }


            	                            }
            	                            break;
            	                        case 2 :
            	                            // InternalMcmodel.g:2363:14: otherlv_26= 'false'
            	                            {
            	                            otherlv_26=(Token)match(input,21,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_26, grammarAccess.getOverridePredicate_1Access().getFalseKeyword_3_1_1_1_1_1_1_1());
            	                              													
            	                            }

            	                            }
            	                            break;

            	                    }


            	                    }


            	                    }
            	                    break;

            	            }


            	            }


            	            }
            	            break;

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getOverridePredicate_1Access().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 3 :
            	    // InternalMcmodel.g:2378:4: ({...}? => ( ({...}? => (otherlv_27= '&' ( ( ( (lv_castDefined_28_0= '!' ) ) otherlv_29= 'cast' ) | ( ( (lv_castDefined_30_0= 'cast' ) ) ( (otherlv_31= '!=' ( ( (lv_cast_32_0= 'false' ) ) | otherlv_33= 'true' ) ) | ( (otherlv_34= '=' | otherlv_35= '==' ) ( ( (lv_cast_36_0= 'true' ) ) | otherlv_37= 'false' ) ) ) ) ) ) ) ) )
            	    {
            	    // InternalMcmodel.g:2378:4: ({...}? => ( ({...}? => (otherlv_27= '&' ( ( ( (lv_castDefined_28_0= '!' ) ) otherlv_29= 'cast' ) | ( ( (lv_castDefined_30_0= 'cast' ) ) ( (otherlv_31= '!=' ( ( (lv_cast_32_0= 'false' ) ) | otherlv_33= 'true' ) ) | ( (otherlv_34= '=' | otherlv_35= '==' ) ( ( (lv_cast_36_0= 'true' ) ) | otherlv_37= 'false' ) ) ) ) ) ) ) ) )
            	    // InternalMcmodel.g:2379:5: {...}? => ( ({...}? => (otherlv_27= '&' ( ( ( (lv_castDefined_28_0= '!' ) ) otherlv_29= 'cast' ) | ( ( (lv_castDefined_30_0= 'cast' ) ) ( (otherlv_31= '!=' ( ( (lv_cast_32_0= 'false' ) ) | otherlv_33= 'true' ) ) | ( (otherlv_34= '=' | otherlv_35= '==' ) ( ( (lv_cast_36_0= 'true' ) ) | otherlv_37= 'false' ) ) ) ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_1Access().getUnorderedGroup_3(), 2) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_1", "getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_1Access().getUnorderedGroup_3(), 2)");
            	    }
            	    // InternalMcmodel.g:2379:116: ( ({...}? => (otherlv_27= '&' ( ( ( (lv_castDefined_28_0= '!' ) ) otherlv_29= 'cast' ) | ( ( (lv_castDefined_30_0= 'cast' ) ) ( (otherlv_31= '!=' ( ( (lv_cast_32_0= 'false' ) ) | otherlv_33= 'true' ) ) | ( (otherlv_34= '=' | otherlv_35= '==' ) ( ( (lv_cast_36_0= 'true' ) ) | otherlv_37= 'false' ) ) ) ) ) ) ) )
            	    // InternalMcmodel.g:2380:6: ({...}? => (otherlv_27= '&' ( ( ( (lv_castDefined_28_0= '!' ) ) otherlv_29= 'cast' ) | ( ( (lv_castDefined_30_0= 'cast' ) ) ( (otherlv_31= '!=' ( ( (lv_cast_32_0= 'false' ) ) | otherlv_33= 'true' ) ) | ( (otherlv_34= '=' | otherlv_35= '==' ) ( ( (lv_cast_36_0= 'true' ) ) | otherlv_37= 'false' ) ) ) ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getOverridePredicate_1Access().getUnorderedGroup_3(), 2);
            	    // InternalMcmodel.g:2383:9: ({...}? => (otherlv_27= '&' ( ( ( (lv_castDefined_28_0= '!' ) ) otherlv_29= 'cast' ) | ( ( (lv_castDefined_30_0= 'cast' ) ) ( (otherlv_31= '!=' ( ( (lv_cast_32_0= 'false' ) ) | otherlv_33= 'true' ) ) | ( (otherlv_34= '=' | otherlv_35= '==' ) ( ( (lv_cast_36_0= 'true' ) ) | otherlv_37= 'false' ) ) ) ) ) ) )
            	    // InternalMcmodel.g:2383:10: {...}? => (otherlv_27= '&' ( ( ( (lv_castDefined_28_0= '!' ) ) otherlv_29= 'cast' ) | ( ( (lv_castDefined_30_0= 'cast' ) ) ( (otherlv_31= '!=' ( ( (lv_cast_32_0= 'false' ) ) | otherlv_33= 'true' ) ) | ( (otherlv_34= '=' | otherlv_35= '==' ) ( ( (lv_cast_36_0= 'true' ) ) | otherlv_37= 'false' ) ) ) ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_1", "true");
            	    }
            	    // InternalMcmodel.g:2383:19: (otherlv_27= '&' ( ( ( (lv_castDefined_28_0= '!' ) ) otherlv_29= 'cast' ) | ( ( (lv_castDefined_30_0= 'cast' ) ) ( (otherlv_31= '!=' ( ( (lv_cast_32_0= 'false' ) ) | otherlv_33= 'true' ) ) | ( (otherlv_34= '=' | otherlv_35= '==' ) ( ( (lv_cast_36_0= 'true' ) ) | otherlv_37= 'false' ) ) ) ) ) )
            	    // InternalMcmodel.g:2383:20: otherlv_27= '&' ( ( ( (lv_castDefined_28_0= '!' ) ) otherlv_29= 'cast' ) | ( ( (lv_castDefined_30_0= 'cast' ) ) ( (otherlv_31= '!=' ( ( (lv_cast_32_0= 'false' ) ) | otherlv_33= 'true' ) ) | ( (otherlv_34= '=' | otherlv_35= '==' ) ( ( (lv_cast_36_0= 'true' ) ) | otherlv_37= 'false' ) ) ) ) )
            	    {
            	    otherlv_27=(Token)match(input,59,FOLLOW_43); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_27, grammarAccess.getOverridePredicate_1Access().getAmpersandKeyword_3_2_0());
            	      								
            	    }
            	    // InternalMcmodel.g:2387:9: ( ( ( (lv_castDefined_28_0= '!' ) ) otherlv_29= 'cast' ) | ( ( (lv_castDefined_30_0= 'cast' ) ) ( (otherlv_31= '!=' ( ( (lv_cast_32_0= 'false' ) ) | otherlv_33= 'true' ) ) | ( (otherlv_34= '=' | otherlv_35= '==' ) ( ( (lv_cast_36_0= 'true' ) ) | otherlv_37= 'false' ) ) ) ) )
            	    int alt37=2;
            	    int LA37_0 = input.LA(1);

            	    if ( (LA37_0==60) ) {
            	        alt37=1;
            	    }
            	    else if ( (LA37_0==64) ) {
            	        alt37=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 37, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt37) {
            	        case 1 :
            	            // InternalMcmodel.g:2388:10: ( ( (lv_castDefined_28_0= '!' ) ) otherlv_29= 'cast' )
            	            {
            	            // InternalMcmodel.g:2388:10: ( ( (lv_castDefined_28_0= '!' ) ) otherlv_29= 'cast' )
            	            // InternalMcmodel.g:2389:11: ( (lv_castDefined_28_0= '!' ) ) otherlv_29= 'cast'
            	            {
            	            // InternalMcmodel.g:2389:11: ( (lv_castDefined_28_0= '!' ) )
            	            // InternalMcmodel.g:2390:12: (lv_castDefined_28_0= '!' )
            	            {
            	            // InternalMcmodel.g:2390:12: (lv_castDefined_28_0= '!' )
            	            // InternalMcmodel.g:2391:13: lv_castDefined_28_0= '!'
            	            {
            	            lv_castDefined_28_0=(Token)match(input,60,FOLLOW_44); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              													newLeafNode(lv_castDefined_28_0, grammarAccess.getOverridePredicate_1Access().getCastDefinedExclamationMarkKeyword_3_2_1_0_0_0());
            	              												
            	            }
            	            if ( state.backtracking==0 ) {

            	              													if (current==null) {
            	              														current = createModelElement(grammarAccess.getOverridePredicate_1Rule());
            	              													}
            	              													setWithLastConsumed(current, "castDefined", true, "!");
            	              												
            	            }

            	            }


            	            }

            	            otherlv_29=(Token)match(input,64,FOLLOW_37); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              											newLeafNode(otherlv_29, grammarAccess.getOverridePredicate_1Access().getCastKeyword_3_2_1_0_1());
            	              										
            	            }

            	            }


            	            }
            	            break;
            	        case 2 :
            	            // InternalMcmodel.g:2409:10: ( ( (lv_castDefined_30_0= 'cast' ) ) ( (otherlv_31= '!=' ( ( (lv_cast_32_0= 'false' ) ) | otherlv_33= 'true' ) ) | ( (otherlv_34= '=' | otherlv_35= '==' ) ( ( (lv_cast_36_0= 'true' ) ) | otherlv_37= 'false' ) ) ) )
            	            {
            	            // InternalMcmodel.g:2409:10: ( ( (lv_castDefined_30_0= 'cast' ) ) ( (otherlv_31= '!=' ( ( (lv_cast_32_0= 'false' ) ) | otherlv_33= 'true' ) ) | ( (otherlv_34= '=' | otherlv_35= '==' ) ( ( (lv_cast_36_0= 'true' ) ) | otherlv_37= 'false' ) ) ) )
            	            // InternalMcmodel.g:2410:11: ( (lv_castDefined_30_0= 'cast' ) ) ( (otherlv_31= '!=' ( ( (lv_cast_32_0= 'false' ) ) | otherlv_33= 'true' ) ) | ( (otherlv_34= '=' | otherlv_35= '==' ) ( ( (lv_cast_36_0= 'true' ) ) | otherlv_37= 'false' ) ) )
            	            {
            	            // InternalMcmodel.g:2410:11: ( (lv_castDefined_30_0= 'cast' ) )
            	            // InternalMcmodel.g:2411:12: (lv_castDefined_30_0= 'cast' )
            	            {
            	            // InternalMcmodel.g:2411:12: (lv_castDefined_30_0= 'cast' )
            	            // InternalMcmodel.g:2412:13: lv_castDefined_30_0= 'cast'
            	            {
            	            lv_castDefined_30_0=(Token)match(input,64,FOLLOW_40); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              													newLeafNode(lv_castDefined_30_0, grammarAccess.getOverridePredicate_1Access().getCastDefinedCastKeyword_3_2_1_1_0_0());
            	              												
            	            }
            	            if ( state.backtracking==0 ) {

            	              													if (current==null) {
            	              														current = createModelElement(grammarAccess.getOverridePredicate_1Rule());
            	              													}
            	              													setWithLastConsumed(current, "castDefined", true, "cast");
            	              												
            	            }

            	            }


            	            }

            	            // InternalMcmodel.g:2424:11: ( (otherlv_31= '!=' ( ( (lv_cast_32_0= 'false' ) ) | otherlv_33= 'true' ) ) | ( (otherlv_34= '=' | otherlv_35= '==' ) ( ( (lv_cast_36_0= 'true' ) ) | otherlv_37= 'false' ) ) )
            	            int alt36=2;
            	            int LA36_0 = input.LA(1);

            	            if ( (LA36_0==62) ) {
            	                alt36=1;
            	            }
            	            else if ( (LA36_0==18||LA36_0==58) ) {
            	                alt36=2;
            	            }
            	            else {
            	                if (state.backtracking>0) {state.failed=true; return current;}
            	                NoViableAltException nvae =
            	                    new NoViableAltException("", 36, 0, input);

            	                throw nvae;
            	            }
            	            switch (alt36) {
            	                case 1 :
            	                    // InternalMcmodel.g:2425:12: (otherlv_31= '!=' ( ( (lv_cast_32_0= 'false' ) ) | otherlv_33= 'true' ) )
            	                    {
            	                    // InternalMcmodel.g:2425:12: (otherlv_31= '!=' ( ( (lv_cast_32_0= 'false' ) ) | otherlv_33= 'true' ) )
            	                    // InternalMcmodel.g:2426:13: otherlv_31= '!=' ( ( (lv_cast_32_0= 'false' ) ) | otherlv_33= 'true' )
            	                    {
            	                    otherlv_31=(Token)match(input,62,FOLLOW_7); if (state.failed) return current;
            	                    if ( state.backtracking==0 ) {

            	                      													newLeafNode(otherlv_31, grammarAccess.getOverridePredicate_1Access().getExclamationMarkEqualsSignKeyword_3_2_1_1_1_0_0());
            	                      												
            	                    }
            	                    // InternalMcmodel.g:2430:13: ( ( (lv_cast_32_0= 'false' ) ) | otherlv_33= 'true' )
            	                    int alt33=2;
            	                    int LA33_0 = input.LA(1);

            	                    if ( (LA33_0==21) ) {
            	                        alt33=1;
            	                    }
            	                    else if ( (LA33_0==20) ) {
            	                        alt33=2;
            	                    }
            	                    else {
            	                        if (state.backtracking>0) {state.failed=true; return current;}
            	                        NoViableAltException nvae =
            	                            new NoViableAltException("", 33, 0, input);

            	                        throw nvae;
            	                    }
            	                    switch (alt33) {
            	                        case 1 :
            	                            // InternalMcmodel.g:2431:14: ( (lv_cast_32_0= 'false' ) )
            	                            {
            	                            // InternalMcmodel.g:2431:14: ( (lv_cast_32_0= 'false' ) )
            	                            // InternalMcmodel.g:2432:15: (lv_cast_32_0= 'false' )
            	                            {
            	                            // InternalMcmodel.g:2432:15: (lv_cast_32_0= 'false' )
            	                            // InternalMcmodel.g:2433:16: lv_cast_32_0= 'false'
            	                            {
            	                            lv_cast_32_0=(Token)match(input,21,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              																newLeafNode(lv_cast_32_0, grammarAccess.getOverridePredicate_1Access().getCastFalseKeyword_3_2_1_1_1_0_1_0_0());
            	                              															
            	                            }
            	                            if ( state.backtracking==0 ) {

            	                              																if (current==null) {
            	                              																	current = createModelElement(grammarAccess.getOverridePredicate_1Rule());
            	                              																}
            	                              																setWithLastConsumed(current, "cast", true, "false");
            	                              															
            	                            }

            	                            }


            	                            }


            	                            }
            	                            break;
            	                        case 2 :
            	                            // InternalMcmodel.g:2446:14: otherlv_33= 'true'
            	                            {
            	                            otherlv_33=(Token)match(input,20,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_33, grammarAccess.getOverridePredicate_1Access().getTrueKeyword_3_2_1_1_1_0_1_1());
            	                              													
            	                            }

            	                            }
            	                            break;

            	                    }


            	                    }


            	                    }
            	                    break;
            	                case 2 :
            	                    // InternalMcmodel.g:2453:12: ( (otherlv_34= '=' | otherlv_35= '==' ) ( ( (lv_cast_36_0= 'true' ) ) | otherlv_37= 'false' ) )
            	                    {
            	                    // InternalMcmodel.g:2453:12: ( (otherlv_34= '=' | otherlv_35= '==' ) ( ( (lv_cast_36_0= 'true' ) ) | otherlv_37= 'false' ) )
            	                    // InternalMcmodel.g:2454:13: (otherlv_34= '=' | otherlv_35= '==' ) ( ( (lv_cast_36_0= 'true' ) ) | otherlv_37= 'false' )
            	                    {
            	                    // InternalMcmodel.g:2454:13: (otherlv_34= '=' | otherlv_35= '==' )
            	                    int alt34=2;
            	                    int LA34_0 = input.LA(1);

            	                    if ( (LA34_0==18) ) {
            	                        alt34=1;
            	                    }
            	                    else if ( (LA34_0==58) ) {
            	                        alt34=2;
            	                    }
            	                    else {
            	                        if (state.backtracking>0) {state.failed=true; return current;}
            	                        NoViableAltException nvae =
            	                            new NoViableAltException("", 34, 0, input);

            	                        throw nvae;
            	                    }
            	                    switch (alt34) {
            	                        case 1 :
            	                            // InternalMcmodel.g:2455:14: otherlv_34= '='
            	                            {
            	                            otherlv_34=(Token)match(input,18,FOLLOW_7); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_34, grammarAccess.getOverridePredicate_1Access().getEqualsSignKeyword_3_2_1_1_1_1_0_0());
            	                              													
            	                            }

            	                            }
            	                            break;
            	                        case 2 :
            	                            // InternalMcmodel.g:2460:14: otherlv_35= '=='
            	                            {
            	                            otherlv_35=(Token)match(input,58,FOLLOW_7); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_35, grammarAccess.getOverridePredicate_1Access().getEqualsSignEqualsSignKeyword_3_2_1_1_1_1_0_1());
            	                              													
            	                            }

            	                            }
            	                            break;

            	                    }

            	                    // InternalMcmodel.g:2465:13: ( ( (lv_cast_36_0= 'true' ) ) | otherlv_37= 'false' )
            	                    int alt35=2;
            	                    int LA35_0 = input.LA(1);

            	                    if ( (LA35_0==20) ) {
            	                        alt35=1;
            	                    }
            	                    else if ( (LA35_0==21) ) {
            	                        alt35=2;
            	                    }
            	                    else {
            	                        if (state.backtracking>0) {state.failed=true; return current;}
            	                        NoViableAltException nvae =
            	                            new NoViableAltException("", 35, 0, input);

            	                        throw nvae;
            	                    }
            	                    switch (alt35) {
            	                        case 1 :
            	                            // InternalMcmodel.g:2466:14: ( (lv_cast_36_0= 'true' ) )
            	                            {
            	                            // InternalMcmodel.g:2466:14: ( (lv_cast_36_0= 'true' ) )
            	                            // InternalMcmodel.g:2467:15: (lv_cast_36_0= 'true' )
            	                            {
            	                            // InternalMcmodel.g:2467:15: (lv_cast_36_0= 'true' )
            	                            // InternalMcmodel.g:2468:16: lv_cast_36_0= 'true'
            	                            {
            	                            lv_cast_36_0=(Token)match(input,20,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              																newLeafNode(lv_cast_36_0, grammarAccess.getOverridePredicate_1Access().getCastTrueKeyword_3_2_1_1_1_1_1_0_0());
            	                              															
            	                            }
            	                            if ( state.backtracking==0 ) {

            	                              																if (current==null) {
            	                              																	current = createModelElement(grammarAccess.getOverridePredicate_1Rule());
            	                              																}
            	                              																setWithLastConsumed(current, "cast", true, "true");
            	                              															
            	                            }

            	                            }


            	                            }


            	                            }
            	                            break;
            	                        case 2 :
            	                            // InternalMcmodel.g:2481:14: otherlv_37= 'false'
            	                            {
            	                            otherlv_37=(Token)match(input,21,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_37, grammarAccess.getOverridePredicate_1Access().getFalseKeyword_3_2_1_1_1_1_1_1());
            	                              													
            	                            }

            	                            }
            	                            break;

            	                    }


            	                    }


            	                    }
            	                    break;

            	            }


            	            }


            	            }
            	            break;

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getOverridePredicate_1Access().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 4 :
            	    // InternalMcmodel.g:2496:4: ({...}? => ( ({...}? => (otherlv_38= '&' ( (lv_cooldownDefined_39_0= 'cooldown' ) ) (otherlv_40= '=' | otherlv_41= '==' ) ( (lv_cooldown_42_0= RULE_PERCENTAGE ) ) ) ) ) )
            	    {
            	    // InternalMcmodel.g:2496:4: ({...}? => ( ({...}? => (otherlv_38= '&' ( (lv_cooldownDefined_39_0= 'cooldown' ) ) (otherlv_40= '=' | otherlv_41= '==' ) ( (lv_cooldown_42_0= RULE_PERCENTAGE ) ) ) ) ) )
            	    // InternalMcmodel.g:2497:5: {...}? => ( ({...}? => (otherlv_38= '&' ( (lv_cooldownDefined_39_0= 'cooldown' ) ) (otherlv_40= '=' | otherlv_41= '==' ) ( (lv_cooldown_42_0= RULE_PERCENTAGE ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_1Access().getUnorderedGroup_3(), 3) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_1", "getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_1Access().getUnorderedGroup_3(), 3)");
            	    }
            	    // InternalMcmodel.g:2497:116: ( ({...}? => (otherlv_38= '&' ( (lv_cooldownDefined_39_0= 'cooldown' ) ) (otherlv_40= '=' | otherlv_41= '==' ) ( (lv_cooldown_42_0= RULE_PERCENTAGE ) ) ) ) )
            	    // InternalMcmodel.g:2498:6: ({...}? => (otherlv_38= '&' ( (lv_cooldownDefined_39_0= 'cooldown' ) ) (otherlv_40= '=' | otherlv_41= '==' ) ( (lv_cooldown_42_0= RULE_PERCENTAGE ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getOverridePredicate_1Access().getUnorderedGroup_3(), 3);
            	    // InternalMcmodel.g:2501:9: ({...}? => (otherlv_38= '&' ( (lv_cooldownDefined_39_0= 'cooldown' ) ) (otherlv_40= '=' | otherlv_41= '==' ) ( (lv_cooldown_42_0= RULE_PERCENTAGE ) ) ) )
            	    // InternalMcmodel.g:2501:10: {...}? => (otherlv_38= '&' ( (lv_cooldownDefined_39_0= 'cooldown' ) ) (otherlv_40= '=' | otherlv_41= '==' ) ( (lv_cooldown_42_0= RULE_PERCENTAGE ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_1", "true");
            	    }
            	    // InternalMcmodel.g:2501:19: (otherlv_38= '&' ( (lv_cooldownDefined_39_0= 'cooldown' ) ) (otherlv_40= '=' | otherlv_41= '==' ) ( (lv_cooldown_42_0= RULE_PERCENTAGE ) ) )
            	    // InternalMcmodel.g:2501:20: otherlv_38= '&' ( (lv_cooldownDefined_39_0= 'cooldown' ) ) (otherlv_40= '=' | otherlv_41= '==' ) ( (lv_cooldown_42_0= RULE_PERCENTAGE ) )
            	    {
            	    otherlv_38=(Token)match(input,59,FOLLOW_45); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_38, grammarAccess.getOverridePredicate_1Access().getAmpersandKeyword_3_3_0());
            	      								
            	    }
            	    // InternalMcmodel.g:2505:9: ( (lv_cooldownDefined_39_0= 'cooldown' ) )
            	    // InternalMcmodel.g:2506:10: (lv_cooldownDefined_39_0= 'cooldown' )
            	    {
            	    // InternalMcmodel.g:2506:10: (lv_cooldownDefined_39_0= 'cooldown' )
            	    // InternalMcmodel.g:2507:11: lv_cooldownDefined_39_0= 'cooldown'
            	    {
            	    lv_cooldownDefined_39_0=(Token)match(input,65,FOLLOW_35); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											newLeafNode(lv_cooldownDefined_39_0, grammarAccess.getOverridePredicate_1Access().getCooldownDefinedCooldownKeyword_3_3_1_0());
            	      										
            	    }
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElement(grammarAccess.getOverridePredicate_1Rule());
            	      											}
            	      											setWithLastConsumed(current, "cooldownDefined", true, "cooldown");
            	      										
            	    }

            	    }


            	    }

            	    // InternalMcmodel.g:2519:9: (otherlv_40= '=' | otherlv_41= '==' )
            	    int alt38=2;
            	    int LA38_0 = input.LA(1);

            	    if ( (LA38_0==18) ) {
            	        alt38=1;
            	    }
            	    else if ( (LA38_0==58) ) {
            	        alt38=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 38, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt38) {
            	        case 1 :
            	            // InternalMcmodel.g:2520:10: otherlv_40= '='
            	            {
            	            otherlv_40=(Token)match(input,18,FOLLOW_36); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(otherlv_40, grammarAccess.getOverridePredicate_1Access().getEqualsSignKeyword_3_3_2_0());
            	              									
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalMcmodel.g:2525:10: otherlv_41= '=='
            	            {
            	            otherlv_41=(Token)match(input,58,FOLLOW_36); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(otherlv_41, grammarAccess.getOverridePredicate_1Access().getEqualsSignEqualsSignKeyword_3_3_2_1());
            	              									
            	            }

            	            }
            	            break;

            	    }

            	    // InternalMcmodel.g:2530:9: ( (lv_cooldown_42_0= RULE_PERCENTAGE ) )
            	    // InternalMcmodel.g:2531:10: (lv_cooldown_42_0= RULE_PERCENTAGE )
            	    {
            	    // InternalMcmodel.g:2531:10: (lv_cooldown_42_0= RULE_PERCENTAGE )
            	    // InternalMcmodel.g:2532:11: lv_cooldown_42_0= RULE_PERCENTAGE
            	    {
            	    lv_cooldown_42_0=(Token)match(input,RULE_PERCENTAGE,FOLLOW_37); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											newLeafNode(lv_cooldown_42_0, grammarAccess.getOverridePredicate_1Access().getCooldownPERCENTAGETerminalRuleCall_3_3_3_0());
            	      										
            	    }
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElement(grammarAccess.getOverridePredicate_1Rule());
            	      											}
            	      											setWithLastConsumed(
            	      												current,
            	      												"cooldown",
            	      												lv_cooldown_42_0,
            	      												"com.raptor.mcmodel.Mcmodel.PERCENTAGE");
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getOverridePredicate_1Access().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 5 :
            	    // InternalMcmodel.g:2554:4: ({...}? => ( ({...}? => (otherlv_43= '&' ( (lv_damageDefined_44_0= 'damage' ) ) (otherlv_45= '=' | otherlv_46= '==' ) ( (lv_damage_47_0= RULE_PERCENTAGE ) ) ) ) ) )
            	    {
            	    // InternalMcmodel.g:2554:4: ({...}? => ( ({...}? => (otherlv_43= '&' ( (lv_damageDefined_44_0= 'damage' ) ) (otherlv_45= '=' | otherlv_46= '==' ) ( (lv_damage_47_0= RULE_PERCENTAGE ) ) ) ) ) )
            	    // InternalMcmodel.g:2555:5: {...}? => ( ({...}? => (otherlv_43= '&' ( (lv_damageDefined_44_0= 'damage' ) ) (otherlv_45= '=' | otherlv_46= '==' ) ( (lv_damage_47_0= RULE_PERCENTAGE ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_1Access().getUnorderedGroup_3(), 4) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_1", "getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_1Access().getUnorderedGroup_3(), 4)");
            	    }
            	    // InternalMcmodel.g:2555:116: ( ({...}? => (otherlv_43= '&' ( (lv_damageDefined_44_0= 'damage' ) ) (otherlv_45= '=' | otherlv_46= '==' ) ( (lv_damage_47_0= RULE_PERCENTAGE ) ) ) ) )
            	    // InternalMcmodel.g:2556:6: ({...}? => (otherlv_43= '&' ( (lv_damageDefined_44_0= 'damage' ) ) (otherlv_45= '=' | otherlv_46= '==' ) ( (lv_damage_47_0= RULE_PERCENTAGE ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getOverridePredicate_1Access().getUnorderedGroup_3(), 4);
            	    // InternalMcmodel.g:2559:9: ({...}? => (otherlv_43= '&' ( (lv_damageDefined_44_0= 'damage' ) ) (otherlv_45= '=' | otherlv_46= '==' ) ( (lv_damage_47_0= RULE_PERCENTAGE ) ) ) )
            	    // InternalMcmodel.g:2559:10: {...}? => (otherlv_43= '&' ( (lv_damageDefined_44_0= 'damage' ) ) (otherlv_45= '=' | otherlv_46= '==' ) ( (lv_damage_47_0= RULE_PERCENTAGE ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_1", "true");
            	    }
            	    // InternalMcmodel.g:2559:19: (otherlv_43= '&' ( (lv_damageDefined_44_0= 'damage' ) ) (otherlv_45= '=' | otherlv_46= '==' ) ( (lv_damage_47_0= RULE_PERCENTAGE ) ) )
            	    // InternalMcmodel.g:2559:20: otherlv_43= '&' ( (lv_damageDefined_44_0= 'damage' ) ) (otherlv_45= '=' | otherlv_46= '==' ) ( (lv_damage_47_0= RULE_PERCENTAGE ) )
            	    {
            	    otherlv_43=(Token)match(input,59,FOLLOW_46); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_43, grammarAccess.getOverridePredicate_1Access().getAmpersandKeyword_3_4_0());
            	      								
            	    }
            	    // InternalMcmodel.g:2563:9: ( (lv_damageDefined_44_0= 'damage' ) )
            	    // InternalMcmodel.g:2564:10: (lv_damageDefined_44_0= 'damage' )
            	    {
            	    // InternalMcmodel.g:2564:10: (lv_damageDefined_44_0= 'damage' )
            	    // InternalMcmodel.g:2565:11: lv_damageDefined_44_0= 'damage'
            	    {
            	    lv_damageDefined_44_0=(Token)match(input,66,FOLLOW_35); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											newLeafNode(lv_damageDefined_44_0, grammarAccess.getOverridePredicate_1Access().getDamageDefinedDamageKeyword_3_4_1_0());
            	      										
            	    }
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElement(grammarAccess.getOverridePredicate_1Rule());
            	      											}
            	      											setWithLastConsumed(current, "damageDefined", true, "damage");
            	      										
            	    }

            	    }


            	    }

            	    // InternalMcmodel.g:2577:9: (otherlv_45= '=' | otherlv_46= '==' )
            	    int alt39=2;
            	    int LA39_0 = input.LA(1);

            	    if ( (LA39_0==18) ) {
            	        alt39=1;
            	    }
            	    else if ( (LA39_0==58) ) {
            	        alt39=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 39, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt39) {
            	        case 1 :
            	            // InternalMcmodel.g:2578:10: otherlv_45= '='
            	            {
            	            otherlv_45=(Token)match(input,18,FOLLOW_36); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(otherlv_45, grammarAccess.getOverridePredicate_1Access().getEqualsSignKeyword_3_4_2_0());
            	              									
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalMcmodel.g:2583:10: otherlv_46= '=='
            	            {
            	            otherlv_46=(Token)match(input,58,FOLLOW_36); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(otherlv_46, grammarAccess.getOverridePredicate_1Access().getEqualsSignEqualsSignKeyword_3_4_2_1());
            	              									
            	            }

            	            }
            	            break;

            	    }

            	    // InternalMcmodel.g:2588:9: ( (lv_damage_47_0= RULE_PERCENTAGE ) )
            	    // InternalMcmodel.g:2589:10: (lv_damage_47_0= RULE_PERCENTAGE )
            	    {
            	    // InternalMcmodel.g:2589:10: (lv_damage_47_0= RULE_PERCENTAGE )
            	    // InternalMcmodel.g:2590:11: lv_damage_47_0= RULE_PERCENTAGE
            	    {
            	    lv_damage_47_0=(Token)match(input,RULE_PERCENTAGE,FOLLOW_37); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											newLeafNode(lv_damage_47_0, grammarAccess.getOverridePredicate_1Access().getDamagePERCENTAGETerminalRuleCall_3_4_3_0());
            	      										
            	    }
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElement(grammarAccess.getOverridePredicate_1Rule());
            	      											}
            	      											setWithLastConsumed(
            	      												current,
            	      												"damage",
            	      												lv_damage_47_0,
            	      												"com.raptor.mcmodel.Mcmodel.PERCENTAGE");
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getOverridePredicate_1Access().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 6 :
            	    // InternalMcmodel.g:2612:4: ({...}? => ( ({...}? => (otherlv_48= '&' ( ( ( (lv_damagedDefined_49_0= '!' ) ) otherlv_50= 'damaged' ) | ( ( (lv_damagedDefined_51_0= 'damaged' ) ) ( (otherlv_52= '!=' ( ( (lv_damaged_53_0= 'false' ) ) | otherlv_54= 'true' ) ) | ( (otherlv_55= '=' | otherlv_56= '==' ) ( ( (lv_damaged_57_0= 'true' ) ) | otherlv_58= 'false' ) ) ) ) ) ) ) ) )
            	    {
            	    // InternalMcmodel.g:2612:4: ({...}? => ( ({...}? => (otherlv_48= '&' ( ( ( (lv_damagedDefined_49_0= '!' ) ) otherlv_50= 'damaged' ) | ( ( (lv_damagedDefined_51_0= 'damaged' ) ) ( (otherlv_52= '!=' ( ( (lv_damaged_53_0= 'false' ) ) | otherlv_54= 'true' ) ) | ( (otherlv_55= '=' | otherlv_56= '==' ) ( ( (lv_damaged_57_0= 'true' ) ) | otherlv_58= 'false' ) ) ) ) ) ) ) ) )
            	    // InternalMcmodel.g:2613:5: {...}? => ( ({...}? => (otherlv_48= '&' ( ( ( (lv_damagedDefined_49_0= '!' ) ) otherlv_50= 'damaged' ) | ( ( (lv_damagedDefined_51_0= 'damaged' ) ) ( (otherlv_52= '!=' ( ( (lv_damaged_53_0= 'false' ) ) | otherlv_54= 'true' ) ) | ( (otherlv_55= '=' | otherlv_56= '==' ) ( ( (lv_damaged_57_0= 'true' ) ) | otherlv_58= 'false' ) ) ) ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_1Access().getUnorderedGroup_3(), 5) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_1", "getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_1Access().getUnorderedGroup_3(), 5)");
            	    }
            	    // InternalMcmodel.g:2613:116: ( ({...}? => (otherlv_48= '&' ( ( ( (lv_damagedDefined_49_0= '!' ) ) otherlv_50= 'damaged' ) | ( ( (lv_damagedDefined_51_0= 'damaged' ) ) ( (otherlv_52= '!=' ( ( (lv_damaged_53_0= 'false' ) ) | otherlv_54= 'true' ) ) | ( (otherlv_55= '=' | otherlv_56= '==' ) ( ( (lv_damaged_57_0= 'true' ) ) | otherlv_58= 'false' ) ) ) ) ) ) ) )
            	    // InternalMcmodel.g:2614:6: ({...}? => (otherlv_48= '&' ( ( ( (lv_damagedDefined_49_0= '!' ) ) otherlv_50= 'damaged' ) | ( ( (lv_damagedDefined_51_0= 'damaged' ) ) ( (otherlv_52= '!=' ( ( (lv_damaged_53_0= 'false' ) ) | otherlv_54= 'true' ) ) | ( (otherlv_55= '=' | otherlv_56= '==' ) ( ( (lv_damaged_57_0= 'true' ) ) | otherlv_58= 'false' ) ) ) ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getOverridePredicate_1Access().getUnorderedGroup_3(), 5);
            	    // InternalMcmodel.g:2617:9: ({...}? => (otherlv_48= '&' ( ( ( (lv_damagedDefined_49_0= '!' ) ) otherlv_50= 'damaged' ) | ( ( (lv_damagedDefined_51_0= 'damaged' ) ) ( (otherlv_52= '!=' ( ( (lv_damaged_53_0= 'false' ) ) | otherlv_54= 'true' ) ) | ( (otherlv_55= '=' | otherlv_56= '==' ) ( ( (lv_damaged_57_0= 'true' ) ) | otherlv_58= 'false' ) ) ) ) ) ) )
            	    // InternalMcmodel.g:2617:10: {...}? => (otherlv_48= '&' ( ( ( (lv_damagedDefined_49_0= '!' ) ) otherlv_50= 'damaged' ) | ( ( (lv_damagedDefined_51_0= 'damaged' ) ) ( (otherlv_52= '!=' ( ( (lv_damaged_53_0= 'false' ) ) | otherlv_54= 'true' ) ) | ( (otherlv_55= '=' | otherlv_56= '==' ) ( ( (lv_damaged_57_0= 'true' ) ) | otherlv_58= 'false' ) ) ) ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_1", "true");
            	    }
            	    // InternalMcmodel.g:2617:19: (otherlv_48= '&' ( ( ( (lv_damagedDefined_49_0= '!' ) ) otherlv_50= 'damaged' ) | ( ( (lv_damagedDefined_51_0= 'damaged' ) ) ( (otherlv_52= '!=' ( ( (lv_damaged_53_0= 'false' ) ) | otherlv_54= 'true' ) ) | ( (otherlv_55= '=' | otherlv_56= '==' ) ( ( (lv_damaged_57_0= 'true' ) ) | otherlv_58= 'false' ) ) ) ) ) )
            	    // InternalMcmodel.g:2617:20: otherlv_48= '&' ( ( ( (lv_damagedDefined_49_0= '!' ) ) otherlv_50= 'damaged' ) | ( ( (lv_damagedDefined_51_0= 'damaged' ) ) ( (otherlv_52= '!=' ( ( (lv_damaged_53_0= 'false' ) ) | otherlv_54= 'true' ) ) | ( (otherlv_55= '=' | otherlv_56= '==' ) ( ( (lv_damaged_57_0= 'true' ) ) | otherlv_58= 'false' ) ) ) ) )
            	    {
            	    otherlv_48=(Token)match(input,59,FOLLOW_47); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_48, grammarAccess.getOverridePredicate_1Access().getAmpersandKeyword_3_5_0());
            	      								
            	    }
            	    // InternalMcmodel.g:2621:9: ( ( ( (lv_damagedDefined_49_0= '!' ) ) otherlv_50= 'damaged' ) | ( ( (lv_damagedDefined_51_0= 'damaged' ) ) ( (otherlv_52= '!=' ( ( (lv_damaged_53_0= 'false' ) ) | otherlv_54= 'true' ) ) | ( (otherlv_55= '=' | otherlv_56= '==' ) ( ( (lv_damaged_57_0= 'true' ) ) | otherlv_58= 'false' ) ) ) ) )
            	    int alt44=2;
            	    int LA44_0 = input.LA(1);

            	    if ( (LA44_0==60) ) {
            	        alt44=1;
            	    }
            	    else if ( (LA44_0==67) ) {
            	        alt44=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 44, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt44) {
            	        case 1 :
            	            // InternalMcmodel.g:2622:10: ( ( (lv_damagedDefined_49_0= '!' ) ) otherlv_50= 'damaged' )
            	            {
            	            // InternalMcmodel.g:2622:10: ( ( (lv_damagedDefined_49_0= '!' ) ) otherlv_50= 'damaged' )
            	            // InternalMcmodel.g:2623:11: ( (lv_damagedDefined_49_0= '!' ) ) otherlv_50= 'damaged'
            	            {
            	            // InternalMcmodel.g:2623:11: ( (lv_damagedDefined_49_0= '!' ) )
            	            // InternalMcmodel.g:2624:12: (lv_damagedDefined_49_0= '!' )
            	            {
            	            // InternalMcmodel.g:2624:12: (lv_damagedDefined_49_0= '!' )
            	            // InternalMcmodel.g:2625:13: lv_damagedDefined_49_0= '!'
            	            {
            	            lv_damagedDefined_49_0=(Token)match(input,60,FOLLOW_48); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              													newLeafNode(lv_damagedDefined_49_0, grammarAccess.getOverridePredicate_1Access().getDamagedDefinedExclamationMarkKeyword_3_5_1_0_0_0());
            	              												
            	            }
            	            if ( state.backtracking==0 ) {

            	              													if (current==null) {
            	              														current = createModelElement(grammarAccess.getOverridePredicate_1Rule());
            	              													}
            	              													setWithLastConsumed(current, "damagedDefined", true, "!");
            	              												
            	            }

            	            }


            	            }

            	            otherlv_50=(Token)match(input,67,FOLLOW_37); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              											newLeafNode(otherlv_50, grammarAccess.getOverridePredicate_1Access().getDamagedKeyword_3_5_1_0_1());
            	              										
            	            }

            	            }


            	            }
            	            break;
            	        case 2 :
            	            // InternalMcmodel.g:2643:10: ( ( (lv_damagedDefined_51_0= 'damaged' ) ) ( (otherlv_52= '!=' ( ( (lv_damaged_53_0= 'false' ) ) | otherlv_54= 'true' ) ) | ( (otherlv_55= '=' | otherlv_56= '==' ) ( ( (lv_damaged_57_0= 'true' ) ) | otherlv_58= 'false' ) ) ) )
            	            {
            	            // InternalMcmodel.g:2643:10: ( ( (lv_damagedDefined_51_0= 'damaged' ) ) ( (otherlv_52= '!=' ( ( (lv_damaged_53_0= 'false' ) ) | otherlv_54= 'true' ) ) | ( (otherlv_55= '=' | otherlv_56= '==' ) ( ( (lv_damaged_57_0= 'true' ) ) | otherlv_58= 'false' ) ) ) )
            	            // InternalMcmodel.g:2644:11: ( (lv_damagedDefined_51_0= 'damaged' ) ) ( (otherlv_52= '!=' ( ( (lv_damaged_53_0= 'false' ) ) | otherlv_54= 'true' ) ) | ( (otherlv_55= '=' | otherlv_56= '==' ) ( ( (lv_damaged_57_0= 'true' ) ) | otherlv_58= 'false' ) ) )
            	            {
            	            // InternalMcmodel.g:2644:11: ( (lv_damagedDefined_51_0= 'damaged' ) )
            	            // InternalMcmodel.g:2645:12: (lv_damagedDefined_51_0= 'damaged' )
            	            {
            	            // InternalMcmodel.g:2645:12: (lv_damagedDefined_51_0= 'damaged' )
            	            // InternalMcmodel.g:2646:13: lv_damagedDefined_51_0= 'damaged'
            	            {
            	            lv_damagedDefined_51_0=(Token)match(input,67,FOLLOW_40); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              													newLeafNode(lv_damagedDefined_51_0, grammarAccess.getOverridePredicate_1Access().getDamagedDefinedDamagedKeyword_3_5_1_1_0_0());
            	              												
            	            }
            	            if ( state.backtracking==0 ) {

            	              													if (current==null) {
            	              														current = createModelElement(grammarAccess.getOverridePredicate_1Rule());
            	              													}
            	              													setWithLastConsumed(current, "damagedDefined", true, "damaged");
            	              												
            	            }

            	            }


            	            }

            	            // InternalMcmodel.g:2658:11: ( (otherlv_52= '!=' ( ( (lv_damaged_53_0= 'false' ) ) | otherlv_54= 'true' ) ) | ( (otherlv_55= '=' | otherlv_56= '==' ) ( ( (lv_damaged_57_0= 'true' ) ) | otherlv_58= 'false' ) ) )
            	            int alt43=2;
            	            int LA43_0 = input.LA(1);

            	            if ( (LA43_0==62) ) {
            	                alt43=1;
            	            }
            	            else if ( (LA43_0==18||LA43_0==58) ) {
            	                alt43=2;
            	            }
            	            else {
            	                if (state.backtracking>0) {state.failed=true; return current;}
            	                NoViableAltException nvae =
            	                    new NoViableAltException("", 43, 0, input);

            	                throw nvae;
            	            }
            	            switch (alt43) {
            	                case 1 :
            	                    // InternalMcmodel.g:2659:12: (otherlv_52= '!=' ( ( (lv_damaged_53_0= 'false' ) ) | otherlv_54= 'true' ) )
            	                    {
            	                    // InternalMcmodel.g:2659:12: (otherlv_52= '!=' ( ( (lv_damaged_53_0= 'false' ) ) | otherlv_54= 'true' ) )
            	                    // InternalMcmodel.g:2660:13: otherlv_52= '!=' ( ( (lv_damaged_53_0= 'false' ) ) | otherlv_54= 'true' )
            	                    {
            	                    otherlv_52=(Token)match(input,62,FOLLOW_7); if (state.failed) return current;
            	                    if ( state.backtracking==0 ) {

            	                      													newLeafNode(otherlv_52, grammarAccess.getOverridePredicate_1Access().getExclamationMarkEqualsSignKeyword_3_5_1_1_1_0_0());
            	                      												
            	                    }
            	                    // InternalMcmodel.g:2664:13: ( ( (lv_damaged_53_0= 'false' ) ) | otherlv_54= 'true' )
            	                    int alt40=2;
            	                    int LA40_0 = input.LA(1);

            	                    if ( (LA40_0==21) ) {
            	                        alt40=1;
            	                    }
            	                    else if ( (LA40_0==20) ) {
            	                        alt40=2;
            	                    }
            	                    else {
            	                        if (state.backtracking>0) {state.failed=true; return current;}
            	                        NoViableAltException nvae =
            	                            new NoViableAltException("", 40, 0, input);

            	                        throw nvae;
            	                    }
            	                    switch (alt40) {
            	                        case 1 :
            	                            // InternalMcmodel.g:2665:14: ( (lv_damaged_53_0= 'false' ) )
            	                            {
            	                            // InternalMcmodel.g:2665:14: ( (lv_damaged_53_0= 'false' ) )
            	                            // InternalMcmodel.g:2666:15: (lv_damaged_53_0= 'false' )
            	                            {
            	                            // InternalMcmodel.g:2666:15: (lv_damaged_53_0= 'false' )
            	                            // InternalMcmodel.g:2667:16: lv_damaged_53_0= 'false'
            	                            {
            	                            lv_damaged_53_0=(Token)match(input,21,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              																newLeafNode(lv_damaged_53_0, grammarAccess.getOverridePredicate_1Access().getDamagedFalseKeyword_3_5_1_1_1_0_1_0_0());
            	                              															
            	                            }
            	                            if ( state.backtracking==0 ) {

            	                              																if (current==null) {
            	                              																	current = createModelElement(grammarAccess.getOverridePredicate_1Rule());
            	                              																}
            	                              																setWithLastConsumed(current, "damaged", true, "false");
            	                              															
            	                            }

            	                            }


            	                            }


            	                            }
            	                            break;
            	                        case 2 :
            	                            // InternalMcmodel.g:2680:14: otherlv_54= 'true'
            	                            {
            	                            otherlv_54=(Token)match(input,20,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_54, grammarAccess.getOverridePredicate_1Access().getTrueKeyword_3_5_1_1_1_0_1_1());
            	                              													
            	                            }

            	                            }
            	                            break;

            	                    }


            	                    }


            	                    }
            	                    break;
            	                case 2 :
            	                    // InternalMcmodel.g:2687:12: ( (otherlv_55= '=' | otherlv_56= '==' ) ( ( (lv_damaged_57_0= 'true' ) ) | otherlv_58= 'false' ) )
            	                    {
            	                    // InternalMcmodel.g:2687:12: ( (otherlv_55= '=' | otherlv_56= '==' ) ( ( (lv_damaged_57_0= 'true' ) ) | otherlv_58= 'false' ) )
            	                    // InternalMcmodel.g:2688:13: (otherlv_55= '=' | otherlv_56= '==' ) ( ( (lv_damaged_57_0= 'true' ) ) | otherlv_58= 'false' )
            	                    {
            	                    // InternalMcmodel.g:2688:13: (otherlv_55= '=' | otherlv_56= '==' )
            	                    int alt41=2;
            	                    int LA41_0 = input.LA(1);

            	                    if ( (LA41_0==18) ) {
            	                        alt41=1;
            	                    }
            	                    else if ( (LA41_0==58) ) {
            	                        alt41=2;
            	                    }
            	                    else {
            	                        if (state.backtracking>0) {state.failed=true; return current;}
            	                        NoViableAltException nvae =
            	                            new NoViableAltException("", 41, 0, input);

            	                        throw nvae;
            	                    }
            	                    switch (alt41) {
            	                        case 1 :
            	                            // InternalMcmodel.g:2689:14: otherlv_55= '='
            	                            {
            	                            otherlv_55=(Token)match(input,18,FOLLOW_7); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_55, grammarAccess.getOverridePredicate_1Access().getEqualsSignKeyword_3_5_1_1_1_1_0_0());
            	                              													
            	                            }

            	                            }
            	                            break;
            	                        case 2 :
            	                            // InternalMcmodel.g:2694:14: otherlv_56= '=='
            	                            {
            	                            otherlv_56=(Token)match(input,58,FOLLOW_7); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_56, grammarAccess.getOverridePredicate_1Access().getEqualsSignEqualsSignKeyword_3_5_1_1_1_1_0_1());
            	                              													
            	                            }

            	                            }
            	                            break;

            	                    }

            	                    // InternalMcmodel.g:2699:13: ( ( (lv_damaged_57_0= 'true' ) ) | otherlv_58= 'false' )
            	                    int alt42=2;
            	                    int LA42_0 = input.LA(1);

            	                    if ( (LA42_0==20) ) {
            	                        alt42=1;
            	                    }
            	                    else if ( (LA42_0==21) ) {
            	                        alt42=2;
            	                    }
            	                    else {
            	                        if (state.backtracking>0) {state.failed=true; return current;}
            	                        NoViableAltException nvae =
            	                            new NoViableAltException("", 42, 0, input);

            	                        throw nvae;
            	                    }
            	                    switch (alt42) {
            	                        case 1 :
            	                            // InternalMcmodel.g:2700:14: ( (lv_damaged_57_0= 'true' ) )
            	                            {
            	                            // InternalMcmodel.g:2700:14: ( (lv_damaged_57_0= 'true' ) )
            	                            // InternalMcmodel.g:2701:15: (lv_damaged_57_0= 'true' )
            	                            {
            	                            // InternalMcmodel.g:2701:15: (lv_damaged_57_0= 'true' )
            	                            // InternalMcmodel.g:2702:16: lv_damaged_57_0= 'true'
            	                            {
            	                            lv_damaged_57_0=(Token)match(input,20,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              																newLeafNode(lv_damaged_57_0, grammarAccess.getOverridePredicate_1Access().getDamagedTrueKeyword_3_5_1_1_1_1_1_0_0());
            	                              															
            	                            }
            	                            if ( state.backtracking==0 ) {

            	                              																if (current==null) {
            	                              																	current = createModelElement(grammarAccess.getOverridePredicate_1Rule());
            	                              																}
            	                              																setWithLastConsumed(current, "damaged", true, "true");
            	                              															
            	                            }

            	                            }


            	                            }


            	                            }
            	                            break;
            	                        case 2 :
            	                            // InternalMcmodel.g:2715:14: otherlv_58= 'false'
            	                            {
            	                            otherlv_58=(Token)match(input,21,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_58, grammarAccess.getOverridePredicate_1Access().getFalseKeyword_3_5_1_1_1_1_1_1());
            	                              													
            	                            }

            	                            }
            	                            break;

            	                    }


            	                    }


            	                    }
            	                    break;

            	            }


            	            }


            	            }
            	            break;

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getOverridePredicate_1Access().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 7 :
            	    // InternalMcmodel.g:2730:4: ({...}? => ( ({...}? => (otherlv_59= '&' ( ( ( (lv_lefthandedDefined_60_0= '!' ) ) otherlv_61= 'lefthanded' ) | ( ( (lv_lefthandedDefined_62_0= 'lefthanded' ) ) ( (otherlv_63= '!=' ( ( (lv_lefthanded_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_lefthanded_68_0= 'true' ) ) | otherlv_69= 'false' ) ) ) ) ) ) ) ) )
            	    {
            	    // InternalMcmodel.g:2730:4: ({...}? => ( ({...}? => (otherlv_59= '&' ( ( ( (lv_lefthandedDefined_60_0= '!' ) ) otherlv_61= 'lefthanded' ) | ( ( (lv_lefthandedDefined_62_0= 'lefthanded' ) ) ( (otherlv_63= '!=' ( ( (lv_lefthanded_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_lefthanded_68_0= 'true' ) ) | otherlv_69= 'false' ) ) ) ) ) ) ) ) )
            	    // InternalMcmodel.g:2731:5: {...}? => ( ({...}? => (otherlv_59= '&' ( ( ( (lv_lefthandedDefined_60_0= '!' ) ) otherlv_61= 'lefthanded' ) | ( ( (lv_lefthandedDefined_62_0= 'lefthanded' ) ) ( (otherlv_63= '!=' ( ( (lv_lefthanded_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_lefthanded_68_0= 'true' ) ) | otherlv_69= 'false' ) ) ) ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_1Access().getUnorderedGroup_3(), 6) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_1", "getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_1Access().getUnorderedGroup_3(), 6)");
            	    }
            	    // InternalMcmodel.g:2731:116: ( ({...}? => (otherlv_59= '&' ( ( ( (lv_lefthandedDefined_60_0= '!' ) ) otherlv_61= 'lefthanded' ) | ( ( (lv_lefthandedDefined_62_0= 'lefthanded' ) ) ( (otherlv_63= '!=' ( ( (lv_lefthanded_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_lefthanded_68_0= 'true' ) ) | otherlv_69= 'false' ) ) ) ) ) ) ) )
            	    // InternalMcmodel.g:2732:6: ({...}? => (otherlv_59= '&' ( ( ( (lv_lefthandedDefined_60_0= '!' ) ) otherlv_61= 'lefthanded' ) | ( ( (lv_lefthandedDefined_62_0= 'lefthanded' ) ) ( (otherlv_63= '!=' ( ( (lv_lefthanded_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_lefthanded_68_0= 'true' ) ) | otherlv_69= 'false' ) ) ) ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getOverridePredicate_1Access().getUnorderedGroup_3(), 6);
            	    // InternalMcmodel.g:2735:9: ({...}? => (otherlv_59= '&' ( ( ( (lv_lefthandedDefined_60_0= '!' ) ) otherlv_61= 'lefthanded' ) | ( ( (lv_lefthandedDefined_62_0= 'lefthanded' ) ) ( (otherlv_63= '!=' ( ( (lv_lefthanded_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_lefthanded_68_0= 'true' ) ) | otherlv_69= 'false' ) ) ) ) ) ) )
            	    // InternalMcmodel.g:2735:10: {...}? => (otherlv_59= '&' ( ( ( (lv_lefthandedDefined_60_0= '!' ) ) otherlv_61= 'lefthanded' ) | ( ( (lv_lefthandedDefined_62_0= 'lefthanded' ) ) ( (otherlv_63= '!=' ( ( (lv_lefthanded_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_lefthanded_68_0= 'true' ) ) | otherlv_69= 'false' ) ) ) ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_1", "true");
            	    }
            	    // InternalMcmodel.g:2735:19: (otherlv_59= '&' ( ( ( (lv_lefthandedDefined_60_0= '!' ) ) otherlv_61= 'lefthanded' ) | ( ( (lv_lefthandedDefined_62_0= 'lefthanded' ) ) ( (otherlv_63= '!=' ( ( (lv_lefthanded_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_lefthanded_68_0= 'true' ) ) | otherlv_69= 'false' ) ) ) ) ) )
            	    // InternalMcmodel.g:2735:20: otherlv_59= '&' ( ( ( (lv_lefthandedDefined_60_0= '!' ) ) otherlv_61= 'lefthanded' ) | ( ( (lv_lefthandedDefined_62_0= 'lefthanded' ) ) ( (otherlv_63= '!=' ( ( (lv_lefthanded_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_lefthanded_68_0= 'true' ) ) | otherlv_69= 'false' ) ) ) ) )
            	    {
            	    otherlv_59=(Token)match(input,59,FOLLOW_49); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_59, grammarAccess.getOverridePredicate_1Access().getAmpersandKeyword_3_6_0());
            	      								
            	    }
            	    // InternalMcmodel.g:2739:9: ( ( ( (lv_lefthandedDefined_60_0= '!' ) ) otherlv_61= 'lefthanded' ) | ( ( (lv_lefthandedDefined_62_0= 'lefthanded' ) ) ( (otherlv_63= '!=' ( ( (lv_lefthanded_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_lefthanded_68_0= 'true' ) ) | otherlv_69= 'false' ) ) ) ) )
            	    int alt49=2;
            	    int LA49_0 = input.LA(1);

            	    if ( (LA49_0==60) ) {
            	        alt49=1;
            	    }
            	    else if ( (LA49_0==68) ) {
            	        alt49=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 49, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt49) {
            	        case 1 :
            	            // InternalMcmodel.g:2740:10: ( ( (lv_lefthandedDefined_60_0= '!' ) ) otherlv_61= 'lefthanded' )
            	            {
            	            // InternalMcmodel.g:2740:10: ( ( (lv_lefthandedDefined_60_0= '!' ) ) otherlv_61= 'lefthanded' )
            	            // InternalMcmodel.g:2741:11: ( (lv_lefthandedDefined_60_0= '!' ) ) otherlv_61= 'lefthanded'
            	            {
            	            // InternalMcmodel.g:2741:11: ( (lv_lefthandedDefined_60_0= '!' ) )
            	            // InternalMcmodel.g:2742:12: (lv_lefthandedDefined_60_0= '!' )
            	            {
            	            // InternalMcmodel.g:2742:12: (lv_lefthandedDefined_60_0= '!' )
            	            // InternalMcmodel.g:2743:13: lv_lefthandedDefined_60_0= '!'
            	            {
            	            lv_lefthandedDefined_60_0=(Token)match(input,60,FOLLOW_50); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              													newLeafNode(lv_lefthandedDefined_60_0, grammarAccess.getOverridePredicate_1Access().getLefthandedDefinedExclamationMarkKeyword_3_6_1_0_0_0());
            	              												
            	            }
            	            if ( state.backtracking==0 ) {

            	              													if (current==null) {
            	              														current = createModelElement(grammarAccess.getOverridePredicate_1Rule());
            	              													}
            	              													setWithLastConsumed(current, "lefthandedDefined", true, "!");
            	              												
            	            }

            	            }


            	            }

            	            otherlv_61=(Token)match(input,68,FOLLOW_37); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              											newLeafNode(otherlv_61, grammarAccess.getOverridePredicate_1Access().getLefthandedKeyword_3_6_1_0_1());
            	              										
            	            }

            	            }


            	            }
            	            break;
            	        case 2 :
            	            // InternalMcmodel.g:2761:10: ( ( (lv_lefthandedDefined_62_0= 'lefthanded' ) ) ( (otherlv_63= '!=' ( ( (lv_lefthanded_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_lefthanded_68_0= 'true' ) ) | otherlv_69= 'false' ) ) ) )
            	            {
            	            // InternalMcmodel.g:2761:10: ( ( (lv_lefthandedDefined_62_0= 'lefthanded' ) ) ( (otherlv_63= '!=' ( ( (lv_lefthanded_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_lefthanded_68_0= 'true' ) ) | otherlv_69= 'false' ) ) ) )
            	            // InternalMcmodel.g:2762:11: ( (lv_lefthandedDefined_62_0= 'lefthanded' ) ) ( (otherlv_63= '!=' ( ( (lv_lefthanded_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_lefthanded_68_0= 'true' ) ) | otherlv_69= 'false' ) ) )
            	            {
            	            // InternalMcmodel.g:2762:11: ( (lv_lefthandedDefined_62_0= 'lefthanded' ) )
            	            // InternalMcmodel.g:2763:12: (lv_lefthandedDefined_62_0= 'lefthanded' )
            	            {
            	            // InternalMcmodel.g:2763:12: (lv_lefthandedDefined_62_0= 'lefthanded' )
            	            // InternalMcmodel.g:2764:13: lv_lefthandedDefined_62_0= 'lefthanded'
            	            {
            	            lv_lefthandedDefined_62_0=(Token)match(input,68,FOLLOW_40); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              													newLeafNode(lv_lefthandedDefined_62_0, grammarAccess.getOverridePredicate_1Access().getLefthandedDefinedLefthandedKeyword_3_6_1_1_0_0());
            	              												
            	            }
            	            if ( state.backtracking==0 ) {

            	              													if (current==null) {
            	              														current = createModelElement(grammarAccess.getOverridePredicate_1Rule());
            	              													}
            	              													setWithLastConsumed(current, "lefthandedDefined", true, "lefthanded");
            	              												
            	            }

            	            }


            	            }

            	            // InternalMcmodel.g:2776:11: ( (otherlv_63= '!=' ( ( (lv_lefthanded_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_lefthanded_68_0= 'true' ) ) | otherlv_69= 'false' ) ) )
            	            int alt48=2;
            	            int LA48_0 = input.LA(1);

            	            if ( (LA48_0==62) ) {
            	                alt48=1;
            	            }
            	            else if ( (LA48_0==18||LA48_0==58) ) {
            	                alt48=2;
            	            }
            	            else {
            	                if (state.backtracking>0) {state.failed=true; return current;}
            	                NoViableAltException nvae =
            	                    new NoViableAltException("", 48, 0, input);

            	                throw nvae;
            	            }
            	            switch (alt48) {
            	                case 1 :
            	                    // InternalMcmodel.g:2777:12: (otherlv_63= '!=' ( ( (lv_lefthanded_64_0= 'false' ) ) | otherlv_65= 'true' ) )
            	                    {
            	                    // InternalMcmodel.g:2777:12: (otherlv_63= '!=' ( ( (lv_lefthanded_64_0= 'false' ) ) | otherlv_65= 'true' ) )
            	                    // InternalMcmodel.g:2778:13: otherlv_63= '!=' ( ( (lv_lefthanded_64_0= 'false' ) ) | otherlv_65= 'true' )
            	                    {
            	                    otherlv_63=(Token)match(input,62,FOLLOW_7); if (state.failed) return current;
            	                    if ( state.backtracking==0 ) {

            	                      													newLeafNode(otherlv_63, grammarAccess.getOverridePredicate_1Access().getExclamationMarkEqualsSignKeyword_3_6_1_1_1_0_0());
            	                      												
            	                    }
            	                    // InternalMcmodel.g:2782:13: ( ( (lv_lefthanded_64_0= 'false' ) ) | otherlv_65= 'true' )
            	                    int alt45=2;
            	                    int LA45_0 = input.LA(1);

            	                    if ( (LA45_0==21) ) {
            	                        alt45=1;
            	                    }
            	                    else if ( (LA45_0==20) ) {
            	                        alt45=2;
            	                    }
            	                    else {
            	                        if (state.backtracking>0) {state.failed=true; return current;}
            	                        NoViableAltException nvae =
            	                            new NoViableAltException("", 45, 0, input);

            	                        throw nvae;
            	                    }
            	                    switch (alt45) {
            	                        case 1 :
            	                            // InternalMcmodel.g:2783:14: ( (lv_lefthanded_64_0= 'false' ) )
            	                            {
            	                            // InternalMcmodel.g:2783:14: ( (lv_lefthanded_64_0= 'false' ) )
            	                            // InternalMcmodel.g:2784:15: (lv_lefthanded_64_0= 'false' )
            	                            {
            	                            // InternalMcmodel.g:2784:15: (lv_lefthanded_64_0= 'false' )
            	                            // InternalMcmodel.g:2785:16: lv_lefthanded_64_0= 'false'
            	                            {
            	                            lv_lefthanded_64_0=(Token)match(input,21,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              																newLeafNode(lv_lefthanded_64_0, grammarAccess.getOverridePredicate_1Access().getLefthandedFalseKeyword_3_6_1_1_1_0_1_0_0());
            	                              															
            	                            }
            	                            if ( state.backtracking==0 ) {

            	                              																if (current==null) {
            	                              																	current = createModelElement(grammarAccess.getOverridePredicate_1Rule());
            	                              																}
            	                              																setWithLastConsumed(current, "lefthanded", true, "false");
            	                              															
            	                            }

            	                            }


            	                            }


            	                            }
            	                            break;
            	                        case 2 :
            	                            // InternalMcmodel.g:2798:14: otherlv_65= 'true'
            	                            {
            	                            otherlv_65=(Token)match(input,20,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_65, grammarAccess.getOverridePredicate_1Access().getTrueKeyword_3_6_1_1_1_0_1_1());
            	                              													
            	                            }

            	                            }
            	                            break;

            	                    }


            	                    }


            	                    }
            	                    break;
            	                case 2 :
            	                    // InternalMcmodel.g:2805:12: ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_lefthanded_68_0= 'true' ) ) | otherlv_69= 'false' ) )
            	                    {
            	                    // InternalMcmodel.g:2805:12: ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_lefthanded_68_0= 'true' ) ) | otherlv_69= 'false' ) )
            	                    // InternalMcmodel.g:2806:13: (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_lefthanded_68_0= 'true' ) ) | otherlv_69= 'false' )
            	                    {
            	                    // InternalMcmodel.g:2806:13: (otherlv_66= '=' | otherlv_67= '==' )
            	                    int alt46=2;
            	                    int LA46_0 = input.LA(1);

            	                    if ( (LA46_0==18) ) {
            	                        alt46=1;
            	                    }
            	                    else if ( (LA46_0==58) ) {
            	                        alt46=2;
            	                    }
            	                    else {
            	                        if (state.backtracking>0) {state.failed=true; return current;}
            	                        NoViableAltException nvae =
            	                            new NoViableAltException("", 46, 0, input);

            	                        throw nvae;
            	                    }
            	                    switch (alt46) {
            	                        case 1 :
            	                            // InternalMcmodel.g:2807:14: otherlv_66= '='
            	                            {
            	                            otherlv_66=(Token)match(input,18,FOLLOW_7); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_66, grammarAccess.getOverridePredicate_1Access().getEqualsSignKeyword_3_6_1_1_1_1_0_0());
            	                              													
            	                            }

            	                            }
            	                            break;
            	                        case 2 :
            	                            // InternalMcmodel.g:2812:14: otherlv_67= '=='
            	                            {
            	                            otherlv_67=(Token)match(input,58,FOLLOW_7); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_67, grammarAccess.getOverridePredicate_1Access().getEqualsSignEqualsSignKeyword_3_6_1_1_1_1_0_1());
            	                              													
            	                            }

            	                            }
            	                            break;

            	                    }

            	                    // InternalMcmodel.g:2817:13: ( ( (lv_lefthanded_68_0= 'true' ) ) | otherlv_69= 'false' )
            	                    int alt47=2;
            	                    int LA47_0 = input.LA(1);

            	                    if ( (LA47_0==20) ) {
            	                        alt47=1;
            	                    }
            	                    else if ( (LA47_0==21) ) {
            	                        alt47=2;
            	                    }
            	                    else {
            	                        if (state.backtracking>0) {state.failed=true; return current;}
            	                        NoViableAltException nvae =
            	                            new NoViableAltException("", 47, 0, input);

            	                        throw nvae;
            	                    }
            	                    switch (alt47) {
            	                        case 1 :
            	                            // InternalMcmodel.g:2818:14: ( (lv_lefthanded_68_0= 'true' ) )
            	                            {
            	                            // InternalMcmodel.g:2818:14: ( (lv_lefthanded_68_0= 'true' ) )
            	                            // InternalMcmodel.g:2819:15: (lv_lefthanded_68_0= 'true' )
            	                            {
            	                            // InternalMcmodel.g:2819:15: (lv_lefthanded_68_0= 'true' )
            	                            // InternalMcmodel.g:2820:16: lv_lefthanded_68_0= 'true'
            	                            {
            	                            lv_lefthanded_68_0=(Token)match(input,20,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              																newLeafNode(lv_lefthanded_68_0, grammarAccess.getOverridePredicate_1Access().getLefthandedTrueKeyword_3_6_1_1_1_1_1_0_0());
            	                              															
            	                            }
            	                            if ( state.backtracking==0 ) {

            	                              																if (current==null) {
            	                              																	current = createModelElement(grammarAccess.getOverridePredicate_1Rule());
            	                              																}
            	                              																setWithLastConsumed(current, "lefthanded", true, "true");
            	                              															
            	                            }

            	                            }


            	                            }


            	                            }
            	                            break;
            	                        case 2 :
            	                            // InternalMcmodel.g:2833:14: otherlv_69= 'false'
            	                            {
            	                            otherlv_69=(Token)match(input,21,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_69, grammarAccess.getOverridePredicate_1Access().getFalseKeyword_3_6_1_1_1_1_1_1());
            	                              													
            	                            }

            	                            }
            	                            break;

            	                    }


            	                    }


            	                    }
            	                    break;

            	            }


            	            }


            	            }
            	            break;

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getOverridePredicate_1Access().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 8 :
            	    // InternalMcmodel.g:2848:4: ({...}? => ( ({...}? => (otherlv_70= '&' ( (lv_pullDefined_71_0= 'pull' ) ) (otherlv_72= '=' | otherlv_73= '==' ) ( (lv_pull_74_0= RULE_PERCENTAGE ) ) ) ) ) )
            	    {
            	    // InternalMcmodel.g:2848:4: ({...}? => ( ({...}? => (otherlv_70= '&' ( (lv_pullDefined_71_0= 'pull' ) ) (otherlv_72= '=' | otherlv_73= '==' ) ( (lv_pull_74_0= RULE_PERCENTAGE ) ) ) ) ) )
            	    // InternalMcmodel.g:2849:5: {...}? => ( ({...}? => (otherlv_70= '&' ( (lv_pullDefined_71_0= 'pull' ) ) (otherlv_72= '=' | otherlv_73= '==' ) ( (lv_pull_74_0= RULE_PERCENTAGE ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_1Access().getUnorderedGroup_3(), 7) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_1", "getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_1Access().getUnorderedGroup_3(), 7)");
            	    }
            	    // InternalMcmodel.g:2849:116: ( ({...}? => (otherlv_70= '&' ( (lv_pullDefined_71_0= 'pull' ) ) (otherlv_72= '=' | otherlv_73= '==' ) ( (lv_pull_74_0= RULE_PERCENTAGE ) ) ) ) )
            	    // InternalMcmodel.g:2850:6: ({...}? => (otherlv_70= '&' ( (lv_pullDefined_71_0= 'pull' ) ) (otherlv_72= '=' | otherlv_73= '==' ) ( (lv_pull_74_0= RULE_PERCENTAGE ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getOverridePredicate_1Access().getUnorderedGroup_3(), 7);
            	    // InternalMcmodel.g:2853:9: ({...}? => (otherlv_70= '&' ( (lv_pullDefined_71_0= 'pull' ) ) (otherlv_72= '=' | otherlv_73= '==' ) ( (lv_pull_74_0= RULE_PERCENTAGE ) ) ) )
            	    // InternalMcmodel.g:2853:10: {...}? => (otherlv_70= '&' ( (lv_pullDefined_71_0= 'pull' ) ) (otherlv_72= '=' | otherlv_73= '==' ) ( (lv_pull_74_0= RULE_PERCENTAGE ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_1", "true");
            	    }
            	    // InternalMcmodel.g:2853:19: (otherlv_70= '&' ( (lv_pullDefined_71_0= 'pull' ) ) (otherlv_72= '=' | otherlv_73= '==' ) ( (lv_pull_74_0= RULE_PERCENTAGE ) ) )
            	    // InternalMcmodel.g:2853:20: otherlv_70= '&' ( (lv_pullDefined_71_0= 'pull' ) ) (otherlv_72= '=' | otherlv_73= '==' ) ( (lv_pull_74_0= RULE_PERCENTAGE ) )
            	    {
            	    otherlv_70=(Token)match(input,59,FOLLOW_51); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_70, grammarAccess.getOverridePredicate_1Access().getAmpersandKeyword_3_7_0());
            	      								
            	    }
            	    // InternalMcmodel.g:2857:9: ( (lv_pullDefined_71_0= 'pull' ) )
            	    // InternalMcmodel.g:2858:10: (lv_pullDefined_71_0= 'pull' )
            	    {
            	    // InternalMcmodel.g:2858:10: (lv_pullDefined_71_0= 'pull' )
            	    // InternalMcmodel.g:2859:11: lv_pullDefined_71_0= 'pull'
            	    {
            	    lv_pullDefined_71_0=(Token)match(input,69,FOLLOW_35); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											newLeafNode(lv_pullDefined_71_0, grammarAccess.getOverridePredicate_1Access().getPullDefinedPullKeyword_3_7_1_0());
            	      										
            	    }
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElement(grammarAccess.getOverridePredicate_1Rule());
            	      											}
            	      											setWithLastConsumed(current, "pullDefined", true, "pull");
            	      										
            	    }

            	    }


            	    }

            	    // InternalMcmodel.g:2871:9: (otherlv_72= '=' | otherlv_73= '==' )
            	    int alt50=2;
            	    int LA50_0 = input.LA(1);

            	    if ( (LA50_0==18) ) {
            	        alt50=1;
            	    }
            	    else if ( (LA50_0==58) ) {
            	        alt50=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 50, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt50) {
            	        case 1 :
            	            // InternalMcmodel.g:2872:10: otherlv_72= '='
            	            {
            	            otherlv_72=(Token)match(input,18,FOLLOW_36); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(otherlv_72, grammarAccess.getOverridePredicate_1Access().getEqualsSignKeyword_3_7_2_0());
            	              									
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalMcmodel.g:2877:10: otherlv_73= '=='
            	            {
            	            otherlv_73=(Token)match(input,58,FOLLOW_36); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(otherlv_73, grammarAccess.getOverridePredicate_1Access().getEqualsSignEqualsSignKeyword_3_7_2_1());
            	              									
            	            }

            	            }
            	            break;

            	    }

            	    // InternalMcmodel.g:2882:9: ( (lv_pull_74_0= RULE_PERCENTAGE ) )
            	    // InternalMcmodel.g:2883:10: (lv_pull_74_0= RULE_PERCENTAGE )
            	    {
            	    // InternalMcmodel.g:2883:10: (lv_pull_74_0= RULE_PERCENTAGE )
            	    // InternalMcmodel.g:2884:11: lv_pull_74_0= RULE_PERCENTAGE
            	    {
            	    lv_pull_74_0=(Token)match(input,RULE_PERCENTAGE,FOLLOW_37); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											newLeafNode(lv_pull_74_0, grammarAccess.getOverridePredicate_1Access().getPullPERCENTAGETerminalRuleCall_3_7_3_0());
            	      										
            	    }
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElement(grammarAccess.getOverridePredicate_1Rule());
            	      											}
            	      											setWithLastConsumed(
            	      												current,
            	      												"pull",
            	      												lv_pull_74_0,
            	      												"com.raptor.mcmodel.Mcmodel.PERCENTAGE");
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getOverridePredicate_1Access().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 9 :
            	    // InternalMcmodel.g:2906:4: ({...}? => ( ({...}? => (otherlv_75= '&' ( ( ( (lv_pullingDefined_76_0= '!' ) ) otherlv_77= 'pulling' ) | ( ( (lv_pullingDefined_78_0= 'pulling' ) ) ( (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) ) | ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) ) ) ) ) ) ) ) )
            	    {
            	    // InternalMcmodel.g:2906:4: ({...}? => ( ({...}? => (otherlv_75= '&' ( ( ( (lv_pullingDefined_76_0= '!' ) ) otherlv_77= 'pulling' ) | ( ( (lv_pullingDefined_78_0= 'pulling' ) ) ( (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) ) | ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) ) ) ) ) ) ) ) )
            	    // InternalMcmodel.g:2907:5: {...}? => ( ({...}? => (otherlv_75= '&' ( ( ( (lv_pullingDefined_76_0= '!' ) ) otherlv_77= 'pulling' ) | ( ( (lv_pullingDefined_78_0= 'pulling' ) ) ( (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) ) | ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) ) ) ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_1Access().getUnorderedGroup_3(), 8) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_1", "getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_1Access().getUnorderedGroup_3(), 8)");
            	    }
            	    // InternalMcmodel.g:2907:116: ( ({...}? => (otherlv_75= '&' ( ( ( (lv_pullingDefined_76_0= '!' ) ) otherlv_77= 'pulling' ) | ( ( (lv_pullingDefined_78_0= 'pulling' ) ) ( (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) ) | ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) ) ) ) ) ) ) )
            	    // InternalMcmodel.g:2908:6: ({...}? => (otherlv_75= '&' ( ( ( (lv_pullingDefined_76_0= '!' ) ) otherlv_77= 'pulling' ) | ( ( (lv_pullingDefined_78_0= 'pulling' ) ) ( (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) ) | ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) ) ) ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getOverridePredicate_1Access().getUnorderedGroup_3(), 8);
            	    // InternalMcmodel.g:2911:9: ({...}? => (otherlv_75= '&' ( ( ( (lv_pullingDefined_76_0= '!' ) ) otherlv_77= 'pulling' ) | ( ( (lv_pullingDefined_78_0= 'pulling' ) ) ( (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) ) | ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) ) ) ) ) ) )
            	    // InternalMcmodel.g:2911:10: {...}? => (otherlv_75= '&' ( ( ( (lv_pullingDefined_76_0= '!' ) ) otherlv_77= 'pulling' ) | ( ( (lv_pullingDefined_78_0= 'pulling' ) ) ( (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) ) | ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) ) ) ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_1", "true");
            	    }
            	    // InternalMcmodel.g:2911:19: (otherlv_75= '&' ( ( ( (lv_pullingDefined_76_0= '!' ) ) otherlv_77= 'pulling' ) | ( ( (lv_pullingDefined_78_0= 'pulling' ) ) ( (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) ) | ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) ) ) ) ) )
            	    // InternalMcmodel.g:2911:20: otherlv_75= '&' ( ( ( (lv_pullingDefined_76_0= '!' ) ) otherlv_77= 'pulling' ) | ( ( (lv_pullingDefined_78_0= 'pulling' ) ) ( (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) ) | ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) ) ) ) )
            	    {
            	    otherlv_75=(Token)match(input,59,FOLLOW_52); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_75, grammarAccess.getOverridePredicate_1Access().getAmpersandKeyword_3_8_0());
            	      								
            	    }
            	    // InternalMcmodel.g:2915:9: ( ( ( (lv_pullingDefined_76_0= '!' ) ) otherlv_77= 'pulling' ) | ( ( (lv_pullingDefined_78_0= 'pulling' ) ) ( (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) ) | ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) ) ) ) )
            	    int alt55=2;
            	    int LA55_0 = input.LA(1);

            	    if ( (LA55_0==60) ) {
            	        alt55=1;
            	    }
            	    else if ( (LA55_0==70) ) {
            	        alt55=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 55, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt55) {
            	        case 1 :
            	            // InternalMcmodel.g:2916:10: ( ( (lv_pullingDefined_76_0= '!' ) ) otherlv_77= 'pulling' )
            	            {
            	            // InternalMcmodel.g:2916:10: ( ( (lv_pullingDefined_76_0= '!' ) ) otherlv_77= 'pulling' )
            	            // InternalMcmodel.g:2917:11: ( (lv_pullingDefined_76_0= '!' ) ) otherlv_77= 'pulling'
            	            {
            	            // InternalMcmodel.g:2917:11: ( (lv_pullingDefined_76_0= '!' ) )
            	            // InternalMcmodel.g:2918:12: (lv_pullingDefined_76_0= '!' )
            	            {
            	            // InternalMcmodel.g:2918:12: (lv_pullingDefined_76_0= '!' )
            	            // InternalMcmodel.g:2919:13: lv_pullingDefined_76_0= '!'
            	            {
            	            lv_pullingDefined_76_0=(Token)match(input,60,FOLLOW_53); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              													newLeafNode(lv_pullingDefined_76_0, grammarAccess.getOverridePredicate_1Access().getPullingDefinedExclamationMarkKeyword_3_8_1_0_0_0());
            	              												
            	            }
            	            if ( state.backtracking==0 ) {

            	              													if (current==null) {
            	              														current = createModelElement(grammarAccess.getOverridePredicate_1Rule());
            	              													}
            	              													setWithLastConsumed(current, "pullingDefined", true, "!");
            	              												
            	            }

            	            }


            	            }

            	            otherlv_77=(Token)match(input,70,FOLLOW_37); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              											newLeafNode(otherlv_77, grammarAccess.getOverridePredicate_1Access().getPullingKeyword_3_8_1_0_1());
            	              										
            	            }

            	            }


            	            }
            	            break;
            	        case 2 :
            	            // InternalMcmodel.g:2937:10: ( ( (lv_pullingDefined_78_0= 'pulling' ) ) ( (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) ) | ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) ) ) )
            	            {
            	            // InternalMcmodel.g:2937:10: ( ( (lv_pullingDefined_78_0= 'pulling' ) ) ( (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) ) | ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) ) ) )
            	            // InternalMcmodel.g:2938:11: ( (lv_pullingDefined_78_0= 'pulling' ) ) ( (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) ) | ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) ) )
            	            {
            	            // InternalMcmodel.g:2938:11: ( (lv_pullingDefined_78_0= 'pulling' ) )
            	            // InternalMcmodel.g:2939:12: (lv_pullingDefined_78_0= 'pulling' )
            	            {
            	            // InternalMcmodel.g:2939:12: (lv_pullingDefined_78_0= 'pulling' )
            	            // InternalMcmodel.g:2940:13: lv_pullingDefined_78_0= 'pulling'
            	            {
            	            lv_pullingDefined_78_0=(Token)match(input,70,FOLLOW_40); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              													newLeafNode(lv_pullingDefined_78_0, grammarAccess.getOverridePredicate_1Access().getPullingDefinedPullingKeyword_3_8_1_1_0_0());
            	              												
            	            }
            	            if ( state.backtracking==0 ) {

            	              													if (current==null) {
            	              														current = createModelElement(grammarAccess.getOverridePredicate_1Rule());
            	              													}
            	              													setWithLastConsumed(current, "pullingDefined", true, "pulling");
            	              												
            	            }

            	            }


            	            }

            	            // InternalMcmodel.g:2952:11: ( (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) ) | ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) ) )
            	            int alt54=2;
            	            int LA54_0 = input.LA(1);

            	            if ( (LA54_0==62) ) {
            	                alt54=1;
            	            }
            	            else if ( (LA54_0==18||LA54_0==58) ) {
            	                alt54=2;
            	            }
            	            else {
            	                if (state.backtracking>0) {state.failed=true; return current;}
            	                NoViableAltException nvae =
            	                    new NoViableAltException("", 54, 0, input);

            	                throw nvae;
            	            }
            	            switch (alt54) {
            	                case 1 :
            	                    // InternalMcmodel.g:2953:12: (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) )
            	                    {
            	                    // InternalMcmodel.g:2953:12: (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) )
            	                    // InternalMcmodel.g:2954:13: otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' )
            	                    {
            	                    otherlv_79=(Token)match(input,62,FOLLOW_7); if (state.failed) return current;
            	                    if ( state.backtracking==0 ) {

            	                      													newLeafNode(otherlv_79, grammarAccess.getOverridePredicate_1Access().getExclamationMarkEqualsSignKeyword_3_8_1_1_1_0_0());
            	                      												
            	                    }
            	                    // InternalMcmodel.g:2958:13: ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' )
            	                    int alt51=2;
            	                    int LA51_0 = input.LA(1);

            	                    if ( (LA51_0==21) ) {
            	                        alt51=1;
            	                    }
            	                    else if ( (LA51_0==20) ) {
            	                        alt51=2;
            	                    }
            	                    else {
            	                        if (state.backtracking>0) {state.failed=true; return current;}
            	                        NoViableAltException nvae =
            	                            new NoViableAltException("", 51, 0, input);

            	                        throw nvae;
            	                    }
            	                    switch (alt51) {
            	                        case 1 :
            	                            // InternalMcmodel.g:2959:14: ( (lv_pulling_80_0= 'false' ) )
            	                            {
            	                            // InternalMcmodel.g:2959:14: ( (lv_pulling_80_0= 'false' ) )
            	                            // InternalMcmodel.g:2960:15: (lv_pulling_80_0= 'false' )
            	                            {
            	                            // InternalMcmodel.g:2960:15: (lv_pulling_80_0= 'false' )
            	                            // InternalMcmodel.g:2961:16: lv_pulling_80_0= 'false'
            	                            {
            	                            lv_pulling_80_0=(Token)match(input,21,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              																newLeafNode(lv_pulling_80_0, grammarAccess.getOverridePredicate_1Access().getPullingFalseKeyword_3_8_1_1_1_0_1_0_0());
            	                              															
            	                            }
            	                            if ( state.backtracking==0 ) {

            	                              																if (current==null) {
            	                              																	current = createModelElement(grammarAccess.getOverridePredicate_1Rule());
            	                              																}
            	                              																setWithLastConsumed(current, "pulling", true, "false");
            	                              															
            	                            }

            	                            }


            	                            }


            	                            }
            	                            break;
            	                        case 2 :
            	                            // InternalMcmodel.g:2974:14: otherlv_81= 'true'
            	                            {
            	                            otherlv_81=(Token)match(input,20,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_81, grammarAccess.getOverridePredicate_1Access().getTrueKeyword_3_8_1_1_1_0_1_1());
            	                              													
            	                            }

            	                            }
            	                            break;

            	                    }


            	                    }


            	                    }
            	                    break;
            	                case 2 :
            	                    // InternalMcmodel.g:2981:12: ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) )
            	                    {
            	                    // InternalMcmodel.g:2981:12: ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) )
            	                    // InternalMcmodel.g:2982:13: (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' )
            	                    {
            	                    // InternalMcmodel.g:2982:13: (otherlv_82= '=' | otherlv_83= '==' )
            	                    int alt52=2;
            	                    int LA52_0 = input.LA(1);

            	                    if ( (LA52_0==18) ) {
            	                        alt52=1;
            	                    }
            	                    else if ( (LA52_0==58) ) {
            	                        alt52=2;
            	                    }
            	                    else {
            	                        if (state.backtracking>0) {state.failed=true; return current;}
            	                        NoViableAltException nvae =
            	                            new NoViableAltException("", 52, 0, input);

            	                        throw nvae;
            	                    }
            	                    switch (alt52) {
            	                        case 1 :
            	                            // InternalMcmodel.g:2983:14: otherlv_82= '='
            	                            {
            	                            otherlv_82=(Token)match(input,18,FOLLOW_7); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_82, grammarAccess.getOverridePredicate_1Access().getEqualsSignKeyword_3_8_1_1_1_1_0_0());
            	                              													
            	                            }

            	                            }
            	                            break;
            	                        case 2 :
            	                            // InternalMcmodel.g:2988:14: otherlv_83= '=='
            	                            {
            	                            otherlv_83=(Token)match(input,58,FOLLOW_7); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_83, grammarAccess.getOverridePredicate_1Access().getEqualsSignEqualsSignKeyword_3_8_1_1_1_1_0_1());
            	                              													
            	                            }

            	                            }
            	                            break;

            	                    }

            	                    // InternalMcmodel.g:2993:13: ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' )
            	                    int alt53=2;
            	                    int LA53_0 = input.LA(1);

            	                    if ( (LA53_0==20) ) {
            	                        alt53=1;
            	                    }
            	                    else if ( (LA53_0==21) ) {
            	                        alt53=2;
            	                    }
            	                    else {
            	                        if (state.backtracking>0) {state.failed=true; return current;}
            	                        NoViableAltException nvae =
            	                            new NoViableAltException("", 53, 0, input);

            	                        throw nvae;
            	                    }
            	                    switch (alt53) {
            	                        case 1 :
            	                            // InternalMcmodel.g:2994:14: ( (lv_pulling_84_0= 'true' ) )
            	                            {
            	                            // InternalMcmodel.g:2994:14: ( (lv_pulling_84_0= 'true' ) )
            	                            // InternalMcmodel.g:2995:15: (lv_pulling_84_0= 'true' )
            	                            {
            	                            // InternalMcmodel.g:2995:15: (lv_pulling_84_0= 'true' )
            	                            // InternalMcmodel.g:2996:16: lv_pulling_84_0= 'true'
            	                            {
            	                            lv_pulling_84_0=(Token)match(input,20,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              																newLeafNode(lv_pulling_84_0, grammarAccess.getOverridePredicate_1Access().getPullingTrueKeyword_3_8_1_1_1_1_1_0_0());
            	                              															
            	                            }
            	                            if ( state.backtracking==0 ) {

            	                              																if (current==null) {
            	                              																	current = createModelElement(grammarAccess.getOverridePredicate_1Rule());
            	                              																}
            	                              																setWithLastConsumed(current, "pulling", true, "true");
            	                              															
            	                            }

            	                            }


            	                            }


            	                            }
            	                            break;
            	                        case 2 :
            	                            // InternalMcmodel.g:3009:14: otherlv_85= 'false'
            	                            {
            	                            otherlv_85=(Token)match(input,21,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_85, grammarAccess.getOverridePredicate_1Access().getFalseKeyword_3_8_1_1_1_1_1_1());
            	                              													
            	                            }

            	                            }
            	                            break;

            	                    }


            	                    }


            	                    }
            	                    break;

            	            }


            	            }


            	            }
            	            break;

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getOverridePredicate_1Access().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 10 :
            	    // InternalMcmodel.g:3024:4: ({...}? => ( ({...}? => (otherlv_86= '&' ( ( ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing' ) | ( ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) ) ) ) ) ) )
            	    {
            	    // InternalMcmodel.g:3024:4: ({...}? => ( ({...}? => (otherlv_86= '&' ( ( ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing' ) | ( ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) ) ) ) ) ) )
            	    // InternalMcmodel.g:3025:5: {...}? => ( ({...}? => (otherlv_86= '&' ( ( ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing' ) | ( ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_1Access().getUnorderedGroup_3(), 9) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_1", "getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_1Access().getUnorderedGroup_3(), 9)");
            	    }
            	    // InternalMcmodel.g:3025:116: ( ({...}? => (otherlv_86= '&' ( ( ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing' ) | ( ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) ) ) ) ) )
            	    // InternalMcmodel.g:3026:6: ({...}? => (otherlv_86= '&' ( ( ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing' ) | ( ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getOverridePredicate_1Access().getUnorderedGroup_3(), 9);
            	    // InternalMcmodel.g:3029:9: ({...}? => (otherlv_86= '&' ( ( ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing' ) | ( ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) ) ) ) )
            	    // InternalMcmodel.g:3029:10: {...}? => (otherlv_86= '&' ( ( ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing' ) | ( ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_1", "true");
            	    }
            	    // InternalMcmodel.g:3029:19: (otherlv_86= '&' ( ( ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing' ) | ( ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) ) ) )
            	    // InternalMcmodel.g:3029:20: otherlv_86= '&' ( ( ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing' ) | ( ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) ) )
            	    {
            	    otherlv_86=(Token)match(input,59,FOLLOW_54); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_86, grammarAccess.getOverridePredicate_1Access().getAmpersandKeyword_3_9_0());
            	      								
            	    }
            	    // InternalMcmodel.g:3033:9: ( ( ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing' ) | ( ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) ) )
            	    int alt60=2;
            	    int LA60_0 = input.LA(1);

            	    if ( (LA60_0==60) ) {
            	        alt60=1;
            	    }
            	    else if ( (LA60_0==71) ) {
            	        alt60=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 60, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt60) {
            	        case 1 :
            	            // InternalMcmodel.g:3034:10: ( ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing' )
            	            {
            	            // InternalMcmodel.g:3034:10: ( ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing' )
            	            // InternalMcmodel.g:3035:11: ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing'
            	            {
            	            // InternalMcmodel.g:3035:11: ( (lv_throwingDefined_87_0= '!' ) )
            	            // InternalMcmodel.g:3036:12: (lv_throwingDefined_87_0= '!' )
            	            {
            	            // InternalMcmodel.g:3036:12: (lv_throwingDefined_87_0= '!' )
            	            // InternalMcmodel.g:3037:13: lv_throwingDefined_87_0= '!'
            	            {
            	            lv_throwingDefined_87_0=(Token)match(input,60,FOLLOW_55); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              													newLeafNode(lv_throwingDefined_87_0, grammarAccess.getOverridePredicate_1Access().getThrowingDefinedExclamationMarkKeyword_3_9_1_0_0_0());
            	              												
            	            }
            	            if ( state.backtracking==0 ) {

            	              													if (current==null) {
            	              														current = createModelElement(grammarAccess.getOverridePredicate_1Rule());
            	              													}
            	              													setWithLastConsumed(current, "throwingDefined", true, "!");
            	              												
            	            }

            	            }


            	            }

            	            otherlv_88=(Token)match(input,71,FOLLOW_37); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              											newLeafNode(otherlv_88, grammarAccess.getOverridePredicate_1Access().getThrowingKeyword_3_9_1_0_1());
            	              										
            	            }

            	            }


            	            }
            	            break;
            	        case 2 :
            	            // InternalMcmodel.g:3055:10: ( ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) )
            	            {
            	            // InternalMcmodel.g:3055:10: ( ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) )
            	            // InternalMcmodel.g:3056:11: ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) )
            	            {
            	            // InternalMcmodel.g:3056:11: ( (lv_throwingDefined_89_0= 'throwing' ) )
            	            // InternalMcmodel.g:3057:12: (lv_throwingDefined_89_0= 'throwing' )
            	            {
            	            // InternalMcmodel.g:3057:12: (lv_throwingDefined_89_0= 'throwing' )
            	            // InternalMcmodel.g:3058:13: lv_throwingDefined_89_0= 'throwing'
            	            {
            	            lv_throwingDefined_89_0=(Token)match(input,71,FOLLOW_40); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              													newLeafNode(lv_throwingDefined_89_0, grammarAccess.getOverridePredicate_1Access().getThrowingDefinedThrowingKeyword_3_9_1_1_0_0());
            	              												
            	            }
            	            if ( state.backtracking==0 ) {

            	              													if (current==null) {
            	              														current = createModelElement(grammarAccess.getOverridePredicate_1Rule());
            	              													}
            	              													setWithLastConsumed(current, "throwingDefined", true, "throwing");
            	              												
            	            }

            	            }


            	            }

            	            // InternalMcmodel.g:3070:11: ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) )
            	            int alt59=2;
            	            int LA59_0 = input.LA(1);

            	            if ( (LA59_0==62) ) {
            	                alt59=1;
            	            }
            	            else if ( (LA59_0==18||LA59_0==58) ) {
            	                alt59=2;
            	            }
            	            else {
            	                if (state.backtracking>0) {state.failed=true; return current;}
            	                NoViableAltException nvae =
            	                    new NoViableAltException("", 59, 0, input);

            	                throw nvae;
            	            }
            	            switch (alt59) {
            	                case 1 :
            	                    // InternalMcmodel.g:3071:12: (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) )
            	                    {
            	                    // InternalMcmodel.g:3071:12: (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) )
            	                    // InternalMcmodel.g:3072:13: otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' )
            	                    {
            	                    otherlv_90=(Token)match(input,62,FOLLOW_7); if (state.failed) return current;
            	                    if ( state.backtracking==0 ) {

            	                      													newLeafNode(otherlv_90, grammarAccess.getOverridePredicate_1Access().getExclamationMarkEqualsSignKeyword_3_9_1_1_1_0_0());
            	                      												
            	                    }
            	                    // InternalMcmodel.g:3076:13: ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' )
            	                    int alt56=2;
            	                    int LA56_0 = input.LA(1);

            	                    if ( (LA56_0==21) ) {
            	                        alt56=1;
            	                    }
            	                    else if ( (LA56_0==20) ) {
            	                        alt56=2;
            	                    }
            	                    else {
            	                        if (state.backtracking>0) {state.failed=true; return current;}
            	                        NoViableAltException nvae =
            	                            new NoViableAltException("", 56, 0, input);

            	                        throw nvae;
            	                    }
            	                    switch (alt56) {
            	                        case 1 :
            	                            // InternalMcmodel.g:3077:14: ( (lv_throwing_91_0= 'false' ) )
            	                            {
            	                            // InternalMcmodel.g:3077:14: ( (lv_throwing_91_0= 'false' ) )
            	                            // InternalMcmodel.g:3078:15: (lv_throwing_91_0= 'false' )
            	                            {
            	                            // InternalMcmodel.g:3078:15: (lv_throwing_91_0= 'false' )
            	                            // InternalMcmodel.g:3079:16: lv_throwing_91_0= 'false'
            	                            {
            	                            lv_throwing_91_0=(Token)match(input,21,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              																newLeafNode(lv_throwing_91_0, grammarAccess.getOverridePredicate_1Access().getThrowingFalseKeyword_3_9_1_1_1_0_1_0_0());
            	                              															
            	                            }
            	                            if ( state.backtracking==0 ) {

            	                              																if (current==null) {
            	                              																	current = createModelElement(grammarAccess.getOverridePredicate_1Rule());
            	                              																}
            	                              																setWithLastConsumed(current, "throwing", true, "false");
            	                              															
            	                            }

            	                            }


            	                            }


            	                            }
            	                            break;
            	                        case 2 :
            	                            // InternalMcmodel.g:3092:14: otherlv_92= 'true'
            	                            {
            	                            otherlv_92=(Token)match(input,20,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_92, grammarAccess.getOverridePredicate_1Access().getTrueKeyword_3_9_1_1_1_0_1_1());
            	                              													
            	                            }

            	                            }
            	                            break;

            	                    }


            	                    }


            	                    }
            	                    break;
            	                case 2 :
            	                    // InternalMcmodel.g:3099:12: ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) )
            	                    {
            	                    // InternalMcmodel.g:3099:12: ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) )
            	                    // InternalMcmodel.g:3100:13: (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' )
            	                    {
            	                    // InternalMcmodel.g:3100:13: (otherlv_93= '=' | otherlv_94= '==' )
            	                    int alt57=2;
            	                    int LA57_0 = input.LA(1);

            	                    if ( (LA57_0==18) ) {
            	                        alt57=1;
            	                    }
            	                    else if ( (LA57_0==58) ) {
            	                        alt57=2;
            	                    }
            	                    else {
            	                        if (state.backtracking>0) {state.failed=true; return current;}
            	                        NoViableAltException nvae =
            	                            new NoViableAltException("", 57, 0, input);

            	                        throw nvae;
            	                    }
            	                    switch (alt57) {
            	                        case 1 :
            	                            // InternalMcmodel.g:3101:14: otherlv_93= '='
            	                            {
            	                            otherlv_93=(Token)match(input,18,FOLLOW_7); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_93, grammarAccess.getOverridePredicate_1Access().getEqualsSignKeyword_3_9_1_1_1_1_0_0());
            	                              													
            	                            }

            	                            }
            	                            break;
            	                        case 2 :
            	                            // InternalMcmodel.g:3106:14: otherlv_94= '=='
            	                            {
            	                            otherlv_94=(Token)match(input,58,FOLLOW_7); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_94, grammarAccess.getOverridePredicate_1Access().getEqualsSignEqualsSignKeyword_3_9_1_1_1_1_0_1());
            	                              													
            	                            }

            	                            }
            	                            break;

            	                    }

            	                    // InternalMcmodel.g:3111:13: ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' )
            	                    int alt58=2;
            	                    int LA58_0 = input.LA(1);

            	                    if ( (LA58_0==20) ) {
            	                        alt58=1;
            	                    }
            	                    else if ( (LA58_0==21) ) {
            	                        alt58=2;
            	                    }
            	                    else {
            	                        if (state.backtracking>0) {state.failed=true; return current;}
            	                        NoViableAltException nvae =
            	                            new NoViableAltException("", 58, 0, input);

            	                        throw nvae;
            	                    }
            	                    switch (alt58) {
            	                        case 1 :
            	                            // InternalMcmodel.g:3112:14: ( (lv_throwing_95_0= 'true' ) )
            	                            {
            	                            // InternalMcmodel.g:3112:14: ( (lv_throwing_95_0= 'true' ) )
            	                            // InternalMcmodel.g:3113:15: (lv_throwing_95_0= 'true' )
            	                            {
            	                            // InternalMcmodel.g:3113:15: (lv_throwing_95_0= 'true' )
            	                            // InternalMcmodel.g:3114:16: lv_throwing_95_0= 'true'
            	                            {
            	                            lv_throwing_95_0=(Token)match(input,20,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              																newLeafNode(lv_throwing_95_0, grammarAccess.getOverridePredicate_1Access().getThrowingTrueKeyword_3_9_1_1_1_1_1_0_0());
            	                              															
            	                            }
            	                            if ( state.backtracking==0 ) {

            	                              																if (current==null) {
            	                              																	current = createModelElement(grammarAccess.getOverridePredicate_1Rule());
            	                              																}
            	                              																setWithLastConsumed(current, "throwing", true, "true");
            	                              															
            	                            }

            	                            }


            	                            }


            	                            }
            	                            break;
            	                        case 2 :
            	                            // InternalMcmodel.g:3127:14: otherlv_96= 'false'
            	                            {
            	                            otherlv_96=(Token)match(input,21,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_96, grammarAccess.getOverridePredicate_1Access().getFalseKeyword_3_9_1_1_1_1_1_1());
            	                              													
            	                            }

            	                            }
            	                            break;

            	                    }


            	                    }


            	                    }
            	                    break;

            	            }


            	            }


            	            }
            	            break;

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getOverridePredicate_1Access().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 11 :
            	    // InternalMcmodel.g:3142:4: ({...}? => ( ({...}? => (otherlv_97= '&' ( (lv_timeDefined_98_0= 'time' ) ) (otherlv_99= '=' | otherlv_100= '==' ) ( (lv_time_101_0= RULE_PERCENTAGE ) ) ) ) ) )
            	    {
            	    // InternalMcmodel.g:3142:4: ({...}? => ( ({...}? => (otherlv_97= '&' ( (lv_timeDefined_98_0= 'time' ) ) (otherlv_99= '=' | otherlv_100= '==' ) ( (lv_time_101_0= RULE_PERCENTAGE ) ) ) ) ) )
            	    // InternalMcmodel.g:3143:5: {...}? => ( ({...}? => (otherlv_97= '&' ( (lv_timeDefined_98_0= 'time' ) ) (otherlv_99= '=' | otherlv_100= '==' ) ( (lv_time_101_0= RULE_PERCENTAGE ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_1Access().getUnorderedGroup_3(), 10) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_1", "getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_1Access().getUnorderedGroup_3(), 10)");
            	    }
            	    // InternalMcmodel.g:3143:117: ( ({...}? => (otherlv_97= '&' ( (lv_timeDefined_98_0= 'time' ) ) (otherlv_99= '=' | otherlv_100= '==' ) ( (lv_time_101_0= RULE_PERCENTAGE ) ) ) ) )
            	    // InternalMcmodel.g:3144:6: ({...}? => (otherlv_97= '&' ( (lv_timeDefined_98_0= 'time' ) ) (otherlv_99= '=' | otherlv_100= '==' ) ( (lv_time_101_0= RULE_PERCENTAGE ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getOverridePredicate_1Access().getUnorderedGroup_3(), 10);
            	    // InternalMcmodel.g:3147:9: ({...}? => (otherlv_97= '&' ( (lv_timeDefined_98_0= 'time' ) ) (otherlv_99= '=' | otherlv_100= '==' ) ( (lv_time_101_0= RULE_PERCENTAGE ) ) ) )
            	    // InternalMcmodel.g:3147:10: {...}? => (otherlv_97= '&' ( (lv_timeDefined_98_0= 'time' ) ) (otherlv_99= '=' | otherlv_100= '==' ) ( (lv_time_101_0= RULE_PERCENTAGE ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_1", "true");
            	    }
            	    // InternalMcmodel.g:3147:19: (otherlv_97= '&' ( (lv_timeDefined_98_0= 'time' ) ) (otherlv_99= '=' | otherlv_100= '==' ) ( (lv_time_101_0= RULE_PERCENTAGE ) ) )
            	    // InternalMcmodel.g:3147:20: otherlv_97= '&' ( (lv_timeDefined_98_0= 'time' ) ) (otherlv_99= '=' | otherlv_100= '==' ) ( (lv_time_101_0= RULE_PERCENTAGE ) )
            	    {
            	    otherlv_97=(Token)match(input,59,FOLLOW_56); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_97, grammarAccess.getOverridePredicate_1Access().getAmpersandKeyword_3_10_0());
            	      								
            	    }
            	    // InternalMcmodel.g:3151:9: ( (lv_timeDefined_98_0= 'time' ) )
            	    // InternalMcmodel.g:3152:10: (lv_timeDefined_98_0= 'time' )
            	    {
            	    // InternalMcmodel.g:3152:10: (lv_timeDefined_98_0= 'time' )
            	    // InternalMcmodel.g:3153:11: lv_timeDefined_98_0= 'time'
            	    {
            	    lv_timeDefined_98_0=(Token)match(input,72,FOLLOW_35); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											newLeafNode(lv_timeDefined_98_0, grammarAccess.getOverridePredicate_1Access().getTimeDefinedTimeKeyword_3_10_1_0());
            	      										
            	    }
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElement(grammarAccess.getOverridePredicate_1Rule());
            	      											}
            	      											setWithLastConsumed(current, "timeDefined", true, "time");
            	      										
            	    }

            	    }


            	    }

            	    // InternalMcmodel.g:3165:9: (otherlv_99= '=' | otherlv_100= '==' )
            	    int alt61=2;
            	    int LA61_0 = input.LA(1);

            	    if ( (LA61_0==18) ) {
            	        alt61=1;
            	    }
            	    else if ( (LA61_0==58) ) {
            	        alt61=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 61, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt61) {
            	        case 1 :
            	            // InternalMcmodel.g:3166:10: otherlv_99= '='
            	            {
            	            otherlv_99=(Token)match(input,18,FOLLOW_36); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(otherlv_99, grammarAccess.getOverridePredicate_1Access().getEqualsSignKeyword_3_10_2_0());
            	              									
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalMcmodel.g:3171:10: otherlv_100= '=='
            	            {
            	            otherlv_100=(Token)match(input,58,FOLLOW_36); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(otherlv_100, grammarAccess.getOverridePredicate_1Access().getEqualsSignEqualsSignKeyword_3_10_2_1());
            	              									
            	            }

            	            }
            	            break;

            	    }

            	    // InternalMcmodel.g:3176:9: ( (lv_time_101_0= RULE_PERCENTAGE ) )
            	    // InternalMcmodel.g:3177:10: (lv_time_101_0= RULE_PERCENTAGE )
            	    {
            	    // InternalMcmodel.g:3177:10: (lv_time_101_0= RULE_PERCENTAGE )
            	    // InternalMcmodel.g:3178:11: lv_time_101_0= RULE_PERCENTAGE
            	    {
            	    lv_time_101_0=(Token)match(input,RULE_PERCENTAGE,FOLLOW_37); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											newLeafNode(lv_time_101_0, grammarAccess.getOverridePredicate_1Access().getTimePERCENTAGETerminalRuleCall_3_10_3_0());
            	      										
            	    }
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElement(grammarAccess.getOverridePredicate_1Rule());
            	      											}
            	      											setWithLastConsumed(
            	      												current,
            	      												"time",
            	      												lv_time_101_0,
            	      												"com.raptor.mcmodel.Mcmodel.PERCENTAGE");
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getOverridePredicate_1Access().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 12 :
            	    // InternalMcmodel.g:3200:4: ({...}? => ( ({...}? => (otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) ) ) ) ) )
            	    {
            	    // InternalMcmodel.g:3200:4: ({...}? => ( ({...}? => (otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) ) ) ) ) )
            	    // InternalMcmodel.g:3201:5: {...}? => ( ({...}? => (otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_1Access().getUnorderedGroup_3(), 11) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_1", "getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_1Access().getUnorderedGroup_3(), 11)");
            	    }
            	    // InternalMcmodel.g:3201:117: ( ({...}? => (otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) ) ) ) )
            	    // InternalMcmodel.g:3202:6: ({...}? => (otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getOverridePredicate_1Access().getUnorderedGroup_3(), 11);
            	    // InternalMcmodel.g:3205:9: ({...}? => (otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) ) ) )
            	    // InternalMcmodel.g:3205:10: {...}? => (otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_1", "true");
            	    }
            	    // InternalMcmodel.g:3205:19: (otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) ) )
            	    // InternalMcmodel.g:3205:20: otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) )
            	    {
            	    otherlv_102=(Token)match(input,59,FOLLOW_57); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_102, grammarAccess.getOverridePredicate_1Access().getAmpersandKeyword_3_11_0());
            	      								
            	    }
            	    // InternalMcmodel.g:3209:9: ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) )
            	    // InternalMcmodel.g:3210:10: (lv_customModelDataDefined_103_0= 'custom_model_data' )
            	    {
            	    // InternalMcmodel.g:3210:10: (lv_customModelDataDefined_103_0= 'custom_model_data' )
            	    // InternalMcmodel.g:3211:11: lv_customModelDataDefined_103_0= 'custom_model_data'
            	    {
            	    lv_customModelDataDefined_103_0=(Token)match(input,73,FOLLOW_35); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											newLeafNode(lv_customModelDataDefined_103_0, grammarAccess.getOverridePredicate_1Access().getCustomModelDataDefinedCustom_model_dataKeyword_3_11_1_0());
            	      										
            	    }
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElement(grammarAccess.getOverridePredicate_1Rule());
            	      											}
            	      											setWithLastConsumed(current, "customModelDataDefined", true, "custom_model_data");
            	      										
            	    }

            	    }


            	    }

            	    // InternalMcmodel.g:3223:9: (otherlv_104= '=' | otherlv_105= '==' )
            	    int alt62=2;
            	    int LA62_0 = input.LA(1);

            	    if ( (LA62_0==18) ) {
            	        alt62=1;
            	    }
            	    else if ( (LA62_0==58) ) {
            	        alt62=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 62, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt62) {
            	        case 1 :
            	            // InternalMcmodel.g:3224:10: otherlv_104= '='
            	            {
            	            otherlv_104=(Token)match(input,18,FOLLOW_29); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(otherlv_104, grammarAccess.getOverridePredicate_1Access().getEqualsSignKeyword_3_11_2_0());
            	              									
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalMcmodel.g:3229:10: otherlv_105= '=='
            	            {
            	            otherlv_105=(Token)match(input,58,FOLLOW_29); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(otherlv_105, grammarAccess.getOverridePredicate_1Access().getEqualsSignEqualsSignKeyword_3_11_2_1());
            	              									
            	            }

            	            }
            	            break;

            	    }

            	    // InternalMcmodel.g:3234:9: ( (lv_customModelData_106_0= ruleLONG ) )
            	    // InternalMcmodel.g:3235:10: (lv_customModelData_106_0= ruleLONG )
            	    {
            	    // InternalMcmodel.g:3235:10: (lv_customModelData_106_0= ruleLONG )
            	    // InternalMcmodel.g:3236:11: lv_customModelData_106_0= ruleLONG
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getOverridePredicate_1Access().getCustomModelDataLONGParserRuleCall_3_11_3_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_37);
            	    lv_customModelData_106_0=ruleLONG();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getOverridePredicate_1Rule());
            	      											}
            	      											set(
            	      												current,
            	      												"customModelData",
            	      												lv_customModelData_106_0,
            	      												"com.raptor.mcmodel.Mcmodel.LONG");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getOverridePredicate_1Access().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop63;
                }
            } while (true);


            }


            }

            getUnorderedGroupHelper().leave(grammarAccess.getOverridePredicate_1Access().getUnorderedGroup_3());

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOverridePredicate_1"


    // $ANTLR start "entryRuleOverridePredicate_2"
    // InternalMcmodel.g:3270:1: entryRuleOverridePredicate_2 returns [EObject current=null] : iv_ruleOverridePredicate_2= ruleOverridePredicate_2 EOF ;
    public final EObject entryRuleOverridePredicate_2() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleOverridePredicate_2 = null;


        try {
            // InternalMcmodel.g:3270:60: (iv_ruleOverridePredicate_2= ruleOverridePredicate_2 EOF )
            // InternalMcmodel.g:3271:2: iv_ruleOverridePredicate_2= ruleOverridePredicate_2 EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOverridePredicate_2Rule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOverridePredicate_2=ruleOverridePredicate_2();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOverridePredicate_2; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOverridePredicate_2"


    // $ANTLR start "ruleOverridePredicate_2"
    // InternalMcmodel.g:3277:1: ruleOverridePredicate_2 returns [EObject current=null] : ( ( ( ( (lv_blockingDefined_0_0= '!' ) ) otherlv_1= 'blocking' ) | ( ( (lv_blockingDefined_2_0= 'blocking' ) ) ( (otherlv_3= '!=' ( ( (lv_blocking_4_0= 'false' ) ) | otherlv_5= 'true' ) ) | ( (otherlv_6= '=' | otherlv_7= '==' ) ( ( (lv_blocking_8_0= 'true' ) ) | otherlv_9= 'false' ) ) ) ) ) ( ( ( ( ({...}? => ( ({...}? => (otherlv_11= '&' ( (lv_angleDefined_12_0= 'angle' ) ) (otherlv_13= '=' | otherlv_14= '==' ) ( (lv_angle_15_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= '&' ( ( ( (lv_brokenDefined_17_0= '!' ) ) otherlv_18= 'broken' ) | ( ( (lv_brokenDefined_19_0= 'broken' ) ) ( (otherlv_20= '!=' ( ( (lv_broken_21_0= 'false' ) ) | otherlv_22= 'true' ) ) | ( (otherlv_23= '=' | otherlv_24= '==' ) ( ( (lv_broken_25_0= 'true' ) ) | otherlv_26= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= '&' ( ( ( (lv_castDefined_28_0= '!' ) ) otherlv_29= 'cast' ) | ( ( (lv_castDefined_30_0= 'cast' ) ) ( (otherlv_31= '!=' ( ( (lv_cast_32_0= 'false' ) ) | otherlv_33= 'true' ) ) | ( (otherlv_34= '=' | otherlv_35= '==' ) ( ( (lv_cast_36_0= 'true' ) ) | otherlv_37= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_38= '&' ( (lv_cooldownDefined_39_0= 'cooldown' ) ) (otherlv_40= '=' | otherlv_41= '==' ) ( (lv_cooldown_42_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= '&' ( (lv_damageDefined_44_0= 'damage' ) ) (otherlv_45= '=' | otherlv_46= '==' ) ( (lv_damage_47_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_48= '&' ( ( ( (lv_damagedDefined_49_0= '!' ) ) otherlv_50= 'damaged' ) | ( ( (lv_damagedDefined_51_0= 'damaged' ) ) ( (otherlv_52= '!=' ( ( (lv_damaged_53_0= 'false' ) ) | otherlv_54= 'true' ) ) | ( (otherlv_55= '=' | otherlv_56= '==' ) ( ( (lv_damaged_57_0= 'true' ) ) | otherlv_58= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_59= '&' ( ( ( (lv_lefthandedDefined_60_0= '!' ) ) otherlv_61= 'lefthanded' ) | ( ( (lv_lefthandedDefined_62_0= 'lefthanded' ) ) ( (otherlv_63= '!=' ( ( (lv_lefthanded_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_lefthanded_68_0= 'true' ) ) | otherlv_69= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_70= '&' ( (lv_pullDefined_71_0= 'pull' ) ) (otherlv_72= '=' | otherlv_73= '==' ) ( (lv_pull_74_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_75= '&' ( ( ( (lv_pullingDefined_76_0= '!' ) ) otherlv_77= 'pulling' ) | ( ( (lv_pullingDefined_78_0= 'pulling' ) ) ( (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) ) | ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_86= '&' ( ( ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing' ) | ( ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_97= '&' ( (lv_timeDefined_98_0= 'time' ) ) (otherlv_99= '=' | otherlv_100= '==' ) ( (lv_time_101_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) ) ) ) ) ) )* ) ) ) ) ;
    public final EObject ruleOverridePredicate_2() throws RecognitionException {
        EObject current = null;

        Token lv_blockingDefined_0_0=null;
        Token otherlv_1=null;
        Token lv_blockingDefined_2_0=null;
        Token otherlv_3=null;
        Token lv_blocking_4_0=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        Token lv_blocking_8_0=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        Token lv_angleDefined_12_0=null;
        Token otherlv_13=null;
        Token otherlv_14=null;
        Token lv_angle_15_0=null;
        Token otherlv_16=null;
        Token lv_brokenDefined_17_0=null;
        Token otherlv_18=null;
        Token lv_brokenDefined_19_0=null;
        Token otherlv_20=null;
        Token lv_broken_21_0=null;
        Token otherlv_22=null;
        Token otherlv_23=null;
        Token otherlv_24=null;
        Token lv_broken_25_0=null;
        Token otherlv_26=null;
        Token otherlv_27=null;
        Token lv_castDefined_28_0=null;
        Token otherlv_29=null;
        Token lv_castDefined_30_0=null;
        Token otherlv_31=null;
        Token lv_cast_32_0=null;
        Token otherlv_33=null;
        Token otherlv_34=null;
        Token otherlv_35=null;
        Token lv_cast_36_0=null;
        Token otherlv_37=null;
        Token otherlv_38=null;
        Token lv_cooldownDefined_39_0=null;
        Token otherlv_40=null;
        Token otherlv_41=null;
        Token lv_cooldown_42_0=null;
        Token otherlv_43=null;
        Token lv_damageDefined_44_0=null;
        Token otherlv_45=null;
        Token otherlv_46=null;
        Token lv_damage_47_0=null;
        Token otherlv_48=null;
        Token lv_damagedDefined_49_0=null;
        Token otherlv_50=null;
        Token lv_damagedDefined_51_0=null;
        Token otherlv_52=null;
        Token lv_damaged_53_0=null;
        Token otherlv_54=null;
        Token otherlv_55=null;
        Token otherlv_56=null;
        Token lv_damaged_57_0=null;
        Token otherlv_58=null;
        Token otherlv_59=null;
        Token lv_lefthandedDefined_60_0=null;
        Token otherlv_61=null;
        Token lv_lefthandedDefined_62_0=null;
        Token otherlv_63=null;
        Token lv_lefthanded_64_0=null;
        Token otherlv_65=null;
        Token otherlv_66=null;
        Token otherlv_67=null;
        Token lv_lefthanded_68_0=null;
        Token otherlv_69=null;
        Token otherlv_70=null;
        Token lv_pullDefined_71_0=null;
        Token otherlv_72=null;
        Token otherlv_73=null;
        Token lv_pull_74_0=null;
        Token otherlv_75=null;
        Token lv_pullingDefined_76_0=null;
        Token otherlv_77=null;
        Token lv_pullingDefined_78_0=null;
        Token otherlv_79=null;
        Token lv_pulling_80_0=null;
        Token otherlv_81=null;
        Token otherlv_82=null;
        Token otherlv_83=null;
        Token lv_pulling_84_0=null;
        Token otherlv_85=null;
        Token otherlv_86=null;
        Token lv_throwingDefined_87_0=null;
        Token otherlv_88=null;
        Token lv_throwingDefined_89_0=null;
        Token otherlv_90=null;
        Token lv_throwing_91_0=null;
        Token otherlv_92=null;
        Token otherlv_93=null;
        Token otherlv_94=null;
        Token lv_throwing_95_0=null;
        Token otherlv_96=null;
        Token otherlv_97=null;
        Token lv_timeDefined_98_0=null;
        Token otherlv_99=null;
        Token otherlv_100=null;
        Token lv_time_101_0=null;
        Token otherlv_102=null;
        Token lv_customModelDataDefined_103_0=null;
        Token otherlv_104=null;
        Token otherlv_105=null;
        AntlrDatatypeRuleToken lv_customModelData_106_0 = null;



        	enterRule();

        try {
            // InternalMcmodel.g:3283:2: ( ( ( ( ( (lv_blockingDefined_0_0= '!' ) ) otherlv_1= 'blocking' ) | ( ( (lv_blockingDefined_2_0= 'blocking' ) ) ( (otherlv_3= '!=' ( ( (lv_blocking_4_0= 'false' ) ) | otherlv_5= 'true' ) ) | ( (otherlv_6= '=' | otherlv_7= '==' ) ( ( (lv_blocking_8_0= 'true' ) ) | otherlv_9= 'false' ) ) ) ) ) ( ( ( ( ({...}? => ( ({...}? => (otherlv_11= '&' ( (lv_angleDefined_12_0= 'angle' ) ) (otherlv_13= '=' | otherlv_14= '==' ) ( (lv_angle_15_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= '&' ( ( ( (lv_brokenDefined_17_0= '!' ) ) otherlv_18= 'broken' ) | ( ( (lv_brokenDefined_19_0= 'broken' ) ) ( (otherlv_20= '!=' ( ( (lv_broken_21_0= 'false' ) ) | otherlv_22= 'true' ) ) | ( (otherlv_23= '=' | otherlv_24= '==' ) ( ( (lv_broken_25_0= 'true' ) ) | otherlv_26= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= '&' ( ( ( (lv_castDefined_28_0= '!' ) ) otherlv_29= 'cast' ) | ( ( (lv_castDefined_30_0= 'cast' ) ) ( (otherlv_31= '!=' ( ( (lv_cast_32_0= 'false' ) ) | otherlv_33= 'true' ) ) | ( (otherlv_34= '=' | otherlv_35= '==' ) ( ( (lv_cast_36_0= 'true' ) ) | otherlv_37= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_38= '&' ( (lv_cooldownDefined_39_0= 'cooldown' ) ) (otherlv_40= '=' | otherlv_41= '==' ) ( (lv_cooldown_42_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= '&' ( (lv_damageDefined_44_0= 'damage' ) ) (otherlv_45= '=' | otherlv_46= '==' ) ( (lv_damage_47_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_48= '&' ( ( ( (lv_damagedDefined_49_0= '!' ) ) otherlv_50= 'damaged' ) | ( ( (lv_damagedDefined_51_0= 'damaged' ) ) ( (otherlv_52= '!=' ( ( (lv_damaged_53_0= 'false' ) ) | otherlv_54= 'true' ) ) | ( (otherlv_55= '=' | otherlv_56= '==' ) ( ( (lv_damaged_57_0= 'true' ) ) | otherlv_58= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_59= '&' ( ( ( (lv_lefthandedDefined_60_0= '!' ) ) otherlv_61= 'lefthanded' ) | ( ( (lv_lefthandedDefined_62_0= 'lefthanded' ) ) ( (otherlv_63= '!=' ( ( (lv_lefthanded_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_lefthanded_68_0= 'true' ) ) | otherlv_69= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_70= '&' ( (lv_pullDefined_71_0= 'pull' ) ) (otherlv_72= '=' | otherlv_73= '==' ) ( (lv_pull_74_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_75= '&' ( ( ( (lv_pullingDefined_76_0= '!' ) ) otherlv_77= 'pulling' ) | ( ( (lv_pullingDefined_78_0= 'pulling' ) ) ( (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) ) | ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_86= '&' ( ( ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing' ) | ( ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_97= '&' ( (lv_timeDefined_98_0= 'time' ) ) (otherlv_99= '=' | otherlv_100= '==' ) ( (lv_time_101_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) ) ) ) ) ) )* ) ) ) ) )
            // InternalMcmodel.g:3284:2: ( ( ( ( (lv_blockingDefined_0_0= '!' ) ) otherlv_1= 'blocking' ) | ( ( (lv_blockingDefined_2_0= 'blocking' ) ) ( (otherlv_3= '!=' ( ( (lv_blocking_4_0= 'false' ) ) | otherlv_5= 'true' ) ) | ( (otherlv_6= '=' | otherlv_7= '==' ) ( ( (lv_blocking_8_0= 'true' ) ) | otherlv_9= 'false' ) ) ) ) ) ( ( ( ( ({...}? => ( ({...}? => (otherlv_11= '&' ( (lv_angleDefined_12_0= 'angle' ) ) (otherlv_13= '=' | otherlv_14= '==' ) ( (lv_angle_15_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= '&' ( ( ( (lv_brokenDefined_17_0= '!' ) ) otherlv_18= 'broken' ) | ( ( (lv_brokenDefined_19_0= 'broken' ) ) ( (otherlv_20= '!=' ( ( (lv_broken_21_0= 'false' ) ) | otherlv_22= 'true' ) ) | ( (otherlv_23= '=' | otherlv_24= '==' ) ( ( (lv_broken_25_0= 'true' ) ) | otherlv_26= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= '&' ( ( ( (lv_castDefined_28_0= '!' ) ) otherlv_29= 'cast' ) | ( ( (lv_castDefined_30_0= 'cast' ) ) ( (otherlv_31= '!=' ( ( (lv_cast_32_0= 'false' ) ) | otherlv_33= 'true' ) ) | ( (otherlv_34= '=' | otherlv_35= '==' ) ( ( (lv_cast_36_0= 'true' ) ) | otherlv_37= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_38= '&' ( (lv_cooldownDefined_39_0= 'cooldown' ) ) (otherlv_40= '=' | otherlv_41= '==' ) ( (lv_cooldown_42_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= '&' ( (lv_damageDefined_44_0= 'damage' ) ) (otherlv_45= '=' | otherlv_46= '==' ) ( (lv_damage_47_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_48= '&' ( ( ( (lv_damagedDefined_49_0= '!' ) ) otherlv_50= 'damaged' ) | ( ( (lv_damagedDefined_51_0= 'damaged' ) ) ( (otherlv_52= '!=' ( ( (lv_damaged_53_0= 'false' ) ) | otherlv_54= 'true' ) ) | ( (otherlv_55= '=' | otherlv_56= '==' ) ( ( (lv_damaged_57_0= 'true' ) ) | otherlv_58= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_59= '&' ( ( ( (lv_lefthandedDefined_60_0= '!' ) ) otherlv_61= 'lefthanded' ) | ( ( (lv_lefthandedDefined_62_0= 'lefthanded' ) ) ( (otherlv_63= '!=' ( ( (lv_lefthanded_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_lefthanded_68_0= 'true' ) ) | otherlv_69= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_70= '&' ( (lv_pullDefined_71_0= 'pull' ) ) (otherlv_72= '=' | otherlv_73= '==' ) ( (lv_pull_74_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_75= '&' ( ( ( (lv_pullingDefined_76_0= '!' ) ) otherlv_77= 'pulling' ) | ( ( (lv_pullingDefined_78_0= 'pulling' ) ) ( (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) ) | ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_86= '&' ( ( ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing' ) | ( ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_97= '&' ( (lv_timeDefined_98_0= 'time' ) ) (otherlv_99= '=' | otherlv_100= '==' ) ( (lv_time_101_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) ) ) ) ) ) )* ) ) ) )
            {
            // InternalMcmodel.g:3284:2: ( ( ( ( (lv_blockingDefined_0_0= '!' ) ) otherlv_1= 'blocking' ) | ( ( (lv_blockingDefined_2_0= 'blocking' ) ) ( (otherlv_3= '!=' ( ( (lv_blocking_4_0= 'false' ) ) | otherlv_5= 'true' ) ) | ( (otherlv_6= '=' | otherlv_7= '==' ) ( ( (lv_blocking_8_0= 'true' ) ) | otherlv_9= 'false' ) ) ) ) ) ( ( ( ( ({...}? => ( ({...}? => (otherlv_11= '&' ( (lv_angleDefined_12_0= 'angle' ) ) (otherlv_13= '=' | otherlv_14= '==' ) ( (lv_angle_15_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= '&' ( ( ( (lv_brokenDefined_17_0= '!' ) ) otherlv_18= 'broken' ) | ( ( (lv_brokenDefined_19_0= 'broken' ) ) ( (otherlv_20= '!=' ( ( (lv_broken_21_0= 'false' ) ) | otherlv_22= 'true' ) ) | ( (otherlv_23= '=' | otherlv_24= '==' ) ( ( (lv_broken_25_0= 'true' ) ) | otherlv_26= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= '&' ( ( ( (lv_castDefined_28_0= '!' ) ) otherlv_29= 'cast' ) | ( ( (lv_castDefined_30_0= 'cast' ) ) ( (otherlv_31= '!=' ( ( (lv_cast_32_0= 'false' ) ) | otherlv_33= 'true' ) ) | ( (otherlv_34= '=' | otherlv_35= '==' ) ( ( (lv_cast_36_0= 'true' ) ) | otherlv_37= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_38= '&' ( (lv_cooldownDefined_39_0= 'cooldown' ) ) (otherlv_40= '=' | otherlv_41= '==' ) ( (lv_cooldown_42_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= '&' ( (lv_damageDefined_44_0= 'damage' ) ) (otherlv_45= '=' | otherlv_46= '==' ) ( (lv_damage_47_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_48= '&' ( ( ( (lv_damagedDefined_49_0= '!' ) ) otherlv_50= 'damaged' ) | ( ( (lv_damagedDefined_51_0= 'damaged' ) ) ( (otherlv_52= '!=' ( ( (lv_damaged_53_0= 'false' ) ) | otherlv_54= 'true' ) ) | ( (otherlv_55= '=' | otherlv_56= '==' ) ( ( (lv_damaged_57_0= 'true' ) ) | otherlv_58= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_59= '&' ( ( ( (lv_lefthandedDefined_60_0= '!' ) ) otherlv_61= 'lefthanded' ) | ( ( (lv_lefthandedDefined_62_0= 'lefthanded' ) ) ( (otherlv_63= '!=' ( ( (lv_lefthanded_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_lefthanded_68_0= 'true' ) ) | otherlv_69= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_70= '&' ( (lv_pullDefined_71_0= 'pull' ) ) (otherlv_72= '=' | otherlv_73= '==' ) ( (lv_pull_74_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_75= '&' ( ( ( (lv_pullingDefined_76_0= '!' ) ) otherlv_77= 'pulling' ) | ( ( (lv_pullingDefined_78_0= 'pulling' ) ) ( (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) ) | ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_86= '&' ( ( ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing' ) | ( ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_97= '&' ( (lv_timeDefined_98_0= 'time' ) ) (otherlv_99= '=' | otherlv_100= '==' ) ( (lv_time_101_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) ) ) ) ) ) )* ) ) ) )
            // InternalMcmodel.g:3285:3: ( ( ( (lv_blockingDefined_0_0= '!' ) ) otherlv_1= 'blocking' ) | ( ( (lv_blockingDefined_2_0= 'blocking' ) ) ( (otherlv_3= '!=' ( ( (lv_blocking_4_0= 'false' ) ) | otherlv_5= 'true' ) ) | ( (otherlv_6= '=' | otherlv_7= '==' ) ( ( (lv_blocking_8_0= 'true' ) ) | otherlv_9= 'false' ) ) ) ) ) ( ( ( ( ({...}? => ( ({...}? => (otherlv_11= '&' ( (lv_angleDefined_12_0= 'angle' ) ) (otherlv_13= '=' | otherlv_14= '==' ) ( (lv_angle_15_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= '&' ( ( ( (lv_brokenDefined_17_0= '!' ) ) otherlv_18= 'broken' ) | ( ( (lv_brokenDefined_19_0= 'broken' ) ) ( (otherlv_20= '!=' ( ( (lv_broken_21_0= 'false' ) ) | otherlv_22= 'true' ) ) | ( (otherlv_23= '=' | otherlv_24= '==' ) ( ( (lv_broken_25_0= 'true' ) ) | otherlv_26= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= '&' ( ( ( (lv_castDefined_28_0= '!' ) ) otherlv_29= 'cast' ) | ( ( (lv_castDefined_30_0= 'cast' ) ) ( (otherlv_31= '!=' ( ( (lv_cast_32_0= 'false' ) ) | otherlv_33= 'true' ) ) | ( (otherlv_34= '=' | otherlv_35= '==' ) ( ( (lv_cast_36_0= 'true' ) ) | otherlv_37= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_38= '&' ( (lv_cooldownDefined_39_0= 'cooldown' ) ) (otherlv_40= '=' | otherlv_41= '==' ) ( (lv_cooldown_42_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= '&' ( (lv_damageDefined_44_0= 'damage' ) ) (otherlv_45= '=' | otherlv_46= '==' ) ( (lv_damage_47_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_48= '&' ( ( ( (lv_damagedDefined_49_0= '!' ) ) otherlv_50= 'damaged' ) | ( ( (lv_damagedDefined_51_0= 'damaged' ) ) ( (otherlv_52= '!=' ( ( (lv_damaged_53_0= 'false' ) ) | otherlv_54= 'true' ) ) | ( (otherlv_55= '=' | otherlv_56= '==' ) ( ( (lv_damaged_57_0= 'true' ) ) | otherlv_58= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_59= '&' ( ( ( (lv_lefthandedDefined_60_0= '!' ) ) otherlv_61= 'lefthanded' ) | ( ( (lv_lefthandedDefined_62_0= 'lefthanded' ) ) ( (otherlv_63= '!=' ( ( (lv_lefthanded_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_lefthanded_68_0= 'true' ) ) | otherlv_69= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_70= '&' ( (lv_pullDefined_71_0= 'pull' ) ) (otherlv_72= '=' | otherlv_73= '==' ) ( (lv_pull_74_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_75= '&' ( ( ( (lv_pullingDefined_76_0= '!' ) ) otherlv_77= 'pulling' ) | ( ( (lv_pullingDefined_78_0= 'pulling' ) ) ( (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) ) | ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_86= '&' ( ( ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing' ) | ( ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_97= '&' ( (lv_timeDefined_98_0= 'time' ) ) (otherlv_99= '=' | otherlv_100= '==' ) ( (lv_time_101_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) ) ) ) ) ) )* ) ) )
            {
            // InternalMcmodel.g:3285:3: ( ( ( (lv_blockingDefined_0_0= '!' ) ) otherlv_1= 'blocking' ) | ( ( (lv_blockingDefined_2_0= 'blocking' ) ) ( (otherlv_3= '!=' ( ( (lv_blocking_4_0= 'false' ) ) | otherlv_5= 'true' ) ) | ( (otherlv_6= '=' | otherlv_7= '==' ) ( ( (lv_blocking_8_0= 'true' ) ) | otherlv_9= 'false' ) ) ) ) )
            int alt68=2;
            int LA68_0 = input.LA(1);

            if ( (LA68_0==60) ) {
                alt68=1;
            }
            else if ( (LA68_0==61) ) {
                alt68=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 68, 0, input);

                throw nvae;
            }
            switch (alt68) {
                case 1 :
                    // InternalMcmodel.g:3286:4: ( ( (lv_blockingDefined_0_0= '!' ) ) otherlv_1= 'blocking' )
                    {
                    // InternalMcmodel.g:3286:4: ( ( (lv_blockingDefined_0_0= '!' ) ) otherlv_1= 'blocking' )
                    // InternalMcmodel.g:3287:5: ( (lv_blockingDefined_0_0= '!' ) ) otherlv_1= 'blocking'
                    {
                    // InternalMcmodel.g:3287:5: ( (lv_blockingDefined_0_0= '!' ) )
                    // InternalMcmodel.g:3288:6: (lv_blockingDefined_0_0= '!' )
                    {
                    // InternalMcmodel.g:3288:6: (lv_blockingDefined_0_0= '!' )
                    // InternalMcmodel.g:3289:7: lv_blockingDefined_0_0= '!'
                    {
                    lv_blockingDefined_0_0=(Token)match(input,60,FOLLOW_39); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							newLeafNode(lv_blockingDefined_0_0, grammarAccess.getOverridePredicate_2Access().getBlockingDefinedExclamationMarkKeyword_0_0_0_0());
                      						
                    }
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElement(grammarAccess.getOverridePredicate_2Rule());
                      							}
                      							setWithLastConsumed(current, "blockingDefined", true, "!");
                      						
                    }

                    }


                    }

                    otherlv_1=(Token)match(input,61,FOLLOW_37); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_1, grammarAccess.getOverridePredicate_2Access().getBlockingKeyword_0_0_1());
                      				
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalMcmodel.g:3307:4: ( ( (lv_blockingDefined_2_0= 'blocking' ) ) ( (otherlv_3= '!=' ( ( (lv_blocking_4_0= 'false' ) ) | otherlv_5= 'true' ) ) | ( (otherlv_6= '=' | otherlv_7= '==' ) ( ( (lv_blocking_8_0= 'true' ) ) | otherlv_9= 'false' ) ) ) )
                    {
                    // InternalMcmodel.g:3307:4: ( ( (lv_blockingDefined_2_0= 'blocking' ) ) ( (otherlv_3= '!=' ( ( (lv_blocking_4_0= 'false' ) ) | otherlv_5= 'true' ) ) | ( (otherlv_6= '=' | otherlv_7= '==' ) ( ( (lv_blocking_8_0= 'true' ) ) | otherlv_9= 'false' ) ) ) )
                    // InternalMcmodel.g:3308:5: ( (lv_blockingDefined_2_0= 'blocking' ) ) ( (otherlv_3= '!=' ( ( (lv_blocking_4_0= 'false' ) ) | otherlv_5= 'true' ) ) | ( (otherlv_6= '=' | otherlv_7= '==' ) ( ( (lv_blocking_8_0= 'true' ) ) | otherlv_9= 'false' ) ) )
                    {
                    // InternalMcmodel.g:3308:5: ( (lv_blockingDefined_2_0= 'blocking' ) )
                    // InternalMcmodel.g:3309:6: (lv_blockingDefined_2_0= 'blocking' )
                    {
                    // InternalMcmodel.g:3309:6: (lv_blockingDefined_2_0= 'blocking' )
                    // InternalMcmodel.g:3310:7: lv_blockingDefined_2_0= 'blocking'
                    {
                    lv_blockingDefined_2_0=(Token)match(input,61,FOLLOW_40); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							newLeafNode(lv_blockingDefined_2_0, grammarAccess.getOverridePredicate_2Access().getBlockingDefinedBlockingKeyword_0_1_0_0());
                      						
                    }
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElement(grammarAccess.getOverridePredicate_2Rule());
                      							}
                      							setWithLastConsumed(current, "blockingDefined", true, "blocking");
                      						
                    }

                    }


                    }

                    // InternalMcmodel.g:3322:5: ( (otherlv_3= '!=' ( ( (lv_blocking_4_0= 'false' ) ) | otherlv_5= 'true' ) ) | ( (otherlv_6= '=' | otherlv_7= '==' ) ( ( (lv_blocking_8_0= 'true' ) ) | otherlv_9= 'false' ) ) )
                    int alt67=2;
                    int LA67_0 = input.LA(1);

                    if ( (LA67_0==62) ) {
                        alt67=1;
                    }
                    else if ( (LA67_0==18||LA67_0==58) ) {
                        alt67=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 67, 0, input);

                        throw nvae;
                    }
                    switch (alt67) {
                        case 1 :
                            // InternalMcmodel.g:3323:6: (otherlv_3= '!=' ( ( (lv_blocking_4_0= 'false' ) ) | otherlv_5= 'true' ) )
                            {
                            // InternalMcmodel.g:3323:6: (otherlv_3= '!=' ( ( (lv_blocking_4_0= 'false' ) ) | otherlv_5= 'true' ) )
                            // InternalMcmodel.g:3324:7: otherlv_3= '!=' ( ( (lv_blocking_4_0= 'false' ) ) | otherlv_5= 'true' )
                            {
                            otherlv_3=(Token)match(input,62,FOLLOW_7); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(otherlv_3, grammarAccess.getOverridePredicate_2Access().getExclamationMarkEqualsSignKeyword_0_1_1_0_0());
                              						
                            }
                            // InternalMcmodel.g:3328:7: ( ( (lv_blocking_4_0= 'false' ) ) | otherlv_5= 'true' )
                            int alt64=2;
                            int LA64_0 = input.LA(1);

                            if ( (LA64_0==21) ) {
                                alt64=1;
                            }
                            else if ( (LA64_0==20) ) {
                                alt64=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 64, 0, input);

                                throw nvae;
                            }
                            switch (alt64) {
                                case 1 :
                                    // InternalMcmodel.g:3329:8: ( (lv_blocking_4_0= 'false' ) )
                                    {
                                    // InternalMcmodel.g:3329:8: ( (lv_blocking_4_0= 'false' ) )
                                    // InternalMcmodel.g:3330:9: (lv_blocking_4_0= 'false' )
                                    {
                                    // InternalMcmodel.g:3330:9: (lv_blocking_4_0= 'false' )
                                    // InternalMcmodel.g:3331:10: lv_blocking_4_0= 'false'
                                    {
                                    lv_blocking_4_0=(Token)match(input,21,FOLLOW_37); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      										newLeafNode(lv_blocking_4_0, grammarAccess.getOverridePredicate_2Access().getBlockingFalseKeyword_0_1_1_0_1_0_0());
                                      									
                                    }
                                    if ( state.backtracking==0 ) {

                                      										if (current==null) {
                                      											current = createModelElement(grammarAccess.getOverridePredicate_2Rule());
                                      										}
                                      										setWithLastConsumed(current, "blocking", true, "false");
                                      									
                                    }

                                    }


                                    }


                                    }
                                    break;
                                case 2 :
                                    // InternalMcmodel.g:3344:8: otherlv_5= 'true'
                                    {
                                    otherlv_5=(Token)match(input,20,FOLLOW_37); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(otherlv_5, grammarAccess.getOverridePredicate_2Access().getTrueKeyword_0_1_1_0_1_1());
                                      							
                                    }

                                    }
                                    break;

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalMcmodel.g:3351:6: ( (otherlv_6= '=' | otherlv_7= '==' ) ( ( (lv_blocking_8_0= 'true' ) ) | otherlv_9= 'false' ) )
                            {
                            // InternalMcmodel.g:3351:6: ( (otherlv_6= '=' | otherlv_7= '==' ) ( ( (lv_blocking_8_0= 'true' ) ) | otherlv_9= 'false' ) )
                            // InternalMcmodel.g:3352:7: (otherlv_6= '=' | otherlv_7= '==' ) ( ( (lv_blocking_8_0= 'true' ) ) | otherlv_9= 'false' )
                            {
                            // InternalMcmodel.g:3352:7: (otherlv_6= '=' | otherlv_7= '==' )
                            int alt65=2;
                            int LA65_0 = input.LA(1);

                            if ( (LA65_0==18) ) {
                                alt65=1;
                            }
                            else if ( (LA65_0==58) ) {
                                alt65=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 65, 0, input);

                                throw nvae;
                            }
                            switch (alt65) {
                                case 1 :
                                    // InternalMcmodel.g:3353:8: otherlv_6= '='
                                    {
                                    otherlv_6=(Token)match(input,18,FOLLOW_7); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(otherlv_6, grammarAccess.getOverridePredicate_2Access().getEqualsSignKeyword_0_1_1_1_0_0());
                                      							
                                    }

                                    }
                                    break;
                                case 2 :
                                    // InternalMcmodel.g:3358:8: otherlv_7= '=='
                                    {
                                    otherlv_7=(Token)match(input,58,FOLLOW_7); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(otherlv_7, grammarAccess.getOverridePredicate_2Access().getEqualsSignEqualsSignKeyword_0_1_1_1_0_1());
                                      							
                                    }

                                    }
                                    break;

                            }

                            // InternalMcmodel.g:3363:7: ( ( (lv_blocking_8_0= 'true' ) ) | otherlv_9= 'false' )
                            int alt66=2;
                            int LA66_0 = input.LA(1);

                            if ( (LA66_0==20) ) {
                                alt66=1;
                            }
                            else if ( (LA66_0==21) ) {
                                alt66=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 66, 0, input);

                                throw nvae;
                            }
                            switch (alt66) {
                                case 1 :
                                    // InternalMcmodel.g:3364:8: ( (lv_blocking_8_0= 'true' ) )
                                    {
                                    // InternalMcmodel.g:3364:8: ( (lv_blocking_8_0= 'true' ) )
                                    // InternalMcmodel.g:3365:9: (lv_blocking_8_0= 'true' )
                                    {
                                    // InternalMcmodel.g:3365:9: (lv_blocking_8_0= 'true' )
                                    // InternalMcmodel.g:3366:10: lv_blocking_8_0= 'true'
                                    {
                                    lv_blocking_8_0=(Token)match(input,20,FOLLOW_37); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      										newLeafNode(lv_blocking_8_0, grammarAccess.getOverridePredicate_2Access().getBlockingTrueKeyword_0_1_1_1_1_0_0());
                                      									
                                    }
                                    if ( state.backtracking==0 ) {

                                      										if (current==null) {
                                      											current = createModelElement(grammarAccess.getOverridePredicate_2Rule());
                                      										}
                                      										setWithLastConsumed(current, "blocking", true, "true");
                                      									
                                    }

                                    }


                                    }


                                    }
                                    break;
                                case 2 :
                                    // InternalMcmodel.g:3379:8: otherlv_9= 'false'
                                    {
                                    otherlv_9=(Token)match(input,21,FOLLOW_37); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(otherlv_9, grammarAccess.getOverridePredicate_2Access().getFalseKeyword_0_1_1_1_1_1());
                                      							
                                    }

                                    }
                                    break;

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;

            }

            // InternalMcmodel.g:3388:3: ( ( ( ( ({...}? => ( ({...}? => (otherlv_11= '&' ( (lv_angleDefined_12_0= 'angle' ) ) (otherlv_13= '=' | otherlv_14= '==' ) ( (lv_angle_15_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= '&' ( ( ( (lv_brokenDefined_17_0= '!' ) ) otherlv_18= 'broken' ) | ( ( (lv_brokenDefined_19_0= 'broken' ) ) ( (otherlv_20= '!=' ( ( (lv_broken_21_0= 'false' ) ) | otherlv_22= 'true' ) ) | ( (otherlv_23= '=' | otherlv_24= '==' ) ( ( (lv_broken_25_0= 'true' ) ) | otherlv_26= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= '&' ( ( ( (lv_castDefined_28_0= '!' ) ) otherlv_29= 'cast' ) | ( ( (lv_castDefined_30_0= 'cast' ) ) ( (otherlv_31= '!=' ( ( (lv_cast_32_0= 'false' ) ) | otherlv_33= 'true' ) ) | ( (otherlv_34= '=' | otherlv_35= '==' ) ( ( (lv_cast_36_0= 'true' ) ) | otherlv_37= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_38= '&' ( (lv_cooldownDefined_39_0= 'cooldown' ) ) (otherlv_40= '=' | otherlv_41= '==' ) ( (lv_cooldown_42_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= '&' ( (lv_damageDefined_44_0= 'damage' ) ) (otherlv_45= '=' | otherlv_46= '==' ) ( (lv_damage_47_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_48= '&' ( ( ( (lv_damagedDefined_49_0= '!' ) ) otherlv_50= 'damaged' ) | ( ( (lv_damagedDefined_51_0= 'damaged' ) ) ( (otherlv_52= '!=' ( ( (lv_damaged_53_0= 'false' ) ) | otherlv_54= 'true' ) ) | ( (otherlv_55= '=' | otherlv_56= '==' ) ( ( (lv_damaged_57_0= 'true' ) ) | otherlv_58= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_59= '&' ( ( ( (lv_lefthandedDefined_60_0= '!' ) ) otherlv_61= 'lefthanded' ) | ( ( (lv_lefthandedDefined_62_0= 'lefthanded' ) ) ( (otherlv_63= '!=' ( ( (lv_lefthanded_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_lefthanded_68_0= 'true' ) ) | otherlv_69= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_70= '&' ( (lv_pullDefined_71_0= 'pull' ) ) (otherlv_72= '=' | otherlv_73= '==' ) ( (lv_pull_74_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_75= '&' ( ( ( (lv_pullingDefined_76_0= '!' ) ) otherlv_77= 'pulling' ) | ( ( (lv_pullingDefined_78_0= 'pulling' ) ) ( (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) ) | ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_86= '&' ( ( ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing' ) | ( ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_97= '&' ( (lv_timeDefined_98_0= 'time' ) ) (otherlv_99= '=' | otherlv_100= '==' ) ( (lv_time_101_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) ) ) ) ) ) )* ) ) )
            // InternalMcmodel.g:3389:4: ( ( ( ({...}? => ( ({...}? => (otherlv_11= '&' ( (lv_angleDefined_12_0= 'angle' ) ) (otherlv_13= '=' | otherlv_14= '==' ) ( (lv_angle_15_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= '&' ( ( ( (lv_brokenDefined_17_0= '!' ) ) otherlv_18= 'broken' ) | ( ( (lv_brokenDefined_19_0= 'broken' ) ) ( (otherlv_20= '!=' ( ( (lv_broken_21_0= 'false' ) ) | otherlv_22= 'true' ) ) | ( (otherlv_23= '=' | otherlv_24= '==' ) ( ( (lv_broken_25_0= 'true' ) ) | otherlv_26= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= '&' ( ( ( (lv_castDefined_28_0= '!' ) ) otherlv_29= 'cast' ) | ( ( (lv_castDefined_30_0= 'cast' ) ) ( (otherlv_31= '!=' ( ( (lv_cast_32_0= 'false' ) ) | otherlv_33= 'true' ) ) | ( (otherlv_34= '=' | otherlv_35= '==' ) ( ( (lv_cast_36_0= 'true' ) ) | otherlv_37= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_38= '&' ( (lv_cooldownDefined_39_0= 'cooldown' ) ) (otherlv_40= '=' | otherlv_41= '==' ) ( (lv_cooldown_42_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= '&' ( (lv_damageDefined_44_0= 'damage' ) ) (otherlv_45= '=' | otherlv_46= '==' ) ( (lv_damage_47_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_48= '&' ( ( ( (lv_damagedDefined_49_0= '!' ) ) otherlv_50= 'damaged' ) | ( ( (lv_damagedDefined_51_0= 'damaged' ) ) ( (otherlv_52= '!=' ( ( (lv_damaged_53_0= 'false' ) ) | otherlv_54= 'true' ) ) | ( (otherlv_55= '=' | otherlv_56= '==' ) ( ( (lv_damaged_57_0= 'true' ) ) | otherlv_58= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_59= '&' ( ( ( (lv_lefthandedDefined_60_0= '!' ) ) otherlv_61= 'lefthanded' ) | ( ( (lv_lefthandedDefined_62_0= 'lefthanded' ) ) ( (otherlv_63= '!=' ( ( (lv_lefthanded_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_lefthanded_68_0= 'true' ) ) | otherlv_69= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_70= '&' ( (lv_pullDefined_71_0= 'pull' ) ) (otherlv_72= '=' | otherlv_73= '==' ) ( (lv_pull_74_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_75= '&' ( ( ( (lv_pullingDefined_76_0= '!' ) ) otherlv_77= 'pulling' ) | ( ( (lv_pullingDefined_78_0= 'pulling' ) ) ( (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) ) | ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_86= '&' ( ( ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing' ) | ( ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_97= '&' ( (lv_timeDefined_98_0= 'time' ) ) (otherlv_99= '=' | otherlv_100= '==' ) ( (lv_time_101_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) ) ) ) ) ) )* ) )
            {
            // InternalMcmodel.g:3389:4: ( ( ( ({...}? => ( ({...}? => (otherlv_11= '&' ( (lv_angleDefined_12_0= 'angle' ) ) (otherlv_13= '=' | otherlv_14= '==' ) ( (lv_angle_15_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= '&' ( ( ( (lv_brokenDefined_17_0= '!' ) ) otherlv_18= 'broken' ) | ( ( (lv_brokenDefined_19_0= 'broken' ) ) ( (otherlv_20= '!=' ( ( (lv_broken_21_0= 'false' ) ) | otherlv_22= 'true' ) ) | ( (otherlv_23= '=' | otherlv_24= '==' ) ( ( (lv_broken_25_0= 'true' ) ) | otherlv_26= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= '&' ( ( ( (lv_castDefined_28_0= '!' ) ) otherlv_29= 'cast' ) | ( ( (lv_castDefined_30_0= 'cast' ) ) ( (otherlv_31= '!=' ( ( (lv_cast_32_0= 'false' ) ) | otherlv_33= 'true' ) ) | ( (otherlv_34= '=' | otherlv_35= '==' ) ( ( (lv_cast_36_0= 'true' ) ) | otherlv_37= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_38= '&' ( (lv_cooldownDefined_39_0= 'cooldown' ) ) (otherlv_40= '=' | otherlv_41= '==' ) ( (lv_cooldown_42_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= '&' ( (lv_damageDefined_44_0= 'damage' ) ) (otherlv_45= '=' | otherlv_46= '==' ) ( (lv_damage_47_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_48= '&' ( ( ( (lv_damagedDefined_49_0= '!' ) ) otherlv_50= 'damaged' ) | ( ( (lv_damagedDefined_51_0= 'damaged' ) ) ( (otherlv_52= '!=' ( ( (lv_damaged_53_0= 'false' ) ) | otherlv_54= 'true' ) ) | ( (otherlv_55= '=' | otherlv_56= '==' ) ( ( (lv_damaged_57_0= 'true' ) ) | otherlv_58= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_59= '&' ( ( ( (lv_lefthandedDefined_60_0= '!' ) ) otherlv_61= 'lefthanded' ) | ( ( (lv_lefthandedDefined_62_0= 'lefthanded' ) ) ( (otherlv_63= '!=' ( ( (lv_lefthanded_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_lefthanded_68_0= 'true' ) ) | otherlv_69= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_70= '&' ( (lv_pullDefined_71_0= 'pull' ) ) (otherlv_72= '=' | otherlv_73= '==' ) ( (lv_pull_74_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_75= '&' ( ( ( (lv_pullingDefined_76_0= '!' ) ) otherlv_77= 'pulling' ) | ( ( (lv_pullingDefined_78_0= 'pulling' ) ) ( (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) ) | ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_86= '&' ( ( ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing' ) | ( ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_97= '&' ( (lv_timeDefined_98_0= 'time' ) ) (otherlv_99= '=' | otherlv_100= '==' ) ( (lv_time_101_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) ) ) ) ) ) )* ) )
            // InternalMcmodel.g:3390:5: ( ( ({...}? => ( ({...}? => (otherlv_11= '&' ( (lv_angleDefined_12_0= 'angle' ) ) (otherlv_13= '=' | otherlv_14= '==' ) ( (lv_angle_15_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= '&' ( ( ( (lv_brokenDefined_17_0= '!' ) ) otherlv_18= 'broken' ) | ( ( (lv_brokenDefined_19_0= 'broken' ) ) ( (otherlv_20= '!=' ( ( (lv_broken_21_0= 'false' ) ) | otherlv_22= 'true' ) ) | ( (otherlv_23= '=' | otherlv_24= '==' ) ( ( (lv_broken_25_0= 'true' ) ) | otherlv_26= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= '&' ( ( ( (lv_castDefined_28_0= '!' ) ) otherlv_29= 'cast' ) | ( ( (lv_castDefined_30_0= 'cast' ) ) ( (otherlv_31= '!=' ( ( (lv_cast_32_0= 'false' ) ) | otherlv_33= 'true' ) ) | ( (otherlv_34= '=' | otherlv_35= '==' ) ( ( (lv_cast_36_0= 'true' ) ) | otherlv_37= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_38= '&' ( (lv_cooldownDefined_39_0= 'cooldown' ) ) (otherlv_40= '=' | otherlv_41= '==' ) ( (lv_cooldown_42_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= '&' ( (lv_damageDefined_44_0= 'damage' ) ) (otherlv_45= '=' | otherlv_46= '==' ) ( (lv_damage_47_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_48= '&' ( ( ( (lv_damagedDefined_49_0= '!' ) ) otherlv_50= 'damaged' ) | ( ( (lv_damagedDefined_51_0= 'damaged' ) ) ( (otherlv_52= '!=' ( ( (lv_damaged_53_0= 'false' ) ) | otherlv_54= 'true' ) ) | ( (otherlv_55= '=' | otherlv_56= '==' ) ( ( (lv_damaged_57_0= 'true' ) ) | otherlv_58= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_59= '&' ( ( ( (lv_lefthandedDefined_60_0= '!' ) ) otherlv_61= 'lefthanded' ) | ( ( (lv_lefthandedDefined_62_0= 'lefthanded' ) ) ( (otherlv_63= '!=' ( ( (lv_lefthanded_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_lefthanded_68_0= 'true' ) ) | otherlv_69= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_70= '&' ( (lv_pullDefined_71_0= 'pull' ) ) (otherlv_72= '=' | otherlv_73= '==' ) ( (lv_pull_74_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_75= '&' ( ( ( (lv_pullingDefined_76_0= '!' ) ) otherlv_77= 'pulling' ) | ( ( (lv_pullingDefined_78_0= 'pulling' ) ) ( (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) ) | ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_86= '&' ( ( ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing' ) | ( ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_97= '&' ( (lv_timeDefined_98_0= 'time' ) ) (otherlv_99= '=' | otherlv_100= '==' ) ( (lv_time_101_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) ) ) ) ) ) )* )
            {
            getUnorderedGroupHelper().enter(grammarAccess.getOverridePredicate_2Access().getUnorderedGroup_1());
            // InternalMcmodel.g:3393:5: ( ( ({...}? => ( ({...}? => (otherlv_11= '&' ( (lv_angleDefined_12_0= 'angle' ) ) (otherlv_13= '=' | otherlv_14= '==' ) ( (lv_angle_15_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= '&' ( ( ( (lv_brokenDefined_17_0= '!' ) ) otherlv_18= 'broken' ) | ( ( (lv_brokenDefined_19_0= 'broken' ) ) ( (otherlv_20= '!=' ( ( (lv_broken_21_0= 'false' ) ) | otherlv_22= 'true' ) ) | ( (otherlv_23= '=' | otherlv_24= '==' ) ( ( (lv_broken_25_0= 'true' ) ) | otherlv_26= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= '&' ( ( ( (lv_castDefined_28_0= '!' ) ) otherlv_29= 'cast' ) | ( ( (lv_castDefined_30_0= 'cast' ) ) ( (otherlv_31= '!=' ( ( (lv_cast_32_0= 'false' ) ) | otherlv_33= 'true' ) ) | ( (otherlv_34= '=' | otherlv_35= '==' ) ( ( (lv_cast_36_0= 'true' ) ) | otherlv_37= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_38= '&' ( (lv_cooldownDefined_39_0= 'cooldown' ) ) (otherlv_40= '=' | otherlv_41= '==' ) ( (lv_cooldown_42_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= '&' ( (lv_damageDefined_44_0= 'damage' ) ) (otherlv_45= '=' | otherlv_46= '==' ) ( (lv_damage_47_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_48= '&' ( ( ( (lv_damagedDefined_49_0= '!' ) ) otherlv_50= 'damaged' ) | ( ( (lv_damagedDefined_51_0= 'damaged' ) ) ( (otherlv_52= '!=' ( ( (lv_damaged_53_0= 'false' ) ) | otherlv_54= 'true' ) ) | ( (otherlv_55= '=' | otherlv_56= '==' ) ( ( (lv_damaged_57_0= 'true' ) ) | otherlv_58= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_59= '&' ( ( ( (lv_lefthandedDefined_60_0= '!' ) ) otherlv_61= 'lefthanded' ) | ( ( (lv_lefthandedDefined_62_0= 'lefthanded' ) ) ( (otherlv_63= '!=' ( ( (lv_lefthanded_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_lefthanded_68_0= 'true' ) ) | otherlv_69= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_70= '&' ( (lv_pullDefined_71_0= 'pull' ) ) (otherlv_72= '=' | otherlv_73= '==' ) ( (lv_pull_74_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_75= '&' ( ( ( (lv_pullingDefined_76_0= '!' ) ) otherlv_77= 'pulling' ) | ( ( (lv_pullingDefined_78_0= 'pulling' ) ) ( (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) ) | ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_86= '&' ( ( ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing' ) | ( ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_97= '&' ( (lv_timeDefined_98_0= 'time' ) ) (otherlv_99= '=' | otherlv_100= '==' ) ( (lv_time_101_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) ) ) ) ) ) )* )
            // InternalMcmodel.g:3394:6: ( ({...}? => ( ({...}? => (otherlv_11= '&' ( (lv_angleDefined_12_0= 'angle' ) ) (otherlv_13= '=' | otherlv_14= '==' ) ( (lv_angle_15_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= '&' ( ( ( (lv_brokenDefined_17_0= '!' ) ) otherlv_18= 'broken' ) | ( ( (lv_brokenDefined_19_0= 'broken' ) ) ( (otherlv_20= '!=' ( ( (lv_broken_21_0= 'false' ) ) | otherlv_22= 'true' ) ) | ( (otherlv_23= '=' | otherlv_24= '==' ) ( ( (lv_broken_25_0= 'true' ) ) | otherlv_26= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= '&' ( ( ( (lv_castDefined_28_0= '!' ) ) otherlv_29= 'cast' ) | ( ( (lv_castDefined_30_0= 'cast' ) ) ( (otherlv_31= '!=' ( ( (lv_cast_32_0= 'false' ) ) | otherlv_33= 'true' ) ) | ( (otherlv_34= '=' | otherlv_35= '==' ) ( ( (lv_cast_36_0= 'true' ) ) | otherlv_37= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_38= '&' ( (lv_cooldownDefined_39_0= 'cooldown' ) ) (otherlv_40= '=' | otherlv_41= '==' ) ( (lv_cooldown_42_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= '&' ( (lv_damageDefined_44_0= 'damage' ) ) (otherlv_45= '=' | otherlv_46= '==' ) ( (lv_damage_47_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_48= '&' ( ( ( (lv_damagedDefined_49_0= '!' ) ) otherlv_50= 'damaged' ) | ( ( (lv_damagedDefined_51_0= 'damaged' ) ) ( (otherlv_52= '!=' ( ( (lv_damaged_53_0= 'false' ) ) | otherlv_54= 'true' ) ) | ( (otherlv_55= '=' | otherlv_56= '==' ) ( ( (lv_damaged_57_0= 'true' ) ) | otherlv_58= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_59= '&' ( ( ( (lv_lefthandedDefined_60_0= '!' ) ) otherlv_61= 'lefthanded' ) | ( ( (lv_lefthandedDefined_62_0= 'lefthanded' ) ) ( (otherlv_63= '!=' ( ( (lv_lefthanded_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_lefthanded_68_0= 'true' ) ) | otherlv_69= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_70= '&' ( (lv_pullDefined_71_0= 'pull' ) ) (otherlv_72= '=' | otherlv_73= '==' ) ( (lv_pull_74_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_75= '&' ( ( ( (lv_pullingDefined_76_0= '!' ) ) otherlv_77= 'pulling' ) | ( ( (lv_pullingDefined_78_0= 'pulling' ) ) ( (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) ) | ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_86= '&' ( ( ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing' ) | ( ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_97= '&' ( (lv_timeDefined_98_0= 'time' ) ) (otherlv_99= '=' | otherlv_100= '==' ) ( (lv_time_101_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) ) ) ) ) ) )*
            {
            // InternalMcmodel.g:3394:6: ( ({...}? => ( ({...}? => (otherlv_11= '&' ( (lv_angleDefined_12_0= 'angle' ) ) (otherlv_13= '=' | otherlv_14= '==' ) ( (lv_angle_15_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= '&' ( ( ( (lv_brokenDefined_17_0= '!' ) ) otherlv_18= 'broken' ) | ( ( (lv_brokenDefined_19_0= 'broken' ) ) ( (otherlv_20= '!=' ( ( (lv_broken_21_0= 'false' ) ) | otherlv_22= 'true' ) ) | ( (otherlv_23= '=' | otherlv_24= '==' ) ( ( (lv_broken_25_0= 'true' ) ) | otherlv_26= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= '&' ( ( ( (lv_castDefined_28_0= '!' ) ) otherlv_29= 'cast' ) | ( ( (lv_castDefined_30_0= 'cast' ) ) ( (otherlv_31= '!=' ( ( (lv_cast_32_0= 'false' ) ) | otherlv_33= 'true' ) ) | ( (otherlv_34= '=' | otherlv_35= '==' ) ( ( (lv_cast_36_0= 'true' ) ) | otherlv_37= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_38= '&' ( (lv_cooldownDefined_39_0= 'cooldown' ) ) (otherlv_40= '=' | otherlv_41= '==' ) ( (lv_cooldown_42_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= '&' ( (lv_damageDefined_44_0= 'damage' ) ) (otherlv_45= '=' | otherlv_46= '==' ) ( (lv_damage_47_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_48= '&' ( ( ( (lv_damagedDefined_49_0= '!' ) ) otherlv_50= 'damaged' ) | ( ( (lv_damagedDefined_51_0= 'damaged' ) ) ( (otherlv_52= '!=' ( ( (lv_damaged_53_0= 'false' ) ) | otherlv_54= 'true' ) ) | ( (otherlv_55= '=' | otherlv_56= '==' ) ( ( (lv_damaged_57_0= 'true' ) ) | otherlv_58= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_59= '&' ( ( ( (lv_lefthandedDefined_60_0= '!' ) ) otherlv_61= 'lefthanded' ) | ( ( (lv_lefthandedDefined_62_0= 'lefthanded' ) ) ( (otherlv_63= '!=' ( ( (lv_lefthanded_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_lefthanded_68_0= 'true' ) ) | otherlv_69= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_70= '&' ( (lv_pullDefined_71_0= 'pull' ) ) (otherlv_72= '=' | otherlv_73= '==' ) ( (lv_pull_74_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_75= '&' ( ( ( (lv_pullingDefined_76_0= '!' ) ) otherlv_77= 'pulling' ) | ( ( (lv_pullingDefined_78_0= 'pulling' ) ) ( (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) ) | ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_86= '&' ( ( ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing' ) | ( ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_97= '&' ( (lv_timeDefined_98_0= 'time' ) ) (otherlv_99= '=' | otherlv_100= '==' ) ( (lv_time_101_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) ) ) ) ) ) )*
            loop105:
            do {
                int alt105=13;
                alt105 = dfa105.predict(input);
                switch (alt105) {
            	case 1 :
            	    // InternalMcmodel.g:3395:4: ({...}? => ( ({...}? => (otherlv_11= '&' ( (lv_angleDefined_12_0= 'angle' ) ) (otherlv_13= '=' | otherlv_14= '==' ) ( (lv_angle_15_0= RULE_PERCENTAGE ) ) ) ) ) )
            	    {
            	    // InternalMcmodel.g:3395:4: ({...}? => ( ({...}? => (otherlv_11= '&' ( (lv_angleDefined_12_0= 'angle' ) ) (otherlv_13= '=' | otherlv_14= '==' ) ( (lv_angle_15_0= RULE_PERCENTAGE ) ) ) ) ) )
            	    // InternalMcmodel.g:3396:5: {...}? => ( ({...}? => (otherlv_11= '&' ( (lv_angleDefined_12_0= 'angle' ) ) (otherlv_13= '=' | otherlv_14= '==' ) ( (lv_angle_15_0= RULE_PERCENTAGE ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_2Access().getUnorderedGroup_1(), 0) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_2", "getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_2Access().getUnorderedGroup_1(), 0)");
            	    }
            	    // InternalMcmodel.g:3396:116: ( ({...}? => (otherlv_11= '&' ( (lv_angleDefined_12_0= 'angle' ) ) (otherlv_13= '=' | otherlv_14= '==' ) ( (lv_angle_15_0= RULE_PERCENTAGE ) ) ) ) )
            	    // InternalMcmodel.g:3397:6: ({...}? => (otherlv_11= '&' ( (lv_angleDefined_12_0= 'angle' ) ) (otherlv_13= '=' | otherlv_14= '==' ) ( (lv_angle_15_0= RULE_PERCENTAGE ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getOverridePredicate_2Access().getUnorderedGroup_1(), 0);
            	    // InternalMcmodel.g:3400:9: ({...}? => (otherlv_11= '&' ( (lv_angleDefined_12_0= 'angle' ) ) (otherlv_13= '=' | otherlv_14= '==' ) ( (lv_angle_15_0= RULE_PERCENTAGE ) ) ) )
            	    // InternalMcmodel.g:3400:10: {...}? => (otherlv_11= '&' ( (lv_angleDefined_12_0= 'angle' ) ) (otherlv_13= '=' | otherlv_14= '==' ) ( (lv_angle_15_0= RULE_PERCENTAGE ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_2", "true");
            	    }
            	    // InternalMcmodel.g:3400:19: (otherlv_11= '&' ( (lv_angleDefined_12_0= 'angle' ) ) (otherlv_13= '=' | otherlv_14= '==' ) ( (lv_angle_15_0= RULE_PERCENTAGE ) ) )
            	    // InternalMcmodel.g:3400:20: otherlv_11= '&' ( (lv_angleDefined_12_0= 'angle' ) ) (otherlv_13= '=' | otherlv_14= '==' ) ( (lv_angle_15_0= RULE_PERCENTAGE ) )
            	    {
            	    otherlv_11=(Token)match(input,59,FOLLOW_58); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_11, grammarAccess.getOverridePredicate_2Access().getAmpersandKeyword_1_0_0());
            	      								
            	    }
            	    // InternalMcmodel.g:3404:9: ( (lv_angleDefined_12_0= 'angle' ) )
            	    // InternalMcmodel.g:3405:10: (lv_angleDefined_12_0= 'angle' )
            	    {
            	    // InternalMcmodel.g:3405:10: (lv_angleDefined_12_0= 'angle' )
            	    // InternalMcmodel.g:3406:11: lv_angleDefined_12_0= 'angle'
            	    {
            	    lv_angleDefined_12_0=(Token)match(input,38,FOLLOW_35); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											newLeafNode(lv_angleDefined_12_0, grammarAccess.getOverridePredicate_2Access().getAngleDefinedAngleKeyword_1_0_1_0());
            	      										
            	    }
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElement(grammarAccess.getOverridePredicate_2Rule());
            	      											}
            	      											setWithLastConsumed(current, "angleDefined", true, "angle");
            	      										
            	    }

            	    }


            	    }

            	    // InternalMcmodel.g:3418:9: (otherlv_13= '=' | otherlv_14= '==' )
            	    int alt69=2;
            	    int LA69_0 = input.LA(1);

            	    if ( (LA69_0==18) ) {
            	        alt69=1;
            	    }
            	    else if ( (LA69_0==58) ) {
            	        alt69=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 69, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt69) {
            	        case 1 :
            	            // InternalMcmodel.g:3419:10: otherlv_13= '='
            	            {
            	            otherlv_13=(Token)match(input,18,FOLLOW_36); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(otherlv_13, grammarAccess.getOverridePredicate_2Access().getEqualsSignKeyword_1_0_2_0());
            	              									
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalMcmodel.g:3424:10: otherlv_14= '=='
            	            {
            	            otherlv_14=(Token)match(input,58,FOLLOW_36); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(otherlv_14, grammarAccess.getOverridePredicate_2Access().getEqualsSignEqualsSignKeyword_1_0_2_1());
            	              									
            	            }

            	            }
            	            break;

            	    }

            	    // InternalMcmodel.g:3429:9: ( (lv_angle_15_0= RULE_PERCENTAGE ) )
            	    // InternalMcmodel.g:3430:10: (lv_angle_15_0= RULE_PERCENTAGE )
            	    {
            	    // InternalMcmodel.g:3430:10: (lv_angle_15_0= RULE_PERCENTAGE )
            	    // InternalMcmodel.g:3431:11: lv_angle_15_0= RULE_PERCENTAGE
            	    {
            	    lv_angle_15_0=(Token)match(input,RULE_PERCENTAGE,FOLLOW_37); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											newLeafNode(lv_angle_15_0, grammarAccess.getOverridePredicate_2Access().getAnglePERCENTAGETerminalRuleCall_1_0_3_0());
            	      										
            	    }
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElement(grammarAccess.getOverridePredicate_2Rule());
            	      											}
            	      											setWithLastConsumed(
            	      												current,
            	      												"angle",
            	      												lv_angle_15_0,
            	      												"com.raptor.mcmodel.Mcmodel.PERCENTAGE");
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getOverridePredicate_2Access().getUnorderedGroup_1());

            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // InternalMcmodel.g:3453:4: ({...}? => ( ({...}? => (otherlv_16= '&' ( ( ( (lv_brokenDefined_17_0= '!' ) ) otherlv_18= 'broken' ) | ( ( (lv_brokenDefined_19_0= 'broken' ) ) ( (otherlv_20= '!=' ( ( (lv_broken_21_0= 'false' ) ) | otherlv_22= 'true' ) ) | ( (otherlv_23= '=' | otherlv_24= '==' ) ( ( (lv_broken_25_0= 'true' ) ) | otherlv_26= 'false' ) ) ) ) ) ) ) ) )
            	    {
            	    // InternalMcmodel.g:3453:4: ({...}? => ( ({...}? => (otherlv_16= '&' ( ( ( (lv_brokenDefined_17_0= '!' ) ) otherlv_18= 'broken' ) | ( ( (lv_brokenDefined_19_0= 'broken' ) ) ( (otherlv_20= '!=' ( ( (lv_broken_21_0= 'false' ) ) | otherlv_22= 'true' ) ) | ( (otherlv_23= '=' | otherlv_24= '==' ) ( ( (lv_broken_25_0= 'true' ) ) | otherlv_26= 'false' ) ) ) ) ) ) ) ) )
            	    // InternalMcmodel.g:3454:5: {...}? => ( ({...}? => (otherlv_16= '&' ( ( ( (lv_brokenDefined_17_0= '!' ) ) otherlv_18= 'broken' ) | ( ( (lv_brokenDefined_19_0= 'broken' ) ) ( (otherlv_20= '!=' ( ( (lv_broken_21_0= 'false' ) ) | otherlv_22= 'true' ) ) | ( (otherlv_23= '=' | otherlv_24= '==' ) ( ( (lv_broken_25_0= 'true' ) ) | otherlv_26= 'false' ) ) ) ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_2Access().getUnorderedGroup_1(), 1) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_2", "getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_2Access().getUnorderedGroup_1(), 1)");
            	    }
            	    // InternalMcmodel.g:3454:116: ( ({...}? => (otherlv_16= '&' ( ( ( (lv_brokenDefined_17_0= '!' ) ) otherlv_18= 'broken' ) | ( ( (lv_brokenDefined_19_0= 'broken' ) ) ( (otherlv_20= '!=' ( ( (lv_broken_21_0= 'false' ) ) | otherlv_22= 'true' ) ) | ( (otherlv_23= '=' | otherlv_24= '==' ) ( ( (lv_broken_25_0= 'true' ) ) | otherlv_26= 'false' ) ) ) ) ) ) ) )
            	    // InternalMcmodel.g:3455:6: ({...}? => (otherlv_16= '&' ( ( ( (lv_brokenDefined_17_0= '!' ) ) otherlv_18= 'broken' ) | ( ( (lv_brokenDefined_19_0= 'broken' ) ) ( (otherlv_20= '!=' ( ( (lv_broken_21_0= 'false' ) ) | otherlv_22= 'true' ) ) | ( (otherlv_23= '=' | otherlv_24= '==' ) ( ( (lv_broken_25_0= 'true' ) ) | otherlv_26= 'false' ) ) ) ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getOverridePredicate_2Access().getUnorderedGroup_1(), 1);
            	    // InternalMcmodel.g:3458:9: ({...}? => (otherlv_16= '&' ( ( ( (lv_brokenDefined_17_0= '!' ) ) otherlv_18= 'broken' ) | ( ( (lv_brokenDefined_19_0= 'broken' ) ) ( (otherlv_20= '!=' ( ( (lv_broken_21_0= 'false' ) ) | otherlv_22= 'true' ) ) | ( (otherlv_23= '=' | otherlv_24= '==' ) ( ( (lv_broken_25_0= 'true' ) ) | otherlv_26= 'false' ) ) ) ) ) ) )
            	    // InternalMcmodel.g:3458:10: {...}? => (otherlv_16= '&' ( ( ( (lv_brokenDefined_17_0= '!' ) ) otherlv_18= 'broken' ) | ( ( (lv_brokenDefined_19_0= 'broken' ) ) ( (otherlv_20= '!=' ( ( (lv_broken_21_0= 'false' ) ) | otherlv_22= 'true' ) ) | ( (otherlv_23= '=' | otherlv_24= '==' ) ( ( (lv_broken_25_0= 'true' ) ) | otherlv_26= 'false' ) ) ) ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_2", "true");
            	    }
            	    // InternalMcmodel.g:3458:19: (otherlv_16= '&' ( ( ( (lv_brokenDefined_17_0= '!' ) ) otherlv_18= 'broken' ) | ( ( (lv_brokenDefined_19_0= 'broken' ) ) ( (otherlv_20= '!=' ( ( (lv_broken_21_0= 'false' ) ) | otherlv_22= 'true' ) ) | ( (otherlv_23= '=' | otherlv_24= '==' ) ( ( (lv_broken_25_0= 'true' ) ) | otherlv_26= 'false' ) ) ) ) ) )
            	    // InternalMcmodel.g:3458:20: otherlv_16= '&' ( ( ( (lv_brokenDefined_17_0= '!' ) ) otherlv_18= 'broken' ) | ( ( (lv_brokenDefined_19_0= 'broken' ) ) ( (otherlv_20= '!=' ( ( (lv_broken_21_0= 'false' ) ) | otherlv_22= 'true' ) ) | ( (otherlv_23= '=' | otherlv_24= '==' ) ( ( (lv_broken_25_0= 'true' ) ) | otherlv_26= 'false' ) ) ) ) )
            	    {
            	    otherlv_16=(Token)match(input,59,FOLLOW_41); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_16, grammarAccess.getOverridePredicate_2Access().getAmpersandKeyword_1_1_0());
            	      								
            	    }
            	    // InternalMcmodel.g:3462:9: ( ( ( (lv_brokenDefined_17_0= '!' ) ) otherlv_18= 'broken' ) | ( ( (lv_brokenDefined_19_0= 'broken' ) ) ( (otherlv_20= '!=' ( ( (lv_broken_21_0= 'false' ) ) | otherlv_22= 'true' ) ) | ( (otherlv_23= '=' | otherlv_24= '==' ) ( ( (lv_broken_25_0= 'true' ) ) | otherlv_26= 'false' ) ) ) ) )
            	    int alt74=2;
            	    int LA74_0 = input.LA(1);

            	    if ( (LA74_0==60) ) {
            	        alt74=1;
            	    }
            	    else if ( (LA74_0==63) ) {
            	        alt74=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 74, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt74) {
            	        case 1 :
            	            // InternalMcmodel.g:3463:10: ( ( (lv_brokenDefined_17_0= '!' ) ) otherlv_18= 'broken' )
            	            {
            	            // InternalMcmodel.g:3463:10: ( ( (lv_brokenDefined_17_0= '!' ) ) otherlv_18= 'broken' )
            	            // InternalMcmodel.g:3464:11: ( (lv_brokenDefined_17_0= '!' ) ) otherlv_18= 'broken'
            	            {
            	            // InternalMcmodel.g:3464:11: ( (lv_brokenDefined_17_0= '!' ) )
            	            // InternalMcmodel.g:3465:12: (lv_brokenDefined_17_0= '!' )
            	            {
            	            // InternalMcmodel.g:3465:12: (lv_brokenDefined_17_0= '!' )
            	            // InternalMcmodel.g:3466:13: lv_brokenDefined_17_0= '!'
            	            {
            	            lv_brokenDefined_17_0=(Token)match(input,60,FOLLOW_42); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              													newLeafNode(lv_brokenDefined_17_0, grammarAccess.getOverridePredicate_2Access().getBrokenDefinedExclamationMarkKeyword_1_1_1_0_0_0());
            	              												
            	            }
            	            if ( state.backtracking==0 ) {

            	              													if (current==null) {
            	              														current = createModelElement(grammarAccess.getOverridePredicate_2Rule());
            	              													}
            	              													setWithLastConsumed(current, "brokenDefined", true, "!");
            	              												
            	            }

            	            }


            	            }

            	            otherlv_18=(Token)match(input,63,FOLLOW_37); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              											newLeafNode(otherlv_18, grammarAccess.getOverridePredicate_2Access().getBrokenKeyword_1_1_1_0_1());
            	              										
            	            }

            	            }


            	            }
            	            break;
            	        case 2 :
            	            // InternalMcmodel.g:3484:10: ( ( (lv_brokenDefined_19_0= 'broken' ) ) ( (otherlv_20= '!=' ( ( (lv_broken_21_0= 'false' ) ) | otherlv_22= 'true' ) ) | ( (otherlv_23= '=' | otherlv_24= '==' ) ( ( (lv_broken_25_0= 'true' ) ) | otherlv_26= 'false' ) ) ) )
            	            {
            	            // InternalMcmodel.g:3484:10: ( ( (lv_brokenDefined_19_0= 'broken' ) ) ( (otherlv_20= '!=' ( ( (lv_broken_21_0= 'false' ) ) | otherlv_22= 'true' ) ) | ( (otherlv_23= '=' | otherlv_24= '==' ) ( ( (lv_broken_25_0= 'true' ) ) | otherlv_26= 'false' ) ) ) )
            	            // InternalMcmodel.g:3485:11: ( (lv_brokenDefined_19_0= 'broken' ) ) ( (otherlv_20= '!=' ( ( (lv_broken_21_0= 'false' ) ) | otherlv_22= 'true' ) ) | ( (otherlv_23= '=' | otherlv_24= '==' ) ( ( (lv_broken_25_0= 'true' ) ) | otherlv_26= 'false' ) ) )
            	            {
            	            // InternalMcmodel.g:3485:11: ( (lv_brokenDefined_19_0= 'broken' ) )
            	            // InternalMcmodel.g:3486:12: (lv_brokenDefined_19_0= 'broken' )
            	            {
            	            // InternalMcmodel.g:3486:12: (lv_brokenDefined_19_0= 'broken' )
            	            // InternalMcmodel.g:3487:13: lv_brokenDefined_19_0= 'broken'
            	            {
            	            lv_brokenDefined_19_0=(Token)match(input,63,FOLLOW_40); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              													newLeafNode(lv_brokenDefined_19_0, grammarAccess.getOverridePredicate_2Access().getBrokenDefinedBrokenKeyword_1_1_1_1_0_0());
            	              												
            	            }
            	            if ( state.backtracking==0 ) {

            	              													if (current==null) {
            	              														current = createModelElement(grammarAccess.getOverridePredicate_2Rule());
            	              													}
            	              													setWithLastConsumed(current, "brokenDefined", true, "broken");
            	              												
            	            }

            	            }


            	            }

            	            // InternalMcmodel.g:3499:11: ( (otherlv_20= '!=' ( ( (lv_broken_21_0= 'false' ) ) | otherlv_22= 'true' ) ) | ( (otherlv_23= '=' | otherlv_24= '==' ) ( ( (lv_broken_25_0= 'true' ) ) | otherlv_26= 'false' ) ) )
            	            int alt73=2;
            	            int LA73_0 = input.LA(1);

            	            if ( (LA73_0==62) ) {
            	                alt73=1;
            	            }
            	            else if ( (LA73_0==18||LA73_0==58) ) {
            	                alt73=2;
            	            }
            	            else {
            	                if (state.backtracking>0) {state.failed=true; return current;}
            	                NoViableAltException nvae =
            	                    new NoViableAltException("", 73, 0, input);

            	                throw nvae;
            	            }
            	            switch (alt73) {
            	                case 1 :
            	                    // InternalMcmodel.g:3500:12: (otherlv_20= '!=' ( ( (lv_broken_21_0= 'false' ) ) | otherlv_22= 'true' ) )
            	                    {
            	                    // InternalMcmodel.g:3500:12: (otherlv_20= '!=' ( ( (lv_broken_21_0= 'false' ) ) | otherlv_22= 'true' ) )
            	                    // InternalMcmodel.g:3501:13: otherlv_20= '!=' ( ( (lv_broken_21_0= 'false' ) ) | otherlv_22= 'true' )
            	                    {
            	                    otherlv_20=(Token)match(input,62,FOLLOW_7); if (state.failed) return current;
            	                    if ( state.backtracking==0 ) {

            	                      													newLeafNode(otherlv_20, grammarAccess.getOverridePredicate_2Access().getExclamationMarkEqualsSignKeyword_1_1_1_1_1_0_0());
            	                      												
            	                    }
            	                    // InternalMcmodel.g:3505:13: ( ( (lv_broken_21_0= 'false' ) ) | otherlv_22= 'true' )
            	                    int alt70=2;
            	                    int LA70_0 = input.LA(1);

            	                    if ( (LA70_0==21) ) {
            	                        alt70=1;
            	                    }
            	                    else if ( (LA70_0==20) ) {
            	                        alt70=2;
            	                    }
            	                    else {
            	                        if (state.backtracking>0) {state.failed=true; return current;}
            	                        NoViableAltException nvae =
            	                            new NoViableAltException("", 70, 0, input);

            	                        throw nvae;
            	                    }
            	                    switch (alt70) {
            	                        case 1 :
            	                            // InternalMcmodel.g:3506:14: ( (lv_broken_21_0= 'false' ) )
            	                            {
            	                            // InternalMcmodel.g:3506:14: ( (lv_broken_21_0= 'false' ) )
            	                            // InternalMcmodel.g:3507:15: (lv_broken_21_0= 'false' )
            	                            {
            	                            // InternalMcmodel.g:3507:15: (lv_broken_21_0= 'false' )
            	                            // InternalMcmodel.g:3508:16: lv_broken_21_0= 'false'
            	                            {
            	                            lv_broken_21_0=(Token)match(input,21,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              																newLeafNode(lv_broken_21_0, grammarAccess.getOverridePredicate_2Access().getBrokenFalseKeyword_1_1_1_1_1_0_1_0_0());
            	                              															
            	                            }
            	                            if ( state.backtracking==0 ) {

            	                              																if (current==null) {
            	                              																	current = createModelElement(grammarAccess.getOverridePredicate_2Rule());
            	                              																}
            	                              																setWithLastConsumed(current, "broken", true, "false");
            	                              															
            	                            }

            	                            }


            	                            }


            	                            }
            	                            break;
            	                        case 2 :
            	                            // InternalMcmodel.g:3521:14: otherlv_22= 'true'
            	                            {
            	                            otherlv_22=(Token)match(input,20,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_22, grammarAccess.getOverridePredicate_2Access().getTrueKeyword_1_1_1_1_1_0_1_1());
            	                              													
            	                            }

            	                            }
            	                            break;

            	                    }


            	                    }


            	                    }
            	                    break;
            	                case 2 :
            	                    // InternalMcmodel.g:3528:12: ( (otherlv_23= '=' | otherlv_24= '==' ) ( ( (lv_broken_25_0= 'true' ) ) | otherlv_26= 'false' ) )
            	                    {
            	                    // InternalMcmodel.g:3528:12: ( (otherlv_23= '=' | otherlv_24= '==' ) ( ( (lv_broken_25_0= 'true' ) ) | otherlv_26= 'false' ) )
            	                    // InternalMcmodel.g:3529:13: (otherlv_23= '=' | otherlv_24= '==' ) ( ( (lv_broken_25_0= 'true' ) ) | otherlv_26= 'false' )
            	                    {
            	                    // InternalMcmodel.g:3529:13: (otherlv_23= '=' | otherlv_24= '==' )
            	                    int alt71=2;
            	                    int LA71_0 = input.LA(1);

            	                    if ( (LA71_0==18) ) {
            	                        alt71=1;
            	                    }
            	                    else if ( (LA71_0==58) ) {
            	                        alt71=2;
            	                    }
            	                    else {
            	                        if (state.backtracking>0) {state.failed=true; return current;}
            	                        NoViableAltException nvae =
            	                            new NoViableAltException("", 71, 0, input);

            	                        throw nvae;
            	                    }
            	                    switch (alt71) {
            	                        case 1 :
            	                            // InternalMcmodel.g:3530:14: otherlv_23= '='
            	                            {
            	                            otherlv_23=(Token)match(input,18,FOLLOW_7); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_23, grammarAccess.getOverridePredicate_2Access().getEqualsSignKeyword_1_1_1_1_1_1_0_0());
            	                              													
            	                            }

            	                            }
            	                            break;
            	                        case 2 :
            	                            // InternalMcmodel.g:3535:14: otherlv_24= '=='
            	                            {
            	                            otherlv_24=(Token)match(input,58,FOLLOW_7); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_24, grammarAccess.getOverridePredicate_2Access().getEqualsSignEqualsSignKeyword_1_1_1_1_1_1_0_1());
            	                              													
            	                            }

            	                            }
            	                            break;

            	                    }

            	                    // InternalMcmodel.g:3540:13: ( ( (lv_broken_25_0= 'true' ) ) | otherlv_26= 'false' )
            	                    int alt72=2;
            	                    int LA72_0 = input.LA(1);

            	                    if ( (LA72_0==20) ) {
            	                        alt72=1;
            	                    }
            	                    else if ( (LA72_0==21) ) {
            	                        alt72=2;
            	                    }
            	                    else {
            	                        if (state.backtracking>0) {state.failed=true; return current;}
            	                        NoViableAltException nvae =
            	                            new NoViableAltException("", 72, 0, input);

            	                        throw nvae;
            	                    }
            	                    switch (alt72) {
            	                        case 1 :
            	                            // InternalMcmodel.g:3541:14: ( (lv_broken_25_0= 'true' ) )
            	                            {
            	                            // InternalMcmodel.g:3541:14: ( (lv_broken_25_0= 'true' ) )
            	                            // InternalMcmodel.g:3542:15: (lv_broken_25_0= 'true' )
            	                            {
            	                            // InternalMcmodel.g:3542:15: (lv_broken_25_0= 'true' )
            	                            // InternalMcmodel.g:3543:16: lv_broken_25_0= 'true'
            	                            {
            	                            lv_broken_25_0=(Token)match(input,20,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              																newLeafNode(lv_broken_25_0, grammarAccess.getOverridePredicate_2Access().getBrokenTrueKeyword_1_1_1_1_1_1_1_0_0());
            	                              															
            	                            }
            	                            if ( state.backtracking==0 ) {

            	                              																if (current==null) {
            	                              																	current = createModelElement(grammarAccess.getOverridePredicate_2Rule());
            	                              																}
            	                              																setWithLastConsumed(current, "broken", true, "true");
            	                              															
            	                            }

            	                            }


            	                            }


            	                            }
            	                            break;
            	                        case 2 :
            	                            // InternalMcmodel.g:3556:14: otherlv_26= 'false'
            	                            {
            	                            otherlv_26=(Token)match(input,21,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_26, grammarAccess.getOverridePredicate_2Access().getFalseKeyword_1_1_1_1_1_1_1_1());
            	                              													
            	                            }

            	                            }
            	                            break;

            	                    }


            	                    }


            	                    }
            	                    break;

            	            }


            	            }


            	            }
            	            break;

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getOverridePredicate_2Access().getUnorderedGroup_1());

            	    }


            	    }


            	    }
            	    break;
            	case 3 :
            	    // InternalMcmodel.g:3571:4: ({...}? => ( ({...}? => (otherlv_27= '&' ( ( ( (lv_castDefined_28_0= '!' ) ) otherlv_29= 'cast' ) | ( ( (lv_castDefined_30_0= 'cast' ) ) ( (otherlv_31= '!=' ( ( (lv_cast_32_0= 'false' ) ) | otherlv_33= 'true' ) ) | ( (otherlv_34= '=' | otherlv_35= '==' ) ( ( (lv_cast_36_0= 'true' ) ) | otherlv_37= 'false' ) ) ) ) ) ) ) ) )
            	    {
            	    // InternalMcmodel.g:3571:4: ({...}? => ( ({...}? => (otherlv_27= '&' ( ( ( (lv_castDefined_28_0= '!' ) ) otherlv_29= 'cast' ) | ( ( (lv_castDefined_30_0= 'cast' ) ) ( (otherlv_31= '!=' ( ( (lv_cast_32_0= 'false' ) ) | otherlv_33= 'true' ) ) | ( (otherlv_34= '=' | otherlv_35= '==' ) ( ( (lv_cast_36_0= 'true' ) ) | otherlv_37= 'false' ) ) ) ) ) ) ) ) )
            	    // InternalMcmodel.g:3572:5: {...}? => ( ({...}? => (otherlv_27= '&' ( ( ( (lv_castDefined_28_0= '!' ) ) otherlv_29= 'cast' ) | ( ( (lv_castDefined_30_0= 'cast' ) ) ( (otherlv_31= '!=' ( ( (lv_cast_32_0= 'false' ) ) | otherlv_33= 'true' ) ) | ( (otherlv_34= '=' | otherlv_35= '==' ) ( ( (lv_cast_36_0= 'true' ) ) | otherlv_37= 'false' ) ) ) ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_2Access().getUnorderedGroup_1(), 2) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_2", "getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_2Access().getUnorderedGroup_1(), 2)");
            	    }
            	    // InternalMcmodel.g:3572:116: ( ({...}? => (otherlv_27= '&' ( ( ( (lv_castDefined_28_0= '!' ) ) otherlv_29= 'cast' ) | ( ( (lv_castDefined_30_0= 'cast' ) ) ( (otherlv_31= '!=' ( ( (lv_cast_32_0= 'false' ) ) | otherlv_33= 'true' ) ) | ( (otherlv_34= '=' | otherlv_35= '==' ) ( ( (lv_cast_36_0= 'true' ) ) | otherlv_37= 'false' ) ) ) ) ) ) ) )
            	    // InternalMcmodel.g:3573:6: ({...}? => (otherlv_27= '&' ( ( ( (lv_castDefined_28_0= '!' ) ) otherlv_29= 'cast' ) | ( ( (lv_castDefined_30_0= 'cast' ) ) ( (otherlv_31= '!=' ( ( (lv_cast_32_0= 'false' ) ) | otherlv_33= 'true' ) ) | ( (otherlv_34= '=' | otherlv_35= '==' ) ( ( (lv_cast_36_0= 'true' ) ) | otherlv_37= 'false' ) ) ) ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getOverridePredicate_2Access().getUnorderedGroup_1(), 2);
            	    // InternalMcmodel.g:3576:9: ({...}? => (otherlv_27= '&' ( ( ( (lv_castDefined_28_0= '!' ) ) otherlv_29= 'cast' ) | ( ( (lv_castDefined_30_0= 'cast' ) ) ( (otherlv_31= '!=' ( ( (lv_cast_32_0= 'false' ) ) | otherlv_33= 'true' ) ) | ( (otherlv_34= '=' | otherlv_35= '==' ) ( ( (lv_cast_36_0= 'true' ) ) | otherlv_37= 'false' ) ) ) ) ) ) )
            	    // InternalMcmodel.g:3576:10: {...}? => (otherlv_27= '&' ( ( ( (lv_castDefined_28_0= '!' ) ) otherlv_29= 'cast' ) | ( ( (lv_castDefined_30_0= 'cast' ) ) ( (otherlv_31= '!=' ( ( (lv_cast_32_0= 'false' ) ) | otherlv_33= 'true' ) ) | ( (otherlv_34= '=' | otherlv_35= '==' ) ( ( (lv_cast_36_0= 'true' ) ) | otherlv_37= 'false' ) ) ) ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_2", "true");
            	    }
            	    // InternalMcmodel.g:3576:19: (otherlv_27= '&' ( ( ( (lv_castDefined_28_0= '!' ) ) otherlv_29= 'cast' ) | ( ( (lv_castDefined_30_0= 'cast' ) ) ( (otherlv_31= '!=' ( ( (lv_cast_32_0= 'false' ) ) | otherlv_33= 'true' ) ) | ( (otherlv_34= '=' | otherlv_35= '==' ) ( ( (lv_cast_36_0= 'true' ) ) | otherlv_37= 'false' ) ) ) ) ) )
            	    // InternalMcmodel.g:3576:20: otherlv_27= '&' ( ( ( (lv_castDefined_28_0= '!' ) ) otherlv_29= 'cast' ) | ( ( (lv_castDefined_30_0= 'cast' ) ) ( (otherlv_31= '!=' ( ( (lv_cast_32_0= 'false' ) ) | otherlv_33= 'true' ) ) | ( (otherlv_34= '=' | otherlv_35= '==' ) ( ( (lv_cast_36_0= 'true' ) ) | otherlv_37= 'false' ) ) ) ) )
            	    {
            	    otherlv_27=(Token)match(input,59,FOLLOW_43); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_27, grammarAccess.getOverridePredicate_2Access().getAmpersandKeyword_1_2_0());
            	      								
            	    }
            	    // InternalMcmodel.g:3580:9: ( ( ( (lv_castDefined_28_0= '!' ) ) otherlv_29= 'cast' ) | ( ( (lv_castDefined_30_0= 'cast' ) ) ( (otherlv_31= '!=' ( ( (lv_cast_32_0= 'false' ) ) | otherlv_33= 'true' ) ) | ( (otherlv_34= '=' | otherlv_35= '==' ) ( ( (lv_cast_36_0= 'true' ) ) | otherlv_37= 'false' ) ) ) ) )
            	    int alt79=2;
            	    int LA79_0 = input.LA(1);

            	    if ( (LA79_0==60) ) {
            	        alt79=1;
            	    }
            	    else if ( (LA79_0==64) ) {
            	        alt79=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 79, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt79) {
            	        case 1 :
            	            // InternalMcmodel.g:3581:10: ( ( (lv_castDefined_28_0= '!' ) ) otherlv_29= 'cast' )
            	            {
            	            // InternalMcmodel.g:3581:10: ( ( (lv_castDefined_28_0= '!' ) ) otherlv_29= 'cast' )
            	            // InternalMcmodel.g:3582:11: ( (lv_castDefined_28_0= '!' ) ) otherlv_29= 'cast'
            	            {
            	            // InternalMcmodel.g:3582:11: ( (lv_castDefined_28_0= '!' ) )
            	            // InternalMcmodel.g:3583:12: (lv_castDefined_28_0= '!' )
            	            {
            	            // InternalMcmodel.g:3583:12: (lv_castDefined_28_0= '!' )
            	            // InternalMcmodel.g:3584:13: lv_castDefined_28_0= '!'
            	            {
            	            lv_castDefined_28_0=(Token)match(input,60,FOLLOW_44); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              													newLeafNode(lv_castDefined_28_0, grammarAccess.getOverridePredicate_2Access().getCastDefinedExclamationMarkKeyword_1_2_1_0_0_0());
            	              												
            	            }
            	            if ( state.backtracking==0 ) {

            	              													if (current==null) {
            	              														current = createModelElement(grammarAccess.getOverridePredicate_2Rule());
            	              													}
            	              													setWithLastConsumed(current, "castDefined", true, "!");
            	              												
            	            }

            	            }


            	            }

            	            otherlv_29=(Token)match(input,64,FOLLOW_37); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              											newLeafNode(otherlv_29, grammarAccess.getOverridePredicate_2Access().getCastKeyword_1_2_1_0_1());
            	              										
            	            }

            	            }


            	            }
            	            break;
            	        case 2 :
            	            // InternalMcmodel.g:3602:10: ( ( (lv_castDefined_30_0= 'cast' ) ) ( (otherlv_31= '!=' ( ( (lv_cast_32_0= 'false' ) ) | otherlv_33= 'true' ) ) | ( (otherlv_34= '=' | otherlv_35= '==' ) ( ( (lv_cast_36_0= 'true' ) ) | otherlv_37= 'false' ) ) ) )
            	            {
            	            // InternalMcmodel.g:3602:10: ( ( (lv_castDefined_30_0= 'cast' ) ) ( (otherlv_31= '!=' ( ( (lv_cast_32_0= 'false' ) ) | otherlv_33= 'true' ) ) | ( (otherlv_34= '=' | otherlv_35= '==' ) ( ( (lv_cast_36_0= 'true' ) ) | otherlv_37= 'false' ) ) ) )
            	            // InternalMcmodel.g:3603:11: ( (lv_castDefined_30_0= 'cast' ) ) ( (otherlv_31= '!=' ( ( (lv_cast_32_0= 'false' ) ) | otherlv_33= 'true' ) ) | ( (otherlv_34= '=' | otherlv_35= '==' ) ( ( (lv_cast_36_0= 'true' ) ) | otherlv_37= 'false' ) ) )
            	            {
            	            // InternalMcmodel.g:3603:11: ( (lv_castDefined_30_0= 'cast' ) )
            	            // InternalMcmodel.g:3604:12: (lv_castDefined_30_0= 'cast' )
            	            {
            	            // InternalMcmodel.g:3604:12: (lv_castDefined_30_0= 'cast' )
            	            // InternalMcmodel.g:3605:13: lv_castDefined_30_0= 'cast'
            	            {
            	            lv_castDefined_30_0=(Token)match(input,64,FOLLOW_40); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              													newLeafNode(lv_castDefined_30_0, grammarAccess.getOverridePredicate_2Access().getCastDefinedCastKeyword_1_2_1_1_0_0());
            	              												
            	            }
            	            if ( state.backtracking==0 ) {

            	              													if (current==null) {
            	              														current = createModelElement(grammarAccess.getOverridePredicate_2Rule());
            	              													}
            	              													setWithLastConsumed(current, "castDefined", true, "cast");
            	              												
            	            }

            	            }


            	            }

            	            // InternalMcmodel.g:3617:11: ( (otherlv_31= '!=' ( ( (lv_cast_32_0= 'false' ) ) | otherlv_33= 'true' ) ) | ( (otherlv_34= '=' | otherlv_35= '==' ) ( ( (lv_cast_36_0= 'true' ) ) | otherlv_37= 'false' ) ) )
            	            int alt78=2;
            	            int LA78_0 = input.LA(1);

            	            if ( (LA78_0==62) ) {
            	                alt78=1;
            	            }
            	            else if ( (LA78_0==18||LA78_0==58) ) {
            	                alt78=2;
            	            }
            	            else {
            	                if (state.backtracking>0) {state.failed=true; return current;}
            	                NoViableAltException nvae =
            	                    new NoViableAltException("", 78, 0, input);

            	                throw nvae;
            	            }
            	            switch (alt78) {
            	                case 1 :
            	                    // InternalMcmodel.g:3618:12: (otherlv_31= '!=' ( ( (lv_cast_32_0= 'false' ) ) | otherlv_33= 'true' ) )
            	                    {
            	                    // InternalMcmodel.g:3618:12: (otherlv_31= '!=' ( ( (lv_cast_32_0= 'false' ) ) | otherlv_33= 'true' ) )
            	                    // InternalMcmodel.g:3619:13: otherlv_31= '!=' ( ( (lv_cast_32_0= 'false' ) ) | otherlv_33= 'true' )
            	                    {
            	                    otherlv_31=(Token)match(input,62,FOLLOW_7); if (state.failed) return current;
            	                    if ( state.backtracking==0 ) {

            	                      													newLeafNode(otherlv_31, grammarAccess.getOverridePredicate_2Access().getExclamationMarkEqualsSignKeyword_1_2_1_1_1_0_0());
            	                      												
            	                    }
            	                    // InternalMcmodel.g:3623:13: ( ( (lv_cast_32_0= 'false' ) ) | otherlv_33= 'true' )
            	                    int alt75=2;
            	                    int LA75_0 = input.LA(1);

            	                    if ( (LA75_0==21) ) {
            	                        alt75=1;
            	                    }
            	                    else if ( (LA75_0==20) ) {
            	                        alt75=2;
            	                    }
            	                    else {
            	                        if (state.backtracking>0) {state.failed=true; return current;}
            	                        NoViableAltException nvae =
            	                            new NoViableAltException("", 75, 0, input);

            	                        throw nvae;
            	                    }
            	                    switch (alt75) {
            	                        case 1 :
            	                            // InternalMcmodel.g:3624:14: ( (lv_cast_32_0= 'false' ) )
            	                            {
            	                            // InternalMcmodel.g:3624:14: ( (lv_cast_32_0= 'false' ) )
            	                            // InternalMcmodel.g:3625:15: (lv_cast_32_0= 'false' )
            	                            {
            	                            // InternalMcmodel.g:3625:15: (lv_cast_32_0= 'false' )
            	                            // InternalMcmodel.g:3626:16: lv_cast_32_0= 'false'
            	                            {
            	                            lv_cast_32_0=(Token)match(input,21,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              																newLeafNode(lv_cast_32_0, grammarAccess.getOverridePredicate_2Access().getCastFalseKeyword_1_2_1_1_1_0_1_0_0());
            	                              															
            	                            }
            	                            if ( state.backtracking==0 ) {

            	                              																if (current==null) {
            	                              																	current = createModelElement(grammarAccess.getOverridePredicate_2Rule());
            	                              																}
            	                              																setWithLastConsumed(current, "cast", true, "false");
            	                              															
            	                            }

            	                            }


            	                            }


            	                            }
            	                            break;
            	                        case 2 :
            	                            // InternalMcmodel.g:3639:14: otherlv_33= 'true'
            	                            {
            	                            otherlv_33=(Token)match(input,20,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_33, grammarAccess.getOverridePredicate_2Access().getTrueKeyword_1_2_1_1_1_0_1_1());
            	                              													
            	                            }

            	                            }
            	                            break;

            	                    }


            	                    }


            	                    }
            	                    break;
            	                case 2 :
            	                    // InternalMcmodel.g:3646:12: ( (otherlv_34= '=' | otherlv_35= '==' ) ( ( (lv_cast_36_0= 'true' ) ) | otherlv_37= 'false' ) )
            	                    {
            	                    // InternalMcmodel.g:3646:12: ( (otherlv_34= '=' | otherlv_35= '==' ) ( ( (lv_cast_36_0= 'true' ) ) | otherlv_37= 'false' ) )
            	                    // InternalMcmodel.g:3647:13: (otherlv_34= '=' | otherlv_35= '==' ) ( ( (lv_cast_36_0= 'true' ) ) | otherlv_37= 'false' )
            	                    {
            	                    // InternalMcmodel.g:3647:13: (otherlv_34= '=' | otherlv_35= '==' )
            	                    int alt76=2;
            	                    int LA76_0 = input.LA(1);

            	                    if ( (LA76_0==18) ) {
            	                        alt76=1;
            	                    }
            	                    else if ( (LA76_0==58) ) {
            	                        alt76=2;
            	                    }
            	                    else {
            	                        if (state.backtracking>0) {state.failed=true; return current;}
            	                        NoViableAltException nvae =
            	                            new NoViableAltException("", 76, 0, input);

            	                        throw nvae;
            	                    }
            	                    switch (alt76) {
            	                        case 1 :
            	                            // InternalMcmodel.g:3648:14: otherlv_34= '='
            	                            {
            	                            otherlv_34=(Token)match(input,18,FOLLOW_7); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_34, grammarAccess.getOverridePredicate_2Access().getEqualsSignKeyword_1_2_1_1_1_1_0_0());
            	                              													
            	                            }

            	                            }
            	                            break;
            	                        case 2 :
            	                            // InternalMcmodel.g:3653:14: otherlv_35= '=='
            	                            {
            	                            otherlv_35=(Token)match(input,58,FOLLOW_7); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_35, grammarAccess.getOverridePredicate_2Access().getEqualsSignEqualsSignKeyword_1_2_1_1_1_1_0_1());
            	                              													
            	                            }

            	                            }
            	                            break;

            	                    }

            	                    // InternalMcmodel.g:3658:13: ( ( (lv_cast_36_0= 'true' ) ) | otherlv_37= 'false' )
            	                    int alt77=2;
            	                    int LA77_0 = input.LA(1);

            	                    if ( (LA77_0==20) ) {
            	                        alt77=1;
            	                    }
            	                    else if ( (LA77_0==21) ) {
            	                        alt77=2;
            	                    }
            	                    else {
            	                        if (state.backtracking>0) {state.failed=true; return current;}
            	                        NoViableAltException nvae =
            	                            new NoViableAltException("", 77, 0, input);

            	                        throw nvae;
            	                    }
            	                    switch (alt77) {
            	                        case 1 :
            	                            // InternalMcmodel.g:3659:14: ( (lv_cast_36_0= 'true' ) )
            	                            {
            	                            // InternalMcmodel.g:3659:14: ( (lv_cast_36_0= 'true' ) )
            	                            // InternalMcmodel.g:3660:15: (lv_cast_36_0= 'true' )
            	                            {
            	                            // InternalMcmodel.g:3660:15: (lv_cast_36_0= 'true' )
            	                            // InternalMcmodel.g:3661:16: lv_cast_36_0= 'true'
            	                            {
            	                            lv_cast_36_0=(Token)match(input,20,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              																newLeafNode(lv_cast_36_0, grammarAccess.getOverridePredicate_2Access().getCastTrueKeyword_1_2_1_1_1_1_1_0_0());
            	                              															
            	                            }
            	                            if ( state.backtracking==0 ) {

            	                              																if (current==null) {
            	                              																	current = createModelElement(grammarAccess.getOverridePredicate_2Rule());
            	                              																}
            	                              																setWithLastConsumed(current, "cast", true, "true");
            	                              															
            	                            }

            	                            }


            	                            }


            	                            }
            	                            break;
            	                        case 2 :
            	                            // InternalMcmodel.g:3674:14: otherlv_37= 'false'
            	                            {
            	                            otherlv_37=(Token)match(input,21,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_37, grammarAccess.getOverridePredicate_2Access().getFalseKeyword_1_2_1_1_1_1_1_1());
            	                              													
            	                            }

            	                            }
            	                            break;

            	                    }


            	                    }


            	                    }
            	                    break;

            	            }


            	            }


            	            }
            	            break;

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getOverridePredicate_2Access().getUnorderedGroup_1());

            	    }


            	    }


            	    }
            	    break;
            	case 4 :
            	    // InternalMcmodel.g:3689:4: ({...}? => ( ({...}? => (otherlv_38= '&' ( (lv_cooldownDefined_39_0= 'cooldown' ) ) (otherlv_40= '=' | otherlv_41= '==' ) ( (lv_cooldown_42_0= RULE_PERCENTAGE ) ) ) ) ) )
            	    {
            	    // InternalMcmodel.g:3689:4: ({...}? => ( ({...}? => (otherlv_38= '&' ( (lv_cooldownDefined_39_0= 'cooldown' ) ) (otherlv_40= '=' | otherlv_41= '==' ) ( (lv_cooldown_42_0= RULE_PERCENTAGE ) ) ) ) ) )
            	    // InternalMcmodel.g:3690:5: {...}? => ( ({...}? => (otherlv_38= '&' ( (lv_cooldownDefined_39_0= 'cooldown' ) ) (otherlv_40= '=' | otherlv_41= '==' ) ( (lv_cooldown_42_0= RULE_PERCENTAGE ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_2Access().getUnorderedGroup_1(), 3) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_2", "getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_2Access().getUnorderedGroup_1(), 3)");
            	    }
            	    // InternalMcmodel.g:3690:116: ( ({...}? => (otherlv_38= '&' ( (lv_cooldownDefined_39_0= 'cooldown' ) ) (otherlv_40= '=' | otherlv_41= '==' ) ( (lv_cooldown_42_0= RULE_PERCENTAGE ) ) ) ) )
            	    // InternalMcmodel.g:3691:6: ({...}? => (otherlv_38= '&' ( (lv_cooldownDefined_39_0= 'cooldown' ) ) (otherlv_40= '=' | otherlv_41= '==' ) ( (lv_cooldown_42_0= RULE_PERCENTAGE ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getOverridePredicate_2Access().getUnorderedGroup_1(), 3);
            	    // InternalMcmodel.g:3694:9: ({...}? => (otherlv_38= '&' ( (lv_cooldownDefined_39_0= 'cooldown' ) ) (otherlv_40= '=' | otherlv_41= '==' ) ( (lv_cooldown_42_0= RULE_PERCENTAGE ) ) ) )
            	    // InternalMcmodel.g:3694:10: {...}? => (otherlv_38= '&' ( (lv_cooldownDefined_39_0= 'cooldown' ) ) (otherlv_40= '=' | otherlv_41= '==' ) ( (lv_cooldown_42_0= RULE_PERCENTAGE ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_2", "true");
            	    }
            	    // InternalMcmodel.g:3694:19: (otherlv_38= '&' ( (lv_cooldownDefined_39_0= 'cooldown' ) ) (otherlv_40= '=' | otherlv_41= '==' ) ( (lv_cooldown_42_0= RULE_PERCENTAGE ) ) )
            	    // InternalMcmodel.g:3694:20: otherlv_38= '&' ( (lv_cooldownDefined_39_0= 'cooldown' ) ) (otherlv_40= '=' | otherlv_41= '==' ) ( (lv_cooldown_42_0= RULE_PERCENTAGE ) )
            	    {
            	    otherlv_38=(Token)match(input,59,FOLLOW_45); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_38, grammarAccess.getOverridePredicate_2Access().getAmpersandKeyword_1_3_0());
            	      								
            	    }
            	    // InternalMcmodel.g:3698:9: ( (lv_cooldownDefined_39_0= 'cooldown' ) )
            	    // InternalMcmodel.g:3699:10: (lv_cooldownDefined_39_0= 'cooldown' )
            	    {
            	    // InternalMcmodel.g:3699:10: (lv_cooldownDefined_39_0= 'cooldown' )
            	    // InternalMcmodel.g:3700:11: lv_cooldownDefined_39_0= 'cooldown'
            	    {
            	    lv_cooldownDefined_39_0=(Token)match(input,65,FOLLOW_35); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											newLeafNode(lv_cooldownDefined_39_0, grammarAccess.getOverridePredicate_2Access().getCooldownDefinedCooldownKeyword_1_3_1_0());
            	      										
            	    }
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElement(grammarAccess.getOverridePredicate_2Rule());
            	      											}
            	      											setWithLastConsumed(current, "cooldownDefined", true, "cooldown");
            	      										
            	    }

            	    }


            	    }

            	    // InternalMcmodel.g:3712:9: (otherlv_40= '=' | otherlv_41= '==' )
            	    int alt80=2;
            	    int LA80_0 = input.LA(1);

            	    if ( (LA80_0==18) ) {
            	        alt80=1;
            	    }
            	    else if ( (LA80_0==58) ) {
            	        alt80=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 80, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt80) {
            	        case 1 :
            	            // InternalMcmodel.g:3713:10: otherlv_40= '='
            	            {
            	            otherlv_40=(Token)match(input,18,FOLLOW_36); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(otherlv_40, grammarAccess.getOverridePredicate_2Access().getEqualsSignKeyword_1_3_2_0());
            	              									
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalMcmodel.g:3718:10: otherlv_41= '=='
            	            {
            	            otherlv_41=(Token)match(input,58,FOLLOW_36); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(otherlv_41, grammarAccess.getOverridePredicate_2Access().getEqualsSignEqualsSignKeyword_1_3_2_1());
            	              									
            	            }

            	            }
            	            break;

            	    }

            	    // InternalMcmodel.g:3723:9: ( (lv_cooldown_42_0= RULE_PERCENTAGE ) )
            	    // InternalMcmodel.g:3724:10: (lv_cooldown_42_0= RULE_PERCENTAGE )
            	    {
            	    // InternalMcmodel.g:3724:10: (lv_cooldown_42_0= RULE_PERCENTAGE )
            	    // InternalMcmodel.g:3725:11: lv_cooldown_42_0= RULE_PERCENTAGE
            	    {
            	    lv_cooldown_42_0=(Token)match(input,RULE_PERCENTAGE,FOLLOW_37); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											newLeafNode(lv_cooldown_42_0, grammarAccess.getOverridePredicate_2Access().getCooldownPERCENTAGETerminalRuleCall_1_3_3_0());
            	      										
            	    }
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElement(grammarAccess.getOverridePredicate_2Rule());
            	      											}
            	      											setWithLastConsumed(
            	      												current,
            	      												"cooldown",
            	      												lv_cooldown_42_0,
            	      												"com.raptor.mcmodel.Mcmodel.PERCENTAGE");
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getOverridePredicate_2Access().getUnorderedGroup_1());

            	    }


            	    }


            	    }
            	    break;
            	case 5 :
            	    // InternalMcmodel.g:3747:4: ({...}? => ( ({...}? => (otherlv_43= '&' ( (lv_damageDefined_44_0= 'damage' ) ) (otherlv_45= '=' | otherlv_46= '==' ) ( (lv_damage_47_0= RULE_PERCENTAGE ) ) ) ) ) )
            	    {
            	    // InternalMcmodel.g:3747:4: ({...}? => ( ({...}? => (otherlv_43= '&' ( (lv_damageDefined_44_0= 'damage' ) ) (otherlv_45= '=' | otherlv_46= '==' ) ( (lv_damage_47_0= RULE_PERCENTAGE ) ) ) ) ) )
            	    // InternalMcmodel.g:3748:5: {...}? => ( ({...}? => (otherlv_43= '&' ( (lv_damageDefined_44_0= 'damage' ) ) (otherlv_45= '=' | otherlv_46= '==' ) ( (lv_damage_47_0= RULE_PERCENTAGE ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_2Access().getUnorderedGroup_1(), 4) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_2", "getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_2Access().getUnorderedGroup_1(), 4)");
            	    }
            	    // InternalMcmodel.g:3748:116: ( ({...}? => (otherlv_43= '&' ( (lv_damageDefined_44_0= 'damage' ) ) (otherlv_45= '=' | otherlv_46= '==' ) ( (lv_damage_47_0= RULE_PERCENTAGE ) ) ) ) )
            	    // InternalMcmodel.g:3749:6: ({...}? => (otherlv_43= '&' ( (lv_damageDefined_44_0= 'damage' ) ) (otherlv_45= '=' | otherlv_46= '==' ) ( (lv_damage_47_0= RULE_PERCENTAGE ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getOverridePredicate_2Access().getUnorderedGroup_1(), 4);
            	    // InternalMcmodel.g:3752:9: ({...}? => (otherlv_43= '&' ( (lv_damageDefined_44_0= 'damage' ) ) (otherlv_45= '=' | otherlv_46= '==' ) ( (lv_damage_47_0= RULE_PERCENTAGE ) ) ) )
            	    // InternalMcmodel.g:3752:10: {...}? => (otherlv_43= '&' ( (lv_damageDefined_44_0= 'damage' ) ) (otherlv_45= '=' | otherlv_46= '==' ) ( (lv_damage_47_0= RULE_PERCENTAGE ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_2", "true");
            	    }
            	    // InternalMcmodel.g:3752:19: (otherlv_43= '&' ( (lv_damageDefined_44_0= 'damage' ) ) (otherlv_45= '=' | otherlv_46= '==' ) ( (lv_damage_47_0= RULE_PERCENTAGE ) ) )
            	    // InternalMcmodel.g:3752:20: otherlv_43= '&' ( (lv_damageDefined_44_0= 'damage' ) ) (otherlv_45= '=' | otherlv_46= '==' ) ( (lv_damage_47_0= RULE_PERCENTAGE ) )
            	    {
            	    otherlv_43=(Token)match(input,59,FOLLOW_46); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_43, grammarAccess.getOverridePredicate_2Access().getAmpersandKeyword_1_4_0());
            	      								
            	    }
            	    // InternalMcmodel.g:3756:9: ( (lv_damageDefined_44_0= 'damage' ) )
            	    // InternalMcmodel.g:3757:10: (lv_damageDefined_44_0= 'damage' )
            	    {
            	    // InternalMcmodel.g:3757:10: (lv_damageDefined_44_0= 'damage' )
            	    // InternalMcmodel.g:3758:11: lv_damageDefined_44_0= 'damage'
            	    {
            	    lv_damageDefined_44_0=(Token)match(input,66,FOLLOW_35); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											newLeafNode(lv_damageDefined_44_0, grammarAccess.getOverridePredicate_2Access().getDamageDefinedDamageKeyword_1_4_1_0());
            	      										
            	    }
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElement(grammarAccess.getOverridePredicate_2Rule());
            	      											}
            	      											setWithLastConsumed(current, "damageDefined", true, "damage");
            	      										
            	    }

            	    }


            	    }

            	    // InternalMcmodel.g:3770:9: (otherlv_45= '=' | otherlv_46= '==' )
            	    int alt81=2;
            	    int LA81_0 = input.LA(1);

            	    if ( (LA81_0==18) ) {
            	        alt81=1;
            	    }
            	    else if ( (LA81_0==58) ) {
            	        alt81=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 81, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt81) {
            	        case 1 :
            	            // InternalMcmodel.g:3771:10: otherlv_45= '='
            	            {
            	            otherlv_45=(Token)match(input,18,FOLLOW_36); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(otherlv_45, grammarAccess.getOverridePredicate_2Access().getEqualsSignKeyword_1_4_2_0());
            	              									
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalMcmodel.g:3776:10: otherlv_46= '=='
            	            {
            	            otherlv_46=(Token)match(input,58,FOLLOW_36); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(otherlv_46, grammarAccess.getOverridePredicate_2Access().getEqualsSignEqualsSignKeyword_1_4_2_1());
            	              									
            	            }

            	            }
            	            break;

            	    }

            	    // InternalMcmodel.g:3781:9: ( (lv_damage_47_0= RULE_PERCENTAGE ) )
            	    // InternalMcmodel.g:3782:10: (lv_damage_47_0= RULE_PERCENTAGE )
            	    {
            	    // InternalMcmodel.g:3782:10: (lv_damage_47_0= RULE_PERCENTAGE )
            	    // InternalMcmodel.g:3783:11: lv_damage_47_0= RULE_PERCENTAGE
            	    {
            	    lv_damage_47_0=(Token)match(input,RULE_PERCENTAGE,FOLLOW_37); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											newLeafNode(lv_damage_47_0, grammarAccess.getOverridePredicate_2Access().getDamagePERCENTAGETerminalRuleCall_1_4_3_0());
            	      										
            	    }
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElement(grammarAccess.getOverridePredicate_2Rule());
            	      											}
            	      											setWithLastConsumed(
            	      												current,
            	      												"damage",
            	      												lv_damage_47_0,
            	      												"com.raptor.mcmodel.Mcmodel.PERCENTAGE");
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getOverridePredicate_2Access().getUnorderedGroup_1());

            	    }


            	    }


            	    }
            	    break;
            	case 6 :
            	    // InternalMcmodel.g:3805:4: ({...}? => ( ({...}? => (otherlv_48= '&' ( ( ( (lv_damagedDefined_49_0= '!' ) ) otherlv_50= 'damaged' ) | ( ( (lv_damagedDefined_51_0= 'damaged' ) ) ( (otherlv_52= '!=' ( ( (lv_damaged_53_0= 'false' ) ) | otherlv_54= 'true' ) ) | ( (otherlv_55= '=' | otherlv_56= '==' ) ( ( (lv_damaged_57_0= 'true' ) ) | otherlv_58= 'false' ) ) ) ) ) ) ) ) )
            	    {
            	    // InternalMcmodel.g:3805:4: ({...}? => ( ({...}? => (otherlv_48= '&' ( ( ( (lv_damagedDefined_49_0= '!' ) ) otherlv_50= 'damaged' ) | ( ( (lv_damagedDefined_51_0= 'damaged' ) ) ( (otherlv_52= '!=' ( ( (lv_damaged_53_0= 'false' ) ) | otherlv_54= 'true' ) ) | ( (otherlv_55= '=' | otherlv_56= '==' ) ( ( (lv_damaged_57_0= 'true' ) ) | otherlv_58= 'false' ) ) ) ) ) ) ) ) )
            	    // InternalMcmodel.g:3806:5: {...}? => ( ({...}? => (otherlv_48= '&' ( ( ( (lv_damagedDefined_49_0= '!' ) ) otherlv_50= 'damaged' ) | ( ( (lv_damagedDefined_51_0= 'damaged' ) ) ( (otherlv_52= '!=' ( ( (lv_damaged_53_0= 'false' ) ) | otherlv_54= 'true' ) ) | ( (otherlv_55= '=' | otherlv_56= '==' ) ( ( (lv_damaged_57_0= 'true' ) ) | otherlv_58= 'false' ) ) ) ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_2Access().getUnorderedGroup_1(), 5) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_2", "getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_2Access().getUnorderedGroup_1(), 5)");
            	    }
            	    // InternalMcmodel.g:3806:116: ( ({...}? => (otherlv_48= '&' ( ( ( (lv_damagedDefined_49_0= '!' ) ) otherlv_50= 'damaged' ) | ( ( (lv_damagedDefined_51_0= 'damaged' ) ) ( (otherlv_52= '!=' ( ( (lv_damaged_53_0= 'false' ) ) | otherlv_54= 'true' ) ) | ( (otherlv_55= '=' | otherlv_56= '==' ) ( ( (lv_damaged_57_0= 'true' ) ) | otherlv_58= 'false' ) ) ) ) ) ) ) )
            	    // InternalMcmodel.g:3807:6: ({...}? => (otherlv_48= '&' ( ( ( (lv_damagedDefined_49_0= '!' ) ) otherlv_50= 'damaged' ) | ( ( (lv_damagedDefined_51_0= 'damaged' ) ) ( (otherlv_52= '!=' ( ( (lv_damaged_53_0= 'false' ) ) | otherlv_54= 'true' ) ) | ( (otherlv_55= '=' | otherlv_56= '==' ) ( ( (lv_damaged_57_0= 'true' ) ) | otherlv_58= 'false' ) ) ) ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getOverridePredicate_2Access().getUnorderedGroup_1(), 5);
            	    // InternalMcmodel.g:3810:9: ({...}? => (otherlv_48= '&' ( ( ( (lv_damagedDefined_49_0= '!' ) ) otherlv_50= 'damaged' ) | ( ( (lv_damagedDefined_51_0= 'damaged' ) ) ( (otherlv_52= '!=' ( ( (lv_damaged_53_0= 'false' ) ) | otherlv_54= 'true' ) ) | ( (otherlv_55= '=' | otherlv_56= '==' ) ( ( (lv_damaged_57_0= 'true' ) ) | otherlv_58= 'false' ) ) ) ) ) ) )
            	    // InternalMcmodel.g:3810:10: {...}? => (otherlv_48= '&' ( ( ( (lv_damagedDefined_49_0= '!' ) ) otherlv_50= 'damaged' ) | ( ( (lv_damagedDefined_51_0= 'damaged' ) ) ( (otherlv_52= '!=' ( ( (lv_damaged_53_0= 'false' ) ) | otherlv_54= 'true' ) ) | ( (otherlv_55= '=' | otherlv_56= '==' ) ( ( (lv_damaged_57_0= 'true' ) ) | otherlv_58= 'false' ) ) ) ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_2", "true");
            	    }
            	    // InternalMcmodel.g:3810:19: (otherlv_48= '&' ( ( ( (lv_damagedDefined_49_0= '!' ) ) otherlv_50= 'damaged' ) | ( ( (lv_damagedDefined_51_0= 'damaged' ) ) ( (otherlv_52= '!=' ( ( (lv_damaged_53_0= 'false' ) ) | otherlv_54= 'true' ) ) | ( (otherlv_55= '=' | otherlv_56= '==' ) ( ( (lv_damaged_57_0= 'true' ) ) | otherlv_58= 'false' ) ) ) ) ) )
            	    // InternalMcmodel.g:3810:20: otherlv_48= '&' ( ( ( (lv_damagedDefined_49_0= '!' ) ) otherlv_50= 'damaged' ) | ( ( (lv_damagedDefined_51_0= 'damaged' ) ) ( (otherlv_52= '!=' ( ( (lv_damaged_53_0= 'false' ) ) | otherlv_54= 'true' ) ) | ( (otherlv_55= '=' | otherlv_56= '==' ) ( ( (lv_damaged_57_0= 'true' ) ) | otherlv_58= 'false' ) ) ) ) )
            	    {
            	    otherlv_48=(Token)match(input,59,FOLLOW_47); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_48, grammarAccess.getOverridePredicate_2Access().getAmpersandKeyword_1_5_0());
            	      								
            	    }
            	    // InternalMcmodel.g:3814:9: ( ( ( (lv_damagedDefined_49_0= '!' ) ) otherlv_50= 'damaged' ) | ( ( (lv_damagedDefined_51_0= 'damaged' ) ) ( (otherlv_52= '!=' ( ( (lv_damaged_53_0= 'false' ) ) | otherlv_54= 'true' ) ) | ( (otherlv_55= '=' | otherlv_56= '==' ) ( ( (lv_damaged_57_0= 'true' ) ) | otherlv_58= 'false' ) ) ) ) )
            	    int alt86=2;
            	    int LA86_0 = input.LA(1);

            	    if ( (LA86_0==60) ) {
            	        alt86=1;
            	    }
            	    else if ( (LA86_0==67) ) {
            	        alt86=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 86, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt86) {
            	        case 1 :
            	            // InternalMcmodel.g:3815:10: ( ( (lv_damagedDefined_49_0= '!' ) ) otherlv_50= 'damaged' )
            	            {
            	            // InternalMcmodel.g:3815:10: ( ( (lv_damagedDefined_49_0= '!' ) ) otherlv_50= 'damaged' )
            	            // InternalMcmodel.g:3816:11: ( (lv_damagedDefined_49_0= '!' ) ) otherlv_50= 'damaged'
            	            {
            	            // InternalMcmodel.g:3816:11: ( (lv_damagedDefined_49_0= '!' ) )
            	            // InternalMcmodel.g:3817:12: (lv_damagedDefined_49_0= '!' )
            	            {
            	            // InternalMcmodel.g:3817:12: (lv_damagedDefined_49_0= '!' )
            	            // InternalMcmodel.g:3818:13: lv_damagedDefined_49_0= '!'
            	            {
            	            lv_damagedDefined_49_0=(Token)match(input,60,FOLLOW_48); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              													newLeafNode(lv_damagedDefined_49_0, grammarAccess.getOverridePredicate_2Access().getDamagedDefinedExclamationMarkKeyword_1_5_1_0_0_0());
            	              												
            	            }
            	            if ( state.backtracking==0 ) {

            	              													if (current==null) {
            	              														current = createModelElement(grammarAccess.getOverridePredicate_2Rule());
            	              													}
            	              													setWithLastConsumed(current, "damagedDefined", true, "!");
            	              												
            	            }

            	            }


            	            }

            	            otherlv_50=(Token)match(input,67,FOLLOW_37); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              											newLeafNode(otherlv_50, grammarAccess.getOverridePredicate_2Access().getDamagedKeyword_1_5_1_0_1());
            	              										
            	            }

            	            }


            	            }
            	            break;
            	        case 2 :
            	            // InternalMcmodel.g:3836:10: ( ( (lv_damagedDefined_51_0= 'damaged' ) ) ( (otherlv_52= '!=' ( ( (lv_damaged_53_0= 'false' ) ) | otherlv_54= 'true' ) ) | ( (otherlv_55= '=' | otherlv_56= '==' ) ( ( (lv_damaged_57_0= 'true' ) ) | otherlv_58= 'false' ) ) ) )
            	            {
            	            // InternalMcmodel.g:3836:10: ( ( (lv_damagedDefined_51_0= 'damaged' ) ) ( (otherlv_52= '!=' ( ( (lv_damaged_53_0= 'false' ) ) | otherlv_54= 'true' ) ) | ( (otherlv_55= '=' | otherlv_56= '==' ) ( ( (lv_damaged_57_0= 'true' ) ) | otherlv_58= 'false' ) ) ) )
            	            // InternalMcmodel.g:3837:11: ( (lv_damagedDefined_51_0= 'damaged' ) ) ( (otherlv_52= '!=' ( ( (lv_damaged_53_0= 'false' ) ) | otherlv_54= 'true' ) ) | ( (otherlv_55= '=' | otherlv_56= '==' ) ( ( (lv_damaged_57_0= 'true' ) ) | otherlv_58= 'false' ) ) )
            	            {
            	            // InternalMcmodel.g:3837:11: ( (lv_damagedDefined_51_0= 'damaged' ) )
            	            // InternalMcmodel.g:3838:12: (lv_damagedDefined_51_0= 'damaged' )
            	            {
            	            // InternalMcmodel.g:3838:12: (lv_damagedDefined_51_0= 'damaged' )
            	            // InternalMcmodel.g:3839:13: lv_damagedDefined_51_0= 'damaged'
            	            {
            	            lv_damagedDefined_51_0=(Token)match(input,67,FOLLOW_40); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              													newLeafNode(lv_damagedDefined_51_0, grammarAccess.getOverridePredicate_2Access().getDamagedDefinedDamagedKeyword_1_5_1_1_0_0());
            	              												
            	            }
            	            if ( state.backtracking==0 ) {

            	              													if (current==null) {
            	              														current = createModelElement(grammarAccess.getOverridePredicate_2Rule());
            	              													}
            	              													setWithLastConsumed(current, "damagedDefined", true, "damaged");
            	              												
            	            }

            	            }


            	            }

            	            // InternalMcmodel.g:3851:11: ( (otherlv_52= '!=' ( ( (lv_damaged_53_0= 'false' ) ) | otherlv_54= 'true' ) ) | ( (otherlv_55= '=' | otherlv_56= '==' ) ( ( (lv_damaged_57_0= 'true' ) ) | otherlv_58= 'false' ) ) )
            	            int alt85=2;
            	            int LA85_0 = input.LA(1);

            	            if ( (LA85_0==62) ) {
            	                alt85=1;
            	            }
            	            else if ( (LA85_0==18||LA85_0==58) ) {
            	                alt85=2;
            	            }
            	            else {
            	                if (state.backtracking>0) {state.failed=true; return current;}
            	                NoViableAltException nvae =
            	                    new NoViableAltException("", 85, 0, input);

            	                throw nvae;
            	            }
            	            switch (alt85) {
            	                case 1 :
            	                    // InternalMcmodel.g:3852:12: (otherlv_52= '!=' ( ( (lv_damaged_53_0= 'false' ) ) | otherlv_54= 'true' ) )
            	                    {
            	                    // InternalMcmodel.g:3852:12: (otherlv_52= '!=' ( ( (lv_damaged_53_0= 'false' ) ) | otherlv_54= 'true' ) )
            	                    // InternalMcmodel.g:3853:13: otherlv_52= '!=' ( ( (lv_damaged_53_0= 'false' ) ) | otherlv_54= 'true' )
            	                    {
            	                    otherlv_52=(Token)match(input,62,FOLLOW_7); if (state.failed) return current;
            	                    if ( state.backtracking==0 ) {

            	                      													newLeafNode(otherlv_52, grammarAccess.getOverridePredicate_2Access().getExclamationMarkEqualsSignKeyword_1_5_1_1_1_0_0());
            	                      												
            	                    }
            	                    // InternalMcmodel.g:3857:13: ( ( (lv_damaged_53_0= 'false' ) ) | otherlv_54= 'true' )
            	                    int alt82=2;
            	                    int LA82_0 = input.LA(1);

            	                    if ( (LA82_0==21) ) {
            	                        alt82=1;
            	                    }
            	                    else if ( (LA82_0==20) ) {
            	                        alt82=2;
            	                    }
            	                    else {
            	                        if (state.backtracking>0) {state.failed=true; return current;}
            	                        NoViableAltException nvae =
            	                            new NoViableAltException("", 82, 0, input);

            	                        throw nvae;
            	                    }
            	                    switch (alt82) {
            	                        case 1 :
            	                            // InternalMcmodel.g:3858:14: ( (lv_damaged_53_0= 'false' ) )
            	                            {
            	                            // InternalMcmodel.g:3858:14: ( (lv_damaged_53_0= 'false' ) )
            	                            // InternalMcmodel.g:3859:15: (lv_damaged_53_0= 'false' )
            	                            {
            	                            // InternalMcmodel.g:3859:15: (lv_damaged_53_0= 'false' )
            	                            // InternalMcmodel.g:3860:16: lv_damaged_53_0= 'false'
            	                            {
            	                            lv_damaged_53_0=(Token)match(input,21,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              																newLeafNode(lv_damaged_53_0, grammarAccess.getOverridePredicate_2Access().getDamagedFalseKeyword_1_5_1_1_1_0_1_0_0());
            	                              															
            	                            }
            	                            if ( state.backtracking==0 ) {

            	                              																if (current==null) {
            	                              																	current = createModelElement(grammarAccess.getOverridePredicate_2Rule());
            	                              																}
            	                              																setWithLastConsumed(current, "damaged", true, "false");
            	                              															
            	                            }

            	                            }


            	                            }


            	                            }
            	                            break;
            	                        case 2 :
            	                            // InternalMcmodel.g:3873:14: otherlv_54= 'true'
            	                            {
            	                            otherlv_54=(Token)match(input,20,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_54, grammarAccess.getOverridePredicate_2Access().getTrueKeyword_1_5_1_1_1_0_1_1());
            	                              													
            	                            }

            	                            }
            	                            break;

            	                    }


            	                    }


            	                    }
            	                    break;
            	                case 2 :
            	                    // InternalMcmodel.g:3880:12: ( (otherlv_55= '=' | otherlv_56= '==' ) ( ( (lv_damaged_57_0= 'true' ) ) | otherlv_58= 'false' ) )
            	                    {
            	                    // InternalMcmodel.g:3880:12: ( (otherlv_55= '=' | otherlv_56= '==' ) ( ( (lv_damaged_57_0= 'true' ) ) | otherlv_58= 'false' ) )
            	                    // InternalMcmodel.g:3881:13: (otherlv_55= '=' | otherlv_56= '==' ) ( ( (lv_damaged_57_0= 'true' ) ) | otherlv_58= 'false' )
            	                    {
            	                    // InternalMcmodel.g:3881:13: (otherlv_55= '=' | otherlv_56= '==' )
            	                    int alt83=2;
            	                    int LA83_0 = input.LA(1);

            	                    if ( (LA83_0==18) ) {
            	                        alt83=1;
            	                    }
            	                    else if ( (LA83_0==58) ) {
            	                        alt83=2;
            	                    }
            	                    else {
            	                        if (state.backtracking>0) {state.failed=true; return current;}
            	                        NoViableAltException nvae =
            	                            new NoViableAltException("", 83, 0, input);

            	                        throw nvae;
            	                    }
            	                    switch (alt83) {
            	                        case 1 :
            	                            // InternalMcmodel.g:3882:14: otherlv_55= '='
            	                            {
            	                            otherlv_55=(Token)match(input,18,FOLLOW_7); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_55, grammarAccess.getOverridePredicate_2Access().getEqualsSignKeyword_1_5_1_1_1_1_0_0());
            	                              													
            	                            }

            	                            }
            	                            break;
            	                        case 2 :
            	                            // InternalMcmodel.g:3887:14: otherlv_56= '=='
            	                            {
            	                            otherlv_56=(Token)match(input,58,FOLLOW_7); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_56, grammarAccess.getOverridePredicate_2Access().getEqualsSignEqualsSignKeyword_1_5_1_1_1_1_0_1());
            	                              													
            	                            }

            	                            }
            	                            break;

            	                    }

            	                    // InternalMcmodel.g:3892:13: ( ( (lv_damaged_57_0= 'true' ) ) | otherlv_58= 'false' )
            	                    int alt84=2;
            	                    int LA84_0 = input.LA(1);

            	                    if ( (LA84_0==20) ) {
            	                        alt84=1;
            	                    }
            	                    else if ( (LA84_0==21) ) {
            	                        alt84=2;
            	                    }
            	                    else {
            	                        if (state.backtracking>0) {state.failed=true; return current;}
            	                        NoViableAltException nvae =
            	                            new NoViableAltException("", 84, 0, input);

            	                        throw nvae;
            	                    }
            	                    switch (alt84) {
            	                        case 1 :
            	                            // InternalMcmodel.g:3893:14: ( (lv_damaged_57_0= 'true' ) )
            	                            {
            	                            // InternalMcmodel.g:3893:14: ( (lv_damaged_57_0= 'true' ) )
            	                            // InternalMcmodel.g:3894:15: (lv_damaged_57_0= 'true' )
            	                            {
            	                            // InternalMcmodel.g:3894:15: (lv_damaged_57_0= 'true' )
            	                            // InternalMcmodel.g:3895:16: lv_damaged_57_0= 'true'
            	                            {
            	                            lv_damaged_57_0=(Token)match(input,20,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              																newLeafNode(lv_damaged_57_0, grammarAccess.getOverridePredicate_2Access().getDamagedTrueKeyword_1_5_1_1_1_1_1_0_0());
            	                              															
            	                            }
            	                            if ( state.backtracking==0 ) {

            	                              																if (current==null) {
            	                              																	current = createModelElement(grammarAccess.getOverridePredicate_2Rule());
            	                              																}
            	                              																setWithLastConsumed(current, "damaged", true, "true");
            	                              															
            	                            }

            	                            }


            	                            }


            	                            }
            	                            break;
            	                        case 2 :
            	                            // InternalMcmodel.g:3908:14: otherlv_58= 'false'
            	                            {
            	                            otherlv_58=(Token)match(input,21,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_58, grammarAccess.getOverridePredicate_2Access().getFalseKeyword_1_5_1_1_1_1_1_1());
            	                              													
            	                            }

            	                            }
            	                            break;

            	                    }


            	                    }


            	                    }
            	                    break;

            	            }


            	            }


            	            }
            	            break;

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getOverridePredicate_2Access().getUnorderedGroup_1());

            	    }


            	    }


            	    }
            	    break;
            	case 7 :
            	    // InternalMcmodel.g:3923:4: ({...}? => ( ({...}? => (otherlv_59= '&' ( ( ( (lv_lefthandedDefined_60_0= '!' ) ) otherlv_61= 'lefthanded' ) | ( ( (lv_lefthandedDefined_62_0= 'lefthanded' ) ) ( (otherlv_63= '!=' ( ( (lv_lefthanded_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_lefthanded_68_0= 'true' ) ) | otherlv_69= 'false' ) ) ) ) ) ) ) ) )
            	    {
            	    // InternalMcmodel.g:3923:4: ({...}? => ( ({...}? => (otherlv_59= '&' ( ( ( (lv_lefthandedDefined_60_0= '!' ) ) otherlv_61= 'lefthanded' ) | ( ( (lv_lefthandedDefined_62_0= 'lefthanded' ) ) ( (otherlv_63= '!=' ( ( (lv_lefthanded_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_lefthanded_68_0= 'true' ) ) | otherlv_69= 'false' ) ) ) ) ) ) ) ) )
            	    // InternalMcmodel.g:3924:5: {...}? => ( ({...}? => (otherlv_59= '&' ( ( ( (lv_lefthandedDefined_60_0= '!' ) ) otherlv_61= 'lefthanded' ) | ( ( (lv_lefthandedDefined_62_0= 'lefthanded' ) ) ( (otherlv_63= '!=' ( ( (lv_lefthanded_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_lefthanded_68_0= 'true' ) ) | otherlv_69= 'false' ) ) ) ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_2Access().getUnorderedGroup_1(), 6) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_2", "getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_2Access().getUnorderedGroup_1(), 6)");
            	    }
            	    // InternalMcmodel.g:3924:116: ( ({...}? => (otherlv_59= '&' ( ( ( (lv_lefthandedDefined_60_0= '!' ) ) otherlv_61= 'lefthanded' ) | ( ( (lv_lefthandedDefined_62_0= 'lefthanded' ) ) ( (otherlv_63= '!=' ( ( (lv_lefthanded_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_lefthanded_68_0= 'true' ) ) | otherlv_69= 'false' ) ) ) ) ) ) ) )
            	    // InternalMcmodel.g:3925:6: ({...}? => (otherlv_59= '&' ( ( ( (lv_lefthandedDefined_60_0= '!' ) ) otherlv_61= 'lefthanded' ) | ( ( (lv_lefthandedDefined_62_0= 'lefthanded' ) ) ( (otherlv_63= '!=' ( ( (lv_lefthanded_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_lefthanded_68_0= 'true' ) ) | otherlv_69= 'false' ) ) ) ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getOverridePredicate_2Access().getUnorderedGroup_1(), 6);
            	    // InternalMcmodel.g:3928:9: ({...}? => (otherlv_59= '&' ( ( ( (lv_lefthandedDefined_60_0= '!' ) ) otherlv_61= 'lefthanded' ) | ( ( (lv_lefthandedDefined_62_0= 'lefthanded' ) ) ( (otherlv_63= '!=' ( ( (lv_lefthanded_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_lefthanded_68_0= 'true' ) ) | otherlv_69= 'false' ) ) ) ) ) ) )
            	    // InternalMcmodel.g:3928:10: {...}? => (otherlv_59= '&' ( ( ( (lv_lefthandedDefined_60_0= '!' ) ) otherlv_61= 'lefthanded' ) | ( ( (lv_lefthandedDefined_62_0= 'lefthanded' ) ) ( (otherlv_63= '!=' ( ( (lv_lefthanded_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_lefthanded_68_0= 'true' ) ) | otherlv_69= 'false' ) ) ) ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_2", "true");
            	    }
            	    // InternalMcmodel.g:3928:19: (otherlv_59= '&' ( ( ( (lv_lefthandedDefined_60_0= '!' ) ) otherlv_61= 'lefthanded' ) | ( ( (lv_lefthandedDefined_62_0= 'lefthanded' ) ) ( (otherlv_63= '!=' ( ( (lv_lefthanded_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_lefthanded_68_0= 'true' ) ) | otherlv_69= 'false' ) ) ) ) ) )
            	    // InternalMcmodel.g:3928:20: otherlv_59= '&' ( ( ( (lv_lefthandedDefined_60_0= '!' ) ) otherlv_61= 'lefthanded' ) | ( ( (lv_lefthandedDefined_62_0= 'lefthanded' ) ) ( (otherlv_63= '!=' ( ( (lv_lefthanded_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_lefthanded_68_0= 'true' ) ) | otherlv_69= 'false' ) ) ) ) )
            	    {
            	    otherlv_59=(Token)match(input,59,FOLLOW_49); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_59, grammarAccess.getOverridePredicate_2Access().getAmpersandKeyword_1_6_0());
            	      								
            	    }
            	    // InternalMcmodel.g:3932:9: ( ( ( (lv_lefthandedDefined_60_0= '!' ) ) otherlv_61= 'lefthanded' ) | ( ( (lv_lefthandedDefined_62_0= 'lefthanded' ) ) ( (otherlv_63= '!=' ( ( (lv_lefthanded_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_lefthanded_68_0= 'true' ) ) | otherlv_69= 'false' ) ) ) ) )
            	    int alt91=2;
            	    int LA91_0 = input.LA(1);

            	    if ( (LA91_0==60) ) {
            	        alt91=1;
            	    }
            	    else if ( (LA91_0==68) ) {
            	        alt91=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 91, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt91) {
            	        case 1 :
            	            // InternalMcmodel.g:3933:10: ( ( (lv_lefthandedDefined_60_0= '!' ) ) otherlv_61= 'lefthanded' )
            	            {
            	            // InternalMcmodel.g:3933:10: ( ( (lv_lefthandedDefined_60_0= '!' ) ) otherlv_61= 'lefthanded' )
            	            // InternalMcmodel.g:3934:11: ( (lv_lefthandedDefined_60_0= '!' ) ) otherlv_61= 'lefthanded'
            	            {
            	            // InternalMcmodel.g:3934:11: ( (lv_lefthandedDefined_60_0= '!' ) )
            	            // InternalMcmodel.g:3935:12: (lv_lefthandedDefined_60_0= '!' )
            	            {
            	            // InternalMcmodel.g:3935:12: (lv_lefthandedDefined_60_0= '!' )
            	            // InternalMcmodel.g:3936:13: lv_lefthandedDefined_60_0= '!'
            	            {
            	            lv_lefthandedDefined_60_0=(Token)match(input,60,FOLLOW_50); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              													newLeafNode(lv_lefthandedDefined_60_0, grammarAccess.getOverridePredicate_2Access().getLefthandedDefinedExclamationMarkKeyword_1_6_1_0_0_0());
            	              												
            	            }
            	            if ( state.backtracking==0 ) {

            	              													if (current==null) {
            	              														current = createModelElement(grammarAccess.getOverridePredicate_2Rule());
            	              													}
            	              													setWithLastConsumed(current, "lefthandedDefined", true, "!");
            	              												
            	            }

            	            }


            	            }

            	            otherlv_61=(Token)match(input,68,FOLLOW_37); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              											newLeafNode(otherlv_61, grammarAccess.getOverridePredicate_2Access().getLefthandedKeyword_1_6_1_0_1());
            	              										
            	            }

            	            }


            	            }
            	            break;
            	        case 2 :
            	            // InternalMcmodel.g:3954:10: ( ( (lv_lefthandedDefined_62_0= 'lefthanded' ) ) ( (otherlv_63= '!=' ( ( (lv_lefthanded_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_lefthanded_68_0= 'true' ) ) | otherlv_69= 'false' ) ) ) )
            	            {
            	            // InternalMcmodel.g:3954:10: ( ( (lv_lefthandedDefined_62_0= 'lefthanded' ) ) ( (otherlv_63= '!=' ( ( (lv_lefthanded_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_lefthanded_68_0= 'true' ) ) | otherlv_69= 'false' ) ) ) )
            	            // InternalMcmodel.g:3955:11: ( (lv_lefthandedDefined_62_0= 'lefthanded' ) ) ( (otherlv_63= '!=' ( ( (lv_lefthanded_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_lefthanded_68_0= 'true' ) ) | otherlv_69= 'false' ) ) )
            	            {
            	            // InternalMcmodel.g:3955:11: ( (lv_lefthandedDefined_62_0= 'lefthanded' ) )
            	            // InternalMcmodel.g:3956:12: (lv_lefthandedDefined_62_0= 'lefthanded' )
            	            {
            	            // InternalMcmodel.g:3956:12: (lv_lefthandedDefined_62_0= 'lefthanded' )
            	            // InternalMcmodel.g:3957:13: lv_lefthandedDefined_62_0= 'lefthanded'
            	            {
            	            lv_lefthandedDefined_62_0=(Token)match(input,68,FOLLOW_40); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              													newLeafNode(lv_lefthandedDefined_62_0, grammarAccess.getOverridePredicate_2Access().getLefthandedDefinedLefthandedKeyword_1_6_1_1_0_0());
            	              												
            	            }
            	            if ( state.backtracking==0 ) {

            	              													if (current==null) {
            	              														current = createModelElement(grammarAccess.getOverridePredicate_2Rule());
            	              													}
            	              													setWithLastConsumed(current, "lefthandedDefined", true, "lefthanded");
            	              												
            	            }

            	            }


            	            }

            	            // InternalMcmodel.g:3969:11: ( (otherlv_63= '!=' ( ( (lv_lefthanded_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_lefthanded_68_0= 'true' ) ) | otherlv_69= 'false' ) ) )
            	            int alt90=2;
            	            int LA90_0 = input.LA(1);

            	            if ( (LA90_0==62) ) {
            	                alt90=1;
            	            }
            	            else if ( (LA90_0==18||LA90_0==58) ) {
            	                alt90=2;
            	            }
            	            else {
            	                if (state.backtracking>0) {state.failed=true; return current;}
            	                NoViableAltException nvae =
            	                    new NoViableAltException("", 90, 0, input);

            	                throw nvae;
            	            }
            	            switch (alt90) {
            	                case 1 :
            	                    // InternalMcmodel.g:3970:12: (otherlv_63= '!=' ( ( (lv_lefthanded_64_0= 'false' ) ) | otherlv_65= 'true' ) )
            	                    {
            	                    // InternalMcmodel.g:3970:12: (otherlv_63= '!=' ( ( (lv_lefthanded_64_0= 'false' ) ) | otherlv_65= 'true' ) )
            	                    // InternalMcmodel.g:3971:13: otherlv_63= '!=' ( ( (lv_lefthanded_64_0= 'false' ) ) | otherlv_65= 'true' )
            	                    {
            	                    otherlv_63=(Token)match(input,62,FOLLOW_7); if (state.failed) return current;
            	                    if ( state.backtracking==0 ) {

            	                      													newLeafNode(otherlv_63, grammarAccess.getOverridePredicate_2Access().getExclamationMarkEqualsSignKeyword_1_6_1_1_1_0_0());
            	                      												
            	                    }
            	                    // InternalMcmodel.g:3975:13: ( ( (lv_lefthanded_64_0= 'false' ) ) | otherlv_65= 'true' )
            	                    int alt87=2;
            	                    int LA87_0 = input.LA(1);

            	                    if ( (LA87_0==21) ) {
            	                        alt87=1;
            	                    }
            	                    else if ( (LA87_0==20) ) {
            	                        alt87=2;
            	                    }
            	                    else {
            	                        if (state.backtracking>0) {state.failed=true; return current;}
            	                        NoViableAltException nvae =
            	                            new NoViableAltException("", 87, 0, input);

            	                        throw nvae;
            	                    }
            	                    switch (alt87) {
            	                        case 1 :
            	                            // InternalMcmodel.g:3976:14: ( (lv_lefthanded_64_0= 'false' ) )
            	                            {
            	                            // InternalMcmodel.g:3976:14: ( (lv_lefthanded_64_0= 'false' ) )
            	                            // InternalMcmodel.g:3977:15: (lv_lefthanded_64_0= 'false' )
            	                            {
            	                            // InternalMcmodel.g:3977:15: (lv_lefthanded_64_0= 'false' )
            	                            // InternalMcmodel.g:3978:16: lv_lefthanded_64_0= 'false'
            	                            {
            	                            lv_lefthanded_64_0=(Token)match(input,21,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              																newLeafNode(lv_lefthanded_64_0, grammarAccess.getOverridePredicate_2Access().getLefthandedFalseKeyword_1_6_1_1_1_0_1_0_0());
            	                              															
            	                            }
            	                            if ( state.backtracking==0 ) {

            	                              																if (current==null) {
            	                              																	current = createModelElement(grammarAccess.getOverridePredicate_2Rule());
            	                              																}
            	                              																setWithLastConsumed(current, "lefthanded", true, "false");
            	                              															
            	                            }

            	                            }


            	                            }


            	                            }
            	                            break;
            	                        case 2 :
            	                            // InternalMcmodel.g:3991:14: otherlv_65= 'true'
            	                            {
            	                            otherlv_65=(Token)match(input,20,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_65, grammarAccess.getOverridePredicate_2Access().getTrueKeyword_1_6_1_1_1_0_1_1());
            	                              													
            	                            }

            	                            }
            	                            break;

            	                    }


            	                    }


            	                    }
            	                    break;
            	                case 2 :
            	                    // InternalMcmodel.g:3998:12: ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_lefthanded_68_0= 'true' ) ) | otherlv_69= 'false' ) )
            	                    {
            	                    // InternalMcmodel.g:3998:12: ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_lefthanded_68_0= 'true' ) ) | otherlv_69= 'false' ) )
            	                    // InternalMcmodel.g:3999:13: (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_lefthanded_68_0= 'true' ) ) | otherlv_69= 'false' )
            	                    {
            	                    // InternalMcmodel.g:3999:13: (otherlv_66= '=' | otherlv_67= '==' )
            	                    int alt88=2;
            	                    int LA88_0 = input.LA(1);

            	                    if ( (LA88_0==18) ) {
            	                        alt88=1;
            	                    }
            	                    else if ( (LA88_0==58) ) {
            	                        alt88=2;
            	                    }
            	                    else {
            	                        if (state.backtracking>0) {state.failed=true; return current;}
            	                        NoViableAltException nvae =
            	                            new NoViableAltException("", 88, 0, input);

            	                        throw nvae;
            	                    }
            	                    switch (alt88) {
            	                        case 1 :
            	                            // InternalMcmodel.g:4000:14: otherlv_66= '='
            	                            {
            	                            otherlv_66=(Token)match(input,18,FOLLOW_7); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_66, grammarAccess.getOverridePredicate_2Access().getEqualsSignKeyword_1_6_1_1_1_1_0_0());
            	                              													
            	                            }

            	                            }
            	                            break;
            	                        case 2 :
            	                            // InternalMcmodel.g:4005:14: otherlv_67= '=='
            	                            {
            	                            otherlv_67=(Token)match(input,58,FOLLOW_7); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_67, grammarAccess.getOverridePredicate_2Access().getEqualsSignEqualsSignKeyword_1_6_1_1_1_1_0_1());
            	                              													
            	                            }

            	                            }
            	                            break;

            	                    }

            	                    // InternalMcmodel.g:4010:13: ( ( (lv_lefthanded_68_0= 'true' ) ) | otherlv_69= 'false' )
            	                    int alt89=2;
            	                    int LA89_0 = input.LA(1);

            	                    if ( (LA89_0==20) ) {
            	                        alt89=1;
            	                    }
            	                    else if ( (LA89_0==21) ) {
            	                        alt89=2;
            	                    }
            	                    else {
            	                        if (state.backtracking>0) {state.failed=true; return current;}
            	                        NoViableAltException nvae =
            	                            new NoViableAltException("", 89, 0, input);

            	                        throw nvae;
            	                    }
            	                    switch (alt89) {
            	                        case 1 :
            	                            // InternalMcmodel.g:4011:14: ( (lv_lefthanded_68_0= 'true' ) )
            	                            {
            	                            // InternalMcmodel.g:4011:14: ( (lv_lefthanded_68_0= 'true' ) )
            	                            // InternalMcmodel.g:4012:15: (lv_lefthanded_68_0= 'true' )
            	                            {
            	                            // InternalMcmodel.g:4012:15: (lv_lefthanded_68_0= 'true' )
            	                            // InternalMcmodel.g:4013:16: lv_lefthanded_68_0= 'true'
            	                            {
            	                            lv_lefthanded_68_0=(Token)match(input,20,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              																newLeafNode(lv_lefthanded_68_0, grammarAccess.getOverridePredicate_2Access().getLefthandedTrueKeyword_1_6_1_1_1_1_1_0_0());
            	                              															
            	                            }
            	                            if ( state.backtracking==0 ) {

            	                              																if (current==null) {
            	                              																	current = createModelElement(grammarAccess.getOverridePredicate_2Rule());
            	                              																}
            	                              																setWithLastConsumed(current, "lefthanded", true, "true");
            	                              															
            	                            }

            	                            }


            	                            }


            	                            }
            	                            break;
            	                        case 2 :
            	                            // InternalMcmodel.g:4026:14: otherlv_69= 'false'
            	                            {
            	                            otherlv_69=(Token)match(input,21,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_69, grammarAccess.getOverridePredicate_2Access().getFalseKeyword_1_6_1_1_1_1_1_1());
            	                              													
            	                            }

            	                            }
            	                            break;

            	                    }


            	                    }


            	                    }
            	                    break;

            	            }


            	            }


            	            }
            	            break;

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getOverridePredicate_2Access().getUnorderedGroup_1());

            	    }


            	    }


            	    }
            	    break;
            	case 8 :
            	    // InternalMcmodel.g:4041:4: ({...}? => ( ({...}? => (otherlv_70= '&' ( (lv_pullDefined_71_0= 'pull' ) ) (otherlv_72= '=' | otherlv_73= '==' ) ( (lv_pull_74_0= RULE_PERCENTAGE ) ) ) ) ) )
            	    {
            	    // InternalMcmodel.g:4041:4: ({...}? => ( ({...}? => (otherlv_70= '&' ( (lv_pullDefined_71_0= 'pull' ) ) (otherlv_72= '=' | otherlv_73= '==' ) ( (lv_pull_74_0= RULE_PERCENTAGE ) ) ) ) ) )
            	    // InternalMcmodel.g:4042:5: {...}? => ( ({...}? => (otherlv_70= '&' ( (lv_pullDefined_71_0= 'pull' ) ) (otherlv_72= '=' | otherlv_73= '==' ) ( (lv_pull_74_0= RULE_PERCENTAGE ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_2Access().getUnorderedGroup_1(), 7) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_2", "getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_2Access().getUnorderedGroup_1(), 7)");
            	    }
            	    // InternalMcmodel.g:4042:116: ( ({...}? => (otherlv_70= '&' ( (lv_pullDefined_71_0= 'pull' ) ) (otherlv_72= '=' | otherlv_73= '==' ) ( (lv_pull_74_0= RULE_PERCENTAGE ) ) ) ) )
            	    // InternalMcmodel.g:4043:6: ({...}? => (otherlv_70= '&' ( (lv_pullDefined_71_0= 'pull' ) ) (otherlv_72= '=' | otherlv_73= '==' ) ( (lv_pull_74_0= RULE_PERCENTAGE ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getOverridePredicate_2Access().getUnorderedGroup_1(), 7);
            	    // InternalMcmodel.g:4046:9: ({...}? => (otherlv_70= '&' ( (lv_pullDefined_71_0= 'pull' ) ) (otherlv_72= '=' | otherlv_73= '==' ) ( (lv_pull_74_0= RULE_PERCENTAGE ) ) ) )
            	    // InternalMcmodel.g:4046:10: {...}? => (otherlv_70= '&' ( (lv_pullDefined_71_0= 'pull' ) ) (otherlv_72= '=' | otherlv_73= '==' ) ( (lv_pull_74_0= RULE_PERCENTAGE ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_2", "true");
            	    }
            	    // InternalMcmodel.g:4046:19: (otherlv_70= '&' ( (lv_pullDefined_71_0= 'pull' ) ) (otherlv_72= '=' | otherlv_73= '==' ) ( (lv_pull_74_0= RULE_PERCENTAGE ) ) )
            	    // InternalMcmodel.g:4046:20: otherlv_70= '&' ( (lv_pullDefined_71_0= 'pull' ) ) (otherlv_72= '=' | otherlv_73= '==' ) ( (lv_pull_74_0= RULE_PERCENTAGE ) )
            	    {
            	    otherlv_70=(Token)match(input,59,FOLLOW_51); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_70, grammarAccess.getOverridePredicate_2Access().getAmpersandKeyword_1_7_0());
            	      								
            	    }
            	    // InternalMcmodel.g:4050:9: ( (lv_pullDefined_71_0= 'pull' ) )
            	    // InternalMcmodel.g:4051:10: (lv_pullDefined_71_0= 'pull' )
            	    {
            	    // InternalMcmodel.g:4051:10: (lv_pullDefined_71_0= 'pull' )
            	    // InternalMcmodel.g:4052:11: lv_pullDefined_71_0= 'pull'
            	    {
            	    lv_pullDefined_71_0=(Token)match(input,69,FOLLOW_35); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											newLeafNode(lv_pullDefined_71_0, grammarAccess.getOverridePredicate_2Access().getPullDefinedPullKeyword_1_7_1_0());
            	      										
            	    }
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElement(grammarAccess.getOverridePredicate_2Rule());
            	      											}
            	      											setWithLastConsumed(current, "pullDefined", true, "pull");
            	      										
            	    }

            	    }


            	    }

            	    // InternalMcmodel.g:4064:9: (otherlv_72= '=' | otherlv_73= '==' )
            	    int alt92=2;
            	    int LA92_0 = input.LA(1);

            	    if ( (LA92_0==18) ) {
            	        alt92=1;
            	    }
            	    else if ( (LA92_0==58) ) {
            	        alt92=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 92, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt92) {
            	        case 1 :
            	            // InternalMcmodel.g:4065:10: otherlv_72= '='
            	            {
            	            otherlv_72=(Token)match(input,18,FOLLOW_36); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(otherlv_72, grammarAccess.getOverridePredicate_2Access().getEqualsSignKeyword_1_7_2_0());
            	              									
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalMcmodel.g:4070:10: otherlv_73= '=='
            	            {
            	            otherlv_73=(Token)match(input,58,FOLLOW_36); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(otherlv_73, grammarAccess.getOverridePredicate_2Access().getEqualsSignEqualsSignKeyword_1_7_2_1());
            	              									
            	            }

            	            }
            	            break;

            	    }

            	    // InternalMcmodel.g:4075:9: ( (lv_pull_74_0= RULE_PERCENTAGE ) )
            	    // InternalMcmodel.g:4076:10: (lv_pull_74_0= RULE_PERCENTAGE )
            	    {
            	    // InternalMcmodel.g:4076:10: (lv_pull_74_0= RULE_PERCENTAGE )
            	    // InternalMcmodel.g:4077:11: lv_pull_74_0= RULE_PERCENTAGE
            	    {
            	    lv_pull_74_0=(Token)match(input,RULE_PERCENTAGE,FOLLOW_37); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											newLeafNode(lv_pull_74_0, grammarAccess.getOverridePredicate_2Access().getPullPERCENTAGETerminalRuleCall_1_7_3_0());
            	      										
            	    }
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElement(grammarAccess.getOverridePredicate_2Rule());
            	      											}
            	      											setWithLastConsumed(
            	      												current,
            	      												"pull",
            	      												lv_pull_74_0,
            	      												"com.raptor.mcmodel.Mcmodel.PERCENTAGE");
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getOverridePredicate_2Access().getUnorderedGroup_1());

            	    }


            	    }


            	    }
            	    break;
            	case 9 :
            	    // InternalMcmodel.g:4099:4: ({...}? => ( ({...}? => (otherlv_75= '&' ( ( ( (lv_pullingDefined_76_0= '!' ) ) otherlv_77= 'pulling' ) | ( ( (lv_pullingDefined_78_0= 'pulling' ) ) ( (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) ) | ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) ) ) ) ) ) ) ) )
            	    {
            	    // InternalMcmodel.g:4099:4: ({...}? => ( ({...}? => (otherlv_75= '&' ( ( ( (lv_pullingDefined_76_0= '!' ) ) otherlv_77= 'pulling' ) | ( ( (lv_pullingDefined_78_0= 'pulling' ) ) ( (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) ) | ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) ) ) ) ) ) ) ) )
            	    // InternalMcmodel.g:4100:5: {...}? => ( ({...}? => (otherlv_75= '&' ( ( ( (lv_pullingDefined_76_0= '!' ) ) otherlv_77= 'pulling' ) | ( ( (lv_pullingDefined_78_0= 'pulling' ) ) ( (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) ) | ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) ) ) ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_2Access().getUnorderedGroup_1(), 8) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_2", "getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_2Access().getUnorderedGroup_1(), 8)");
            	    }
            	    // InternalMcmodel.g:4100:116: ( ({...}? => (otherlv_75= '&' ( ( ( (lv_pullingDefined_76_0= '!' ) ) otherlv_77= 'pulling' ) | ( ( (lv_pullingDefined_78_0= 'pulling' ) ) ( (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) ) | ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) ) ) ) ) ) ) )
            	    // InternalMcmodel.g:4101:6: ({...}? => (otherlv_75= '&' ( ( ( (lv_pullingDefined_76_0= '!' ) ) otherlv_77= 'pulling' ) | ( ( (lv_pullingDefined_78_0= 'pulling' ) ) ( (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) ) | ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) ) ) ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getOverridePredicate_2Access().getUnorderedGroup_1(), 8);
            	    // InternalMcmodel.g:4104:9: ({...}? => (otherlv_75= '&' ( ( ( (lv_pullingDefined_76_0= '!' ) ) otherlv_77= 'pulling' ) | ( ( (lv_pullingDefined_78_0= 'pulling' ) ) ( (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) ) | ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) ) ) ) ) ) )
            	    // InternalMcmodel.g:4104:10: {...}? => (otherlv_75= '&' ( ( ( (lv_pullingDefined_76_0= '!' ) ) otherlv_77= 'pulling' ) | ( ( (lv_pullingDefined_78_0= 'pulling' ) ) ( (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) ) | ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) ) ) ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_2", "true");
            	    }
            	    // InternalMcmodel.g:4104:19: (otherlv_75= '&' ( ( ( (lv_pullingDefined_76_0= '!' ) ) otherlv_77= 'pulling' ) | ( ( (lv_pullingDefined_78_0= 'pulling' ) ) ( (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) ) | ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) ) ) ) ) )
            	    // InternalMcmodel.g:4104:20: otherlv_75= '&' ( ( ( (lv_pullingDefined_76_0= '!' ) ) otherlv_77= 'pulling' ) | ( ( (lv_pullingDefined_78_0= 'pulling' ) ) ( (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) ) | ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) ) ) ) )
            	    {
            	    otherlv_75=(Token)match(input,59,FOLLOW_52); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_75, grammarAccess.getOverridePredicate_2Access().getAmpersandKeyword_1_8_0());
            	      								
            	    }
            	    // InternalMcmodel.g:4108:9: ( ( ( (lv_pullingDefined_76_0= '!' ) ) otherlv_77= 'pulling' ) | ( ( (lv_pullingDefined_78_0= 'pulling' ) ) ( (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) ) | ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) ) ) ) )
            	    int alt97=2;
            	    int LA97_0 = input.LA(1);

            	    if ( (LA97_0==60) ) {
            	        alt97=1;
            	    }
            	    else if ( (LA97_0==70) ) {
            	        alt97=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 97, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt97) {
            	        case 1 :
            	            // InternalMcmodel.g:4109:10: ( ( (lv_pullingDefined_76_0= '!' ) ) otherlv_77= 'pulling' )
            	            {
            	            // InternalMcmodel.g:4109:10: ( ( (lv_pullingDefined_76_0= '!' ) ) otherlv_77= 'pulling' )
            	            // InternalMcmodel.g:4110:11: ( (lv_pullingDefined_76_0= '!' ) ) otherlv_77= 'pulling'
            	            {
            	            // InternalMcmodel.g:4110:11: ( (lv_pullingDefined_76_0= '!' ) )
            	            // InternalMcmodel.g:4111:12: (lv_pullingDefined_76_0= '!' )
            	            {
            	            // InternalMcmodel.g:4111:12: (lv_pullingDefined_76_0= '!' )
            	            // InternalMcmodel.g:4112:13: lv_pullingDefined_76_0= '!'
            	            {
            	            lv_pullingDefined_76_0=(Token)match(input,60,FOLLOW_53); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              													newLeafNode(lv_pullingDefined_76_0, grammarAccess.getOverridePredicate_2Access().getPullingDefinedExclamationMarkKeyword_1_8_1_0_0_0());
            	              												
            	            }
            	            if ( state.backtracking==0 ) {

            	              													if (current==null) {
            	              														current = createModelElement(grammarAccess.getOverridePredicate_2Rule());
            	              													}
            	              													setWithLastConsumed(current, "pullingDefined", true, "!");
            	              												
            	            }

            	            }


            	            }

            	            otherlv_77=(Token)match(input,70,FOLLOW_37); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              											newLeafNode(otherlv_77, grammarAccess.getOverridePredicate_2Access().getPullingKeyword_1_8_1_0_1());
            	              										
            	            }

            	            }


            	            }
            	            break;
            	        case 2 :
            	            // InternalMcmodel.g:4130:10: ( ( (lv_pullingDefined_78_0= 'pulling' ) ) ( (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) ) | ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) ) ) )
            	            {
            	            // InternalMcmodel.g:4130:10: ( ( (lv_pullingDefined_78_0= 'pulling' ) ) ( (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) ) | ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) ) ) )
            	            // InternalMcmodel.g:4131:11: ( (lv_pullingDefined_78_0= 'pulling' ) ) ( (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) ) | ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) ) )
            	            {
            	            // InternalMcmodel.g:4131:11: ( (lv_pullingDefined_78_0= 'pulling' ) )
            	            // InternalMcmodel.g:4132:12: (lv_pullingDefined_78_0= 'pulling' )
            	            {
            	            // InternalMcmodel.g:4132:12: (lv_pullingDefined_78_0= 'pulling' )
            	            // InternalMcmodel.g:4133:13: lv_pullingDefined_78_0= 'pulling'
            	            {
            	            lv_pullingDefined_78_0=(Token)match(input,70,FOLLOW_40); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              													newLeafNode(lv_pullingDefined_78_0, grammarAccess.getOverridePredicate_2Access().getPullingDefinedPullingKeyword_1_8_1_1_0_0());
            	              												
            	            }
            	            if ( state.backtracking==0 ) {

            	              													if (current==null) {
            	              														current = createModelElement(grammarAccess.getOverridePredicate_2Rule());
            	              													}
            	              													setWithLastConsumed(current, "pullingDefined", true, "pulling");
            	              												
            	            }

            	            }


            	            }

            	            // InternalMcmodel.g:4145:11: ( (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) ) | ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) ) )
            	            int alt96=2;
            	            int LA96_0 = input.LA(1);

            	            if ( (LA96_0==62) ) {
            	                alt96=1;
            	            }
            	            else if ( (LA96_0==18||LA96_0==58) ) {
            	                alt96=2;
            	            }
            	            else {
            	                if (state.backtracking>0) {state.failed=true; return current;}
            	                NoViableAltException nvae =
            	                    new NoViableAltException("", 96, 0, input);

            	                throw nvae;
            	            }
            	            switch (alt96) {
            	                case 1 :
            	                    // InternalMcmodel.g:4146:12: (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) )
            	                    {
            	                    // InternalMcmodel.g:4146:12: (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) )
            	                    // InternalMcmodel.g:4147:13: otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' )
            	                    {
            	                    otherlv_79=(Token)match(input,62,FOLLOW_7); if (state.failed) return current;
            	                    if ( state.backtracking==0 ) {

            	                      													newLeafNode(otherlv_79, grammarAccess.getOverridePredicate_2Access().getExclamationMarkEqualsSignKeyword_1_8_1_1_1_0_0());
            	                      												
            	                    }
            	                    // InternalMcmodel.g:4151:13: ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' )
            	                    int alt93=2;
            	                    int LA93_0 = input.LA(1);

            	                    if ( (LA93_0==21) ) {
            	                        alt93=1;
            	                    }
            	                    else if ( (LA93_0==20) ) {
            	                        alt93=2;
            	                    }
            	                    else {
            	                        if (state.backtracking>0) {state.failed=true; return current;}
            	                        NoViableAltException nvae =
            	                            new NoViableAltException("", 93, 0, input);

            	                        throw nvae;
            	                    }
            	                    switch (alt93) {
            	                        case 1 :
            	                            // InternalMcmodel.g:4152:14: ( (lv_pulling_80_0= 'false' ) )
            	                            {
            	                            // InternalMcmodel.g:4152:14: ( (lv_pulling_80_0= 'false' ) )
            	                            // InternalMcmodel.g:4153:15: (lv_pulling_80_0= 'false' )
            	                            {
            	                            // InternalMcmodel.g:4153:15: (lv_pulling_80_0= 'false' )
            	                            // InternalMcmodel.g:4154:16: lv_pulling_80_0= 'false'
            	                            {
            	                            lv_pulling_80_0=(Token)match(input,21,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              																newLeafNode(lv_pulling_80_0, grammarAccess.getOverridePredicate_2Access().getPullingFalseKeyword_1_8_1_1_1_0_1_0_0());
            	                              															
            	                            }
            	                            if ( state.backtracking==0 ) {

            	                              																if (current==null) {
            	                              																	current = createModelElement(grammarAccess.getOverridePredicate_2Rule());
            	                              																}
            	                              																setWithLastConsumed(current, "pulling", true, "false");
            	                              															
            	                            }

            	                            }


            	                            }


            	                            }
            	                            break;
            	                        case 2 :
            	                            // InternalMcmodel.g:4167:14: otherlv_81= 'true'
            	                            {
            	                            otherlv_81=(Token)match(input,20,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_81, grammarAccess.getOverridePredicate_2Access().getTrueKeyword_1_8_1_1_1_0_1_1());
            	                              													
            	                            }

            	                            }
            	                            break;

            	                    }


            	                    }


            	                    }
            	                    break;
            	                case 2 :
            	                    // InternalMcmodel.g:4174:12: ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) )
            	                    {
            	                    // InternalMcmodel.g:4174:12: ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) )
            	                    // InternalMcmodel.g:4175:13: (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' )
            	                    {
            	                    // InternalMcmodel.g:4175:13: (otherlv_82= '=' | otherlv_83= '==' )
            	                    int alt94=2;
            	                    int LA94_0 = input.LA(1);

            	                    if ( (LA94_0==18) ) {
            	                        alt94=1;
            	                    }
            	                    else if ( (LA94_0==58) ) {
            	                        alt94=2;
            	                    }
            	                    else {
            	                        if (state.backtracking>0) {state.failed=true; return current;}
            	                        NoViableAltException nvae =
            	                            new NoViableAltException("", 94, 0, input);

            	                        throw nvae;
            	                    }
            	                    switch (alt94) {
            	                        case 1 :
            	                            // InternalMcmodel.g:4176:14: otherlv_82= '='
            	                            {
            	                            otherlv_82=(Token)match(input,18,FOLLOW_7); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_82, grammarAccess.getOverridePredicate_2Access().getEqualsSignKeyword_1_8_1_1_1_1_0_0());
            	                              													
            	                            }

            	                            }
            	                            break;
            	                        case 2 :
            	                            // InternalMcmodel.g:4181:14: otherlv_83= '=='
            	                            {
            	                            otherlv_83=(Token)match(input,58,FOLLOW_7); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_83, grammarAccess.getOverridePredicate_2Access().getEqualsSignEqualsSignKeyword_1_8_1_1_1_1_0_1());
            	                              													
            	                            }

            	                            }
            	                            break;

            	                    }

            	                    // InternalMcmodel.g:4186:13: ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' )
            	                    int alt95=2;
            	                    int LA95_0 = input.LA(1);

            	                    if ( (LA95_0==20) ) {
            	                        alt95=1;
            	                    }
            	                    else if ( (LA95_0==21) ) {
            	                        alt95=2;
            	                    }
            	                    else {
            	                        if (state.backtracking>0) {state.failed=true; return current;}
            	                        NoViableAltException nvae =
            	                            new NoViableAltException("", 95, 0, input);

            	                        throw nvae;
            	                    }
            	                    switch (alt95) {
            	                        case 1 :
            	                            // InternalMcmodel.g:4187:14: ( (lv_pulling_84_0= 'true' ) )
            	                            {
            	                            // InternalMcmodel.g:4187:14: ( (lv_pulling_84_0= 'true' ) )
            	                            // InternalMcmodel.g:4188:15: (lv_pulling_84_0= 'true' )
            	                            {
            	                            // InternalMcmodel.g:4188:15: (lv_pulling_84_0= 'true' )
            	                            // InternalMcmodel.g:4189:16: lv_pulling_84_0= 'true'
            	                            {
            	                            lv_pulling_84_0=(Token)match(input,20,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              																newLeafNode(lv_pulling_84_0, grammarAccess.getOverridePredicate_2Access().getPullingTrueKeyword_1_8_1_1_1_1_1_0_0());
            	                              															
            	                            }
            	                            if ( state.backtracking==0 ) {

            	                              																if (current==null) {
            	                              																	current = createModelElement(grammarAccess.getOverridePredicate_2Rule());
            	                              																}
            	                              																setWithLastConsumed(current, "pulling", true, "true");
            	                              															
            	                            }

            	                            }


            	                            }


            	                            }
            	                            break;
            	                        case 2 :
            	                            // InternalMcmodel.g:4202:14: otherlv_85= 'false'
            	                            {
            	                            otherlv_85=(Token)match(input,21,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_85, grammarAccess.getOverridePredicate_2Access().getFalseKeyword_1_8_1_1_1_1_1_1());
            	                              													
            	                            }

            	                            }
            	                            break;

            	                    }


            	                    }


            	                    }
            	                    break;

            	            }


            	            }


            	            }
            	            break;

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getOverridePredicate_2Access().getUnorderedGroup_1());

            	    }


            	    }


            	    }
            	    break;
            	case 10 :
            	    // InternalMcmodel.g:4217:4: ({...}? => ( ({...}? => (otherlv_86= '&' ( ( ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing' ) | ( ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) ) ) ) ) ) )
            	    {
            	    // InternalMcmodel.g:4217:4: ({...}? => ( ({...}? => (otherlv_86= '&' ( ( ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing' ) | ( ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) ) ) ) ) ) )
            	    // InternalMcmodel.g:4218:5: {...}? => ( ({...}? => (otherlv_86= '&' ( ( ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing' ) | ( ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_2Access().getUnorderedGroup_1(), 9) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_2", "getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_2Access().getUnorderedGroup_1(), 9)");
            	    }
            	    // InternalMcmodel.g:4218:116: ( ({...}? => (otherlv_86= '&' ( ( ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing' ) | ( ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) ) ) ) ) )
            	    // InternalMcmodel.g:4219:6: ({...}? => (otherlv_86= '&' ( ( ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing' ) | ( ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getOverridePredicate_2Access().getUnorderedGroup_1(), 9);
            	    // InternalMcmodel.g:4222:9: ({...}? => (otherlv_86= '&' ( ( ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing' ) | ( ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) ) ) ) )
            	    // InternalMcmodel.g:4222:10: {...}? => (otherlv_86= '&' ( ( ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing' ) | ( ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_2", "true");
            	    }
            	    // InternalMcmodel.g:4222:19: (otherlv_86= '&' ( ( ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing' ) | ( ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) ) ) )
            	    // InternalMcmodel.g:4222:20: otherlv_86= '&' ( ( ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing' ) | ( ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) ) )
            	    {
            	    otherlv_86=(Token)match(input,59,FOLLOW_54); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_86, grammarAccess.getOverridePredicate_2Access().getAmpersandKeyword_1_9_0());
            	      								
            	    }
            	    // InternalMcmodel.g:4226:9: ( ( ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing' ) | ( ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) ) )
            	    int alt102=2;
            	    int LA102_0 = input.LA(1);

            	    if ( (LA102_0==60) ) {
            	        alt102=1;
            	    }
            	    else if ( (LA102_0==71) ) {
            	        alt102=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 102, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt102) {
            	        case 1 :
            	            // InternalMcmodel.g:4227:10: ( ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing' )
            	            {
            	            // InternalMcmodel.g:4227:10: ( ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing' )
            	            // InternalMcmodel.g:4228:11: ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing'
            	            {
            	            // InternalMcmodel.g:4228:11: ( (lv_throwingDefined_87_0= '!' ) )
            	            // InternalMcmodel.g:4229:12: (lv_throwingDefined_87_0= '!' )
            	            {
            	            // InternalMcmodel.g:4229:12: (lv_throwingDefined_87_0= '!' )
            	            // InternalMcmodel.g:4230:13: lv_throwingDefined_87_0= '!'
            	            {
            	            lv_throwingDefined_87_0=(Token)match(input,60,FOLLOW_55); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              													newLeafNode(lv_throwingDefined_87_0, grammarAccess.getOverridePredicate_2Access().getThrowingDefinedExclamationMarkKeyword_1_9_1_0_0_0());
            	              												
            	            }
            	            if ( state.backtracking==0 ) {

            	              													if (current==null) {
            	              														current = createModelElement(grammarAccess.getOverridePredicate_2Rule());
            	              													}
            	              													setWithLastConsumed(current, "throwingDefined", true, "!");
            	              												
            	            }

            	            }


            	            }

            	            otherlv_88=(Token)match(input,71,FOLLOW_37); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              											newLeafNode(otherlv_88, grammarAccess.getOverridePredicate_2Access().getThrowingKeyword_1_9_1_0_1());
            	              										
            	            }

            	            }


            	            }
            	            break;
            	        case 2 :
            	            // InternalMcmodel.g:4248:10: ( ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) )
            	            {
            	            // InternalMcmodel.g:4248:10: ( ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) )
            	            // InternalMcmodel.g:4249:11: ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) )
            	            {
            	            // InternalMcmodel.g:4249:11: ( (lv_throwingDefined_89_0= 'throwing' ) )
            	            // InternalMcmodel.g:4250:12: (lv_throwingDefined_89_0= 'throwing' )
            	            {
            	            // InternalMcmodel.g:4250:12: (lv_throwingDefined_89_0= 'throwing' )
            	            // InternalMcmodel.g:4251:13: lv_throwingDefined_89_0= 'throwing'
            	            {
            	            lv_throwingDefined_89_0=(Token)match(input,71,FOLLOW_40); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              													newLeafNode(lv_throwingDefined_89_0, grammarAccess.getOverridePredicate_2Access().getThrowingDefinedThrowingKeyword_1_9_1_1_0_0());
            	              												
            	            }
            	            if ( state.backtracking==0 ) {

            	              													if (current==null) {
            	              														current = createModelElement(grammarAccess.getOverridePredicate_2Rule());
            	              													}
            	              													setWithLastConsumed(current, "throwingDefined", true, "throwing");
            	              												
            	            }

            	            }


            	            }

            	            // InternalMcmodel.g:4263:11: ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) )
            	            int alt101=2;
            	            int LA101_0 = input.LA(1);

            	            if ( (LA101_0==62) ) {
            	                alt101=1;
            	            }
            	            else if ( (LA101_0==18||LA101_0==58) ) {
            	                alt101=2;
            	            }
            	            else {
            	                if (state.backtracking>0) {state.failed=true; return current;}
            	                NoViableAltException nvae =
            	                    new NoViableAltException("", 101, 0, input);

            	                throw nvae;
            	            }
            	            switch (alt101) {
            	                case 1 :
            	                    // InternalMcmodel.g:4264:12: (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) )
            	                    {
            	                    // InternalMcmodel.g:4264:12: (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) )
            	                    // InternalMcmodel.g:4265:13: otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' )
            	                    {
            	                    otherlv_90=(Token)match(input,62,FOLLOW_7); if (state.failed) return current;
            	                    if ( state.backtracking==0 ) {

            	                      													newLeafNode(otherlv_90, grammarAccess.getOverridePredicate_2Access().getExclamationMarkEqualsSignKeyword_1_9_1_1_1_0_0());
            	                      												
            	                    }
            	                    // InternalMcmodel.g:4269:13: ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' )
            	                    int alt98=2;
            	                    int LA98_0 = input.LA(1);

            	                    if ( (LA98_0==21) ) {
            	                        alt98=1;
            	                    }
            	                    else if ( (LA98_0==20) ) {
            	                        alt98=2;
            	                    }
            	                    else {
            	                        if (state.backtracking>0) {state.failed=true; return current;}
            	                        NoViableAltException nvae =
            	                            new NoViableAltException("", 98, 0, input);

            	                        throw nvae;
            	                    }
            	                    switch (alt98) {
            	                        case 1 :
            	                            // InternalMcmodel.g:4270:14: ( (lv_throwing_91_0= 'false' ) )
            	                            {
            	                            // InternalMcmodel.g:4270:14: ( (lv_throwing_91_0= 'false' ) )
            	                            // InternalMcmodel.g:4271:15: (lv_throwing_91_0= 'false' )
            	                            {
            	                            // InternalMcmodel.g:4271:15: (lv_throwing_91_0= 'false' )
            	                            // InternalMcmodel.g:4272:16: lv_throwing_91_0= 'false'
            	                            {
            	                            lv_throwing_91_0=(Token)match(input,21,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              																newLeafNode(lv_throwing_91_0, grammarAccess.getOverridePredicate_2Access().getThrowingFalseKeyword_1_9_1_1_1_0_1_0_0());
            	                              															
            	                            }
            	                            if ( state.backtracking==0 ) {

            	                              																if (current==null) {
            	                              																	current = createModelElement(grammarAccess.getOverridePredicate_2Rule());
            	                              																}
            	                              																setWithLastConsumed(current, "throwing", true, "false");
            	                              															
            	                            }

            	                            }


            	                            }


            	                            }
            	                            break;
            	                        case 2 :
            	                            // InternalMcmodel.g:4285:14: otherlv_92= 'true'
            	                            {
            	                            otherlv_92=(Token)match(input,20,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_92, grammarAccess.getOverridePredicate_2Access().getTrueKeyword_1_9_1_1_1_0_1_1());
            	                              													
            	                            }

            	                            }
            	                            break;

            	                    }


            	                    }


            	                    }
            	                    break;
            	                case 2 :
            	                    // InternalMcmodel.g:4292:12: ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) )
            	                    {
            	                    // InternalMcmodel.g:4292:12: ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) )
            	                    // InternalMcmodel.g:4293:13: (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' )
            	                    {
            	                    // InternalMcmodel.g:4293:13: (otherlv_93= '=' | otherlv_94= '==' )
            	                    int alt99=2;
            	                    int LA99_0 = input.LA(1);

            	                    if ( (LA99_0==18) ) {
            	                        alt99=1;
            	                    }
            	                    else if ( (LA99_0==58) ) {
            	                        alt99=2;
            	                    }
            	                    else {
            	                        if (state.backtracking>0) {state.failed=true; return current;}
            	                        NoViableAltException nvae =
            	                            new NoViableAltException("", 99, 0, input);

            	                        throw nvae;
            	                    }
            	                    switch (alt99) {
            	                        case 1 :
            	                            // InternalMcmodel.g:4294:14: otherlv_93= '='
            	                            {
            	                            otherlv_93=(Token)match(input,18,FOLLOW_7); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_93, grammarAccess.getOverridePredicate_2Access().getEqualsSignKeyword_1_9_1_1_1_1_0_0());
            	                              													
            	                            }

            	                            }
            	                            break;
            	                        case 2 :
            	                            // InternalMcmodel.g:4299:14: otherlv_94= '=='
            	                            {
            	                            otherlv_94=(Token)match(input,58,FOLLOW_7); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_94, grammarAccess.getOverridePredicate_2Access().getEqualsSignEqualsSignKeyword_1_9_1_1_1_1_0_1());
            	                              													
            	                            }

            	                            }
            	                            break;

            	                    }

            	                    // InternalMcmodel.g:4304:13: ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' )
            	                    int alt100=2;
            	                    int LA100_0 = input.LA(1);

            	                    if ( (LA100_0==20) ) {
            	                        alt100=1;
            	                    }
            	                    else if ( (LA100_0==21) ) {
            	                        alt100=2;
            	                    }
            	                    else {
            	                        if (state.backtracking>0) {state.failed=true; return current;}
            	                        NoViableAltException nvae =
            	                            new NoViableAltException("", 100, 0, input);

            	                        throw nvae;
            	                    }
            	                    switch (alt100) {
            	                        case 1 :
            	                            // InternalMcmodel.g:4305:14: ( (lv_throwing_95_0= 'true' ) )
            	                            {
            	                            // InternalMcmodel.g:4305:14: ( (lv_throwing_95_0= 'true' ) )
            	                            // InternalMcmodel.g:4306:15: (lv_throwing_95_0= 'true' )
            	                            {
            	                            // InternalMcmodel.g:4306:15: (lv_throwing_95_0= 'true' )
            	                            // InternalMcmodel.g:4307:16: lv_throwing_95_0= 'true'
            	                            {
            	                            lv_throwing_95_0=(Token)match(input,20,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              																newLeafNode(lv_throwing_95_0, grammarAccess.getOverridePredicate_2Access().getThrowingTrueKeyword_1_9_1_1_1_1_1_0_0());
            	                              															
            	                            }
            	                            if ( state.backtracking==0 ) {

            	                              																if (current==null) {
            	                              																	current = createModelElement(grammarAccess.getOverridePredicate_2Rule());
            	                              																}
            	                              																setWithLastConsumed(current, "throwing", true, "true");
            	                              															
            	                            }

            	                            }


            	                            }


            	                            }
            	                            break;
            	                        case 2 :
            	                            // InternalMcmodel.g:4320:14: otherlv_96= 'false'
            	                            {
            	                            otherlv_96=(Token)match(input,21,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_96, grammarAccess.getOverridePredicate_2Access().getFalseKeyword_1_9_1_1_1_1_1_1());
            	                              													
            	                            }

            	                            }
            	                            break;

            	                    }


            	                    }


            	                    }
            	                    break;

            	            }


            	            }


            	            }
            	            break;

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getOverridePredicate_2Access().getUnorderedGroup_1());

            	    }


            	    }


            	    }
            	    break;
            	case 11 :
            	    // InternalMcmodel.g:4335:4: ({...}? => ( ({...}? => (otherlv_97= '&' ( (lv_timeDefined_98_0= 'time' ) ) (otherlv_99= '=' | otherlv_100= '==' ) ( (lv_time_101_0= RULE_PERCENTAGE ) ) ) ) ) )
            	    {
            	    // InternalMcmodel.g:4335:4: ({...}? => ( ({...}? => (otherlv_97= '&' ( (lv_timeDefined_98_0= 'time' ) ) (otherlv_99= '=' | otherlv_100= '==' ) ( (lv_time_101_0= RULE_PERCENTAGE ) ) ) ) ) )
            	    // InternalMcmodel.g:4336:5: {...}? => ( ({...}? => (otherlv_97= '&' ( (lv_timeDefined_98_0= 'time' ) ) (otherlv_99= '=' | otherlv_100= '==' ) ( (lv_time_101_0= RULE_PERCENTAGE ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_2Access().getUnorderedGroup_1(), 10) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_2", "getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_2Access().getUnorderedGroup_1(), 10)");
            	    }
            	    // InternalMcmodel.g:4336:117: ( ({...}? => (otherlv_97= '&' ( (lv_timeDefined_98_0= 'time' ) ) (otherlv_99= '=' | otherlv_100= '==' ) ( (lv_time_101_0= RULE_PERCENTAGE ) ) ) ) )
            	    // InternalMcmodel.g:4337:6: ({...}? => (otherlv_97= '&' ( (lv_timeDefined_98_0= 'time' ) ) (otherlv_99= '=' | otherlv_100= '==' ) ( (lv_time_101_0= RULE_PERCENTAGE ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getOverridePredicate_2Access().getUnorderedGroup_1(), 10);
            	    // InternalMcmodel.g:4340:9: ({...}? => (otherlv_97= '&' ( (lv_timeDefined_98_0= 'time' ) ) (otherlv_99= '=' | otherlv_100= '==' ) ( (lv_time_101_0= RULE_PERCENTAGE ) ) ) )
            	    // InternalMcmodel.g:4340:10: {...}? => (otherlv_97= '&' ( (lv_timeDefined_98_0= 'time' ) ) (otherlv_99= '=' | otherlv_100= '==' ) ( (lv_time_101_0= RULE_PERCENTAGE ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_2", "true");
            	    }
            	    // InternalMcmodel.g:4340:19: (otherlv_97= '&' ( (lv_timeDefined_98_0= 'time' ) ) (otherlv_99= '=' | otherlv_100= '==' ) ( (lv_time_101_0= RULE_PERCENTAGE ) ) )
            	    // InternalMcmodel.g:4340:20: otherlv_97= '&' ( (lv_timeDefined_98_0= 'time' ) ) (otherlv_99= '=' | otherlv_100= '==' ) ( (lv_time_101_0= RULE_PERCENTAGE ) )
            	    {
            	    otherlv_97=(Token)match(input,59,FOLLOW_56); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_97, grammarAccess.getOverridePredicate_2Access().getAmpersandKeyword_1_10_0());
            	      								
            	    }
            	    // InternalMcmodel.g:4344:9: ( (lv_timeDefined_98_0= 'time' ) )
            	    // InternalMcmodel.g:4345:10: (lv_timeDefined_98_0= 'time' )
            	    {
            	    // InternalMcmodel.g:4345:10: (lv_timeDefined_98_0= 'time' )
            	    // InternalMcmodel.g:4346:11: lv_timeDefined_98_0= 'time'
            	    {
            	    lv_timeDefined_98_0=(Token)match(input,72,FOLLOW_35); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											newLeafNode(lv_timeDefined_98_0, grammarAccess.getOverridePredicate_2Access().getTimeDefinedTimeKeyword_1_10_1_0());
            	      										
            	    }
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElement(grammarAccess.getOverridePredicate_2Rule());
            	      											}
            	      											setWithLastConsumed(current, "timeDefined", true, "time");
            	      										
            	    }

            	    }


            	    }

            	    // InternalMcmodel.g:4358:9: (otherlv_99= '=' | otherlv_100= '==' )
            	    int alt103=2;
            	    int LA103_0 = input.LA(1);

            	    if ( (LA103_0==18) ) {
            	        alt103=1;
            	    }
            	    else if ( (LA103_0==58) ) {
            	        alt103=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 103, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt103) {
            	        case 1 :
            	            // InternalMcmodel.g:4359:10: otherlv_99= '='
            	            {
            	            otherlv_99=(Token)match(input,18,FOLLOW_36); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(otherlv_99, grammarAccess.getOverridePredicate_2Access().getEqualsSignKeyword_1_10_2_0());
            	              									
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalMcmodel.g:4364:10: otherlv_100= '=='
            	            {
            	            otherlv_100=(Token)match(input,58,FOLLOW_36); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(otherlv_100, grammarAccess.getOverridePredicate_2Access().getEqualsSignEqualsSignKeyword_1_10_2_1());
            	              									
            	            }

            	            }
            	            break;

            	    }

            	    // InternalMcmodel.g:4369:9: ( (lv_time_101_0= RULE_PERCENTAGE ) )
            	    // InternalMcmodel.g:4370:10: (lv_time_101_0= RULE_PERCENTAGE )
            	    {
            	    // InternalMcmodel.g:4370:10: (lv_time_101_0= RULE_PERCENTAGE )
            	    // InternalMcmodel.g:4371:11: lv_time_101_0= RULE_PERCENTAGE
            	    {
            	    lv_time_101_0=(Token)match(input,RULE_PERCENTAGE,FOLLOW_37); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											newLeafNode(lv_time_101_0, grammarAccess.getOverridePredicate_2Access().getTimePERCENTAGETerminalRuleCall_1_10_3_0());
            	      										
            	    }
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElement(grammarAccess.getOverridePredicate_2Rule());
            	      											}
            	      											setWithLastConsumed(
            	      												current,
            	      												"time",
            	      												lv_time_101_0,
            	      												"com.raptor.mcmodel.Mcmodel.PERCENTAGE");
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getOverridePredicate_2Access().getUnorderedGroup_1());

            	    }


            	    }


            	    }
            	    break;
            	case 12 :
            	    // InternalMcmodel.g:4393:4: ({...}? => ( ({...}? => (otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) ) ) ) ) )
            	    {
            	    // InternalMcmodel.g:4393:4: ({...}? => ( ({...}? => (otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) ) ) ) ) )
            	    // InternalMcmodel.g:4394:5: {...}? => ( ({...}? => (otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_2Access().getUnorderedGroup_1(), 11) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_2", "getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_2Access().getUnorderedGroup_1(), 11)");
            	    }
            	    // InternalMcmodel.g:4394:117: ( ({...}? => (otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) ) ) ) )
            	    // InternalMcmodel.g:4395:6: ({...}? => (otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getOverridePredicate_2Access().getUnorderedGroup_1(), 11);
            	    // InternalMcmodel.g:4398:9: ({...}? => (otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) ) ) )
            	    // InternalMcmodel.g:4398:10: {...}? => (otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_2", "true");
            	    }
            	    // InternalMcmodel.g:4398:19: (otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) ) )
            	    // InternalMcmodel.g:4398:20: otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) )
            	    {
            	    otherlv_102=(Token)match(input,59,FOLLOW_57); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_102, grammarAccess.getOverridePredicate_2Access().getAmpersandKeyword_1_11_0());
            	      								
            	    }
            	    // InternalMcmodel.g:4402:9: ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) )
            	    // InternalMcmodel.g:4403:10: (lv_customModelDataDefined_103_0= 'custom_model_data' )
            	    {
            	    // InternalMcmodel.g:4403:10: (lv_customModelDataDefined_103_0= 'custom_model_data' )
            	    // InternalMcmodel.g:4404:11: lv_customModelDataDefined_103_0= 'custom_model_data'
            	    {
            	    lv_customModelDataDefined_103_0=(Token)match(input,73,FOLLOW_35); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											newLeafNode(lv_customModelDataDefined_103_0, grammarAccess.getOverridePredicate_2Access().getCustomModelDataDefinedCustom_model_dataKeyword_1_11_1_0());
            	      										
            	    }
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElement(grammarAccess.getOverridePredicate_2Rule());
            	      											}
            	      											setWithLastConsumed(current, "customModelDataDefined", true, "custom_model_data");
            	      										
            	    }

            	    }


            	    }

            	    // InternalMcmodel.g:4416:9: (otherlv_104= '=' | otherlv_105= '==' )
            	    int alt104=2;
            	    int LA104_0 = input.LA(1);

            	    if ( (LA104_0==18) ) {
            	        alt104=1;
            	    }
            	    else if ( (LA104_0==58) ) {
            	        alt104=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 104, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt104) {
            	        case 1 :
            	            // InternalMcmodel.g:4417:10: otherlv_104= '='
            	            {
            	            otherlv_104=(Token)match(input,18,FOLLOW_29); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(otherlv_104, grammarAccess.getOverridePredicate_2Access().getEqualsSignKeyword_1_11_2_0());
            	              									
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalMcmodel.g:4422:10: otherlv_105= '=='
            	            {
            	            otherlv_105=(Token)match(input,58,FOLLOW_29); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(otherlv_105, grammarAccess.getOverridePredicate_2Access().getEqualsSignEqualsSignKeyword_1_11_2_1());
            	              									
            	            }

            	            }
            	            break;

            	    }

            	    // InternalMcmodel.g:4427:9: ( (lv_customModelData_106_0= ruleLONG ) )
            	    // InternalMcmodel.g:4428:10: (lv_customModelData_106_0= ruleLONG )
            	    {
            	    // InternalMcmodel.g:4428:10: (lv_customModelData_106_0= ruleLONG )
            	    // InternalMcmodel.g:4429:11: lv_customModelData_106_0= ruleLONG
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getOverridePredicate_2Access().getCustomModelDataLONGParserRuleCall_1_11_3_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_37);
            	    lv_customModelData_106_0=ruleLONG();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getOverridePredicate_2Rule());
            	      											}
            	      											set(
            	      												current,
            	      												"customModelData",
            	      												lv_customModelData_106_0,
            	      												"com.raptor.mcmodel.Mcmodel.LONG");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getOverridePredicate_2Access().getUnorderedGroup_1());

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop105;
                }
            } while (true);


            }


            }

            getUnorderedGroupHelper().leave(grammarAccess.getOverridePredicate_2Access().getUnorderedGroup_1());

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOverridePredicate_2"


    // $ANTLR start "entryRuleOverridePredicate_3"
    // InternalMcmodel.g:4463:1: entryRuleOverridePredicate_3 returns [EObject current=null] : iv_ruleOverridePredicate_3= ruleOverridePredicate_3 EOF ;
    public final EObject entryRuleOverridePredicate_3() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleOverridePredicate_3 = null;


        try {
            // InternalMcmodel.g:4463:60: (iv_ruleOverridePredicate_3= ruleOverridePredicate_3 EOF )
            // InternalMcmodel.g:4464:2: iv_ruleOverridePredicate_3= ruleOverridePredicate_3 EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOverridePredicate_3Rule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOverridePredicate_3=ruleOverridePredicate_3();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOverridePredicate_3; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOverridePredicate_3"


    // $ANTLR start "ruleOverridePredicate_3"
    // InternalMcmodel.g:4470:1: ruleOverridePredicate_3 returns [EObject current=null] : ( ( ( ( (lv_brokenDefined_0_0= '!' ) ) otherlv_1= 'broken' ) | ( ( (lv_brokenDefined_2_0= 'broken' ) ) ( (otherlv_3= '!=' ( ( (lv_broken_4_0= 'false' ) ) | otherlv_5= 'true' ) ) | ( (otherlv_6= '=' | otherlv_7= '==' ) ( ( (lv_broken_8_0= 'true' ) ) | otherlv_9= 'false' ) ) ) ) ) ( ( ( ( ({...}? => ( ({...}? => (otherlv_11= '&' ( (lv_angleDefined_12_0= 'angle' ) ) (otherlv_13= '=' | otherlv_14= '==' ) ( (lv_angle_15_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= '&' ( ( ( (lv_blockingDefined_17_0= '!' ) ) otherlv_18= 'blocking' ) | ( ( (lv_blockingDefined_19_0= 'blocking' ) ) ( (otherlv_20= '!=' ( ( (lv_blocking_21_0= 'false' ) ) | otherlv_22= 'true' ) ) | ( (otherlv_23= '=' | otherlv_24= '==' ) ( ( (lv_blocking_25_0= 'true' ) ) | otherlv_26= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= '&' ( ( ( (lv_castDefined_28_0= '!' ) ) otherlv_29= 'cast' ) | ( ( (lv_castDefined_30_0= 'cast' ) ) ( (otherlv_31= '!=' ( ( (lv_cast_32_0= 'false' ) ) | otherlv_33= 'true' ) ) | ( (otherlv_34= '=' | otherlv_35= '==' ) ( ( (lv_cast_36_0= 'true' ) ) | otherlv_37= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_38= '&' ( (lv_cooldownDefined_39_0= 'cooldown' ) ) (otherlv_40= '=' | otherlv_41= '==' ) ( (lv_cooldown_42_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= '&' ( (lv_damageDefined_44_0= 'damage' ) ) (otherlv_45= '=' | otherlv_46= '==' ) ( (lv_damage_47_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_48= '&' ( ( ( (lv_damagedDefined_49_0= '!' ) ) otherlv_50= 'damaged' ) | ( ( (lv_damagedDefined_51_0= 'damaged' ) ) ( (otherlv_52= '!=' ( ( (lv_damaged_53_0= 'false' ) ) | otherlv_54= 'true' ) ) | ( (otherlv_55= '=' | otherlv_56= '==' ) ( ( (lv_damaged_57_0= 'true' ) ) | otherlv_58= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_59= '&' ( ( ( (lv_lefthandedDefined_60_0= '!' ) ) otherlv_61= 'lefthanded' ) | ( ( (lv_lefthandedDefined_62_0= 'lefthanded' ) ) ( (otherlv_63= '!=' ( ( (lv_lefthanded_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_lefthanded_68_0= 'true' ) ) | otherlv_69= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_70= '&' ( (lv_pullDefined_71_0= 'pull' ) ) (otherlv_72= '=' | otherlv_73= '==' ) ( (lv_pull_74_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_75= '&' ( ( ( (lv_pullingDefined_76_0= '!' ) ) otherlv_77= 'pulling' ) | ( ( (lv_pullingDefined_78_0= 'pulling' ) ) ( (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) ) | ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_86= '&' ( ( ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing' ) | ( ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_97= '&' ( (lv_timeDefined_98_0= 'time' ) ) (otherlv_99= '=' | otherlv_100= '==' ) ( (lv_time_101_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) ) ) ) ) ) )* ) ) ) ) ;
    public final EObject ruleOverridePredicate_3() throws RecognitionException {
        EObject current = null;

        Token lv_brokenDefined_0_0=null;
        Token otherlv_1=null;
        Token lv_brokenDefined_2_0=null;
        Token otherlv_3=null;
        Token lv_broken_4_0=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        Token lv_broken_8_0=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        Token lv_angleDefined_12_0=null;
        Token otherlv_13=null;
        Token otherlv_14=null;
        Token lv_angle_15_0=null;
        Token otherlv_16=null;
        Token lv_blockingDefined_17_0=null;
        Token otherlv_18=null;
        Token lv_blockingDefined_19_0=null;
        Token otherlv_20=null;
        Token lv_blocking_21_0=null;
        Token otherlv_22=null;
        Token otherlv_23=null;
        Token otherlv_24=null;
        Token lv_blocking_25_0=null;
        Token otherlv_26=null;
        Token otherlv_27=null;
        Token lv_castDefined_28_0=null;
        Token otherlv_29=null;
        Token lv_castDefined_30_0=null;
        Token otherlv_31=null;
        Token lv_cast_32_0=null;
        Token otherlv_33=null;
        Token otherlv_34=null;
        Token otherlv_35=null;
        Token lv_cast_36_0=null;
        Token otherlv_37=null;
        Token otherlv_38=null;
        Token lv_cooldownDefined_39_0=null;
        Token otherlv_40=null;
        Token otherlv_41=null;
        Token lv_cooldown_42_0=null;
        Token otherlv_43=null;
        Token lv_damageDefined_44_0=null;
        Token otherlv_45=null;
        Token otherlv_46=null;
        Token lv_damage_47_0=null;
        Token otherlv_48=null;
        Token lv_damagedDefined_49_0=null;
        Token otherlv_50=null;
        Token lv_damagedDefined_51_0=null;
        Token otherlv_52=null;
        Token lv_damaged_53_0=null;
        Token otherlv_54=null;
        Token otherlv_55=null;
        Token otherlv_56=null;
        Token lv_damaged_57_0=null;
        Token otherlv_58=null;
        Token otherlv_59=null;
        Token lv_lefthandedDefined_60_0=null;
        Token otherlv_61=null;
        Token lv_lefthandedDefined_62_0=null;
        Token otherlv_63=null;
        Token lv_lefthanded_64_0=null;
        Token otherlv_65=null;
        Token otherlv_66=null;
        Token otherlv_67=null;
        Token lv_lefthanded_68_0=null;
        Token otherlv_69=null;
        Token otherlv_70=null;
        Token lv_pullDefined_71_0=null;
        Token otherlv_72=null;
        Token otherlv_73=null;
        Token lv_pull_74_0=null;
        Token otherlv_75=null;
        Token lv_pullingDefined_76_0=null;
        Token otherlv_77=null;
        Token lv_pullingDefined_78_0=null;
        Token otherlv_79=null;
        Token lv_pulling_80_0=null;
        Token otherlv_81=null;
        Token otherlv_82=null;
        Token otherlv_83=null;
        Token lv_pulling_84_0=null;
        Token otherlv_85=null;
        Token otherlv_86=null;
        Token lv_throwingDefined_87_0=null;
        Token otherlv_88=null;
        Token lv_throwingDefined_89_0=null;
        Token otherlv_90=null;
        Token lv_throwing_91_0=null;
        Token otherlv_92=null;
        Token otherlv_93=null;
        Token otherlv_94=null;
        Token lv_throwing_95_0=null;
        Token otherlv_96=null;
        Token otherlv_97=null;
        Token lv_timeDefined_98_0=null;
        Token otherlv_99=null;
        Token otherlv_100=null;
        Token lv_time_101_0=null;
        Token otherlv_102=null;
        Token lv_customModelDataDefined_103_0=null;
        Token otherlv_104=null;
        Token otherlv_105=null;
        AntlrDatatypeRuleToken lv_customModelData_106_0 = null;



        	enterRule();

        try {
            // InternalMcmodel.g:4476:2: ( ( ( ( ( (lv_brokenDefined_0_0= '!' ) ) otherlv_1= 'broken' ) | ( ( (lv_brokenDefined_2_0= 'broken' ) ) ( (otherlv_3= '!=' ( ( (lv_broken_4_0= 'false' ) ) | otherlv_5= 'true' ) ) | ( (otherlv_6= '=' | otherlv_7= '==' ) ( ( (lv_broken_8_0= 'true' ) ) | otherlv_9= 'false' ) ) ) ) ) ( ( ( ( ({...}? => ( ({...}? => (otherlv_11= '&' ( (lv_angleDefined_12_0= 'angle' ) ) (otherlv_13= '=' | otherlv_14= '==' ) ( (lv_angle_15_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= '&' ( ( ( (lv_blockingDefined_17_0= '!' ) ) otherlv_18= 'blocking' ) | ( ( (lv_blockingDefined_19_0= 'blocking' ) ) ( (otherlv_20= '!=' ( ( (lv_blocking_21_0= 'false' ) ) | otherlv_22= 'true' ) ) | ( (otherlv_23= '=' | otherlv_24= '==' ) ( ( (lv_blocking_25_0= 'true' ) ) | otherlv_26= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= '&' ( ( ( (lv_castDefined_28_0= '!' ) ) otherlv_29= 'cast' ) | ( ( (lv_castDefined_30_0= 'cast' ) ) ( (otherlv_31= '!=' ( ( (lv_cast_32_0= 'false' ) ) | otherlv_33= 'true' ) ) | ( (otherlv_34= '=' | otherlv_35= '==' ) ( ( (lv_cast_36_0= 'true' ) ) | otherlv_37= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_38= '&' ( (lv_cooldownDefined_39_0= 'cooldown' ) ) (otherlv_40= '=' | otherlv_41= '==' ) ( (lv_cooldown_42_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= '&' ( (lv_damageDefined_44_0= 'damage' ) ) (otherlv_45= '=' | otherlv_46= '==' ) ( (lv_damage_47_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_48= '&' ( ( ( (lv_damagedDefined_49_0= '!' ) ) otherlv_50= 'damaged' ) | ( ( (lv_damagedDefined_51_0= 'damaged' ) ) ( (otherlv_52= '!=' ( ( (lv_damaged_53_0= 'false' ) ) | otherlv_54= 'true' ) ) | ( (otherlv_55= '=' | otherlv_56= '==' ) ( ( (lv_damaged_57_0= 'true' ) ) | otherlv_58= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_59= '&' ( ( ( (lv_lefthandedDefined_60_0= '!' ) ) otherlv_61= 'lefthanded' ) | ( ( (lv_lefthandedDefined_62_0= 'lefthanded' ) ) ( (otherlv_63= '!=' ( ( (lv_lefthanded_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_lefthanded_68_0= 'true' ) ) | otherlv_69= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_70= '&' ( (lv_pullDefined_71_0= 'pull' ) ) (otherlv_72= '=' | otherlv_73= '==' ) ( (lv_pull_74_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_75= '&' ( ( ( (lv_pullingDefined_76_0= '!' ) ) otherlv_77= 'pulling' ) | ( ( (lv_pullingDefined_78_0= 'pulling' ) ) ( (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) ) | ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_86= '&' ( ( ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing' ) | ( ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_97= '&' ( (lv_timeDefined_98_0= 'time' ) ) (otherlv_99= '=' | otherlv_100= '==' ) ( (lv_time_101_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) ) ) ) ) ) )* ) ) ) ) )
            // InternalMcmodel.g:4477:2: ( ( ( ( (lv_brokenDefined_0_0= '!' ) ) otherlv_1= 'broken' ) | ( ( (lv_brokenDefined_2_0= 'broken' ) ) ( (otherlv_3= '!=' ( ( (lv_broken_4_0= 'false' ) ) | otherlv_5= 'true' ) ) | ( (otherlv_6= '=' | otherlv_7= '==' ) ( ( (lv_broken_8_0= 'true' ) ) | otherlv_9= 'false' ) ) ) ) ) ( ( ( ( ({...}? => ( ({...}? => (otherlv_11= '&' ( (lv_angleDefined_12_0= 'angle' ) ) (otherlv_13= '=' | otherlv_14= '==' ) ( (lv_angle_15_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= '&' ( ( ( (lv_blockingDefined_17_0= '!' ) ) otherlv_18= 'blocking' ) | ( ( (lv_blockingDefined_19_0= 'blocking' ) ) ( (otherlv_20= '!=' ( ( (lv_blocking_21_0= 'false' ) ) | otherlv_22= 'true' ) ) | ( (otherlv_23= '=' | otherlv_24= '==' ) ( ( (lv_blocking_25_0= 'true' ) ) | otherlv_26= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= '&' ( ( ( (lv_castDefined_28_0= '!' ) ) otherlv_29= 'cast' ) | ( ( (lv_castDefined_30_0= 'cast' ) ) ( (otherlv_31= '!=' ( ( (lv_cast_32_0= 'false' ) ) | otherlv_33= 'true' ) ) | ( (otherlv_34= '=' | otherlv_35= '==' ) ( ( (lv_cast_36_0= 'true' ) ) | otherlv_37= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_38= '&' ( (lv_cooldownDefined_39_0= 'cooldown' ) ) (otherlv_40= '=' | otherlv_41= '==' ) ( (lv_cooldown_42_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= '&' ( (lv_damageDefined_44_0= 'damage' ) ) (otherlv_45= '=' | otherlv_46= '==' ) ( (lv_damage_47_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_48= '&' ( ( ( (lv_damagedDefined_49_0= '!' ) ) otherlv_50= 'damaged' ) | ( ( (lv_damagedDefined_51_0= 'damaged' ) ) ( (otherlv_52= '!=' ( ( (lv_damaged_53_0= 'false' ) ) | otherlv_54= 'true' ) ) | ( (otherlv_55= '=' | otherlv_56= '==' ) ( ( (lv_damaged_57_0= 'true' ) ) | otherlv_58= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_59= '&' ( ( ( (lv_lefthandedDefined_60_0= '!' ) ) otherlv_61= 'lefthanded' ) | ( ( (lv_lefthandedDefined_62_0= 'lefthanded' ) ) ( (otherlv_63= '!=' ( ( (lv_lefthanded_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_lefthanded_68_0= 'true' ) ) | otherlv_69= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_70= '&' ( (lv_pullDefined_71_0= 'pull' ) ) (otherlv_72= '=' | otherlv_73= '==' ) ( (lv_pull_74_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_75= '&' ( ( ( (lv_pullingDefined_76_0= '!' ) ) otherlv_77= 'pulling' ) | ( ( (lv_pullingDefined_78_0= 'pulling' ) ) ( (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) ) | ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_86= '&' ( ( ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing' ) | ( ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_97= '&' ( (lv_timeDefined_98_0= 'time' ) ) (otherlv_99= '=' | otherlv_100= '==' ) ( (lv_time_101_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) ) ) ) ) ) )* ) ) ) )
            {
            // InternalMcmodel.g:4477:2: ( ( ( ( (lv_brokenDefined_0_0= '!' ) ) otherlv_1= 'broken' ) | ( ( (lv_brokenDefined_2_0= 'broken' ) ) ( (otherlv_3= '!=' ( ( (lv_broken_4_0= 'false' ) ) | otherlv_5= 'true' ) ) | ( (otherlv_6= '=' | otherlv_7= '==' ) ( ( (lv_broken_8_0= 'true' ) ) | otherlv_9= 'false' ) ) ) ) ) ( ( ( ( ({...}? => ( ({...}? => (otherlv_11= '&' ( (lv_angleDefined_12_0= 'angle' ) ) (otherlv_13= '=' | otherlv_14= '==' ) ( (lv_angle_15_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= '&' ( ( ( (lv_blockingDefined_17_0= '!' ) ) otherlv_18= 'blocking' ) | ( ( (lv_blockingDefined_19_0= 'blocking' ) ) ( (otherlv_20= '!=' ( ( (lv_blocking_21_0= 'false' ) ) | otherlv_22= 'true' ) ) | ( (otherlv_23= '=' | otherlv_24= '==' ) ( ( (lv_blocking_25_0= 'true' ) ) | otherlv_26= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= '&' ( ( ( (lv_castDefined_28_0= '!' ) ) otherlv_29= 'cast' ) | ( ( (lv_castDefined_30_0= 'cast' ) ) ( (otherlv_31= '!=' ( ( (lv_cast_32_0= 'false' ) ) | otherlv_33= 'true' ) ) | ( (otherlv_34= '=' | otherlv_35= '==' ) ( ( (lv_cast_36_0= 'true' ) ) | otherlv_37= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_38= '&' ( (lv_cooldownDefined_39_0= 'cooldown' ) ) (otherlv_40= '=' | otherlv_41= '==' ) ( (lv_cooldown_42_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= '&' ( (lv_damageDefined_44_0= 'damage' ) ) (otherlv_45= '=' | otherlv_46= '==' ) ( (lv_damage_47_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_48= '&' ( ( ( (lv_damagedDefined_49_0= '!' ) ) otherlv_50= 'damaged' ) | ( ( (lv_damagedDefined_51_0= 'damaged' ) ) ( (otherlv_52= '!=' ( ( (lv_damaged_53_0= 'false' ) ) | otherlv_54= 'true' ) ) | ( (otherlv_55= '=' | otherlv_56= '==' ) ( ( (lv_damaged_57_0= 'true' ) ) | otherlv_58= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_59= '&' ( ( ( (lv_lefthandedDefined_60_0= '!' ) ) otherlv_61= 'lefthanded' ) | ( ( (lv_lefthandedDefined_62_0= 'lefthanded' ) ) ( (otherlv_63= '!=' ( ( (lv_lefthanded_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_lefthanded_68_0= 'true' ) ) | otherlv_69= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_70= '&' ( (lv_pullDefined_71_0= 'pull' ) ) (otherlv_72= '=' | otherlv_73= '==' ) ( (lv_pull_74_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_75= '&' ( ( ( (lv_pullingDefined_76_0= '!' ) ) otherlv_77= 'pulling' ) | ( ( (lv_pullingDefined_78_0= 'pulling' ) ) ( (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) ) | ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_86= '&' ( ( ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing' ) | ( ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_97= '&' ( (lv_timeDefined_98_0= 'time' ) ) (otherlv_99= '=' | otherlv_100= '==' ) ( (lv_time_101_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) ) ) ) ) ) )* ) ) ) )
            // InternalMcmodel.g:4478:3: ( ( ( (lv_brokenDefined_0_0= '!' ) ) otherlv_1= 'broken' ) | ( ( (lv_brokenDefined_2_0= 'broken' ) ) ( (otherlv_3= '!=' ( ( (lv_broken_4_0= 'false' ) ) | otherlv_5= 'true' ) ) | ( (otherlv_6= '=' | otherlv_7= '==' ) ( ( (lv_broken_8_0= 'true' ) ) | otherlv_9= 'false' ) ) ) ) ) ( ( ( ( ({...}? => ( ({...}? => (otherlv_11= '&' ( (lv_angleDefined_12_0= 'angle' ) ) (otherlv_13= '=' | otherlv_14= '==' ) ( (lv_angle_15_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= '&' ( ( ( (lv_blockingDefined_17_0= '!' ) ) otherlv_18= 'blocking' ) | ( ( (lv_blockingDefined_19_0= 'blocking' ) ) ( (otherlv_20= '!=' ( ( (lv_blocking_21_0= 'false' ) ) | otherlv_22= 'true' ) ) | ( (otherlv_23= '=' | otherlv_24= '==' ) ( ( (lv_blocking_25_0= 'true' ) ) | otherlv_26= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= '&' ( ( ( (lv_castDefined_28_0= '!' ) ) otherlv_29= 'cast' ) | ( ( (lv_castDefined_30_0= 'cast' ) ) ( (otherlv_31= '!=' ( ( (lv_cast_32_0= 'false' ) ) | otherlv_33= 'true' ) ) | ( (otherlv_34= '=' | otherlv_35= '==' ) ( ( (lv_cast_36_0= 'true' ) ) | otherlv_37= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_38= '&' ( (lv_cooldownDefined_39_0= 'cooldown' ) ) (otherlv_40= '=' | otherlv_41= '==' ) ( (lv_cooldown_42_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= '&' ( (lv_damageDefined_44_0= 'damage' ) ) (otherlv_45= '=' | otherlv_46= '==' ) ( (lv_damage_47_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_48= '&' ( ( ( (lv_damagedDefined_49_0= '!' ) ) otherlv_50= 'damaged' ) | ( ( (lv_damagedDefined_51_0= 'damaged' ) ) ( (otherlv_52= '!=' ( ( (lv_damaged_53_0= 'false' ) ) | otherlv_54= 'true' ) ) | ( (otherlv_55= '=' | otherlv_56= '==' ) ( ( (lv_damaged_57_0= 'true' ) ) | otherlv_58= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_59= '&' ( ( ( (lv_lefthandedDefined_60_0= '!' ) ) otherlv_61= 'lefthanded' ) | ( ( (lv_lefthandedDefined_62_0= 'lefthanded' ) ) ( (otherlv_63= '!=' ( ( (lv_lefthanded_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_lefthanded_68_0= 'true' ) ) | otherlv_69= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_70= '&' ( (lv_pullDefined_71_0= 'pull' ) ) (otherlv_72= '=' | otherlv_73= '==' ) ( (lv_pull_74_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_75= '&' ( ( ( (lv_pullingDefined_76_0= '!' ) ) otherlv_77= 'pulling' ) | ( ( (lv_pullingDefined_78_0= 'pulling' ) ) ( (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) ) | ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_86= '&' ( ( ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing' ) | ( ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_97= '&' ( (lv_timeDefined_98_0= 'time' ) ) (otherlv_99= '=' | otherlv_100= '==' ) ( (lv_time_101_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) ) ) ) ) ) )* ) ) )
            {
            // InternalMcmodel.g:4478:3: ( ( ( (lv_brokenDefined_0_0= '!' ) ) otherlv_1= 'broken' ) | ( ( (lv_brokenDefined_2_0= 'broken' ) ) ( (otherlv_3= '!=' ( ( (lv_broken_4_0= 'false' ) ) | otherlv_5= 'true' ) ) | ( (otherlv_6= '=' | otherlv_7= '==' ) ( ( (lv_broken_8_0= 'true' ) ) | otherlv_9= 'false' ) ) ) ) )
            int alt110=2;
            int LA110_0 = input.LA(1);

            if ( (LA110_0==60) ) {
                alt110=1;
            }
            else if ( (LA110_0==63) ) {
                alt110=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 110, 0, input);

                throw nvae;
            }
            switch (alt110) {
                case 1 :
                    // InternalMcmodel.g:4479:4: ( ( (lv_brokenDefined_0_0= '!' ) ) otherlv_1= 'broken' )
                    {
                    // InternalMcmodel.g:4479:4: ( ( (lv_brokenDefined_0_0= '!' ) ) otherlv_1= 'broken' )
                    // InternalMcmodel.g:4480:5: ( (lv_brokenDefined_0_0= '!' ) ) otherlv_1= 'broken'
                    {
                    // InternalMcmodel.g:4480:5: ( (lv_brokenDefined_0_0= '!' ) )
                    // InternalMcmodel.g:4481:6: (lv_brokenDefined_0_0= '!' )
                    {
                    // InternalMcmodel.g:4481:6: (lv_brokenDefined_0_0= '!' )
                    // InternalMcmodel.g:4482:7: lv_brokenDefined_0_0= '!'
                    {
                    lv_brokenDefined_0_0=(Token)match(input,60,FOLLOW_42); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							newLeafNode(lv_brokenDefined_0_0, grammarAccess.getOverridePredicate_3Access().getBrokenDefinedExclamationMarkKeyword_0_0_0_0());
                      						
                    }
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElement(grammarAccess.getOverridePredicate_3Rule());
                      							}
                      							setWithLastConsumed(current, "brokenDefined", true, "!");
                      						
                    }

                    }


                    }

                    otherlv_1=(Token)match(input,63,FOLLOW_37); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_1, grammarAccess.getOverridePredicate_3Access().getBrokenKeyword_0_0_1());
                      				
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalMcmodel.g:4500:4: ( ( (lv_brokenDefined_2_0= 'broken' ) ) ( (otherlv_3= '!=' ( ( (lv_broken_4_0= 'false' ) ) | otherlv_5= 'true' ) ) | ( (otherlv_6= '=' | otherlv_7= '==' ) ( ( (lv_broken_8_0= 'true' ) ) | otherlv_9= 'false' ) ) ) )
                    {
                    // InternalMcmodel.g:4500:4: ( ( (lv_brokenDefined_2_0= 'broken' ) ) ( (otherlv_3= '!=' ( ( (lv_broken_4_0= 'false' ) ) | otherlv_5= 'true' ) ) | ( (otherlv_6= '=' | otherlv_7= '==' ) ( ( (lv_broken_8_0= 'true' ) ) | otherlv_9= 'false' ) ) ) )
                    // InternalMcmodel.g:4501:5: ( (lv_brokenDefined_2_0= 'broken' ) ) ( (otherlv_3= '!=' ( ( (lv_broken_4_0= 'false' ) ) | otherlv_5= 'true' ) ) | ( (otherlv_6= '=' | otherlv_7= '==' ) ( ( (lv_broken_8_0= 'true' ) ) | otherlv_9= 'false' ) ) )
                    {
                    // InternalMcmodel.g:4501:5: ( (lv_brokenDefined_2_0= 'broken' ) )
                    // InternalMcmodel.g:4502:6: (lv_brokenDefined_2_0= 'broken' )
                    {
                    // InternalMcmodel.g:4502:6: (lv_brokenDefined_2_0= 'broken' )
                    // InternalMcmodel.g:4503:7: lv_brokenDefined_2_0= 'broken'
                    {
                    lv_brokenDefined_2_0=(Token)match(input,63,FOLLOW_40); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							newLeafNode(lv_brokenDefined_2_0, grammarAccess.getOverridePredicate_3Access().getBrokenDefinedBrokenKeyword_0_1_0_0());
                      						
                    }
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElement(grammarAccess.getOverridePredicate_3Rule());
                      							}
                      							setWithLastConsumed(current, "brokenDefined", true, "broken");
                      						
                    }

                    }


                    }

                    // InternalMcmodel.g:4515:5: ( (otherlv_3= '!=' ( ( (lv_broken_4_0= 'false' ) ) | otherlv_5= 'true' ) ) | ( (otherlv_6= '=' | otherlv_7= '==' ) ( ( (lv_broken_8_0= 'true' ) ) | otherlv_9= 'false' ) ) )
                    int alt109=2;
                    int LA109_0 = input.LA(1);

                    if ( (LA109_0==62) ) {
                        alt109=1;
                    }
                    else if ( (LA109_0==18||LA109_0==58) ) {
                        alt109=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 109, 0, input);

                        throw nvae;
                    }
                    switch (alt109) {
                        case 1 :
                            // InternalMcmodel.g:4516:6: (otherlv_3= '!=' ( ( (lv_broken_4_0= 'false' ) ) | otherlv_5= 'true' ) )
                            {
                            // InternalMcmodel.g:4516:6: (otherlv_3= '!=' ( ( (lv_broken_4_0= 'false' ) ) | otherlv_5= 'true' ) )
                            // InternalMcmodel.g:4517:7: otherlv_3= '!=' ( ( (lv_broken_4_0= 'false' ) ) | otherlv_5= 'true' )
                            {
                            otherlv_3=(Token)match(input,62,FOLLOW_7); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(otherlv_3, grammarAccess.getOverridePredicate_3Access().getExclamationMarkEqualsSignKeyword_0_1_1_0_0());
                              						
                            }
                            // InternalMcmodel.g:4521:7: ( ( (lv_broken_4_0= 'false' ) ) | otherlv_5= 'true' )
                            int alt106=2;
                            int LA106_0 = input.LA(1);

                            if ( (LA106_0==21) ) {
                                alt106=1;
                            }
                            else if ( (LA106_0==20) ) {
                                alt106=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 106, 0, input);

                                throw nvae;
                            }
                            switch (alt106) {
                                case 1 :
                                    // InternalMcmodel.g:4522:8: ( (lv_broken_4_0= 'false' ) )
                                    {
                                    // InternalMcmodel.g:4522:8: ( (lv_broken_4_0= 'false' ) )
                                    // InternalMcmodel.g:4523:9: (lv_broken_4_0= 'false' )
                                    {
                                    // InternalMcmodel.g:4523:9: (lv_broken_4_0= 'false' )
                                    // InternalMcmodel.g:4524:10: lv_broken_4_0= 'false'
                                    {
                                    lv_broken_4_0=(Token)match(input,21,FOLLOW_37); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      										newLeafNode(lv_broken_4_0, grammarAccess.getOverridePredicate_3Access().getBrokenFalseKeyword_0_1_1_0_1_0_0());
                                      									
                                    }
                                    if ( state.backtracking==0 ) {

                                      										if (current==null) {
                                      											current = createModelElement(grammarAccess.getOverridePredicate_3Rule());
                                      										}
                                      										setWithLastConsumed(current, "broken", true, "false");
                                      									
                                    }

                                    }


                                    }


                                    }
                                    break;
                                case 2 :
                                    // InternalMcmodel.g:4537:8: otherlv_5= 'true'
                                    {
                                    otherlv_5=(Token)match(input,20,FOLLOW_37); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(otherlv_5, grammarAccess.getOverridePredicate_3Access().getTrueKeyword_0_1_1_0_1_1());
                                      							
                                    }

                                    }
                                    break;

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalMcmodel.g:4544:6: ( (otherlv_6= '=' | otherlv_7= '==' ) ( ( (lv_broken_8_0= 'true' ) ) | otherlv_9= 'false' ) )
                            {
                            // InternalMcmodel.g:4544:6: ( (otherlv_6= '=' | otherlv_7= '==' ) ( ( (lv_broken_8_0= 'true' ) ) | otherlv_9= 'false' ) )
                            // InternalMcmodel.g:4545:7: (otherlv_6= '=' | otherlv_7= '==' ) ( ( (lv_broken_8_0= 'true' ) ) | otherlv_9= 'false' )
                            {
                            // InternalMcmodel.g:4545:7: (otherlv_6= '=' | otherlv_7= '==' )
                            int alt107=2;
                            int LA107_0 = input.LA(1);

                            if ( (LA107_0==18) ) {
                                alt107=1;
                            }
                            else if ( (LA107_0==58) ) {
                                alt107=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 107, 0, input);

                                throw nvae;
                            }
                            switch (alt107) {
                                case 1 :
                                    // InternalMcmodel.g:4546:8: otherlv_6= '='
                                    {
                                    otherlv_6=(Token)match(input,18,FOLLOW_7); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(otherlv_6, grammarAccess.getOverridePredicate_3Access().getEqualsSignKeyword_0_1_1_1_0_0());
                                      							
                                    }

                                    }
                                    break;
                                case 2 :
                                    // InternalMcmodel.g:4551:8: otherlv_7= '=='
                                    {
                                    otherlv_7=(Token)match(input,58,FOLLOW_7); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(otherlv_7, grammarAccess.getOverridePredicate_3Access().getEqualsSignEqualsSignKeyword_0_1_1_1_0_1());
                                      							
                                    }

                                    }
                                    break;

                            }

                            // InternalMcmodel.g:4556:7: ( ( (lv_broken_8_0= 'true' ) ) | otherlv_9= 'false' )
                            int alt108=2;
                            int LA108_0 = input.LA(1);

                            if ( (LA108_0==20) ) {
                                alt108=1;
                            }
                            else if ( (LA108_0==21) ) {
                                alt108=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 108, 0, input);

                                throw nvae;
                            }
                            switch (alt108) {
                                case 1 :
                                    // InternalMcmodel.g:4557:8: ( (lv_broken_8_0= 'true' ) )
                                    {
                                    // InternalMcmodel.g:4557:8: ( (lv_broken_8_0= 'true' ) )
                                    // InternalMcmodel.g:4558:9: (lv_broken_8_0= 'true' )
                                    {
                                    // InternalMcmodel.g:4558:9: (lv_broken_8_0= 'true' )
                                    // InternalMcmodel.g:4559:10: lv_broken_8_0= 'true'
                                    {
                                    lv_broken_8_0=(Token)match(input,20,FOLLOW_37); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      										newLeafNode(lv_broken_8_0, grammarAccess.getOverridePredicate_3Access().getBrokenTrueKeyword_0_1_1_1_1_0_0());
                                      									
                                    }
                                    if ( state.backtracking==0 ) {

                                      										if (current==null) {
                                      											current = createModelElement(grammarAccess.getOverridePredicate_3Rule());
                                      										}
                                      										setWithLastConsumed(current, "broken", true, "true");
                                      									
                                    }

                                    }


                                    }


                                    }
                                    break;
                                case 2 :
                                    // InternalMcmodel.g:4572:8: otherlv_9= 'false'
                                    {
                                    otherlv_9=(Token)match(input,21,FOLLOW_37); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(otherlv_9, grammarAccess.getOverridePredicate_3Access().getFalseKeyword_0_1_1_1_1_1());
                                      							
                                    }

                                    }
                                    break;

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;

            }

            // InternalMcmodel.g:4581:3: ( ( ( ( ({...}? => ( ({...}? => (otherlv_11= '&' ( (lv_angleDefined_12_0= 'angle' ) ) (otherlv_13= '=' | otherlv_14= '==' ) ( (lv_angle_15_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= '&' ( ( ( (lv_blockingDefined_17_0= '!' ) ) otherlv_18= 'blocking' ) | ( ( (lv_blockingDefined_19_0= 'blocking' ) ) ( (otherlv_20= '!=' ( ( (lv_blocking_21_0= 'false' ) ) | otherlv_22= 'true' ) ) | ( (otherlv_23= '=' | otherlv_24= '==' ) ( ( (lv_blocking_25_0= 'true' ) ) | otherlv_26= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= '&' ( ( ( (lv_castDefined_28_0= '!' ) ) otherlv_29= 'cast' ) | ( ( (lv_castDefined_30_0= 'cast' ) ) ( (otherlv_31= '!=' ( ( (lv_cast_32_0= 'false' ) ) | otherlv_33= 'true' ) ) | ( (otherlv_34= '=' | otherlv_35= '==' ) ( ( (lv_cast_36_0= 'true' ) ) | otherlv_37= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_38= '&' ( (lv_cooldownDefined_39_0= 'cooldown' ) ) (otherlv_40= '=' | otherlv_41= '==' ) ( (lv_cooldown_42_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= '&' ( (lv_damageDefined_44_0= 'damage' ) ) (otherlv_45= '=' | otherlv_46= '==' ) ( (lv_damage_47_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_48= '&' ( ( ( (lv_damagedDefined_49_0= '!' ) ) otherlv_50= 'damaged' ) | ( ( (lv_damagedDefined_51_0= 'damaged' ) ) ( (otherlv_52= '!=' ( ( (lv_damaged_53_0= 'false' ) ) | otherlv_54= 'true' ) ) | ( (otherlv_55= '=' | otherlv_56= '==' ) ( ( (lv_damaged_57_0= 'true' ) ) | otherlv_58= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_59= '&' ( ( ( (lv_lefthandedDefined_60_0= '!' ) ) otherlv_61= 'lefthanded' ) | ( ( (lv_lefthandedDefined_62_0= 'lefthanded' ) ) ( (otherlv_63= '!=' ( ( (lv_lefthanded_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_lefthanded_68_0= 'true' ) ) | otherlv_69= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_70= '&' ( (lv_pullDefined_71_0= 'pull' ) ) (otherlv_72= '=' | otherlv_73= '==' ) ( (lv_pull_74_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_75= '&' ( ( ( (lv_pullingDefined_76_0= '!' ) ) otherlv_77= 'pulling' ) | ( ( (lv_pullingDefined_78_0= 'pulling' ) ) ( (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) ) | ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_86= '&' ( ( ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing' ) | ( ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_97= '&' ( (lv_timeDefined_98_0= 'time' ) ) (otherlv_99= '=' | otherlv_100= '==' ) ( (lv_time_101_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) ) ) ) ) ) )* ) ) )
            // InternalMcmodel.g:4582:4: ( ( ( ({...}? => ( ({...}? => (otherlv_11= '&' ( (lv_angleDefined_12_0= 'angle' ) ) (otherlv_13= '=' | otherlv_14= '==' ) ( (lv_angle_15_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= '&' ( ( ( (lv_blockingDefined_17_0= '!' ) ) otherlv_18= 'blocking' ) | ( ( (lv_blockingDefined_19_0= 'blocking' ) ) ( (otherlv_20= '!=' ( ( (lv_blocking_21_0= 'false' ) ) | otherlv_22= 'true' ) ) | ( (otherlv_23= '=' | otherlv_24= '==' ) ( ( (lv_blocking_25_0= 'true' ) ) | otherlv_26= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= '&' ( ( ( (lv_castDefined_28_0= '!' ) ) otherlv_29= 'cast' ) | ( ( (lv_castDefined_30_0= 'cast' ) ) ( (otherlv_31= '!=' ( ( (lv_cast_32_0= 'false' ) ) | otherlv_33= 'true' ) ) | ( (otherlv_34= '=' | otherlv_35= '==' ) ( ( (lv_cast_36_0= 'true' ) ) | otherlv_37= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_38= '&' ( (lv_cooldownDefined_39_0= 'cooldown' ) ) (otherlv_40= '=' | otherlv_41= '==' ) ( (lv_cooldown_42_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= '&' ( (lv_damageDefined_44_0= 'damage' ) ) (otherlv_45= '=' | otherlv_46= '==' ) ( (lv_damage_47_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_48= '&' ( ( ( (lv_damagedDefined_49_0= '!' ) ) otherlv_50= 'damaged' ) | ( ( (lv_damagedDefined_51_0= 'damaged' ) ) ( (otherlv_52= '!=' ( ( (lv_damaged_53_0= 'false' ) ) | otherlv_54= 'true' ) ) | ( (otherlv_55= '=' | otherlv_56= '==' ) ( ( (lv_damaged_57_0= 'true' ) ) | otherlv_58= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_59= '&' ( ( ( (lv_lefthandedDefined_60_0= '!' ) ) otherlv_61= 'lefthanded' ) | ( ( (lv_lefthandedDefined_62_0= 'lefthanded' ) ) ( (otherlv_63= '!=' ( ( (lv_lefthanded_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_lefthanded_68_0= 'true' ) ) | otherlv_69= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_70= '&' ( (lv_pullDefined_71_0= 'pull' ) ) (otherlv_72= '=' | otherlv_73= '==' ) ( (lv_pull_74_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_75= '&' ( ( ( (lv_pullingDefined_76_0= '!' ) ) otherlv_77= 'pulling' ) | ( ( (lv_pullingDefined_78_0= 'pulling' ) ) ( (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) ) | ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_86= '&' ( ( ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing' ) | ( ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_97= '&' ( (lv_timeDefined_98_0= 'time' ) ) (otherlv_99= '=' | otherlv_100= '==' ) ( (lv_time_101_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) ) ) ) ) ) )* ) )
            {
            // InternalMcmodel.g:4582:4: ( ( ( ({...}? => ( ({...}? => (otherlv_11= '&' ( (lv_angleDefined_12_0= 'angle' ) ) (otherlv_13= '=' | otherlv_14= '==' ) ( (lv_angle_15_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= '&' ( ( ( (lv_blockingDefined_17_0= '!' ) ) otherlv_18= 'blocking' ) | ( ( (lv_blockingDefined_19_0= 'blocking' ) ) ( (otherlv_20= '!=' ( ( (lv_blocking_21_0= 'false' ) ) | otherlv_22= 'true' ) ) | ( (otherlv_23= '=' | otherlv_24= '==' ) ( ( (lv_blocking_25_0= 'true' ) ) | otherlv_26= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= '&' ( ( ( (lv_castDefined_28_0= '!' ) ) otherlv_29= 'cast' ) | ( ( (lv_castDefined_30_0= 'cast' ) ) ( (otherlv_31= '!=' ( ( (lv_cast_32_0= 'false' ) ) | otherlv_33= 'true' ) ) | ( (otherlv_34= '=' | otherlv_35= '==' ) ( ( (lv_cast_36_0= 'true' ) ) | otherlv_37= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_38= '&' ( (lv_cooldownDefined_39_0= 'cooldown' ) ) (otherlv_40= '=' | otherlv_41= '==' ) ( (lv_cooldown_42_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= '&' ( (lv_damageDefined_44_0= 'damage' ) ) (otherlv_45= '=' | otherlv_46= '==' ) ( (lv_damage_47_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_48= '&' ( ( ( (lv_damagedDefined_49_0= '!' ) ) otherlv_50= 'damaged' ) | ( ( (lv_damagedDefined_51_0= 'damaged' ) ) ( (otherlv_52= '!=' ( ( (lv_damaged_53_0= 'false' ) ) | otherlv_54= 'true' ) ) | ( (otherlv_55= '=' | otherlv_56= '==' ) ( ( (lv_damaged_57_0= 'true' ) ) | otherlv_58= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_59= '&' ( ( ( (lv_lefthandedDefined_60_0= '!' ) ) otherlv_61= 'lefthanded' ) | ( ( (lv_lefthandedDefined_62_0= 'lefthanded' ) ) ( (otherlv_63= '!=' ( ( (lv_lefthanded_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_lefthanded_68_0= 'true' ) ) | otherlv_69= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_70= '&' ( (lv_pullDefined_71_0= 'pull' ) ) (otherlv_72= '=' | otherlv_73= '==' ) ( (lv_pull_74_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_75= '&' ( ( ( (lv_pullingDefined_76_0= '!' ) ) otherlv_77= 'pulling' ) | ( ( (lv_pullingDefined_78_0= 'pulling' ) ) ( (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) ) | ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_86= '&' ( ( ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing' ) | ( ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_97= '&' ( (lv_timeDefined_98_0= 'time' ) ) (otherlv_99= '=' | otherlv_100= '==' ) ( (lv_time_101_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) ) ) ) ) ) )* ) )
            // InternalMcmodel.g:4583:5: ( ( ({...}? => ( ({...}? => (otherlv_11= '&' ( (lv_angleDefined_12_0= 'angle' ) ) (otherlv_13= '=' | otherlv_14= '==' ) ( (lv_angle_15_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= '&' ( ( ( (lv_blockingDefined_17_0= '!' ) ) otherlv_18= 'blocking' ) | ( ( (lv_blockingDefined_19_0= 'blocking' ) ) ( (otherlv_20= '!=' ( ( (lv_blocking_21_0= 'false' ) ) | otherlv_22= 'true' ) ) | ( (otherlv_23= '=' | otherlv_24= '==' ) ( ( (lv_blocking_25_0= 'true' ) ) | otherlv_26= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= '&' ( ( ( (lv_castDefined_28_0= '!' ) ) otherlv_29= 'cast' ) | ( ( (lv_castDefined_30_0= 'cast' ) ) ( (otherlv_31= '!=' ( ( (lv_cast_32_0= 'false' ) ) | otherlv_33= 'true' ) ) | ( (otherlv_34= '=' | otherlv_35= '==' ) ( ( (lv_cast_36_0= 'true' ) ) | otherlv_37= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_38= '&' ( (lv_cooldownDefined_39_0= 'cooldown' ) ) (otherlv_40= '=' | otherlv_41= '==' ) ( (lv_cooldown_42_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= '&' ( (lv_damageDefined_44_0= 'damage' ) ) (otherlv_45= '=' | otherlv_46= '==' ) ( (lv_damage_47_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_48= '&' ( ( ( (lv_damagedDefined_49_0= '!' ) ) otherlv_50= 'damaged' ) | ( ( (lv_damagedDefined_51_0= 'damaged' ) ) ( (otherlv_52= '!=' ( ( (lv_damaged_53_0= 'false' ) ) | otherlv_54= 'true' ) ) | ( (otherlv_55= '=' | otherlv_56= '==' ) ( ( (lv_damaged_57_0= 'true' ) ) | otherlv_58= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_59= '&' ( ( ( (lv_lefthandedDefined_60_0= '!' ) ) otherlv_61= 'lefthanded' ) | ( ( (lv_lefthandedDefined_62_0= 'lefthanded' ) ) ( (otherlv_63= '!=' ( ( (lv_lefthanded_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_lefthanded_68_0= 'true' ) ) | otherlv_69= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_70= '&' ( (lv_pullDefined_71_0= 'pull' ) ) (otherlv_72= '=' | otherlv_73= '==' ) ( (lv_pull_74_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_75= '&' ( ( ( (lv_pullingDefined_76_0= '!' ) ) otherlv_77= 'pulling' ) | ( ( (lv_pullingDefined_78_0= 'pulling' ) ) ( (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) ) | ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_86= '&' ( ( ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing' ) | ( ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_97= '&' ( (lv_timeDefined_98_0= 'time' ) ) (otherlv_99= '=' | otherlv_100= '==' ) ( (lv_time_101_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) ) ) ) ) ) )* )
            {
            getUnorderedGroupHelper().enter(grammarAccess.getOverridePredicate_3Access().getUnorderedGroup_1());
            // InternalMcmodel.g:4586:5: ( ( ({...}? => ( ({...}? => (otherlv_11= '&' ( (lv_angleDefined_12_0= 'angle' ) ) (otherlv_13= '=' | otherlv_14= '==' ) ( (lv_angle_15_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= '&' ( ( ( (lv_blockingDefined_17_0= '!' ) ) otherlv_18= 'blocking' ) | ( ( (lv_blockingDefined_19_0= 'blocking' ) ) ( (otherlv_20= '!=' ( ( (lv_blocking_21_0= 'false' ) ) | otherlv_22= 'true' ) ) | ( (otherlv_23= '=' | otherlv_24= '==' ) ( ( (lv_blocking_25_0= 'true' ) ) | otherlv_26= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= '&' ( ( ( (lv_castDefined_28_0= '!' ) ) otherlv_29= 'cast' ) | ( ( (lv_castDefined_30_0= 'cast' ) ) ( (otherlv_31= '!=' ( ( (lv_cast_32_0= 'false' ) ) | otherlv_33= 'true' ) ) | ( (otherlv_34= '=' | otherlv_35= '==' ) ( ( (lv_cast_36_0= 'true' ) ) | otherlv_37= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_38= '&' ( (lv_cooldownDefined_39_0= 'cooldown' ) ) (otherlv_40= '=' | otherlv_41= '==' ) ( (lv_cooldown_42_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= '&' ( (lv_damageDefined_44_0= 'damage' ) ) (otherlv_45= '=' | otherlv_46= '==' ) ( (lv_damage_47_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_48= '&' ( ( ( (lv_damagedDefined_49_0= '!' ) ) otherlv_50= 'damaged' ) | ( ( (lv_damagedDefined_51_0= 'damaged' ) ) ( (otherlv_52= '!=' ( ( (lv_damaged_53_0= 'false' ) ) | otherlv_54= 'true' ) ) | ( (otherlv_55= '=' | otherlv_56= '==' ) ( ( (lv_damaged_57_0= 'true' ) ) | otherlv_58= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_59= '&' ( ( ( (lv_lefthandedDefined_60_0= '!' ) ) otherlv_61= 'lefthanded' ) | ( ( (lv_lefthandedDefined_62_0= 'lefthanded' ) ) ( (otherlv_63= '!=' ( ( (lv_lefthanded_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_lefthanded_68_0= 'true' ) ) | otherlv_69= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_70= '&' ( (lv_pullDefined_71_0= 'pull' ) ) (otherlv_72= '=' | otherlv_73= '==' ) ( (lv_pull_74_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_75= '&' ( ( ( (lv_pullingDefined_76_0= '!' ) ) otherlv_77= 'pulling' ) | ( ( (lv_pullingDefined_78_0= 'pulling' ) ) ( (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) ) | ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_86= '&' ( ( ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing' ) | ( ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_97= '&' ( (lv_timeDefined_98_0= 'time' ) ) (otherlv_99= '=' | otherlv_100= '==' ) ( (lv_time_101_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) ) ) ) ) ) )* )
            // InternalMcmodel.g:4587:6: ( ({...}? => ( ({...}? => (otherlv_11= '&' ( (lv_angleDefined_12_0= 'angle' ) ) (otherlv_13= '=' | otherlv_14= '==' ) ( (lv_angle_15_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= '&' ( ( ( (lv_blockingDefined_17_0= '!' ) ) otherlv_18= 'blocking' ) | ( ( (lv_blockingDefined_19_0= 'blocking' ) ) ( (otherlv_20= '!=' ( ( (lv_blocking_21_0= 'false' ) ) | otherlv_22= 'true' ) ) | ( (otherlv_23= '=' | otherlv_24= '==' ) ( ( (lv_blocking_25_0= 'true' ) ) | otherlv_26= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= '&' ( ( ( (lv_castDefined_28_0= '!' ) ) otherlv_29= 'cast' ) | ( ( (lv_castDefined_30_0= 'cast' ) ) ( (otherlv_31= '!=' ( ( (lv_cast_32_0= 'false' ) ) | otherlv_33= 'true' ) ) | ( (otherlv_34= '=' | otherlv_35= '==' ) ( ( (lv_cast_36_0= 'true' ) ) | otherlv_37= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_38= '&' ( (lv_cooldownDefined_39_0= 'cooldown' ) ) (otherlv_40= '=' | otherlv_41= '==' ) ( (lv_cooldown_42_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= '&' ( (lv_damageDefined_44_0= 'damage' ) ) (otherlv_45= '=' | otherlv_46= '==' ) ( (lv_damage_47_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_48= '&' ( ( ( (lv_damagedDefined_49_0= '!' ) ) otherlv_50= 'damaged' ) | ( ( (lv_damagedDefined_51_0= 'damaged' ) ) ( (otherlv_52= '!=' ( ( (lv_damaged_53_0= 'false' ) ) | otherlv_54= 'true' ) ) | ( (otherlv_55= '=' | otherlv_56= '==' ) ( ( (lv_damaged_57_0= 'true' ) ) | otherlv_58= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_59= '&' ( ( ( (lv_lefthandedDefined_60_0= '!' ) ) otherlv_61= 'lefthanded' ) | ( ( (lv_lefthandedDefined_62_0= 'lefthanded' ) ) ( (otherlv_63= '!=' ( ( (lv_lefthanded_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_lefthanded_68_0= 'true' ) ) | otherlv_69= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_70= '&' ( (lv_pullDefined_71_0= 'pull' ) ) (otherlv_72= '=' | otherlv_73= '==' ) ( (lv_pull_74_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_75= '&' ( ( ( (lv_pullingDefined_76_0= '!' ) ) otherlv_77= 'pulling' ) | ( ( (lv_pullingDefined_78_0= 'pulling' ) ) ( (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) ) | ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_86= '&' ( ( ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing' ) | ( ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_97= '&' ( (lv_timeDefined_98_0= 'time' ) ) (otherlv_99= '=' | otherlv_100= '==' ) ( (lv_time_101_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) ) ) ) ) ) )*
            {
            // InternalMcmodel.g:4587:6: ( ({...}? => ( ({...}? => (otherlv_11= '&' ( (lv_angleDefined_12_0= 'angle' ) ) (otherlv_13= '=' | otherlv_14= '==' ) ( (lv_angle_15_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= '&' ( ( ( (lv_blockingDefined_17_0= '!' ) ) otherlv_18= 'blocking' ) | ( ( (lv_blockingDefined_19_0= 'blocking' ) ) ( (otherlv_20= '!=' ( ( (lv_blocking_21_0= 'false' ) ) | otherlv_22= 'true' ) ) | ( (otherlv_23= '=' | otherlv_24= '==' ) ( ( (lv_blocking_25_0= 'true' ) ) | otherlv_26= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= '&' ( ( ( (lv_castDefined_28_0= '!' ) ) otherlv_29= 'cast' ) | ( ( (lv_castDefined_30_0= 'cast' ) ) ( (otherlv_31= '!=' ( ( (lv_cast_32_0= 'false' ) ) | otherlv_33= 'true' ) ) | ( (otherlv_34= '=' | otherlv_35= '==' ) ( ( (lv_cast_36_0= 'true' ) ) | otherlv_37= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_38= '&' ( (lv_cooldownDefined_39_0= 'cooldown' ) ) (otherlv_40= '=' | otherlv_41= '==' ) ( (lv_cooldown_42_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= '&' ( (lv_damageDefined_44_0= 'damage' ) ) (otherlv_45= '=' | otherlv_46= '==' ) ( (lv_damage_47_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_48= '&' ( ( ( (lv_damagedDefined_49_0= '!' ) ) otherlv_50= 'damaged' ) | ( ( (lv_damagedDefined_51_0= 'damaged' ) ) ( (otherlv_52= '!=' ( ( (lv_damaged_53_0= 'false' ) ) | otherlv_54= 'true' ) ) | ( (otherlv_55= '=' | otherlv_56= '==' ) ( ( (lv_damaged_57_0= 'true' ) ) | otherlv_58= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_59= '&' ( ( ( (lv_lefthandedDefined_60_0= '!' ) ) otherlv_61= 'lefthanded' ) | ( ( (lv_lefthandedDefined_62_0= 'lefthanded' ) ) ( (otherlv_63= '!=' ( ( (lv_lefthanded_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_lefthanded_68_0= 'true' ) ) | otherlv_69= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_70= '&' ( (lv_pullDefined_71_0= 'pull' ) ) (otherlv_72= '=' | otherlv_73= '==' ) ( (lv_pull_74_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_75= '&' ( ( ( (lv_pullingDefined_76_0= '!' ) ) otherlv_77= 'pulling' ) | ( ( (lv_pullingDefined_78_0= 'pulling' ) ) ( (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) ) | ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_86= '&' ( ( ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing' ) | ( ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_97= '&' ( (lv_timeDefined_98_0= 'time' ) ) (otherlv_99= '=' | otherlv_100= '==' ) ( (lv_time_101_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) ) ) ) ) ) )*
            loop147:
            do {
                int alt147=13;
                alt147 = dfa147.predict(input);
                switch (alt147) {
            	case 1 :
            	    // InternalMcmodel.g:4588:4: ({...}? => ( ({...}? => (otherlv_11= '&' ( (lv_angleDefined_12_0= 'angle' ) ) (otherlv_13= '=' | otherlv_14= '==' ) ( (lv_angle_15_0= RULE_PERCENTAGE ) ) ) ) ) )
            	    {
            	    // InternalMcmodel.g:4588:4: ({...}? => ( ({...}? => (otherlv_11= '&' ( (lv_angleDefined_12_0= 'angle' ) ) (otherlv_13= '=' | otherlv_14= '==' ) ( (lv_angle_15_0= RULE_PERCENTAGE ) ) ) ) ) )
            	    // InternalMcmodel.g:4589:5: {...}? => ( ({...}? => (otherlv_11= '&' ( (lv_angleDefined_12_0= 'angle' ) ) (otherlv_13= '=' | otherlv_14= '==' ) ( (lv_angle_15_0= RULE_PERCENTAGE ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_3Access().getUnorderedGroup_1(), 0) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_3", "getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_3Access().getUnorderedGroup_1(), 0)");
            	    }
            	    // InternalMcmodel.g:4589:116: ( ({...}? => (otherlv_11= '&' ( (lv_angleDefined_12_0= 'angle' ) ) (otherlv_13= '=' | otherlv_14= '==' ) ( (lv_angle_15_0= RULE_PERCENTAGE ) ) ) ) )
            	    // InternalMcmodel.g:4590:6: ({...}? => (otherlv_11= '&' ( (lv_angleDefined_12_0= 'angle' ) ) (otherlv_13= '=' | otherlv_14= '==' ) ( (lv_angle_15_0= RULE_PERCENTAGE ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getOverridePredicate_3Access().getUnorderedGroup_1(), 0);
            	    // InternalMcmodel.g:4593:9: ({...}? => (otherlv_11= '&' ( (lv_angleDefined_12_0= 'angle' ) ) (otherlv_13= '=' | otherlv_14= '==' ) ( (lv_angle_15_0= RULE_PERCENTAGE ) ) ) )
            	    // InternalMcmodel.g:4593:10: {...}? => (otherlv_11= '&' ( (lv_angleDefined_12_0= 'angle' ) ) (otherlv_13= '=' | otherlv_14= '==' ) ( (lv_angle_15_0= RULE_PERCENTAGE ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_3", "true");
            	    }
            	    // InternalMcmodel.g:4593:19: (otherlv_11= '&' ( (lv_angleDefined_12_0= 'angle' ) ) (otherlv_13= '=' | otherlv_14= '==' ) ( (lv_angle_15_0= RULE_PERCENTAGE ) ) )
            	    // InternalMcmodel.g:4593:20: otherlv_11= '&' ( (lv_angleDefined_12_0= 'angle' ) ) (otherlv_13= '=' | otherlv_14= '==' ) ( (lv_angle_15_0= RULE_PERCENTAGE ) )
            	    {
            	    otherlv_11=(Token)match(input,59,FOLLOW_58); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_11, grammarAccess.getOverridePredicate_3Access().getAmpersandKeyword_1_0_0());
            	      								
            	    }
            	    // InternalMcmodel.g:4597:9: ( (lv_angleDefined_12_0= 'angle' ) )
            	    // InternalMcmodel.g:4598:10: (lv_angleDefined_12_0= 'angle' )
            	    {
            	    // InternalMcmodel.g:4598:10: (lv_angleDefined_12_0= 'angle' )
            	    // InternalMcmodel.g:4599:11: lv_angleDefined_12_0= 'angle'
            	    {
            	    lv_angleDefined_12_0=(Token)match(input,38,FOLLOW_35); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											newLeafNode(lv_angleDefined_12_0, grammarAccess.getOverridePredicate_3Access().getAngleDefinedAngleKeyword_1_0_1_0());
            	      										
            	    }
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElement(grammarAccess.getOverridePredicate_3Rule());
            	      											}
            	      											setWithLastConsumed(current, "angleDefined", true, "angle");
            	      										
            	    }

            	    }


            	    }

            	    // InternalMcmodel.g:4611:9: (otherlv_13= '=' | otherlv_14= '==' )
            	    int alt111=2;
            	    int LA111_0 = input.LA(1);

            	    if ( (LA111_0==18) ) {
            	        alt111=1;
            	    }
            	    else if ( (LA111_0==58) ) {
            	        alt111=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 111, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt111) {
            	        case 1 :
            	            // InternalMcmodel.g:4612:10: otherlv_13= '='
            	            {
            	            otherlv_13=(Token)match(input,18,FOLLOW_36); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(otherlv_13, grammarAccess.getOverridePredicate_3Access().getEqualsSignKeyword_1_0_2_0());
            	              									
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalMcmodel.g:4617:10: otherlv_14= '=='
            	            {
            	            otherlv_14=(Token)match(input,58,FOLLOW_36); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(otherlv_14, grammarAccess.getOverridePredicate_3Access().getEqualsSignEqualsSignKeyword_1_0_2_1());
            	              									
            	            }

            	            }
            	            break;

            	    }

            	    // InternalMcmodel.g:4622:9: ( (lv_angle_15_0= RULE_PERCENTAGE ) )
            	    // InternalMcmodel.g:4623:10: (lv_angle_15_0= RULE_PERCENTAGE )
            	    {
            	    // InternalMcmodel.g:4623:10: (lv_angle_15_0= RULE_PERCENTAGE )
            	    // InternalMcmodel.g:4624:11: lv_angle_15_0= RULE_PERCENTAGE
            	    {
            	    lv_angle_15_0=(Token)match(input,RULE_PERCENTAGE,FOLLOW_37); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											newLeafNode(lv_angle_15_0, grammarAccess.getOverridePredicate_3Access().getAnglePERCENTAGETerminalRuleCall_1_0_3_0());
            	      										
            	    }
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElement(grammarAccess.getOverridePredicate_3Rule());
            	      											}
            	      											setWithLastConsumed(
            	      												current,
            	      												"angle",
            	      												lv_angle_15_0,
            	      												"com.raptor.mcmodel.Mcmodel.PERCENTAGE");
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getOverridePredicate_3Access().getUnorderedGroup_1());

            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // InternalMcmodel.g:4646:4: ({...}? => ( ({...}? => (otherlv_16= '&' ( ( ( (lv_blockingDefined_17_0= '!' ) ) otherlv_18= 'blocking' ) | ( ( (lv_blockingDefined_19_0= 'blocking' ) ) ( (otherlv_20= '!=' ( ( (lv_blocking_21_0= 'false' ) ) | otherlv_22= 'true' ) ) | ( (otherlv_23= '=' | otherlv_24= '==' ) ( ( (lv_blocking_25_0= 'true' ) ) | otherlv_26= 'false' ) ) ) ) ) ) ) ) )
            	    {
            	    // InternalMcmodel.g:4646:4: ({...}? => ( ({...}? => (otherlv_16= '&' ( ( ( (lv_blockingDefined_17_0= '!' ) ) otherlv_18= 'blocking' ) | ( ( (lv_blockingDefined_19_0= 'blocking' ) ) ( (otherlv_20= '!=' ( ( (lv_blocking_21_0= 'false' ) ) | otherlv_22= 'true' ) ) | ( (otherlv_23= '=' | otherlv_24= '==' ) ( ( (lv_blocking_25_0= 'true' ) ) | otherlv_26= 'false' ) ) ) ) ) ) ) ) )
            	    // InternalMcmodel.g:4647:5: {...}? => ( ({...}? => (otherlv_16= '&' ( ( ( (lv_blockingDefined_17_0= '!' ) ) otherlv_18= 'blocking' ) | ( ( (lv_blockingDefined_19_0= 'blocking' ) ) ( (otherlv_20= '!=' ( ( (lv_blocking_21_0= 'false' ) ) | otherlv_22= 'true' ) ) | ( (otherlv_23= '=' | otherlv_24= '==' ) ( ( (lv_blocking_25_0= 'true' ) ) | otherlv_26= 'false' ) ) ) ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_3Access().getUnorderedGroup_1(), 1) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_3", "getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_3Access().getUnorderedGroup_1(), 1)");
            	    }
            	    // InternalMcmodel.g:4647:116: ( ({...}? => (otherlv_16= '&' ( ( ( (lv_blockingDefined_17_0= '!' ) ) otherlv_18= 'blocking' ) | ( ( (lv_blockingDefined_19_0= 'blocking' ) ) ( (otherlv_20= '!=' ( ( (lv_blocking_21_0= 'false' ) ) | otherlv_22= 'true' ) ) | ( (otherlv_23= '=' | otherlv_24= '==' ) ( ( (lv_blocking_25_0= 'true' ) ) | otherlv_26= 'false' ) ) ) ) ) ) ) )
            	    // InternalMcmodel.g:4648:6: ({...}? => (otherlv_16= '&' ( ( ( (lv_blockingDefined_17_0= '!' ) ) otherlv_18= 'blocking' ) | ( ( (lv_blockingDefined_19_0= 'blocking' ) ) ( (otherlv_20= '!=' ( ( (lv_blocking_21_0= 'false' ) ) | otherlv_22= 'true' ) ) | ( (otherlv_23= '=' | otherlv_24= '==' ) ( ( (lv_blocking_25_0= 'true' ) ) | otherlv_26= 'false' ) ) ) ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getOverridePredicate_3Access().getUnorderedGroup_1(), 1);
            	    // InternalMcmodel.g:4651:9: ({...}? => (otherlv_16= '&' ( ( ( (lv_blockingDefined_17_0= '!' ) ) otherlv_18= 'blocking' ) | ( ( (lv_blockingDefined_19_0= 'blocking' ) ) ( (otherlv_20= '!=' ( ( (lv_blocking_21_0= 'false' ) ) | otherlv_22= 'true' ) ) | ( (otherlv_23= '=' | otherlv_24= '==' ) ( ( (lv_blocking_25_0= 'true' ) ) | otherlv_26= 'false' ) ) ) ) ) ) )
            	    // InternalMcmodel.g:4651:10: {...}? => (otherlv_16= '&' ( ( ( (lv_blockingDefined_17_0= '!' ) ) otherlv_18= 'blocking' ) | ( ( (lv_blockingDefined_19_0= 'blocking' ) ) ( (otherlv_20= '!=' ( ( (lv_blocking_21_0= 'false' ) ) | otherlv_22= 'true' ) ) | ( (otherlv_23= '=' | otherlv_24= '==' ) ( ( (lv_blocking_25_0= 'true' ) ) | otherlv_26= 'false' ) ) ) ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_3", "true");
            	    }
            	    // InternalMcmodel.g:4651:19: (otherlv_16= '&' ( ( ( (lv_blockingDefined_17_0= '!' ) ) otherlv_18= 'blocking' ) | ( ( (lv_blockingDefined_19_0= 'blocking' ) ) ( (otherlv_20= '!=' ( ( (lv_blocking_21_0= 'false' ) ) | otherlv_22= 'true' ) ) | ( (otherlv_23= '=' | otherlv_24= '==' ) ( ( (lv_blocking_25_0= 'true' ) ) | otherlv_26= 'false' ) ) ) ) ) )
            	    // InternalMcmodel.g:4651:20: otherlv_16= '&' ( ( ( (lv_blockingDefined_17_0= '!' ) ) otherlv_18= 'blocking' ) | ( ( (lv_blockingDefined_19_0= 'blocking' ) ) ( (otherlv_20= '!=' ( ( (lv_blocking_21_0= 'false' ) ) | otherlv_22= 'true' ) ) | ( (otherlv_23= '=' | otherlv_24= '==' ) ( ( (lv_blocking_25_0= 'true' ) ) | otherlv_26= 'false' ) ) ) ) )
            	    {
            	    otherlv_16=(Token)match(input,59,FOLLOW_38); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_16, grammarAccess.getOverridePredicate_3Access().getAmpersandKeyword_1_1_0());
            	      								
            	    }
            	    // InternalMcmodel.g:4655:9: ( ( ( (lv_blockingDefined_17_0= '!' ) ) otherlv_18= 'blocking' ) | ( ( (lv_blockingDefined_19_0= 'blocking' ) ) ( (otherlv_20= '!=' ( ( (lv_blocking_21_0= 'false' ) ) | otherlv_22= 'true' ) ) | ( (otherlv_23= '=' | otherlv_24= '==' ) ( ( (lv_blocking_25_0= 'true' ) ) | otherlv_26= 'false' ) ) ) ) )
            	    int alt116=2;
            	    int LA116_0 = input.LA(1);

            	    if ( (LA116_0==60) ) {
            	        alt116=1;
            	    }
            	    else if ( (LA116_0==61) ) {
            	        alt116=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 116, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt116) {
            	        case 1 :
            	            // InternalMcmodel.g:4656:10: ( ( (lv_blockingDefined_17_0= '!' ) ) otherlv_18= 'blocking' )
            	            {
            	            // InternalMcmodel.g:4656:10: ( ( (lv_blockingDefined_17_0= '!' ) ) otherlv_18= 'blocking' )
            	            // InternalMcmodel.g:4657:11: ( (lv_blockingDefined_17_0= '!' ) ) otherlv_18= 'blocking'
            	            {
            	            // InternalMcmodel.g:4657:11: ( (lv_blockingDefined_17_0= '!' ) )
            	            // InternalMcmodel.g:4658:12: (lv_blockingDefined_17_0= '!' )
            	            {
            	            // InternalMcmodel.g:4658:12: (lv_blockingDefined_17_0= '!' )
            	            // InternalMcmodel.g:4659:13: lv_blockingDefined_17_0= '!'
            	            {
            	            lv_blockingDefined_17_0=(Token)match(input,60,FOLLOW_39); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              													newLeafNode(lv_blockingDefined_17_0, grammarAccess.getOverridePredicate_3Access().getBlockingDefinedExclamationMarkKeyword_1_1_1_0_0_0());
            	              												
            	            }
            	            if ( state.backtracking==0 ) {

            	              													if (current==null) {
            	              														current = createModelElement(grammarAccess.getOverridePredicate_3Rule());
            	              													}
            	              													setWithLastConsumed(current, "blockingDefined", true, "!");
            	              												
            	            }

            	            }


            	            }

            	            otherlv_18=(Token)match(input,61,FOLLOW_37); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              											newLeafNode(otherlv_18, grammarAccess.getOverridePredicate_3Access().getBlockingKeyword_1_1_1_0_1());
            	              										
            	            }

            	            }


            	            }
            	            break;
            	        case 2 :
            	            // InternalMcmodel.g:4677:10: ( ( (lv_blockingDefined_19_0= 'blocking' ) ) ( (otherlv_20= '!=' ( ( (lv_blocking_21_0= 'false' ) ) | otherlv_22= 'true' ) ) | ( (otherlv_23= '=' | otherlv_24= '==' ) ( ( (lv_blocking_25_0= 'true' ) ) | otherlv_26= 'false' ) ) ) )
            	            {
            	            // InternalMcmodel.g:4677:10: ( ( (lv_blockingDefined_19_0= 'blocking' ) ) ( (otherlv_20= '!=' ( ( (lv_blocking_21_0= 'false' ) ) | otherlv_22= 'true' ) ) | ( (otherlv_23= '=' | otherlv_24= '==' ) ( ( (lv_blocking_25_0= 'true' ) ) | otherlv_26= 'false' ) ) ) )
            	            // InternalMcmodel.g:4678:11: ( (lv_blockingDefined_19_0= 'blocking' ) ) ( (otherlv_20= '!=' ( ( (lv_blocking_21_0= 'false' ) ) | otherlv_22= 'true' ) ) | ( (otherlv_23= '=' | otherlv_24= '==' ) ( ( (lv_blocking_25_0= 'true' ) ) | otherlv_26= 'false' ) ) )
            	            {
            	            // InternalMcmodel.g:4678:11: ( (lv_blockingDefined_19_0= 'blocking' ) )
            	            // InternalMcmodel.g:4679:12: (lv_blockingDefined_19_0= 'blocking' )
            	            {
            	            // InternalMcmodel.g:4679:12: (lv_blockingDefined_19_0= 'blocking' )
            	            // InternalMcmodel.g:4680:13: lv_blockingDefined_19_0= 'blocking'
            	            {
            	            lv_blockingDefined_19_0=(Token)match(input,61,FOLLOW_40); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              													newLeafNode(lv_blockingDefined_19_0, grammarAccess.getOverridePredicate_3Access().getBlockingDefinedBlockingKeyword_1_1_1_1_0_0());
            	              												
            	            }
            	            if ( state.backtracking==0 ) {

            	              													if (current==null) {
            	              														current = createModelElement(grammarAccess.getOverridePredicate_3Rule());
            	              													}
            	              													setWithLastConsumed(current, "blockingDefined", true, "blocking");
            	              												
            	            }

            	            }


            	            }

            	            // InternalMcmodel.g:4692:11: ( (otherlv_20= '!=' ( ( (lv_blocking_21_0= 'false' ) ) | otherlv_22= 'true' ) ) | ( (otherlv_23= '=' | otherlv_24= '==' ) ( ( (lv_blocking_25_0= 'true' ) ) | otherlv_26= 'false' ) ) )
            	            int alt115=2;
            	            int LA115_0 = input.LA(1);

            	            if ( (LA115_0==62) ) {
            	                alt115=1;
            	            }
            	            else if ( (LA115_0==18||LA115_0==58) ) {
            	                alt115=2;
            	            }
            	            else {
            	                if (state.backtracking>0) {state.failed=true; return current;}
            	                NoViableAltException nvae =
            	                    new NoViableAltException("", 115, 0, input);

            	                throw nvae;
            	            }
            	            switch (alt115) {
            	                case 1 :
            	                    // InternalMcmodel.g:4693:12: (otherlv_20= '!=' ( ( (lv_blocking_21_0= 'false' ) ) | otherlv_22= 'true' ) )
            	                    {
            	                    // InternalMcmodel.g:4693:12: (otherlv_20= '!=' ( ( (lv_blocking_21_0= 'false' ) ) | otherlv_22= 'true' ) )
            	                    // InternalMcmodel.g:4694:13: otherlv_20= '!=' ( ( (lv_blocking_21_0= 'false' ) ) | otherlv_22= 'true' )
            	                    {
            	                    otherlv_20=(Token)match(input,62,FOLLOW_7); if (state.failed) return current;
            	                    if ( state.backtracking==0 ) {

            	                      													newLeafNode(otherlv_20, grammarAccess.getOverridePredicate_3Access().getExclamationMarkEqualsSignKeyword_1_1_1_1_1_0_0());
            	                      												
            	                    }
            	                    // InternalMcmodel.g:4698:13: ( ( (lv_blocking_21_0= 'false' ) ) | otherlv_22= 'true' )
            	                    int alt112=2;
            	                    int LA112_0 = input.LA(1);

            	                    if ( (LA112_0==21) ) {
            	                        alt112=1;
            	                    }
            	                    else if ( (LA112_0==20) ) {
            	                        alt112=2;
            	                    }
            	                    else {
            	                        if (state.backtracking>0) {state.failed=true; return current;}
            	                        NoViableAltException nvae =
            	                            new NoViableAltException("", 112, 0, input);

            	                        throw nvae;
            	                    }
            	                    switch (alt112) {
            	                        case 1 :
            	                            // InternalMcmodel.g:4699:14: ( (lv_blocking_21_0= 'false' ) )
            	                            {
            	                            // InternalMcmodel.g:4699:14: ( (lv_blocking_21_0= 'false' ) )
            	                            // InternalMcmodel.g:4700:15: (lv_blocking_21_0= 'false' )
            	                            {
            	                            // InternalMcmodel.g:4700:15: (lv_blocking_21_0= 'false' )
            	                            // InternalMcmodel.g:4701:16: lv_blocking_21_0= 'false'
            	                            {
            	                            lv_blocking_21_0=(Token)match(input,21,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              																newLeafNode(lv_blocking_21_0, grammarAccess.getOverridePredicate_3Access().getBlockingFalseKeyword_1_1_1_1_1_0_1_0_0());
            	                              															
            	                            }
            	                            if ( state.backtracking==0 ) {

            	                              																if (current==null) {
            	                              																	current = createModelElement(grammarAccess.getOverridePredicate_3Rule());
            	                              																}
            	                              																setWithLastConsumed(current, "blocking", true, "false");
            	                              															
            	                            }

            	                            }


            	                            }


            	                            }
            	                            break;
            	                        case 2 :
            	                            // InternalMcmodel.g:4714:14: otherlv_22= 'true'
            	                            {
            	                            otherlv_22=(Token)match(input,20,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_22, grammarAccess.getOverridePredicate_3Access().getTrueKeyword_1_1_1_1_1_0_1_1());
            	                              													
            	                            }

            	                            }
            	                            break;

            	                    }


            	                    }


            	                    }
            	                    break;
            	                case 2 :
            	                    // InternalMcmodel.g:4721:12: ( (otherlv_23= '=' | otherlv_24= '==' ) ( ( (lv_blocking_25_0= 'true' ) ) | otherlv_26= 'false' ) )
            	                    {
            	                    // InternalMcmodel.g:4721:12: ( (otherlv_23= '=' | otherlv_24= '==' ) ( ( (lv_blocking_25_0= 'true' ) ) | otherlv_26= 'false' ) )
            	                    // InternalMcmodel.g:4722:13: (otherlv_23= '=' | otherlv_24= '==' ) ( ( (lv_blocking_25_0= 'true' ) ) | otherlv_26= 'false' )
            	                    {
            	                    // InternalMcmodel.g:4722:13: (otherlv_23= '=' | otherlv_24= '==' )
            	                    int alt113=2;
            	                    int LA113_0 = input.LA(1);

            	                    if ( (LA113_0==18) ) {
            	                        alt113=1;
            	                    }
            	                    else if ( (LA113_0==58) ) {
            	                        alt113=2;
            	                    }
            	                    else {
            	                        if (state.backtracking>0) {state.failed=true; return current;}
            	                        NoViableAltException nvae =
            	                            new NoViableAltException("", 113, 0, input);

            	                        throw nvae;
            	                    }
            	                    switch (alt113) {
            	                        case 1 :
            	                            // InternalMcmodel.g:4723:14: otherlv_23= '='
            	                            {
            	                            otherlv_23=(Token)match(input,18,FOLLOW_7); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_23, grammarAccess.getOverridePredicate_3Access().getEqualsSignKeyword_1_1_1_1_1_1_0_0());
            	                              													
            	                            }

            	                            }
            	                            break;
            	                        case 2 :
            	                            // InternalMcmodel.g:4728:14: otherlv_24= '=='
            	                            {
            	                            otherlv_24=(Token)match(input,58,FOLLOW_7); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_24, grammarAccess.getOverridePredicate_3Access().getEqualsSignEqualsSignKeyword_1_1_1_1_1_1_0_1());
            	                              													
            	                            }

            	                            }
            	                            break;

            	                    }

            	                    // InternalMcmodel.g:4733:13: ( ( (lv_blocking_25_0= 'true' ) ) | otherlv_26= 'false' )
            	                    int alt114=2;
            	                    int LA114_0 = input.LA(1);

            	                    if ( (LA114_0==20) ) {
            	                        alt114=1;
            	                    }
            	                    else if ( (LA114_0==21) ) {
            	                        alt114=2;
            	                    }
            	                    else {
            	                        if (state.backtracking>0) {state.failed=true; return current;}
            	                        NoViableAltException nvae =
            	                            new NoViableAltException("", 114, 0, input);

            	                        throw nvae;
            	                    }
            	                    switch (alt114) {
            	                        case 1 :
            	                            // InternalMcmodel.g:4734:14: ( (lv_blocking_25_0= 'true' ) )
            	                            {
            	                            // InternalMcmodel.g:4734:14: ( (lv_blocking_25_0= 'true' ) )
            	                            // InternalMcmodel.g:4735:15: (lv_blocking_25_0= 'true' )
            	                            {
            	                            // InternalMcmodel.g:4735:15: (lv_blocking_25_0= 'true' )
            	                            // InternalMcmodel.g:4736:16: lv_blocking_25_0= 'true'
            	                            {
            	                            lv_blocking_25_0=(Token)match(input,20,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              																newLeafNode(lv_blocking_25_0, grammarAccess.getOverridePredicate_3Access().getBlockingTrueKeyword_1_1_1_1_1_1_1_0_0());
            	                              															
            	                            }
            	                            if ( state.backtracking==0 ) {

            	                              																if (current==null) {
            	                              																	current = createModelElement(grammarAccess.getOverridePredicate_3Rule());
            	                              																}
            	                              																setWithLastConsumed(current, "blocking", true, "true");
            	                              															
            	                            }

            	                            }


            	                            }


            	                            }
            	                            break;
            	                        case 2 :
            	                            // InternalMcmodel.g:4749:14: otherlv_26= 'false'
            	                            {
            	                            otherlv_26=(Token)match(input,21,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_26, grammarAccess.getOverridePredicate_3Access().getFalseKeyword_1_1_1_1_1_1_1_1());
            	                              													
            	                            }

            	                            }
            	                            break;

            	                    }


            	                    }


            	                    }
            	                    break;

            	            }


            	            }


            	            }
            	            break;

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getOverridePredicate_3Access().getUnorderedGroup_1());

            	    }


            	    }


            	    }
            	    break;
            	case 3 :
            	    // InternalMcmodel.g:4764:4: ({...}? => ( ({...}? => (otherlv_27= '&' ( ( ( (lv_castDefined_28_0= '!' ) ) otherlv_29= 'cast' ) | ( ( (lv_castDefined_30_0= 'cast' ) ) ( (otherlv_31= '!=' ( ( (lv_cast_32_0= 'false' ) ) | otherlv_33= 'true' ) ) | ( (otherlv_34= '=' | otherlv_35= '==' ) ( ( (lv_cast_36_0= 'true' ) ) | otherlv_37= 'false' ) ) ) ) ) ) ) ) )
            	    {
            	    // InternalMcmodel.g:4764:4: ({...}? => ( ({...}? => (otherlv_27= '&' ( ( ( (lv_castDefined_28_0= '!' ) ) otherlv_29= 'cast' ) | ( ( (lv_castDefined_30_0= 'cast' ) ) ( (otherlv_31= '!=' ( ( (lv_cast_32_0= 'false' ) ) | otherlv_33= 'true' ) ) | ( (otherlv_34= '=' | otherlv_35= '==' ) ( ( (lv_cast_36_0= 'true' ) ) | otherlv_37= 'false' ) ) ) ) ) ) ) ) )
            	    // InternalMcmodel.g:4765:5: {...}? => ( ({...}? => (otherlv_27= '&' ( ( ( (lv_castDefined_28_0= '!' ) ) otherlv_29= 'cast' ) | ( ( (lv_castDefined_30_0= 'cast' ) ) ( (otherlv_31= '!=' ( ( (lv_cast_32_0= 'false' ) ) | otherlv_33= 'true' ) ) | ( (otherlv_34= '=' | otherlv_35= '==' ) ( ( (lv_cast_36_0= 'true' ) ) | otherlv_37= 'false' ) ) ) ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_3Access().getUnorderedGroup_1(), 2) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_3", "getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_3Access().getUnorderedGroup_1(), 2)");
            	    }
            	    // InternalMcmodel.g:4765:116: ( ({...}? => (otherlv_27= '&' ( ( ( (lv_castDefined_28_0= '!' ) ) otherlv_29= 'cast' ) | ( ( (lv_castDefined_30_0= 'cast' ) ) ( (otherlv_31= '!=' ( ( (lv_cast_32_0= 'false' ) ) | otherlv_33= 'true' ) ) | ( (otherlv_34= '=' | otherlv_35= '==' ) ( ( (lv_cast_36_0= 'true' ) ) | otherlv_37= 'false' ) ) ) ) ) ) ) )
            	    // InternalMcmodel.g:4766:6: ({...}? => (otherlv_27= '&' ( ( ( (lv_castDefined_28_0= '!' ) ) otherlv_29= 'cast' ) | ( ( (lv_castDefined_30_0= 'cast' ) ) ( (otherlv_31= '!=' ( ( (lv_cast_32_0= 'false' ) ) | otherlv_33= 'true' ) ) | ( (otherlv_34= '=' | otherlv_35= '==' ) ( ( (lv_cast_36_0= 'true' ) ) | otherlv_37= 'false' ) ) ) ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getOverridePredicate_3Access().getUnorderedGroup_1(), 2);
            	    // InternalMcmodel.g:4769:9: ({...}? => (otherlv_27= '&' ( ( ( (lv_castDefined_28_0= '!' ) ) otherlv_29= 'cast' ) | ( ( (lv_castDefined_30_0= 'cast' ) ) ( (otherlv_31= '!=' ( ( (lv_cast_32_0= 'false' ) ) | otherlv_33= 'true' ) ) | ( (otherlv_34= '=' | otherlv_35= '==' ) ( ( (lv_cast_36_0= 'true' ) ) | otherlv_37= 'false' ) ) ) ) ) ) )
            	    // InternalMcmodel.g:4769:10: {...}? => (otherlv_27= '&' ( ( ( (lv_castDefined_28_0= '!' ) ) otherlv_29= 'cast' ) | ( ( (lv_castDefined_30_0= 'cast' ) ) ( (otherlv_31= '!=' ( ( (lv_cast_32_0= 'false' ) ) | otherlv_33= 'true' ) ) | ( (otherlv_34= '=' | otherlv_35= '==' ) ( ( (lv_cast_36_0= 'true' ) ) | otherlv_37= 'false' ) ) ) ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_3", "true");
            	    }
            	    // InternalMcmodel.g:4769:19: (otherlv_27= '&' ( ( ( (lv_castDefined_28_0= '!' ) ) otherlv_29= 'cast' ) | ( ( (lv_castDefined_30_0= 'cast' ) ) ( (otherlv_31= '!=' ( ( (lv_cast_32_0= 'false' ) ) | otherlv_33= 'true' ) ) | ( (otherlv_34= '=' | otherlv_35= '==' ) ( ( (lv_cast_36_0= 'true' ) ) | otherlv_37= 'false' ) ) ) ) ) )
            	    // InternalMcmodel.g:4769:20: otherlv_27= '&' ( ( ( (lv_castDefined_28_0= '!' ) ) otherlv_29= 'cast' ) | ( ( (lv_castDefined_30_0= 'cast' ) ) ( (otherlv_31= '!=' ( ( (lv_cast_32_0= 'false' ) ) | otherlv_33= 'true' ) ) | ( (otherlv_34= '=' | otherlv_35= '==' ) ( ( (lv_cast_36_0= 'true' ) ) | otherlv_37= 'false' ) ) ) ) )
            	    {
            	    otherlv_27=(Token)match(input,59,FOLLOW_43); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_27, grammarAccess.getOverridePredicate_3Access().getAmpersandKeyword_1_2_0());
            	      								
            	    }
            	    // InternalMcmodel.g:4773:9: ( ( ( (lv_castDefined_28_0= '!' ) ) otherlv_29= 'cast' ) | ( ( (lv_castDefined_30_0= 'cast' ) ) ( (otherlv_31= '!=' ( ( (lv_cast_32_0= 'false' ) ) | otherlv_33= 'true' ) ) | ( (otherlv_34= '=' | otherlv_35= '==' ) ( ( (lv_cast_36_0= 'true' ) ) | otherlv_37= 'false' ) ) ) ) )
            	    int alt121=2;
            	    int LA121_0 = input.LA(1);

            	    if ( (LA121_0==60) ) {
            	        alt121=1;
            	    }
            	    else if ( (LA121_0==64) ) {
            	        alt121=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 121, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt121) {
            	        case 1 :
            	            // InternalMcmodel.g:4774:10: ( ( (lv_castDefined_28_0= '!' ) ) otherlv_29= 'cast' )
            	            {
            	            // InternalMcmodel.g:4774:10: ( ( (lv_castDefined_28_0= '!' ) ) otherlv_29= 'cast' )
            	            // InternalMcmodel.g:4775:11: ( (lv_castDefined_28_0= '!' ) ) otherlv_29= 'cast'
            	            {
            	            // InternalMcmodel.g:4775:11: ( (lv_castDefined_28_0= '!' ) )
            	            // InternalMcmodel.g:4776:12: (lv_castDefined_28_0= '!' )
            	            {
            	            // InternalMcmodel.g:4776:12: (lv_castDefined_28_0= '!' )
            	            // InternalMcmodel.g:4777:13: lv_castDefined_28_0= '!'
            	            {
            	            lv_castDefined_28_0=(Token)match(input,60,FOLLOW_44); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              													newLeafNode(lv_castDefined_28_0, grammarAccess.getOverridePredicate_3Access().getCastDefinedExclamationMarkKeyword_1_2_1_0_0_0());
            	              												
            	            }
            	            if ( state.backtracking==0 ) {

            	              													if (current==null) {
            	              														current = createModelElement(grammarAccess.getOverridePredicate_3Rule());
            	              													}
            	              													setWithLastConsumed(current, "castDefined", true, "!");
            	              												
            	            }

            	            }


            	            }

            	            otherlv_29=(Token)match(input,64,FOLLOW_37); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              											newLeafNode(otherlv_29, grammarAccess.getOverridePredicate_3Access().getCastKeyword_1_2_1_0_1());
            	              										
            	            }

            	            }


            	            }
            	            break;
            	        case 2 :
            	            // InternalMcmodel.g:4795:10: ( ( (lv_castDefined_30_0= 'cast' ) ) ( (otherlv_31= '!=' ( ( (lv_cast_32_0= 'false' ) ) | otherlv_33= 'true' ) ) | ( (otherlv_34= '=' | otherlv_35= '==' ) ( ( (lv_cast_36_0= 'true' ) ) | otherlv_37= 'false' ) ) ) )
            	            {
            	            // InternalMcmodel.g:4795:10: ( ( (lv_castDefined_30_0= 'cast' ) ) ( (otherlv_31= '!=' ( ( (lv_cast_32_0= 'false' ) ) | otherlv_33= 'true' ) ) | ( (otherlv_34= '=' | otherlv_35= '==' ) ( ( (lv_cast_36_0= 'true' ) ) | otherlv_37= 'false' ) ) ) )
            	            // InternalMcmodel.g:4796:11: ( (lv_castDefined_30_0= 'cast' ) ) ( (otherlv_31= '!=' ( ( (lv_cast_32_0= 'false' ) ) | otherlv_33= 'true' ) ) | ( (otherlv_34= '=' | otherlv_35= '==' ) ( ( (lv_cast_36_0= 'true' ) ) | otherlv_37= 'false' ) ) )
            	            {
            	            // InternalMcmodel.g:4796:11: ( (lv_castDefined_30_0= 'cast' ) )
            	            // InternalMcmodel.g:4797:12: (lv_castDefined_30_0= 'cast' )
            	            {
            	            // InternalMcmodel.g:4797:12: (lv_castDefined_30_0= 'cast' )
            	            // InternalMcmodel.g:4798:13: lv_castDefined_30_0= 'cast'
            	            {
            	            lv_castDefined_30_0=(Token)match(input,64,FOLLOW_40); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              													newLeafNode(lv_castDefined_30_0, grammarAccess.getOverridePredicate_3Access().getCastDefinedCastKeyword_1_2_1_1_0_0());
            	              												
            	            }
            	            if ( state.backtracking==0 ) {

            	              													if (current==null) {
            	              														current = createModelElement(grammarAccess.getOverridePredicate_3Rule());
            	              													}
            	              													setWithLastConsumed(current, "castDefined", true, "cast");
            	              												
            	            }

            	            }


            	            }

            	            // InternalMcmodel.g:4810:11: ( (otherlv_31= '!=' ( ( (lv_cast_32_0= 'false' ) ) | otherlv_33= 'true' ) ) | ( (otherlv_34= '=' | otherlv_35= '==' ) ( ( (lv_cast_36_0= 'true' ) ) | otherlv_37= 'false' ) ) )
            	            int alt120=2;
            	            int LA120_0 = input.LA(1);

            	            if ( (LA120_0==62) ) {
            	                alt120=1;
            	            }
            	            else if ( (LA120_0==18||LA120_0==58) ) {
            	                alt120=2;
            	            }
            	            else {
            	                if (state.backtracking>0) {state.failed=true; return current;}
            	                NoViableAltException nvae =
            	                    new NoViableAltException("", 120, 0, input);

            	                throw nvae;
            	            }
            	            switch (alt120) {
            	                case 1 :
            	                    // InternalMcmodel.g:4811:12: (otherlv_31= '!=' ( ( (lv_cast_32_0= 'false' ) ) | otherlv_33= 'true' ) )
            	                    {
            	                    // InternalMcmodel.g:4811:12: (otherlv_31= '!=' ( ( (lv_cast_32_0= 'false' ) ) | otherlv_33= 'true' ) )
            	                    // InternalMcmodel.g:4812:13: otherlv_31= '!=' ( ( (lv_cast_32_0= 'false' ) ) | otherlv_33= 'true' )
            	                    {
            	                    otherlv_31=(Token)match(input,62,FOLLOW_7); if (state.failed) return current;
            	                    if ( state.backtracking==0 ) {

            	                      													newLeafNode(otherlv_31, grammarAccess.getOverridePredicate_3Access().getExclamationMarkEqualsSignKeyword_1_2_1_1_1_0_0());
            	                      												
            	                    }
            	                    // InternalMcmodel.g:4816:13: ( ( (lv_cast_32_0= 'false' ) ) | otherlv_33= 'true' )
            	                    int alt117=2;
            	                    int LA117_0 = input.LA(1);

            	                    if ( (LA117_0==21) ) {
            	                        alt117=1;
            	                    }
            	                    else if ( (LA117_0==20) ) {
            	                        alt117=2;
            	                    }
            	                    else {
            	                        if (state.backtracking>0) {state.failed=true; return current;}
            	                        NoViableAltException nvae =
            	                            new NoViableAltException("", 117, 0, input);

            	                        throw nvae;
            	                    }
            	                    switch (alt117) {
            	                        case 1 :
            	                            // InternalMcmodel.g:4817:14: ( (lv_cast_32_0= 'false' ) )
            	                            {
            	                            // InternalMcmodel.g:4817:14: ( (lv_cast_32_0= 'false' ) )
            	                            // InternalMcmodel.g:4818:15: (lv_cast_32_0= 'false' )
            	                            {
            	                            // InternalMcmodel.g:4818:15: (lv_cast_32_0= 'false' )
            	                            // InternalMcmodel.g:4819:16: lv_cast_32_0= 'false'
            	                            {
            	                            lv_cast_32_0=(Token)match(input,21,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              																newLeafNode(lv_cast_32_0, grammarAccess.getOverridePredicate_3Access().getCastFalseKeyword_1_2_1_1_1_0_1_0_0());
            	                              															
            	                            }
            	                            if ( state.backtracking==0 ) {

            	                              																if (current==null) {
            	                              																	current = createModelElement(grammarAccess.getOverridePredicate_3Rule());
            	                              																}
            	                              																setWithLastConsumed(current, "cast", true, "false");
            	                              															
            	                            }

            	                            }


            	                            }


            	                            }
            	                            break;
            	                        case 2 :
            	                            // InternalMcmodel.g:4832:14: otherlv_33= 'true'
            	                            {
            	                            otherlv_33=(Token)match(input,20,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_33, grammarAccess.getOverridePredicate_3Access().getTrueKeyword_1_2_1_1_1_0_1_1());
            	                              													
            	                            }

            	                            }
            	                            break;

            	                    }


            	                    }


            	                    }
            	                    break;
            	                case 2 :
            	                    // InternalMcmodel.g:4839:12: ( (otherlv_34= '=' | otherlv_35= '==' ) ( ( (lv_cast_36_0= 'true' ) ) | otherlv_37= 'false' ) )
            	                    {
            	                    // InternalMcmodel.g:4839:12: ( (otherlv_34= '=' | otherlv_35= '==' ) ( ( (lv_cast_36_0= 'true' ) ) | otherlv_37= 'false' ) )
            	                    // InternalMcmodel.g:4840:13: (otherlv_34= '=' | otherlv_35= '==' ) ( ( (lv_cast_36_0= 'true' ) ) | otherlv_37= 'false' )
            	                    {
            	                    // InternalMcmodel.g:4840:13: (otherlv_34= '=' | otherlv_35= '==' )
            	                    int alt118=2;
            	                    int LA118_0 = input.LA(1);

            	                    if ( (LA118_0==18) ) {
            	                        alt118=1;
            	                    }
            	                    else if ( (LA118_0==58) ) {
            	                        alt118=2;
            	                    }
            	                    else {
            	                        if (state.backtracking>0) {state.failed=true; return current;}
            	                        NoViableAltException nvae =
            	                            new NoViableAltException("", 118, 0, input);

            	                        throw nvae;
            	                    }
            	                    switch (alt118) {
            	                        case 1 :
            	                            // InternalMcmodel.g:4841:14: otherlv_34= '='
            	                            {
            	                            otherlv_34=(Token)match(input,18,FOLLOW_7); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_34, grammarAccess.getOverridePredicate_3Access().getEqualsSignKeyword_1_2_1_1_1_1_0_0());
            	                              													
            	                            }

            	                            }
            	                            break;
            	                        case 2 :
            	                            // InternalMcmodel.g:4846:14: otherlv_35= '=='
            	                            {
            	                            otherlv_35=(Token)match(input,58,FOLLOW_7); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_35, grammarAccess.getOverridePredicate_3Access().getEqualsSignEqualsSignKeyword_1_2_1_1_1_1_0_1());
            	                              													
            	                            }

            	                            }
            	                            break;

            	                    }

            	                    // InternalMcmodel.g:4851:13: ( ( (lv_cast_36_0= 'true' ) ) | otherlv_37= 'false' )
            	                    int alt119=2;
            	                    int LA119_0 = input.LA(1);

            	                    if ( (LA119_0==20) ) {
            	                        alt119=1;
            	                    }
            	                    else if ( (LA119_0==21) ) {
            	                        alt119=2;
            	                    }
            	                    else {
            	                        if (state.backtracking>0) {state.failed=true; return current;}
            	                        NoViableAltException nvae =
            	                            new NoViableAltException("", 119, 0, input);

            	                        throw nvae;
            	                    }
            	                    switch (alt119) {
            	                        case 1 :
            	                            // InternalMcmodel.g:4852:14: ( (lv_cast_36_0= 'true' ) )
            	                            {
            	                            // InternalMcmodel.g:4852:14: ( (lv_cast_36_0= 'true' ) )
            	                            // InternalMcmodel.g:4853:15: (lv_cast_36_0= 'true' )
            	                            {
            	                            // InternalMcmodel.g:4853:15: (lv_cast_36_0= 'true' )
            	                            // InternalMcmodel.g:4854:16: lv_cast_36_0= 'true'
            	                            {
            	                            lv_cast_36_0=(Token)match(input,20,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              																newLeafNode(lv_cast_36_0, grammarAccess.getOverridePredicate_3Access().getCastTrueKeyword_1_2_1_1_1_1_1_0_0());
            	                              															
            	                            }
            	                            if ( state.backtracking==0 ) {

            	                              																if (current==null) {
            	                              																	current = createModelElement(grammarAccess.getOverridePredicate_3Rule());
            	                              																}
            	                              																setWithLastConsumed(current, "cast", true, "true");
            	                              															
            	                            }

            	                            }


            	                            }


            	                            }
            	                            break;
            	                        case 2 :
            	                            // InternalMcmodel.g:4867:14: otherlv_37= 'false'
            	                            {
            	                            otherlv_37=(Token)match(input,21,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_37, grammarAccess.getOverridePredicate_3Access().getFalseKeyword_1_2_1_1_1_1_1_1());
            	                              													
            	                            }

            	                            }
            	                            break;

            	                    }


            	                    }


            	                    }
            	                    break;

            	            }


            	            }


            	            }
            	            break;

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getOverridePredicate_3Access().getUnorderedGroup_1());

            	    }


            	    }


            	    }
            	    break;
            	case 4 :
            	    // InternalMcmodel.g:4882:4: ({...}? => ( ({...}? => (otherlv_38= '&' ( (lv_cooldownDefined_39_0= 'cooldown' ) ) (otherlv_40= '=' | otherlv_41= '==' ) ( (lv_cooldown_42_0= RULE_PERCENTAGE ) ) ) ) ) )
            	    {
            	    // InternalMcmodel.g:4882:4: ({...}? => ( ({...}? => (otherlv_38= '&' ( (lv_cooldownDefined_39_0= 'cooldown' ) ) (otherlv_40= '=' | otherlv_41= '==' ) ( (lv_cooldown_42_0= RULE_PERCENTAGE ) ) ) ) ) )
            	    // InternalMcmodel.g:4883:5: {...}? => ( ({...}? => (otherlv_38= '&' ( (lv_cooldownDefined_39_0= 'cooldown' ) ) (otherlv_40= '=' | otherlv_41= '==' ) ( (lv_cooldown_42_0= RULE_PERCENTAGE ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_3Access().getUnorderedGroup_1(), 3) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_3", "getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_3Access().getUnorderedGroup_1(), 3)");
            	    }
            	    // InternalMcmodel.g:4883:116: ( ({...}? => (otherlv_38= '&' ( (lv_cooldownDefined_39_0= 'cooldown' ) ) (otherlv_40= '=' | otherlv_41= '==' ) ( (lv_cooldown_42_0= RULE_PERCENTAGE ) ) ) ) )
            	    // InternalMcmodel.g:4884:6: ({...}? => (otherlv_38= '&' ( (lv_cooldownDefined_39_0= 'cooldown' ) ) (otherlv_40= '=' | otherlv_41= '==' ) ( (lv_cooldown_42_0= RULE_PERCENTAGE ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getOverridePredicate_3Access().getUnorderedGroup_1(), 3);
            	    // InternalMcmodel.g:4887:9: ({...}? => (otherlv_38= '&' ( (lv_cooldownDefined_39_0= 'cooldown' ) ) (otherlv_40= '=' | otherlv_41= '==' ) ( (lv_cooldown_42_0= RULE_PERCENTAGE ) ) ) )
            	    // InternalMcmodel.g:4887:10: {...}? => (otherlv_38= '&' ( (lv_cooldownDefined_39_0= 'cooldown' ) ) (otherlv_40= '=' | otherlv_41= '==' ) ( (lv_cooldown_42_0= RULE_PERCENTAGE ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_3", "true");
            	    }
            	    // InternalMcmodel.g:4887:19: (otherlv_38= '&' ( (lv_cooldownDefined_39_0= 'cooldown' ) ) (otherlv_40= '=' | otherlv_41= '==' ) ( (lv_cooldown_42_0= RULE_PERCENTAGE ) ) )
            	    // InternalMcmodel.g:4887:20: otherlv_38= '&' ( (lv_cooldownDefined_39_0= 'cooldown' ) ) (otherlv_40= '=' | otherlv_41= '==' ) ( (lv_cooldown_42_0= RULE_PERCENTAGE ) )
            	    {
            	    otherlv_38=(Token)match(input,59,FOLLOW_45); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_38, grammarAccess.getOverridePredicate_3Access().getAmpersandKeyword_1_3_0());
            	      								
            	    }
            	    // InternalMcmodel.g:4891:9: ( (lv_cooldownDefined_39_0= 'cooldown' ) )
            	    // InternalMcmodel.g:4892:10: (lv_cooldownDefined_39_0= 'cooldown' )
            	    {
            	    // InternalMcmodel.g:4892:10: (lv_cooldownDefined_39_0= 'cooldown' )
            	    // InternalMcmodel.g:4893:11: lv_cooldownDefined_39_0= 'cooldown'
            	    {
            	    lv_cooldownDefined_39_0=(Token)match(input,65,FOLLOW_35); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											newLeafNode(lv_cooldownDefined_39_0, grammarAccess.getOverridePredicate_3Access().getCooldownDefinedCooldownKeyword_1_3_1_0());
            	      										
            	    }
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElement(grammarAccess.getOverridePredicate_3Rule());
            	      											}
            	      											setWithLastConsumed(current, "cooldownDefined", true, "cooldown");
            	      										
            	    }

            	    }


            	    }

            	    // InternalMcmodel.g:4905:9: (otherlv_40= '=' | otherlv_41= '==' )
            	    int alt122=2;
            	    int LA122_0 = input.LA(1);

            	    if ( (LA122_0==18) ) {
            	        alt122=1;
            	    }
            	    else if ( (LA122_0==58) ) {
            	        alt122=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 122, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt122) {
            	        case 1 :
            	            // InternalMcmodel.g:4906:10: otherlv_40= '='
            	            {
            	            otherlv_40=(Token)match(input,18,FOLLOW_36); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(otherlv_40, grammarAccess.getOverridePredicate_3Access().getEqualsSignKeyword_1_3_2_0());
            	              									
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalMcmodel.g:4911:10: otherlv_41= '=='
            	            {
            	            otherlv_41=(Token)match(input,58,FOLLOW_36); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(otherlv_41, grammarAccess.getOverridePredicate_3Access().getEqualsSignEqualsSignKeyword_1_3_2_1());
            	              									
            	            }

            	            }
            	            break;

            	    }

            	    // InternalMcmodel.g:4916:9: ( (lv_cooldown_42_0= RULE_PERCENTAGE ) )
            	    // InternalMcmodel.g:4917:10: (lv_cooldown_42_0= RULE_PERCENTAGE )
            	    {
            	    // InternalMcmodel.g:4917:10: (lv_cooldown_42_0= RULE_PERCENTAGE )
            	    // InternalMcmodel.g:4918:11: lv_cooldown_42_0= RULE_PERCENTAGE
            	    {
            	    lv_cooldown_42_0=(Token)match(input,RULE_PERCENTAGE,FOLLOW_37); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											newLeafNode(lv_cooldown_42_0, grammarAccess.getOverridePredicate_3Access().getCooldownPERCENTAGETerminalRuleCall_1_3_3_0());
            	      										
            	    }
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElement(grammarAccess.getOverridePredicate_3Rule());
            	      											}
            	      											setWithLastConsumed(
            	      												current,
            	      												"cooldown",
            	      												lv_cooldown_42_0,
            	      												"com.raptor.mcmodel.Mcmodel.PERCENTAGE");
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getOverridePredicate_3Access().getUnorderedGroup_1());

            	    }


            	    }


            	    }
            	    break;
            	case 5 :
            	    // InternalMcmodel.g:4940:4: ({...}? => ( ({...}? => (otherlv_43= '&' ( (lv_damageDefined_44_0= 'damage' ) ) (otherlv_45= '=' | otherlv_46= '==' ) ( (lv_damage_47_0= RULE_PERCENTAGE ) ) ) ) ) )
            	    {
            	    // InternalMcmodel.g:4940:4: ({...}? => ( ({...}? => (otherlv_43= '&' ( (lv_damageDefined_44_0= 'damage' ) ) (otherlv_45= '=' | otherlv_46= '==' ) ( (lv_damage_47_0= RULE_PERCENTAGE ) ) ) ) ) )
            	    // InternalMcmodel.g:4941:5: {...}? => ( ({...}? => (otherlv_43= '&' ( (lv_damageDefined_44_0= 'damage' ) ) (otherlv_45= '=' | otherlv_46= '==' ) ( (lv_damage_47_0= RULE_PERCENTAGE ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_3Access().getUnorderedGroup_1(), 4) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_3", "getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_3Access().getUnorderedGroup_1(), 4)");
            	    }
            	    // InternalMcmodel.g:4941:116: ( ({...}? => (otherlv_43= '&' ( (lv_damageDefined_44_0= 'damage' ) ) (otherlv_45= '=' | otherlv_46= '==' ) ( (lv_damage_47_0= RULE_PERCENTAGE ) ) ) ) )
            	    // InternalMcmodel.g:4942:6: ({...}? => (otherlv_43= '&' ( (lv_damageDefined_44_0= 'damage' ) ) (otherlv_45= '=' | otherlv_46= '==' ) ( (lv_damage_47_0= RULE_PERCENTAGE ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getOverridePredicate_3Access().getUnorderedGroup_1(), 4);
            	    // InternalMcmodel.g:4945:9: ({...}? => (otherlv_43= '&' ( (lv_damageDefined_44_0= 'damage' ) ) (otherlv_45= '=' | otherlv_46= '==' ) ( (lv_damage_47_0= RULE_PERCENTAGE ) ) ) )
            	    // InternalMcmodel.g:4945:10: {...}? => (otherlv_43= '&' ( (lv_damageDefined_44_0= 'damage' ) ) (otherlv_45= '=' | otherlv_46= '==' ) ( (lv_damage_47_0= RULE_PERCENTAGE ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_3", "true");
            	    }
            	    // InternalMcmodel.g:4945:19: (otherlv_43= '&' ( (lv_damageDefined_44_0= 'damage' ) ) (otherlv_45= '=' | otherlv_46= '==' ) ( (lv_damage_47_0= RULE_PERCENTAGE ) ) )
            	    // InternalMcmodel.g:4945:20: otherlv_43= '&' ( (lv_damageDefined_44_0= 'damage' ) ) (otherlv_45= '=' | otherlv_46= '==' ) ( (lv_damage_47_0= RULE_PERCENTAGE ) )
            	    {
            	    otherlv_43=(Token)match(input,59,FOLLOW_46); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_43, grammarAccess.getOverridePredicate_3Access().getAmpersandKeyword_1_4_0());
            	      								
            	    }
            	    // InternalMcmodel.g:4949:9: ( (lv_damageDefined_44_0= 'damage' ) )
            	    // InternalMcmodel.g:4950:10: (lv_damageDefined_44_0= 'damage' )
            	    {
            	    // InternalMcmodel.g:4950:10: (lv_damageDefined_44_0= 'damage' )
            	    // InternalMcmodel.g:4951:11: lv_damageDefined_44_0= 'damage'
            	    {
            	    lv_damageDefined_44_0=(Token)match(input,66,FOLLOW_35); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											newLeafNode(lv_damageDefined_44_0, grammarAccess.getOverridePredicate_3Access().getDamageDefinedDamageKeyword_1_4_1_0());
            	      										
            	    }
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElement(grammarAccess.getOverridePredicate_3Rule());
            	      											}
            	      											setWithLastConsumed(current, "damageDefined", true, "damage");
            	      										
            	    }

            	    }


            	    }

            	    // InternalMcmodel.g:4963:9: (otherlv_45= '=' | otherlv_46= '==' )
            	    int alt123=2;
            	    int LA123_0 = input.LA(1);

            	    if ( (LA123_0==18) ) {
            	        alt123=1;
            	    }
            	    else if ( (LA123_0==58) ) {
            	        alt123=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 123, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt123) {
            	        case 1 :
            	            // InternalMcmodel.g:4964:10: otherlv_45= '='
            	            {
            	            otherlv_45=(Token)match(input,18,FOLLOW_36); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(otherlv_45, grammarAccess.getOverridePredicate_3Access().getEqualsSignKeyword_1_4_2_0());
            	              									
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalMcmodel.g:4969:10: otherlv_46= '=='
            	            {
            	            otherlv_46=(Token)match(input,58,FOLLOW_36); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(otherlv_46, grammarAccess.getOverridePredicate_3Access().getEqualsSignEqualsSignKeyword_1_4_2_1());
            	              									
            	            }

            	            }
            	            break;

            	    }

            	    // InternalMcmodel.g:4974:9: ( (lv_damage_47_0= RULE_PERCENTAGE ) )
            	    // InternalMcmodel.g:4975:10: (lv_damage_47_0= RULE_PERCENTAGE )
            	    {
            	    // InternalMcmodel.g:4975:10: (lv_damage_47_0= RULE_PERCENTAGE )
            	    // InternalMcmodel.g:4976:11: lv_damage_47_0= RULE_PERCENTAGE
            	    {
            	    lv_damage_47_0=(Token)match(input,RULE_PERCENTAGE,FOLLOW_37); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											newLeafNode(lv_damage_47_0, grammarAccess.getOverridePredicate_3Access().getDamagePERCENTAGETerminalRuleCall_1_4_3_0());
            	      										
            	    }
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElement(grammarAccess.getOverridePredicate_3Rule());
            	      											}
            	      											setWithLastConsumed(
            	      												current,
            	      												"damage",
            	      												lv_damage_47_0,
            	      												"com.raptor.mcmodel.Mcmodel.PERCENTAGE");
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getOverridePredicate_3Access().getUnorderedGroup_1());

            	    }


            	    }


            	    }
            	    break;
            	case 6 :
            	    // InternalMcmodel.g:4998:4: ({...}? => ( ({...}? => (otherlv_48= '&' ( ( ( (lv_damagedDefined_49_0= '!' ) ) otherlv_50= 'damaged' ) | ( ( (lv_damagedDefined_51_0= 'damaged' ) ) ( (otherlv_52= '!=' ( ( (lv_damaged_53_0= 'false' ) ) | otherlv_54= 'true' ) ) | ( (otherlv_55= '=' | otherlv_56= '==' ) ( ( (lv_damaged_57_0= 'true' ) ) | otherlv_58= 'false' ) ) ) ) ) ) ) ) )
            	    {
            	    // InternalMcmodel.g:4998:4: ({...}? => ( ({...}? => (otherlv_48= '&' ( ( ( (lv_damagedDefined_49_0= '!' ) ) otherlv_50= 'damaged' ) | ( ( (lv_damagedDefined_51_0= 'damaged' ) ) ( (otherlv_52= '!=' ( ( (lv_damaged_53_0= 'false' ) ) | otherlv_54= 'true' ) ) | ( (otherlv_55= '=' | otherlv_56= '==' ) ( ( (lv_damaged_57_0= 'true' ) ) | otherlv_58= 'false' ) ) ) ) ) ) ) ) )
            	    // InternalMcmodel.g:4999:5: {...}? => ( ({...}? => (otherlv_48= '&' ( ( ( (lv_damagedDefined_49_0= '!' ) ) otherlv_50= 'damaged' ) | ( ( (lv_damagedDefined_51_0= 'damaged' ) ) ( (otherlv_52= '!=' ( ( (lv_damaged_53_0= 'false' ) ) | otherlv_54= 'true' ) ) | ( (otherlv_55= '=' | otherlv_56= '==' ) ( ( (lv_damaged_57_0= 'true' ) ) | otherlv_58= 'false' ) ) ) ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_3Access().getUnorderedGroup_1(), 5) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_3", "getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_3Access().getUnorderedGroup_1(), 5)");
            	    }
            	    // InternalMcmodel.g:4999:116: ( ({...}? => (otherlv_48= '&' ( ( ( (lv_damagedDefined_49_0= '!' ) ) otherlv_50= 'damaged' ) | ( ( (lv_damagedDefined_51_0= 'damaged' ) ) ( (otherlv_52= '!=' ( ( (lv_damaged_53_0= 'false' ) ) | otherlv_54= 'true' ) ) | ( (otherlv_55= '=' | otherlv_56= '==' ) ( ( (lv_damaged_57_0= 'true' ) ) | otherlv_58= 'false' ) ) ) ) ) ) ) )
            	    // InternalMcmodel.g:5000:6: ({...}? => (otherlv_48= '&' ( ( ( (lv_damagedDefined_49_0= '!' ) ) otherlv_50= 'damaged' ) | ( ( (lv_damagedDefined_51_0= 'damaged' ) ) ( (otherlv_52= '!=' ( ( (lv_damaged_53_0= 'false' ) ) | otherlv_54= 'true' ) ) | ( (otherlv_55= '=' | otherlv_56= '==' ) ( ( (lv_damaged_57_0= 'true' ) ) | otherlv_58= 'false' ) ) ) ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getOverridePredicate_3Access().getUnorderedGroup_1(), 5);
            	    // InternalMcmodel.g:5003:9: ({...}? => (otherlv_48= '&' ( ( ( (lv_damagedDefined_49_0= '!' ) ) otherlv_50= 'damaged' ) | ( ( (lv_damagedDefined_51_0= 'damaged' ) ) ( (otherlv_52= '!=' ( ( (lv_damaged_53_0= 'false' ) ) | otherlv_54= 'true' ) ) | ( (otherlv_55= '=' | otherlv_56= '==' ) ( ( (lv_damaged_57_0= 'true' ) ) | otherlv_58= 'false' ) ) ) ) ) ) )
            	    // InternalMcmodel.g:5003:10: {...}? => (otherlv_48= '&' ( ( ( (lv_damagedDefined_49_0= '!' ) ) otherlv_50= 'damaged' ) | ( ( (lv_damagedDefined_51_0= 'damaged' ) ) ( (otherlv_52= '!=' ( ( (lv_damaged_53_0= 'false' ) ) | otherlv_54= 'true' ) ) | ( (otherlv_55= '=' | otherlv_56= '==' ) ( ( (lv_damaged_57_0= 'true' ) ) | otherlv_58= 'false' ) ) ) ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_3", "true");
            	    }
            	    // InternalMcmodel.g:5003:19: (otherlv_48= '&' ( ( ( (lv_damagedDefined_49_0= '!' ) ) otherlv_50= 'damaged' ) | ( ( (lv_damagedDefined_51_0= 'damaged' ) ) ( (otherlv_52= '!=' ( ( (lv_damaged_53_0= 'false' ) ) | otherlv_54= 'true' ) ) | ( (otherlv_55= '=' | otherlv_56= '==' ) ( ( (lv_damaged_57_0= 'true' ) ) | otherlv_58= 'false' ) ) ) ) ) )
            	    // InternalMcmodel.g:5003:20: otherlv_48= '&' ( ( ( (lv_damagedDefined_49_0= '!' ) ) otherlv_50= 'damaged' ) | ( ( (lv_damagedDefined_51_0= 'damaged' ) ) ( (otherlv_52= '!=' ( ( (lv_damaged_53_0= 'false' ) ) | otherlv_54= 'true' ) ) | ( (otherlv_55= '=' | otherlv_56= '==' ) ( ( (lv_damaged_57_0= 'true' ) ) | otherlv_58= 'false' ) ) ) ) )
            	    {
            	    otherlv_48=(Token)match(input,59,FOLLOW_47); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_48, grammarAccess.getOverridePredicate_3Access().getAmpersandKeyword_1_5_0());
            	      								
            	    }
            	    // InternalMcmodel.g:5007:9: ( ( ( (lv_damagedDefined_49_0= '!' ) ) otherlv_50= 'damaged' ) | ( ( (lv_damagedDefined_51_0= 'damaged' ) ) ( (otherlv_52= '!=' ( ( (lv_damaged_53_0= 'false' ) ) | otherlv_54= 'true' ) ) | ( (otherlv_55= '=' | otherlv_56= '==' ) ( ( (lv_damaged_57_0= 'true' ) ) | otherlv_58= 'false' ) ) ) ) )
            	    int alt128=2;
            	    int LA128_0 = input.LA(1);

            	    if ( (LA128_0==60) ) {
            	        alt128=1;
            	    }
            	    else if ( (LA128_0==67) ) {
            	        alt128=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 128, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt128) {
            	        case 1 :
            	            // InternalMcmodel.g:5008:10: ( ( (lv_damagedDefined_49_0= '!' ) ) otherlv_50= 'damaged' )
            	            {
            	            // InternalMcmodel.g:5008:10: ( ( (lv_damagedDefined_49_0= '!' ) ) otherlv_50= 'damaged' )
            	            // InternalMcmodel.g:5009:11: ( (lv_damagedDefined_49_0= '!' ) ) otherlv_50= 'damaged'
            	            {
            	            // InternalMcmodel.g:5009:11: ( (lv_damagedDefined_49_0= '!' ) )
            	            // InternalMcmodel.g:5010:12: (lv_damagedDefined_49_0= '!' )
            	            {
            	            // InternalMcmodel.g:5010:12: (lv_damagedDefined_49_0= '!' )
            	            // InternalMcmodel.g:5011:13: lv_damagedDefined_49_0= '!'
            	            {
            	            lv_damagedDefined_49_0=(Token)match(input,60,FOLLOW_48); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              													newLeafNode(lv_damagedDefined_49_0, grammarAccess.getOverridePredicate_3Access().getDamagedDefinedExclamationMarkKeyword_1_5_1_0_0_0());
            	              												
            	            }
            	            if ( state.backtracking==0 ) {

            	              													if (current==null) {
            	              														current = createModelElement(grammarAccess.getOverridePredicate_3Rule());
            	              													}
            	              													setWithLastConsumed(current, "damagedDefined", true, "!");
            	              												
            	            }

            	            }


            	            }

            	            otherlv_50=(Token)match(input,67,FOLLOW_37); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              											newLeafNode(otherlv_50, grammarAccess.getOverridePredicate_3Access().getDamagedKeyword_1_5_1_0_1());
            	              										
            	            }

            	            }


            	            }
            	            break;
            	        case 2 :
            	            // InternalMcmodel.g:5029:10: ( ( (lv_damagedDefined_51_0= 'damaged' ) ) ( (otherlv_52= '!=' ( ( (lv_damaged_53_0= 'false' ) ) | otherlv_54= 'true' ) ) | ( (otherlv_55= '=' | otherlv_56= '==' ) ( ( (lv_damaged_57_0= 'true' ) ) | otherlv_58= 'false' ) ) ) )
            	            {
            	            // InternalMcmodel.g:5029:10: ( ( (lv_damagedDefined_51_0= 'damaged' ) ) ( (otherlv_52= '!=' ( ( (lv_damaged_53_0= 'false' ) ) | otherlv_54= 'true' ) ) | ( (otherlv_55= '=' | otherlv_56= '==' ) ( ( (lv_damaged_57_0= 'true' ) ) | otherlv_58= 'false' ) ) ) )
            	            // InternalMcmodel.g:5030:11: ( (lv_damagedDefined_51_0= 'damaged' ) ) ( (otherlv_52= '!=' ( ( (lv_damaged_53_0= 'false' ) ) | otherlv_54= 'true' ) ) | ( (otherlv_55= '=' | otherlv_56= '==' ) ( ( (lv_damaged_57_0= 'true' ) ) | otherlv_58= 'false' ) ) )
            	            {
            	            // InternalMcmodel.g:5030:11: ( (lv_damagedDefined_51_0= 'damaged' ) )
            	            // InternalMcmodel.g:5031:12: (lv_damagedDefined_51_0= 'damaged' )
            	            {
            	            // InternalMcmodel.g:5031:12: (lv_damagedDefined_51_0= 'damaged' )
            	            // InternalMcmodel.g:5032:13: lv_damagedDefined_51_0= 'damaged'
            	            {
            	            lv_damagedDefined_51_0=(Token)match(input,67,FOLLOW_40); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              													newLeafNode(lv_damagedDefined_51_0, grammarAccess.getOverridePredicate_3Access().getDamagedDefinedDamagedKeyword_1_5_1_1_0_0());
            	              												
            	            }
            	            if ( state.backtracking==0 ) {

            	              													if (current==null) {
            	              														current = createModelElement(grammarAccess.getOverridePredicate_3Rule());
            	              													}
            	              													setWithLastConsumed(current, "damagedDefined", true, "damaged");
            	              												
            	            }

            	            }


            	            }

            	            // InternalMcmodel.g:5044:11: ( (otherlv_52= '!=' ( ( (lv_damaged_53_0= 'false' ) ) | otherlv_54= 'true' ) ) | ( (otherlv_55= '=' | otherlv_56= '==' ) ( ( (lv_damaged_57_0= 'true' ) ) | otherlv_58= 'false' ) ) )
            	            int alt127=2;
            	            int LA127_0 = input.LA(1);

            	            if ( (LA127_0==62) ) {
            	                alt127=1;
            	            }
            	            else if ( (LA127_0==18||LA127_0==58) ) {
            	                alt127=2;
            	            }
            	            else {
            	                if (state.backtracking>0) {state.failed=true; return current;}
            	                NoViableAltException nvae =
            	                    new NoViableAltException("", 127, 0, input);

            	                throw nvae;
            	            }
            	            switch (alt127) {
            	                case 1 :
            	                    // InternalMcmodel.g:5045:12: (otherlv_52= '!=' ( ( (lv_damaged_53_0= 'false' ) ) | otherlv_54= 'true' ) )
            	                    {
            	                    // InternalMcmodel.g:5045:12: (otherlv_52= '!=' ( ( (lv_damaged_53_0= 'false' ) ) | otherlv_54= 'true' ) )
            	                    // InternalMcmodel.g:5046:13: otherlv_52= '!=' ( ( (lv_damaged_53_0= 'false' ) ) | otherlv_54= 'true' )
            	                    {
            	                    otherlv_52=(Token)match(input,62,FOLLOW_7); if (state.failed) return current;
            	                    if ( state.backtracking==0 ) {

            	                      													newLeafNode(otherlv_52, grammarAccess.getOverridePredicate_3Access().getExclamationMarkEqualsSignKeyword_1_5_1_1_1_0_0());
            	                      												
            	                    }
            	                    // InternalMcmodel.g:5050:13: ( ( (lv_damaged_53_0= 'false' ) ) | otherlv_54= 'true' )
            	                    int alt124=2;
            	                    int LA124_0 = input.LA(1);

            	                    if ( (LA124_0==21) ) {
            	                        alt124=1;
            	                    }
            	                    else if ( (LA124_0==20) ) {
            	                        alt124=2;
            	                    }
            	                    else {
            	                        if (state.backtracking>0) {state.failed=true; return current;}
            	                        NoViableAltException nvae =
            	                            new NoViableAltException("", 124, 0, input);

            	                        throw nvae;
            	                    }
            	                    switch (alt124) {
            	                        case 1 :
            	                            // InternalMcmodel.g:5051:14: ( (lv_damaged_53_0= 'false' ) )
            	                            {
            	                            // InternalMcmodel.g:5051:14: ( (lv_damaged_53_0= 'false' ) )
            	                            // InternalMcmodel.g:5052:15: (lv_damaged_53_0= 'false' )
            	                            {
            	                            // InternalMcmodel.g:5052:15: (lv_damaged_53_0= 'false' )
            	                            // InternalMcmodel.g:5053:16: lv_damaged_53_0= 'false'
            	                            {
            	                            lv_damaged_53_0=(Token)match(input,21,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              																newLeafNode(lv_damaged_53_0, grammarAccess.getOverridePredicate_3Access().getDamagedFalseKeyword_1_5_1_1_1_0_1_0_0());
            	                              															
            	                            }
            	                            if ( state.backtracking==0 ) {

            	                              																if (current==null) {
            	                              																	current = createModelElement(grammarAccess.getOverridePredicate_3Rule());
            	                              																}
            	                              																setWithLastConsumed(current, "damaged", true, "false");
            	                              															
            	                            }

            	                            }


            	                            }


            	                            }
            	                            break;
            	                        case 2 :
            	                            // InternalMcmodel.g:5066:14: otherlv_54= 'true'
            	                            {
            	                            otherlv_54=(Token)match(input,20,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_54, grammarAccess.getOverridePredicate_3Access().getTrueKeyword_1_5_1_1_1_0_1_1());
            	                              													
            	                            }

            	                            }
            	                            break;

            	                    }


            	                    }


            	                    }
            	                    break;
            	                case 2 :
            	                    // InternalMcmodel.g:5073:12: ( (otherlv_55= '=' | otherlv_56= '==' ) ( ( (lv_damaged_57_0= 'true' ) ) | otherlv_58= 'false' ) )
            	                    {
            	                    // InternalMcmodel.g:5073:12: ( (otherlv_55= '=' | otherlv_56= '==' ) ( ( (lv_damaged_57_0= 'true' ) ) | otherlv_58= 'false' ) )
            	                    // InternalMcmodel.g:5074:13: (otherlv_55= '=' | otherlv_56= '==' ) ( ( (lv_damaged_57_0= 'true' ) ) | otherlv_58= 'false' )
            	                    {
            	                    // InternalMcmodel.g:5074:13: (otherlv_55= '=' | otherlv_56= '==' )
            	                    int alt125=2;
            	                    int LA125_0 = input.LA(1);

            	                    if ( (LA125_0==18) ) {
            	                        alt125=1;
            	                    }
            	                    else if ( (LA125_0==58) ) {
            	                        alt125=2;
            	                    }
            	                    else {
            	                        if (state.backtracking>0) {state.failed=true; return current;}
            	                        NoViableAltException nvae =
            	                            new NoViableAltException("", 125, 0, input);

            	                        throw nvae;
            	                    }
            	                    switch (alt125) {
            	                        case 1 :
            	                            // InternalMcmodel.g:5075:14: otherlv_55= '='
            	                            {
            	                            otherlv_55=(Token)match(input,18,FOLLOW_7); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_55, grammarAccess.getOverridePredicate_3Access().getEqualsSignKeyword_1_5_1_1_1_1_0_0());
            	                              													
            	                            }

            	                            }
            	                            break;
            	                        case 2 :
            	                            // InternalMcmodel.g:5080:14: otherlv_56= '=='
            	                            {
            	                            otherlv_56=(Token)match(input,58,FOLLOW_7); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_56, grammarAccess.getOverridePredicate_3Access().getEqualsSignEqualsSignKeyword_1_5_1_1_1_1_0_1());
            	                              													
            	                            }

            	                            }
            	                            break;

            	                    }

            	                    // InternalMcmodel.g:5085:13: ( ( (lv_damaged_57_0= 'true' ) ) | otherlv_58= 'false' )
            	                    int alt126=2;
            	                    int LA126_0 = input.LA(1);

            	                    if ( (LA126_0==20) ) {
            	                        alt126=1;
            	                    }
            	                    else if ( (LA126_0==21) ) {
            	                        alt126=2;
            	                    }
            	                    else {
            	                        if (state.backtracking>0) {state.failed=true; return current;}
            	                        NoViableAltException nvae =
            	                            new NoViableAltException("", 126, 0, input);

            	                        throw nvae;
            	                    }
            	                    switch (alt126) {
            	                        case 1 :
            	                            // InternalMcmodel.g:5086:14: ( (lv_damaged_57_0= 'true' ) )
            	                            {
            	                            // InternalMcmodel.g:5086:14: ( (lv_damaged_57_0= 'true' ) )
            	                            // InternalMcmodel.g:5087:15: (lv_damaged_57_0= 'true' )
            	                            {
            	                            // InternalMcmodel.g:5087:15: (lv_damaged_57_0= 'true' )
            	                            // InternalMcmodel.g:5088:16: lv_damaged_57_0= 'true'
            	                            {
            	                            lv_damaged_57_0=(Token)match(input,20,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              																newLeafNode(lv_damaged_57_0, grammarAccess.getOverridePredicate_3Access().getDamagedTrueKeyword_1_5_1_1_1_1_1_0_0());
            	                              															
            	                            }
            	                            if ( state.backtracking==0 ) {

            	                              																if (current==null) {
            	                              																	current = createModelElement(grammarAccess.getOverridePredicate_3Rule());
            	                              																}
            	                              																setWithLastConsumed(current, "damaged", true, "true");
            	                              															
            	                            }

            	                            }


            	                            }


            	                            }
            	                            break;
            	                        case 2 :
            	                            // InternalMcmodel.g:5101:14: otherlv_58= 'false'
            	                            {
            	                            otherlv_58=(Token)match(input,21,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_58, grammarAccess.getOverridePredicate_3Access().getFalseKeyword_1_5_1_1_1_1_1_1());
            	                              													
            	                            }

            	                            }
            	                            break;

            	                    }


            	                    }


            	                    }
            	                    break;

            	            }


            	            }


            	            }
            	            break;

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getOverridePredicate_3Access().getUnorderedGroup_1());

            	    }


            	    }


            	    }
            	    break;
            	case 7 :
            	    // InternalMcmodel.g:5116:4: ({...}? => ( ({...}? => (otherlv_59= '&' ( ( ( (lv_lefthandedDefined_60_0= '!' ) ) otherlv_61= 'lefthanded' ) | ( ( (lv_lefthandedDefined_62_0= 'lefthanded' ) ) ( (otherlv_63= '!=' ( ( (lv_lefthanded_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_lefthanded_68_0= 'true' ) ) | otherlv_69= 'false' ) ) ) ) ) ) ) ) )
            	    {
            	    // InternalMcmodel.g:5116:4: ({...}? => ( ({...}? => (otherlv_59= '&' ( ( ( (lv_lefthandedDefined_60_0= '!' ) ) otherlv_61= 'lefthanded' ) | ( ( (lv_lefthandedDefined_62_0= 'lefthanded' ) ) ( (otherlv_63= '!=' ( ( (lv_lefthanded_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_lefthanded_68_0= 'true' ) ) | otherlv_69= 'false' ) ) ) ) ) ) ) ) )
            	    // InternalMcmodel.g:5117:5: {...}? => ( ({...}? => (otherlv_59= '&' ( ( ( (lv_lefthandedDefined_60_0= '!' ) ) otherlv_61= 'lefthanded' ) | ( ( (lv_lefthandedDefined_62_0= 'lefthanded' ) ) ( (otherlv_63= '!=' ( ( (lv_lefthanded_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_lefthanded_68_0= 'true' ) ) | otherlv_69= 'false' ) ) ) ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_3Access().getUnorderedGroup_1(), 6) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_3", "getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_3Access().getUnorderedGroup_1(), 6)");
            	    }
            	    // InternalMcmodel.g:5117:116: ( ({...}? => (otherlv_59= '&' ( ( ( (lv_lefthandedDefined_60_0= '!' ) ) otherlv_61= 'lefthanded' ) | ( ( (lv_lefthandedDefined_62_0= 'lefthanded' ) ) ( (otherlv_63= '!=' ( ( (lv_lefthanded_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_lefthanded_68_0= 'true' ) ) | otherlv_69= 'false' ) ) ) ) ) ) ) )
            	    // InternalMcmodel.g:5118:6: ({...}? => (otherlv_59= '&' ( ( ( (lv_lefthandedDefined_60_0= '!' ) ) otherlv_61= 'lefthanded' ) | ( ( (lv_lefthandedDefined_62_0= 'lefthanded' ) ) ( (otherlv_63= '!=' ( ( (lv_lefthanded_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_lefthanded_68_0= 'true' ) ) | otherlv_69= 'false' ) ) ) ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getOverridePredicate_3Access().getUnorderedGroup_1(), 6);
            	    // InternalMcmodel.g:5121:9: ({...}? => (otherlv_59= '&' ( ( ( (lv_lefthandedDefined_60_0= '!' ) ) otherlv_61= 'lefthanded' ) | ( ( (lv_lefthandedDefined_62_0= 'lefthanded' ) ) ( (otherlv_63= '!=' ( ( (lv_lefthanded_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_lefthanded_68_0= 'true' ) ) | otherlv_69= 'false' ) ) ) ) ) ) )
            	    // InternalMcmodel.g:5121:10: {...}? => (otherlv_59= '&' ( ( ( (lv_lefthandedDefined_60_0= '!' ) ) otherlv_61= 'lefthanded' ) | ( ( (lv_lefthandedDefined_62_0= 'lefthanded' ) ) ( (otherlv_63= '!=' ( ( (lv_lefthanded_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_lefthanded_68_0= 'true' ) ) | otherlv_69= 'false' ) ) ) ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_3", "true");
            	    }
            	    // InternalMcmodel.g:5121:19: (otherlv_59= '&' ( ( ( (lv_lefthandedDefined_60_0= '!' ) ) otherlv_61= 'lefthanded' ) | ( ( (lv_lefthandedDefined_62_0= 'lefthanded' ) ) ( (otherlv_63= '!=' ( ( (lv_lefthanded_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_lefthanded_68_0= 'true' ) ) | otherlv_69= 'false' ) ) ) ) ) )
            	    // InternalMcmodel.g:5121:20: otherlv_59= '&' ( ( ( (lv_lefthandedDefined_60_0= '!' ) ) otherlv_61= 'lefthanded' ) | ( ( (lv_lefthandedDefined_62_0= 'lefthanded' ) ) ( (otherlv_63= '!=' ( ( (lv_lefthanded_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_lefthanded_68_0= 'true' ) ) | otherlv_69= 'false' ) ) ) ) )
            	    {
            	    otherlv_59=(Token)match(input,59,FOLLOW_49); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_59, grammarAccess.getOverridePredicate_3Access().getAmpersandKeyword_1_6_0());
            	      								
            	    }
            	    // InternalMcmodel.g:5125:9: ( ( ( (lv_lefthandedDefined_60_0= '!' ) ) otherlv_61= 'lefthanded' ) | ( ( (lv_lefthandedDefined_62_0= 'lefthanded' ) ) ( (otherlv_63= '!=' ( ( (lv_lefthanded_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_lefthanded_68_0= 'true' ) ) | otherlv_69= 'false' ) ) ) ) )
            	    int alt133=2;
            	    int LA133_0 = input.LA(1);

            	    if ( (LA133_0==60) ) {
            	        alt133=1;
            	    }
            	    else if ( (LA133_0==68) ) {
            	        alt133=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 133, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt133) {
            	        case 1 :
            	            // InternalMcmodel.g:5126:10: ( ( (lv_lefthandedDefined_60_0= '!' ) ) otherlv_61= 'lefthanded' )
            	            {
            	            // InternalMcmodel.g:5126:10: ( ( (lv_lefthandedDefined_60_0= '!' ) ) otherlv_61= 'lefthanded' )
            	            // InternalMcmodel.g:5127:11: ( (lv_lefthandedDefined_60_0= '!' ) ) otherlv_61= 'lefthanded'
            	            {
            	            // InternalMcmodel.g:5127:11: ( (lv_lefthandedDefined_60_0= '!' ) )
            	            // InternalMcmodel.g:5128:12: (lv_lefthandedDefined_60_0= '!' )
            	            {
            	            // InternalMcmodel.g:5128:12: (lv_lefthandedDefined_60_0= '!' )
            	            // InternalMcmodel.g:5129:13: lv_lefthandedDefined_60_0= '!'
            	            {
            	            lv_lefthandedDefined_60_0=(Token)match(input,60,FOLLOW_50); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              													newLeafNode(lv_lefthandedDefined_60_0, grammarAccess.getOverridePredicate_3Access().getLefthandedDefinedExclamationMarkKeyword_1_6_1_0_0_0());
            	              												
            	            }
            	            if ( state.backtracking==0 ) {

            	              													if (current==null) {
            	              														current = createModelElement(grammarAccess.getOverridePredicate_3Rule());
            	              													}
            	              													setWithLastConsumed(current, "lefthandedDefined", true, "!");
            	              												
            	            }

            	            }


            	            }

            	            otherlv_61=(Token)match(input,68,FOLLOW_37); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              											newLeafNode(otherlv_61, grammarAccess.getOverridePredicate_3Access().getLefthandedKeyword_1_6_1_0_1());
            	              										
            	            }

            	            }


            	            }
            	            break;
            	        case 2 :
            	            // InternalMcmodel.g:5147:10: ( ( (lv_lefthandedDefined_62_0= 'lefthanded' ) ) ( (otherlv_63= '!=' ( ( (lv_lefthanded_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_lefthanded_68_0= 'true' ) ) | otherlv_69= 'false' ) ) ) )
            	            {
            	            // InternalMcmodel.g:5147:10: ( ( (lv_lefthandedDefined_62_0= 'lefthanded' ) ) ( (otherlv_63= '!=' ( ( (lv_lefthanded_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_lefthanded_68_0= 'true' ) ) | otherlv_69= 'false' ) ) ) )
            	            // InternalMcmodel.g:5148:11: ( (lv_lefthandedDefined_62_0= 'lefthanded' ) ) ( (otherlv_63= '!=' ( ( (lv_lefthanded_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_lefthanded_68_0= 'true' ) ) | otherlv_69= 'false' ) ) )
            	            {
            	            // InternalMcmodel.g:5148:11: ( (lv_lefthandedDefined_62_0= 'lefthanded' ) )
            	            // InternalMcmodel.g:5149:12: (lv_lefthandedDefined_62_0= 'lefthanded' )
            	            {
            	            // InternalMcmodel.g:5149:12: (lv_lefthandedDefined_62_0= 'lefthanded' )
            	            // InternalMcmodel.g:5150:13: lv_lefthandedDefined_62_0= 'lefthanded'
            	            {
            	            lv_lefthandedDefined_62_0=(Token)match(input,68,FOLLOW_40); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              													newLeafNode(lv_lefthandedDefined_62_0, grammarAccess.getOverridePredicate_3Access().getLefthandedDefinedLefthandedKeyword_1_6_1_1_0_0());
            	              												
            	            }
            	            if ( state.backtracking==0 ) {

            	              													if (current==null) {
            	              														current = createModelElement(grammarAccess.getOverridePredicate_3Rule());
            	              													}
            	              													setWithLastConsumed(current, "lefthandedDefined", true, "lefthanded");
            	              												
            	            }

            	            }


            	            }

            	            // InternalMcmodel.g:5162:11: ( (otherlv_63= '!=' ( ( (lv_lefthanded_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_lefthanded_68_0= 'true' ) ) | otherlv_69= 'false' ) ) )
            	            int alt132=2;
            	            int LA132_0 = input.LA(1);

            	            if ( (LA132_0==62) ) {
            	                alt132=1;
            	            }
            	            else if ( (LA132_0==18||LA132_0==58) ) {
            	                alt132=2;
            	            }
            	            else {
            	                if (state.backtracking>0) {state.failed=true; return current;}
            	                NoViableAltException nvae =
            	                    new NoViableAltException("", 132, 0, input);

            	                throw nvae;
            	            }
            	            switch (alt132) {
            	                case 1 :
            	                    // InternalMcmodel.g:5163:12: (otherlv_63= '!=' ( ( (lv_lefthanded_64_0= 'false' ) ) | otherlv_65= 'true' ) )
            	                    {
            	                    // InternalMcmodel.g:5163:12: (otherlv_63= '!=' ( ( (lv_lefthanded_64_0= 'false' ) ) | otherlv_65= 'true' ) )
            	                    // InternalMcmodel.g:5164:13: otherlv_63= '!=' ( ( (lv_lefthanded_64_0= 'false' ) ) | otherlv_65= 'true' )
            	                    {
            	                    otherlv_63=(Token)match(input,62,FOLLOW_7); if (state.failed) return current;
            	                    if ( state.backtracking==0 ) {

            	                      													newLeafNode(otherlv_63, grammarAccess.getOverridePredicate_3Access().getExclamationMarkEqualsSignKeyword_1_6_1_1_1_0_0());
            	                      												
            	                    }
            	                    // InternalMcmodel.g:5168:13: ( ( (lv_lefthanded_64_0= 'false' ) ) | otherlv_65= 'true' )
            	                    int alt129=2;
            	                    int LA129_0 = input.LA(1);

            	                    if ( (LA129_0==21) ) {
            	                        alt129=1;
            	                    }
            	                    else if ( (LA129_0==20) ) {
            	                        alt129=2;
            	                    }
            	                    else {
            	                        if (state.backtracking>0) {state.failed=true; return current;}
            	                        NoViableAltException nvae =
            	                            new NoViableAltException("", 129, 0, input);

            	                        throw nvae;
            	                    }
            	                    switch (alt129) {
            	                        case 1 :
            	                            // InternalMcmodel.g:5169:14: ( (lv_lefthanded_64_0= 'false' ) )
            	                            {
            	                            // InternalMcmodel.g:5169:14: ( (lv_lefthanded_64_0= 'false' ) )
            	                            // InternalMcmodel.g:5170:15: (lv_lefthanded_64_0= 'false' )
            	                            {
            	                            // InternalMcmodel.g:5170:15: (lv_lefthanded_64_0= 'false' )
            	                            // InternalMcmodel.g:5171:16: lv_lefthanded_64_0= 'false'
            	                            {
            	                            lv_lefthanded_64_0=(Token)match(input,21,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              																newLeafNode(lv_lefthanded_64_0, grammarAccess.getOverridePredicate_3Access().getLefthandedFalseKeyword_1_6_1_1_1_0_1_0_0());
            	                              															
            	                            }
            	                            if ( state.backtracking==0 ) {

            	                              																if (current==null) {
            	                              																	current = createModelElement(grammarAccess.getOverridePredicate_3Rule());
            	                              																}
            	                              																setWithLastConsumed(current, "lefthanded", true, "false");
            	                              															
            	                            }

            	                            }


            	                            }


            	                            }
            	                            break;
            	                        case 2 :
            	                            // InternalMcmodel.g:5184:14: otherlv_65= 'true'
            	                            {
            	                            otherlv_65=(Token)match(input,20,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_65, grammarAccess.getOverridePredicate_3Access().getTrueKeyword_1_6_1_1_1_0_1_1());
            	                              													
            	                            }

            	                            }
            	                            break;

            	                    }


            	                    }


            	                    }
            	                    break;
            	                case 2 :
            	                    // InternalMcmodel.g:5191:12: ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_lefthanded_68_0= 'true' ) ) | otherlv_69= 'false' ) )
            	                    {
            	                    // InternalMcmodel.g:5191:12: ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_lefthanded_68_0= 'true' ) ) | otherlv_69= 'false' ) )
            	                    // InternalMcmodel.g:5192:13: (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_lefthanded_68_0= 'true' ) ) | otherlv_69= 'false' )
            	                    {
            	                    // InternalMcmodel.g:5192:13: (otherlv_66= '=' | otherlv_67= '==' )
            	                    int alt130=2;
            	                    int LA130_0 = input.LA(1);

            	                    if ( (LA130_0==18) ) {
            	                        alt130=1;
            	                    }
            	                    else if ( (LA130_0==58) ) {
            	                        alt130=2;
            	                    }
            	                    else {
            	                        if (state.backtracking>0) {state.failed=true; return current;}
            	                        NoViableAltException nvae =
            	                            new NoViableAltException("", 130, 0, input);

            	                        throw nvae;
            	                    }
            	                    switch (alt130) {
            	                        case 1 :
            	                            // InternalMcmodel.g:5193:14: otherlv_66= '='
            	                            {
            	                            otherlv_66=(Token)match(input,18,FOLLOW_7); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_66, grammarAccess.getOverridePredicate_3Access().getEqualsSignKeyword_1_6_1_1_1_1_0_0());
            	                              													
            	                            }

            	                            }
            	                            break;
            	                        case 2 :
            	                            // InternalMcmodel.g:5198:14: otherlv_67= '=='
            	                            {
            	                            otherlv_67=(Token)match(input,58,FOLLOW_7); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_67, grammarAccess.getOverridePredicate_3Access().getEqualsSignEqualsSignKeyword_1_6_1_1_1_1_0_1());
            	                              													
            	                            }

            	                            }
            	                            break;

            	                    }

            	                    // InternalMcmodel.g:5203:13: ( ( (lv_lefthanded_68_0= 'true' ) ) | otherlv_69= 'false' )
            	                    int alt131=2;
            	                    int LA131_0 = input.LA(1);

            	                    if ( (LA131_0==20) ) {
            	                        alt131=1;
            	                    }
            	                    else if ( (LA131_0==21) ) {
            	                        alt131=2;
            	                    }
            	                    else {
            	                        if (state.backtracking>0) {state.failed=true; return current;}
            	                        NoViableAltException nvae =
            	                            new NoViableAltException("", 131, 0, input);

            	                        throw nvae;
            	                    }
            	                    switch (alt131) {
            	                        case 1 :
            	                            // InternalMcmodel.g:5204:14: ( (lv_lefthanded_68_0= 'true' ) )
            	                            {
            	                            // InternalMcmodel.g:5204:14: ( (lv_lefthanded_68_0= 'true' ) )
            	                            // InternalMcmodel.g:5205:15: (lv_lefthanded_68_0= 'true' )
            	                            {
            	                            // InternalMcmodel.g:5205:15: (lv_lefthanded_68_0= 'true' )
            	                            // InternalMcmodel.g:5206:16: lv_lefthanded_68_0= 'true'
            	                            {
            	                            lv_lefthanded_68_0=(Token)match(input,20,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              																newLeafNode(lv_lefthanded_68_0, grammarAccess.getOverridePredicate_3Access().getLefthandedTrueKeyword_1_6_1_1_1_1_1_0_0());
            	                              															
            	                            }
            	                            if ( state.backtracking==0 ) {

            	                              																if (current==null) {
            	                              																	current = createModelElement(grammarAccess.getOverridePredicate_3Rule());
            	                              																}
            	                              																setWithLastConsumed(current, "lefthanded", true, "true");
            	                              															
            	                            }

            	                            }


            	                            }


            	                            }
            	                            break;
            	                        case 2 :
            	                            // InternalMcmodel.g:5219:14: otherlv_69= 'false'
            	                            {
            	                            otherlv_69=(Token)match(input,21,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_69, grammarAccess.getOverridePredicate_3Access().getFalseKeyword_1_6_1_1_1_1_1_1());
            	                              													
            	                            }

            	                            }
            	                            break;

            	                    }


            	                    }


            	                    }
            	                    break;

            	            }


            	            }


            	            }
            	            break;

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getOverridePredicate_3Access().getUnorderedGroup_1());

            	    }


            	    }


            	    }
            	    break;
            	case 8 :
            	    // InternalMcmodel.g:5234:4: ({...}? => ( ({...}? => (otherlv_70= '&' ( (lv_pullDefined_71_0= 'pull' ) ) (otherlv_72= '=' | otherlv_73= '==' ) ( (lv_pull_74_0= RULE_PERCENTAGE ) ) ) ) ) )
            	    {
            	    // InternalMcmodel.g:5234:4: ({...}? => ( ({...}? => (otherlv_70= '&' ( (lv_pullDefined_71_0= 'pull' ) ) (otherlv_72= '=' | otherlv_73= '==' ) ( (lv_pull_74_0= RULE_PERCENTAGE ) ) ) ) ) )
            	    // InternalMcmodel.g:5235:5: {...}? => ( ({...}? => (otherlv_70= '&' ( (lv_pullDefined_71_0= 'pull' ) ) (otherlv_72= '=' | otherlv_73= '==' ) ( (lv_pull_74_0= RULE_PERCENTAGE ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_3Access().getUnorderedGroup_1(), 7) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_3", "getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_3Access().getUnorderedGroup_1(), 7)");
            	    }
            	    // InternalMcmodel.g:5235:116: ( ({...}? => (otherlv_70= '&' ( (lv_pullDefined_71_0= 'pull' ) ) (otherlv_72= '=' | otherlv_73= '==' ) ( (lv_pull_74_0= RULE_PERCENTAGE ) ) ) ) )
            	    // InternalMcmodel.g:5236:6: ({...}? => (otherlv_70= '&' ( (lv_pullDefined_71_0= 'pull' ) ) (otherlv_72= '=' | otherlv_73= '==' ) ( (lv_pull_74_0= RULE_PERCENTAGE ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getOverridePredicate_3Access().getUnorderedGroup_1(), 7);
            	    // InternalMcmodel.g:5239:9: ({...}? => (otherlv_70= '&' ( (lv_pullDefined_71_0= 'pull' ) ) (otherlv_72= '=' | otherlv_73= '==' ) ( (lv_pull_74_0= RULE_PERCENTAGE ) ) ) )
            	    // InternalMcmodel.g:5239:10: {...}? => (otherlv_70= '&' ( (lv_pullDefined_71_0= 'pull' ) ) (otherlv_72= '=' | otherlv_73= '==' ) ( (lv_pull_74_0= RULE_PERCENTAGE ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_3", "true");
            	    }
            	    // InternalMcmodel.g:5239:19: (otherlv_70= '&' ( (lv_pullDefined_71_0= 'pull' ) ) (otherlv_72= '=' | otherlv_73= '==' ) ( (lv_pull_74_0= RULE_PERCENTAGE ) ) )
            	    // InternalMcmodel.g:5239:20: otherlv_70= '&' ( (lv_pullDefined_71_0= 'pull' ) ) (otherlv_72= '=' | otherlv_73= '==' ) ( (lv_pull_74_0= RULE_PERCENTAGE ) )
            	    {
            	    otherlv_70=(Token)match(input,59,FOLLOW_51); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_70, grammarAccess.getOverridePredicate_3Access().getAmpersandKeyword_1_7_0());
            	      								
            	    }
            	    // InternalMcmodel.g:5243:9: ( (lv_pullDefined_71_0= 'pull' ) )
            	    // InternalMcmodel.g:5244:10: (lv_pullDefined_71_0= 'pull' )
            	    {
            	    // InternalMcmodel.g:5244:10: (lv_pullDefined_71_0= 'pull' )
            	    // InternalMcmodel.g:5245:11: lv_pullDefined_71_0= 'pull'
            	    {
            	    lv_pullDefined_71_0=(Token)match(input,69,FOLLOW_35); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											newLeafNode(lv_pullDefined_71_0, grammarAccess.getOverridePredicate_3Access().getPullDefinedPullKeyword_1_7_1_0());
            	      										
            	    }
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElement(grammarAccess.getOverridePredicate_3Rule());
            	      											}
            	      											setWithLastConsumed(current, "pullDefined", true, "pull");
            	      										
            	    }

            	    }


            	    }

            	    // InternalMcmodel.g:5257:9: (otherlv_72= '=' | otherlv_73= '==' )
            	    int alt134=2;
            	    int LA134_0 = input.LA(1);

            	    if ( (LA134_0==18) ) {
            	        alt134=1;
            	    }
            	    else if ( (LA134_0==58) ) {
            	        alt134=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 134, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt134) {
            	        case 1 :
            	            // InternalMcmodel.g:5258:10: otherlv_72= '='
            	            {
            	            otherlv_72=(Token)match(input,18,FOLLOW_36); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(otherlv_72, grammarAccess.getOverridePredicate_3Access().getEqualsSignKeyword_1_7_2_0());
            	              									
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalMcmodel.g:5263:10: otherlv_73= '=='
            	            {
            	            otherlv_73=(Token)match(input,58,FOLLOW_36); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(otherlv_73, grammarAccess.getOverridePredicate_3Access().getEqualsSignEqualsSignKeyword_1_7_2_1());
            	              									
            	            }

            	            }
            	            break;

            	    }

            	    // InternalMcmodel.g:5268:9: ( (lv_pull_74_0= RULE_PERCENTAGE ) )
            	    // InternalMcmodel.g:5269:10: (lv_pull_74_0= RULE_PERCENTAGE )
            	    {
            	    // InternalMcmodel.g:5269:10: (lv_pull_74_0= RULE_PERCENTAGE )
            	    // InternalMcmodel.g:5270:11: lv_pull_74_0= RULE_PERCENTAGE
            	    {
            	    lv_pull_74_0=(Token)match(input,RULE_PERCENTAGE,FOLLOW_37); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											newLeafNode(lv_pull_74_0, grammarAccess.getOverridePredicate_3Access().getPullPERCENTAGETerminalRuleCall_1_7_3_0());
            	      										
            	    }
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElement(grammarAccess.getOverridePredicate_3Rule());
            	      											}
            	      											setWithLastConsumed(
            	      												current,
            	      												"pull",
            	      												lv_pull_74_0,
            	      												"com.raptor.mcmodel.Mcmodel.PERCENTAGE");
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getOverridePredicate_3Access().getUnorderedGroup_1());

            	    }


            	    }


            	    }
            	    break;
            	case 9 :
            	    // InternalMcmodel.g:5292:4: ({...}? => ( ({...}? => (otherlv_75= '&' ( ( ( (lv_pullingDefined_76_0= '!' ) ) otherlv_77= 'pulling' ) | ( ( (lv_pullingDefined_78_0= 'pulling' ) ) ( (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) ) | ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) ) ) ) ) ) ) ) )
            	    {
            	    // InternalMcmodel.g:5292:4: ({...}? => ( ({...}? => (otherlv_75= '&' ( ( ( (lv_pullingDefined_76_0= '!' ) ) otherlv_77= 'pulling' ) | ( ( (lv_pullingDefined_78_0= 'pulling' ) ) ( (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) ) | ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) ) ) ) ) ) ) ) )
            	    // InternalMcmodel.g:5293:5: {...}? => ( ({...}? => (otherlv_75= '&' ( ( ( (lv_pullingDefined_76_0= '!' ) ) otherlv_77= 'pulling' ) | ( ( (lv_pullingDefined_78_0= 'pulling' ) ) ( (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) ) | ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) ) ) ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_3Access().getUnorderedGroup_1(), 8) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_3", "getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_3Access().getUnorderedGroup_1(), 8)");
            	    }
            	    // InternalMcmodel.g:5293:116: ( ({...}? => (otherlv_75= '&' ( ( ( (lv_pullingDefined_76_0= '!' ) ) otherlv_77= 'pulling' ) | ( ( (lv_pullingDefined_78_0= 'pulling' ) ) ( (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) ) | ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) ) ) ) ) ) ) )
            	    // InternalMcmodel.g:5294:6: ({...}? => (otherlv_75= '&' ( ( ( (lv_pullingDefined_76_0= '!' ) ) otherlv_77= 'pulling' ) | ( ( (lv_pullingDefined_78_0= 'pulling' ) ) ( (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) ) | ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) ) ) ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getOverridePredicate_3Access().getUnorderedGroup_1(), 8);
            	    // InternalMcmodel.g:5297:9: ({...}? => (otherlv_75= '&' ( ( ( (lv_pullingDefined_76_0= '!' ) ) otherlv_77= 'pulling' ) | ( ( (lv_pullingDefined_78_0= 'pulling' ) ) ( (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) ) | ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) ) ) ) ) ) )
            	    // InternalMcmodel.g:5297:10: {...}? => (otherlv_75= '&' ( ( ( (lv_pullingDefined_76_0= '!' ) ) otherlv_77= 'pulling' ) | ( ( (lv_pullingDefined_78_0= 'pulling' ) ) ( (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) ) | ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) ) ) ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_3", "true");
            	    }
            	    // InternalMcmodel.g:5297:19: (otherlv_75= '&' ( ( ( (lv_pullingDefined_76_0= '!' ) ) otherlv_77= 'pulling' ) | ( ( (lv_pullingDefined_78_0= 'pulling' ) ) ( (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) ) | ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) ) ) ) ) )
            	    // InternalMcmodel.g:5297:20: otherlv_75= '&' ( ( ( (lv_pullingDefined_76_0= '!' ) ) otherlv_77= 'pulling' ) | ( ( (lv_pullingDefined_78_0= 'pulling' ) ) ( (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) ) | ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) ) ) ) )
            	    {
            	    otherlv_75=(Token)match(input,59,FOLLOW_52); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_75, grammarAccess.getOverridePredicate_3Access().getAmpersandKeyword_1_8_0());
            	      								
            	    }
            	    // InternalMcmodel.g:5301:9: ( ( ( (lv_pullingDefined_76_0= '!' ) ) otherlv_77= 'pulling' ) | ( ( (lv_pullingDefined_78_0= 'pulling' ) ) ( (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) ) | ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) ) ) ) )
            	    int alt139=2;
            	    int LA139_0 = input.LA(1);

            	    if ( (LA139_0==60) ) {
            	        alt139=1;
            	    }
            	    else if ( (LA139_0==70) ) {
            	        alt139=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 139, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt139) {
            	        case 1 :
            	            // InternalMcmodel.g:5302:10: ( ( (lv_pullingDefined_76_0= '!' ) ) otherlv_77= 'pulling' )
            	            {
            	            // InternalMcmodel.g:5302:10: ( ( (lv_pullingDefined_76_0= '!' ) ) otherlv_77= 'pulling' )
            	            // InternalMcmodel.g:5303:11: ( (lv_pullingDefined_76_0= '!' ) ) otherlv_77= 'pulling'
            	            {
            	            // InternalMcmodel.g:5303:11: ( (lv_pullingDefined_76_0= '!' ) )
            	            // InternalMcmodel.g:5304:12: (lv_pullingDefined_76_0= '!' )
            	            {
            	            // InternalMcmodel.g:5304:12: (lv_pullingDefined_76_0= '!' )
            	            // InternalMcmodel.g:5305:13: lv_pullingDefined_76_0= '!'
            	            {
            	            lv_pullingDefined_76_0=(Token)match(input,60,FOLLOW_53); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              													newLeafNode(lv_pullingDefined_76_0, grammarAccess.getOverridePredicate_3Access().getPullingDefinedExclamationMarkKeyword_1_8_1_0_0_0());
            	              												
            	            }
            	            if ( state.backtracking==0 ) {

            	              													if (current==null) {
            	              														current = createModelElement(grammarAccess.getOverridePredicate_3Rule());
            	              													}
            	              													setWithLastConsumed(current, "pullingDefined", true, "!");
            	              												
            	            }

            	            }


            	            }

            	            otherlv_77=(Token)match(input,70,FOLLOW_37); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              											newLeafNode(otherlv_77, grammarAccess.getOverridePredicate_3Access().getPullingKeyword_1_8_1_0_1());
            	              										
            	            }

            	            }


            	            }
            	            break;
            	        case 2 :
            	            // InternalMcmodel.g:5323:10: ( ( (lv_pullingDefined_78_0= 'pulling' ) ) ( (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) ) | ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) ) ) )
            	            {
            	            // InternalMcmodel.g:5323:10: ( ( (lv_pullingDefined_78_0= 'pulling' ) ) ( (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) ) | ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) ) ) )
            	            // InternalMcmodel.g:5324:11: ( (lv_pullingDefined_78_0= 'pulling' ) ) ( (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) ) | ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) ) )
            	            {
            	            // InternalMcmodel.g:5324:11: ( (lv_pullingDefined_78_0= 'pulling' ) )
            	            // InternalMcmodel.g:5325:12: (lv_pullingDefined_78_0= 'pulling' )
            	            {
            	            // InternalMcmodel.g:5325:12: (lv_pullingDefined_78_0= 'pulling' )
            	            // InternalMcmodel.g:5326:13: lv_pullingDefined_78_0= 'pulling'
            	            {
            	            lv_pullingDefined_78_0=(Token)match(input,70,FOLLOW_40); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              													newLeafNode(lv_pullingDefined_78_0, grammarAccess.getOverridePredicate_3Access().getPullingDefinedPullingKeyword_1_8_1_1_0_0());
            	              												
            	            }
            	            if ( state.backtracking==0 ) {

            	              													if (current==null) {
            	              														current = createModelElement(grammarAccess.getOverridePredicate_3Rule());
            	              													}
            	              													setWithLastConsumed(current, "pullingDefined", true, "pulling");
            	              												
            	            }

            	            }


            	            }

            	            // InternalMcmodel.g:5338:11: ( (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) ) | ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) ) )
            	            int alt138=2;
            	            int LA138_0 = input.LA(1);

            	            if ( (LA138_0==62) ) {
            	                alt138=1;
            	            }
            	            else if ( (LA138_0==18||LA138_0==58) ) {
            	                alt138=2;
            	            }
            	            else {
            	                if (state.backtracking>0) {state.failed=true; return current;}
            	                NoViableAltException nvae =
            	                    new NoViableAltException("", 138, 0, input);

            	                throw nvae;
            	            }
            	            switch (alt138) {
            	                case 1 :
            	                    // InternalMcmodel.g:5339:12: (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) )
            	                    {
            	                    // InternalMcmodel.g:5339:12: (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) )
            	                    // InternalMcmodel.g:5340:13: otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' )
            	                    {
            	                    otherlv_79=(Token)match(input,62,FOLLOW_7); if (state.failed) return current;
            	                    if ( state.backtracking==0 ) {

            	                      													newLeafNode(otherlv_79, grammarAccess.getOverridePredicate_3Access().getExclamationMarkEqualsSignKeyword_1_8_1_1_1_0_0());
            	                      												
            	                    }
            	                    // InternalMcmodel.g:5344:13: ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' )
            	                    int alt135=2;
            	                    int LA135_0 = input.LA(1);

            	                    if ( (LA135_0==21) ) {
            	                        alt135=1;
            	                    }
            	                    else if ( (LA135_0==20) ) {
            	                        alt135=2;
            	                    }
            	                    else {
            	                        if (state.backtracking>0) {state.failed=true; return current;}
            	                        NoViableAltException nvae =
            	                            new NoViableAltException("", 135, 0, input);

            	                        throw nvae;
            	                    }
            	                    switch (alt135) {
            	                        case 1 :
            	                            // InternalMcmodel.g:5345:14: ( (lv_pulling_80_0= 'false' ) )
            	                            {
            	                            // InternalMcmodel.g:5345:14: ( (lv_pulling_80_0= 'false' ) )
            	                            // InternalMcmodel.g:5346:15: (lv_pulling_80_0= 'false' )
            	                            {
            	                            // InternalMcmodel.g:5346:15: (lv_pulling_80_0= 'false' )
            	                            // InternalMcmodel.g:5347:16: lv_pulling_80_0= 'false'
            	                            {
            	                            lv_pulling_80_0=(Token)match(input,21,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              																newLeafNode(lv_pulling_80_0, grammarAccess.getOverridePredicate_3Access().getPullingFalseKeyword_1_8_1_1_1_0_1_0_0());
            	                              															
            	                            }
            	                            if ( state.backtracking==0 ) {

            	                              																if (current==null) {
            	                              																	current = createModelElement(grammarAccess.getOverridePredicate_3Rule());
            	                              																}
            	                              																setWithLastConsumed(current, "pulling", true, "false");
            	                              															
            	                            }

            	                            }


            	                            }


            	                            }
            	                            break;
            	                        case 2 :
            	                            // InternalMcmodel.g:5360:14: otherlv_81= 'true'
            	                            {
            	                            otherlv_81=(Token)match(input,20,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_81, grammarAccess.getOverridePredicate_3Access().getTrueKeyword_1_8_1_1_1_0_1_1());
            	                              													
            	                            }

            	                            }
            	                            break;

            	                    }


            	                    }


            	                    }
            	                    break;
            	                case 2 :
            	                    // InternalMcmodel.g:5367:12: ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) )
            	                    {
            	                    // InternalMcmodel.g:5367:12: ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) )
            	                    // InternalMcmodel.g:5368:13: (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' )
            	                    {
            	                    // InternalMcmodel.g:5368:13: (otherlv_82= '=' | otherlv_83= '==' )
            	                    int alt136=2;
            	                    int LA136_0 = input.LA(1);

            	                    if ( (LA136_0==18) ) {
            	                        alt136=1;
            	                    }
            	                    else if ( (LA136_0==58) ) {
            	                        alt136=2;
            	                    }
            	                    else {
            	                        if (state.backtracking>0) {state.failed=true; return current;}
            	                        NoViableAltException nvae =
            	                            new NoViableAltException("", 136, 0, input);

            	                        throw nvae;
            	                    }
            	                    switch (alt136) {
            	                        case 1 :
            	                            // InternalMcmodel.g:5369:14: otherlv_82= '='
            	                            {
            	                            otherlv_82=(Token)match(input,18,FOLLOW_7); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_82, grammarAccess.getOverridePredicate_3Access().getEqualsSignKeyword_1_8_1_1_1_1_0_0());
            	                              													
            	                            }

            	                            }
            	                            break;
            	                        case 2 :
            	                            // InternalMcmodel.g:5374:14: otherlv_83= '=='
            	                            {
            	                            otherlv_83=(Token)match(input,58,FOLLOW_7); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_83, grammarAccess.getOverridePredicate_3Access().getEqualsSignEqualsSignKeyword_1_8_1_1_1_1_0_1());
            	                              													
            	                            }

            	                            }
            	                            break;

            	                    }

            	                    // InternalMcmodel.g:5379:13: ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' )
            	                    int alt137=2;
            	                    int LA137_0 = input.LA(1);

            	                    if ( (LA137_0==20) ) {
            	                        alt137=1;
            	                    }
            	                    else if ( (LA137_0==21) ) {
            	                        alt137=2;
            	                    }
            	                    else {
            	                        if (state.backtracking>0) {state.failed=true; return current;}
            	                        NoViableAltException nvae =
            	                            new NoViableAltException("", 137, 0, input);

            	                        throw nvae;
            	                    }
            	                    switch (alt137) {
            	                        case 1 :
            	                            // InternalMcmodel.g:5380:14: ( (lv_pulling_84_0= 'true' ) )
            	                            {
            	                            // InternalMcmodel.g:5380:14: ( (lv_pulling_84_0= 'true' ) )
            	                            // InternalMcmodel.g:5381:15: (lv_pulling_84_0= 'true' )
            	                            {
            	                            // InternalMcmodel.g:5381:15: (lv_pulling_84_0= 'true' )
            	                            // InternalMcmodel.g:5382:16: lv_pulling_84_0= 'true'
            	                            {
            	                            lv_pulling_84_0=(Token)match(input,20,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              																newLeafNode(lv_pulling_84_0, grammarAccess.getOverridePredicate_3Access().getPullingTrueKeyword_1_8_1_1_1_1_1_0_0());
            	                              															
            	                            }
            	                            if ( state.backtracking==0 ) {

            	                              																if (current==null) {
            	                              																	current = createModelElement(grammarAccess.getOverridePredicate_3Rule());
            	                              																}
            	                              																setWithLastConsumed(current, "pulling", true, "true");
            	                              															
            	                            }

            	                            }


            	                            }


            	                            }
            	                            break;
            	                        case 2 :
            	                            // InternalMcmodel.g:5395:14: otherlv_85= 'false'
            	                            {
            	                            otherlv_85=(Token)match(input,21,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_85, grammarAccess.getOverridePredicate_3Access().getFalseKeyword_1_8_1_1_1_1_1_1());
            	                              													
            	                            }

            	                            }
            	                            break;

            	                    }


            	                    }


            	                    }
            	                    break;

            	            }


            	            }


            	            }
            	            break;

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getOverridePredicate_3Access().getUnorderedGroup_1());

            	    }


            	    }


            	    }
            	    break;
            	case 10 :
            	    // InternalMcmodel.g:5410:4: ({...}? => ( ({...}? => (otherlv_86= '&' ( ( ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing' ) | ( ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) ) ) ) ) ) )
            	    {
            	    // InternalMcmodel.g:5410:4: ({...}? => ( ({...}? => (otherlv_86= '&' ( ( ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing' ) | ( ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) ) ) ) ) ) )
            	    // InternalMcmodel.g:5411:5: {...}? => ( ({...}? => (otherlv_86= '&' ( ( ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing' ) | ( ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_3Access().getUnorderedGroup_1(), 9) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_3", "getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_3Access().getUnorderedGroup_1(), 9)");
            	    }
            	    // InternalMcmodel.g:5411:116: ( ({...}? => (otherlv_86= '&' ( ( ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing' ) | ( ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) ) ) ) ) )
            	    // InternalMcmodel.g:5412:6: ({...}? => (otherlv_86= '&' ( ( ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing' ) | ( ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getOverridePredicate_3Access().getUnorderedGroup_1(), 9);
            	    // InternalMcmodel.g:5415:9: ({...}? => (otherlv_86= '&' ( ( ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing' ) | ( ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) ) ) ) )
            	    // InternalMcmodel.g:5415:10: {...}? => (otherlv_86= '&' ( ( ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing' ) | ( ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_3", "true");
            	    }
            	    // InternalMcmodel.g:5415:19: (otherlv_86= '&' ( ( ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing' ) | ( ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) ) ) )
            	    // InternalMcmodel.g:5415:20: otherlv_86= '&' ( ( ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing' ) | ( ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) ) )
            	    {
            	    otherlv_86=(Token)match(input,59,FOLLOW_54); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_86, grammarAccess.getOverridePredicate_3Access().getAmpersandKeyword_1_9_0());
            	      								
            	    }
            	    // InternalMcmodel.g:5419:9: ( ( ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing' ) | ( ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) ) )
            	    int alt144=2;
            	    int LA144_0 = input.LA(1);

            	    if ( (LA144_0==60) ) {
            	        alt144=1;
            	    }
            	    else if ( (LA144_0==71) ) {
            	        alt144=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 144, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt144) {
            	        case 1 :
            	            // InternalMcmodel.g:5420:10: ( ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing' )
            	            {
            	            // InternalMcmodel.g:5420:10: ( ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing' )
            	            // InternalMcmodel.g:5421:11: ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing'
            	            {
            	            // InternalMcmodel.g:5421:11: ( (lv_throwingDefined_87_0= '!' ) )
            	            // InternalMcmodel.g:5422:12: (lv_throwingDefined_87_0= '!' )
            	            {
            	            // InternalMcmodel.g:5422:12: (lv_throwingDefined_87_0= '!' )
            	            // InternalMcmodel.g:5423:13: lv_throwingDefined_87_0= '!'
            	            {
            	            lv_throwingDefined_87_0=(Token)match(input,60,FOLLOW_55); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              													newLeafNode(lv_throwingDefined_87_0, grammarAccess.getOverridePredicate_3Access().getThrowingDefinedExclamationMarkKeyword_1_9_1_0_0_0());
            	              												
            	            }
            	            if ( state.backtracking==0 ) {

            	              													if (current==null) {
            	              														current = createModelElement(grammarAccess.getOverridePredicate_3Rule());
            	              													}
            	              													setWithLastConsumed(current, "throwingDefined", true, "!");
            	              												
            	            }

            	            }


            	            }

            	            otherlv_88=(Token)match(input,71,FOLLOW_37); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              											newLeafNode(otherlv_88, grammarAccess.getOverridePredicate_3Access().getThrowingKeyword_1_9_1_0_1());
            	              										
            	            }

            	            }


            	            }
            	            break;
            	        case 2 :
            	            // InternalMcmodel.g:5441:10: ( ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) )
            	            {
            	            // InternalMcmodel.g:5441:10: ( ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) )
            	            // InternalMcmodel.g:5442:11: ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) )
            	            {
            	            // InternalMcmodel.g:5442:11: ( (lv_throwingDefined_89_0= 'throwing' ) )
            	            // InternalMcmodel.g:5443:12: (lv_throwingDefined_89_0= 'throwing' )
            	            {
            	            // InternalMcmodel.g:5443:12: (lv_throwingDefined_89_0= 'throwing' )
            	            // InternalMcmodel.g:5444:13: lv_throwingDefined_89_0= 'throwing'
            	            {
            	            lv_throwingDefined_89_0=(Token)match(input,71,FOLLOW_40); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              													newLeafNode(lv_throwingDefined_89_0, grammarAccess.getOverridePredicate_3Access().getThrowingDefinedThrowingKeyword_1_9_1_1_0_0());
            	              												
            	            }
            	            if ( state.backtracking==0 ) {

            	              													if (current==null) {
            	              														current = createModelElement(grammarAccess.getOverridePredicate_3Rule());
            	              													}
            	              													setWithLastConsumed(current, "throwingDefined", true, "throwing");
            	              												
            	            }

            	            }


            	            }

            	            // InternalMcmodel.g:5456:11: ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) )
            	            int alt143=2;
            	            int LA143_0 = input.LA(1);

            	            if ( (LA143_0==62) ) {
            	                alt143=1;
            	            }
            	            else if ( (LA143_0==18||LA143_0==58) ) {
            	                alt143=2;
            	            }
            	            else {
            	                if (state.backtracking>0) {state.failed=true; return current;}
            	                NoViableAltException nvae =
            	                    new NoViableAltException("", 143, 0, input);

            	                throw nvae;
            	            }
            	            switch (alt143) {
            	                case 1 :
            	                    // InternalMcmodel.g:5457:12: (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) )
            	                    {
            	                    // InternalMcmodel.g:5457:12: (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) )
            	                    // InternalMcmodel.g:5458:13: otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' )
            	                    {
            	                    otherlv_90=(Token)match(input,62,FOLLOW_7); if (state.failed) return current;
            	                    if ( state.backtracking==0 ) {

            	                      													newLeafNode(otherlv_90, grammarAccess.getOverridePredicate_3Access().getExclamationMarkEqualsSignKeyword_1_9_1_1_1_0_0());
            	                      												
            	                    }
            	                    // InternalMcmodel.g:5462:13: ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' )
            	                    int alt140=2;
            	                    int LA140_0 = input.LA(1);

            	                    if ( (LA140_0==21) ) {
            	                        alt140=1;
            	                    }
            	                    else if ( (LA140_0==20) ) {
            	                        alt140=2;
            	                    }
            	                    else {
            	                        if (state.backtracking>0) {state.failed=true; return current;}
            	                        NoViableAltException nvae =
            	                            new NoViableAltException("", 140, 0, input);

            	                        throw nvae;
            	                    }
            	                    switch (alt140) {
            	                        case 1 :
            	                            // InternalMcmodel.g:5463:14: ( (lv_throwing_91_0= 'false' ) )
            	                            {
            	                            // InternalMcmodel.g:5463:14: ( (lv_throwing_91_0= 'false' ) )
            	                            // InternalMcmodel.g:5464:15: (lv_throwing_91_0= 'false' )
            	                            {
            	                            // InternalMcmodel.g:5464:15: (lv_throwing_91_0= 'false' )
            	                            // InternalMcmodel.g:5465:16: lv_throwing_91_0= 'false'
            	                            {
            	                            lv_throwing_91_0=(Token)match(input,21,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              																newLeafNode(lv_throwing_91_0, grammarAccess.getOverridePredicate_3Access().getThrowingFalseKeyword_1_9_1_1_1_0_1_0_0());
            	                              															
            	                            }
            	                            if ( state.backtracking==0 ) {

            	                              																if (current==null) {
            	                              																	current = createModelElement(grammarAccess.getOverridePredicate_3Rule());
            	                              																}
            	                              																setWithLastConsumed(current, "throwing", true, "false");
            	                              															
            	                            }

            	                            }


            	                            }


            	                            }
            	                            break;
            	                        case 2 :
            	                            // InternalMcmodel.g:5478:14: otherlv_92= 'true'
            	                            {
            	                            otherlv_92=(Token)match(input,20,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_92, grammarAccess.getOverridePredicate_3Access().getTrueKeyword_1_9_1_1_1_0_1_1());
            	                              													
            	                            }

            	                            }
            	                            break;

            	                    }


            	                    }


            	                    }
            	                    break;
            	                case 2 :
            	                    // InternalMcmodel.g:5485:12: ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) )
            	                    {
            	                    // InternalMcmodel.g:5485:12: ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) )
            	                    // InternalMcmodel.g:5486:13: (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' )
            	                    {
            	                    // InternalMcmodel.g:5486:13: (otherlv_93= '=' | otherlv_94= '==' )
            	                    int alt141=2;
            	                    int LA141_0 = input.LA(1);

            	                    if ( (LA141_0==18) ) {
            	                        alt141=1;
            	                    }
            	                    else if ( (LA141_0==58) ) {
            	                        alt141=2;
            	                    }
            	                    else {
            	                        if (state.backtracking>0) {state.failed=true; return current;}
            	                        NoViableAltException nvae =
            	                            new NoViableAltException("", 141, 0, input);

            	                        throw nvae;
            	                    }
            	                    switch (alt141) {
            	                        case 1 :
            	                            // InternalMcmodel.g:5487:14: otherlv_93= '='
            	                            {
            	                            otherlv_93=(Token)match(input,18,FOLLOW_7); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_93, grammarAccess.getOverridePredicate_3Access().getEqualsSignKeyword_1_9_1_1_1_1_0_0());
            	                              													
            	                            }

            	                            }
            	                            break;
            	                        case 2 :
            	                            // InternalMcmodel.g:5492:14: otherlv_94= '=='
            	                            {
            	                            otherlv_94=(Token)match(input,58,FOLLOW_7); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_94, grammarAccess.getOverridePredicate_3Access().getEqualsSignEqualsSignKeyword_1_9_1_1_1_1_0_1());
            	                              													
            	                            }

            	                            }
            	                            break;

            	                    }

            	                    // InternalMcmodel.g:5497:13: ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' )
            	                    int alt142=2;
            	                    int LA142_0 = input.LA(1);

            	                    if ( (LA142_0==20) ) {
            	                        alt142=1;
            	                    }
            	                    else if ( (LA142_0==21) ) {
            	                        alt142=2;
            	                    }
            	                    else {
            	                        if (state.backtracking>0) {state.failed=true; return current;}
            	                        NoViableAltException nvae =
            	                            new NoViableAltException("", 142, 0, input);

            	                        throw nvae;
            	                    }
            	                    switch (alt142) {
            	                        case 1 :
            	                            // InternalMcmodel.g:5498:14: ( (lv_throwing_95_0= 'true' ) )
            	                            {
            	                            // InternalMcmodel.g:5498:14: ( (lv_throwing_95_0= 'true' ) )
            	                            // InternalMcmodel.g:5499:15: (lv_throwing_95_0= 'true' )
            	                            {
            	                            // InternalMcmodel.g:5499:15: (lv_throwing_95_0= 'true' )
            	                            // InternalMcmodel.g:5500:16: lv_throwing_95_0= 'true'
            	                            {
            	                            lv_throwing_95_0=(Token)match(input,20,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              																newLeafNode(lv_throwing_95_0, grammarAccess.getOverridePredicate_3Access().getThrowingTrueKeyword_1_9_1_1_1_1_1_0_0());
            	                              															
            	                            }
            	                            if ( state.backtracking==0 ) {

            	                              																if (current==null) {
            	                              																	current = createModelElement(grammarAccess.getOverridePredicate_3Rule());
            	                              																}
            	                              																setWithLastConsumed(current, "throwing", true, "true");
            	                              															
            	                            }

            	                            }


            	                            }


            	                            }
            	                            break;
            	                        case 2 :
            	                            // InternalMcmodel.g:5513:14: otherlv_96= 'false'
            	                            {
            	                            otherlv_96=(Token)match(input,21,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_96, grammarAccess.getOverridePredicate_3Access().getFalseKeyword_1_9_1_1_1_1_1_1());
            	                              													
            	                            }

            	                            }
            	                            break;

            	                    }


            	                    }


            	                    }
            	                    break;

            	            }


            	            }


            	            }
            	            break;

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getOverridePredicate_3Access().getUnorderedGroup_1());

            	    }


            	    }


            	    }
            	    break;
            	case 11 :
            	    // InternalMcmodel.g:5528:4: ({...}? => ( ({...}? => (otherlv_97= '&' ( (lv_timeDefined_98_0= 'time' ) ) (otherlv_99= '=' | otherlv_100= '==' ) ( (lv_time_101_0= RULE_PERCENTAGE ) ) ) ) ) )
            	    {
            	    // InternalMcmodel.g:5528:4: ({...}? => ( ({...}? => (otherlv_97= '&' ( (lv_timeDefined_98_0= 'time' ) ) (otherlv_99= '=' | otherlv_100= '==' ) ( (lv_time_101_0= RULE_PERCENTAGE ) ) ) ) ) )
            	    // InternalMcmodel.g:5529:5: {...}? => ( ({...}? => (otherlv_97= '&' ( (lv_timeDefined_98_0= 'time' ) ) (otherlv_99= '=' | otherlv_100= '==' ) ( (lv_time_101_0= RULE_PERCENTAGE ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_3Access().getUnorderedGroup_1(), 10) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_3", "getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_3Access().getUnorderedGroup_1(), 10)");
            	    }
            	    // InternalMcmodel.g:5529:117: ( ({...}? => (otherlv_97= '&' ( (lv_timeDefined_98_0= 'time' ) ) (otherlv_99= '=' | otherlv_100= '==' ) ( (lv_time_101_0= RULE_PERCENTAGE ) ) ) ) )
            	    // InternalMcmodel.g:5530:6: ({...}? => (otherlv_97= '&' ( (lv_timeDefined_98_0= 'time' ) ) (otherlv_99= '=' | otherlv_100= '==' ) ( (lv_time_101_0= RULE_PERCENTAGE ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getOverridePredicate_3Access().getUnorderedGroup_1(), 10);
            	    // InternalMcmodel.g:5533:9: ({...}? => (otherlv_97= '&' ( (lv_timeDefined_98_0= 'time' ) ) (otherlv_99= '=' | otherlv_100= '==' ) ( (lv_time_101_0= RULE_PERCENTAGE ) ) ) )
            	    // InternalMcmodel.g:5533:10: {...}? => (otherlv_97= '&' ( (lv_timeDefined_98_0= 'time' ) ) (otherlv_99= '=' | otherlv_100= '==' ) ( (lv_time_101_0= RULE_PERCENTAGE ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_3", "true");
            	    }
            	    // InternalMcmodel.g:5533:19: (otherlv_97= '&' ( (lv_timeDefined_98_0= 'time' ) ) (otherlv_99= '=' | otherlv_100= '==' ) ( (lv_time_101_0= RULE_PERCENTAGE ) ) )
            	    // InternalMcmodel.g:5533:20: otherlv_97= '&' ( (lv_timeDefined_98_0= 'time' ) ) (otherlv_99= '=' | otherlv_100= '==' ) ( (lv_time_101_0= RULE_PERCENTAGE ) )
            	    {
            	    otherlv_97=(Token)match(input,59,FOLLOW_56); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_97, grammarAccess.getOverridePredicate_3Access().getAmpersandKeyword_1_10_0());
            	      								
            	    }
            	    // InternalMcmodel.g:5537:9: ( (lv_timeDefined_98_0= 'time' ) )
            	    // InternalMcmodel.g:5538:10: (lv_timeDefined_98_0= 'time' )
            	    {
            	    // InternalMcmodel.g:5538:10: (lv_timeDefined_98_0= 'time' )
            	    // InternalMcmodel.g:5539:11: lv_timeDefined_98_0= 'time'
            	    {
            	    lv_timeDefined_98_0=(Token)match(input,72,FOLLOW_35); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											newLeafNode(lv_timeDefined_98_0, grammarAccess.getOverridePredicate_3Access().getTimeDefinedTimeKeyword_1_10_1_0());
            	      										
            	    }
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElement(grammarAccess.getOverridePredicate_3Rule());
            	      											}
            	      											setWithLastConsumed(current, "timeDefined", true, "time");
            	      										
            	    }

            	    }


            	    }

            	    // InternalMcmodel.g:5551:9: (otherlv_99= '=' | otherlv_100= '==' )
            	    int alt145=2;
            	    int LA145_0 = input.LA(1);

            	    if ( (LA145_0==18) ) {
            	        alt145=1;
            	    }
            	    else if ( (LA145_0==58) ) {
            	        alt145=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 145, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt145) {
            	        case 1 :
            	            // InternalMcmodel.g:5552:10: otherlv_99= '='
            	            {
            	            otherlv_99=(Token)match(input,18,FOLLOW_36); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(otherlv_99, grammarAccess.getOverridePredicate_3Access().getEqualsSignKeyword_1_10_2_0());
            	              									
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalMcmodel.g:5557:10: otherlv_100= '=='
            	            {
            	            otherlv_100=(Token)match(input,58,FOLLOW_36); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(otherlv_100, grammarAccess.getOverridePredicate_3Access().getEqualsSignEqualsSignKeyword_1_10_2_1());
            	              									
            	            }

            	            }
            	            break;

            	    }

            	    // InternalMcmodel.g:5562:9: ( (lv_time_101_0= RULE_PERCENTAGE ) )
            	    // InternalMcmodel.g:5563:10: (lv_time_101_0= RULE_PERCENTAGE )
            	    {
            	    // InternalMcmodel.g:5563:10: (lv_time_101_0= RULE_PERCENTAGE )
            	    // InternalMcmodel.g:5564:11: lv_time_101_0= RULE_PERCENTAGE
            	    {
            	    lv_time_101_0=(Token)match(input,RULE_PERCENTAGE,FOLLOW_37); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											newLeafNode(lv_time_101_0, grammarAccess.getOverridePredicate_3Access().getTimePERCENTAGETerminalRuleCall_1_10_3_0());
            	      										
            	    }
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElement(grammarAccess.getOverridePredicate_3Rule());
            	      											}
            	      											setWithLastConsumed(
            	      												current,
            	      												"time",
            	      												lv_time_101_0,
            	      												"com.raptor.mcmodel.Mcmodel.PERCENTAGE");
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getOverridePredicate_3Access().getUnorderedGroup_1());

            	    }


            	    }


            	    }
            	    break;
            	case 12 :
            	    // InternalMcmodel.g:5586:4: ({...}? => ( ({...}? => (otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) ) ) ) ) )
            	    {
            	    // InternalMcmodel.g:5586:4: ({...}? => ( ({...}? => (otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) ) ) ) ) )
            	    // InternalMcmodel.g:5587:5: {...}? => ( ({...}? => (otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_3Access().getUnorderedGroup_1(), 11) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_3", "getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_3Access().getUnorderedGroup_1(), 11)");
            	    }
            	    // InternalMcmodel.g:5587:117: ( ({...}? => (otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) ) ) ) )
            	    // InternalMcmodel.g:5588:6: ({...}? => (otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getOverridePredicate_3Access().getUnorderedGroup_1(), 11);
            	    // InternalMcmodel.g:5591:9: ({...}? => (otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) ) ) )
            	    // InternalMcmodel.g:5591:10: {...}? => (otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_3", "true");
            	    }
            	    // InternalMcmodel.g:5591:19: (otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) ) )
            	    // InternalMcmodel.g:5591:20: otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) )
            	    {
            	    otherlv_102=(Token)match(input,59,FOLLOW_57); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_102, grammarAccess.getOverridePredicate_3Access().getAmpersandKeyword_1_11_0());
            	      								
            	    }
            	    // InternalMcmodel.g:5595:9: ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) )
            	    // InternalMcmodel.g:5596:10: (lv_customModelDataDefined_103_0= 'custom_model_data' )
            	    {
            	    // InternalMcmodel.g:5596:10: (lv_customModelDataDefined_103_0= 'custom_model_data' )
            	    // InternalMcmodel.g:5597:11: lv_customModelDataDefined_103_0= 'custom_model_data'
            	    {
            	    lv_customModelDataDefined_103_0=(Token)match(input,73,FOLLOW_35); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											newLeafNode(lv_customModelDataDefined_103_0, grammarAccess.getOverridePredicate_3Access().getCustomModelDataDefinedCustom_model_dataKeyword_1_11_1_0());
            	      										
            	    }
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElement(grammarAccess.getOverridePredicate_3Rule());
            	      											}
            	      											setWithLastConsumed(current, "customModelDataDefined", true, "custom_model_data");
            	      										
            	    }

            	    }


            	    }

            	    // InternalMcmodel.g:5609:9: (otherlv_104= '=' | otherlv_105= '==' )
            	    int alt146=2;
            	    int LA146_0 = input.LA(1);

            	    if ( (LA146_0==18) ) {
            	        alt146=1;
            	    }
            	    else if ( (LA146_0==58) ) {
            	        alt146=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 146, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt146) {
            	        case 1 :
            	            // InternalMcmodel.g:5610:10: otherlv_104= '='
            	            {
            	            otherlv_104=(Token)match(input,18,FOLLOW_29); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(otherlv_104, grammarAccess.getOverridePredicate_3Access().getEqualsSignKeyword_1_11_2_0());
            	              									
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalMcmodel.g:5615:10: otherlv_105= '=='
            	            {
            	            otherlv_105=(Token)match(input,58,FOLLOW_29); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(otherlv_105, grammarAccess.getOverridePredicate_3Access().getEqualsSignEqualsSignKeyword_1_11_2_1());
            	              									
            	            }

            	            }
            	            break;

            	    }

            	    // InternalMcmodel.g:5620:9: ( (lv_customModelData_106_0= ruleLONG ) )
            	    // InternalMcmodel.g:5621:10: (lv_customModelData_106_0= ruleLONG )
            	    {
            	    // InternalMcmodel.g:5621:10: (lv_customModelData_106_0= ruleLONG )
            	    // InternalMcmodel.g:5622:11: lv_customModelData_106_0= ruleLONG
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getOverridePredicate_3Access().getCustomModelDataLONGParserRuleCall_1_11_3_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_37);
            	    lv_customModelData_106_0=ruleLONG();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getOverridePredicate_3Rule());
            	      											}
            	      											set(
            	      												current,
            	      												"customModelData",
            	      												lv_customModelData_106_0,
            	      												"com.raptor.mcmodel.Mcmodel.LONG");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getOverridePredicate_3Access().getUnorderedGroup_1());

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop147;
                }
            } while (true);


            }


            }

            getUnorderedGroupHelper().leave(grammarAccess.getOverridePredicate_3Access().getUnorderedGroup_1());

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOverridePredicate_3"


    // $ANTLR start "entryRuleOverridePredicate_4"
    // InternalMcmodel.g:5656:1: entryRuleOverridePredicate_4 returns [EObject current=null] : iv_ruleOverridePredicate_4= ruleOverridePredicate_4 EOF ;
    public final EObject entryRuleOverridePredicate_4() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleOverridePredicate_4 = null;


        try {
            // InternalMcmodel.g:5656:60: (iv_ruleOverridePredicate_4= ruleOverridePredicate_4 EOF )
            // InternalMcmodel.g:5657:2: iv_ruleOverridePredicate_4= ruleOverridePredicate_4 EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOverridePredicate_4Rule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOverridePredicate_4=ruleOverridePredicate_4();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOverridePredicate_4; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOverridePredicate_4"


    // $ANTLR start "ruleOverridePredicate_4"
    // InternalMcmodel.g:5663:1: ruleOverridePredicate_4 returns [EObject current=null] : ( ( ( ( (lv_castDefined_0_0= '!' ) ) otherlv_1= 'cast' ) | ( ( (lv_castDefined_2_0= 'cast' ) ) ( (otherlv_3= '!=' ( ( (lv_cast_4_0= 'false' ) ) | otherlv_5= 'true' ) ) | ( (otherlv_6= '=' | otherlv_7= '==' ) ( ( (lv_cast_8_0= 'true' ) ) | otherlv_9= 'false' ) ) ) ) ) ( ( ( ( ({...}? => ( ({...}? => (otherlv_11= '&' ( (lv_angleDefined_12_0= 'angle' ) ) (otherlv_13= '=' | otherlv_14= '==' ) ( (lv_angle_15_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= '&' ( ( ( (lv_blockingDefined_17_0= '!' ) ) otherlv_18= 'blocking' ) | ( ( (lv_blockingDefined_19_0= 'blocking' ) ) ( (otherlv_20= '!=' ( ( (lv_blocking_21_0= 'false' ) ) | otherlv_22= 'true' ) ) | ( (otherlv_23= '=' | otherlv_24= '==' ) ( ( (lv_blocking_25_0= 'true' ) ) | otherlv_26= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= '&' ( ( ( (lv_brokenDefined_28_0= '!' ) ) otherlv_29= 'broken' ) | ( ( (lv_brokenDefined_30_0= 'broken' ) ) ( (otherlv_31= '!=' ( ( (lv_broken_32_0= 'false' ) ) | otherlv_33= 'true' ) ) | ( (otherlv_34= '=' | otherlv_35= '==' ) ( ( (lv_broken_36_0= 'true' ) ) | otherlv_37= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_38= '&' ( (lv_cooldownDefined_39_0= 'cooldown' ) ) (otherlv_40= '=' | otherlv_41= '==' ) ( (lv_cooldown_42_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= '&' ( (lv_damageDefined_44_0= 'damage' ) ) (otherlv_45= '=' | otherlv_46= '==' ) ( (lv_damage_47_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_48= '&' ( ( ( (lv_damagedDefined_49_0= '!' ) ) otherlv_50= 'damaged' ) | ( ( (lv_damagedDefined_51_0= 'damaged' ) ) ( (otherlv_52= '!=' ( ( (lv_damaged_53_0= 'false' ) ) | otherlv_54= 'true' ) ) | ( (otherlv_55= '=' | otherlv_56= '==' ) ( ( (lv_damaged_57_0= 'true' ) ) | otherlv_58= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_59= '&' ( ( ( (lv_lefthandedDefined_60_0= '!' ) ) otherlv_61= 'lefthanded' ) | ( ( (lv_lefthandedDefined_62_0= 'lefthanded' ) ) ( (otherlv_63= '!=' ( ( (lv_lefthanded_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_lefthanded_68_0= 'true' ) ) | otherlv_69= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_70= '&' ( (lv_pullDefined_71_0= 'pull' ) ) (otherlv_72= '=' | otherlv_73= '==' ) ( (lv_pull_74_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_75= '&' ( ( ( (lv_pullingDefined_76_0= '!' ) ) otherlv_77= 'pulling' ) | ( ( (lv_pullingDefined_78_0= 'pulling' ) ) ( (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) ) | ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_86= '&' ( ( ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing' ) | ( ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_97= '&' ( (lv_timeDefined_98_0= 'time' ) ) (otherlv_99= '=' | otherlv_100= '==' ) ( (lv_time_101_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) ) ) ) ) ) )* ) ) ) ) ;
    public final EObject ruleOverridePredicate_4() throws RecognitionException {
        EObject current = null;

        Token lv_castDefined_0_0=null;
        Token otherlv_1=null;
        Token lv_castDefined_2_0=null;
        Token otherlv_3=null;
        Token lv_cast_4_0=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        Token lv_cast_8_0=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        Token lv_angleDefined_12_0=null;
        Token otherlv_13=null;
        Token otherlv_14=null;
        Token lv_angle_15_0=null;
        Token otherlv_16=null;
        Token lv_blockingDefined_17_0=null;
        Token otherlv_18=null;
        Token lv_blockingDefined_19_0=null;
        Token otherlv_20=null;
        Token lv_blocking_21_0=null;
        Token otherlv_22=null;
        Token otherlv_23=null;
        Token otherlv_24=null;
        Token lv_blocking_25_0=null;
        Token otherlv_26=null;
        Token otherlv_27=null;
        Token lv_brokenDefined_28_0=null;
        Token otherlv_29=null;
        Token lv_brokenDefined_30_0=null;
        Token otherlv_31=null;
        Token lv_broken_32_0=null;
        Token otherlv_33=null;
        Token otherlv_34=null;
        Token otherlv_35=null;
        Token lv_broken_36_0=null;
        Token otherlv_37=null;
        Token otherlv_38=null;
        Token lv_cooldownDefined_39_0=null;
        Token otherlv_40=null;
        Token otherlv_41=null;
        Token lv_cooldown_42_0=null;
        Token otherlv_43=null;
        Token lv_damageDefined_44_0=null;
        Token otherlv_45=null;
        Token otherlv_46=null;
        Token lv_damage_47_0=null;
        Token otherlv_48=null;
        Token lv_damagedDefined_49_0=null;
        Token otherlv_50=null;
        Token lv_damagedDefined_51_0=null;
        Token otherlv_52=null;
        Token lv_damaged_53_0=null;
        Token otherlv_54=null;
        Token otherlv_55=null;
        Token otherlv_56=null;
        Token lv_damaged_57_0=null;
        Token otherlv_58=null;
        Token otherlv_59=null;
        Token lv_lefthandedDefined_60_0=null;
        Token otherlv_61=null;
        Token lv_lefthandedDefined_62_0=null;
        Token otherlv_63=null;
        Token lv_lefthanded_64_0=null;
        Token otherlv_65=null;
        Token otherlv_66=null;
        Token otherlv_67=null;
        Token lv_lefthanded_68_0=null;
        Token otherlv_69=null;
        Token otherlv_70=null;
        Token lv_pullDefined_71_0=null;
        Token otherlv_72=null;
        Token otherlv_73=null;
        Token lv_pull_74_0=null;
        Token otherlv_75=null;
        Token lv_pullingDefined_76_0=null;
        Token otherlv_77=null;
        Token lv_pullingDefined_78_0=null;
        Token otherlv_79=null;
        Token lv_pulling_80_0=null;
        Token otherlv_81=null;
        Token otherlv_82=null;
        Token otherlv_83=null;
        Token lv_pulling_84_0=null;
        Token otherlv_85=null;
        Token otherlv_86=null;
        Token lv_throwingDefined_87_0=null;
        Token otherlv_88=null;
        Token lv_throwingDefined_89_0=null;
        Token otherlv_90=null;
        Token lv_throwing_91_0=null;
        Token otherlv_92=null;
        Token otherlv_93=null;
        Token otherlv_94=null;
        Token lv_throwing_95_0=null;
        Token otherlv_96=null;
        Token otherlv_97=null;
        Token lv_timeDefined_98_0=null;
        Token otherlv_99=null;
        Token otherlv_100=null;
        Token lv_time_101_0=null;
        Token otherlv_102=null;
        Token lv_customModelDataDefined_103_0=null;
        Token otherlv_104=null;
        Token otherlv_105=null;
        AntlrDatatypeRuleToken lv_customModelData_106_0 = null;



        	enterRule();

        try {
            // InternalMcmodel.g:5669:2: ( ( ( ( ( (lv_castDefined_0_0= '!' ) ) otherlv_1= 'cast' ) | ( ( (lv_castDefined_2_0= 'cast' ) ) ( (otherlv_3= '!=' ( ( (lv_cast_4_0= 'false' ) ) | otherlv_5= 'true' ) ) | ( (otherlv_6= '=' | otherlv_7= '==' ) ( ( (lv_cast_8_0= 'true' ) ) | otherlv_9= 'false' ) ) ) ) ) ( ( ( ( ({...}? => ( ({...}? => (otherlv_11= '&' ( (lv_angleDefined_12_0= 'angle' ) ) (otherlv_13= '=' | otherlv_14= '==' ) ( (lv_angle_15_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= '&' ( ( ( (lv_blockingDefined_17_0= '!' ) ) otherlv_18= 'blocking' ) | ( ( (lv_blockingDefined_19_0= 'blocking' ) ) ( (otherlv_20= '!=' ( ( (lv_blocking_21_0= 'false' ) ) | otherlv_22= 'true' ) ) | ( (otherlv_23= '=' | otherlv_24= '==' ) ( ( (lv_blocking_25_0= 'true' ) ) | otherlv_26= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= '&' ( ( ( (lv_brokenDefined_28_0= '!' ) ) otherlv_29= 'broken' ) | ( ( (lv_brokenDefined_30_0= 'broken' ) ) ( (otherlv_31= '!=' ( ( (lv_broken_32_0= 'false' ) ) | otherlv_33= 'true' ) ) | ( (otherlv_34= '=' | otherlv_35= '==' ) ( ( (lv_broken_36_0= 'true' ) ) | otherlv_37= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_38= '&' ( (lv_cooldownDefined_39_0= 'cooldown' ) ) (otherlv_40= '=' | otherlv_41= '==' ) ( (lv_cooldown_42_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= '&' ( (lv_damageDefined_44_0= 'damage' ) ) (otherlv_45= '=' | otherlv_46= '==' ) ( (lv_damage_47_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_48= '&' ( ( ( (lv_damagedDefined_49_0= '!' ) ) otherlv_50= 'damaged' ) | ( ( (lv_damagedDefined_51_0= 'damaged' ) ) ( (otherlv_52= '!=' ( ( (lv_damaged_53_0= 'false' ) ) | otherlv_54= 'true' ) ) | ( (otherlv_55= '=' | otherlv_56= '==' ) ( ( (lv_damaged_57_0= 'true' ) ) | otherlv_58= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_59= '&' ( ( ( (lv_lefthandedDefined_60_0= '!' ) ) otherlv_61= 'lefthanded' ) | ( ( (lv_lefthandedDefined_62_0= 'lefthanded' ) ) ( (otherlv_63= '!=' ( ( (lv_lefthanded_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_lefthanded_68_0= 'true' ) ) | otherlv_69= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_70= '&' ( (lv_pullDefined_71_0= 'pull' ) ) (otherlv_72= '=' | otherlv_73= '==' ) ( (lv_pull_74_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_75= '&' ( ( ( (lv_pullingDefined_76_0= '!' ) ) otherlv_77= 'pulling' ) | ( ( (lv_pullingDefined_78_0= 'pulling' ) ) ( (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) ) | ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_86= '&' ( ( ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing' ) | ( ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_97= '&' ( (lv_timeDefined_98_0= 'time' ) ) (otherlv_99= '=' | otherlv_100= '==' ) ( (lv_time_101_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) ) ) ) ) ) )* ) ) ) ) )
            // InternalMcmodel.g:5670:2: ( ( ( ( (lv_castDefined_0_0= '!' ) ) otherlv_1= 'cast' ) | ( ( (lv_castDefined_2_0= 'cast' ) ) ( (otherlv_3= '!=' ( ( (lv_cast_4_0= 'false' ) ) | otherlv_5= 'true' ) ) | ( (otherlv_6= '=' | otherlv_7= '==' ) ( ( (lv_cast_8_0= 'true' ) ) | otherlv_9= 'false' ) ) ) ) ) ( ( ( ( ({...}? => ( ({...}? => (otherlv_11= '&' ( (lv_angleDefined_12_0= 'angle' ) ) (otherlv_13= '=' | otherlv_14= '==' ) ( (lv_angle_15_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= '&' ( ( ( (lv_blockingDefined_17_0= '!' ) ) otherlv_18= 'blocking' ) | ( ( (lv_blockingDefined_19_0= 'blocking' ) ) ( (otherlv_20= '!=' ( ( (lv_blocking_21_0= 'false' ) ) | otherlv_22= 'true' ) ) | ( (otherlv_23= '=' | otherlv_24= '==' ) ( ( (lv_blocking_25_0= 'true' ) ) | otherlv_26= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= '&' ( ( ( (lv_brokenDefined_28_0= '!' ) ) otherlv_29= 'broken' ) | ( ( (lv_brokenDefined_30_0= 'broken' ) ) ( (otherlv_31= '!=' ( ( (lv_broken_32_0= 'false' ) ) | otherlv_33= 'true' ) ) | ( (otherlv_34= '=' | otherlv_35= '==' ) ( ( (lv_broken_36_0= 'true' ) ) | otherlv_37= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_38= '&' ( (lv_cooldownDefined_39_0= 'cooldown' ) ) (otherlv_40= '=' | otherlv_41= '==' ) ( (lv_cooldown_42_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= '&' ( (lv_damageDefined_44_0= 'damage' ) ) (otherlv_45= '=' | otherlv_46= '==' ) ( (lv_damage_47_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_48= '&' ( ( ( (lv_damagedDefined_49_0= '!' ) ) otherlv_50= 'damaged' ) | ( ( (lv_damagedDefined_51_0= 'damaged' ) ) ( (otherlv_52= '!=' ( ( (lv_damaged_53_0= 'false' ) ) | otherlv_54= 'true' ) ) | ( (otherlv_55= '=' | otherlv_56= '==' ) ( ( (lv_damaged_57_0= 'true' ) ) | otherlv_58= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_59= '&' ( ( ( (lv_lefthandedDefined_60_0= '!' ) ) otherlv_61= 'lefthanded' ) | ( ( (lv_lefthandedDefined_62_0= 'lefthanded' ) ) ( (otherlv_63= '!=' ( ( (lv_lefthanded_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_lefthanded_68_0= 'true' ) ) | otherlv_69= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_70= '&' ( (lv_pullDefined_71_0= 'pull' ) ) (otherlv_72= '=' | otherlv_73= '==' ) ( (lv_pull_74_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_75= '&' ( ( ( (lv_pullingDefined_76_0= '!' ) ) otherlv_77= 'pulling' ) | ( ( (lv_pullingDefined_78_0= 'pulling' ) ) ( (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) ) | ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_86= '&' ( ( ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing' ) | ( ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_97= '&' ( (lv_timeDefined_98_0= 'time' ) ) (otherlv_99= '=' | otherlv_100= '==' ) ( (lv_time_101_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) ) ) ) ) ) )* ) ) ) )
            {
            // InternalMcmodel.g:5670:2: ( ( ( ( (lv_castDefined_0_0= '!' ) ) otherlv_1= 'cast' ) | ( ( (lv_castDefined_2_0= 'cast' ) ) ( (otherlv_3= '!=' ( ( (lv_cast_4_0= 'false' ) ) | otherlv_5= 'true' ) ) | ( (otherlv_6= '=' | otherlv_7= '==' ) ( ( (lv_cast_8_0= 'true' ) ) | otherlv_9= 'false' ) ) ) ) ) ( ( ( ( ({...}? => ( ({...}? => (otherlv_11= '&' ( (lv_angleDefined_12_0= 'angle' ) ) (otherlv_13= '=' | otherlv_14= '==' ) ( (lv_angle_15_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= '&' ( ( ( (lv_blockingDefined_17_0= '!' ) ) otherlv_18= 'blocking' ) | ( ( (lv_blockingDefined_19_0= 'blocking' ) ) ( (otherlv_20= '!=' ( ( (lv_blocking_21_0= 'false' ) ) | otherlv_22= 'true' ) ) | ( (otherlv_23= '=' | otherlv_24= '==' ) ( ( (lv_blocking_25_0= 'true' ) ) | otherlv_26= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= '&' ( ( ( (lv_brokenDefined_28_0= '!' ) ) otherlv_29= 'broken' ) | ( ( (lv_brokenDefined_30_0= 'broken' ) ) ( (otherlv_31= '!=' ( ( (lv_broken_32_0= 'false' ) ) | otherlv_33= 'true' ) ) | ( (otherlv_34= '=' | otherlv_35= '==' ) ( ( (lv_broken_36_0= 'true' ) ) | otherlv_37= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_38= '&' ( (lv_cooldownDefined_39_0= 'cooldown' ) ) (otherlv_40= '=' | otherlv_41= '==' ) ( (lv_cooldown_42_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= '&' ( (lv_damageDefined_44_0= 'damage' ) ) (otherlv_45= '=' | otherlv_46= '==' ) ( (lv_damage_47_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_48= '&' ( ( ( (lv_damagedDefined_49_0= '!' ) ) otherlv_50= 'damaged' ) | ( ( (lv_damagedDefined_51_0= 'damaged' ) ) ( (otherlv_52= '!=' ( ( (lv_damaged_53_0= 'false' ) ) | otherlv_54= 'true' ) ) | ( (otherlv_55= '=' | otherlv_56= '==' ) ( ( (lv_damaged_57_0= 'true' ) ) | otherlv_58= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_59= '&' ( ( ( (lv_lefthandedDefined_60_0= '!' ) ) otherlv_61= 'lefthanded' ) | ( ( (lv_lefthandedDefined_62_0= 'lefthanded' ) ) ( (otherlv_63= '!=' ( ( (lv_lefthanded_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_lefthanded_68_0= 'true' ) ) | otherlv_69= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_70= '&' ( (lv_pullDefined_71_0= 'pull' ) ) (otherlv_72= '=' | otherlv_73= '==' ) ( (lv_pull_74_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_75= '&' ( ( ( (lv_pullingDefined_76_0= '!' ) ) otherlv_77= 'pulling' ) | ( ( (lv_pullingDefined_78_0= 'pulling' ) ) ( (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) ) | ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_86= '&' ( ( ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing' ) | ( ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_97= '&' ( (lv_timeDefined_98_0= 'time' ) ) (otherlv_99= '=' | otherlv_100= '==' ) ( (lv_time_101_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) ) ) ) ) ) )* ) ) ) )
            // InternalMcmodel.g:5671:3: ( ( ( (lv_castDefined_0_0= '!' ) ) otherlv_1= 'cast' ) | ( ( (lv_castDefined_2_0= 'cast' ) ) ( (otherlv_3= '!=' ( ( (lv_cast_4_0= 'false' ) ) | otherlv_5= 'true' ) ) | ( (otherlv_6= '=' | otherlv_7= '==' ) ( ( (lv_cast_8_0= 'true' ) ) | otherlv_9= 'false' ) ) ) ) ) ( ( ( ( ({...}? => ( ({...}? => (otherlv_11= '&' ( (lv_angleDefined_12_0= 'angle' ) ) (otherlv_13= '=' | otherlv_14= '==' ) ( (lv_angle_15_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= '&' ( ( ( (lv_blockingDefined_17_0= '!' ) ) otherlv_18= 'blocking' ) | ( ( (lv_blockingDefined_19_0= 'blocking' ) ) ( (otherlv_20= '!=' ( ( (lv_blocking_21_0= 'false' ) ) | otherlv_22= 'true' ) ) | ( (otherlv_23= '=' | otherlv_24= '==' ) ( ( (lv_blocking_25_0= 'true' ) ) | otherlv_26= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= '&' ( ( ( (lv_brokenDefined_28_0= '!' ) ) otherlv_29= 'broken' ) | ( ( (lv_brokenDefined_30_0= 'broken' ) ) ( (otherlv_31= '!=' ( ( (lv_broken_32_0= 'false' ) ) | otherlv_33= 'true' ) ) | ( (otherlv_34= '=' | otherlv_35= '==' ) ( ( (lv_broken_36_0= 'true' ) ) | otherlv_37= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_38= '&' ( (lv_cooldownDefined_39_0= 'cooldown' ) ) (otherlv_40= '=' | otherlv_41= '==' ) ( (lv_cooldown_42_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= '&' ( (lv_damageDefined_44_0= 'damage' ) ) (otherlv_45= '=' | otherlv_46= '==' ) ( (lv_damage_47_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_48= '&' ( ( ( (lv_damagedDefined_49_0= '!' ) ) otherlv_50= 'damaged' ) | ( ( (lv_damagedDefined_51_0= 'damaged' ) ) ( (otherlv_52= '!=' ( ( (lv_damaged_53_0= 'false' ) ) | otherlv_54= 'true' ) ) | ( (otherlv_55= '=' | otherlv_56= '==' ) ( ( (lv_damaged_57_0= 'true' ) ) | otherlv_58= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_59= '&' ( ( ( (lv_lefthandedDefined_60_0= '!' ) ) otherlv_61= 'lefthanded' ) | ( ( (lv_lefthandedDefined_62_0= 'lefthanded' ) ) ( (otherlv_63= '!=' ( ( (lv_lefthanded_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_lefthanded_68_0= 'true' ) ) | otherlv_69= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_70= '&' ( (lv_pullDefined_71_0= 'pull' ) ) (otherlv_72= '=' | otherlv_73= '==' ) ( (lv_pull_74_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_75= '&' ( ( ( (lv_pullingDefined_76_0= '!' ) ) otherlv_77= 'pulling' ) | ( ( (lv_pullingDefined_78_0= 'pulling' ) ) ( (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) ) | ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_86= '&' ( ( ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing' ) | ( ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_97= '&' ( (lv_timeDefined_98_0= 'time' ) ) (otherlv_99= '=' | otherlv_100= '==' ) ( (lv_time_101_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) ) ) ) ) ) )* ) ) )
            {
            // InternalMcmodel.g:5671:3: ( ( ( (lv_castDefined_0_0= '!' ) ) otherlv_1= 'cast' ) | ( ( (lv_castDefined_2_0= 'cast' ) ) ( (otherlv_3= '!=' ( ( (lv_cast_4_0= 'false' ) ) | otherlv_5= 'true' ) ) | ( (otherlv_6= '=' | otherlv_7= '==' ) ( ( (lv_cast_8_0= 'true' ) ) | otherlv_9= 'false' ) ) ) ) )
            int alt152=2;
            int LA152_0 = input.LA(1);

            if ( (LA152_0==60) ) {
                alt152=1;
            }
            else if ( (LA152_0==64) ) {
                alt152=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 152, 0, input);

                throw nvae;
            }
            switch (alt152) {
                case 1 :
                    // InternalMcmodel.g:5672:4: ( ( (lv_castDefined_0_0= '!' ) ) otherlv_1= 'cast' )
                    {
                    // InternalMcmodel.g:5672:4: ( ( (lv_castDefined_0_0= '!' ) ) otherlv_1= 'cast' )
                    // InternalMcmodel.g:5673:5: ( (lv_castDefined_0_0= '!' ) ) otherlv_1= 'cast'
                    {
                    // InternalMcmodel.g:5673:5: ( (lv_castDefined_0_0= '!' ) )
                    // InternalMcmodel.g:5674:6: (lv_castDefined_0_0= '!' )
                    {
                    // InternalMcmodel.g:5674:6: (lv_castDefined_0_0= '!' )
                    // InternalMcmodel.g:5675:7: lv_castDefined_0_0= '!'
                    {
                    lv_castDefined_0_0=(Token)match(input,60,FOLLOW_44); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							newLeafNode(lv_castDefined_0_0, grammarAccess.getOverridePredicate_4Access().getCastDefinedExclamationMarkKeyword_0_0_0_0());
                      						
                    }
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElement(grammarAccess.getOverridePredicate_4Rule());
                      							}
                      							setWithLastConsumed(current, "castDefined", true, "!");
                      						
                    }

                    }


                    }

                    otherlv_1=(Token)match(input,64,FOLLOW_37); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_1, grammarAccess.getOverridePredicate_4Access().getCastKeyword_0_0_1());
                      				
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalMcmodel.g:5693:4: ( ( (lv_castDefined_2_0= 'cast' ) ) ( (otherlv_3= '!=' ( ( (lv_cast_4_0= 'false' ) ) | otherlv_5= 'true' ) ) | ( (otherlv_6= '=' | otherlv_7= '==' ) ( ( (lv_cast_8_0= 'true' ) ) | otherlv_9= 'false' ) ) ) )
                    {
                    // InternalMcmodel.g:5693:4: ( ( (lv_castDefined_2_0= 'cast' ) ) ( (otherlv_3= '!=' ( ( (lv_cast_4_0= 'false' ) ) | otherlv_5= 'true' ) ) | ( (otherlv_6= '=' | otherlv_7= '==' ) ( ( (lv_cast_8_0= 'true' ) ) | otherlv_9= 'false' ) ) ) )
                    // InternalMcmodel.g:5694:5: ( (lv_castDefined_2_0= 'cast' ) ) ( (otherlv_3= '!=' ( ( (lv_cast_4_0= 'false' ) ) | otherlv_5= 'true' ) ) | ( (otherlv_6= '=' | otherlv_7= '==' ) ( ( (lv_cast_8_0= 'true' ) ) | otherlv_9= 'false' ) ) )
                    {
                    // InternalMcmodel.g:5694:5: ( (lv_castDefined_2_0= 'cast' ) )
                    // InternalMcmodel.g:5695:6: (lv_castDefined_2_0= 'cast' )
                    {
                    // InternalMcmodel.g:5695:6: (lv_castDefined_2_0= 'cast' )
                    // InternalMcmodel.g:5696:7: lv_castDefined_2_0= 'cast'
                    {
                    lv_castDefined_2_0=(Token)match(input,64,FOLLOW_40); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							newLeafNode(lv_castDefined_2_0, grammarAccess.getOverridePredicate_4Access().getCastDefinedCastKeyword_0_1_0_0());
                      						
                    }
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElement(grammarAccess.getOverridePredicate_4Rule());
                      							}
                      							setWithLastConsumed(current, "castDefined", true, "cast");
                      						
                    }

                    }


                    }

                    // InternalMcmodel.g:5708:5: ( (otherlv_3= '!=' ( ( (lv_cast_4_0= 'false' ) ) | otherlv_5= 'true' ) ) | ( (otherlv_6= '=' | otherlv_7= '==' ) ( ( (lv_cast_8_0= 'true' ) ) | otherlv_9= 'false' ) ) )
                    int alt151=2;
                    int LA151_0 = input.LA(1);

                    if ( (LA151_0==62) ) {
                        alt151=1;
                    }
                    else if ( (LA151_0==18||LA151_0==58) ) {
                        alt151=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 151, 0, input);

                        throw nvae;
                    }
                    switch (alt151) {
                        case 1 :
                            // InternalMcmodel.g:5709:6: (otherlv_3= '!=' ( ( (lv_cast_4_0= 'false' ) ) | otherlv_5= 'true' ) )
                            {
                            // InternalMcmodel.g:5709:6: (otherlv_3= '!=' ( ( (lv_cast_4_0= 'false' ) ) | otherlv_5= 'true' ) )
                            // InternalMcmodel.g:5710:7: otherlv_3= '!=' ( ( (lv_cast_4_0= 'false' ) ) | otherlv_5= 'true' )
                            {
                            otherlv_3=(Token)match(input,62,FOLLOW_7); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(otherlv_3, grammarAccess.getOverridePredicate_4Access().getExclamationMarkEqualsSignKeyword_0_1_1_0_0());
                              						
                            }
                            // InternalMcmodel.g:5714:7: ( ( (lv_cast_4_0= 'false' ) ) | otherlv_5= 'true' )
                            int alt148=2;
                            int LA148_0 = input.LA(1);

                            if ( (LA148_0==21) ) {
                                alt148=1;
                            }
                            else if ( (LA148_0==20) ) {
                                alt148=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 148, 0, input);

                                throw nvae;
                            }
                            switch (alt148) {
                                case 1 :
                                    // InternalMcmodel.g:5715:8: ( (lv_cast_4_0= 'false' ) )
                                    {
                                    // InternalMcmodel.g:5715:8: ( (lv_cast_4_0= 'false' ) )
                                    // InternalMcmodel.g:5716:9: (lv_cast_4_0= 'false' )
                                    {
                                    // InternalMcmodel.g:5716:9: (lv_cast_4_0= 'false' )
                                    // InternalMcmodel.g:5717:10: lv_cast_4_0= 'false'
                                    {
                                    lv_cast_4_0=(Token)match(input,21,FOLLOW_37); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      										newLeafNode(lv_cast_4_0, grammarAccess.getOverridePredicate_4Access().getCastFalseKeyword_0_1_1_0_1_0_0());
                                      									
                                    }
                                    if ( state.backtracking==0 ) {

                                      										if (current==null) {
                                      											current = createModelElement(grammarAccess.getOverridePredicate_4Rule());
                                      										}
                                      										setWithLastConsumed(current, "cast", true, "false");
                                      									
                                    }

                                    }


                                    }


                                    }
                                    break;
                                case 2 :
                                    // InternalMcmodel.g:5730:8: otherlv_5= 'true'
                                    {
                                    otherlv_5=(Token)match(input,20,FOLLOW_37); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(otherlv_5, grammarAccess.getOverridePredicate_4Access().getTrueKeyword_0_1_1_0_1_1());
                                      							
                                    }

                                    }
                                    break;

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalMcmodel.g:5737:6: ( (otherlv_6= '=' | otherlv_7= '==' ) ( ( (lv_cast_8_0= 'true' ) ) | otherlv_9= 'false' ) )
                            {
                            // InternalMcmodel.g:5737:6: ( (otherlv_6= '=' | otherlv_7= '==' ) ( ( (lv_cast_8_0= 'true' ) ) | otherlv_9= 'false' ) )
                            // InternalMcmodel.g:5738:7: (otherlv_6= '=' | otherlv_7= '==' ) ( ( (lv_cast_8_0= 'true' ) ) | otherlv_9= 'false' )
                            {
                            // InternalMcmodel.g:5738:7: (otherlv_6= '=' | otherlv_7= '==' )
                            int alt149=2;
                            int LA149_0 = input.LA(1);

                            if ( (LA149_0==18) ) {
                                alt149=1;
                            }
                            else if ( (LA149_0==58) ) {
                                alt149=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 149, 0, input);

                                throw nvae;
                            }
                            switch (alt149) {
                                case 1 :
                                    // InternalMcmodel.g:5739:8: otherlv_6= '='
                                    {
                                    otherlv_6=(Token)match(input,18,FOLLOW_7); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(otherlv_6, grammarAccess.getOverridePredicate_4Access().getEqualsSignKeyword_0_1_1_1_0_0());
                                      							
                                    }

                                    }
                                    break;
                                case 2 :
                                    // InternalMcmodel.g:5744:8: otherlv_7= '=='
                                    {
                                    otherlv_7=(Token)match(input,58,FOLLOW_7); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(otherlv_7, grammarAccess.getOverridePredicate_4Access().getEqualsSignEqualsSignKeyword_0_1_1_1_0_1());
                                      							
                                    }

                                    }
                                    break;

                            }

                            // InternalMcmodel.g:5749:7: ( ( (lv_cast_8_0= 'true' ) ) | otherlv_9= 'false' )
                            int alt150=2;
                            int LA150_0 = input.LA(1);

                            if ( (LA150_0==20) ) {
                                alt150=1;
                            }
                            else if ( (LA150_0==21) ) {
                                alt150=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 150, 0, input);

                                throw nvae;
                            }
                            switch (alt150) {
                                case 1 :
                                    // InternalMcmodel.g:5750:8: ( (lv_cast_8_0= 'true' ) )
                                    {
                                    // InternalMcmodel.g:5750:8: ( (lv_cast_8_0= 'true' ) )
                                    // InternalMcmodel.g:5751:9: (lv_cast_8_0= 'true' )
                                    {
                                    // InternalMcmodel.g:5751:9: (lv_cast_8_0= 'true' )
                                    // InternalMcmodel.g:5752:10: lv_cast_8_0= 'true'
                                    {
                                    lv_cast_8_0=(Token)match(input,20,FOLLOW_37); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      										newLeafNode(lv_cast_8_0, grammarAccess.getOverridePredicate_4Access().getCastTrueKeyword_0_1_1_1_1_0_0());
                                      									
                                    }
                                    if ( state.backtracking==0 ) {

                                      										if (current==null) {
                                      											current = createModelElement(grammarAccess.getOverridePredicate_4Rule());
                                      										}
                                      										setWithLastConsumed(current, "cast", true, "true");
                                      									
                                    }

                                    }


                                    }


                                    }
                                    break;
                                case 2 :
                                    // InternalMcmodel.g:5765:8: otherlv_9= 'false'
                                    {
                                    otherlv_9=(Token)match(input,21,FOLLOW_37); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(otherlv_9, grammarAccess.getOverridePredicate_4Access().getFalseKeyword_0_1_1_1_1_1());
                                      							
                                    }

                                    }
                                    break;

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;

            }

            // InternalMcmodel.g:5774:3: ( ( ( ( ({...}? => ( ({...}? => (otherlv_11= '&' ( (lv_angleDefined_12_0= 'angle' ) ) (otherlv_13= '=' | otherlv_14= '==' ) ( (lv_angle_15_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= '&' ( ( ( (lv_blockingDefined_17_0= '!' ) ) otherlv_18= 'blocking' ) | ( ( (lv_blockingDefined_19_0= 'blocking' ) ) ( (otherlv_20= '!=' ( ( (lv_blocking_21_0= 'false' ) ) | otherlv_22= 'true' ) ) | ( (otherlv_23= '=' | otherlv_24= '==' ) ( ( (lv_blocking_25_0= 'true' ) ) | otherlv_26= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= '&' ( ( ( (lv_brokenDefined_28_0= '!' ) ) otherlv_29= 'broken' ) | ( ( (lv_brokenDefined_30_0= 'broken' ) ) ( (otherlv_31= '!=' ( ( (lv_broken_32_0= 'false' ) ) | otherlv_33= 'true' ) ) | ( (otherlv_34= '=' | otherlv_35= '==' ) ( ( (lv_broken_36_0= 'true' ) ) | otherlv_37= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_38= '&' ( (lv_cooldownDefined_39_0= 'cooldown' ) ) (otherlv_40= '=' | otherlv_41= '==' ) ( (lv_cooldown_42_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= '&' ( (lv_damageDefined_44_0= 'damage' ) ) (otherlv_45= '=' | otherlv_46= '==' ) ( (lv_damage_47_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_48= '&' ( ( ( (lv_damagedDefined_49_0= '!' ) ) otherlv_50= 'damaged' ) | ( ( (lv_damagedDefined_51_0= 'damaged' ) ) ( (otherlv_52= '!=' ( ( (lv_damaged_53_0= 'false' ) ) | otherlv_54= 'true' ) ) | ( (otherlv_55= '=' | otherlv_56= '==' ) ( ( (lv_damaged_57_0= 'true' ) ) | otherlv_58= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_59= '&' ( ( ( (lv_lefthandedDefined_60_0= '!' ) ) otherlv_61= 'lefthanded' ) | ( ( (lv_lefthandedDefined_62_0= 'lefthanded' ) ) ( (otherlv_63= '!=' ( ( (lv_lefthanded_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_lefthanded_68_0= 'true' ) ) | otherlv_69= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_70= '&' ( (lv_pullDefined_71_0= 'pull' ) ) (otherlv_72= '=' | otherlv_73= '==' ) ( (lv_pull_74_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_75= '&' ( ( ( (lv_pullingDefined_76_0= '!' ) ) otherlv_77= 'pulling' ) | ( ( (lv_pullingDefined_78_0= 'pulling' ) ) ( (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) ) | ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_86= '&' ( ( ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing' ) | ( ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_97= '&' ( (lv_timeDefined_98_0= 'time' ) ) (otherlv_99= '=' | otherlv_100= '==' ) ( (lv_time_101_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) ) ) ) ) ) )* ) ) )
            // InternalMcmodel.g:5775:4: ( ( ( ({...}? => ( ({...}? => (otherlv_11= '&' ( (lv_angleDefined_12_0= 'angle' ) ) (otherlv_13= '=' | otherlv_14= '==' ) ( (lv_angle_15_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= '&' ( ( ( (lv_blockingDefined_17_0= '!' ) ) otherlv_18= 'blocking' ) | ( ( (lv_blockingDefined_19_0= 'blocking' ) ) ( (otherlv_20= '!=' ( ( (lv_blocking_21_0= 'false' ) ) | otherlv_22= 'true' ) ) | ( (otherlv_23= '=' | otherlv_24= '==' ) ( ( (lv_blocking_25_0= 'true' ) ) | otherlv_26= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= '&' ( ( ( (lv_brokenDefined_28_0= '!' ) ) otherlv_29= 'broken' ) | ( ( (lv_brokenDefined_30_0= 'broken' ) ) ( (otherlv_31= '!=' ( ( (lv_broken_32_0= 'false' ) ) | otherlv_33= 'true' ) ) | ( (otherlv_34= '=' | otherlv_35= '==' ) ( ( (lv_broken_36_0= 'true' ) ) | otherlv_37= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_38= '&' ( (lv_cooldownDefined_39_0= 'cooldown' ) ) (otherlv_40= '=' | otherlv_41= '==' ) ( (lv_cooldown_42_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= '&' ( (lv_damageDefined_44_0= 'damage' ) ) (otherlv_45= '=' | otherlv_46= '==' ) ( (lv_damage_47_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_48= '&' ( ( ( (lv_damagedDefined_49_0= '!' ) ) otherlv_50= 'damaged' ) | ( ( (lv_damagedDefined_51_0= 'damaged' ) ) ( (otherlv_52= '!=' ( ( (lv_damaged_53_0= 'false' ) ) | otherlv_54= 'true' ) ) | ( (otherlv_55= '=' | otherlv_56= '==' ) ( ( (lv_damaged_57_0= 'true' ) ) | otherlv_58= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_59= '&' ( ( ( (lv_lefthandedDefined_60_0= '!' ) ) otherlv_61= 'lefthanded' ) | ( ( (lv_lefthandedDefined_62_0= 'lefthanded' ) ) ( (otherlv_63= '!=' ( ( (lv_lefthanded_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_lefthanded_68_0= 'true' ) ) | otherlv_69= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_70= '&' ( (lv_pullDefined_71_0= 'pull' ) ) (otherlv_72= '=' | otherlv_73= '==' ) ( (lv_pull_74_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_75= '&' ( ( ( (lv_pullingDefined_76_0= '!' ) ) otherlv_77= 'pulling' ) | ( ( (lv_pullingDefined_78_0= 'pulling' ) ) ( (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) ) | ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_86= '&' ( ( ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing' ) | ( ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_97= '&' ( (lv_timeDefined_98_0= 'time' ) ) (otherlv_99= '=' | otherlv_100= '==' ) ( (lv_time_101_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) ) ) ) ) ) )* ) )
            {
            // InternalMcmodel.g:5775:4: ( ( ( ({...}? => ( ({...}? => (otherlv_11= '&' ( (lv_angleDefined_12_0= 'angle' ) ) (otherlv_13= '=' | otherlv_14= '==' ) ( (lv_angle_15_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= '&' ( ( ( (lv_blockingDefined_17_0= '!' ) ) otherlv_18= 'blocking' ) | ( ( (lv_blockingDefined_19_0= 'blocking' ) ) ( (otherlv_20= '!=' ( ( (lv_blocking_21_0= 'false' ) ) | otherlv_22= 'true' ) ) | ( (otherlv_23= '=' | otherlv_24= '==' ) ( ( (lv_blocking_25_0= 'true' ) ) | otherlv_26= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= '&' ( ( ( (lv_brokenDefined_28_0= '!' ) ) otherlv_29= 'broken' ) | ( ( (lv_brokenDefined_30_0= 'broken' ) ) ( (otherlv_31= '!=' ( ( (lv_broken_32_0= 'false' ) ) | otherlv_33= 'true' ) ) | ( (otherlv_34= '=' | otherlv_35= '==' ) ( ( (lv_broken_36_0= 'true' ) ) | otherlv_37= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_38= '&' ( (lv_cooldownDefined_39_0= 'cooldown' ) ) (otherlv_40= '=' | otherlv_41= '==' ) ( (lv_cooldown_42_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= '&' ( (lv_damageDefined_44_0= 'damage' ) ) (otherlv_45= '=' | otherlv_46= '==' ) ( (lv_damage_47_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_48= '&' ( ( ( (lv_damagedDefined_49_0= '!' ) ) otherlv_50= 'damaged' ) | ( ( (lv_damagedDefined_51_0= 'damaged' ) ) ( (otherlv_52= '!=' ( ( (lv_damaged_53_0= 'false' ) ) | otherlv_54= 'true' ) ) | ( (otherlv_55= '=' | otherlv_56= '==' ) ( ( (lv_damaged_57_0= 'true' ) ) | otherlv_58= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_59= '&' ( ( ( (lv_lefthandedDefined_60_0= '!' ) ) otherlv_61= 'lefthanded' ) | ( ( (lv_lefthandedDefined_62_0= 'lefthanded' ) ) ( (otherlv_63= '!=' ( ( (lv_lefthanded_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_lefthanded_68_0= 'true' ) ) | otherlv_69= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_70= '&' ( (lv_pullDefined_71_0= 'pull' ) ) (otherlv_72= '=' | otherlv_73= '==' ) ( (lv_pull_74_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_75= '&' ( ( ( (lv_pullingDefined_76_0= '!' ) ) otherlv_77= 'pulling' ) | ( ( (lv_pullingDefined_78_0= 'pulling' ) ) ( (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) ) | ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_86= '&' ( ( ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing' ) | ( ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_97= '&' ( (lv_timeDefined_98_0= 'time' ) ) (otherlv_99= '=' | otherlv_100= '==' ) ( (lv_time_101_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) ) ) ) ) ) )* ) )
            // InternalMcmodel.g:5776:5: ( ( ({...}? => ( ({...}? => (otherlv_11= '&' ( (lv_angleDefined_12_0= 'angle' ) ) (otherlv_13= '=' | otherlv_14= '==' ) ( (lv_angle_15_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= '&' ( ( ( (lv_blockingDefined_17_0= '!' ) ) otherlv_18= 'blocking' ) | ( ( (lv_blockingDefined_19_0= 'blocking' ) ) ( (otherlv_20= '!=' ( ( (lv_blocking_21_0= 'false' ) ) | otherlv_22= 'true' ) ) | ( (otherlv_23= '=' | otherlv_24= '==' ) ( ( (lv_blocking_25_0= 'true' ) ) | otherlv_26= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= '&' ( ( ( (lv_brokenDefined_28_0= '!' ) ) otherlv_29= 'broken' ) | ( ( (lv_brokenDefined_30_0= 'broken' ) ) ( (otherlv_31= '!=' ( ( (lv_broken_32_0= 'false' ) ) | otherlv_33= 'true' ) ) | ( (otherlv_34= '=' | otherlv_35= '==' ) ( ( (lv_broken_36_0= 'true' ) ) | otherlv_37= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_38= '&' ( (lv_cooldownDefined_39_0= 'cooldown' ) ) (otherlv_40= '=' | otherlv_41= '==' ) ( (lv_cooldown_42_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= '&' ( (lv_damageDefined_44_0= 'damage' ) ) (otherlv_45= '=' | otherlv_46= '==' ) ( (lv_damage_47_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_48= '&' ( ( ( (lv_damagedDefined_49_0= '!' ) ) otherlv_50= 'damaged' ) | ( ( (lv_damagedDefined_51_0= 'damaged' ) ) ( (otherlv_52= '!=' ( ( (lv_damaged_53_0= 'false' ) ) | otherlv_54= 'true' ) ) | ( (otherlv_55= '=' | otherlv_56= '==' ) ( ( (lv_damaged_57_0= 'true' ) ) | otherlv_58= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_59= '&' ( ( ( (lv_lefthandedDefined_60_0= '!' ) ) otherlv_61= 'lefthanded' ) | ( ( (lv_lefthandedDefined_62_0= 'lefthanded' ) ) ( (otherlv_63= '!=' ( ( (lv_lefthanded_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_lefthanded_68_0= 'true' ) ) | otherlv_69= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_70= '&' ( (lv_pullDefined_71_0= 'pull' ) ) (otherlv_72= '=' | otherlv_73= '==' ) ( (lv_pull_74_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_75= '&' ( ( ( (lv_pullingDefined_76_0= '!' ) ) otherlv_77= 'pulling' ) | ( ( (lv_pullingDefined_78_0= 'pulling' ) ) ( (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) ) | ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_86= '&' ( ( ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing' ) | ( ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_97= '&' ( (lv_timeDefined_98_0= 'time' ) ) (otherlv_99= '=' | otherlv_100= '==' ) ( (lv_time_101_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) ) ) ) ) ) )* )
            {
            getUnorderedGroupHelper().enter(grammarAccess.getOverridePredicate_4Access().getUnorderedGroup_1());
            // InternalMcmodel.g:5779:5: ( ( ({...}? => ( ({...}? => (otherlv_11= '&' ( (lv_angleDefined_12_0= 'angle' ) ) (otherlv_13= '=' | otherlv_14= '==' ) ( (lv_angle_15_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= '&' ( ( ( (lv_blockingDefined_17_0= '!' ) ) otherlv_18= 'blocking' ) | ( ( (lv_blockingDefined_19_0= 'blocking' ) ) ( (otherlv_20= '!=' ( ( (lv_blocking_21_0= 'false' ) ) | otherlv_22= 'true' ) ) | ( (otherlv_23= '=' | otherlv_24= '==' ) ( ( (lv_blocking_25_0= 'true' ) ) | otherlv_26= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= '&' ( ( ( (lv_brokenDefined_28_0= '!' ) ) otherlv_29= 'broken' ) | ( ( (lv_brokenDefined_30_0= 'broken' ) ) ( (otherlv_31= '!=' ( ( (lv_broken_32_0= 'false' ) ) | otherlv_33= 'true' ) ) | ( (otherlv_34= '=' | otherlv_35= '==' ) ( ( (lv_broken_36_0= 'true' ) ) | otherlv_37= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_38= '&' ( (lv_cooldownDefined_39_0= 'cooldown' ) ) (otherlv_40= '=' | otherlv_41= '==' ) ( (lv_cooldown_42_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= '&' ( (lv_damageDefined_44_0= 'damage' ) ) (otherlv_45= '=' | otherlv_46= '==' ) ( (lv_damage_47_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_48= '&' ( ( ( (lv_damagedDefined_49_0= '!' ) ) otherlv_50= 'damaged' ) | ( ( (lv_damagedDefined_51_0= 'damaged' ) ) ( (otherlv_52= '!=' ( ( (lv_damaged_53_0= 'false' ) ) | otherlv_54= 'true' ) ) | ( (otherlv_55= '=' | otherlv_56= '==' ) ( ( (lv_damaged_57_0= 'true' ) ) | otherlv_58= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_59= '&' ( ( ( (lv_lefthandedDefined_60_0= '!' ) ) otherlv_61= 'lefthanded' ) | ( ( (lv_lefthandedDefined_62_0= 'lefthanded' ) ) ( (otherlv_63= '!=' ( ( (lv_lefthanded_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_lefthanded_68_0= 'true' ) ) | otherlv_69= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_70= '&' ( (lv_pullDefined_71_0= 'pull' ) ) (otherlv_72= '=' | otherlv_73= '==' ) ( (lv_pull_74_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_75= '&' ( ( ( (lv_pullingDefined_76_0= '!' ) ) otherlv_77= 'pulling' ) | ( ( (lv_pullingDefined_78_0= 'pulling' ) ) ( (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) ) | ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_86= '&' ( ( ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing' ) | ( ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_97= '&' ( (lv_timeDefined_98_0= 'time' ) ) (otherlv_99= '=' | otherlv_100= '==' ) ( (lv_time_101_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) ) ) ) ) ) )* )
            // InternalMcmodel.g:5780:6: ( ({...}? => ( ({...}? => (otherlv_11= '&' ( (lv_angleDefined_12_0= 'angle' ) ) (otherlv_13= '=' | otherlv_14= '==' ) ( (lv_angle_15_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= '&' ( ( ( (lv_blockingDefined_17_0= '!' ) ) otherlv_18= 'blocking' ) | ( ( (lv_blockingDefined_19_0= 'blocking' ) ) ( (otherlv_20= '!=' ( ( (lv_blocking_21_0= 'false' ) ) | otherlv_22= 'true' ) ) | ( (otherlv_23= '=' | otherlv_24= '==' ) ( ( (lv_blocking_25_0= 'true' ) ) | otherlv_26= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= '&' ( ( ( (lv_brokenDefined_28_0= '!' ) ) otherlv_29= 'broken' ) | ( ( (lv_brokenDefined_30_0= 'broken' ) ) ( (otherlv_31= '!=' ( ( (lv_broken_32_0= 'false' ) ) | otherlv_33= 'true' ) ) | ( (otherlv_34= '=' | otherlv_35= '==' ) ( ( (lv_broken_36_0= 'true' ) ) | otherlv_37= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_38= '&' ( (lv_cooldownDefined_39_0= 'cooldown' ) ) (otherlv_40= '=' | otherlv_41= '==' ) ( (lv_cooldown_42_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= '&' ( (lv_damageDefined_44_0= 'damage' ) ) (otherlv_45= '=' | otherlv_46= '==' ) ( (lv_damage_47_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_48= '&' ( ( ( (lv_damagedDefined_49_0= '!' ) ) otherlv_50= 'damaged' ) | ( ( (lv_damagedDefined_51_0= 'damaged' ) ) ( (otherlv_52= '!=' ( ( (lv_damaged_53_0= 'false' ) ) | otherlv_54= 'true' ) ) | ( (otherlv_55= '=' | otherlv_56= '==' ) ( ( (lv_damaged_57_0= 'true' ) ) | otherlv_58= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_59= '&' ( ( ( (lv_lefthandedDefined_60_0= '!' ) ) otherlv_61= 'lefthanded' ) | ( ( (lv_lefthandedDefined_62_0= 'lefthanded' ) ) ( (otherlv_63= '!=' ( ( (lv_lefthanded_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_lefthanded_68_0= 'true' ) ) | otherlv_69= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_70= '&' ( (lv_pullDefined_71_0= 'pull' ) ) (otherlv_72= '=' | otherlv_73= '==' ) ( (lv_pull_74_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_75= '&' ( ( ( (lv_pullingDefined_76_0= '!' ) ) otherlv_77= 'pulling' ) | ( ( (lv_pullingDefined_78_0= 'pulling' ) ) ( (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) ) | ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_86= '&' ( ( ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing' ) | ( ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_97= '&' ( (lv_timeDefined_98_0= 'time' ) ) (otherlv_99= '=' | otherlv_100= '==' ) ( (lv_time_101_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) ) ) ) ) ) )*
            {
            // InternalMcmodel.g:5780:6: ( ({...}? => ( ({...}? => (otherlv_11= '&' ( (lv_angleDefined_12_0= 'angle' ) ) (otherlv_13= '=' | otherlv_14= '==' ) ( (lv_angle_15_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= '&' ( ( ( (lv_blockingDefined_17_0= '!' ) ) otherlv_18= 'blocking' ) | ( ( (lv_blockingDefined_19_0= 'blocking' ) ) ( (otherlv_20= '!=' ( ( (lv_blocking_21_0= 'false' ) ) | otherlv_22= 'true' ) ) | ( (otherlv_23= '=' | otherlv_24= '==' ) ( ( (lv_blocking_25_0= 'true' ) ) | otherlv_26= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= '&' ( ( ( (lv_brokenDefined_28_0= '!' ) ) otherlv_29= 'broken' ) | ( ( (lv_brokenDefined_30_0= 'broken' ) ) ( (otherlv_31= '!=' ( ( (lv_broken_32_0= 'false' ) ) | otherlv_33= 'true' ) ) | ( (otherlv_34= '=' | otherlv_35= '==' ) ( ( (lv_broken_36_0= 'true' ) ) | otherlv_37= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_38= '&' ( (lv_cooldownDefined_39_0= 'cooldown' ) ) (otherlv_40= '=' | otherlv_41= '==' ) ( (lv_cooldown_42_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= '&' ( (lv_damageDefined_44_0= 'damage' ) ) (otherlv_45= '=' | otherlv_46= '==' ) ( (lv_damage_47_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_48= '&' ( ( ( (lv_damagedDefined_49_0= '!' ) ) otherlv_50= 'damaged' ) | ( ( (lv_damagedDefined_51_0= 'damaged' ) ) ( (otherlv_52= '!=' ( ( (lv_damaged_53_0= 'false' ) ) | otherlv_54= 'true' ) ) | ( (otherlv_55= '=' | otherlv_56= '==' ) ( ( (lv_damaged_57_0= 'true' ) ) | otherlv_58= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_59= '&' ( ( ( (lv_lefthandedDefined_60_0= '!' ) ) otherlv_61= 'lefthanded' ) | ( ( (lv_lefthandedDefined_62_0= 'lefthanded' ) ) ( (otherlv_63= '!=' ( ( (lv_lefthanded_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_lefthanded_68_0= 'true' ) ) | otherlv_69= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_70= '&' ( (lv_pullDefined_71_0= 'pull' ) ) (otherlv_72= '=' | otherlv_73= '==' ) ( (lv_pull_74_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_75= '&' ( ( ( (lv_pullingDefined_76_0= '!' ) ) otherlv_77= 'pulling' ) | ( ( (lv_pullingDefined_78_0= 'pulling' ) ) ( (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) ) | ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_86= '&' ( ( ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing' ) | ( ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_97= '&' ( (lv_timeDefined_98_0= 'time' ) ) (otherlv_99= '=' | otherlv_100= '==' ) ( (lv_time_101_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) ) ) ) ) ) )*
            loop189:
            do {
                int alt189=13;
                alt189 = dfa189.predict(input);
                switch (alt189) {
            	case 1 :
            	    // InternalMcmodel.g:5781:4: ({...}? => ( ({...}? => (otherlv_11= '&' ( (lv_angleDefined_12_0= 'angle' ) ) (otherlv_13= '=' | otherlv_14= '==' ) ( (lv_angle_15_0= RULE_PERCENTAGE ) ) ) ) ) )
            	    {
            	    // InternalMcmodel.g:5781:4: ({...}? => ( ({...}? => (otherlv_11= '&' ( (lv_angleDefined_12_0= 'angle' ) ) (otherlv_13= '=' | otherlv_14= '==' ) ( (lv_angle_15_0= RULE_PERCENTAGE ) ) ) ) ) )
            	    // InternalMcmodel.g:5782:5: {...}? => ( ({...}? => (otherlv_11= '&' ( (lv_angleDefined_12_0= 'angle' ) ) (otherlv_13= '=' | otherlv_14= '==' ) ( (lv_angle_15_0= RULE_PERCENTAGE ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_4Access().getUnorderedGroup_1(), 0) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_4", "getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_4Access().getUnorderedGroup_1(), 0)");
            	    }
            	    // InternalMcmodel.g:5782:116: ( ({...}? => (otherlv_11= '&' ( (lv_angleDefined_12_0= 'angle' ) ) (otherlv_13= '=' | otherlv_14= '==' ) ( (lv_angle_15_0= RULE_PERCENTAGE ) ) ) ) )
            	    // InternalMcmodel.g:5783:6: ({...}? => (otherlv_11= '&' ( (lv_angleDefined_12_0= 'angle' ) ) (otherlv_13= '=' | otherlv_14= '==' ) ( (lv_angle_15_0= RULE_PERCENTAGE ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getOverridePredicate_4Access().getUnorderedGroup_1(), 0);
            	    // InternalMcmodel.g:5786:9: ({...}? => (otherlv_11= '&' ( (lv_angleDefined_12_0= 'angle' ) ) (otherlv_13= '=' | otherlv_14= '==' ) ( (lv_angle_15_0= RULE_PERCENTAGE ) ) ) )
            	    // InternalMcmodel.g:5786:10: {...}? => (otherlv_11= '&' ( (lv_angleDefined_12_0= 'angle' ) ) (otherlv_13= '=' | otherlv_14= '==' ) ( (lv_angle_15_0= RULE_PERCENTAGE ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_4", "true");
            	    }
            	    // InternalMcmodel.g:5786:19: (otherlv_11= '&' ( (lv_angleDefined_12_0= 'angle' ) ) (otherlv_13= '=' | otherlv_14= '==' ) ( (lv_angle_15_0= RULE_PERCENTAGE ) ) )
            	    // InternalMcmodel.g:5786:20: otherlv_11= '&' ( (lv_angleDefined_12_0= 'angle' ) ) (otherlv_13= '=' | otherlv_14= '==' ) ( (lv_angle_15_0= RULE_PERCENTAGE ) )
            	    {
            	    otherlv_11=(Token)match(input,59,FOLLOW_58); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_11, grammarAccess.getOverridePredicate_4Access().getAmpersandKeyword_1_0_0());
            	      								
            	    }
            	    // InternalMcmodel.g:5790:9: ( (lv_angleDefined_12_0= 'angle' ) )
            	    // InternalMcmodel.g:5791:10: (lv_angleDefined_12_0= 'angle' )
            	    {
            	    // InternalMcmodel.g:5791:10: (lv_angleDefined_12_0= 'angle' )
            	    // InternalMcmodel.g:5792:11: lv_angleDefined_12_0= 'angle'
            	    {
            	    lv_angleDefined_12_0=(Token)match(input,38,FOLLOW_35); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											newLeafNode(lv_angleDefined_12_0, grammarAccess.getOverridePredicate_4Access().getAngleDefinedAngleKeyword_1_0_1_0());
            	      										
            	    }
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElement(grammarAccess.getOverridePredicate_4Rule());
            	      											}
            	      											setWithLastConsumed(current, "angleDefined", true, "angle");
            	      										
            	    }

            	    }


            	    }

            	    // InternalMcmodel.g:5804:9: (otherlv_13= '=' | otherlv_14= '==' )
            	    int alt153=2;
            	    int LA153_0 = input.LA(1);

            	    if ( (LA153_0==18) ) {
            	        alt153=1;
            	    }
            	    else if ( (LA153_0==58) ) {
            	        alt153=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 153, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt153) {
            	        case 1 :
            	            // InternalMcmodel.g:5805:10: otherlv_13= '='
            	            {
            	            otherlv_13=(Token)match(input,18,FOLLOW_36); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(otherlv_13, grammarAccess.getOverridePredicate_4Access().getEqualsSignKeyword_1_0_2_0());
            	              									
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalMcmodel.g:5810:10: otherlv_14= '=='
            	            {
            	            otherlv_14=(Token)match(input,58,FOLLOW_36); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(otherlv_14, grammarAccess.getOverridePredicate_4Access().getEqualsSignEqualsSignKeyword_1_0_2_1());
            	              									
            	            }

            	            }
            	            break;

            	    }

            	    // InternalMcmodel.g:5815:9: ( (lv_angle_15_0= RULE_PERCENTAGE ) )
            	    // InternalMcmodel.g:5816:10: (lv_angle_15_0= RULE_PERCENTAGE )
            	    {
            	    // InternalMcmodel.g:5816:10: (lv_angle_15_0= RULE_PERCENTAGE )
            	    // InternalMcmodel.g:5817:11: lv_angle_15_0= RULE_PERCENTAGE
            	    {
            	    lv_angle_15_0=(Token)match(input,RULE_PERCENTAGE,FOLLOW_37); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											newLeafNode(lv_angle_15_0, grammarAccess.getOverridePredicate_4Access().getAnglePERCENTAGETerminalRuleCall_1_0_3_0());
            	      										
            	    }
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElement(grammarAccess.getOverridePredicate_4Rule());
            	      											}
            	      											setWithLastConsumed(
            	      												current,
            	      												"angle",
            	      												lv_angle_15_0,
            	      												"com.raptor.mcmodel.Mcmodel.PERCENTAGE");
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getOverridePredicate_4Access().getUnorderedGroup_1());

            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // InternalMcmodel.g:5839:4: ({...}? => ( ({...}? => (otherlv_16= '&' ( ( ( (lv_blockingDefined_17_0= '!' ) ) otherlv_18= 'blocking' ) | ( ( (lv_blockingDefined_19_0= 'blocking' ) ) ( (otherlv_20= '!=' ( ( (lv_blocking_21_0= 'false' ) ) | otherlv_22= 'true' ) ) | ( (otherlv_23= '=' | otherlv_24= '==' ) ( ( (lv_blocking_25_0= 'true' ) ) | otherlv_26= 'false' ) ) ) ) ) ) ) ) )
            	    {
            	    // InternalMcmodel.g:5839:4: ({...}? => ( ({...}? => (otherlv_16= '&' ( ( ( (lv_blockingDefined_17_0= '!' ) ) otherlv_18= 'blocking' ) | ( ( (lv_blockingDefined_19_0= 'blocking' ) ) ( (otherlv_20= '!=' ( ( (lv_blocking_21_0= 'false' ) ) | otherlv_22= 'true' ) ) | ( (otherlv_23= '=' | otherlv_24= '==' ) ( ( (lv_blocking_25_0= 'true' ) ) | otherlv_26= 'false' ) ) ) ) ) ) ) ) )
            	    // InternalMcmodel.g:5840:5: {...}? => ( ({...}? => (otherlv_16= '&' ( ( ( (lv_blockingDefined_17_0= '!' ) ) otherlv_18= 'blocking' ) | ( ( (lv_blockingDefined_19_0= 'blocking' ) ) ( (otherlv_20= '!=' ( ( (lv_blocking_21_0= 'false' ) ) | otherlv_22= 'true' ) ) | ( (otherlv_23= '=' | otherlv_24= '==' ) ( ( (lv_blocking_25_0= 'true' ) ) | otherlv_26= 'false' ) ) ) ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_4Access().getUnorderedGroup_1(), 1) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_4", "getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_4Access().getUnorderedGroup_1(), 1)");
            	    }
            	    // InternalMcmodel.g:5840:116: ( ({...}? => (otherlv_16= '&' ( ( ( (lv_blockingDefined_17_0= '!' ) ) otherlv_18= 'blocking' ) | ( ( (lv_blockingDefined_19_0= 'blocking' ) ) ( (otherlv_20= '!=' ( ( (lv_blocking_21_0= 'false' ) ) | otherlv_22= 'true' ) ) | ( (otherlv_23= '=' | otherlv_24= '==' ) ( ( (lv_blocking_25_0= 'true' ) ) | otherlv_26= 'false' ) ) ) ) ) ) ) )
            	    // InternalMcmodel.g:5841:6: ({...}? => (otherlv_16= '&' ( ( ( (lv_blockingDefined_17_0= '!' ) ) otherlv_18= 'blocking' ) | ( ( (lv_blockingDefined_19_0= 'blocking' ) ) ( (otherlv_20= '!=' ( ( (lv_blocking_21_0= 'false' ) ) | otherlv_22= 'true' ) ) | ( (otherlv_23= '=' | otherlv_24= '==' ) ( ( (lv_blocking_25_0= 'true' ) ) | otherlv_26= 'false' ) ) ) ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getOverridePredicate_4Access().getUnorderedGroup_1(), 1);
            	    // InternalMcmodel.g:5844:9: ({...}? => (otherlv_16= '&' ( ( ( (lv_blockingDefined_17_0= '!' ) ) otherlv_18= 'blocking' ) | ( ( (lv_blockingDefined_19_0= 'blocking' ) ) ( (otherlv_20= '!=' ( ( (lv_blocking_21_0= 'false' ) ) | otherlv_22= 'true' ) ) | ( (otherlv_23= '=' | otherlv_24= '==' ) ( ( (lv_blocking_25_0= 'true' ) ) | otherlv_26= 'false' ) ) ) ) ) ) )
            	    // InternalMcmodel.g:5844:10: {...}? => (otherlv_16= '&' ( ( ( (lv_blockingDefined_17_0= '!' ) ) otherlv_18= 'blocking' ) | ( ( (lv_blockingDefined_19_0= 'blocking' ) ) ( (otherlv_20= '!=' ( ( (lv_blocking_21_0= 'false' ) ) | otherlv_22= 'true' ) ) | ( (otherlv_23= '=' | otherlv_24= '==' ) ( ( (lv_blocking_25_0= 'true' ) ) | otherlv_26= 'false' ) ) ) ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_4", "true");
            	    }
            	    // InternalMcmodel.g:5844:19: (otherlv_16= '&' ( ( ( (lv_blockingDefined_17_0= '!' ) ) otherlv_18= 'blocking' ) | ( ( (lv_blockingDefined_19_0= 'blocking' ) ) ( (otherlv_20= '!=' ( ( (lv_blocking_21_0= 'false' ) ) | otherlv_22= 'true' ) ) | ( (otherlv_23= '=' | otherlv_24= '==' ) ( ( (lv_blocking_25_0= 'true' ) ) | otherlv_26= 'false' ) ) ) ) ) )
            	    // InternalMcmodel.g:5844:20: otherlv_16= '&' ( ( ( (lv_blockingDefined_17_0= '!' ) ) otherlv_18= 'blocking' ) | ( ( (lv_blockingDefined_19_0= 'blocking' ) ) ( (otherlv_20= '!=' ( ( (lv_blocking_21_0= 'false' ) ) | otherlv_22= 'true' ) ) | ( (otherlv_23= '=' | otherlv_24= '==' ) ( ( (lv_blocking_25_0= 'true' ) ) | otherlv_26= 'false' ) ) ) ) )
            	    {
            	    otherlv_16=(Token)match(input,59,FOLLOW_38); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_16, grammarAccess.getOverridePredicate_4Access().getAmpersandKeyword_1_1_0());
            	      								
            	    }
            	    // InternalMcmodel.g:5848:9: ( ( ( (lv_blockingDefined_17_0= '!' ) ) otherlv_18= 'blocking' ) | ( ( (lv_blockingDefined_19_0= 'blocking' ) ) ( (otherlv_20= '!=' ( ( (lv_blocking_21_0= 'false' ) ) | otherlv_22= 'true' ) ) | ( (otherlv_23= '=' | otherlv_24= '==' ) ( ( (lv_blocking_25_0= 'true' ) ) | otherlv_26= 'false' ) ) ) ) )
            	    int alt158=2;
            	    int LA158_0 = input.LA(1);

            	    if ( (LA158_0==60) ) {
            	        alt158=1;
            	    }
            	    else if ( (LA158_0==61) ) {
            	        alt158=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 158, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt158) {
            	        case 1 :
            	            // InternalMcmodel.g:5849:10: ( ( (lv_blockingDefined_17_0= '!' ) ) otherlv_18= 'blocking' )
            	            {
            	            // InternalMcmodel.g:5849:10: ( ( (lv_blockingDefined_17_0= '!' ) ) otherlv_18= 'blocking' )
            	            // InternalMcmodel.g:5850:11: ( (lv_blockingDefined_17_0= '!' ) ) otherlv_18= 'blocking'
            	            {
            	            // InternalMcmodel.g:5850:11: ( (lv_blockingDefined_17_0= '!' ) )
            	            // InternalMcmodel.g:5851:12: (lv_blockingDefined_17_0= '!' )
            	            {
            	            // InternalMcmodel.g:5851:12: (lv_blockingDefined_17_0= '!' )
            	            // InternalMcmodel.g:5852:13: lv_blockingDefined_17_0= '!'
            	            {
            	            lv_blockingDefined_17_0=(Token)match(input,60,FOLLOW_39); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              													newLeafNode(lv_blockingDefined_17_0, grammarAccess.getOverridePredicate_4Access().getBlockingDefinedExclamationMarkKeyword_1_1_1_0_0_0());
            	              												
            	            }
            	            if ( state.backtracking==0 ) {

            	              													if (current==null) {
            	              														current = createModelElement(grammarAccess.getOverridePredicate_4Rule());
            	              													}
            	              													setWithLastConsumed(current, "blockingDefined", true, "!");
            	              												
            	            }

            	            }


            	            }

            	            otherlv_18=(Token)match(input,61,FOLLOW_37); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              											newLeafNode(otherlv_18, grammarAccess.getOverridePredicate_4Access().getBlockingKeyword_1_1_1_0_1());
            	              										
            	            }

            	            }


            	            }
            	            break;
            	        case 2 :
            	            // InternalMcmodel.g:5870:10: ( ( (lv_blockingDefined_19_0= 'blocking' ) ) ( (otherlv_20= '!=' ( ( (lv_blocking_21_0= 'false' ) ) | otherlv_22= 'true' ) ) | ( (otherlv_23= '=' | otherlv_24= '==' ) ( ( (lv_blocking_25_0= 'true' ) ) | otherlv_26= 'false' ) ) ) )
            	            {
            	            // InternalMcmodel.g:5870:10: ( ( (lv_blockingDefined_19_0= 'blocking' ) ) ( (otherlv_20= '!=' ( ( (lv_blocking_21_0= 'false' ) ) | otherlv_22= 'true' ) ) | ( (otherlv_23= '=' | otherlv_24= '==' ) ( ( (lv_blocking_25_0= 'true' ) ) | otherlv_26= 'false' ) ) ) )
            	            // InternalMcmodel.g:5871:11: ( (lv_blockingDefined_19_0= 'blocking' ) ) ( (otherlv_20= '!=' ( ( (lv_blocking_21_0= 'false' ) ) | otherlv_22= 'true' ) ) | ( (otherlv_23= '=' | otherlv_24= '==' ) ( ( (lv_blocking_25_0= 'true' ) ) | otherlv_26= 'false' ) ) )
            	            {
            	            // InternalMcmodel.g:5871:11: ( (lv_blockingDefined_19_0= 'blocking' ) )
            	            // InternalMcmodel.g:5872:12: (lv_blockingDefined_19_0= 'blocking' )
            	            {
            	            // InternalMcmodel.g:5872:12: (lv_blockingDefined_19_0= 'blocking' )
            	            // InternalMcmodel.g:5873:13: lv_blockingDefined_19_0= 'blocking'
            	            {
            	            lv_blockingDefined_19_0=(Token)match(input,61,FOLLOW_40); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              													newLeafNode(lv_blockingDefined_19_0, grammarAccess.getOverridePredicate_4Access().getBlockingDefinedBlockingKeyword_1_1_1_1_0_0());
            	              												
            	            }
            	            if ( state.backtracking==0 ) {

            	              													if (current==null) {
            	              														current = createModelElement(grammarAccess.getOverridePredicate_4Rule());
            	              													}
            	              													setWithLastConsumed(current, "blockingDefined", true, "blocking");
            	              												
            	            }

            	            }


            	            }

            	            // InternalMcmodel.g:5885:11: ( (otherlv_20= '!=' ( ( (lv_blocking_21_0= 'false' ) ) | otherlv_22= 'true' ) ) | ( (otherlv_23= '=' | otherlv_24= '==' ) ( ( (lv_blocking_25_0= 'true' ) ) | otherlv_26= 'false' ) ) )
            	            int alt157=2;
            	            int LA157_0 = input.LA(1);

            	            if ( (LA157_0==62) ) {
            	                alt157=1;
            	            }
            	            else if ( (LA157_0==18||LA157_0==58) ) {
            	                alt157=2;
            	            }
            	            else {
            	                if (state.backtracking>0) {state.failed=true; return current;}
            	                NoViableAltException nvae =
            	                    new NoViableAltException("", 157, 0, input);

            	                throw nvae;
            	            }
            	            switch (alt157) {
            	                case 1 :
            	                    // InternalMcmodel.g:5886:12: (otherlv_20= '!=' ( ( (lv_blocking_21_0= 'false' ) ) | otherlv_22= 'true' ) )
            	                    {
            	                    // InternalMcmodel.g:5886:12: (otherlv_20= '!=' ( ( (lv_blocking_21_0= 'false' ) ) | otherlv_22= 'true' ) )
            	                    // InternalMcmodel.g:5887:13: otherlv_20= '!=' ( ( (lv_blocking_21_0= 'false' ) ) | otherlv_22= 'true' )
            	                    {
            	                    otherlv_20=(Token)match(input,62,FOLLOW_7); if (state.failed) return current;
            	                    if ( state.backtracking==0 ) {

            	                      													newLeafNode(otherlv_20, grammarAccess.getOverridePredicate_4Access().getExclamationMarkEqualsSignKeyword_1_1_1_1_1_0_0());
            	                      												
            	                    }
            	                    // InternalMcmodel.g:5891:13: ( ( (lv_blocking_21_0= 'false' ) ) | otherlv_22= 'true' )
            	                    int alt154=2;
            	                    int LA154_0 = input.LA(1);

            	                    if ( (LA154_0==21) ) {
            	                        alt154=1;
            	                    }
            	                    else if ( (LA154_0==20) ) {
            	                        alt154=2;
            	                    }
            	                    else {
            	                        if (state.backtracking>0) {state.failed=true; return current;}
            	                        NoViableAltException nvae =
            	                            new NoViableAltException("", 154, 0, input);

            	                        throw nvae;
            	                    }
            	                    switch (alt154) {
            	                        case 1 :
            	                            // InternalMcmodel.g:5892:14: ( (lv_blocking_21_0= 'false' ) )
            	                            {
            	                            // InternalMcmodel.g:5892:14: ( (lv_blocking_21_0= 'false' ) )
            	                            // InternalMcmodel.g:5893:15: (lv_blocking_21_0= 'false' )
            	                            {
            	                            // InternalMcmodel.g:5893:15: (lv_blocking_21_0= 'false' )
            	                            // InternalMcmodel.g:5894:16: lv_blocking_21_0= 'false'
            	                            {
            	                            lv_blocking_21_0=(Token)match(input,21,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              																newLeafNode(lv_blocking_21_0, grammarAccess.getOverridePredicate_4Access().getBlockingFalseKeyword_1_1_1_1_1_0_1_0_0());
            	                              															
            	                            }
            	                            if ( state.backtracking==0 ) {

            	                              																if (current==null) {
            	                              																	current = createModelElement(grammarAccess.getOverridePredicate_4Rule());
            	                              																}
            	                              																setWithLastConsumed(current, "blocking", true, "false");
            	                              															
            	                            }

            	                            }


            	                            }


            	                            }
            	                            break;
            	                        case 2 :
            	                            // InternalMcmodel.g:5907:14: otherlv_22= 'true'
            	                            {
            	                            otherlv_22=(Token)match(input,20,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_22, grammarAccess.getOverridePredicate_4Access().getTrueKeyword_1_1_1_1_1_0_1_1());
            	                              													
            	                            }

            	                            }
            	                            break;

            	                    }


            	                    }


            	                    }
            	                    break;
            	                case 2 :
            	                    // InternalMcmodel.g:5914:12: ( (otherlv_23= '=' | otherlv_24= '==' ) ( ( (lv_blocking_25_0= 'true' ) ) | otherlv_26= 'false' ) )
            	                    {
            	                    // InternalMcmodel.g:5914:12: ( (otherlv_23= '=' | otherlv_24= '==' ) ( ( (lv_blocking_25_0= 'true' ) ) | otherlv_26= 'false' ) )
            	                    // InternalMcmodel.g:5915:13: (otherlv_23= '=' | otherlv_24= '==' ) ( ( (lv_blocking_25_0= 'true' ) ) | otherlv_26= 'false' )
            	                    {
            	                    // InternalMcmodel.g:5915:13: (otherlv_23= '=' | otherlv_24= '==' )
            	                    int alt155=2;
            	                    int LA155_0 = input.LA(1);

            	                    if ( (LA155_0==18) ) {
            	                        alt155=1;
            	                    }
            	                    else if ( (LA155_0==58) ) {
            	                        alt155=2;
            	                    }
            	                    else {
            	                        if (state.backtracking>0) {state.failed=true; return current;}
            	                        NoViableAltException nvae =
            	                            new NoViableAltException("", 155, 0, input);

            	                        throw nvae;
            	                    }
            	                    switch (alt155) {
            	                        case 1 :
            	                            // InternalMcmodel.g:5916:14: otherlv_23= '='
            	                            {
            	                            otherlv_23=(Token)match(input,18,FOLLOW_7); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_23, grammarAccess.getOverridePredicate_4Access().getEqualsSignKeyword_1_1_1_1_1_1_0_0());
            	                              													
            	                            }

            	                            }
            	                            break;
            	                        case 2 :
            	                            // InternalMcmodel.g:5921:14: otherlv_24= '=='
            	                            {
            	                            otherlv_24=(Token)match(input,58,FOLLOW_7); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_24, grammarAccess.getOverridePredicate_4Access().getEqualsSignEqualsSignKeyword_1_1_1_1_1_1_0_1());
            	                              													
            	                            }

            	                            }
            	                            break;

            	                    }

            	                    // InternalMcmodel.g:5926:13: ( ( (lv_blocking_25_0= 'true' ) ) | otherlv_26= 'false' )
            	                    int alt156=2;
            	                    int LA156_0 = input.LA(1);

            	                    if ( (LA156_0==20) ) {
            	                        alt156=1;
            	                    }
            	                    else if ( (LA156_0==21) ) {
            	                        alt156=2;
            	                    }
            	                    else {
            	                        if (state.backtracking>0) {state.failed=true; return current;}
            	                        NoViableAltException nvae =
            	                            new NoViableAltException("", 156, 0, input);

            	                        throw nvae;
            	                    }
            	                    switch (alt156) {
            	                        case 1 :
            	                            // InternalMcmodel.g:5927:14: ( (lv_blocking_25_0= 'true' ) )
            	                            {
            	                            // InternalMcmodel.g:5927:14: ( (lv_blocking_25_0= 'true' ) )
            	                            // InternalMcmodel.g:5928:15: (lv_blocking_25_0= 'true' )
            	                            {
            	                            // InternalMcmodel.g:5928:15: (lv_blocking_25_0= 'true' )
            	                            // InternalMcmodel.g:5929:16: lv_blocking_25_0= 'true'
            	                            {
            	                            lv_blocking_25_0=(Token)match(input,20,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              																newLeafNode(lv_blocking_25_0, grammarAccess.getOverridePredicate_4Access().getBlockingTrueKeyword_1_1_1_1_1_1_1_0_0());
            	                              															
            	                            }
            	                            if ( state.backtracking==0 ) {

            	                              																if (current==null) {
            	                              																	current = createModelElement(grammarAccess.getOverridePredicate_4Rule());
            	                              																}
            	                              																setWithLastConsumed(current, "blocking", true, "true");
            	                              															
            	                            }

            	                            }


            	                            }


            	                            }
            	                            break;
            	                        case 2 :
            	                            // InternalMcmodel.g:5942:14: otherlv_26= 'false'
            	                            {
            	                            otherlv_26=(Token)match(input,21,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_26, grammarAccess.getOverridePredicate_4Access().getFalseKeyword_1_1_1_1_1_1_1_1());
            	                              													
            	                            }

            	                            }
            	                            break;

            	                    }


            	                    }


            	                    }
            	                    break;

            	            }


            	            }


            	            }
            	            break;

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getOverridePredicate_4Access().getUnorderedGroup_1());

            	    }


            	    }


            	    }
            	    break;
            	case 3 :
            	    // InternalMcmodel.g:5957:4: ({...}? => ( ({...}? => (otherlv_27= '&' ( ( ( (lv_brokenDefined_28_0= '!' ) ) otherlv_29= 'broken' ) | ( ( (lv_brokenDefined_30_0= 'broken' ) ) ( (otherlv_31= '!=' ( ( (lv_broken_32_0= 'false' ) ) | otherlv_33= 'true' ) ) | ( (otherlv_34= '=' | otherlv_35= '==' ) ( ( (lv_broken_36_0= 'true' ) ) | otherlv_37= 'false' ) ) ) ) ) ) ) ) )
            	    {
            	    // InternalMcmodel.g:5957:4: ({...}? => ( ({...}? => (otherlv_27= '&' ( ( ( (lv_brokenDefined_28_0= '!' ) ) otherlv_29= 'broken' ) | ( ( (lv_brokenDefined_30_0= 'broken' ) ) ( (otherlv_31= '!=' ( ( (lv_broken_32_0= 'false' ) ) | otherlv_33= 'true' ) ) | ( (otherlv_34= '=' | otherlv_35= '==' ) ( ( (lv_broken_36_0= 'true' ) ) | otherlv_37= 'false' ) ) ) ) ) ) ) ) )
            	    // InternalMcmodel.g:5958:5: {...}? => ( ({...}? => (otherlv_27= '&' ( ( ( (lv_brokenDefined_28_0= '!' ) ) otherlv_29= 'broken' ) | ( ( (lv_brokenDefined_30_0= 'broken' ) ) ( (otherlv_31= '!=' ( ( (lv_broken_32_0= 'false' ) ) | otherlv_33= 'true' ) ) | ( (otherlv_34= '=' | otherlv_35= '==' ) ( ( (lv_broken_36_0= 'true' ) ) | otherlv_37= 'false' ) ) ) ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_4Access().getUnorderedGroup_1(), 2) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_4", "getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_4Access().getUnorderedGroup_1(), 2)");
            	    }
            	    // InternalMcmodel.g:5958:116: ( ({...}? => (otherlv_27= '&' ( ( ( (lv_brokenDefined_28_0= '!' ) ) otherlv_29= 'broken' ) | ( ( (lv_brokenDefined_30_0= 'broken' ) ) ( (otherlv_31= '!=' ( ( (lv_broken_32_0= 'false' ) ) | otherlv_33= 'true' ) ) | ( (otherlv_34= '=' | otherlv_35= '==' ) ( ( (lv_broken_36_0= 'true' ) ) | otherlv_37= 'false' ) ) ) ) ) ) ) )
            	    // InternalMcmodel.g:5959:6: ({...}? => (otherlv_27= '&' ( ( ( (lv_brokenDefined_28_0= '!' ) ) otherlv_29= 'broken' ) | ( ( (lv_brokenDefined_30_0= 'broken' ) ) ( (otherlv_31= '!=' ( ( (lv_broken_32_0= 'false' ) ) | otherlv_33= 'true' ) ) | ( (otherlv_34= '=' | otherlv_35= '==' ) ( ( (lv_broken_36_0= 'true' ) ) | otherlv_37= 'false' ) ) ) ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getOverridePredicate_4Access().getUnorderedGroup_1(), 2);
            	    // InternalMcmodel.g:5962:9: ({...}? => (otherlv_27= '&' ( ( ( (lv_brokenDefined_28_0= '!' ) ) otherlv_29= 'broken' ) | ( ( (lv_brokenDefined_30_0= 'broken' ) ) ( (otherlv_31= '!=' ( ( (lv_broken_32_0= 'false' ) ) | otherlv_33= 'true' ) ) | ( (otherlv_34= '=' | otherlv_35= '==' ) ( ( (lv_broken_36_0= 'true' ) ) | otherlv_37= 'false' ) ) ) ) ) ) )
            	    // InternalMcmodel.g:5962:10: {...}? => (otherlv_27= '&' ( ( ( (lv_brokenDefined_28_0= '!' ) ) otherlv_29= 'broken' ) | ( ( (lv_brokenDefined_30_0= 'broken' ) ) ( (otherlv_31= '!=' ( ( (lv_broken_32_0= 'false' ) ) | otherlv_33= 'true' ) ) | ( (otherlv_34= '=' | otherlv_35= '==' ) ( ( (lv_broken_36_0= 'true' ) ) | otherlv_37= 'false' ) ) ) ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_4", "true");
            	    }
            	    // InternalMcmodel.g:5962:19: (otherlv_27= '&' ( ( ( (lv_brokenDefined_28_0= '!' ) ) otherlv_29= 'broken' ) | ( ( (lv_brokenDefined_30_0= 'broken' ) ) ( (otherlv_31= '!=' ( ( (lv_broken_32_0= 'false' ) ) | otherlv_33= 'true' ) ) | ( (otherlv_34= '=' | otherlv_35= '==' ) ( ( (lv_broken_36_0= 'true' ) ) | otherlv_37= 'false' ) ) ) ) ) )
            	    // InternalMcmodel.g:5962:20: otherlv_27= '&' ( ( ( (lv_brokenDefined_28_0= '!' ) ) otherlv_29= 'broken' ) | ( ( (lv_brokenDefined_30_0= 'broken' ) ) ( (otherlv_31= '!=' ( ( (lv_broken_32_0= 'false' ) ) | otherlv_33= 'true' ) ) | ( (otherlv_34= '=' | otherlv_35= '==' ) ( ( (lv_broken_36_0= 'true' ) ) | otherlv_37= 'false' ) ) ) ) )
            	    {
            	    otherlv_27=(Token)match(input,59,FOLLOW_41); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_27, grammarAccess.getOverridePredicate_4Access().getAmpersandKeyword_1_2_0());
            	      								
            	    }
            	    // InternalMcmodel.g:5966:9: ( ( ( (lv_brokenDefined_28_0= '!' ) ) otherlv_29= 'broken' ) | ( ( (lv_brokenDefined_30_0= 'broken' ) ) ( (otherlv_31= '!=' ( ( (lv_broken_32_0= 'false' ) ) | otherlv_33= 'true' ) ) | ( (otherlv_34= '=' | otherlv_35= '==' ) ( ( (lv_broken_36_0= 'true' ) ) | otherlv_37= 'false' ) ) ) ) )
            	    int alt163=2;
            	    int LA163_0 = input.LA(1);

            	    if ( (LA163_0==60) ) {
            	        alt163=1;
            	    }
            	    else if ( (LA163_0==63) ) {
            	        alt163=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 163, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt163) {
            	        case 1 :
            	            // InternalMcmodel.g:5967:10: ( ( (lv_brokenDefined_28_0= '!' ) ) otherlv_29= 'broken' )
            	            {
            	            // InternalMcmodel.g:5967:10: ( ( (lv_brokenDefined_28_0= '!' ) ) otherlv_29= 'broken' )
            	            // InternalMcmodel.g:5968:11: ( (lv_brokenDefined_28_0= '!' ) ) otherlv_29= 'broken'
            	            {
            	            // InternalMcmodel.g:5968:11: ( (lv_brokenDefined_28_0= '!' ) )
            	            // InternalMcmodel.g:5969:12: (lv_brokenDefined_28_0= '!' )
            	            {
            	            // InternalMcmodel.g:5969:12: (lv_brokenDefined_28_0= '!' )
            	            // InternalMcmodel.g:5970:13: lv_brokenDefined_28_0= '!'
            	            {
            	            lv_brokenDefined_28_0=(Token)match(input,60,FOLLOW_42); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              													newLeafNode(lv_brokenDefined_28_0, grammarAccess.getOverridePredicate_4Access().getBrokenDefinedExclamationMarkKeyword_1_2_1_0_0_0());
            	              												
            	            }
            	            if ( state.backtracking==0 ) {

            	              													if (current==null) {
            	              														current = createModelElement(grammarAccess.getOverridePredicate_4Rule());
            	              													}
            	              													setWithLastConsumed(current, "brokenDefined", true, "!");
            	              												
            	            }

            	            }


            	            }

            	            otherlv_29=(Token)match(input,63,FOLLOW_37); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              											newLeafNode(otherlv_29, grammarAccess.getOverridePredicate_4Access().getBrokenKeyword_1_2_1_0_1());
            	              										
            	            }

            	            }


            	            }
            	            break;
            	        case 2 :
            	            // InternalMcmodel.g:5988:10: ( ( (lv_brokenDefined_30_0= 'broken' ) ) ( (otherlv_31= '!=' ( ( (lv_broken_32_0= 'false' ) ) | otherlv_33= 'true' ) ) | ( (otherlv_34= '=' | otherlv_35= '==' ) ( ( (lv_broken_36_0= 'true' ) ) | otherlv_37= 'false' ) ) ) )
            	            {
            	            // InternalMcmodel.g:5988:10: ( ( (lv_brokenDefined_30_0= 'broken' ) ) ( (otherlv_31= '!=' ( ( (lv_broken_32_0= 'false' ) ) | otherlv_33= 'true' ) ) | ( (otherlv_34= '=' | otherlv_35= '==' ) ( ( (lv_broken_36_0= 'true' ) ) | otherlv_37= 'false' ) ) ) )
            	            // InternalMcmodel.g:5989:11: ( (lv_brokenDefined_30_0= 'broken' ) ) ( (otherlv_31= '!=' ( ( (lv_broken_32_0= 'false' ) ) | otherlv_33= 'true' ) ) | ( (otherlv_34= '=' | otherlv_35= '==' ) ( ( (lv_broken_36_0= 'true' ) ) | otherlv_37= 'false' ) ) )
            	            {
            	            // InternalMcmodel.g:5989:11: ( (lv_brokenDefined_30_0= 'broken' ) )
            	            // InternalMcmodel.g:5990:12: (lv_brokenDefined_30_0= 'broken' )
            	            {
            	            // InternalMcmodel.g:5990:12: (lv_brokenDefined_30_0= 'broken' )
            	            // InternalMcmodel.g:5991:13: lv_brokenDefined_30_0= 'broken'
            	            {
            	            lv_brokenDefined_30_0=(Token)match(input,63,FOLLOW_40); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              													newLeafNode(lv_brokenDefined_30_0, grammarAccess.getOverridePredicate_4Access().getBrokenDefinedBrokenKeyword_1_2_1_1_0_0());
            	              												
            	            }
            	            if ( state.backtracking==0 ) {

            	              													if (current==null) {
            	              														current = createModelElement(grammarAccess.getOverridePredicate_4Rule());
            	              													}
            	              													setWithLastConsumed(current, "brokenDefined", true, "broken");
            	              												
            	            }

            	            }


            	            }

            	            // InternalMcmodel.g:6003:11: ( (otherlv_31= '!=' ( ( (lv_broken_32_0= 'false' ) ) | otherlv_33= 'true' ) ) | ( (otherlv_34= '=' | otherlv_35= '==' ) ( ( (lv_broken_36_0= 'true' ) ) | otherlv_37= 'false' ) ) )
            	            int alt162=2;
            	            int LA162_0 = input.LA(1);

            	            if ( (LA162_0==62) ) {
            	                alt162=1;
            	            }
            	            else if ( (LA162_0==18||LA162_0==58) ) {
            	                alt162=2;
            	            }
            	            else {
            	                if (state.backtracking>0) {state.failed=true; return current;}
            	                NoViableAltException nvae =
            	                    new NoViableAltException("", 162, 0, input);

            	                throw nvae;
            	            }
            	            switch (alt162) {
            	                case 1 :
            	                    // InternalMcmodel.g:6004:12: (otherlv_31= '!=' ( ( (lv_broken_32_0= 'false' ) ) | otherlv_33= 'true' ) )
            	                    {
            	                    // InternalMcmodel.g:6004:12: (otherlv_31= '!=' ( ( (lv_broken_32_0= 'false' ) ) | otherlv_33= 'true' ) )
            	                    // InternalMcmodel.g:6005:13: otherlv_31= '!=' ( ( (lv_broken_32_0= 'false' ) ) | otherlv_33= 'true' )
            	                    {
            	                    otherlv_31=(Token)match(input,62,FOLLOW_7); if (state.failed) return current;
            	                    if ( state.backtracking==0 ) {

            	                      													newLeafNode(otherlv_31, grammarAccess.getOverridePredicate_4Access().getExclamationMarkEqualsSignKeyword_1_2_1_1_1_0_0());
            	                      												
            	                    }
            	                    // InternalMcmodel.g:6009:13: ( ( (lv_broken_32_0= 'false' ) ) | otherlv_33= 'true' )
            	                    int alt159=2;
            	                    int LA159_0 = input.LA(1);

            	                    if ( (LA159_0==21) ) {
            	                        alt159=1;
            	                    }
            	                    else if ( (LA159_0==20) ) {
            	                        alt159=2;
            	                    }
            	                    else {
            	                        if (state.backtracking>0) {state.failed=true; return current;}
            	                        NoViableAltException nvae =
            	                            new NoViableAltException("", 159, 0, input);

            	                        throw nvae;
            	                    }
            	                    switch (alt159) {
            	                        case 1 :
            	                            // InternalMcmodel.g:6010:14: ( (lv_broken_32_0= 'false' ) )
            	                            {
            	                            // InternalMcmodel.g:6010:14: ( (lv_broken_32_0= 'false' ) )
            	                            // InternalMcmodel.g:6011:15: (lv_broken_32_0= 'false' )
            	                            {
            	                            // InternalMcmodel.g:6011:15: (lv_broken_32_0= 'false' )
            	                            // InternalMcmodel.g:6012:16: lv_broken_32_0= 'false'
            	                            {
            	                            lv_broken_32_0=(Token)match(input,21,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              																newLeafNode(lv_broken_32_0, grammarAccess.getOverridePredicate_4Access().getBrokenFalseKeyword_1_2_1_1_1_0_1_0_0());
            	                              															
            	                            }
            	                            if ( state.backtracking==0 ) {

            	                              																if (current==null) {
            	                              																	current = createModelElement(grammarAccess.getOverridePredicate_4Rule());
            	                              																}
            	                              																setWithLastConsumed(current, "broken", true, "false");
            	                              															
            	                            }

            	                            }


            	                            }


            	                            }
            	                            break;
            	                        case 2 :
            	                            // InternalMcmodel.g:6025:14: otherlv_33= 'true'
            	                            {
            	                            otherlv_33=(Token)match(input,20,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_33, grammarAccess.getOverridePredicate_4Access().getTrueKeyword_1_2_1_1_1_0_1_1());
            	                              													
            	                            }

            	                            }
            	                            break;

            	                    }


            	                    }


            	                    }
            	                    break;
            	                case 2 :
            	                    // InternalMcmodel.g:6032:12: ( (otherlv_34= '=' | otherlv_35= '==' ) ( ( (lv_broken_36_0= 'true' ) ) | otherlv_37= 'false' ) )
            	                    {
            	                    // InternalMcmodel.g:6032:12: ( (otherlv_34= '=' | otherlv_35= '==' ) ( ( (lv_broken_36_0= 'true' ) ) | otherlv_37= 'false' ) )
            	                    // InternalMcmodel.g:6033:13: (otherlv_34= '=' | otherlv_35= '==' ) ( ( (lv_broken_36_0= 'true' ) ) | otherlv_37= 'false' )
            	                    {
            	                    // InternalMcmodel.g:6033:13: (otherlv_34= '=' | otherlv_35= '==' )
            	                    int alt160=2;
            	                    int LA160_0 = input.LA(1);

            	                    if ( (LA160_0==18) ) {
            	                        alt160=1;
            	                    }
            	                    else if ( (LA160_0==58) ) {
            	                        alt160=2;
            	                    }
            	                    else {
            	                        if (state.backtracking>0) {state.failed=true; return current;}
            	                        NoViableAltException nvae =
            	                            new NoViableAltException("", 160, 0, input);

            	                        throw nvae;
            	                    }
            	                    switch (alt160) {
            	                        case 1 :
            	                            // InternalMcmodel.g:6034:14: otherlv_34= '='
            	                            {
            	                            otherlv_34=(Token)match(input,18,FOLLOW_7); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_34, grammarAccess.getOverridePredicate_4Access().getEqualsSignKeyword_1_2_1_1_1_1_0_0());
            	                              													
            	                            }

            	                            }
            	                            break;
            	                        case 2 :
            	                            // InternalMcmodel.g:6039:14: otherlv_35= '=='
            	                            {
            	                            otherlv_35=(Token)match(input,58,FOLLOW_7); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_35, grammarAccess.getOverridePredicate_4Access().getEqualsSignEqualsSignKeyword_1_2_1_1_1_1_0_1());
            	                              													
            	                            }

            	                            }
            	                            break;

            	                    }

            	                    // InternalMcmodel.g:6044:13: ( ( (lv_broken_36_0= 'true' ) ) | otherlv_37= 'false' )
            	                    int alt161=2;
            	                    int LA161_0 = input.LA(1);

            	                    if ( (LA161_0==20) ) {
            	                        alt161=1;
            	                    }
            	                    else if ( (LA161_0==21) ) {
            	                        alt161=2;
            	                    }
            	                    else {
            	                        if (state.backtracking>0) {state.failed=true; return current;}
            	                        NoViableAltException nvae =
            	                            new NoViableAltException("", 161, 0, input);

            	                        throw nvae;
            	                    }
            	                    switch (alt161) {
            	                        case 1 :
            	                            // InternalMcmodel.g:6045:14: ( (lv_broken_36_0= 'true' ) )
            	                            {
            	                            // InternalMcmodel.g:6045:14: ( (lv_broken_36_0= 'true' ) )
            	                            // InternalMcmodel.g:6046:15: (lv_broken_36_0= 'true' )
            	                            {
            	                            // InternalMcmodel.g:6046:15: (lv_broken_36_0= 'true' )
            	                            // InternalMcmodel.g:6047:16: lv_broken_36_0= 'true'
            	                            {
            	                            lv_broken_36_0=(Token)match(input,20,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              																newLeafNode(lv_broken_36_0, grammarAccess.getOverridePredicate_4Access().getBrokenTrueKeyword_1_2_1_1_1_1_1_0_0());
            	                              															
            	                            }
            	                            if ( state.backtracking==0 ) {

            	                              																if (current==null) {
            	                              																	current = createModelElement(grammarAccess.getOverridePredicate_4Rule());
            	                              																}
            	                              																setWithLastConsumed(current, "broken", true, "true");
            	                              															
            	                            }

            	                            }


            	                            }


            	                            }
            	                            break;
            	                        case 2 :
            	                            // InternalMcmodel.g:6060:14: otherlv_37= 'false'
            	                            {
            	                            otherlv_37=(Token)match(input,21,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_37, grammarAccess.getOverridePredicate_4Access().getFalseKeyword_1_2_1_1_1_1_1_1());
            	                              													
            	                            }

            	                            }
            	                            break;

            	                    }


            	                    }


            	                    }
            	                    break;

            	            }


            	            }


            	            }
            	            break;

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getOverridePredicate_4Access().getUnorderedGroup_1());

            	    }


            	    }


            	    }
            	    break;
            	case 4 :
            	    // InternalMcmodel.g:6075:4: ({...}? => ( ({...}? => (otherlv_38= '&' ( (lv_cooldownDefined_39_0= 'cooldown' ) ) (otherlv_40= '=' | otherlv_41= '==' ) ( (lv_cooldown_42_0= RULE_PERCENTAGE ) ) ) ) ) )
            	    {
            	    // InternalMcmodel.g:6075:4: ({...}? => ( ({...}? => (otherlv_38= '&' ( (lv_cooldownDefined_39_0= 'cooldown' ) ) (otherlv_40= '=' | otherlv_41= '==' ) ( (lv_cooldown_42_0= RULE_PERCENTAGE ) ) ) ) ) )
            	    // InternalMcmodel.g:6076:5: {...}? => ( ({...}? => (otherlv_38= '&' ( (lv_cooldownDefined_39_0= 'cooldown' ) ) (otherlv_40= '=' | otherlv_41= '==' ) ( (lv_cooldown_42_0= RULE_PERCENTAGE ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_4Access().getUnorderedGroup_1(), 3) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_4", "getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_4Access().getUnorderedGroup_1(), 3)");
            	    }
            	    // InternalMcmodel.g:6076:116: ( ({...}? => (otherlv_38= '&' ( (lv_cooldownDefined_39_0= 'cooldown' ) ) (otherlv_40= '=' | otherlv_41= '==' ) ( (lv_cooldown_42_0= RULE_PERCENTAGE ) ) ) ) )
            	    // InternalMcmodel.g:6077:6: ({...}? => (otherlv_38= '&' ( (lv_cooldownDefined_39_0= 'cooldown' ) ) (otherlv_40= '=' | otherlv_41= '==' ) ( (lv_cooldown_42_0= RULE_PERCENTAGE ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getOverridePredicate_4Access().getUnorderedGroup_1(), 3);
            	    // InternalMcmodel.g:6080:9: ({...}? => (otherlv_38= '&' ( (lv_cooldownDefined_39_0= 'cooldown' ) ) (otherlv_40= '=' | otherlv_41= '==' ) ( (lv_cooldown_42_0= RULE_PERCENTAGE ) ) ) )
            	    // InternalMcmodel.g:6080:10: {...}? => (otherlv_38= '&' ( (lv_cooldownDefined_39_0= 'cooldown' ) ) (otherlv_40= '=' | otherlv_41= '==' ) ( (lv_cooldown_42_0= RULE_PERCENTAGE ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_4", "true");
            	    }
            	    // InternalMcmodel.g:6080:19: (otherlv_38= '&' ( (lv_cooldownDefined_39_0= 'cooldown' ) ) (otherlv_40= '=' | otherlv_41= '==' ) ( (lv_cooldown_42_0= RULE_PERCENTAGE ) ) )
            	    // InternalMcmodel.g:6080:20: otherlv_38= '&' ( (lv_cooldownDefined_39_0= 'cooldown' ) ) (otherlv_40= '=' | otherlv_41= '==' ) ( (lv_cooldown_42_0= RULE_PERCENTAGE ) )
            	    {
            	    otherlv_38=(Token)match(input,59,FOLLOW_45); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_38, grammarAccess.getOverridePredicate_4Access().getAmpersandKeyword_1_3_0());
            	      								
            	    }
            	    // InternalMcmodel.g:6084:9: ( (lv_cooldownDefined_39_0= 'cooldown' ) )
            	    // InternalMcmodel.g:6085:10: (lv_cooldownDefined_39_0= 'cooldown' )
            	    {
            	    // InternalMcmodel.g:6085:10: (lv_cooldownDefined_39_0= 'cooldown' )
            	    // InternalMcmodel.g:6086:11: lv_cooldownDefined_39_0= 'cooldown'
            	    {
            	    lv_cooldownDefined_39_0=(Token)match(input,65,FOLLOW_35); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											newLeafNode(lv_cooldownDefined_39_0, grammarAccess.getOverridePredicate_4Access().getCooldownDefinedCooldownKeyword_1_3_1_0());
            	      										
            	    }
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElement(grammarAccess.getOverridePredicate_4Rule());
            	      											}
            	      											setWithLastConsumed(current, "cooldownDefined", true, "cooldown");
            	      										
            	    }

            	    }


            	    }

            	    // InternalMcmodel.g:6098:9: (otherlv_40= '=' | otherlv_41= '==' )
            	    int alt164=2;
            	    int LA164_0 = input.LA(1);

            	    if ( (LA164_0==18) ) {
            	        alt164=1;
            	    }
            	    else if ( (LA164_0==58) ) {
            	        alt164=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 164, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt164) {
            	        case 1 :
            	            // InternalMcmodel.g:6099:10: otherlv_40= '='
            	            {
            	            otherlv_40=(Token)match(input,18,FOLLOW_36); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(otherlv_40, grammarAccess.getOverridePredicate_4Access().getEqualsSignKeyword_1_3_2_0());
            	              									
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalMcmodel.g:6104:10: otherlv_41= '=='
            	            {
            	            otherlv_41=(Token)match(input,58,FOLLOW_36); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(otherlv_41, grammarAccess.getOverridePredicate_4Access().getEqualsSignEqualsSignKeyword_1_3_2_1());
            	              									
            	            }

            	            }
            	            break;

            	    }

            	    // InternalMcmodel.g:6109:9: ( (lv_cooldown_42_0= RULE_PERCENTAGE ) )
            	    // InternalMcmodel.g:6110:10: (lv_cooldown_42_0= RULE_PERCENTAGE )
            	    {
            	    // InternalMcmodel.g:6110:10: (lv_cooldown_42_0= RULE_PERCENTAGE )
            	    // InternalMcmodel.g:6111:11: lv_cooldown_42_0= RULE_PERCENTAGE
            	    {
            	    lv_cooldown_42_0=(Token)match(input,RULE_PERCENTAGE,FOLLOW_37); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											newLeafNode(lv_cooldown_42_0, grammarAccess.getOverridePredicate_4Access().getCooldownPERCENTAGETerminalRuleCall_1_3_3_0());
            	      										
            	    }
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElement(grammarAccess.getOverridePredicate_4Rule());
            	      											}
            	      											setWithLastConsumed(
            	      												current,
            	      												"cooldown",
            	      												lv_cooldown_42_0,
            	      												"com.raptor.mcmodel.Mcmodel.PERCENTAGE");
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getOverridePredicate_4Access().getUnorderedGroup_1());

            	    }


            	    }


            	    }
            	    break;
            	case 5 :
            	    // InternalMcmodel.g:6133:4: ({...}? => ( ({...}? => (otherlv_43= '&' ( (lv_damageDefined_44_0= 'damage' ) ) (otherlv_45= '=' | otherlv_46= '==' ) ( (lv_damage_47_0= RULE_PERCENTAGE ) ) ) ) ) )
            	    {
            	    // InternalMcmodel.g:6133:4: ({...}? => ( ({...}? => (otherlv_43= '&' ( (lv_damageDefined_44_0= 'damage' ) ) (otherlv_45= '=' | otherlv_46= '==' ) ( (lv_damage_47_0= RULE_PERCENTAGE ) ) ) ) ) )
            	    // InternalMcmodel.g:6134:5: {...}? => ( ({...}? => (otherlv_43= '&' ( (lv_damageDefined_44_0= 'damage' ) ) (otherlv_45= '=' | otherlv_46= '==' ) ( (lv_damage_47_0= RULE_PERCENTAGE ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_4Access().getUnorderedGroup_1(), 4) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_4", "getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_4Access().getUnorderedGroup_1(), 4)");
            	    }
            	    // InternalMcmodel.g:6134:116: ( ({...}? => (otherlv_43= '&' ( (lv_damageDefined_44_0= 'damage' ) ) (otherlv_45= '=' | otherlv_46= '==' ) ( (lv_damage_47_0= RULE_PERCENTAGE ) ) ) ) )
            	    // InternalMcmodel.g:6135:6: ({...}? => (otherlv_43= '&' ( (lv_damageDefined_44_0= 'damage' ) ) (otherlv_45= '=' | otherlv_46= '==' ) ( (lv_damage_47_0= RULE_PERCENTAGE ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getOverridePredicate_4Access().getUnorderedGroup_1(), 4);
            	    // InternalMcmodel.g:6138:9: ({...}? => (otherlv_43= '&' ( (lv_damageDefined_44_0= 'damage' ) ) (otherlv_45= '=' | otherlv_46= '==' ) ( (lv_damage_47_0= RULE_PERCENTAGE ) ) ) )
            	    // InternalMcmodel.g:6138:10: {...}? => (otherlv_43= '&' ( (lv_damageDefined_44_0= 'damage' ) ) (otherlv_45= '=' | otherlv_46= '==' ) ( (lv_damage_47_0= RULE_PERCENTAGE ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_4", "true");
            	    }
            	    // InternalMcmodel.g:6138:19: (otherlv_43= '&' ( (lv_damageDefined_44_0= 'damage' ) ) (otherlv_45= '=' | otherlv_46= '==' ) ( (lv_damage_47_0= RULE_PERCENTAGE ) ) )
            	    // InternalMcmodel.g:6138:20: otherlv_43= '&' ( (lv_damageDefined_44_0= 'damage' ) ) (otherlv_45= '=' | otherlv_46= '==' ) ( (lv_damage_47_0= RULE_PERCENTAGE ) )
            	    {
            	    otherlv_43=(Token)match(input,59,FOLLOW_46); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_43, grammarAccess.getOverridePredicate_4Access().getAmpersandKeyword_1_4_0());
            	      								
            	    }
            	    // InternalMcmodel.g:6142:9: ( (lv_damageDefined_44_0= 'damage' ) )
            	    // InternalMcmodel.g:6143:10: (lv_damageDefined_44_0= 'damage' )
            	    {
            	    // InternalMcmodel.g:6143:10: (lv_damageDefined_44_0= 'damage' )
            	    // InternalMcmodel.g:6144:11: lv_damageDefined_44_0= 'damage'
            	    {
            	    lv_damageDefined_44_0=(Token)match(input,66,FOLLOW_35); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											newLeafNode(lv_damageDefined_44_0, grammarAccess.getOverridePredicate_4Access().getDamageDefinedDamageKeyword_1_4_1_0());
            	      										
            	    }
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElement(grammarAccess.getOverridePredicate_4Rule());
            	      											}
            	      											setWithLastConsumed(current, "damageDefined", true, "damage");
            	      										
            	    }

            	    }


            	    }

            	    // InternalMcmodel.g:6156:9: (otherlv_45= '=' | otherlv_46= '==' )
            	    int alt165=2;
            	    int LA165_0 = input.LA(1);

            	    if ( (LA165_0==18) ) {
            	        alt165=1;
            	    }
            	    else if ( (LA165_0==58) ) {
            	        alt165=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 165, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt165) {
            	        case 1 :
            	            // InternalMcmodel.g:6157:10: otherlv_45= '='
            	            {
            	            otherlv_45=(Token)match(input,18,FOLLOW_36); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(otherlv_45, grammarAccess.getOverridePredicate_4Access().getEqualsSignKeyword_1_4_2_0());
            	              									
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalMcmodel.g:6162:10: otherlv_46= '=='
            	            {
            	            otherlv_46=(Token)match(input,58,FOLLOW_36); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(otherlv_46, grammarAccess.getOverridePredicate_4Access().getEqualsSignEqualsSignKeyword_1_4_2_1());
            	              									
            	            }

            	            }
            	            break;

            	    }

            	    // InternalMcmodel.g:6167:9: ( (lv_damage_47_0= RULE_PERCENTAGE ) )
            	    // InternalMcmodel.g:6168:10: (lv_damage_47_0= RULE_PERCENTAGE )
            	    {
            	    // InternalMcmodel.g:6168:10: (lv_damage_47_0= RULE_PERCENTAGE )
            	    // InternalMcmodel.g:6169:11: lv_damage_47_0= RULE_PERCENTAGE
            	    {
            	    lv_damage_47_0=(Token)match(input,RULE_PERCENTAGE,FOLLOW_37); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											newLeafNode(lv_damage_47_0, grammarAccess.getOverridePredicate_4Access().getDamagePERCENTAGETerminalRuleCall_1_4_3_0());
            	      										
            	    }
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElement(grammarAccess.getOverridePredicate_4Rule());
            	      											}
            	      											setWithLastConsumed(
            	      												current,
            	      												"damage",
            	      												lv_damage_47_0,
            	      												"com.raptor.mcmodel.Mcmodel.PERCENTAGE");
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getOverridePredicate_4Access().getUnorderedGroup_1());

            	    }


            	    }


            	    }
            	    break;
            	case 6 :
            	    // InternalMcmodel.g:6191:4: ({...}? => ( ({...}? => (otherlv_48= '&' ( ( ( (lv_damagedDefined_49_0= '!' ) ) otherlv_50= 'damaged' ) | ( ( (lv_damagedDefined_51_0= 'damaged' ) ) ( (otherlv_52= '!=' ( ( (lv_damaged_53_0= 'false' ) ) | otherlv_54= 'true' ) ) | ( (otherlv_55= '=' | otherlv_56= '==' ) ( ( (lv_damaged_57_0= 'true' ) ) | otherlv_58= 'false' ) ) ) ) ) ) ) ) )
            	    {
            	    // InternalMcmodel.g:6191:4: ({...}? => ( ({...}? => (otherlv_48= '&' ( ( ( (lv_damagedDefined_49_0= '!' ) ) otherlv_50= 'damaged' ) | ( ( (lv_damagedDefined_51_0= 'damaged' ) ) ( (otherlv_52= '!=' ( ( (lv_damaged_53_0= 'false' ) ) | otherlv_54= 'true' ) ) | ( (otherlv_55= '=' | otherlv_56= '==' ) ( ( (lv_damaged_57_0= 'true' ) ) | otherlv_58= 'false' ) ) ) ) ) ) ) ) )
            	    // InternalMcmodel.g:6192:5: {...}? => ( ({...}? => (otherlv_48= '&' ( ( ( (lv_damagedDefined_49_0= '!' ) ) otherlv_50= 'damaged' ) | ( ( (lv_damagedDefined_51_0= 'damaged' ) ) ( (otherlv_52= '!=' ( ( (lv_damaged_53_0= 'false' ) ) | otherlv_54= 'true' ) ) | ( (otherlv_55= '=' | otherlv_56= '==' ) ( ( (lv_damaged_57_0= 'true' ) ) | otherlv_58= 'false' ) ) ) ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_4Access().getUnorderedGroup_1(), 5) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_4", "getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_4Access().getUnorderedGroup_1(), 5)");
            	    }
            	    // InternalMcmodel.g:6192:116: ( ({...}? => (otherlv_48= '&' ( ( ( (lv_damagedDefined_49_0= '!' ) ) otherlv_50= 'damaged' ) | ( ( (lv_damagedDefined_51_0= 'damaged' ) ) ( (otherlv_52= '!=' ( ( (lv_damaged_53_0= 'false' ) ) | otherlv_54= 'true' ) ) | ( (otherlv_55= '=' | otherlv_56= '==' ) ( ( (lv_damaged_57_0= 'true' ) ) | otherlv_58= 'false' ) ) ) ) ) ) ) )
            	    // InternalMcmodel.g:6193:6: ({...}? => (otherlv_48= '&' ( ( ( (lv_damagedDefined_49_0= '!' ) ) otherlv_50= 'damaged' ) | ( ( (lv_damagedDefined_51_0= 'damaged' ) ) ( (otherlv_52= '!=' ( ( (lv_damaged_53_0= 'false' ) ) | otherlv_54= 'true' ) ) | ( (otherlv_55= '=' | otherlv_56= '==' ) ( ( (lv_damaged_57_0= 'true' ) ) | otherlv_58= 'false' ) ) ) ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getOverridePredicate_4Access().getUnorderedGroup_1(), 5);
            	    // InternalMcmodel.g:6196:9: ({...}? => (otherlv_48= '&' ( ( ( (lv_damagedDefined_49_0= '!' ) ) otherlv_50= 'damaged' ) | ( ( (lv_damagedDefined_51_0= 'damaged' ) ) ( (otherlv_52= '!=' ( ( (lv_damaged_53_0= 'false' ) ) | otherlv_54= 'true' ) ) | ( (otherlv_55= '=' | otherlv_56= '==' ) ( ( (lv_damaged_57_0= 'true' ) ) | otherlv_58= 'false' ) ) ) ) ) ) )
            	    // InternalMcmodel.g:6196:10: {...}? => (otherlv_48= '&' ( ( ( (lv_damagedDefined_49_0= '!' ) ) otherlv_50= 'damaged' ) | ( ( (lv_damagedDefined_51_0= 'damaged' ) ) ( (otherlv_52= '!=' ( ( (lv_damaged_53_0= 'false' ) ) | otherlv_54= 'true' ) ) | ( (otherlv_55= '=' | otherlv_56= '==' ) ( ( (lv_damaged_57_0= 'true' ) ) | otherlv_58= 'false' ) ) ) ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_4", "true");
            	    }
            	    // InternalMcmodel.g:6196:19: (otherlv_48= '&' ( ( ( (lv_damagedDefined_49_0= '!' ) ) otherlv_50= 'damaged' ) | ( ( (lv_damagedDefined_51_0= 'damaged' ) ) ( (otherlv_52= '!=' ( ( (lv_damaged_53_0= 'false' ) ) | otherlv_54= 'true' ) ) | ( (otherlv_55= '=' | otherlv_56= '==' ) ( ( (lv_damaged_57_0= 'true' ) ) | otherlv_58= 'false' ) ) ) ) ) )
            	    // InternalMcmodel.g:6196:20: otherlv_48= '&' ( ( ( (lv_damagedDefined_49_0= '!' ) ) otherlv_50= 'damaged' ) | ( ( (lv_damagedDefined_51_0= 'damaged' ) ) ( (otherlv_52= '!=' ( ( (lv_damaged_53_0= 'false' ) ) | otherlv_54= 'true' ) ) | ( (otherlv_55= '=' | otherlv_56= '==' ) ( ( (lv_damaged_57_0= 'true' ) ) | otherlv_58= 'false' ) ) ) ) )
            	    {
            	    otherlv_48=(Token)match(input,59,FOLLOW_47); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_48, grammarAccess.getOverridePredicate_4Access().getAmpersandKeyword_1_5_0());
            	      								
            	    }
            	    // InternalMcmodel.g:6200:9: ( ( ( (lv_damagedDefined_49_0= '!' ) ) otherlv_50= 'damaged' ) | ( ( (lv_damagedDefined_51_0= 'damaged' ) ) ( (otherlv_52= '!=' ( ( (lv_damaged_53_0= 'false' ) ) | otherlv_54= 'true' ) ) | ( (otherlv_55= '=' | otherlv_56= '==' ) ( ( (lv_damaged_57_0= 'true' ) ) | otherlv_58= 'false' ) ) ) ) )
            	    int alt170=2;
            	    int LA170_0 = input.LA(1);

            	    if ( (LA170_0==60) ) {
            	        alt170=1;
            	    }
            	    else if ( (LA170_0==67) ) {
            	        alt170=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 170, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt170) {
            	        case 1 :
            	            // InternalMcmodel.g:6201:10: ( ( (lv_damagedDefined_49_0= '!' ) ) otherlv_50= 'damaged' )
            	            {
            	            // InternalMcmodel.g:6201:10: ( ( (lv_damagedDefined_49_0= '!' ) ) otherlv_50= 'damaged' )
            	            // InternalMcmodel.g:6202:11: ( (lv_damagedDefined_49_0= '!' ) ) otherlv_50= 'damaged'
            	            {
            	            // InternalMcmodel.g:6202:11: ( (lv_damagedDefined_49_0= '!' ) )
            	            // InternalMcmodel.g:6203:12: (lv_damagedDefined_49_0= '!' )
            	            {
            	            // InternalMcmodel.g:6203:12: (lv_damagedDefined_49_0= '!' )
            	            // InternalMcmodel.g:6204:13: lv_damagedDefined_49_0= '!'
            	            {
            	            lv_damagedDefined_49_0=(Token)match(input,60,FOLLOW_48); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              													newLeafNode(lv_damagedDefined_49_0, grammarAccess.getOverridePredicate_4Access().getDamagedDefinedExclamationMarkKeyword_1_5_1_0_0_0());
            	              												
            	            }
            	            if ( state.backtracking==0 ) {

            	              													if (current==null) {
            	              														current = createModelElement(grammarAccess.getOverridePredicate_4Rule());
            	              													}
            	              													setWithLastConsumed(current, "damagedDefined", true, "!");
            	              												
            	            }

            	            }


            	            }

            	            otherlv_50=(Token)match(input,67,FOLLOW_37); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              											newLeafNode(otherlv_50, grammarAccess.getOverridePredicate_4Access().getDamagedKeyword_1_5_1_0_1());
            	              										
            	            }

            	            }


            	            }
            	            break;
            	        case 2 :
            	            // InternalMcmodel.g:6222:10: ( ( (lv_damagedDefined_51_0= 'damaged' ) ) ( (otherlv_52= '!=' ( ( (lv_damaged_53_0= 'false' ) ) | otherlv_54= 'true' ) ) | ( (otherlv_55= '=' | otherlv_56= '==' ) ( ( (lv_damaged_57_0= 'true' ) ) | otherlv_58= 'false' ) ) ) )
            	            {
            	            // InternalMcmodel.g:6222:10: ( ( (lv_damagedDefined_51_0= 'damaged' ) ) ( (otherlv_52= '!=' ( ( (lv_damaged_53_0= 'false' ) ) | otherlv_54= 'true' ) ) | ( (otherlv_55= '=' | otherlv_56= '==' ) ( ( (lv_damaged_57_0= 'true' ) ) | otherlv_58= 'false' ) ) ) )
            	            // InternalMcmodel.g:6223:11: ( (lv_damagedDefined_51_0= 'damaged' ) ) ( (otherlv_52= '!=' ( ( (lv_damaged_53_0= 'false' ) ) | otherlv_54= 'true' ) ) | ( (otherlv_55= '=' | otherlv_56= '==' ) ( ( (lv_damaged_57_0= 'true' ) ) | otherlv_58= 'false' ) ) )
            	            {
            	            // InternalMcmodel.g:6223:11: ( (lv_damagedDefined_51_0= 'damaged' ) )
            	            // InternalMcmodel.g:6224:12: (lv_damagedDefined_51_0= 'damaged' )
            	            {
            	            // InternalMcmodel.g:6224:12: (lv_damagedDefined_51_0= 'damaged' )
            	            // InternalMcmodel.g:6225:13: lv_damagedDefined_51_0= 'damaged'
            	            {
            	            lv_damagedDefined_51_0=(Token)match(input,67,FOLLOW_40); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              													newLeafNode(lv_damagedDefined_51_0, grammarAccess.getOverridePredicate_4Access().getDamagedDefinedDamagedKeyword_1_5_1_1_0_0());
            	              												
            	            }
            	            if ( state.backtracking==0 ) {

            	              													if (current==null) {
            	              														current = createModelElement(grammarAccess.getOverridePredicate_4Rule());
            	              													}
            	              													setWithLastConsumed(current, "damagedDefined", true, "damaged");
            	              												
            	            }

            	            }


            	            }

            	            // InternalMcmodel.g:6237:11: ( (otherlv_52= '!=' ( ( (lv_damaged_53_0= 'false' ) ) | otherlv_54= 'true' ) ) | ( (otherlv_55= '=' | otherlv_56= '==' ) ( ( (lv_damaged_57_0= 'true' ) ) | otherlv_58= 'false' ) ) )
            	            int alt169=2;
            	            int LA169_0 = input.LA(1);

            	            if ( (LA169_0==62) ) {
            	                alt169=1;
            	            }
            	            else if ( (LA169_0==18||LA169_0==58) ) {
            	                alt169=2;
            	            }
            	            else {
            	                if (state.backtracking>0) {state.failed=true; return current;}
            	                NoViableAltException nvae =
            	                    new NoViableAltException("", 169, 0, input);

            	                throw nvae;
            	            }
            	            switch (alt169) {
            	                case 1 :
            	                    // InternalMcmodel.g:6238:12: (otherlv_52= '!=' ( ( (lv_damaged_53_0= 'false' ) ) | otherlv_54= 'true' ) )
            	                    {
            	                    // InternalMcmodel.g:6238:12: (otherlv_52= '!=' ( ( (lv_damaged_53_0= 'false' ) ) | otherlv_54= 'true' ) )
            	                    // InternalMcmodel.g:6239:13: otherlv_52= '!=' ( ( (lv_damaged_53_0= 'false' ) ) | otherlv_54= 'true' )
            	                    {
            	                    otherlv_52=(Token)match(input,62,FOLLOW_7); if (state.failed) return current;
            	                    if ( state.backtracking==0 ) {

            	                      													newLeafNode(otherlv_52, grammarAccess.getOverridePredicate_4Access().getExclamationMarkEqualsSignKeyword_1_5_1_1_1_0_0());
            	                      												
            	                    }
            	                    // InternalMcmodel.g:6243:13: ( ( (lv_damaged_53_0= 'false' ) ) | otherlv_54= 'true' )
            	                    int alt166=2;
            	                    int LA166_0 = input.LA(1);

            	                    if ( (LA166_0==21) ) {
            	                        alt166=1;
            	                    }
            	                    else if ( (LA166_0==20) ) {
            	                        alt166=2;
            	                    }
            	                    else {
            	                        if (state.backtracking>0) {state.failed=true; return current;}
            	                        NoViableAltException nvae =
            	                            new NoViableAltException("", 166, 0, input);

            	                        throw nvae;
            	                    }
            	                    switch (alt166) {
            	                        case 1 :
            	                            // InternalMcmodel.g:6244:14: ( (lv_damaged_53_0= 'false' ) )
            	                            {
            	                            // InternalMcmodel.g:6244:14: ( (lv_damaged_53_0= 'false' ) )
            	                            // InternalMcmodel.g:6245:15: (lv_damaged_53_0= 'false' )
            	                            {
            	                            // InternalMcmodel.g:6245:15: (lv_damaged_53_0= 'false' )
            	                            // InternalMcmodel.g:6246:16: lv_damaged_53_0= 'false'
            	                            {
            	                            lv_damaged_53_0=(Token)match(input,21,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              																newLeafNode(lv_damaged_53_0, grammarAccess.getOverridePredicate_4Access().getDamagedFalseKeyword_1_5_1_1_1_0_1_0_0());
            	                              															
            	                            }
            	                            if ( state.backtracking==0 ) {

            	                              																if (current==null) {
            	                              																	current = createModelElement(grammarAccess.getOverridePredicate_4Rule());
            	                              																}
            	                              																setWithLastConsumed(current, "damaged", true, "false");
            	                              															
            	                            }

            	                            }


            	                            }


            	                            }
            	                            break;
            	                        case 2 :
            	                            // InternalMcmodel.g:6259:14: otherlv_54= 'true'
            	                            {
            	                            otherlv_54=(Token)match(input,20,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_54, grammarAccess.getOverridePredicate_4Access().getTrueKeyword_1_5_1_1_1_0_1_1());
            	                              													
            	                            }

            	                            }
            	                            break;

            	                    }


            	                    }


            	                    }
            	                    break;
            	                case 2 :
            	                    // InternalMcmodel.g:6266:12: ( (otherlv_55= '=' | otherlv_56= '==' ) ( ( (lv_damaged_57_0= 'true' ) ) | otherlv_58= 'false' ) )
            	                    {
            	                    // InternalMcmodel.g:6266:12: ( (otherlv_55= '=' | otherlv_56= '==' ) ( ( (lv_damaged_57_0= 'true' ) ) | otherlv_58= 'false' ) )
            	                    // InternalMcmodel.g:6267:13: (otherlv_55= '=' | otherlv_56= '==' ) ( ( (lv_damaged_57_0= 'true' ) ) | otherlv_58= 'false' )
            	                    {
            	                    // InternalMcmodel.g:6267:13: (otherlv_55= '=' | otherlv_56= '==' )
            	                    int alt167=2;
            	                    int LA167_0 = input.LA(1);

            	                    if ( (LA167_0==18) ) {
            	                        alt167=1;
            	                    }
            	                    else if ( (LA167_0==58) ) {
            	                        alt167=2;
            	                    }
            	                    else {
            	                        if (state.backtracking>0) {state.failed=true; return current;}
            	                        NoViableAltException nvae =
            	                            new NoViableAltException("", 167, 0, input);

            	                        throw nvae;
            	                    }
            	                    switch (alt167) {
            	                        case 1 :
            	                            // InternalMcmodel.g:6268:14: otherlv_55= '='
            	                            {
            	                            otherlv_55=(Token)match(input,18,FOLLOW_7); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_55, grammarAccess.getOverridePredicate_4Access().getEqualsSignKeyword_1_5_1_1_1_1_0_0());
            	                              													
            	                            }

            	                            }
            	                            break;
            	                        case 2 :
            	                            // InternalMcmodel.g:6273:14: otherlv_56= '=='
            	                            {
            	                            otherlv_56=(Token)match(input,58,FOLLOW_7); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_56, grammarAccess.getOverridePredicate_4Access().getEqualsSignEqualsSignKeyword_1_5_1_1_1_1_0_1());
            	                              													
            	                            }

            	                            }
            	                            break;

            	                    }

            	                    // InternalMcmodel.g:6278:13: ( ( (lv_damaged_57_0= 'true' ) ) | otherlv_58= 'false' )
            	                    int alt168=2;
            	                    int LA168_0 = input.LA(1);

            	                    if ( (LA168_0==20) ) {
            	                        alt168=1;
            	                    }
            	                    else if ( (LA168_0==21) ) {
            	                        alt168=2;
            	                    }
            	                    else {
            	                        if (state.backtracking>0) {state.failed=true; return current;}
            	                        NoViableAltException nvae =
            	                            new NoViableAltException("", 168, 0, input);

            	                        throw nvae;
            	                    }
            	                    switch (alt168) {
            	                        case 1 :
            	                            // InternalMcmodel.g:6279:14: ( (lv_damaged_57_0= 'true' ) )
            	                            {
            	                            // InternalMcmodel.g:6279:14: ( (lv_damaged_57_0= 'true' ) )
            	                            // InternalMcmodel.g:6280:15: (lv_damaged_57_0= 'true' )
            	                            {
            	                            // InternalMcmodel.g:6280:15: (lv_damaged_57_0= 'true' )
            	                            // InternalMcmodel.g:6281:16: lv_damaged_57_0= 'true'
            	                            {
            	                            lv_damaged_57_0=(Token)match(input,20,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              																newLeafNode(lv_damaged_57_0, grammarAccess.getOverridePredicate_4Access().getDamagedTrueKeyword_1_5_1_1_1_1_1_0_0());
            	                              															
            	                            }
            	                            if ( state.backtracking==0 ) {

            	                              																if (current==null) {
            	                              																	current = createModelElement(grammarAccess.getOverridePredicate_4Rule());
            	                              																}
            	                              																setWithLastConsumed(current, "damaged", true, "true");
            	                              															
            	                            }

            	                            }


            	                            }


            	                            }
            	                            break;
            	                        case 2 :
            	                            // InternalMcmodel.g:6294:14: otherlv_58= 'false'
            	                            {
            	                            otherlv_58=(Token)match(input,21,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_58, grammarAccess.getOverridePredicate_4Access().getFalseKeyword_1_5_1_1_1_1_1_1());
            	                              													
            	                            }

            	                            }
            	                            break;

            	                    }


            	                    }


            	                    }
            	                    break;

            	            }


            	            }


            	            }
            	            break;

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getOverridePredicate_4Access().getUnorderedGroup_1());

            	    }


            	    }


            	    }
            	    break;
            	case 7 :
            	    // InternalMcmodel.g:6309:4: ({...}? => ( ({...}? => (otherlv_59= '&' ( ( ( (lv_lefthandedDefined_60_0= '!' ) ) otherlv_61= 'lefthanded' ) | ( ( (lv_lefthandedDefined_62_0= 'lefthanded' ) ) ( (otherlv_63= '!=' ( ( (lv_lefthanded_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_lefthanded_68_0= 'true' ) ) | otherlv_69= 'false' ) ) ) ) ) ) ) ) )
            	    {
            	    // InternalMcmodel.g:6309:4: ({...}? => ( ({...}? => (otherlv_59= '&' ( ( ( (lv_lefthandedDefined_60_0= '!' ) ) otherlv_61= 'lefthanded' ) | ( ( (lv_lefthandedDefined_62_0= 'lefthanded' ) ) ( (otherlv_63= '!=' ( ( (lv_lefthanded_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_lefthanded_68_0= 'true' ) ) | otherlv_69= 'false' ) ) ) ) ) ) ) ) )
            	    // InternalMcmodel.g:6310:5: {...}? => ( ({...}? => (otherlv_59= '&' ( ( ( (lv_lefthandedDefined_60_0= '!' ) ) otherlv_61= 'lefthanded' ) | ( ( (lv_lefthandedDefined_62_0= 'lefthanded' ) ) ( (otherlv_63= '!=' ( ( (lv_lefthanded_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_lefthanded_68_0= 'true' ) ) | otherlv_69= 'false' ) ) ) ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_4Access().getUnorderedGroup_1(), 6) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_4", "getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_4Access().getUnorderedGroup_1(), 6)");
            	    }
            	    // InternalMcmodel.g:6310:116: ( ({...}? => (otherlv_59= '&' ( ( ( (lv_lefthandedDefined_60_0= '!' ) ) otherlv_61= 'lefthanded' ) | ( ( (lv_lefthandedDefined_62_0= 'lefthanded' ) ) ( (otherlv_63= '!=' ( ( (lv_lefthanded_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_lefthanded_68_0= 'true' ) ) | otherlv_69= 'false' ) ) ) ) ) ) ) )
            	    // InternalMcmodel.g:6311:6: ({...}? => (otherlv_59= '&' ( ( ( (lv_lefthandedDefined_60_0= '!' ) ) otherlv_61= 'lefthanded' ) | ( ( (lv_lefthandedDefined_62_0= 'lefthanded' ) ) ( (otherlv_63= '!=' ( ( (lv_lefthanded_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_lefthanded_68_0= 'true' ) ) | otherlv_69= 'false' ) ) ) ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getOverridePredicate_4Access().getUnorderedGroup_1(), 6);
            	    // InternalMcmodel.g:6314:9: ({...}? => (otherlv_59= '&' ( ( ( (lv_lefthandedDefined_60_0= '!' ) ) otherlv_61= 'lefthanded' ) | ( ( (lv_lefthandedDefined_62_0= 'lefthanded' ) ) ( (otherlv_63= '!=' ( ( (lv_lefthanded_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_lefthanded_68_0= 'true' ) ) | otherlv_69= 'false' ) ) ) ) ) ) )
            	    // InternalMcmodel.g:6314:10: {...}? => (otherlv_59= '&' ( ( ( (lv_lefthandedDefined_60_0= '!' ) ) otherlv_61= 'lefthanded' ) | ( ( (lv_lefthandedDefined_62_0= 'lefthanded' ) ) ( (otherlv_63= '!=' ( ( (lv_lefthanded_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_lefthanded_68_0= 'true' ) ) | otherlv_69= 'false' ) ) ) ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_4", "true");
            	    }
            	    // InternalMcmodel.g:6314:19: (otherlv_59= '&' ( ( ( (lv_lefthandedDefined_60_0= '!' ) ) otherlv_61= 'lefthanded' ) | ( ( (lv_lefthandedDefined_62_0= 'lefthanded' ) ) ( (otherlv_63= '!=' ( ( (lv_lefthanded_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_lefthanded_68_0= 'true' ) ) | otherlv_69= 'false' ) ) ) ) ) )
            	    // InternalMcmodel.g:6314:20: otherlv_59= '&' ( ( ( (lv_lefthandedDefined_60_0= '!' ) ) otherlv_61= 'lefthanded' ) | ( ( (lv_lefthandedDefined_62_0= 'lefthanded' ) ) ( (otherlv_63= '!=' ( ( (lv_lefthanded_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_lefthanded_68_0= 'true' ) ) | otherlv_69= 'false' ) ) ) ) )
            	    {
            	    otherlv_59=(Token)match(input,59,FOLLOW_49); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_59, grammarAccess.getOverridePredicate_4Access().getAmpersandKeyword_1_6_0());
            	      								
            	    }
            	    // InternalMcmodel.g:6318:9: ( ( ( (lv_lefthandedDefined_60_0= '!' ) ) otherlv_61= 'lefthanded' ) | ( ( (lv_lefthandedDefined_62_0= 'lefthanded' ) ) ( (otherlv_63= '!=' ( ( (lv_lefthanded_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_lefthanded_68_0= 'true' ) ) | otherlv_69= 'false' ) ) ) ) )
            	    int alt175=2;
            	    int LA175_0 = input.LA(1);

            	    if ( (LA175_0==60) ) {
            	        alt175=1;
            	    }
            	    else if ( (LA175_0==68) ) {
            	        alt175=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 175, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt175) {
            	        case 1 :
            	            // InternalMcmodel.g:6319:10: ( ( (lv_lefthandedDefined_60_0= '!' ) ) otherlv_61= 'lefthanded' )
            	            {
            	            // InternalMcmodel.g:6319:10: ( ( (lv_lefthandedDefined_60_0= '!' ) ) otherlv_61= 'lefthanded' )
            	            // InternalMcmodel.g:6320:11: ( (lv_lefthandedDefined_60_0= '!' ) ) otherlv_61= 'lefthanded'
            	            {
            	            // InternalMcmodel.g:6320:11: ( (lv_lefthandedDefined_60_0= '!' ) )
            	            // InternalMcmodel.g:6321:12: (lv_lefthandedDefined_60_0= '!' )
            	            {
            	            // InternalMcmodel.g:6321:12: (lv_lefthandedDefined_60_0= '!' )
            	            // InternalMcmodel.g:6322:13: lv_lefthandedDefined_60_0= '!'
            	            {
            	            lv_lefthandedDefined_60_0=(Token)match(input,60,FOLLOW_50); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              													newLeafNode(lv_lefthandedDefined_60_0, grammarAccess.getOverridePredicate_4Access().getLefthandedDefinedExclamationMarkKeyword_1_6_1_0_0_0());
            	              												
            	            }
            	            if ( state.backtracking==0 ) {

            	              													if (current==null) {
            	              														current = createModelElement(grammarAccess.getOverridePredicate_4Rule());
            	              													}
            	              													setWithLastConsumed(current, "lefthandedDefined", true, "!");
            	              												
            	            }

            	            }


            	            }

            	            otherlv_61=(Token)match(input,68,FOLLOW_37); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              											newLeafNode(otherlv_61, grammarAccess.getOverridePredicate_4Access().getLefthandedKeyword_1_6_1_0_1());
            	              										
            	            }

            	            }


            	            }
            	            break;
            	        case 2 :
            	            // InternalMcmodel.g:6340:10: ( ( (lv_lefthandedDefined_62_0= 'lefthanded' ) ) ( (otherlv_63= '!=' ( ( (lv_lefthanded_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_lefthanded_68_0= 'true' ) ) | otherlv_69= 'false' ) ) ) )
            	            {
            	            // InternalMcmodel.g:6340:10: ( ( (lv_lefthandedDefined_62_0= 'lefthanded' ) ) ( (otherlv_63= '!=' ( ( (lv_lefthanded_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_lefthanded_68_0= 'true' ) ) | otherlv_69= 'false' ) ) ) )
            	            // InternalMcmodel.g:6341:11: ( (lv_lefthandedDefined_62_0= 'lefthanded' ) ) ( (otherlv_63= '!=' ( ( (lv_lefthanded_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_lefthanded_68_0= 'true' ) ) | otherlv_69= 'false' ) ) )
            	            {
            	            // InternalMcmodel.g:6341:11: ( (lv_lefthandedDefined_62_0= 'lefthanded' ) )
            	            // InternalMcmodel.g:6342:12: (lv_lefthandedDefined_62_0= 'lefthanded' )
            	            {
            	            // InternalMcmodel.g:6342:12: (lv_lefthandedDefined_62_0= 'lefthanded' )
            	            // InternalMcmodel.g:6343:13: lv_lefthandedDefined_62_0= 'lefthanded'
            	            {
            	            lv_lefthandedDefined_62_0=(Token)match(input,68,FOLLOW_40); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              													newLeafNode(lv_lefthandedDefined_62_0, grammarAccess.getOverridePredicate_4Access().getLefthandedDefinedLefthandedKeyword_1_6_1_1_0_0());
            	              												
            	            }
            	            if ( state.backtracking==0 ) {

            	              													if (current==null) {
            	              														current = createModelElement(grammarAccess.getOverridePredicate_4Rule());
            	              													}
            	              													setWithLastConsumed(current, "lefthandedDefined", true, "lefthanded");
            	              												
            	            }

            	            }


            	            }

            	            // InternalMcmodel.g:6355:11: ( (otherlv_63= '!=' ( ( (lv_lefthanded_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_lefthanded_68_0= 'true' ) ) | otherlv_69= 'false' ) ) )
            	            int alt174=2;
            	            int LA174_0 = input.LA(1);

            	            if ( (LA174_0==62) ) {
            	                alt174=1;
            	            }
            	            else if ( (LA174_0==18||LA174_0==58) ) {
            	                alt174=2;
            	            }
            	            else {
            	                if (state.backtracking>0) {state.failed=true; return current;}
            	                NoViableAltException nvae =
            	                    new NoViableAltException("", 174, 0, input);

            	                throw nvae;
            	            }
            	            switch (alt174) {
            	                case 1 :
            	                    // InternalMcmodel.g:6356:12: (otherlv_63= '!=' ( ( (lv_lefthanded_64_0= 'false' ) ) | otherlv_65= 'true' ) )
            	                    {
            	                    // InternalMcmodel.g:6356:12: (otherlv_63= '!=' ( ( (lv_lefthanded_64_0= 'false' ) ) | otherlv_65= 'true' ) )
            	                    // InternalMcmodel.g:6357:13: otherlv_63= '!=' ( ( (lv_lefthanded_64_0= 'false' ) ) | otherlv_65= 'true' )
            	                    {
            	                    otherlv_63=(Token)match(input,62,FOLLOW_7); if (state.failed) return current;
            	                    if ( state.backtracking==0 ) {

            	                      													newLeafNode(otherlv_63, grammarAccess.getOverridePredicate_4Access().getExclamationMarkEqualsSignKeyword_1_6_1_1_1_0_0());
            	                      												
            	                    }
            	                    // InternalMcmodel.g:6361:13: ( ( (lv_lefthanded_64_0= 'false' ) ) | otherlv_65= 'true' )
            	                    int alt171=2;
            	                    int LA171_0 = input.LA(1);

            	                    if ( (LA171_0==21) ) {
            	                        alt171=1;
            	                    }
            	                    else if ( (LA171_0==20) ) {
            	                        alt171=2;
            	                    }
            	                    else {
            	                        if (state.backtracking>0) {state.failed=true; return current;}
            	                        NoViableAltException nvae =
            	                            new NoViableAltException("", 171, 0, input);

            	                        throw nvae;
            	                    }
            	                    switch (alt171) {
            	                        case 1 :
            	                            // InternalMcmodel.g:6362:14: ( (lv_lefthanded_64_0= 'false' ) )
            	                            {
            	                            // InternalMcmodel.g:6362:14: ( (lv_lefthanded_64_0= 'false' ) )
            	                            // InternalMcmodel.g:6363:15: (lv_lefthanded_64_0= 'false' )
            	                            {
            	                            // InternalMcmodel.g:6363:15: (lv_lefthanded_64_0= 'false' )
            	                            // InternalMcmodel.g:6364:16: lv_lefthanded_64_0= 'false'
            	                            {
            	                            lv_lefthanded_64_0=(Token)match(input,21,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              																newLeafNode(lv_lefthanded_64_0, grammarAccess.getOverridePredicate_4Access().getLefthandedFalseKeyword_1_6_1_1_1_0_1_0_0());
            	                              															
            	                            }
            	                            if ( state.backtracking==0 ) {

            	                              																if (current==null) {
            	                              																	current = createModelElement(grammarAccess.getOverridePredicate_4Rule());
            	                              																}
            	                              																setWithLastConsumed(current, "lefthanded", true, "false");
            	                              															
            	                            }

            	                            }


            	                            }


            	                            }
            	                            break;
            	                        case 2 :
            	                            // InternalMcmodel.g:6377:14: otherlv_65= 'true'
            	                            {
            	                            otherlv_65=(Token)match(input,20,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_65, grammarAccess.getOverridePredicate_4Access().getTrueKeyword_1_6_1_1_1_0_1_1());
            	                              													
            	                            }

            	                            }
            	                            break;

            	                    }


            	                    }


            	                    }
            	                    break;
            	                case 2 :
            	                    // InternalMcmodel.g:6384:12: ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_lefthanded_68_0= 'true' ) ) | otherlv_69= 'false' ) )
            	                    {
            	                    // InternalMcmodel.g:6384:12: ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_lefthanded_68_0= 'true' ) ) | otherlv_69= 'false' ) )
            	                    // InternalMcmodel.g:6385:13: (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_lefthanded_68_0= 'true' ) ) | otherlv_69= 'false' )
            	                    {
            	                    // InternalMcmodel.g:6385:13: (otherlv_66= '=' | otherlv_67= '==' )
            	                    int alt172=2;
            	                    int LA172_0 = input.LA(1);

            	                    if ( (LA172_0==18) ) {
            	                        alt172=1;
            	                    }
            	                    else if ( (LA172_0==58) ) {
            	                        alt172=2;
            	                    }
            	                    else {
            	                        if (state.backtracking>0) {state.failed=true; return current;}
            	                        NoViableAltException nvae =
            	                            new NoViableAltException("", 172, 0, input);

            	                        throw nvae;
            	                    }
            	                    switch (alt172) {
            	                        case 1 :
            	                            // InternalMcmodel.g:6386:14: otherlv_66= '='
            	                            {
            	                            otherlv_66=(Token)match(input,18,FOLLOW_7); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_66, grammarAccess.getOverridePredicate_4Access().getEqualsSignKeyword_1_6_1_1_1_1_0_0());
            	                              													
            	                            }

            	                            }
            	                            break;
            	                        case 2 :
            	                            // InternalMcmodel.g:6391:14: otherlv_67= '=='
            	                            {
            	                            otherlv_67=(Token)match(input,58,FOLLOW_7); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_67, grammarAccess.getOverridePredicate_4Access().getEqualsSignEqualsSignKeyword_1_6_1_1_1_1_0_1());
            	                              													
            	                            }

            	                            }
            	                            break;

            	                    }

            	                    // InternalMcmodel.g:6396:13: ( ( (lv_lefthanded_68_0= 'true' ) ) | otherlv_69= 'false' )
            	                    int alt173=2;
            	                    int LA173_0 = input.LA(1);

            	                    if ( (LA173_0==20) ) {
            	                        alt173=1;
            	                    }
            	                    else if ( (LA173_0==21) ) {
            	                        alt173=2;
            	                    }
            	                    else {
            	                        if (state.backtracking>0) {state.failed=true; return current;}
            	                        NoViableAltException nvae =
            	                            new NoViableAltException("", 173, 0, input);

            	                        throw nvae;
            	                    }
            	                    switch (alt173) {
            	                        case 1 :
            	                            // InternalMcmodel.g:6397:14: ( (lv_lefthanded_68_0= 'true' ) )
            	                            {
            	                            // InternalMcmodel.g:6397:14: ( (lv_lefthanded_68_0= 'true' ) )
            	                            // InternalMcmodel.g:6398:15: (lv_lefthanded_68_0= 'true' )
            	                            {
            	                            // InternalMcmodel.g:6398:15: (lv_lefthanded_68_0= 'true' )
            	                            // InternalMcmodel.g:6399:16: lv_lefthanded_68_0= 'true'
            	                            {
            	                            lv_lefthanded_68_0=(Token)match(input,20,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              																newLeafNode(lv_lefthanded_68_0, grammarAccess.getOverridePredicate_4Access().getLefthandedTrueKeyword_1_6_1_1_1_1_1_0_0());
            	                              															
            	                            }
            	                            if ( state.backtracking==0 ) {

            	                              																if (current==null) {
            	                              																	current = createModelElement(grammarAccess.getOverridePredicate_4Rule());
            	                              																}
            	                              																setWithLastConsumed(current, "lefthanded", true, "true");
            	                              															
            	                            }

            	                            }


            	                            }


            	                            }
            	                            break;
            	                        case 2 :
            	                            // InternalMcmodel.g:6412:14: otherlv_69= 'false'
            	                            {
            	                            otherlv_69=(Token)match(input,21,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_69, grammarAccess.getOverridePredicate_4Access().getFalseKeyword_1_6_1_1_1_1_1_1());
            	                              													
            	                            }

            	                            }
            	                            break;

            	                    }


            	                    }


            	                    }
            	                    break;

            	            }


            	            }


            	            }
            	            break;

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getOverridePredicate_4Access().getUnorderedGroup_1());

            	    }


            	    }


            	    }
            	    break;
            	case 8 :
            	    // InternalMcmodel.g:6427:4: ({...}? => ( ({...}? => (otherlv_70= '&' ( (lv_pullDefined_71_0= 'pull' ) ) (otherlv_72= '=' | otherlv_73= '==' ) ( (lv_pull_74_0= RULE_PERCENTAGE ) ) ) ) ) )
            	    {
            	    // InternalMcmodel.g:6427:4: ({...}? => ( ({...}? => (otherlv_70= '&' ( (lv_pullDefined_71_0= 'pull' ) ) (otherlv_72= '=' | otherlv_73= '==' ) ( (lv_pull_74_0= RULE_PERCENTAGE ) ) ) ) ) )
            	    // InternalMcmodel.g:6428:5: {...}? => ( ({...}? => (otherlv_70= '&' ( (lv_pullDefined_71_0= 'pull' ) ) (otherlv_72= '=' | otherlv_73= '==' ) ( (lv_pull_74_0= RULE_PERCENTAGE ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_4Access().getUnorderedGroup_1(), 7) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_4", "getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_4Access().getUnorderedGroup_1(), 7)");
            	    }
            	    // InternalMcmodel.g:6428:116: ( ({...}? => (otherlv_70= '&' ( (lv_pullDefined_71_0= 'pull' ) ) (otherlv_72= '=' | otherlv_73= '==' ) ( (lv_pull_74_0= RULE_PERCENTAGE ) ) ) ) )
            	    // InternalMcmodel.g:6429:6: ({...}? => (otherlv_70= '&' ( (lv_pullDefined_71_0= 'pull' ) ) (otherlv_72= '=' | otherlv_73= '==' ) ( (lv_pull_74_0= RULE_PERCENTAGE ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getOverridePredicate_4Access().getUnorderedGroup_1(), 7);
            	    // InternalMcmodel.g:6432:9: ({...}? => (otherlv_70= '&' ( (lv_pullDefined_71_0= 'pull' ) ) (otherlv_72= '=' | otherlv_73= '==' ) ( (lv_pull_74_0= RULE_PERCENTAGE ) ) ) )
            	    // InternalMcmodel.g:6432:10: {...}? => (otherlv_70= '&' ( (lv_pullDefined_71_0= 'pull' ) ) (otherlv_72= '=' | otherlv_73= '==' ) ( (lv_pull_74_0= RULE_PERCENTAGE ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_4", "true");
            	    }
            	    // InternalMcmodel.g:6432:19: (otherlv_70= '&' ( (lv_pullDefined_71_0= 'pull' ) ) (otherlv_72= '=' | otherlv_73= '==' ) ( (lv_pull_74_0= RULE_PERCENTAGE ) ) )
            	    // InternalMcmodel.g:6432:20: otherlv_70= '&' ( (lv_pullDefined_71_0= 'pull' ) ) (otherlv_72= '=' | otherlv_73= '==' ) ( (lv_pull_74_0= RULE_PERCENTAGE ) )
            	    {
            	    otherlv_70=(Token)match(input,59,FOLLOW_51); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_70, grammarAccess.getOverridePredicate_4Access().getAmpersandKeyword_1_7_0());
            	      								
            	    }
            	    // InternalMcmodel.g:6436:9: ( (lv_pullDefined_71_0= 'pull' ) )
            	    // InternalMcmodel.g:6437:10: (lv_pullDefined_71_0= 'pull' )
            	    {
            	    // InternalMcmodel.g:6437:10: (lv_pullDefined_71_0= 'pull' )
            	    // InternalMcmodel.g:6438:11: lv_pullDefined_71_0= 'pull'
            	    {
            	    lv_pullDefined_71_0=(Token)match(input,69,FOLLOW_35); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											newLeafNode(lv_pullDefined_71_0, grammarAccess.getOverridePredicate_4Access().getPullDefinedPullKeyword_1_7_1_0());
            	      										
            	    }
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElement(grammarAccess.getOverridePredicate_4Rule());
            	      											}
            	      											setWithLastConsumed(current, "pullDefined", true, "pull");
            	      										
            	    }

            	    }


            	    }

            	    // InternalMcmodel.g:6450:9: (otherlv_72= '=' | otherlv_73= '==' )
            	    int alt176=2;
            	    int LA176_0 = input.LA(1);

            	    if ( (LA176_0==18) ) {
            	        alt176=1;
            	    }
            	    else if ( (LA176_0==58) ) {
            	        alt176=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 176, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt176) {
            	        case 1 :
            	            // InternalMcmodel.g:6451:10: otherlv_72= '='
            	            {
            	            otherlv_72=(Token)match(input,18,FOLLOW_36); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(otherlv_72, grammarAccess.getOverridePredicate_4Access().getEqualsSignKeyword_1_7_2_0());
            	              									
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalMcmodel.g:6456:10: otherlv_73= '=='
            	            {
            	            otherlv_73=(Token)match(input,58,FOLLOW_36); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(otherlv_73, grammarAccess.getOverridePredicate_4Access().getEqualsSignEqualsSignKeyword_1_7_2_1());
            	              									
            	            }

            	            }
            	            break;

            	    }

            	    // InternalMcmodel.g:6461:9: ( (lv_pull_74_0= RULE_PERCENTAGE ) )
            	    // InternalMcmodel.g:6462:10: (lv_pull_74_0= RULE_PERCENTAGE )
            	    {
            	    // InternalMcmodel.g:6462:10: (lv_pull_74_0= RULE_PERCENTAGE )
            	    // InternalMcmodel.g:6463:11: lv_pull_74_0= RULE_PERCENTAGE
            	    {
            	    lv_pull_74_0=(Token)match(input,RULE_PERCENTAGE,FOLLOW_37); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											newLeafNode(lv_pull_74_0, grammarAccess.getOverridePredicate_4Access().getPullPERCENTAGETerminalRuleCall_1_7_3_0());
            	      										
            	    }
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElement(grammarAccess.getOverridePredicate_4Rule());
            	      											}
            	      											setWithLastConsumed(
            	      												current,
            	      												"pull",
            	      												lv_pull_74_0,
            	      												"com.raptor.mcmodel.Mcmodel.PERCENTAGE");
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getOverridePredicate_4Access().getUnorderedGroup_1());

            	    }


            	    }


            	    }
            	    break;
            	case 9 :
            	    // InternalMcmodel.g:6485:4: ({...}? => ( ({...}? => (otherlv_75= '&' ( ( ( (lv_pullingDefined_76_0= '!' ) ) otherlv_77= 'pulling' ) | ( ( (lv_pullingDefined_78_0= 'pulling' ) ) ( (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) ) | ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) ) ) ) ) ) ) ) )
            	    {
            	    // InternalMcmodel.g:6485:4: ({...}? => ( ({...}? => (otherlv_75= '&' ( ( ( (lv_pullingDefined_76_0= '!' ) ) otherlv_77= 'pulling' ) | ( ( (lv_pullingDefined_78_0= 'pulling' ) ) ( (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) ) | ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) ) ) ) ) ) ) ) )
            	    // InternalMcmodel.g:6486:5: {...}? => ( ({...}? => (otherlv_75= '&' ( ( ( (lv_pullingDefined_76_0= '!' ) ) otherlv_77= 'pulling' ) | ( ( (lv_pullingDefined_78_0= 'pulling' ) ) ( (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) ) | ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) ) ) ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_4Access().getUnorderedGroup_1(), 8) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_4", "getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_4Access().getUnorderedGroup_1(), 8)");
            	    }
            	    // InternalMcmodel.g:6486:116: ( ({...}? => (otherlv_75= '&' ( ( ( (lv_pullingDefined_76_0= '!' ) ) otherlv_77= 'pulling' ) | ( ( (lv_pullingDefined_78_0= 'pulling' ) ) ( (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) ) | ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) ) ) ) ) ) ) )
            	    // InternalMcmodel.g:6487:6: ({...}? => (otherlv_75= '&' ( ( ( (lv_pullingDefined_76_0= '!' ) ) otherlv_77= 'pulling' ) | ( ( (lv_pullingDefined_78_0= 'pulling' ) ) ( (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) ) | ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) ) ) ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getOverridePredicate_4Access().getUnorderedGroup_1(), 8);
            	    // InternalMcmodel.g:6490:9: ({...}? => (otherlv_75= '&' ( ( ( (lv_pullingDefined_76_0= '!' ) ) otherlv_77= 'pulling' ) | ( ( (lv_pullingDefined_78_0= 'pulling' ) ) ( (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) ) | ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) ) ) ) ) ) )
            	    // InternalMcmodel.g:6490:10: {...}? => (otherlv_75= '&' ( ( ( (lv_pullingDefined_76_0= '!' ) ) otherlv_77= 'pulling' ) | ( ( (lv_pullingDefined_78_0= 'pulling' ) ) ( (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) ) | ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) ) ) ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_4", "true");
            	    }
            	    // InternalMcmodel.g:6490:19: (otherlv_75= '&' ( ( ( (lv_pullingDefined_76_0= '!' ) ) otherlv_77= 'pulling' ) | ( ( (lv_pullingDefined_78_0= 'pulling' ) ) ( (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) ) | ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) ) ) ) ) )
            	    // InternalMcmodel.g:6490:20: otherlv_75= '&' ( ( ( (lv_pullingDefined_76_0= '!' ) ) otherlv_77= 'pulling' ) | ( ( (lv_pullingDefined_78_0= 'pulling' ) ) ( (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) ) | ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) ) ) ) )
            	    {
            	    otherlv_75=(Token)match(input,59,FOLLOW_52); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_75, grammarAccess.getOverridePredicate_4Access().getAmpersandKeyword_1_8_0());
            	      								
            	    }
            	    // InternalMcmodel.g:6494:9: ( ( ( (lv_pullingDefined_76_0= '!' ) ) otherlv_77= 'pulling' ) | ( ( (lv_pullingDefined_78_0= 'pulling' ) ) ( (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) ) | ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) ) ) ) )
            	    int alt181=2;
            	    int LA181_0 = input.LA(1);

            	    if ( (LA181_0==60) ) {
            	        alt181=1;
            	    }
            	    else if ( (LA181_0==70) ) {
            	        alt181=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 181, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt181) {
            	        case 1 :
            	            // InternalMcmodel.g:6495:10: ( ( (lv_pullingDefined_76_0= '!' ) ) otherlv_77= 'pulling' )
            	            {
            	            // InternalMcmodel.g:6495:10: ( ( (lv_pullingDefined_76_0= '!' ) ) otherlv_77= 'pulling' )
            	            // InternalMcmodel.g:6496:11: ( (lv_pullingDefined_76_0= '!' ) ) otherlv_77= 'pulling'
            	            {
            	            // InternalMcmodel.g:6496:11: ( (lv_pullingDefined_76_0= '!' ) )
            	            // InternalMcmodel.g:6497:12: (lv_pullingDefined_76_0= '!' )
            	            {
            	            // InternalMcmodel.g:6497:12: (lv_pullingDefined_76_0= '!' )
            	            // InternalMcmodel.g:6498:13: lv_pullingDefined_76_0= '!'
            	            {
            	            lv_pullingDefined_76_0=(Token)match(input,60,FOLLOW_53); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              													newLeafNode(lv_pullingDefined_76_0, grammarAccess.getOverridePredicate_4Access().getPullingDefinedExclamationMarkKeyword_1_8_1_0_0_0());
            	              												
            	            }
            	            if ( state.backtracking==0 ) {

            	              													if (current==null) {
            	              														current = createModelElement(grammarAccess.getOverridePredicate_4Rule());
            	              													}
            	              													setWithLastConsumed(current, "pullingDefined", true, "!");
            	              												
            	            }

            	            }


            	            }

            	            otherlv_77=(Token)match(input,70,FOLLOW_37); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              											newLeafNode(otherlv_77, grammarAccess.getOverridePredicate_4Access().getPullingKeyword_1_8_1_0_1());
            	              										
            	            }

            	            }


            	            }
            	            break;
            	        case 2 :
            	            // InternalMcmodel.g:6516:10: ( ( (lv_pullingDefined_78_0= 'pulling' ) ) ( (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) ) | ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) ) ) )
            	            {
            	            // InternalMcmodel.g:6516:10: ( ( (lv_pullingDefined_78_0= 'pulling' ) ) ( (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) ) | ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) ) ) )
            	            // InternalMcmodel.g:6517:11: ( (lv_pullingDefined_78_0= 'pulling' ) ) ( (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) ) | ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) ) )
            	            {
            	            // InternalMcmodel.g:6517:11: ( (lv_pullingDefined_78_0= 'pulling' ) )
            	            // InternalMcmodel.g:6518:12: (lv_pullingDefined_78_0= 'pulling' )
            	            {
            	            // InternalMcmodel.g:6518:12: (lv_pullingDefined_78_0= 'pulling' )
            	            // InternalMcmodel.g:6519:13: lv_pullingDefined_78_0= 'pulling'
            	            {
            	            lv_pullingDefined_78_0=(Token)match(input,70,FOLLOW_40); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              													newLeafNode(lv_pullingDefined_78_0, grammarAccess.getOverridePredicate_4Access().getPullingDefinedPullingKeyword_1_8_1_1_0_0());
            	              												
            	            }
            	            if ( state.backtracking==0 ) {

            	              													if (current==null) {
            	              														current = createModelElement(grammarAccess.getOverridePredicate_4Rule());
            	              													}
            	              													setWithLastConsumed(current, "pullingDefined", true, "pulling");
            	              												
            	            }

            	            }


            	            }

            	            // InternalMcmodel.g:6531:11: ( (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) ) | ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) ) )
            	            int alt180=2;
            	            int LA180_0 = input.LA(1);

            	            if ( (LA180_0==62) ) {
            	                alt180=1;
            	            }
            	            else if ( (LA180_0==18||LA180_0==58) ) {
            	                alt180=2;
            	            }
            	            else {
            	                if (state.backtracking>0) {state.failed=true; return current;}
            	                NoViableAltException nvae =
            	                    new NoViableAltException("", 180, 0, input);

            	                throw nvae;
            	            }
            	            switch (alt180) {
            	                case 1 :
            	                    // InternalMcmodel.g:6532:12: (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) )
            	                    {
            	                    // InternalMcmodel.g:6532:12: (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) )
            	                    // InternalMcmodel.g:6533:13: otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' )
            	                    {
            	                    otherlv_79=(Token)match(input,62,FOLLOW_7); if (state.failed) return current;
            	                    if ( state.backtracking==0 ) {

            	                      													newLeafNode(otherlv_79, grammarAccess.getOverridePredicate_4Access().getExclamationMarkEqualsSignKeyword_1_8_1_1_1_0_0());
            	                      												
            	                    }
            	                    // InternalMcmodel.g:6537:13: ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' )
            	                    int alt177=2;
            	                    int LA177_0 = input.LA(1);

            	                    if ( (LA177_0==21) ) {
            	                        alt177=1;
            	                    }
            	                    else if ( (LA177_0==20) ) {
            	                        alt177=2;
            	                    }
            	                    else {
            	                        if (state.backtracking>0) {state.failed=true; return current;}
            	                        NoViableAltException nvae =
            	                            new NoViableAltException("", 177, 0, input);

            	                        throw nvae;
            	                    }
            	                    switch (alt177) {
            	                        case 1 :
            	                            // InternalMcmodel.g:6538:14: ( (lv_pulling_80_0= 'false' ) )
            	                            {
            	                            // InternalMcmodel.g:6538:14: ( (lv_pulling_80_0= 'false' ) )
            	                            // InternalMcmodel.g:6539:15: (lv_pulling_80_0= 'false' )
            	                            {
            	                            // InternalMcmodel.g:6539:15: (lv_pulling_80_0= 'false' )
            	                            // InternalMcmodel.g:6540:16: lv_pulling_80_0= 'false'
            	                            {
            	                            lv_pulling_80_0=(Token)match(input,21,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              																newLeafNode(lv_pulling_80_0, grammarAccess.getOverridePredicate_4Access().getPullingFalseKeyword_1_8_1_1_1_0_1_0_0());
            	                              															
            	                            }
            	                            if ( state.backtracking==0 ) {

            	                              																if (current==null) {
            	                              																	current = createModelElement(grammarAccess.getOverridePredicate_4Rule());
            	                              																}
            	                              																setWithLastConsumed(current, "pulling", true, "false");
            	                              															
            	                            }

            	                            }


            	                            }


            	                            }
            	                            break;
            	                        case 2 :
            	                            // InternalMcmodel.g:6553:14: otherlv_81= 'true'
            	                            {
            	                            otherlv_81=(Token)match(input,20,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_81, grammarAccess.getOverridePredicate_4Access().getTrueKeyword_1_8_1_1_1_0_1_1());
            	                              													
            	                            }

            	                            }
            	                            break;

            	                    }


            	                    }


            	                    }
            	                    break;
            	                case 2 :
            	                    // InternalMcmodel.g:6560:12: ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) )
            	                    {
            	                    // InternalMcmodel.g:6560:12: ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) )
            	                    // InternalMcmodel.g:6561:13: (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' )
            	                    {
            	                    // InternalMcmodel.g:6561:13: (otherlv_82= '=' | otherlv_83= '==' )
            	                    int alt178=2;
            	                    int LA178_0 = input.LA(1);

            	                    if ( (LA178_0==18) ) {
            	                        alt178=1;
            	                    }
            	                    else if ( (LA178_0==58) ) {
            	                        alt178=2;
            	                    }
            	                    else {
            	                        if (state.backtracking>0) {state.failed=true; return current;}
            	                        NoViableAltException nvae =
            	                            new NoViableAltException("", 178, 0, input);

            	                        throw nvae;
            	                    }
            	                    switch (alt178) {
            	                        case 1 :
            	                            // InternalMcmodel.g:6562:14: otherlv_82= '='
            	                            {
            	                            otherlv_82=(Token)match(input,18,FOLLOW_7); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_82, grammarAccess.getOverridePredicate_4Access().getEqualsSignKeyword_1_8_1_1_1_1_0_0());
            	                              													
            	                            }

            	                            }
            	                            break;
            	                        case 2 :
            	                            // InternalMcmodel.g:6567:14: otherlv_83= '=='
            	                            {
            	                            otherlv_83=(Token)match(input,58,FOLLOW_7); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_83, grammarAccess.getOverridePredicate_4Access().getEqualsSignEqualsSignKeyword_1_8_1_1_1_1_0_1());
            	                              													
            	                            }

            	                            }
            	                            break;

            	                    }

            	                    // InternalMcmodel.g:6572:13: ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' )
            	                    int alt179=2;
            	                    int LA179_0 = input.LA(1);

            	                    if ( (LA179_0==20) ) {
            	                        alt179=1;
            	                    }
            	                    else if ( (LA179_0==21) ) {
            	                        alt179=2;
            	                    }
            	                    else {
            	                        if (state.backtracking>0) {state.failed=true; return current;}
            	                        NoViableAltException nvae =
            	                            new NoViableAltException("", 179, 0, input);

            	                        throw nvae;
            	                    }
            	                    switch (alt179) {
            	                        case 1 :
            	                            // InternalMcmodel.g:6573:14: ( (lv_pulling_84_0= 'true' ) )
            	                            {
            	                            // InternalMcmodel.g:6573:14: ( (lv_pulling_84_0= 'true' ) )
            	                            // InternalMcmodel.g:6574:15: (lv_pulling_84_0= 'true' )
            	                            {
            	                            // InternalMcmodel.g:6574:15: (lv_pulling_84_0= 'true' )
            	                            // InternalMcmodel.g:6575:16: lv_pulling_84_0= 'true'
            	                            {
            	                            lv_pulling_84_0=(Token)match(input,20,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              																newLeafNode(lv_pulling_84_0, grammarAccess.getOverridePredicate_4Access().getPullingTrueKeyword_1_8_1_1_1_1_1_0_0());
            	                              															
            	                            }
            	                            if ( state.backtracking==0 ) {

            	                              																if (current==null) {
            	                              																	current = createModelElement(grammarAccess.getOverridePredicate_4Rule());
            	                              																}
            	                              																setWithLastConsumed(current, "pulling", true, "true");
            	                              															
            	                            }

            	                            }


            	                            }


            	                            }
            	                            break;
            	                        case 2 :
            	                            // InternalMcmodel.g:6588:14: otherlv_85= 'false'
            	                            {
            	                            otherlv_85=(Token)match(input,21,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_85, grammarAccess.getOverridePredicate_4Access().getFalseKeyword_1_8_1_1_1_1_1_1());
            	                              													
            	                            }

            	                            }
            	                            break;

            	                    }


            	                    }


            	                    }
            	                    break;

            	            }


            	            }


            	            }
            	            break;

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getOverridePredicate_4Access().getUnorderedGroup_1());

            	    }


            	    }


            	    }
            	    break;
            	case 10 :
            	    // InternalMcmodel.g:6603:4: ({...}? => ( ({...}? => (otherlv_86= '&' ( ( ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing' ) | ( ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) ) ) ) ) ) )
            	    {
            	    // InternalMcmodel.g:6603:4: ({...}? => ( ({...}? => (otherlv_86= '&' ( ( ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing' ) | ( ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) ) ) ) ) ) )
            	    // InternalMcmodel.g:6604:5: {...}? => ( ({...}? => (otherlv_86= '&' ( ( ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing' ) | ( ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_4Access().getUnorderedGroup_1(), 9) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_4", "getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_4Access().getUnorderedGroup_1(), 9)");
            	    }
            	    // InternalMcmodel.g:6604:116: ( ({...}? => (otherlv_86= '&' ( ( ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing' ) | ( ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) ) ) ) ) )
            	    // InternalMcmodel.g:6605:6: ({...}? => (otherlv_86= '&' ( ( ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing' ) | ( ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getOverridePredicate_4Access().getUnorderedGroup_1(), 9);
            	    // InternalMcmodel.g:6608:9: ({...}? => (otherlv_86= '&' ( ( ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing' ) | ( ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) ) ) ) )
            	    // InternalMcmodel.g:6608:10: {...}? => (otherlv_86= '&' ( ( ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing' ) | ( ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_4", "true");
            	    }
            	    // InternalMcmodel.g:6608:19: (otherlv_86= '&' ( ( ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing' ) | ( ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) ) ) )
            	    // InternalMcmodel.g:6608:20: otherlv_86= '&' ( ( ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing' ) | ( ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) ) )
            	    {
            	    otherlv_86=(Token)match(input,59,FOLLOW_54); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_86, grammarAccess.getOverridePredicate_4Access().getAmpersandKeyword_1_9_0());
            	      								
            	    }
            	    // InternalMcmodel.g:6612:9: ( ( ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing' ) | ( ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) ) )
            	    int alt186=2;
            	    int LA186_0 = input.LA(1);

            	    if ( (LA186_0==60) ) {
            	        alt186=1;
            	    }
            	    else if ( (LA186_0==71) ) {
            	        alt186=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 186, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt186) {
            	        case 1 :
            	            // InternalMcmodel.g:6613:10: ( ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing' )
            	            {
            	            // InternalMcmodel.g:6613:10: ( ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing' )
            	            // InternalMcmodel.g:6614:11: ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing'
            	            {
            	            // InternalMcmodel.g:6614:11: ( (lv_throwingDefined_87_0= '!' ) )
            	            // InternalMcmodel.g:6615:12: (lv_throwingDefined_87_0= '!' )
            	            {
            	            // InternalMcmodel.g:6615:12: (lv_throwingDefined_87_0= '!' )
            	            // InternalMcmodel.g:6616:13: lv_throwingDefined_87_0= '!'
            	            {
            	            lv_throwingDefined_87_0=(Token)match(input,60,FOLLOW_55); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              													newLeafNode(lv_throwingDefined_87_0, grammarAccess.getOverridePredicate_4Access().getThrowingDefinedExclamationMarkKeyword_1_9_1_0_0_0());
            	              												
            	            }
            	            if ( state.backtracking==0 ) {

            	              													if (current==null) {
            	              														current = createModelElement(grammarAccess.getOverridePredicate_4Rule());
            	              													}
            	              													setWithLastConsumed(current, "throwingDefined", true, "!");
            	              												
            	            }

            	            }


            	            }

            	            otherlv_88=(Token)match(input,71,FOLLOW_37); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              											newLeafNode(otherlv_88, grammarAccess.getOverridePredicate_4Access().getThrowingKeyword_1_9_1_0_1());
            	              										
            	            }

            	            }


            	            }
            	            break;
            	        case 2 :
            	            // InternalMcmodel.g:6634:10: ( ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) )
            	            {
            	            // InternalMcmodel.g:6634:10: ( ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) )
            	            // InternalMcmodel.g:6635:11: ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) )
            	            {
            	            // InternalMcmodel.g:6635:11: ( (lv_throwingDefined_89_0= 'throwing' ) )
            	            // InternalMcmodel.g:6636:12: (lv_throwingDefined_89_0= 'throwing' )
            	            {
            	            // InternalMcmodel.g:6636:12: (lv_throwingDefined_89_0= 'throwing' )
            	            // InternalMcmodel.g:6637:13: lv_throwingDefined_89_0= 'throwing'
            	            {
            	            lv_throwingDefined_89_0=(Token)match(input,71,FOLLOW_40); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              													newLeafNode(lv_throwingDefined_89_0, grammarAccess.getOverridePredicate_4Access().getThrowingDefinedThrowingKeyword_1_9_1_1_0_0());
            	              												
            	            }
            	            if ( state.backtracking==0 ) {

            	              													if (current==null) {
            	              														current = createModelElement(grammarAccess.getOverridePredicate_4Rule());
            	              													}
            	              													setWithLastConsumed(current, "throwingDefined", true, "throwing");
            	              												
            	            }

            	            }


            	            }

            	            // InternalMcmodel.g:6649:11: ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) )
            	            int alt185=2;
            	            int LA185_0 = input.LA(1);

            	            if ( (LA185_0==62) ) {
            	                alt185=1;
            	            }
            	            else if ( (LA185_0==18||LA185_0==58) ) {
            	                alt185=2;
            	            }
            	            else {
            	                if (state.backtracking>0) {state.failed=true; return current;}
            	                NoViableAltException nvae =
            	                    new NoViableAltException("", 185, 0, input);

            	                throw nvae;
            	            }
            	            switch (alt185) {
            	                case 1 :
            	                    // InternalMcmodel.g:6650:12: (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) )
            	                    {
            	                    // InternalMcmodel.g:6650:12: (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) )
            	                    // InternalMcmodel.g:6651:13: otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' )
            	                    {
            	                    otherlv_90=(Token)match(input,62,FOLLOW_7); if (state.failed) return current;
            	                    if ( state.backtracking==0 ) {

            	                      													newLeafNode(otherlv_90, grammarAccess.getOverridePredicate_4Access().getExclamationMarkEqualsSignKeyword_1_9_1_1_1_0_0());
            	                      												
            	                    }
            	                    // InternalMcmodel.g:6655:13: ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' )
            	                    int alt182=2;
            	                    int LA182_0 = input.LA(1);

            	                    if ( (LA182_0==21) ) {
            	                        alt182=1;
            	                    }
            	                    else if ( (LA182_0==20) ) {
            	                        alt182=2;
            	                    }
            	                    else {
            	                        if (state.backtracking>0) {state.failed=true; return current;}
            	                        NoViableAltException nvae =
            	                            new NoViableAltException("", 182, 0, input);

            	                        throw nvae;
            	                    }
            	                    switch (alt182) {
            	                        case 1 :
            	                            // InternalMcmodel.g:6656:14: ( (lv_throwing_91_0= 'false' ) )
            	                            {
            	                            // InternalMcmodel.g:6656:14: ( (lv_throwing_91_0= 'false' ) )
            	                            // InternalMcmodel.g:6657:15: (lv_throwing_91_0= 'false' )
            	                            {
            	                            // InternalMcmodel.g:6657:15: (lv_throwing_91_0= 'false' )
            	                            // InternalMcmodel.g:6658:16: lv_throwing_91_0= 'false'
            	                            {
            	                            lv_throwing_91_0=(Token)match(input,21,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              																newLeafNode(lv_throwing_91_0, grammarAccess.getOverridePredicate_4Access().getThrowingFalseKeyword_1_9_1_1_1_0_1_0_0());
            	                              															
            	                            }
            	                            if ( state.backtracking==0 ) {

            	                              																if (current==null) {
            	                              																	current = createModelElement(grammarAccess.getOverridePredicate_4Rule());
            	                              																}
            	                              																setWithLastConsumed(current, "throwing", true, "false");
            	                              															
            	                            }

            	                            }


            	                            }


            	                            }
            	                            break;
            	                        case 2 :
            	                            // InternalMcmodel.g:6671:14: otherlv_92= 'true'
            	                            {
            	                            otherlv_92=(Token)match(input,20,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_92, grammarAccess.getOverridePredicate_4Access().getTrueKeyword_1_9_1_1_1_0_1_1());
            	                              													
            	                            }

            	                            }
            	                            break;

            	                    }


            	                    }


            	                    }
            	                    break;
            	                case 2 :
            	                    // InternalMcmodel.g:6678:12: ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) )
            	                    {
            	                    // InternalMcmodel.g:6678:12: ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) )
            	                    // InternalMcmodel.g:6679:13: (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' )
            	                    {
            	                    // InternalMcmodel.g:6679:13: (otherlv_93= '=' | otherlv_94= '==' )
            	                    int alt183=2;
            	                    int LA183_0 = input.LA(1);

            	                    if ( (LA183_0==18) ) {
            	                        alt183=1;
            	                    }
            	                    else if ( (LA183_0==58) ) {
            	                        alt183=2;
            	                    }
            	                    else {
            	                        if (state.backtracking>0) {state.failed=true; return current;}
            	                        NoViableAltException nvae =
            	                            new NoViableAltException("", 183, 0, input);

            	                        throw nvae;
            	                    }
            	                    switch (alt183) {
            	                        case 1 :
            	                            // InternalMcmodel.g:6680:14: otherlv_93= '='
            	                            {
            	                            otherlv_93=(Token)match(input,18,FOLLOW_7); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_93, grammarAccess.getOverridePredicate_4Access().getEqualsSignKeyword_1_9_1_1_1_1_0_0());
            	                              													
            	                            }

            	                            }
            	                            break;
            	                        case 2 :
            	                            // InternalMcmodel.g:6685:14: otherlv_94= '=='
            	                            {
            	                            otherlv_94=(Token)match(input,58,FOLLOW_7); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_94, grammarAccess.getOverridePredicate_4Access().getEqualsSignEqualsSignKeyword_1_9_1_1_1_1_0_1());
            	                              													
            	                            }

            	                            }
            	                            break;

            	                    }

            	                    // InternalMcmodel.g:6690:13: ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' )
            	                    int alt184=2;
            	                    int LA184_0 = input.LA(1);

            	                    if ( (LA184_0==20) ) {
            	                        alt184=1;
            	                    }
            	                    else if ( (LA184_0==21) ) {
            	                        alt184=2;
            	                    }
            	                    else {
            	                        if (state.backtracking>0) {state.failed=true; return current;}
            	                        NoViableAltException nvae =
            	                            new NoViableAltException("", 184, 0, input);

            	                        throw nvae;
            	                    }
            	                    switch (alt184) {
            	                        case 1 :
            	                            // InternalMcmodel.g:6691:14: ( (lv_throwing_95_0= 'true' ) )
            	                            {
            	                            // InternalMcmodel.g:6691:14: ( (lv_throwing_95_0= 'true' ) )
            	                            // InternalMcmodel.g:6692:15: (lv_throwing_95_0= 'true' )
            	                            {
            	                            // InternalMcmodel.g:6692:15: (lv_throwing_95_0= 'true' )
            	                            // InternalMcmodel.g:6693:16: lv_throwing_95_0= 'true'
            	                            {
            	                            lv_throwing_95_0=(Token)match(input,20,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              																newLeafNode(lv_throwing_95_0, grammarAccess.getOverridePredicate_4Access().getThrowingTrueKeyword_1_9_1_1_1_1_1_0_0());
            	                              															
            	                            }
            	                            if ( state.backtracking==0 ) {

            	                              																if (current==null) {
            	                              																	current = createModelElement(grammarAccess.getOverridePredicate_4Rule());
            	                              																}
            	                              																setWithLastConsumed(current, "throwing", true, "true");
            	                              															
            	                            }

            	                            }


            	                            }


            	                            }
            	                            break;
            	                        case 2 :
            	                            // InternalMcmodel.g:6706:14: otherlv_96= 'false'
            	                            {
            	                            otherlv_96=(Token)match(input,21,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_96, grammarAccess.getOverridePredicate_4Access().getFalseKeyword_1_9_1_1_1_1_1_1());
            	                              													
            	                            }

            	                            }
            	                            break;

            	                    }


            	                    }


            	                    }
            	                    break;

            	            }


            	            }


            	            }
            	            break;

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getOverridePredicate_4Access().getUnorderedGroup_1());

            	    }


            	    }


            	    }
            	    break;
            	case 11 :
            	    // InternalMcmodel.g:6721:4: ({...}? => ( ({...}? => (otherlv_97= '&' ( (lv_timeDefined_98_0= 'time' ) ) (otherlv_99= '=' | otherlv_100= '==' ) ( (lv_time_101_0= RULE_PERCENTAGE ) ) ) ) ) )
            	    {
            	    // InternalMcmodel.g:6721:4: ({...}? => ( ({...}? => (otherlv_97= '&' ( (lv_timeDefined_98_0= 'time' ) ) (otherlv_99= '=' | otherlv_100= '==' ) ( (lv_time_101_0= RULE_PERCENTAGE ) ) ) ) ) )
            	    // InternalMcmodel.g:6722:5: {...}? => ( ({...}? => (otherlv_97= '&' ( (lv_timeDefined_98_0= 'time' ) ) (otherlv_99= '=' | otherlv_100= '==' ) ( (lv_time_101_0= RULE_PERCENTAGE ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_4Access().getUnorderedGroup_1(), 10) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_4", "getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_4Access().getUnorderedGroup_1(), 10)");
            	    }
            	    // InternalMcmodel.g:6722:117: ( ({...}? => (otherlv_97= '&' ( (lv_timeDefined_98_0= 'time' ) ) (otherlv_99= '=' | otherlv_100= '==' ) ( (lv_time_101_0= RULE_PERCENTAGE ) ) ) ) )
            	    // InternalMcmodel.g:6723:6: ({...}? => (otherlv_97= '&' ( (lv_timeDefined_98_0= 'time' ) ) (otherlv_99= '=' | otherlv_100= '==' ) ( (lv_time_101_0= RULE_PERCENTAGE ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getOverridePredicate_4Access().getUnorderedGroup_1(), 10);
            	    // InternalMcmodel.g:6726:9: ({...}? => (otherlv_97= '&' ( (lv_timeDefined_98_0= 'time' ) ) (otherlv_99= '=' | otherlv_100= '==' ) ( (lv_time_101_0= RULE_PERCENTAGE ) ) ) )
            	    // InternalMcmodel.g:6726:10: {...}? => (otherlv_97= '&' ( (lv_timeDefined_98_0= 'time' ) ) (otherlv_99= '=' | otherlv_100= '==' ) ( (lv_time_101_0= RULE_PERCENTAGE ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_4", "true");
            	    }
            	    // InternalMcmodel.g:6726:19: (otherlv_97= '&' ( (lv_timeDefined_98_0= 'time' ) ) (otherlv_99= '=' | otherlv_100= '==' ) ( (lv_time_101_0= RULE_PERCENTAGE ) ) )
            	    // InternalMcmodel.g:6726:20: otherlv_97= '&' ( (lv_timeDefined_98_0= 'time' ) ) (otherlv_99= '=' | otherlv_100= '==' ) ( (lv_time_101_0= RULE_PERCENTAGE ) )
            	    {
            	    otherlv_97=(Token)match(input,59,FOLLOW_56); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_97, grammarAccess.getOverridePredicate_4Access().getAmpersandKeyword_1_10_0());
            	      								
            	    }
            	    // InternalMcmodel.g:6730:9: ( (lv_timeDefined_98_0= 'time' ) )
            	    // InternalMcmodel.g:6731:10: (lv_timeDefined_98_0= 'time' )
            	    {
            	    // InternalMcmodel.g:6731:10: (lv_timeDefined_98_0= 'time' )
            	    // InternalMcmodel.g:6732:11: lv_timeDefined_98_0= 'time'
            	    {
            	    lv_timeDefined_98_0=(Token)match(input,72,FOLLOW_35); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											newLeafNode(lv_timeDefined_98_0, grammarAccess.getOverridePredicate_4Access().getTimeDefinedTimeKeyword_1_10_1_0());
            	      										
            	    }
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElement(grammarAccess.getOverridePredicate_4Rule());
            	      											}
            	      											setWithLastConsumed(current, "timeDefined", true, "time");
            	      										
            	    }

            	    }


            	    }

            	    // InternalMcmodel.g:6744:9: (otherlv_99= '=' | otherlv_100= '==' )
            	    int alt187=2;
            	    int LA187_0 = input.LA(1);

            	    if ( (LA187_0==18) ) {
            	        alt187=1;
            	    }
            	    else if ( (LA187_0==58) ) {
            	        alt187=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 187, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt187) {
            	        case 1 :
            	            // InternalMcmodel.g:6745:10: otherlv_99= '='
            	            {
            	            otherlv_99=(Token)match(input,18,FOLLOW_36); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(otherlv_99, grammarAccess.getOverridePredicate_4Access().getEqualsSignKeyword_1_10_2_0());
            	              									
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalMcmodel.g:6750:10: otherlv_100= '=='
            	            {
            	            otherlv_100=(Token)match(input,58,FOLLOW_36); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(otherlv_100, grammarAccess.getOverridePredicate_4Access().getEqualsSignEqualsSignKeyword_1_10_2_1());
            	              									
            	            }

            	            }
            	            break;

            	    }

            	    // InternalMcmodel.g:6755:9: ( (lv_time_101_0= RULE_PERCENTAGE ) )
            	    // InternalMcmodel.g:6756:10: (lv_time_101_0= RULE_PERCENTAGE )
            	    {
            	    // InternalMcmodel.g:6756:10: (lv_time_101_0= RULE_PERCENTAGE )
            	    // InternalMcmodel.g:6757:11: lv_time_101_0= RULE_PERCENTAGE
            	    {
            	    lv_time_101_0=(Token)match(input,RULE_PERCENTAGE,FOLLOW_37); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											newLeafNode(lv_time_101_0, grammarAccess.getOverridePredicate_4Access().getTimePERCENTAGETerminalRuleCall_1_10_3_0());
            	      										
            	    }
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElement(grammarAccess.getOverridePredicate_4Rule());
            	      											}
            	      											setWithLastConsumed(
            	      												current,
            	      												"time",
            	      												lv_time_101_0,
            	      												"com.raptor.mcmodel.Mcmodel.PERCENTAGE");
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getOverridePredicate_4Access().getUnorderedGroup_1());

            	    }


            	    }


            	    }
            	    break;
            	case 12 :
            	    // InternalMcmodel.g:6779:4: ({...}? => ( ({...}? => (otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) ) ) ) ) )
            	    {
            	    // InternalMcmodel.g:6779:4: ({...}? => ( ({...}? => (otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) ) ) ) ) )
            	    // InternalMcmodel.g:6780:5: {...}? => ( ({...}? => (otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_4Access().getUnorderedGroup_1(), 11) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_4", "getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_4Access().getUnorderedGroup_1(), 11)");
            	    }
            	    // InternalMcmodel.g:6780:117: ( ({...}? => (otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) ) ) ) )
            	    // InternalMcmodel.g:6781:6: ({...}? => (otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getOverridePredicate_4Access().getUnorderedGroup_1(), 11);
            	    // InternalMcmodel.g:6784:9: ({...}? => (otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) ) ) )
            	    // InternalMcmodel.g:6784:10: {...}? => (otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_4", "true");
            	    }
            	    // InternalMcmodel.g:6784:19: (otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) ) )
            	    // InternalMcmodel.g:6784:20: otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) )
            	    {
            	    otherlv_102=(Token)match(input,59,FOLLOW_57); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_102, grammarAccess.getOverridePredicate_4Access().getAmpersandKeyword_1_11_0());
            	      								
            	    }
            	    // InternalMcmodel.g:6788:9: ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) )
            	    // InternalMcmodel.g:6789:10: (lv_customModelDataDefined_103_0= 'custom_model_data' )
            	    {
            	    // InternalMcmodel.g:6789:10: (lv_customModelDataDefined_103_0= 'custom_model_data' )
            	    // InternalMcmodel.g:6790:11: lv_customModelDataDefined_103_0= 'custom_model_data'
            	    {
            	    lv_customModelDataDefined_103_0=(Token)match(input,73,FOLLOW_35); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											newLeafNode(lv_customModelDataDefined_103_0, grammarAccess.getOverridePredicate_4Access().getCustomModelDataDefinedCustom_model_dataKeyword_1_11_1_0());
            	      										
            	    }
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElement(grammarAccess.getOverridePredicate_4Rule());
            	      											}
            	      											setWithLastConsumed(current, "customModelDataDefined", true, "custom_model_data");
            	      										
            	    }

            	    }


            	    }

            	    // InternalMcmodel.g:6802:9: (otherlv_104= '=' | otherlv_105= '==' )
            	    int alt188=2;
            	    int LA188_0 = input.LA(1);

            	    if ( (LA188_0==18) ) {
            	        alt188=1;
            	    }
            	    else if ( (LA188_0==58) ) {
            	        alt188=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 188, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt188) {
            	        case 1 :
            	            // InternalMcmodel.g:6803:10: otherlv_104= '='
            	            {
            	            otherlv_104=(Token)match(input,18,FOLLOW_29); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(otherlv_104, grammarAccess.getOverridePredicate_4Access().getEqualsSignKeyword_1_11_2_0());
            	              									
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalMcmodel.g:6808:10: otherlv_105= '=='
            	            {
            	            otherlv_105=(Token)match(input,58,FOLLOW_29); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(otherlv_105, grammarAccess.getOverridePredicate_4Access().getEqualsSignEqualsSignKeyword_1_11_2_1());
            	              									
            	            }

            	            }
            	            break;

            	    }

            	    // InternalMcmodel.g:6813:9: ( (lv_customModelData_106_0= ruleLONG ) )
            	    // InternalMcmodel.g:6814:10: (lv_customModelData_106_0= ruleLONG )
            	    {
            	    // InternalMcmodel.g:6814:10: (lv_customModelData_106_0= ruleLONG )
            	    // InternalMcmodel.g:6815:11: lv_customModelData_106_0= ruleLONG
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getOverridePredicate_4Access().getCustomModelDataLONGParserRuleCall_1_11_3_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_37);
            	    lv_customModelData_106_0=ruleLONG();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getOverridePredicate_4Rule());
            	      											}
            	      											set(
            	      												current,
            	      												"customModelData",
            	      												lv_customModelData_106_0,
            	      												"com.raptor.mcmodel.Mcmodel.LONG");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getOverridePredicate_4Access().getUnorderedGroup_1());

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop189;
                }
            } while (true);


            }


            }

            getUnorderedGroupHelper().leave(grammarAccess.getOverridePredicate_4Access().getUnorderedGroup_1());

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOverridePredicate_4"


    // $ANTLR start "entryRuleOverridePredicate_5"
    // InternalMcmodel.g:6849:1: entryRuleOverridePredicate_5 returns [EObject current=null] : iv_ruleOverridePredicate_5= ruleOverridePredicate_5 EOF ;
    public final EObject entryRuleOverridePredicate_5() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleOverridePredicate_5 = null;


        try {
            // InternalMcmodel.g:6849:60: (iv_ruleOverridePredicate_5= ruleOverridePredicate_5 EOF )
            // InternalMcmodel.g:6850:2: iv_ruleOverridePredicate_5= ruleOverridePredicate_5 EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOverridePredicate_5Rule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOverridePredicate_5=ruleOverridePredicate_5();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOverridePredicate_5; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOverridePredicate_5"


    // $ANTLR start "ruleOverridePredicate_5"
    // InternalMcmodel.g:6856:1: ruleOverridePredicate_5 returns [EObject current=null] : ( ( (lv_cooldownDefined_0_0= 'cooldown' ) ) (otherlv_1= '=' | otherlv_2= '==' ) ( (lv_cooldown_3_0= RULE_PERCENTAGE ) ) ( ( ( ( ({...}? => ( ({...}? => (otherlv_5= '&' ( (lv_angleDefined_6_0= 'angle' ) ) (otherlv_7= '=' | otherlv_8= '==' ) ( (lv_angle_9_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= '&' ( ( ( (lv_blockingDefined_11_0= '!' ) ) otherlv_12= 'blocking' ) | ( ( (lv_blockingDefined_13_0= 'blocking' ) ) ( (otherlv_14= '!=' ( ( (lv_blocking_15_0= 'false' ) ) | otherlv_16= 'true' ) ) | ( (otherlv_17= '=' | otherlv_18= '==' ) ( ( (lv_blocking_19_0= 'true' ) ) | otherlv_20= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= '&' ( ( ( (lv_brokenDefined_22_0= '!' ) ) otherlv_23= 'broken' ) | ( ( (lv_brokenDefined_24_0= 'broken' ) ) ( (otherlv_25= '!=' ( ( (lv_broken_26_0= 'false' ) ) | otherlv_27= 'true' ) ) | ( (otherlv_28= '=' | otherlv_29= '==' ) ( ( (lv_broken_30_0= 'true' ) ) | otherlv_31= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_32= '&' ( ( ( (lv_castDefined_33_0= '!' ) ) otherlv_34= 'cast' ) | ( ( (lv_castDefined_35_0= 'cast' ) ) ( (otherlv_36= '!=' ( ( (lv_cast_37_0= 'false' ) ) | otherlv_38= 'true' ) ) | ( (otherlv_39= '=' | otherlv_40= '==' ) ( ( (lv_cast_41_0= 'true' ) ) | otherlv_42= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= '&' ( (lv_damageDefined_44_0= 'damage' ) ) (otherlv_45= '=' | otherlv_46= '==' ) ( (lv_damage_47_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_48= '&' ( ( ( (lv_damagedDefined_49_0= '!' ) ) otherlv_50= 'damaged' ) | ( ( (lv_damagedDefined_51_0= 'damaged' ) ) ( (otherlv_52= '!=' ( ( (lv_damaged_53_0= 'false' ) ) | otherlv_54= 'true' ) ) | ( (otherlv_55= '=' | otherlv_56= '==' ) ( ( (lv_damaged_57_0= 'true' ) ) | otherlv_58= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_59= '&' ( ( ( (lv_lefthandedDefined_60_0= '!' ) ) otherlv_61= 'lefthanded' ) | ( ( (lv_lefthandedDefined_62_0= 'lefthanded' ) ) ( (otherlv_63= '!=' ( ( (lv_lefthanded_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_lefthanded_68_0= 'true' ) ) | otherlv_69= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_70= '&' ( (lv_pullDefined_71_0= 'pull' ) ) (otherlv_72= '=' | otherlv_73= '==' ) ( (lv_pull_74_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_75= '&' ( ( ( (lv_pullingDefined_76_0= '!' ) ) otherlv_77= 'pulling' ) | ( ( (lv_pullingDefined_78_0= 'pulling' ) ) ( (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) ) | ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_86= '&' ( ( ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing' ) | ( ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_97= '&' ( (lv_timeDefined_98_0= 'time' ) ) (otherlv_99= '=' | otherlv_100= '==' ) ( (lv_time_101_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) ) ) ) ) ) )* ) ) ) ) ;
    public final EObject ruleOverridePredicate_5() throws RecognitionException {
        EObject current = null;

        Token lv_cooldownDefined_0_0=null;
        Token otherlv_1=null;
        Token otherlv_2=null;
        Token lv_cooldown_3_0=null;
        Token otherlv_5=null;
        Token lv_angleDefined_6_0=null;
        Token otherlv_7=null;
        Token otherlv_8=null;
        Token lv_angle_9_0=null;
        Token otherlv_10=null;
        Token lv_blockingDefined_11_0=null;
        Token otherlv_12=null;
        Token lv_blockingDefined_13_0=null;
        Token otherlv_14=null;
        Token lv_blocking_15_0=null;
        Token otherlv_16=null;
        Token otherlv_17=null;
        Token otherlv_18=null;
        Token lv_blocking_19_0=null;
        Token otherlv_20=null;
        Token otherlv_21=null;
        Token lv_brokenDefined_22_0=null;
        Token otherlv_23=null;
        Token lv_brokenDefined_24_0=null;
        Token otherlv_25=null;
        Token lv_broken_26_0=null;
        Token otherlv_27=null;
        Token otherlv_28=null;
        Token otherlv_29=null;
        Token lv_broken_30_0=null;
        Token otherlv_31=null;
        Token otherlv_32=null;
        Token lv_castDefined_33_0=null;
        Token otherlv_34=null;
        Token lv_castDefined_35_0=null;
        Token otherlv_36=null;
        Token lv_cast_37_0=null;
        Token otherlv_38=null;
        Token otherlv_39=null;
        Token otherlv_40=null;
        Token lv_cast_41_0=null;
        Token otherlv_42=null;
        Token otherlv_43=null;
        Token lv_damageDefined_44_0=null;
        Token otherlv_45=null;
        Token otherlv_46=null;
        Token lv_damage_47_0=null;
        Token otherlv_48=null;
        Token lv_damagedDefined_49_0=null;
        Token otherlv_50=null;
        Token lv_damagedDefined_51_0=null;
        Token otherlv_52=null;
        Token lv_damaged_53_0=null;
        Token otherlv_54=null;
        Token otherlv_55=null;
        Token otherlv_56=null;
        Token lv_damaged_57_0=null;
        Token otherlv_58=null;
        Token otherlv_59=null;
        Token lv_lefthandedDefined_60_0=null;
        Token otherlv_61=null;
        Token lv_lefthandedDefined_62_0=null;
        Token otherlv_63=null;
        Token lv_lefthanded_64_0=null;
        Token otherlv_65=null;
        Token otherlv_66=null;
        Token otherlv_67=null;
        Token lv_lefthanded_68_0=null;
        Token otherlv_69=null;
        Token otherlv_70=null;
        Token lv_pullDefined_71_0=null;
        Token otherlv_72=null;
        Token otherlv_73=null;
        Token lv_pull_74_0=null;
        Token otherlv_75=null;
        Token lv_pullingDefined_76_0=null;
        Token otherlv_77=null;
        Token lv_pullingDefined_78_0=null;
        Token otherlv_79=null;
        Token lv_pulling_80_0=null;
        Token otherlv_81=null;
        Token otherlv_82=null;
        Token otherlv_83=null;
        Token lv_pulling_84_0=null;
        Token otherlv_85=null;
        Token otherlv_86=null;
        Token lv_throwingDefined_87_0=null;
        Token otherlv_88=null;
        Token lv_throwingDefined_89_0=null;
        Token otherlv_90=null;
        Token lv_throwing_91_0=null;
        Token otherlv_92=null;
        Token otherlv_93=null;
        Token otherlv_94=null;
        Token lv_throwing_95_0=null;
        Token otherlv_96=null;
        Token otherlv_97=null;
        Token lv_timeDefined_98_0=null;
        Token otherlv_99=null;
        Token otherlv_100=null;
        Token lv_time_101_0=null;
        Token otherlv_102=null;
        Token lv_customModelDataDefined_103_0=null;
        Token otherlv_104=null;
        Token otherlv_105=null;
        AntlrDatatypeRuleToken lv_customModelData_106_0 = null;



        	enterRule();

        try {
            // InternalMcmodel.g:6862:2: ( ( ( (lv_cooldownDefined_0_0= 'cooldown' ) ) (otherlv_1= '=' | otherlv_2= '==' ) ( (lv_cooldown_3_0= RULE_PERCENTAGE ) ) ( ( ( ( ({...}? => ( ({...}? => (otherlv_5= '&' ( (lv_angleDefined_6_0= 'angle' ) ) (otherlv_7= '=' | otherlv_8= '==' ) ( (lv_angle_9_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= '&' ( ( ( (lv_blockingDefined_11_0= '!' ) ) otherlv_12= 'blocking' ) | ( ( (lv_blockingDefined_13_0= 'blocking' ) ) ( (otherlv_14= '!=' ( ( (lv_blocking_15_0= 'false' ) ) | otherlv_16= 'true' ) ) | ( (otherlv_17= '=' | otherlv_18= '==' ) ( ( (lv_blocking_19_0= 'true' ) ) | otherlv_20= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= '&' ( ( ( (lv_brokenDefined_22_0= '!' ) ) otherlv_23= 'broken' ) | ( ( (lv_brokenDefined_24_0= 'broken' ) ) ( (otherlv_25= '!=' ( ( (lv_broken_26_0= 'false' ) ) | otherlv_27= 'true' ) ) | ( (otherlv_28= '=' | otherlv_29= '==' ) ( ( (lv_broken_30_0= 'true' ) ) | otherlv_31= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_32= '&' ( ( ( (lv_castDefined_33_0= '!' ) ) otherlv_34= 'cast' ) | ( ( (lv_castDefined_35_0= 'cast' ) ) ( (otherlv_36= '!=' ( ( (lv_cast_37_0= 'false' ) ) | otherlv_38= 'true' ) ) | ( (otherlv_39= '=' | otherlv_40= '==' ) ( ( (lv_cast_41_0= 'true' ) ) | otherlv_42= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= '&' ( (lv_damageDefined_44_0= 'damage' ) ) (otherlv_45= '=' | otherlv_46= '==' ) ( (lv_damage_47_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_48= '&' ( ( ( (lv_damagedDefined_49_0= '!' ) ) otherlv_50= 'damaged' ) | ( ( (lv_damagedDefined_51_0= 'damaged' ) ) ( (otherlv_52= '!=' ( ( (lv_damaged_53_0= 'false' ) ) | otherlv_54= 'true' ) ) | ( (otherlv_55= '=' | otherlv_56= '==' ) ( ( (lv_damaged_57_0= 'true' ) ) | otherlv_58= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_59= '&' ( ( ( (lv_lefthandedDefined_60_0= '!' ) ) otherlv_61= 'lefthanded' ) | ( ( (lv_lefthandedDefined_62_0= 'lefthanded' ) ) ( (otherlv_63= '!=' ( ( (lv_lefthanded_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_lefthanded_68_0= 'true' ) ) | otherlv_69= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_70= '&' ( (lv_pullDefined_71_0= 'pull' ) ) (otherlv_72= '=' | otherlv_73= '==' ) ( (lv_pull_74_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_75= '&' ( ( ( (lv_pullingDefined_76_0= '!' ) ) otherlv_77= 'pulling' ) | ( ( (lv_pullingDefined_78_0= 'pulling' ) ) ( (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) ) | ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_86= '&' ( ( ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing' ) | ( ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_97= '&' ( (lv_timeDefined_98_0= 'time' ) ) (otherlv_99= '=' | otherlv_100= '==' ) ( (lv_time_101_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) ) ) ) ) ) )* ) ) ) ) )
            // InternalMcmodel.g:6863:2: ( ( (lv_cooldownDefined_0_0= 'cooldown' ) ) (otherlv_1= '=' | otherlv_2= '==' ) ( (lv_cooldown_3_0= RULE_PERCENTAGE ) ) ( ( ( ( ({...}? => ( ({...}? => (otherlv_5= '&' ( (lv_angleDefined_6_0= 'angle' ) ) (otherlv_7= '=' | otherlv_8= '==' ) ( (lv_angle_9_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= '&' ( ( ( (lv_blockingDefined_11_0= '!' ) ) otherlv_12= 'blocking' ) | ( ( (lv_blockingDefined_13_0= 'blocking' ) ) ( (otherlv_14= '!=' ( ( (lv_blocking_15_0= 'false' ) ) | otherlv_16= 'true' ) ) | ( (otherlv_17= '=' | otherlv_18= '==' ) ( ( (lv_blocking_19_0= 'true' ) ) | otherlv_20= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= '&' ( ( ( (lv_brokenDefined_22_0= '!' ) ) otherlv_23= 'broken' ) | ( ( (lv_brokenDefined_24_0= 'broken' ) ) ( (otherlv_25= '!=' ( ( (lv_broken_26_0= 'false' ) ) | otherlv_27= 'true' ) ) | ( (otherlv_28= '=' | otherlv_29= '==' ) ( ( (lv_broken_30_0= 'true' ) ) | otherlv_31= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_32= '&' ( ( ( (lv_castDefined_33_0= '!' ) ) otherlv_34= 'cast' ) | ( ( (lv_castDefined_35_0= 'cast' ) ) ( (otherlv_36= '!=' ( ( (lv_cast_37_0= 'false' ) ) | otherlv_38= 'true' ) ) | ( (otherlv_39= '=' | otherlv_40= '==' ) ( ( (lv_cast_41_0= 'true' ) ) | otherlv_42= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= '&' ( (lv_damageDefined_44_0= 'damage' ) ) (otherlv_45= '=' | otherlv_46= '==' ) ( (lv_damage_47_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_48= '&' ( ( ( (lv_damagedDefined_49_0= '!' ) ) otherlv_50= 'damaged' ) | ( ( (lv_damagedDefined_51_0= 'damaged' ) ) ( (otherlv_52= '!=' ( ( (lv_damaged_53_0= 'false' ) ) | otherlv_54= 'true' ) ) | ( (otherlv_55= '=' | otherlv_56= '==' ) ( ( (lv_damaged_57_0= 'true' ) ) | otherlv_58= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_59= '&' ( ( ( (lv_lefthandedDefined_60_0= '!' ) ) otherlv_61= 'lefthanded' ) | ( ( (lv_lefthandedDefined_62_0= 'lefthanded' ) ) ( (otherlv_63= '!=' ( ( (lv_lefthanded_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_lefthanded_68_0= 'true' ) ) | otherlv_69= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_70= '&' ( (lv_pullDefined_71_0= 'pull' ) ) (otherlv_72= '=' | otherlv_73= '==' ) ( (lv_pull_74_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_75= '&' ( ( ( (lv_pullingDefined_76_0= '!' ) ) otherlv_77= 'pulling' ) | ( ( (lv_pullingDefined_78_0= 'pulling' ) ) ( (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) ) | ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_86= '&' ( ( ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing' ) | ( ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_97= '&' ( (lv_timeDefined_98_0= 'time' ) ) (otherlv_99= '=' | otherlv_100= '==' ) ( (lv_time_101_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) ) ) ) ) ) )* ) ) ) )
            {
            // InternalMcmodel.g:6863:2: ( ( (lv_cooldownDefined_0_0= 'cooldown' ) ) (otherlv_1= '=' | otherlv_2= '==' ) ( (lv_cooldown_3_0= RULE_PERCENTAGE ) ) ( ( ( ( ({...}? => ( ({...}? => (otherlv_5= '&' ( (lv_angleDefined_6_0= 'angle' ) ) (otherlv_7= '=' | otherlv_8= '==' ) ( (lv_angle_9_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= '&' ( ( ( (lv_blockingDefined_11_0= '!' ) ) otherlv_12= 'blocking' ) | ( ( (lv_blockingDefined_13_0= 'blocking' ) ) ( (otherlv_14= '!=' ( ( (lv_blocking_15_0= 'false' ) ) | otherlv_16= 'true' ) ) | ( (otherlv_17= '=' | otherlv_18= '==' ) ( ( (lv_blocking_19_0= 'true' ) ) | otherlv_20= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= '&' ( ( ( (lv_brokenDefined_22_0= '!' ) ) otherlv_23= 'broken' ) | ( ( (lv_brokenDefined_24_0= 'broken' ) ) ( (otherlv_25= '!=' ( ( (lv_broken_26_0= 'false' ) ) | otherlv_27= 'true' ) ) | ( (otherlv_28= '=' | otherlv_29= '==' ) ( ( (lv_broken_30_0= 'true' ) ) | otherlv_31= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_32= '&' ( ( ( (lv_castDefined_33_0= '!' ) ) otherlv_34= 'cast' ) | ( ( (lv_castDefined_35_0= 'cast' ) ) ( (otherlv_36= '!=' ( ( (lv_cast_37_0= 'false' ) ) | otherlv_38= 'true' ) ) | ( (otherlv_39= '=' | otherlv_40= '==' ) ( ( (lv_cast_41_0= 'true' ) ) | otherlv_42= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= '&' ( (lv_damageDefined_44_0= 'damage' ) ) (otherlv_45= '=' | otherlv_46= '==' ) ( (lv_damage_47_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_48= '&' ( ( ( (lv_damagedDefined_49_0= '!' ) ) otherlv_50= 'damaged' ) | ( ( (lv_damagedDefined_51_0= 'damaged' ) ) ( (otherlv_52= '!=' ( ( (lv_damaged_53_0= 'false' ) ) | otherlv_54= 'true' ) ) | ( (otherlv_55= '=' | otherlv_56= '==' ) ( ( (lv_damaged_57_0= 'true' ) ) | otherlv_58= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_59= '&' ( ( ( (lv_lefthandedDefined_60_0= '!' ) ) otherlv_61= 'lefthanded' ) | ( ( (lv_lefthandedDefined_62_0= 'lefthanded' ) ) ( (otherlv_63= '!=' ( ( (lv_lefthanded_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_lefthanded_68_0= 'true' ) ) | otherlv_69= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_70= '&' ( (lv_pullDefined_71_0= 'pull' ) ) (otherlv_72= '=' | otherlv_73= '==' ) ( (lv_pull_74_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_75= '&' ( ( ( (lv_pullingDefined_76_0= '!' ) ) otherlv_77= 'pulling' ) | ( ( (lv_pullingDefined_78_0= 'pulling' ) ) ( (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) ) | ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_86= '&' ( ( ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing' ) | ( ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_97= '&' ( (lv_timeDefined_98_0= 'time' ) ) (otherlv_99= '=' | otherlv_100= '==' ) ( (lv_time_101_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) ) ) ) ) ) )* ) ) ) )
            // InternalMcmodel.g:6864:3: ( (lv_cooldownDefined_0_0= 'cooldown' ) ) (otherlv_1= '=' | otherlv_2= '==' ) ( (lv_cooldown_3_0= RULE_PERCENTAGE ) ) ( ( ( ( ({...}? => ( ({...}? => (otherlv_5= '&' ( (lv_angleDefined_6_0= 'angle' ) ) (otherlv_7= '=' | otherlv_8= '==' ) ( (lv_angle_9_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= '&' ( ( ( (lv_blockingDefined_11_0= '!' ) ) otherlv_12= 'blocking' ) | ( ( (lv_blockingDefined_13_0= 'blocking' ) ) ( (otherlv_14= '!=' ( ( (lv_blocking_15_0= 'false' ) ) | otherlv_16= 'true' ) ) | ( (otherlv_17= '=' | otherlv_18= '==' ) ( ( (lv_blocking_19_0= 'true' ) ) | otherlv_20= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= '&' ( ( ( (lv_brokenDefined_22_0= '!' ) ) otherlv_23= 'broken' ) | ( ( (lv_brokenDefined_24_0= 'broken' ) ) ( (otherlv_25= '!=' ( ( (lv_broken_26_0= 'false' ) ) | otherlv_27= 'true' ) ) | ( (otherlv_28= '=' | otherlv_29= '==' ) ( ( (lv_broken_30_0= 'true' ) ) | otherlv_31= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_32= '&' ( ( ( (lv_castDefined_33_0= '!' ) ) otherlv_34= 'cast' ) | ( ( (lv_castDefined_35_0= 'cast' ) ) ( (otherlv_36= '!=' ( ( (lv_cast_37_0= 'false' ) ) | otherlv_38= 'true' ) ) | ( (otherlv_39= '=' | otherlv_40= '==' ) ( ( (lv_cast_41_0= 'true' ) ) | otherlv_42= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= '&' ( (lv_damageDefined_44_0= 'damage' ) ) (otherlv_45= '=' | otherlv_46= '==' ) ( (lv_damage_47_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_48= '&' ( ( ( (lv_damagedDefined_49_0= '!' ) ) otherlv_50= 'damaged' ) | ( ( (lv_damagedDefined_51_0= 'damaged' ) ) ( (otherlv_52= '!=' ( ( (lv_damaged_53_0= 'false' ) ) | otherlv_54= 'true' ) ) | ( (otherlv_55= '=' | otherlv_56= '==' ) ( ( (lv_damaged_57_0= 'true' ) ) | otherlv_58= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_59= '&' ( ( ( (lv_lefthandedDefined_60_0= '!' ) ) otherlv_61= 'lefthanded' ) | ( ( (lv_lefthandedDefined_62_0= 'lefthanded' ) ) ( (otherlv_63= '!=' ( ( (lv_lefthanded_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_lefthanded_68_0= 'true' ) ) | otherlv_69= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_70= '&' ( (lv_pullDefined_71_0= 'pull' ) ) (otherlv_72= '=' | otherlv_73= '==' ) ( (lv_pull_74_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_75= '&' ( ( ( (lv_pullingDefined_76_0= '!' ) ) otherlv_77= 'pulling' ) | ( ( (lv_pullingDefined_78_0= 'pulling' ) ) ( (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) ) | ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_86= '&' ( ( ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing' ) | ( ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_97= '&' ( (lv_timeDefined_98_0= 'time' ) ) (otherlv_99= '=' | otherlv_100= '==' ) ( (lv_time_101_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) ) ) ) ) ) )* ) ) )
            {
            // InternalMcmodel.g:6864:3: ( (lv_cooldownDefined_0_0= 'cooldown' ) )
            // InternalMcmodel.g:6865:4: (lv_cooldownDefined_0_0= 'cooldown' )
            {
            // InternalMcmodel.g:6865:4: (lv_cooldownDefined_0_0= 'cooldown' )
            // InternalMcmodel.g:6866:5: lv_cooldownDefined_0_0= 'cooldown'
            {
            lv_cooldownDefined_0_0=(Token)match(input,65,FOLLOW_35); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_cooldownDefined_0_0, grammarAccess.getOverridePredicate_5Access().getCooldownDefinedCooldownKeyword_0_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getOverridePredicate_5Rule());
              					}
              					setWithLastConsumed(current, "cooldownDefined", true, "cooldown");
              				
            }

            }


            }

            // InternalMcmodel.g:6878:3: (otherlv_1= '=' | otherlv_2= '==' )
            int alt190=2;
            int LA190_0 = input.LA(1);

            if ( (LA190_0==18) ) {
                alt190=1;
            }
            else if ( (LA190_0==58) ) {
                alt190=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 190, 0, input);

                throw nvae;
            }
            switch (alt190) {
                case 1 :
                    // InternalMcmodel.g:6879:4: otherlv_1= '='
                    {
                    otherlv_1=(Token)match(input,18,FOLLOW_36); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getOverridePredicate_5Access().getEqualsSignKeyword_1_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalMcmodel.g:6884:4: otherlv_2= '=='
                    {
                    otherlv_2=(Token)match(input,58,FOLLOW_36); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getOverridePredicate_5Access().getEqualsSignEqualsSignKeyword_1_1());
                      			
                    }

                    }
                    break;

            }

            // InternalMcmodel.g:6889:3: ( (lv_cooldown_3_0= RULE_PERCENTAGE ) )
            // InternalMcmodel.g:6890:4: (lv_cooldown_3_0= RULE_PERCENTAGE )
            {
            // InternalMcmodel.g:6890:4: (lv_cooldown_3_0= RULE_PERCENTAGE )
            // InternalMcmodel.g:6891:5: lv_cooldown_3_0= RULE_PERCENTAGE
            {
            lv_cooldown_3_0=(Token)match(input,RULE_PERCENTAGE,FOLLOW_37); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_cooldown_3_0, grammarAccess.getOverridePredicate_5Access().getCooldownPERCENTAGETerminalRuleCall_2_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getOverridePredicate_5Rule());
              					}
              					setWithLastConsumed(
              						current,
              						"cooldown",
              						lv_cooldown_3_0,
              						"com.raptor.mcmodel.Mcmodel.PERCENTAGE");
              				
            }

            }


            }

            // InternalMcmodel.g:6907:3: ( ( ( ( ({...}? => ( ({...}? => (otherlv_5= '&' ( (lv_angleDefined_6_0= 'angle' ) ) (otherlv_7= '=' | otherlv_8= '==' ) ( (lv_angle_9_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= '&' ( ( ( (lv_blockingDefined_11_0= '!' ) ) otherlv_12= 'blocking' ) | ( ( (lv_blockingDefined_13_0= 'blocking' ) ) ( (otherlv_14= '!=' ( ( (lv_blocking_15_0= 'false' ) ) | otherlv_16= 'true' ) ) | ( (otherlv_17= '=' | otherlv_18= '==' ) ( ( (lv_blocking_19_0= 'true' ) ) | otherlv_20= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= '&' ( ( ( (lv_brokenDefined_22_0= '!' ) ) otherlv_23= 'broken' ) | ( ( (lv_brokenDefined_24_0= 'broken' ) ) ( (otherlv_25= '!=' ( ( (lv_broken_26_0= 'false' ) ) | otherlv_27= 'true' ) ) | ( (otherlv_28= '=' | otherlv_29= '==' ) ( ( (lv_broken_30_0= 'true' ) ) | otherlv_31= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_32= '&' ( ( ( (lv_castDefined_33_0= '!' ) ) otherlv_34= 'cast' ) | ( ( (lv_castDefined_35_0= 'cast' ) ) ( (otherlv_36= '!=' ( ( (lv_cast_37_0= 'false' ) ) | otherlv_38= 'true' ) ) | ( (otherlv_39= '=' | otherlv_40= '==' ) ( ( (lv_cast_41_0= 'true' ) ) | otherlv_42= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= '&' ( (lv_damageDefined_44_0= 'damage' ) ) (otherlv_45= '=' | otherlv_46= '==' ) ( (lv_damage_47_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_48= '&' ( ( ( (lv_damagedDefined_49_0= '!' ) ) otherlv_50= 'damaged' ) | ( ( (lv_damagedDefined_51_0= 'damaged' ) ) ( (otherlv_52= '!=' ( ( (lv_damaged_53_0= 'false' ) ) | otherlv_54= 'true' ) ) | ( (otherlv_55= '=' | otherlv_56= '==' ) ( ( (lv_damaged_57_0= 'true' ) ) | otherlv_58= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_59= '&' ( ( ( (lv_lefthandedDefined_60_0= '!' ) ) otherlv_61= 'lefthanded' ) | ( ( (lv_lefthandedDefined_62_0= 'lefthanded' ) ) ( (otherlv_63= '!=' ( ( (lv_lefthanded_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_lefthanded_68_0= 'true' ) ) | otherlv_69= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_70= '&' ( (lv_pullDefined_71_0= 'pull' ) ) (otherlv_72= '=' | otherlv_73= '==' ) ( (lv_pull_74_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_75= '&' ( ( ( (lv_pullingDefined_76_0= '!' ) ) otherlv_77= 'pulling' ) | ( ( (lv_pullingDefined_78_0= 'pulling' ) ) ( (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) ) | ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_86= '&' ( ( ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing' ) | ( ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_97= '&' ( (lv_timeDefined_98_0= 'time' ) ) (otherlv_99= '=' | otherlv_100= '==' ) ( (lv_time_101_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) ) ) ) ) ) )* ) ) )
            // InternalMcmodel.g:6908:4: ( ( ( ({...}? => ( ({...}? => (otherlv_5= '&' ( (lv_angleDefined_6_0= 'angle' ) ) (otherlv_7= '=' | otherlv_8= '==' ) ( (lv_angle_9_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= '&' ( ( ( (lv_blockingDefined_11_0= '!' ) ) otherlv_12= 'blocking' ) | ( ( (lv_blockingDefined_13_0= 'blocking' ) ) ( (otherlv_14= '!=' ( ( (lv_blocking_15_0= 'false' ) ) | otherlv_16= 'true' ) ) | ( (otherlv_17= '=' | otherlv_18= '==' ) ( ( (lv_blocking_19_0= 'true' ) ) | otherlv_20= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= '&' ( ( ( (lv_brokenDefined_22_0= '!' ) ) otherlv_23= 'broken' ) | ( ( (lv_brokenDefined_24_0= 'broken' ) ) ( (otherlv_25= '!=' ( ( (lv_broken_26_0= 'false' ) ) | otherlv_27= 'true' ) ) | ( (otherlv_28= '=' | otherlv_29= '==' ) ( ( (lv_broken_30_0= 'true' ) ) | otherlv_31= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_32= '&' ( ( ( (lv_castDefined_33_0= '!' ) ) otherlv_34= 'cast' ) | ( ( (lv_castDefined_35_0= 'cast' ) ) ( (otherlv_36= '!=' ( ( (lv_cast_37_0= 'false' ) ) | otherlv_38= 'true' ) ) | ( (otherlv_39= '=' | otherlv_40= '==' ) ( ( (lv_cast_41_0= 'true' ) ) | otherlv_42= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= '&' ( (lv_damageDefined_44_0= 'damage' ) ) (otherlv_45= '=' | otherlv_46= '==' ) ( (lv_damage_47_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_48= '&' ( ( ( (lv_damagedDefined_49_0= '!' ) ) otherlv_50= 'damaged' ) | ( ( (lv_damagedDefined_51_0= 'damaged' ) ) ( (otherlv_52= '!=' ( ( (lv_damaged_53_0= 'false' ) ) | otherlv_54= 'true' ) ) | ( (otherlv_55= '=' | otherlv_56= '==' ) ( ( (lv_damaged_57_0= 'true' ) ) | otherlv_58= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_59= '&' ( ( ( (lv_lefthandedDefined_60_0= '!' ) ) otherlv_61= 'lefthanded' ) | ( ( (lv_lefthandedDefined_62_0= 'lefthanded' ) ) ( (otherlv_63= '!=' ( ( (lv_lefthanded_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_lefthanded_68_0= 'true' ) ) | otherlv_69= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_70= '&' ( (lv_pullDefined_71_0= 'pull' ) ) (otherlv_72= '=' | otherlv_73= '==' ) ( (lv_pull_74_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_75= '&' ( ( ( (lv_pullingDefined_76_0= '!' ) ) otherlv_77= 'pulling' ) | ( ( (lv_pullingDefined_78_0= 'pulling' ) ) ( (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) ) | ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_86= '&' ( ( ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing' ) | ( ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_97= '&' ( (lv_timeDefined_98_0= 'time' ) ) (otherlv_99= '=' | otherlv_100= '==' ) ( (lv_time_101_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) ) ) ) ) ) )* ) )
            {
            // InternalMcmodel.g:6908:4: ( ( ( ({...}? => ( ({...}? => (otherlv_5= '&' ( (lv_angleDefined_6_0= 'angle' ) ) (otherlv_7= '=' | otherlv_8= '==' ) ( (lv_angle_9_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= '&' ( ( ( (lv_blockingDefined_11_0= '!' ) ) otherlv_12= 'blocking' ) | ( ( (lv_blockingDefined_13_0= 'blocking' ) ) ( (otherlv_14= '!=' ( ( (lv_blocking_15_0= 'false' ) ) | otherlv_16= 'true' ) ) | ( (otherlv_17= '=' | otherlv_18= '==' ) ( ( (lv_blocking_19_0= 'true' ) ) | otherlv_20= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= '&' ( ( ( (lv_brokenDefined_22_0= '!' ) ) otherlv_23= 'broken' ) | ( ( (lv_brokenDefined_24_0= 'broken' ) ) ( (otherlv_25= '!=' ( ( (lv_broken_26_0= 'false' ) ) | otherlv_27= 'true' ) ) | ( (otherlv_28= '=' | otherlv_29= '==' ) ( ( (lv_broken_30_0= 'true' ) ) | otherlv_31= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_32= '&' ( ( ( (lv_castDefined_33_0= '!' ) ) otherlv_34= 'cast' ) | ( ( (lv_castDefined_35_0= 'cast' ) ) ( (otherlv_36= '!=' ( ( (lv_cast_37_0= 'false' ) ) | otherlv_38= 'true' ) ) | ( (otherlv_39= '=' | otherlv_40= '==' ) ( ( (lv_cast_41_0= 'true' ) ) | otherlv_42= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= '&' ( (lv_damageDefined_44_0= 'damage' ) ) (otherlv_45= '=' | otherlv_46= '==' ) ( (lv_damage_47_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_48= '&' ( ( ( (lv_damagedDefined_49_0= '!' ) ) otherlv_50= 'damaged' ) | ( ( (lv_damagedDefined_51_0= 'damaged' ) ) ( (otherlv_52= '!=' ( ( (lv_damaged_53_0= 'false' ) ) | otherlv_54= 'true' ) ) | ( (otherlv_55= '=' | otherlv_56= '==' ) ( ( (lv_damaged_57_0= 'true' ) ) | otherlv_58= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_59= '&' ( ( ( (lv_lefthandedDefined_60_0= '!' ) ) otherlv_61= 'lefthanded' ) | ( ( (lv_lefthandedDefined_62_0= 'lefthanded' ) ) ( (otherlv_63= '!=' ( ( (lv_lefthanded_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_lefthanded_68_0= 'true' ) ) | otherlv_69= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_70= '&' ( (lv_pullDefined_71_0= 'pull' ) ) (otherlv_72= '=' | otherlv_73= '==' ) ( (lv_pull_74_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_75= '&' ( ( ( (lv_pullingDefined_76_0= '!' ) ) otherlv_77= 'pulling' ) | ( ( (lv_pullingDefined_78_0= 'pulling' ) ) ( (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) ) | ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_86= '&' ( ( ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing' ) | ( ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_97= '&' ( (lv_timeDefined_98_0= 'time' ) ) (otherlv_99= '=' | otherlv_100= '==' ) ( (lv_time_101_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) ) ) ) ) ) )* ) )
            // InternalMcmodel.g:6909:5: ( ( ({...}? => ( ({...}? => (otherlv_5= '&' ( (lv_angleDefined_6_0= 'angle' ) ) (otherlv_7= '=' | otherlv_8= '==' ) ( (lv_angle_9_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= '&' ( ( ( (lv_blockingDefined_11_0= '!' ) ) otherlv_12= 'blocking' ) | ( ( (lv_blockingDefined_13_0= 'blocking' ) ) ( (otherlv_14= '!=' ( ( (lv_blocking_15_0= 'false' ) ) | otherlv_16= 'true' ) ) | ( (otherlv_17= '=' | otherlv_18= '==' ) ( ( (lv_blocking_19_0= 'true' ) ) | otherlv_20= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= '&' ( ( ( (lv_brokenDefined_22_0= '!' ) ) otherlv_23= 'broken' ) | ( ( (lv_brokenDefined_24_0= 'broken' ) ) ( (otherlv_25= '!=' ( ( (lv_broken_26_0= 'false' ) ) | otherlv_27= 'true' ) ) | ( (otherlv_28= '=' | otherlv_29= '==' ) ( ( (lv_broken_30_0= 'true' ) ) | otherlv_31= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_32= '&' ( ( ( (lv_castDefined_33_0= '!' ) ) otherlv_34= 'cast' ) | ( ( (lv_castDefined_35_0= 'cast' ) ) ( (otherlv_36= '!=' ( ( (lv_cast_37_0= 'false' ) ) | otherlv_38= 'true' ) ) | ( (otherlv_39= '=' | otherlv_40= '==' ) ( ( (lv_cast_41_0= 'true' ) ) | otherlv_42= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= '&' ( (lv_damageDefined_44_0= 'damage' ) ) (otherlv_45= '=' | otherlv_46= '==' ) ( (lv_damage_47_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_48= '&' ( ( ( (lv_damagedDefined_49_0= '!' ) ) otherlv_50= 'damaged' ) | ( ( (lv_damagedDefined_51_0= 'damaged' ) ) ( (otherlv_52= '!=' ( ( (lv_damaged_53_0= 'false' ) ) | otherlv_54= 'true' ) ) | ( (otherlv_55= '=' | otherlv_56= '==' ) ( ( (lv_damaged_57_0= 'true' ) ) | otherlv_58= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_59= '&' ( ( ( (lv_lefthandedDefined_60_0= '!' ) ) otherlv_61= 'lefthanded' ) | ( ( (lv_lefthandedDefined_62_0= 'lefthanded' ) ) ( (otherlv_63= '!=' ( ( (lv_lefthanded_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_lefthanded_68_0= 'true' ) ) | otherlv_69= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_70= '&' ( (lv_pullDefined_71_0= 'pull' ) ) (otherlv_72= '=' | otherlv_73= '==' ) ( (lv_pull_74_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_75= '&' ( ( ( (lv_pullingDefined_76_0= '!' ) ) otherlv_77= 'pulling' ) | ( ( (lv_pullingDefined_78_0= 'pulling' ) ) ( (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) ) | ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_86= '&' ( ( ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing' ) | ( ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_97= '&' ( (lv_timeDefined_98_0= 'time' ) ) (otherlv_99= '=' | otherlv_100= '==' ) ( (lv_time_101_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) ) ) ) ) ) )* )
            {
            getUnorderedGroupHelper().enter(grammarAccess.getOverridePredicate_5Access().getUnorderedGroup_3());
            // InternalMcmodel.g:6912:5: ( ( ({...}? => ( ({...}? => (otherlv_5= '&' ( (lv_angleDefined_6_0= 'angle' ) ) (otherlv_7= '=' | otherlv_8= '==' ) ( (lv_angle_9_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= '&' ( ( ( (lv_blockingDefined_11_0= '!' ) ) otherlv_12= 'blocking' ) | ( ( (lv_blockingDefined_13_0= 'blocking' ) ) ( (otherlv_14= '!=' ( ( (lv_blocking_15_0= 'false' ) ) | otherlv_16= 'true' ) ) | ( (otherlv_17= '=' | otherlv_18= '==' ) ( ( (lv_blocking_19_0= 'true' ) ) | otherlv_20= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= '&' ( ( ( (lv_brokenDefined_22_0= '!' ) ) otherlv_23= 'broken' ) | ( ( (lv_brokenDefined_24_0= 'broken' ) ) ( (otherlv_25= '!=' ( ( (lv_broken_26_0= 'false' ) ) | otherlv_27= 'true' ) ) | ( (otherlv_28= '=' | otherlv_29= '==' ) ( ( (lv_broken_30_0= 'true' ) ) | otherlv_31= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_32= '&' ( ( ( (lv_castDefined_33_0= '!' ) ) otherlv_34= 'cast' ) | ( ( (lv_castDefined_35_0= 'cast' ) ) ( (otherlv_36= '!=' ( ( (lv_cast_37_0= 'false' ) ) | otherlv_38= 'true' ) ) | ( (otherlv_39= '=' | otherlv_40= '==' ) ( ( (lv_cast_41_0= 'true' ) ) | otherlv_42= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= '&' ( (lv_damageDefined_44_0= 'damage' ) ) (otherlv_45= '=' | otherlv_46= '==' ) ( (lv_damage_47_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_48= '&' ( ( ( (lv_damagedDefined_49_0= '!' ) ) otherlv_50= 'damaged' ) | ( ( (lv_damagedDefined_51_0= 'damaged' ) ) ( (otherlv_52= '!=' ( ( (lv_damaged_53_0= 'false' ) ) | otherlv_54= 'true' ) ) | ( (otherlv_55= '=' | otherlv_56= '==' ) ( ( (lv_damaged_57_0= 'true' ) ) | otherlv_58= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_59= '&' ( ( ( (lv_lefthandedDefined_60_0= '!' ) ) otherlv_61= 'lefthanded' ) | ( ( (lv_lefthandedDefined_62_0= 'lefthanded' ) ) ( (otherlv_63= '!=' ( ( (lv_lefthanded_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_lefthanded_68_0= 'true' ) ) | otherlv_69= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_70= '&' ( (lv_pullDefined_71_0= 'pull' ) ) (otherlv_72= '=' | otherlv_73= '==' ) ( (lv_pull_74_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_75= '&' ( ( ( (lv_pullingDefined_76_0= '!' ) ) otherlv_77= 'pulling' ) | ( ( (lv_pullingDefined_78_0= 'pulling' ) ) ( (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) ) | ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_86= '&' ( ( ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing' ) | ( ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_97= '&' ( (lv_timeDefined_98_0= 'time' ) ) (otherlv_99= '=' | otherlv_100= '==' ) ( (lv_time_101_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) ) ) ) ) ) )* )
            // InternalMcmodel.g:6913:6: ( ({...}? => ( ({...}? => (otherlv_5= '&' ( (lv_angleDefined_6_0= 'angle' ) ) (otherlv_7= '=' | otherlv_8= '==' ) ( (lv_angle_9_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= '&' ( ( ( (lv_blockingDefined_11_0= '!' ) ) otherlv_12= 'blocking' ) | ( ( (lv_blockingDefined_13_0= 'blocking' ) ) ( (otherlv_14= '!=' ( ( (lv_blocking_15_0= 'false' ) ) | otherlv_16= 'true' ) ) | ( (otherlv_17= '=' | otherlv_18= '==' ) ( ( (lv_blocking_19_0= 'true' ) ) | otherlv_20= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= '&' ( ( ( (lv_brokenDefined_22_0= '!' ) ) otherlv_23= 'broken' ) | ( ( (lv_brokenDefined_24_0= 'broken' ) ) ( (otherlv_25= '!=' ( ( (lv_broken_26_0= 'false' ) ) | otherlv_27= 'true' ) ) | ( (otherlv_28= '=' | otherlv_29= '==' ) ( ( (lv_broken_30_0= 'true' ) ) | otherlv_31= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_32= '&' ( ( ( (lv_castDefined_33_0= '!' ) ) otherlv_34= 'cast' ) | ( ( (lv_castDefined_35_0= 'cast' ) ) ( (otherlv_36= '!=' ( ( (lv_cast_37_0= 'false' ) ) | otherlv_38= 'true' ) ) | ( (otherlv_39= '=' | otherlv_40= '==' ) ( ( (lv_cast_41_0= 'true' ) ) | otherlv_42= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= '&' ( (lv_damageDefined_44_0= 'damage' ) ) (otherlv_45= '=' | otherlv_46= '==' ) ( (lv_damage_47_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_48= '&' ( ( ( (lv_damagedDefined_49_0= '!' ) ) otherlv_50= 'damaged' ) | ( ( (lv_damagedDefined_51_0= 'damaged' ) ) ( (otherlv_52= '!=' ( ( (lv_damaged_53_0= 'false' ) ) | otherlv_54= 'true' ) ) | ( (otherlv_55= '=' | otherlv_56= '==' ) ( ( (lv_damaged_57_0= 'true' ) ) | otherlv_58= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_59= '&' ( ( ( (lv_lefthandedDefined_60_0= '!' ) ) otherlv_61= 'lefthanded' ) | ( ( (lv_lefthandedDefined_62_0= 'lefthanded' ) ) ( (otherlv_63= '!=' ( ( (lv_lefthanded_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_lefthanded_68_0= 'true' ) ) | otherlv_69= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_70= '&' ( (lv_pullDefined_71_0= 'pull' ) ) (otherlv_72= '=' | otherlv_73= '==' ) ( (lv_pull_74_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_75= '&' ( ( ( (lv_pullingDefined_76_0= '!' ) ) otherlv_77= 'pulling' ) | ( ( (lv_pullingDefined_78_0= 'pulling' ) ) ( (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) ) | ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_86= '&' ( ( ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing' ) | ( ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_97= '&' ( (lv_timeDefined_98_0= 'time' ) ) (otherlv_99= '=' | otherlv_100= '==' ) ( (lv_time_101_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) ) ) ) ) ) )*
            {
            // InternalMcmodel.g:6913:6: ( ({...}? => ( ({...}? => (otherlv_5= '&' ( (lv_angleDefined_6_0= 'angle' ) ) (otherlv_7= '=' | otherlv_8= '==' ) ( (lv_angle_9_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= '&' ( ( ( (lv_blockingDefined_11_0= '!' ) ) otherlv_12= 'blocking' ) | ( ( (lv_blockingDefined_13_0= 'blocking' ) ) ( (otherlv_14= '!=' ( ( (lv_blocking_15_0= 'false' ) ) | otherlv_16= 'true' ) ) | ( (otherlv_17= '=' | otherlv_18= '==' ) ( ( (lv_blocking_19_0= 'true' ) ) | otherlv_20= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= '&' ( ( ( (lv_brokenDefined_22_0= '!' ) ) otherlv_23= 'broken' ) | ( ( (lv_brokenDefined_24_0= 'broken' ) ) ( (otherlv_25= '!=' ( ( (lv_broken_26_0= 'false' ) ) | otherlv_27= 'true' ) ) | ( (otherlv_28= '=' | otherlv_29= '==' ) ( ( (lv_broken_30_0= 'true' ) ) | otherlv_31= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_32= '&' ( ( ( (lv_castDefined_33_0= '!' ) ) otherlv_34= 'cast' ) | ( ( (lv_castDefined_35_0= 'cast' ) ) ( (otherlv_36= '!=' ( ( (lv_cast_37_0= 'false' ) ) | otherlv_38= 'true' ) ) | ( (otherlv_39= '=' | otherlv_40= '==' ) ( ( (lv_cast_41_0= 'true' ) ) | otherlv_42= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= '&' ( (lv_damageDefined_44_0= 'damage' ) ) (otherlv_45= '=' | otherlv_46= '==' ) ( (lv_damage_47_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_48= '&' ( ( ( (lv_damagedDefined_49_0= '!' ) ) otherlv_50= 'damaged' ) | ( ( (lv_damagedDefined_51_0= 'damaged' ) ) ( (otherlv_52= '!=' ( ( (lv_damaged_53_0= 'false' ) ) | otherlv_54= 'true' ) ) | ( (otherlv_55= '=' | otherlv_56= '==' ) ( ( (lv_damaged_57_0= 'true' ) ) | otherlv_58= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_59= '&' ( ( ( (lv_lefthandedDefined_60_0= '!' ) ) otherlv_61= 'lefthanded' ) | ( ( (lv_lefthandedDefined_62_0= 'lefthanded' ) ) ( (otherlv_63= '!=' ( ( (lv_lefthanded_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_lefthanded_68_0= 'true' ) ) | otherlv_69= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_70= '&' ( (lv_pullDefined_71_0= 'pull' ) ) (otherlv_72= '=' | otherlv_73= '==' ) ( (lv_pull_74_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_75= '&' ( ( ( (lv_pullingDefined_76_0= '!' ) ) otherlv_77= 'pulling' ) | ( ( (lv_pullingDefined_78_0= 'pulling' ) ) ( (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) ) | ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_86= '&' ( ( ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing' ) | ( ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_97= '&' ( (lv_timeDefined_98_0= 'time' ) ) (otherlv_99= '=' | otherlv_100= '==' ) ( (lv_time_101_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) ) ) ) ) ) )*
            loop231:
            do {
                int alt231=13;
                alt231 = dfa231.predict(input);
                switch (alt231) {
            	case 1 :
            	    // InternalMcmodel.g:6914:4: ({...}? => ( ({...}? => (otherlv_5= '&' ( (lv_angleDefined_6_0= 'angle' ) ) (otherlv_7= '=' | otherlv_8= '==' ) ( (lv_angle_9_0= RULE_PERCENTAGE ) ) ) ) ) )
            	    {
            	    // InternalMcmodel.g:6914:4: ({...}? => ( ({...}? => (otherlv_5= '&' ( (lv_angleDefined_6_0= 'angle' ) ) (otherlv_7= '=' | otherlv_8= '==' ) ( (lv_angle_9_0= RULE_PERCENTAGE ) ) ) ) ) )
            	    // InternalMcmodel.g:6915:5: {...}? => ( ({...}? => (otherlv_5= '&' ( (lv_angleDefined_6_0= 'angle' ) ) (otherlv_7= '=' | otherlv_8= '==' ) ( (lv_angle_9_0= RULE_PERCENTAGE ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_5Access().getUnorderedGroup_3(), 0) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_5", "getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_5Access().getUnorderedGroup_3(), 0)");
            	    }
            	    // InternalMcmodel.g:6915:116: ( ({...}? => (otherlv_5= '&' ( (lv_angleDefined_6_0= 'angle' ) ) (otherlv_7= '=' | otherlv_8= '==' ) ( (lv_angle_9_0= RULE_PERCENTAGE ) ) ) ) )
            	    // InternalMcmodel.g:6916:6: ({...}? => (otherlv_5= '&' ( (lv_angleDefined_6_0= 'angle' ) ) (otherlv_7= '=' | otherlv_8= '==' ) ( (lv_angle_9_0= RULE_PERCENTAGE ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getOverridePredicate_5Access().getUnorderedGroup_3(), 0);
            	    // InternalMcmodel.g:6919:9: ({...}? => (otherlv_5= '&' ( (lv_angleDefined_6_0= 'angle' ) ) (otherlv_7= '=' | otherlv_8= '==' ) ( (lv_angle_9_0= RULE_PERCENTAGE ) ) ) )
            	    // InternalMcmodel.g:6919:10: {...}? => (otherlv_5= '&' ( (lv_angleDefined_6_0= 'angle' ) ) (otherlv_7= '=' | otherlv_8= '==' ) ( (lv_angle_9_0= RULE_PERCENTAGE ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_5", "true");
            	    }
            	    // InternalMcmodel.g:6919:19: (otherlv_5= '&' ( (lv_angleDefined_6_0= 'angle' ) ) (otherlv_7= '=' | otherlv_8= '==' ) ( (lv_angle_9_0= RULE_PERCENTAGE ) ) )
            	    // InternalMcmodel.g:6919:20: otherlv_5= '&' ( (lv_angleDefined_6_0= 'angle' ) ) (otherlv_7= '=' | otherlv_8= '==' ) ( (lv_angle_9_0= RULE_PERCENTAGE ) )
            	    {
            	    otherlv_5=(Token)match(input,59,FOLLOW_58); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_5, grammarAccess.getOverridePredicate_5Access().getAmpersandKeyword_3_0_0());
            	      								
            	    }
            	    // InternalMcmodel.g:6923:9: ( (lv_angleDefined_6_0= 'angle' ) )
            	    // InternalMcmodel.g:6924:10: (lv_angleDefined_6_0= 'angle' )
            	    {
            	    // InternalMcmodel.g:6924:10: (lv_angleDefined_6_0= 'angle' )
            	    // InternalMcmodel.g:6925:11: lv_angleDefined_6_0= 'angle'
            	    {
            	    lv_angleDefined_6_0=(Token)match(input,38,FOLLOW_35); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											newLeafNode(lv_angleDefined_6_0, grammarAccess.getOverridePredicate_5Access().getAngleDefinedAngleKeyword_3_0_1_0());
            	      										
            	    }
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElement(grammarAccess.getOverridePredicate_5Rule());
            	      											}
            	      											setWithLastConsumed(current, "angleDefined", true, "angle");
            	      										
            	    }

            	    }


            	    }

            	    // InternalMcmodel.g:6937:9: (otherlv_7= '=' | otherlv_8= '==' )
            	    int alt191=2;
            	    int LA191_0 = input.LA(1);

            	    if ( (LA191_0==18) ) {
            	        alt191=1;
            	    }
            	    else if ( (LA191_0==58) ) {
            	        alt191=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 191, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt191) {
            	        case 1 :
            	            // InternalMcmodel.g:6938:10: otherlv_7= '='
            	            {
            	            otherlv_7=(Token)match(input,18,FOLLOW_36); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(otherlv_7, grammarAccess.getOverridePredicate_5Access().getEqualsSignKeyword_3_0_2_0());
            	              									
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalMcmodel.g:6943:10: otherlv_8= '=='
            	            {
            	            otherlv_8=(Token)match(input,58,FOLLOW_36); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(otherlv_8, grammarAccess.getOverridePredicate_5Access().getEqualsSignEqualsSignKeyword_3_0_2_1());
            	              									
            	            }

            	            }
            	            break;

            	    }

            	    // InternalMcmodel.g:6948:9: ( (lv_angle_9_0= RULE_PERCENTAGE ) )
            	    // InternalMcmodel.g:6949:10: (lv_angle_9_0= RULE_PERCENTAGE )
            	    {
            	    // InternalMcmodel.g:6949:10: (lv_angle_9_0= RULE_PERCENTAGE )
            	    // InternalMcmodel.g:6950:11: lv_angle_9_0= RULE_PERCENTAGE
            	    {
            	    lv_angle_9_0=(Token)match(input,RULE_PERCENTAGE,FOLLOW_37); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											newLeafNode(lv_angle_9_0, grammarAccess.getOverridePredicate_5Access().getAnglePERCENTAGETerminalRuleCall_3_0_3_0());
            	      										
            	    }
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElement(grammarAccess.getOverridePredicate_5Rule());
            	      											}
            	      											setWithLastConsumed(
            	      												current,
            	      												"angle",
            	      												lv_angle_9_0,
            	      												"com.raptor.mcmodel.Mcmodel.PERCENTAGE");
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getOverridePredicate_5Access().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // InternalMcmodel.g:6972:4: ({...}? => ( ({...}? => (otherlv_10= '&' ( ( ( (lv_blockingDefined_11_0= '!' ) ) otherlv_12= 'blocking' ) | ( ( (lv_blockingDefined_13_0= 'blocking' ) ) ( (otherlv_14= '!=' ( ( (lv_blocking_15_0= 'false' ) ) | otherlv_16= 'true' ) ) | ( (otherlv_17= '=' | otherlv_18= '==' ) ( ( (lv_blocking_19_0= 'true' ) ) | otherlv_20= 'false' ) ) ) ) ) ) ) ) )
            	    {
            	    // InternalMcmodel.g:6972:4: ({...}? => ( ({...}? => (otherlv_10= '&' ( ( ( (lv_blockingDefined_11_0= '!' ) ) otherlv_12= 'blocking' ) | ( ( (lv_blockingDefined_13_0= 'blocking' ) ) ( (otherlv_14= '!=' ( ( (lv_blocking_15_0= 'false' ) ) | otherlv_16= 'true' ) ) | ( (otherlv_17= '=' | otherlv_18= '==' ) ( ( (lv_blocking_19_0= 'true' ) ) | otherlv_20= 'false' ) ) ) ) ) ) ) ) )
            	    // InternalMcmodel.g:6973:5: {...}? => ( ({...}? => (otherlv_10= '&' ( ( ( (lv_blockingDefined_11_0= '!' ) ) otherlv_12= 'blocking' ) | ( ( (lv_blockingDefined_13_0= 'blocking' ) ) ( (otherlv_14= '!=' ( ( (lv_blocking_15_0= 'false' ) ) | otherlv_16= 'true' ) ) | ( (otherlv_17= '=' | otherlv_18= '==' ) ( ( (lv_blocking_19_0= 'true' ) ) | otherlv_20= 'false' ) ) ) ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_5Access().getUnorderedGroup_3(), 1) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_5", "getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_5Access().getUnorderedGroup_3(), 1)");
            	    }
            	    // InternalMcmodel.g:6973:116: ( ({...}? => (otherlv_10= '&' ( ( ( (lv_blockingDefined_11_0= '!' ) ) otherlv_12= 'blocking' ) | ( ( (lv_blockingDefined_13_0= 'blocking' ) ) ( (otherlv_14= '!=' ( ( (lv_blocking_15_0= 'false' ) ) | otherlv_16= 'true' ) ) | ( (otherlv_17= '=' | otherlv_18= '==' ) ( ( (lv_blocking_19_0= 'true' ) ) | otherlv_20= 'false' ) ) ) ) ) ) ) )
            	    // InternalMcmodel.g:6974:6: ({...}? => (otherlv_10= '&' ( ( ( (lv_blockingDefined_11_0= '!' ) ) otherlv_12= 'blocking' ) | ( ( (lv_blockingDefined_13_0= 'blocking' ) ) ( (otherlv_14= '!=' ( ( (lv_blocking_15_0= 'false' ) ) | otherlv_16= 'true' ) ) | ( (otherlv_17= '=' | otherlv_18= '==' ) ( ( (lv_blocking_19_0= 'true' ) ) | otherlv_20= 'false' ) ) ) ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getOverridePredicate_5Access().getUnorderedGroup_3(), 1);
            	    // InternalMcmodel.g:6977:9: ({...}? => (otherlv_10= '&' ( ( ( (lv_blockingDefined_11_0= '!' ) ) otherlv_12= 'blocking' ) | ( ( (lv_blockingDefined_13_0= 'blocking' ) ) ( (otherlv_14= '!=' ( ( (lv_blocking_15_0= 'false' ) ) | otherlv_16= 'true' ) ) | ( (otherlv_17= '=' | otherlv_18= '==' ) ( ( (lv_blocking_19_0= 'true' ) ) | otherlv_20= 'false' ) ) ) ) ) ) )
            	    // InternalMcmodel.g:6977:10: {...}? => (otherlv_10= '&' ( ( ( (lv_blockingDefined_11_0= '!' ) ) otherlv_12= 'blocking' ) | ( ( (lv_blockingDefined_13_0= 'blocking' ) ) ( (otherlv_14= '!=' ( ( (lv_blocking_15_0= 'false' ) ) | otherlv_16= 'true' ) ) | ( (otherlv_17= '=' | otherlv_18= '==' ) ( ( (lv_blocking_19_0= 'true' ) ) | otherlv_20= 'false' ) ) ) ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_5", "true");
            	    }
            	    // InternalMcmodel.g:6977:19: (otherlv_10= '&' ( ( ( (lv_blockingDefined_11_0= '!' ) ) otherlv_12= 'blocking' ) | ( ( (lv_blockingDefined_13_0= 'blocking' ) ) ( (otherlv_14= '!=' ( ( (lv_blocking_15_0= 'false' ) ) | otherlv_16= 'true' ) ) | ( (otherlv_17= '=' | otherlv_18= '==' ) ( ( (lv_blocking_19_0= 'true' ) ) | otherlv_20= 'false' ) ) ) ) ) )
            	    // InternalMcmodel.g:6977:20: otherlv_10= '&' ( ( ( (lv_blockingDefined_11_0= '!' ) ) otherlv_12= 'blocking' ) | ( ( (lv_blockingDefined_13_0= 'blocking' ) ) ( (otherlv_14= '!=' ( ( (lv_blocking_15_0= 'false' ) ) | otherlv_16= 'true' ) ) | ( (otherlv_17= '=' | otherlv_18= '==' ) ( ( (lv_blocking_19_0= 'true' ) ) | otherlv_20= 'false' ) ) ) ) )
            	    {
            	    otherlv_10=(Token)match(input,59,FOLLOW_38); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_10, grammarAccess.getOverridePredicate_5Access().getAmpersandKeyword_3_1_0());
            	      								
            	    }
            	    // InternalMcmodel.g:6981:9: ( ( ( (lv_blockingDefined_11_0= '!' ) ) otherlv_12= 'blocking' ) | ( ( (lv_blockingDefined_13_0= 'blocking' ) ) ( (otherlv_14= '!=' ( ( (lv_blocking_15_0= 'false' ) ) | otherlv_16= 'true' ) ) | ( (otherlv_17= '=' | otherlv_18= '==' ) ( ( (lv_blocking_19_0= 'true' ) ) | otherlv_20= 'false' ) ) ) ) )
            	    int alt196=2;
            	    int LA196_0 = input.LA(1);

            	    if ( (LA196_0==60) ) {
            	        alt196=1;
            	    }
            	    else if ( (LA196_0==61) ) {
            	        alt196=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 196, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt196) {
            	        case 1 :
            	            // InternalMcmodel.g:6982:10: ( ( (lv_blockingDefined_11_0= '!' ) ) otherlv_12= 'blocking' )
            	            {
            	            // InternalMcmodel.g:6982:10: ( ( (lv_blockingDefined_11_0= '!' ) ) otherlv_12= 'blocking' )
            	            // InternalMcmodel.g:6983:11: ( (lv_blockingDefined_11_0= '!' ) ) otherlv_12= 'blocking'
            	            {
            	            // InternalMcmodel.g:6983:11: ( (lv_blockingDefined_11_0= '!' ) )
            	            // InternalMcmodel.g:6984:12: (lv_blockingDefined_11_0= '!' )
            	            {
            	            // InternalMcmodel.g:6984:12: (lv_blockingDefined_11_0= '!' )
            	            // InternalMcmodel.g:6985:13: lv_blockingDefined_11_0= '!'
            	            {
            	            lv_blockingDefined_11_0=(Token)match(input,60,FOLLOW_39); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              													newLeafNode(lv_blockingDefined_11_0, grammarAccess.getOverridePredicate_5Access().getBlockingDefinedExclamationMarkKeyword_3_1_1_0_0_0());
            	              												
            	            }
            	            if ( state.backtracking==0 ) {

            	              													if (current==null) {
            	              														current = createModelElement(grammarAccess.getOverridePredicate_5Rule());
            	              													}
            	              													setWithLastConsumed(current, "blockingDefined", true, "!");
            	              												
            	            }

            	            }


            	            }

            	            otherlv_12=(Token)match(input,61,FOLLOW_37); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              											newLeafNode(otherlv_12, grammarAccess.getOverridePredicate_5Access().getBlockingKeyword_3_1_1_0_1());
            	              										
            	            }

            	            }


            	            }
            	            break;
            	        case 2 :
            	            // InternalMcmodel.g:7003:10: ( ( (lv_blockingDefined_13_0= 'blocking' ) ) ( (otherlv_14= '!=' ( ( (lv_blocking_15_0= 'false' ) ) | otherlv_16= 'true' ) ) | ( (otherlv_17= '=' | otherlv_18= '==' ) ( ( (lv_blocking_19_0= 'true' ) ) | otherlv_20= 'false' ) ) ) )
            	            {
            	            // InternalMcmodel.g:7003:10: ( ( (lv_blockingDefined_13_0= 'blocking' ) ) ( (otherlv_14= '!=' ( ( (lv_blocking_15_0= 'false' ) ) | otherlv_16= 'true' ) ) | ( (otherlv_17= '=' | otherlv_18= '==' ) ( ( (lv_blocking_19_0= 'true' ) ) | otherlv_20= 'false' ) ) ) )
            	            // InternalMcmodel.g:7004:11: ( (lv_blockingDefined_13_0= 'blocking' ) ) ( (otherlv_14= '!=' ( ( (lv_blocking_15_0= 'false' ) ) | otherlv_16= 'true' ) ) | ( (otherlv_17= '=' | otherlv_18= '==' ) ( ( (lv_blocking_19_0= 'true' ) ) | otherlv_20= 'false' ) ) )
            	            {
            	            // InternalMcmodel.g:7004:11: ( (lv_blockingDefined_13_0= 'blocking' ) )
            	            // InternalMcmodel.g:7005:12: (lv_blockingDefined_13_0= 'blocking' )
            	            {
            	            // InternalMcmodel.g:7005:12: (lv_blockingDefined_13_0= 'blocking' )
            	            // InternalMcmodel.g:7006:13: lv_blockingDefined_13_0= 'blocking'
            	            {
            	            lv_blockingDefined_13_0=(Token)match(input,61,FOLLOW_40); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              													newLeafNode(lv_blockingDefined_13_0, grammarAccess.getOverridePredicate_5Access().getBlockingDefinedBlockingKeyword_3_1_1_1_0_0());
            	              												
            	            }
            	            if ( state.backtracking==0 ) {

            	              													if (current==null) {
            	              														current = createModelElement(grammarAccess.getOverridePredicate_5Rule());
            	              													}
            	              													setWithLastConsumed(current, "blockingDefined", true, "blocking");
            	              												
            	            }

            	            }


            	            }

            	            // InternalMcmodel.g:7018:11: ( (otherlv_14= '!=' ( ( (lv_blocking_15_0= 'false' ) ) | otherlv_16= 'true' ) ) | ( (otherlv_17= '=' | otherlv_18= '==' ) ( ( (lv_blocking_19_0= 'true' ) ) | otherlv_20= 'false' ) ) )
            	            int alt195=2;
            	            int LA195_0 = input.LA(1);

            	            if ( (LA195_0==62) ) {
            	                alt195=1;
            	            }
            	            else if ( (LA195_0==18||LA195_0==58) ) {
            	                alt195=2;
            	            }
            	            else {
            	                if (state.backtracking>0) {state.failed=true; return current;}
            	                NoViableAltException nvae =
            	                    new NoViableAltException("", 195, 0, input);

            	                throw nvae;
            	            }
            	            switch (alt195) {
            	                case 1 :
            	                    // InternalMcmodel.g:7019:12: (otherlv_14= '!=' ( ( (lv_blocking_15_0= 'false' ) ) | otherlv_16= 'true' ) )
            	                    {
            	                    // InternalMcmodel.g:7019:12: (otherlv_14= '!=' ( ( (lv_blocking_15_0= 'false' ) ) | otherlv_16= 'true' ) )
            	                    // InternalMcmodel.g:7020:13: otherlv_14= '!=' ( ( (lv_blocking_15_0= 'false' ) ) | otherlv_16= 'true' )
            	                    {
            	                    otherlv_14=(Token)match(input,62,FOLLOW_7); if (state.failed) return current;
            	                    if ( state.backtracking==0 ) {

            	                      													newLeafNode(otherlv_14, grammarAccess.getOverridePredicate_5Access().getExclamationMarkEqualsSignKeyword_3_1_1_1_1_0_0());
            	                      												
            	                    }
            	                    // InternalMcmodel.g:7024:13: ( ( (lv_blocking_15_0= 'false' ) ) | otherlv_16= 'true' )
            	                    int alt192=2;
            	                    int LA192_0 = input.LA(1);

            	                    if ( (LA192_0==21) ) {
            	                        alt192=1;
            	                    }
            	                    else if ( (LA192_0==20) ) {
            	                        alt192=2;
            	                    }
            	                    else {
            	                        if (state.backtracking>0) {state.failed=true; return current;}
            	                        NoViableAltException nvae =
            	                            new NoViableAltException("", 192, 0, input);

            	                        throw nvae;
            	                    }
            	                    switch (alt192) {
            	                        case 1 :
            	                            // InternalMcmodel.g:7025:14: ( (lv_blocking_15_0= 'false' ) )
            	                            {
            	                            // InternalMcmodel.g:7025:14: ( (lv_blocking_15_0= 'false' ) )
            	                            // InternalMcmodel.g:7026:15: (lv_blocking_15_0= 'false' )
            	                            {
            	                            // InternalMcmodel.g:7026:15: (lv_blocking_15_0= 'false' )
            	                            // InternalMcmodel.g:7027:16: lv_blocking_15_0= 'false'
            	                            {
            	                            lv_blocking_15_0=(Token)match(input,21,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              																newLeafNode(lv_blocking_15_0, grammarAccess.getOverridePredicate_5Access().getBlockingFalseKeyword_3_1_1_1_1_0_1_0_0());
            	                              															
            	                            }
            	                            if ( state.backtracking==0 ) {

            	                              																if (current==null) {
            	                              																	current = createModelElement(grammarAccess.getOverridePredicate_5Rule());
            	                              																}
            	                              																setWithLastConsumed(current, "blocking", true, "false");
            	                              															
            	                            }

            	                            }


            	                            }


            	                            }
            	                            break;
            	                        case 2 :
            	                            // InternalMcmodel.g:7040:14: otherlv_16= 'true'
            	                            {
            	                            otherlv_16=(Token)match(input,20,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_16, grammarAccess.getOverridePredicate_5Access().getTrueKeyword_3_1_1_1_1_0_1_1());
            	                              													
            	                            }

            	                            }
            	                            break;

            	                    }


            	                    }


            	                    }
            	                    break;
            	                case 2 :
            	                    // InternalMcmodel.g:7047:12: ( (otherlv_17= '=' | otherlv_18= '==' ) ( ( (lv_blocking_19_0= 'true' ) ) | otherlv_20= 'false' ) )
            	                    {
            	                    // InternalMcmodel.g:7047:12: ( (otherlv_17= '=' | otherlv_18= '==' ) ( ( (lv_blocking_19_0= 'true' ) ) | otherlv_20= 'false' ) )
            	                    // InternalMcmodel.g:7048:13: (otherlv_17= '=' | otherlv_18= '==' ) ( ( (lv_blocking_19_0= 'true' ) ) | otherlv_20= 'false' )
            	                    {
            	                    // InternalMcmodel.g:7048:13: (otherlv_17= '=' | otherlv_18= '==' )
            	                    int alt193=2;
            	                    int LA193_0 = input.LA(1);

            	                    if ( (LA193_0==18) ) {
            	                        alt193=1;
            	                    }
            	                    else if ( (LA193_0==58) ) {
            	                        alt193=2;
            	                    }
            	                    else {
            	                        if (state.backtracking>0) {state.failed=true; return current;}
            	                        NoViableAltException nvae =
            	                            new NoViableAltException("", 193, 0, input);

            	                        throw nvae;
            	                    }
            	                    switch (alt193) {
            	                        case 1 :
            	                            // InternalMcmodel.g:7049:14: otherlv_17= '='
            	                            {
            	                            otherlv_17=(Token)match(input,18,FOLLOW_7); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_17, grammarAccess.getOverridePredicate_5Access().getEqualsSignKeyword_3_1_1_1_1_1_0_0());
            	                              													
            	                            }

            	                            }
            	                            break;
            	                        case 2 :
            	                            // InternalMcmodel.g:7054:14: otherlv_18= '=='
            	                            {
            	                            otherlv_18=(Token)match(input,58,FOLLOW_7); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_18, grammarAccess.getOverridePredicate_5Access().getEqualsSignEqualsSignKeyword_3_1_1_1_1_1_0_1());
            	                              													
            	                            }

            	                            }
            	                            break;

            	                    }

            	                    // InternalMcmodel.g:7059:13: ( ( (lv_blocking_19_0= 'true' ) ) | otherlv_20= 'false' )
            	                    int alt194=2;
            	                    int LA194_0 = input.LA(1);

            	                    if ( (LA194_0==20) ) {
            	                        alt194=1;
            	                    }
            	                    else if ( (LA194_0==21) ) {
            	                        alt194=2;
            	                    }
            	                    else {
            	                        if (state.backtracking>0) {state.failed=true; return current;}
            	                        NoViableAltException nvae =
            	                            new NoViableAltException("", 194, 0, input);

            	                        throw nvae;
            	                    }
            	                    switch (alt194) {
            	                        case 1 :
            	                            // InternalMcmodel.g:7060:14: ( (lv_blocking_19_0= 'true' ) )
            	                            {
            	                            // InternalMcmodel.g:7060:14: ( (lv_blocking_19_0= 'true' ) )
            	                            // InternalMcmodel.g:7061:15: (lv_blocking_19_0= 'true' )
            	                            {
            	                            // InternalMcmodel.g:7061:15: (lv_blocking_19_0= 'true' )
            	                            // InternalMcmodel.g:7062:16: lv_blocking_19_0= 'true'
            	                            {
            	                            lv_blocking_19_0=(Token)match(input,20,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              																newLeafNode(lv_blocking_19_0, grammarAccess.getOverridePredicate_5Access().getBlockingTrueKeyword_3_1_1_1_1_1_1_0_0());
            	                              															
            	                            }
            	                            if ( state.backtracking==0 ) {

            	                              																if (current==null) {
            	                              																	current = createModelElement(grammarAccess.getOverridePredicate_5Rule());
            	                              																}
            	                              																setWithLastConsumed(current, "blocking", true, "true");
            	                              															
            	                            }

            	                            }


            	                            }


            	                            }
            	                            break;
            	                        case 2 :
            	                            // InternalMcmodel.g:7075:14: otherlv_20= 'false'
            	                            {
            	                            otherlv_20=(Token)match(input,21,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_20, grammarAccess.getOverridePredicate_5Access().getFalseKeyword_3_1_1_1_1_1_1_1());
            	                              													
            	                            }

            	                            }
            	                            break;

            	                    }


            	                    }


            	                    }
            	                    break;

            	            }


            	            }


            	            }
            	            break;

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getOverridePredicate_5Access().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 3 :
            	    // InternalMcmodel.g:7090:4: ({...}? => ( ({...}? => (otherlv_21= '&' ( ( ( (lv_brokenDefined_22_0= '!' ) ) otherlv_23= 'broken' ) | ( ( (lv_brokenDefined_24_0= 'broken' ) ) ( (otherlv_25= '!=' ( ( (lv_broken_26_0= 'false' ) ) | otherlv_27= 'true' ) ) | ( (otherlv_28= '=' | otherlv_29= '==' ) ( ( (lv_broken_30_0= 'true' ) ) | otherlv_31= 'false' ) ) ) ) ) ) ) ) )
            	    {
            	    // InternalMcmodel.g:7090:4: ({...}? => ( ({...}? => (otherlv_21= '&' ( ( ( (lv_brokenDefined_22_0= '!' ) ) otherlv_23= 'broken' ) | ( ( (lv_brokenDefined_24_0= 'broken' ) ) ( (otherlv_25= '!=' ( ( (lv_broken_26_0= 'false' ) ) | otherlv_27= 'true' ) ) | ( (otherlv_28= '=' | otherlv_29= '==' ) ( ( (lv_broken_30_0= 'true' ) ) | otherlv_31= 'false' ) ) ) ) ) ) ) ) )
            	    // InternalMcmodel.g:7091:5: {...}? => ( ({...}? => (otherlv_21= '&' ( ( ( (lv_brokenDefined_22_0= '!' ) ) otherlv_23= 'broken' ) | ( ( (lv_brokenDefined_24_0= 'broken' ) ) ( (otherlv_25= '!=' ( ( (lv_broken_26_0= 'false' ) ) | otherlv_27= 'true' ) ) | ( (otherlv_28= '=' | otherlv_29= '==' ) ( ( (lv_broken_30_0= 'true' ) ) | otherlv_31= 'false' ) ) ) ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_5Access().getUnorderedGroup_3(), 2) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_5", "getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_5Access().getUnorderedGroup_3(), 2)");
            	    }
            	    // InternalMcmodel.g:7091:116: ( ({...}? => (otherlv_21= '&' ( ( ( (lv_brokenDefined_22_0= '!' ) ) otherlv_23= 'broken' ) | ( ( (lv_brokenDefined_24_0= 'broken' ) ) ( (otherlv_25= '!=' ( ( (lv_broken_26_0= 'false' ) ) | otherlv_27= 'true' ) ) | ( (otherlv_28= '=' | otherlv_29= '==' ) ( ( (lv_broken_30_0= 'true' ) ) | otherlv_31= 'false' ) ) ) ) ) ) ) )
            	    // InternalMcmodel.g:7092:6: ({...}? => (otherlv_21= '&' ( ( ( (lv_brokenDefined_22_0= '!' ) ) otherlv_23= 'broken' ) | ( ( (lv_brokenDefined_24_0= 'broken' ) ) ( (otherlv_25= '!=' ( ( (lv_broken_26_0= 'false' ) ) | otherlv_27= 'true' ) ) | ( (otherlv_28= '=' | otherlv_29= '==' ) ( ( (lv_broken_30_0= 'true' ) ) | otherlv_31= 'false' ) ) ) ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getOverridePredicate_5Access().getUnorderedGroup_3(), 2);
            	    // InternalMcmodel.g:7095:9: ({...}? => (otherlv_21= '&' ( ( ( (lv_brokenDefined_22_0= '!' ) ) otherlv_23= 'broken' ) | ( ( (lv_brokenDefined_24_0= 'broken' ) ) ( (otherlv_25= '!=' ( ( (lv_broken_26_0= 'false' ) ) | otherlv_27= 'true' ) ) | ( (otherlv_28= '=' | otherlv_29= '==' ) ( ( (lv_broken_30_0= 'true' ) ) | otherlv_31= 'false' ) ) ) ) ) ) )
            	    // InternalMcmodel.g:7095:10: {...}? => (otherlv_21= '&' ( ( ( (lv_brokenDefined_22_0= '!' ) ) otherlv_23= 'broken' ) | ( ( (lv_brokenDefined_24_0= 'broken' ) ) ( (otherlv_25= '!=' ( ( (lv_broken_26_0= 'false' ) ) | otherlv_27= 'true' ) ) | ( (otherlv_28= '=' | otherlv_29= '==' ) ( ( (lv_broken_30_0= 'true' ) ) | otherlv_31= 'false' ) ) ) ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_5", "true");
            	    }
            	    // InternalMcmodel.g:7095:19: (otherlv_21= '&' ( ( ( (lv_brokenDefined_22_0= '!' ) ) otherlv_23= 'broken' ) | ( ( (lv_brokenDefined_24_0= 'broken' ) ) ( (otherlv_25= '!=' ( ( (lv_broken_26_0= 'false' ) ) | otherlv_27= 'true' ) ) | ( (otherlv_28= '=' | otherlv_29= '==' ) ( ( (lv_broken_30_0= 'true' ) ) | otherlv_31= 'false' ) ) ) ) ) )
            	    // InternalMcmodel.g:7095:20: otherlv_21= '&' ( ( ( (lv_brokenDefined_22_0= '!' ) ) otherlv_23= 'broken' ) | ( ( (lv_brokenDefined_24_0= 'broken' ) ) ( (otherlv_25= '!=' ( ( (lv_broken_26_0= 'false' ) ) | otherlv_27= 'true' ) ) | ( (otherlv_28= '=' | otherlv_29= '==' ) ( ( (lv_broken_30_0= 'true' ) ) | otherlv_31= 'false' ) ) ) ) )
            	    {
            	    otherlv_21=(Token)match(input,59,FOLLOW_41); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_21, grammarAccess.getOverridePredicate_5Access().getAmpersandKeyword_3_2_0());
            	      								
            	    }
            	    // InternalMcmodel.g:7099:9: ( ( ( (lv_brokenDefined_22_0= '!' ) ) otherlv_23= 'broken' ) | ( ( (lv_brokenDefined_24_0= 'broken' ) ) ( (otherlv_25= '!=' ( ( (lv_broken_26_0= 'false' ) ) | otherlv_27= 'true' ) ) | ( (otherlv_28= '=' | otherlv_29= '==' ) ( ( (lv_broken_30_0= 'true' ) ) | otherlv_31= 'false' ) ) ) ) )
            	    int alt201=2;
            	    int LA201_0 = input.LA(1);

            	    if ( (LA201_0==60) ) {
            	        alt201=1;
            	    }
            	    else if ( (LA201_0==63) ) {
            	        alt201=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 201, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt201) {
            	        case 1 :
            	            // InternalMcmodel.g:7100:10: ( ( (lv_brokenDefined_22_0= '!' ) ) otherlv_23= 'broken' )
            	            {
            	            // InternalMcmodel.g:7100:10: ( ( (lv_brokenDefined_22_0= '!' ) ) otherlv_23= 'broken' )
            	            // InternalMcmodel.g:7101:11: ( (lv_brokenDefined_22_0= '!' ) ) otherlv_23= 'broken'
            	            {
            	            // InternalMcmodel.g:7101:11: ( (lv_brokenDefined_22_0= '!' ) )
            	            // InternalMcmodel.g:7102:12: (lv_brokenDefined_22_0= '!' )
            	            {
            	            // InternalMcmodel.g:7102:12: (lv_brokenDefined_22_0= '!' )
            	            // InternalMcmodel.g:7103:13: lv_brokenDefined_22_0= '!'
            	            {
            	            lv_brokenDefined_22_0=(Token)match(input,60,FOLLOW_42); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              													newLeafNode(lv_brokenDefined_22_0, grammarAccess.getOverridePredicate_5Access().getBrokenDefinedExclamationMarkKeyword_3_2_1_0_0_0());
            	              												
            	            }
            	            if ( state.backtracking==0 ) {

            	              													if (current==null) {
            	              														current = createModelElement(grammarAccess.getOverridePredicate_5Rule());
            	              													}
            	              													setWithLastConsumed(current, "brokenDefined", true, "!");
            	              												
            	            }

            	            }


            	            }

            	            otherlv_23=(Token)match(input,63,FOLLOW_37); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              											newLeafNode(otherlv_23, grammarAccess.getOverridePredicate_5Access().getBrokenKeyword_3_2_1_0_1());
            	              										
            	            }

            	            }


            	            }
            	            break;
            	        case 2 :
            	            // InternalMcmodel.g:7121:10: ( ( (lv_brokenDefined_24_0= 'broken' ) ) ( (otherlv_25= '!=' ( ( (lv_broken_26_0= 'false' ) ) | otherlv_27= 'true' ) ) | ( (otherlv_28= '=' | otherlv_29= '==' ) ( ( (lv_broken_30_0= 'true' ) ) | otherlv_31= 'false' ) ) ) )
            	            {
            	            // InternalMcmodel.g:7121:10: ( ( (lv_brokenDefined_24_0= 'broken' ) ) ( (otherlv_25= '!=' ( ( (lv_broken_26_0= 'false' ) ) | otherlv_27= 'true' ) ) | ( (otherlv_28= '=' | otherlv_29= '==' ) ( ( (lv_broken_30_0= 'true' ) ) | otherlv_31= 'false' ) ) ) )
            	            // InternalMcmodel.g:7122:11: ( (lv_brokenDefined_24_0= 'broken' ) ) ( (otherlv_25= '!=' ( ( (lv_broken_26_0= 'false' ) ) | otherlv_27= 'true' ) ) | ( (otherlv_28= '=' | otherlv_29= '==' ) ( ( (lv_broken_30_0= 'true' ) ) | otherlv_31= 'false' ) ) )
            	            {
            	            // InternalMcmodel.g:7122:11: ( (lv_brokenDefined_24_0= 'broken' ) )
            	            // InternalMcmodel.g:7123:12: (lv_brokenDefined_24_0= 'broken' )
            	            {
            	            // InternalMcmodel.g:7123:12: (lv_brokenDefined_24_0= 'broken' )
            	            // InternalMcmodel.g:7124:13: lv_brokenDefined_24_0= 'broken'
            	            {
            	            lv_brokenDefined_24_0=(Token)match(input,63,FOLLOW_40); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              													newLeafNode(lv_brokenDefined_24_0, grammarAccess.getOverridePredicate_5Access().getBrokenDefinedBrokenKeyword_3_2_1_1_0_0());
            	              												
            	            }
            	            if ( state.backtracking==0 ) {

            	              													if (current==null) {
            	              														current = createModelElement(grammarAccess.getOverridePredicate_5Rule());
            	              													}
            	              													setWithLastConsumed(current, "brokenDefined", true, "broken");
            	              												
            	            }

            	            }


            	            }

            	            // InternalMcmodel.g:7136:11: ( (otherlv_25= '!=' ( ( (lv_broken_26_0= 'false' ) ) | otherlv_27= 'true' ) ) | ( (otherlv_28= '=' | otherlv_29= '==' ) ( ( (lv_broken_30_0= 'true' ) ) | otherlv_31= 'false' ) ) )
            	            int alt200=2;
            	            int LA200_0 = input.LA(1);

            	            if ( (LA200_0==62) ) {
            	                alt200=1;
            	            }
            	            else if ( (LA200_0==18||LA200_0==58) ) {
            	                alt200=2;
            	            }
            	            else {
            	                if (state.backtracking>0) {state.failed=true; return current;}
            	                NoViableAltException nvae =
            	                    new NoViableAltException("", 200, 0, input);

            	                throw nvae;
            	            }
            	            switch (alt200) {
            	                case 1 :
            	                    // InternalMcmodel.g:7137:12: (otherlv_25= '!=' ( ( (lv_broken_26_0= 'false' ) ) | otherlv_27= 'true' ) )
            	                    {
            	                    // InternalMcmodel.g:7137:12: (otherlv_25= '!=' ( ( (lv_broken_26_0= 'false' ) ) | otherlv_27= 'true' ) )
            	                    // InternalMcmodel.g:7138:13: otherlv_25= '!=' ( ( (lv_broken_26_0= 'false' ) ) | otherlv_27= 'true' )
            	                    {
            	                    otherlv_25=(Token)match(input,62,FOLLOW_7); if (state.failed) return current;
            	                    if ( state.backtracking==0 ) {

            	                      													newLeafNode(otherlv_25, grammarAccess.getOverridePredicate_5Access().getExclamationMarkEqualsSignKeyword_3_2_1_1_1_0_0());
            	                      												
            	                    }
            	                    // InternalMcmodel.g:7142:13: ( ( (lv_broken_26_0= 'false' ) ) | otherlv_27= 'true' )
            	                    int alt197=2;
            	                    int LA197_0 = input.LA(1);

            	                    if ( (LA197_0==21) ) {
            	                        alt197=1;
            	                    }
            	                    else if ( (LA197_0==20) ) {
            	                        alt197=2;
            	                    }
            	                    else {
            	                        if (state.backtracking>0) {state.failed=true; return current;}
            	                        NoViableAltException nvae =
            	                            new NoViableAltException("", 197, 0, input);

            	                        throw nvae;
            	                    }
            	                    switch (alt197) {
            	                        case 1 :
            	                            // InternalMcmodel.g:7143:14: ( (lv_broken_26_0= 'false' ) )
            	                            {
            	                            // InternalMcmodel.g:7143:14: ( (lv_broken_26_0= 'false' ) )
            	                            // InternalMcmodel.g:7144:15: (lv_broken_26_0= 'false' )
            	                            {
            	                            // InternalMcmodel.g:7144:15: (lv_broken_26_0= 'false' )
            	                            // InternalMcmodel.g:7145:16: lv_broken_26_0= 'false'
            	                            {
            	                            lv_broken_26_0=(Token)match(input,21,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              																newLeafNode(lv_broken_26_0, grammarAccess.getOverridePredicate_5Access().getBrokenFalseKeyword_3_2_1_1_1_0_1_0_0());
            	                              															
            	                            }
            	                            if ( state.backtracking==0 ) {

            	                              																if (current==null) {
            	                              																	current = createModelElement(grammarAccess.getOverridePredicate_5Rule());
            	                              																}
            	                              																setWithLastConsumed(current, "broken", true, "false");
            	                              															
            	                            }

            	                            }


            	                            }


            	                            }
            	                            break;
            	                        case 2 :
            	                            // InternalMcmodel.g:7158:14: otherlv_27= 'true'
            	                            {
            	                            otherlv_27=(Token)match(input,20,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_27, grammarAccess.getOverridePredicate_5Access().getTrueKeyword_3_2_1_1_1_0_1_1());
            	                              													
            	                            }

            	                            }
            	                            break;

            	                    }


            	                    }


            	                    }
            	                    break;
            	                case 2 :
            	                    // InternalMcmodel.g:7165:12: ( (otherlv_28= '=' | otherlv_29= '==' ) ( ( (lv_broken_30_0= 'true' ) ) | otherlv_31= 'false' ) )
            	                    {
            	                    // InternalMcmodel.g:7165:12: ( (otherlv_28= '=' | otherlv_29= '==' ) ( ( (lv_broken_30_0= 'true' ) ) | otherlv_31= 'false' ) )
            	                    // InternalMcmodel.g:7166:13: (otherlv_28= '=' | otherlv_29= '==' ) ( ( (lv_broken_30_0= 'true' ) ) | otherlv_31= 'false' )
            	                    {
            	                    // InternalMcmodel.g:7166:13: (otherlv_28= '=' | otherlv_29= '==' )
            	                    int alt198=2;
            	                    int LA198_0 = input.LA(1);

            	                    if ( (LA198_0==18) ) {
            	                        alt198=1;
            	                    }
            	                    else if ( (LA198_0==58) ) {
            	                        alt198=2;
            	                    }
            	                    else {
            	                        if (state.backtracking>0) {state.failed=true; return current;}
            	                        NoViableAltException nvae =
            	                            new NoViableAltException("", 198, 0, input);

            	                        throw nvae;
            	                    }
            	                    switch (alt198) {
            	                        case 1 :
            	                            // InternalMcmodel.g:7167:14: otherlv_28= '='
            	                            {
            	                            otherlv_28=(Token)match(input,18,FOLLOW_7); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_28, grammarAccess.getOverridePredicate_5Access().getEqualsSignKeyword_3_2_1_1_1_1_0_0());
            	                              													
            	                            }

            	                            }
            	                            break;
            	                        case 2 :
            	                            // InternalMcmodel.g:7172:14: otherlv_29= '=='
            	                            {
            	                            otherlv_29=(Token)match(input,58,FOLLOW_7); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_29, grammarAccess.getOverridePredicate_5Access().getEqualsSignEqualsSignKeyword_3_2_1_1_1_1_0_1());
            	                              													
            	                            }

            	                            }
            	                            break;

            	                    }

            	                    // InternalMcmodel.g:7177:13: ( ( (lv_broken_30_0= 'true' ) ) | otherlv_31= 'false' )
            	                    int alt199=2;
            	                    int LA199_0 = input.LA(1);

            	                    if ( (LA199_0==20) ) {
            	                        alt199=1;
            	                    }
            	                    else if ( (LA199_0==21) ) {
            	                        alt199=2;
            	                    }
            	                    else {
            	                        if (state.backtracking>0) {state.failed=true; return current;}
            	                        NoViableAltException nvae =
            	                            new NoViableAltException("", 199, 0, input);

            	                        throw nvae;
            	                    }
            	                    switch (alt199) {
            	                        case 1 :
            	                            // InternalMcmodel.g:7178:14: ( (lv_broken_30_0= 'true' ) )
            	                            {
            	                            // InternalMcmodel.g:7178:14: ( (lv_broken_30_0= 'true' ) )
            	                            // InternalMcmodel.g:7179:15: (lv_broken_30_0= 'true' )
            	                            {
            	                            // InternalMcmodel.g:7179:15: (lv_broken_30_0= 'true' )
            	                            // InternalMcmodel.g:7180:16: lv_broken_30_0= 'true'
            	                            {
            	                            lv_broken_30_0=(Token)match(input,20,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              																newLeafNode(lv_broken_30_0, grammarAccess.getOverridePredicate_5Access().getBrokenTrueKeyword_3_2_1_1_1_1_1_0_0());
            	                              															
            	                            }
            	                            if ( state.backtracking==0 ) {

            	                              																if (current==null) {
            	                              																	current = createModelElement(grammarAccess.getOverridePredicate_5Rule());
            	                              																}
            	                              																setWithLastConsumed(current, "broken", true, "true");
            	                              															
            	                            }

            	                            }


            	                            }


            	                            }
            	                            break;
            	                        case 2 :
            	                            // InternalMcmodel.g:7193:14: otherlv_31= 'false'
            	                            {
            	                            otherlv_31=(Token)match(input,21,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_31, grammarAccess.getOverridePredicate_5Access().getFalseKeyword_3_2_1_1_1_1_1_1());
            	                              													
            	                            }

            	                            }
            	                            break;

            	                    }


            	                    }


            	                    }
            	                    break;

            	            }


            	            }


            	            }
            	            break;

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getOverridePredicate_5Access().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 4 :
            	    // InternalMcmodel.g:7208:4: ({...}? => ( ({...}? => (otherlv_32= '&' ( ( ( (lv_castDefined_33_0= '!' ) ) otherlv_34= 'cast' ) | ( ( (lv_castDefined_35_0= 'cast' ) ) ( (otherlv_36= '!=' ( ( (lv_cast_37_0= 'false' ) ) | otherlv_38= 'true' ) ) | ( (otherlv_39= '=' | otherlv_40= '==' ) ( ( (lv_cast_41_0= 'true' ) ) | otherlv_42= 'false' ) ) ) ) ) ) ) ) )
            	    {
            	    // InternalMcmodel.g:7208:4: ({...}? => ( ({...}? => (otherlv_32= '&' ( ( ( (lv_castDefined_33_0= '!' ) ) otherlv_34= 'cast' ) | ( ( (lv_castDefined_35_0= 'cast' ) ) ( (otherlv_36= '!=' ( ( (lv_cast_37_0= 'false' ) ) | otherlv_38= 'true' ) ) | ( (otherlv_39= '=' | otherlv_40= '==' ) ( ( (lv_cast_41_0= 'true' ) ) | otherlv_42= 'false' ) ) ) ) ) ) ) ) )
            	    // InternalMcmodel.g:7209:5: {...}? => ( ({...}? => (otherlv_32= '&' ( ( ( (lv_castDefined_33_0= '!' ) ) otherlv_34= 'cast' ) | ( ( (lv_castDefined_35_0= 'cast' ) ) ( (otherlv_36= '!=' ( ( (lv_cast_37_0= 'false' ) ) | otherlv_38= 'true' ) ) | ( (otherlv_39= '=' | otherlv_40= '==' ) ( ( (lv_cast_41_0= 'true' ) ) | otherlv_42= 'false' ) ) ) ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_5Access().getUnorderedGroup_3(), 3) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_5", "getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_5Access().getUnorderedGroup_3(), 3)");
            	    }
            	    // InternalMcmodel.g:7209:116: ( ({...}? => (otherlv_32= '&' ( ( ( (lv_castDefined_33_0= '!' ) ) otherlv_34= 'cast' ) | ( ( (lv_castDefined_35_0= 'cast' ) ) ( (otherlv_36= '!=' ( ( (lv_cast_37_0= 'false' ) ) | otherlv_38= 'true' ) ) | ( (otherlv_39= '=' | otherlv_40= '==' ) ( ( (lv_cast_41_0= 'true' ) ) | otherlv_42= 'false' ) ) ) ) ) ) ) )
            	    // InternalMcmodel.g:7210:6: ({...}? => (otherlv_32= '&' ( ( ( (lv_castDefined_33_0= '!' ) ) otherlv_34= 'cast' ) | ( ( (lv_castDefined_35_0= 'cast' ) ) ( (otherlv_36= '!=' ( ( (lv_cast_37_0= 'false' ) ) | otherlv_38= 'true' ) ) | ( (otherlv_39= '=' | otherlv_40= '==' ) ( ( (lv_cast_41_0= 'true' ) ) | otherlv_42= 'false' ) ) ) ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getOverridePredicate_5Access().getUnorderedGroup_3(), 3);
            	    // InternalMcmodel.g:7213:9: ({...}? => (otherlv_32= '&' ( ( ( (lv_castDefined_33_0= '!' ) ) otherlv_34= 'cast' ) | ( ( (lv_castDefined_35_0= 'cast' ) ) ( (otherlv_36= '!=' ( ( (lv_cast_37_0= 'false' ) ) | otherlv_38= 'true' ) ) | ( (otherlv_39= '=' | otherlv_40= '==' ) ( ( (lv_cast_41_0= 'true' ) ) | otherlv_42= 'false' ) ) ) ) ) ) )
            	    // InternalMcmodel.g:7213:10: {...}? => (otherlv_32= '&' ( ( ( (lv_castDefined_33_0= '!' ) ) otherlv_34= 'cast' ) | ( ( (lv_castDefined_35_0= 'cast' ) ) ( (otherlv_36= '!=' ( ( (lv_cast_37_0= 'false' ) ) | otherlv_38= 'true' ) ) | ( (otherlv_39= '=' | otherlv_40= '==' ) ( ( (lv_cast_41_0= 'true' ) ) | otherlv_42= 'false' ) ) ) ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_5", "true");
            	    }
            	    // InternalMcmodel.g:7213:19: (otherlv_32= '&' ( ( ( (lv_castDefined_33_0= '!' ) ) otherlv_34= 'cast' ) | ( ( (lv_castDefined_35_0= 'cast' ) ) ( (otherlv_36= '!=' ( ( (lv_cast_37_0= 'false' ) ) | otherlv_38= 'true' ) ) | ( (otherlv_39= '=' | otherlv_40= '==' ) ( ( (lv_cast_41_0= 'true' ) ) | otherlv_42= 'false' ) ) ) ) ) )
            	    // InternalMcmodel.g:7213:20: otherlv_32= '&' ( ( ( (lv_castDefined_33_0= '!' ) ) otherlv_34= 'cast' ) | ( ( (lv_castDefined_35_0= 'cast' ) ) ( (otherlv_36= '!=' ( ( (lv_cast_37_0= 'false' ) ) | otherlv_38= 'true' ) ) | ( (otherlv_39= '=' | otherlv_40= '==' ) ( ( (lv_cast_41_0= 'true' ) ) | otherlv_42= 'false' ) ) ) ) )
            	    {
            	    otherlv_32=(Token)match(input,59,FOLLOW_43); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_32, grammarAccess.getOverridePredicate_5Access().getAmpersandKeyword_3_3_0());
            	      								
            	    }
            	    // InternalMcmodel.g:7217:9: ( ( ( (lv_castDefined_33_0= '!' ) ) otherlv_34= 'cast' ) | ( ( (lv_castDefined_35_0= 'cast' ) ) ( (otherlv_36= '!=' ( ( (lv_cast_37_0= 'false' ) ) | otherlv_38= 'true' ) ) | ( (otherlv_39= '=' | otherlv_40= '==' ) ( ( (lv_cast_41_0= 'true' ) ) | otherlv_42= 'false' ) ) ) ) )
            	    int alt206=2;
            	    int LA206_0 = input.LA(1);

            	    if ( (LA206_0==60) ) {
            	        alt206=1;
            	    }
            	    else if ( (LA206_0==64) ) {
            	        alt206=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 206, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt206) {
            	        case 1 :
            	            // InternalMcmodel.g:7218:10: ( ( (lv_castDefined_33_0= '!' ) ) otherlv_34= 'cast' )
            	            {
            	            // InternalMcmodel.g:7218:10: ( ( (lv_castDefined_33_0= '!' ) ) otherlv_34= 'cast' )
            	            // InternalMcmodel.g:7219:11: ( (lv_castDefined_33_0= '!' ) ) otherlv_34= 'cast'
            	            {
            	            // InternalMcmodel.g:7219:11: ( (lv_castDefined_33_0= '!' ) )
            	            // InternalMcmodel.g:7220:12: (lv_castDefined_33_0= '!' )
            	            {
            	            // InternalMcmodel.g:7220:12: (lv_castDefined_33_0= '!' )
            	            // InternalMcmodel.g:7221:13: lv_castDefined_33_0= '!'
            	            {
            	            lv_castDefined_33_0=(Token)match(input,60,FOLLOW_44); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              													newLeafNode(lv_castDefined_33_0, grammarAccess.getOverridePredicate_5Access().getCastDefinedExclamationMarkKeyword_3_3_1_0_0_0());
            	              												
            	            }
            	            if ( state.backtracking==0 ) {

            	              													if (current==null) {
            	              														current = createModelElement(grammarAccess.getOverridePredicate_5Rule());
            	              													}
            	              													setWithLastConsumed(current, "castDefined", true, "!");
            	              												
            	            }

            	            }


            	            }

            	            otherlv_34=(Token)match(input,64,FOLLOW_37); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              											newLeafNode(otherlv_34, grammarAccess.getOverridePredicate_5Access().getCastKeyword_3_3_1_0_1());
            	              										
            	            }

            	            }


            	            }
            	            break;
            	        case 2 :
            	            // InternalMcmodel.g:7239:10: ( ( (lv_castDefined_35_0= 'cast' ) ) ( (otherlv_36= '!=' ( ( (lv_cast_37_0= 'false' ) ) | otherlv_38= 'true' ) ) | ( (otherlv_39= '=' | otherlv_40= '==' ) ( ( (lv_cast_41_0= 'true' ) ) | otherlv_42= 'false' ) ) ) )
            	            {
            	            // InternalMcmodel.g:7239:10: ( ( (lv_castDefined_35_0= 'cast' ) ) ( (otherlv_36= '!=' ( ( (lv_cast_37_0= 'false' ) ) | otherlv_38= 'true' ) ) | ( (otherlv_39= '=' | otherlv_40= '==' ) ( ( (lv_cast_41_0= 'true' ) ) | otherlv_42= 'false' ) ) ) )
            	            // InternalMcmodel.g:7240:11: ( (lv_castDefined_35_0= 'cast' ) ) ( (otherlv_36= '!=' ( ( (lv_cast_37_0= 'false' ) ) | otherlv_38= 'true' ) ) | ( (otherlv_39= '=' | otherlv_40= '==' ) ( ( (lv_cast_41_0= 'true' ) ) | otherlv_42= 'false' ) ) )
            	            {
            	            // InternalMcmodel.g:7240:11: ( (lv_castDefined_35_0= 'cast' ) )
            	            // InternalMcmodel.g:7241:12: (lv_castDefined_35_0= 'cast' )
            	            {
            	            // InternalMcmodel.g:7241:12: (lv_castDefined_35_0= 'cast' )
            	            // InternalMcmodel.g:7242:13: lv_castDefined_35_0= 'cast'
            	            {
            	            lv_castDefined_35_0=(Token)match(input,64,FOLLOW_40); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              													newLeafNode(lv_castDefined_35_0, grammarAccess.getOverridePredicate_5Access().getCastDefinedCastKeyword_3_3_1_1_0_0());
            	              												
            	            }
            	            if ( state.backtracking==0 ) {

            	              													if (current==null) {
            	              														current = createModelElement(grammarAccess.getOverridePredicate_5Rule());
            	              													}
            	              													setWithLastConsumed(current, "castDefined", true, "cast");
            	              												
            	            }

            	            }


            	            }

            	            // InternalMcmodel.g:7254:11: ( (otherlv_36= '!=' ( ( (lv_cast_37_0= 'false' ) ) | otherlv_38= 'true' ) ) | ( (otherlv_39= '=' | otherlv_40= '==' ) ( ( (lv_cast_41_0= 'true' ) ) | otherlv_42= 'false' ) ) )
            	            int alt205=2;
            	            int LA205_0 = input.LA(1);

            	            if ( (LA205_0==62) ) {
            	                alt205=1;
            	            }
            	            else if ( (LA205_0==18||LA205_0==58) ) {
            	                alt205=2;
            	            }
            	            else {
            	                if (state.backtracking>0) {state.failed=true; return current;}
            	                NoViableAltException nvae =
            	                    new NoViableAltException("", 205, 0, input);

            	                throw nvae;
            	            }
            	            switch (alt205) {
            	                case 1 :
            	                    // InternalMcmodel.g:7255:12: (otherlv_36= '!=' ( ( (lv_cast_37_0= 'false' ) ) | otherlv_38= 'true' ) )
            	                    {
            	                    // InternalMcmodel.g:7255:12: (otherlv_36= '!=' ( ( (lv_cast_37_0= 'false' ) ) | otherlv_38= 'true' ) )
            	                    // InternalMcmodel.g:7256:13: otherlv_36= '!=' ( ( (lv_cast_37_0= 'false' ) ) | otherlv_38= 'true' )
            	                    {
            	                    otherlv_36=(Token)match(input,62,FOLLOW_7); if (state.failed) return current;
            	                    if ( state.backtracking==0 ) {

            	                      													newLeafNode(otherlv_36, grammarAccess.getOverridePredicate_5Access().getExclamationMarkEqualsSignKeyword_3_3_1_1_1_0_0());
            	                      												
            	                    }
            	                    // InternalMcmodel.g:7260:13: ( ( (lv_cast_37_0= 'false' ) ) | otherlv_38= 'true' )
            	                    int alt202=2;
            	                    int LA202_0 = input.LA(1);

            	                    if ( (LA202_0==21) ) {
            	                        alt202=1;
            	                    }
            	                    else if ( (LA202_0==20) ) {
            	                        alt202=2;
            	                    }
            	                    else {
            	                        if (state.backtracking>0) {state.failed=true; return current;}
            	                        NoViableAltException nvae =
            	                            new NoViableAltException("", 202, 0, input);

            	                        throw nvae;
            	                    }
            	                    switch (alt202) {
            	                        case 1 :
            	                            // InternalMcmodel.g:7261:14: ( (lv_cast_37_0= 'false' ) )
            	                            {
            	                            // InternalMcmodel.g:7261:14: ( (lv_cast_37_0= 'false' ) )
            	                            // InternalMcmodel.g:7262:15: (lv_cast_37_0= 'false' )
            	                            {
            	                            // InternalMcmodel.g:7262:15: (lv_cast_37_0= 'false' )
            	                            // InternalMcmodel.g:7263:16: lv_cast_37_0= 'false'
            	                            {
            	                            lv_cast_37_0=(Token)match(input,21,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              																newLeafNode(lv_cast_37_0, grammarAccess.getOverridePredicate_5Access().getCastFalseKeyword_3_3_1_1_1_0_1_0_0());
            	                              															
            	                            }
            	                            if ( state.backtracking==0 ) {

            	                              																if (current==null) {
            	                              																	current = createModelElement(grammarAccess.getOverridePredicate_5Rule());
            	                              																}
            	                              																setWithLastConsumed(current, "cast", true, "false");
            	                              															
            	                            }

            	                            }


            	                            }


            	                            }
            	                            break;
            	                        case 2 :
            	                            // InternalMcmodel.g:7276:14: otherlv_38= 'true'
            	                            {
            	                            otherlv_38=(Token)match(input,20,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_38, grammarAccess.getOverridePredicate_5Access().getTrueKeyword_3_3_1_1_1_0_1_1());
            	                              													
            	                            }

            	                            }
            	                            break;

            	                    }


            	                    }


            	                    }
            	                    break;
            	                case 2 :
            	                    // InternalMcmodel.g:7283:12: ( (otherlv_39= '=' | otherlv_40= '==' ) ( ( (lv_cast_41_0= 'true' ) ) | otherlv_42= 'false' ) )
            	                    {
            	                    // InternalMcmodel.g:7283:12: ( (otherlv_39= '=' | otherlv_40= '==' ) ( ( (lv_cast_41_0= 'true' ) ) | otherlv_42= 'false' ) )
            	                    // InternalMcmodel.g:7284:13: (otherlv_39= '=' | otherlv_40= '==' ) ( ( (lv_cast_41_0= 'true' ) ) | otherlv_42= 'false' )
            	                    {
            	                    // InternalMcmodel.g:7284:13: (otherlv_39= '=' | otherlv_40= '==' )
            	                    int alt203=2;
            	                    int LA203_0 = input.LA(1);

            	                    if ( (LA203_0==18) ) {
            	                        alt203=1;
            	                    }
            	                    else if ( (LA203_0==58) ) {
            	                        alt203=2;
            	                    }
            	                    else {
            	                        if (state.backtracking>0) {state.failed=true; return current;}
            	                        NoViableAltException nvae =
            	                            new NoViableAltException("", 203, 0, input);

            	                        throw nvae;
            	                    }
            	                    switch (alt203) {
            	                        case 1 :
            	                            // InternalMcmodel.g:7285:14: otherlv_39= '='
            	                            {
            	                            otherlv_39=(Token)match(input,18,FOLLOW_7); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_39, grammarAccess.getOverridePredicate_5Access().getEqualsSignKeyword_3_3_1_1_1_1_0_0());
            	                              													
            	                            }

            	                            }
            	                            break;
            	                        case 2 :
            	                            // InternalMcmodel.g:7290:14: otherlv_40= '=='
            	                            {
            	                            otherlv_40=(Token)match(input,58,FOLLOW_7); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_40, grammarAccess.getOverridePredicate_5Access().getEqualsSignEqualsSignKeyword_3_3_1_1_1_1_0_1());
            	                              													
            	                            }

            	                            }
            	                            break;

            	                    }

            	                    // InternalMcmodel.g:7295:13: ( ( (lv_cast_41_0= 'true' ) ) | otherlv_42= 'false' )
            	                    int alt204=2;
            	                    int LA204_0 = input.LA(1);

            	                    if ( (LA204_0==20) ) {
            	                        alt204=1;
            	                    }
            	                    else if ( (LA204_0==21) ) {
            	                        alt204=2;
            	                    }
            	                    else {
            	                        if (state.backtracking>0) {state.failed=true; return current;}
            	                        NoViableAltException nvae =
            	                            new NoViableAltException("", 204, 0, input);

            	                        throw nvae;
            	                    }
            	                    switch (alt204) {
            	                        case 1 :
            	                            // InternalMcmodel.g:7296:14: ( (lv_cast_41_0= 'true' ) )
            	                            {
            	                            // InternalMcmodel.g:7296:14: ( (lv_cast_41_0= 'true' ) )
            	                            // InternalMcmodel.g:7297:15: (lv_cast_41_0= 'true' )
            	                            {
            	                            // InternalMcmodel.g:7297:15: (lv_cast_41_0= 'true' )
            	                            // InternalMcmodel.g:7298:16: lv_cast_41_0= 'true'
            	                            {
            	                            lv_cast_41_0=(Token)match(input,20,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              																newLeafNode(lv_cast_41_0, grammarAccess.getOverridePredicate_5Access().getCastTrueKeyword_3_3_1_1_1_1_1_0_0());
            	                              															
            	                            }
            	                            if ( state.backtracking==0 ) {

            	                              																if (current==null) {
            	                              																	current = createModelElement(grammarAccess.getOverridePredicate_5Rule());
            	                              																}
            	                              																setWithLastConsumed(current, "cast", true, "true");
            	                              															
            	                            }

            	                            }


            	                            }


            	                            }
            	                            break;
            	                        case 2 :
            	                            // InternalMcmodel.g:7311:14: otherlv_42= 'false'
            	                            {
            	                            otherlv_42=(Token)match(input,21,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_42, grammarAccess.getOverridePredicate_5Access().getFalseKeyword_3_3_1_1_1_1_1_1());
            	                              													
            	                            }

            	                            }
            	                            break;

            	                    }


            	                    }


            	                    }
            	                    break;

            	            }


            	            }


            	            }
            	            break;

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getOverridePredicate_5Access().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 5 :
            	    // InternalMcmodel.g:7326:4: ({...}? => ( ({...}? => (otherlv_43= '&' ( (lv_damageDefined_44_0= 'damage' ) ) (otherlv_45= '=' | otherlv_46= '==' ) ( (lv_damage_47_0= RULE_PERCENTAGE ) ) ) ) ) )
            	    {
            	    // InternalMcmodel.g:7326:4: ({...}? => ( ({...}? => (otherlv_43= '&' ( (lv_damageDefined_44_0= 'damage' ) ) (otherlv_45= '=' | otherlv_46= '==' ) ( (lv_damage_47_0= RULE_PERCENTAGE ) ) ) ) ) )
            	    // InternalMcmodel.g:7327:5: {...}? => ( ({...}? => (otherlv_43= '&' ( (lv_damageDefined_44_0= 'damage' ) ) (otherlv_45= '=' | otherlv_46= '==' ) ( (lv_damage_47_0= RULE_PERCENTAGE ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_5Access().getUnorderedGroup_3(), 4) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_5", "getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_5Access().getUnorderedGroup_3(), 4)");
            	    }
            	    // InternalMcmodel.g:7327:116: ( ({...}? => (otherlv_43= '&' ( (lv_damageDefined_44_0= 'damage' ) ) (otherlv_45= '=' | otherlv_46= '==' ) ( (lv_damage_47_0= RULE_PERCENTAGE ) ) ) ) )
            	    // InternalMcmodel.g:7328:6: ({...}? => (otherlv_43= '&' ( (lv_damageDefined_44_0= 'damage' ) ) (otherlv_45= '=' | otherlv_46= '==' ) ( (lv_damage_47_0= RULE_PERCENTAGE ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getOverridePredicate_5Access().getUnorderedGroup_3(), 4);
            	    // InternalMcmodel.g:7331:9: ({...}? => (otherlv_43= '&' ( (lv_damageDefined_44_0= 'damage' ) ) (otherlv_45= '=' | otherlv_46= '==' ) ( (lv_damage_47_0= RULE_PERCENTAGE ) ) ) )
            	    // InternalMcmodel.g:7331:10: {...}? => (otherlv_43= '&' ( (lv_damageDefined_44_0= 'damage' ) ) (otherlv_45= '=' | otherlv_46= '==' ) ( (lv_damage_47_0= RULE_PERCENTAGE ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_5", "true");
            	    }
            	    // InternalMcmodel.g:7331:19: (otherlv_43= '&' ( (lv_damageDefined_44_0= 'damage' ) ) (otherlv_45= '=' | otherlv_46= '==' ) ( (lv_damage_47_0= RULE_PERCENTAGE ) ) )
            	    // InternalMcmodel.g:7331:20: otherlv_43= '&' ( (lv_damageDefined_44_0= 'damage' ) ) (otherlv_45= '=' | otherlv_46= '==' ) ( (lv_damage_47_0= RULE_PERCENTAGE ) )
            	    {
            	    otherlv_43=(Token)match(input,59,FOLLOW_46); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_43, grammarAccess.getOverridePredicate_5Access().getAmpersandKeyword_3_4_0());
            	      								
            	    }
            	    // InternalMcmodel.g:7335:9: ( (lv_damageDefined_44_0= 'damage' ) )
            	    // InternalMcmodel.g:7336:10: (lv_damageDefined_44_0= 'damage' )
            	    {
            	    // InternalMcmodel.g:7336:10: (lv_damageDefined_44_0= 'damage' )
            	    // InternalMcmodel.g:7337:11: lv_damageDefined_44_0= 'damage'
            	    {
            	    lv_damageDefined_44_0=(Token)match(input,66,FOLLOW_35); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											newLeafNode(lv_damageDefined_44_0, grammarAccess.getOverridePredicate_5Access().getDamageDefinedDamageKeyword_3_4_1_0());
            	      										
            	    }
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElement(grammarAccess.getOverridePredicate_5Rule());
            	      											}
            	      											setWithLastConsumed(current, "damageDefined", true, "damage");
            	      										
            	    }

            	    }


            	    }

            	    // InternalMcmodel.g:7349:9: (otherlv_45= '=' | otherlv_46= '==' )
            	    int alt207=2;
            	    int LA207_0 = input.LA(1);

            	    if ( (LA207_0==18) ) {
            	        alt207=1;
            	    }
            	    else if ( (LA207_0==58) ) {
            	        alt207=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 207, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt207) {
            	        case 1 :
            	            // InternalMcmodel.g:7350:10: otherlv_45= '='
            	            {
            	            otherlv_45=(Token)match(input,18,FOLLOW_36); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(otherlv_45, grammarAccess.getOverridePredicate_5Access().getEqualsSignKeyword_3_4_2_0());
            	              									
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalMcmodel.g:7355:10: otherlv_46= '=='
            	            {
            	            otherlv_46=(Token)match(input,58,FOLLOW_36); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(otherlv_46, grammarAccess.getOverridePredicate_5Access().getEqualsSignEqualsSignKeyword_3_4_2_1());
            	              									
            	            }

            	            }
            	            break;

            	    }

            	    // InternalMcmodel.g:7360:9: ( (lv_damage_47_0= RULE_PERCENTAGE ) )
            	    // InternalMcmodel.g:7361:10: (lv_damage_47_0= RULE_PERCENTAGE )
            	    {
            	    // InternalMcmodel.g:7361:10: (lv_damage_47_0= RULE_PERCENTAGE )
            	    // InternalMcmodel.g:7362:11: lv_damage_47_0= RULE_PERCENTAGE
            	    {
            	    lv_damage_47_0=(Token)match(input,RULE_PERCENTAGE,FOLLOW_37); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											newLeafNode(lv_damage_47_0, grammarAccess.getOverridePredicate_5Access().getDamagePERCENTAGETerminalRuleCall_3_4_3_0());
            	      										
            	    }
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElement(grammarAccess.getOverridePredicate_5Rule());
            	      											}
            	      											setWithLastConsumed(
            	      												current,
            	      												"damage",
            	      												lv_damage_47_0,
            	      												"com.raptor.mcmodel.Mcmodel.PERCENTAGE");
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getOverridePredicate_5Access().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 6 :
            	    // InternalMcmodel.g:7384:4: ({...}? => ( ({...}? => (otherlv_48= '&' ( ( ( (lv_damagedDefined_49_0= '!' ) ) otherlv_50= 'damaged' ) | ( ( (lv_damagedDefined_51_0= 'damaged' ) ) ( (otherlv_52= '!=' ( ( (lv_damaged_53_0= 'false' ) ) | otherlv_54= 'true' ) ) | ( (otherlv_55= '=' | otherlv_56= '==' ) ( ( (lv_damaged_57_0= 'true' ) ) | otherlv_58= 'false' ) ) ) ) ) ) ) ) )
            	    {
            	    // InternalMcmodel.g:7384:4: ({...}? => ( ({...}? => (otherlv_48= '&' ( ( ( (lv_damagedDefined_49_0= '!' ) ) otherlv_50= 'damaged' ) | ( ( (lv_damagedDefined_51_0= 'damaged' ) ) ( (otherlv_52= '!=' ( ( (lv_damaged_53_0= 'false' ) ) | otherlv_54= 'true' ) ) | ( (otherlv_55= '=' | otherlv_56= '==' ) ( ( (lv_damaged_57_0= 'true' ) ) | otherlv_58= 'false' ) ) ) ) ) ) ) ) )
            	    // InternalMcmodel.g:7385:5: {...}? => ( ({...}? => (otherlv_48= '&' ( ( ( (lv_damagedDefined_49_0= '!' ) ) otherlv_50= 'damaged' ) | ( ( (lv_damagedDefined_51_0= 'damaged' ) ) ( (otherlv_52= '!=' ( ( (lv_damaged_53_0= 'false' ) ) | otherlv_54= 'true' ) ) | ( (otherlv_55= '=' | otherlv_56= '==' ) ( ( (lv_damaged_57_0= 'true' ) ) | otherlv_58= 'false' ) ) ) ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_5Access().getUnorderedGroup_3(), 5) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_5", "getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_5Access().getUnorderedGroup_3(), 5)");
            	    }
            	    // InternalMcmodel.g:7385:116: ( ({...}? => (otherlv_48= '&' ( ( ( (lv_damagedDefined_49_0= '!' ) ) otherlv_50= 'damaged' ) | ( ( (lv_damagedDefined_51_0= 'damaged' ) ) ( (otherlv_52= '!=' ( ( (lv_damaged_53_0= 'false' ) ) | otherlv_54= 'true' ) ) | ( (otherlv_55= '=' | otherlv_56= '==' ) ( ( (lv_damaged_57_0= 'true' ) ) | otherlv_58= 'false' ) ) ) ) ) ) ) )
            	    // InternalMcmodel.g:7386:6: ({...}? => (otherlv_48= '&' ( ( ( (lv_damagedDefined_49_0= '!' ) ) otherlv_50= 'damaged' ) | ( ( (lv_damagedDefined_51_0= 'damaged' ) ) ( (otherlv_52= '!=' ( ( (lv_damaged_53_0= 'false' ) ) | otherlv_54= 'true' ) ) | ( (otherlv_55= '=' | otherlv_56= '==' ) ( ( (lv_damaged_57_0= 'true' ) ) | otherlv_58= 'false' ) ) ) ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getOverridePredicate_5Access().getUnorderedGroup_3(), 5);
            	    // InternalMcmodel.g:7389:9: ({...}? => (otherlv_48= '&' ( ( ( (lv_damagedDefined_49_0= '!' ) ) otherlv_50= 'damaged' ) | ( ( (lv_damagedDefined_51_0= 'damaged' ) ) ( (otherlv_52= '!=' ( ( (lv_damaged_53_0= 'false' ) ) | otherlv_54= 'true' ) ) | ( (otherlv_55= '=' | otherlv_56= '==' ) ( ( (lv_damaged_57_0= 'true' ) ) | otherlv_58= 'false' ) ) ) ) ) ) )
            	    // InternalMcmodel.g:7389:10: {...}? => (otherlv_48= '&' ( ( ( (lv_damagedDefined_49_0= '!' ) ) otherlv_50= 'damaged' ) | ( ( (lv_damagedDefined_51_0= 'damaged' ) ) ( (otherlv_52= '!=' ( ( (lv_damaged_53_0= 'false' ) ) | otherlv_54= 'true' ) ) | ( (otherlv_55= '=' | otherlv_56= '==' ) ( ( (lv_damaged_57_0= 'true' ) ) | otherlv_58= 'false' ) ) ) ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_5", "true");
            	    }
            	    // InternalMcmodel.g:7389:19: (otherlv_48= '&' ( ( ( (lv_damagedDefined_49_0= '!' ) ) otherlv_50= 'damaged' ) | ( ( (lv_damagedDefined_51_0= 'damaged' ) ) ( (otherlv_52= '!=' ( ( (lv_damaged_53_0= 'false' ) ) | otherlv_54= 'true' ) ) | ( (otherlv_55= '=' | otherlv_56= '==' ) ( ( (lv_damaged_57_0= 'true' ) ) | otherlv_58= 'false' ) ) ) ) ) )
            	    // InternalMcmodel.g:7389:20: otherlv_48= '&' ( ( ( (lv_damagedDefined_49_0= '!' ) ) otherlv_50= 'damaged' ) | ( ( (lv_damagedDefined_51_0= 'damaged' ) ) ( (otherlv_52= '!=' ( ( (lv_damaged_53_0= 'false' ) ) | otherlv_54= 'true' ) ) | ( (otherlv_55= '=' | otherlv_56= '==' ) ( ( (lv_damaged_57_0= 'true' ) ) | otherlv_58= 'false' ) ) ) ) )
            	    {
            	    otherlv_48=(Token)match(input,59,FOLLOW_47); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_48, grammarAccess.getOverridePredicate_5Access().getAmpersandKeyword_3_5_0());
            	      								
            	    }
            	    // InternalMcmodel.g:7393:9: ( ( ( (lv_damagedDefined_49_0= '!' ) ) otherlv_50= 'damaged' ) | ( ( (lv_damagedDefined_51_0= 'damaged' ) ) ( (otherlv_52= '!=' ( ( (lv_damaged_53_0= 'false' ) ) | otherlv_54= 'true' ) ) | ( (otherlv_55= '=' | otherlv_56= '==' ) ( ( (lv_damaged_57_0= 'true' ) ) | otherlv_58= 'false' ) ) ) ) )
            	    int alt212=2;
            	    int LA212_0 = input.LA(1);

            	    if ( (LA212_0==60) ) {
            	        alt212=1;
            	    }
            	    else if ( (LA212_0==67) ) {
            	        alt212=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 212, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt212) {
            	        case 1 :
            	            // InternalMcmodel.g:7394:10: ( ( (lv_damagedDefined_49_0= '!' ) ) otherlv_50= 'damaged' )
            	            {
            	            // InternalMcmodel.g:7394:10: ( ( (lv_damagedDefined_49_0= '!' ) ) otherlv_50= 'damaged' )
            	            // InternalMcmodel.g:7395:11: ( (lv_damagedDefined_49_0= '!' ) ) otherlv_50= 'damaged'
            	            {
            	            // InternalMcmodel.g:7395:11: ( (lv_damagedDefined_49_0= '!' ) )
            	            // InternalMcmodel.g:7396:12: (lv_damagedDefined_49_0= '!' )
            	            {
            	            // InternalMcmodel.g:7396:12: (lv_damagedDefined_49_0= '!' )
            	            // InternalMcmodel.g:7397:13: lv_damagedDefined_49_0= '!'
            	            {
            	            lv_damagedDefined_49_0=(Token)match(input,60,FOLLOW_48); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              													newLeafNode(lv_damagedDefined_49_0, grammarAccess.getOverridePredicate_5Access().getDamagedDefinedExclamationMarkKeyword_3_5_1_0_0_0());
            	              												
            	            }
            	            if ( state.backtracking==0 ) {

            	              													if (current==null) {
            	              														current = createModelElement(grammarAccess.getOverridePredicate_5Rule());
            	              													}
            	              													setWithLastConsumed(current, "damagedDefined", true, "!");
            	              												
            	            }

            	            }


            	            }

            	            otherlv_50=(Token)match(input,67,FOLLOW_37); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              											newLeafNode(otherlv_50, grammarAccess.getOverridePredicate_5Access().getDamagedKeyword_3_5_1_0_1());
            	              										
            	            }

            	            }


            	            }
            	            break;
            	        case 2 :
            	            // InternalMcmodel.g:7415:10: ( ( (lv_damagedDefined_51_0= 'damaged' ) ) ( (otherlv_52= '!=' ( ( (lv_damaged_53_0= 'false' ) ) | otherlv_54= 'true' ) ) | ( (otherlv_55= '=' | otherlv_56= '==' ) ( ( (lv_damaged_57_0= 'true' ) ) | otherlv_58= 'false' ) ) ) )
            	            {
            	            // InternalMcmodel.g:7415:10: ( ( (lv_damagedDefined_51_0= 'damaged' ) ) ( (otherlv_52= '!=' ( ( (lv_damaged_53_0= 'false' ) ) | otherlv_54= 'true' ) ) | ( (otherlv_55= '=' | otherlv_56= '==' ) ( ( (lv_damaged_57_0= 'true' ) ) | otherlv_58= 'false' ) ) ) )
            	            // InternalMcmodel.g:7416:11: ( (lv_damagedDefined_51_0= 'damaged' ) ) ( (otherlv_52= '!=' ( ( (lv_damaged_53_0= 'false' ) ) | otherlv_54= 'true' ) ) | ( (otherlv_55= '=' | otherlv_56= '==' ) ( ( (lv_damaged_57_0= 'true' ) ) | otherlv_58= 'false' ) ) )
            	            {
            	            // InternalMcmodel.g:7416:11: ( (lv_damagedDefined_51_0= 'damaged' ) )
            	            // InternalMcmodel.g:7417:12: (lv_damagedDefined_51_0= 'damaged' )
            	            {
            	            // InternalMcmodel.g:7417:12: (lv_damagedDefined_51_0= 'damaged' )
            	            // InternalMcmodel.g:7418:13: lv_damagedDefined_51_0= 'damaged'
            	            {
            	            lv_damagedDefined_51_0=(Token)match(input,67,FOLLOW_40); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              													newLeafNode(lv_damagedDefined_51_0, grammarAccess.getOverridePredicate_5Access().getDamagedDefinedDamagedKeyword_3_5_1_1_0_0());
            	              												
            	            }
            	            if ( state.backtracking==0 ) {

            	              													if (current==null) {
            	              														current = createModelElement(grammarAccess.getOverridePredicate_5Rule());
            	              													}
            	              													setWithLastConsumed(current, "damagedDefined", true, "damaged");
            	              												
            	            }

            	            }


            	            }

            	            // InternalMcmodel.g:7430:11: ( (otherlv_52= '!=' ( ( (lv_damaged_53_0= 'false' ) ) | otherlv_54= 'true' ) ) | ( (otherlv_55= '=' | otherlv_56= '==' ) ( ( (lv_damaged_57_0= 'true' ) ) | otherlv_58= 'false' ) ) )
            	            int alt211=2;
            	            int LA211_0 = input.LA(1);

            	            if ( (LA211_0==62) ) {
            	                alt211=1;
            	            }
            	            else if ( (LA211_0==18||LA211_0==58) ) {
            	                alt211=2;
            	            }
            	            else {
            	                if (state.backtracking>0) {state.failed=true; return current;}
            	                NoViableAltException nvae =
            	                    new NoViableAltException("", 211, 0, input);

            	                throw nvae;
            	            }
            	            switch (alt211) {
            	                case 1 :
            	                    // InternalMcmodel.g:7431:12: (otherlv_52= '!=' ( ( (lv_damaged_53_0= 'false' ) ) | otherlv_54= 'true' ) )
            	                    {
            	                    // InternalMcmodel.g:7431:12: (otherlv_52= '!=' ( ( (lv_damaged_53_0= 'false' ) ) | otherlv_54= 'true' ) )
            	                    // InternalMcmodel.g:7432:13: otherlv_52= '!=' ( ( (lv_damaged_53_0= 'false' ) ) | otherlv_54= 'true' )
            	                    {
            	                    otherlv_52=(Token)match(input,62,FOLLOW_7); if (state.failed) return current;
            	                    if ( state.backtracking==0 ) {

            	                      													newLeafNode(otherlv_52, grammarAccess.getOverridePredicate_5Access().getExclamationMarkEqualsSignKeyword_3_5_1_1_1_0_0());
            	                      												
            	                    }
            	                    // InternalMcmodel.g:7436:13: ( ( (lv_damaged_53_0= 'false' ) ) | otherlv_54= 'true' )
            	                    int alt208=2;
            	                    int LA208_0 = input.LA(1);

            	                    if ( (LA208_0==21) ) {
            	                        alt208=1;
            	                    }
            	                    else if ( (LA208_0==20) ) {
            	                        alt208=2;
            	                    }
            	                    else {
            	                        if (state.backtracking>0) {state.failed=true; return current;}
            	                        NoViableAltException nvae =
            	                            new NoViableAltException("", 208, 0, input);

            	                        throw nvae;
            	                    }
            	                    switch (alt208) {
            	                        case 1 :
            	                            // InternalMcmodel.g:7437:14: ( (lv_damaged_53_0= 'false' ) )
            	                            {
            	                            // InternalMcmodel.g:7437:14: ( (lv_damaged_53_0= 'false' ) )
            	                            // InternalMcmodel.g:7438:15: (lv_damaged_53_0= 'false' )
            	                            {
            	                            // InternalMcmodel.g:7438:15: (lv_damaged_53_0= 'false' )
            	                            // InternalMcmodel.g:7439:16: lv_damaged_53_0= 'false'
            	                            {
            	                            lv_damaged_53_0=(Token)match(input,21,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              																newLeafNode(lv_damaged_53_0, grammarAccess.getOverridePredicate_5Access().getDamagedFalseKeyword_3_5_1_1_1_0_1_0_0());
            	                              															
            	                            }
            	                            if ( state.backtracking==0 ) {

            	                              																if (current==null) {
            	                              																	current = createModelElement(grammarAccess.getOverridePredicate_5Rule());
            	                              																}
            	                              																setWithLastConsumed(current, "damaged", true, "false");
            	                              															
            	                            }

            	                            }


            	                            }


            	                            }
            	                            break;
            	                        case 2 :
            	                            // InternalMcmodel.g:7452:14: otherlv_54= 'true'
            	                            {
            	                            otherlv_54=(Token)match(input,20,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_54, grammarAccess.getOverridePredicate_5Access().getTrueKeyword_3_5_1_1_1_0_1_1());
            	                              													
            	                            }

            	                            }
            	                            break;

            	                    }


            	                    }


            	                    }
            	                    break;
            	                case 2 :
            	                    // InternalMcmodel.g:7459:12: ( (otherlv_55= '=' | otherlv_56= '==' ) ( ( (lv_damaged_57_0= 'true' ) ) | otherlv_58= 'false' ) )
            	                    {
            	                    // InternalMcmodel.g:7459:12: ( (otherlv_55= '=' | otherlv_56= '==' ) ( ( (lv_damaged_57_0= 'true' ) ) | otherlv_58= 'false' ) )
            	                    // InternalMcmodel.g:7460:13: (otherlv_55= '=' | otherlv_56= '==' ) ( ( (lv_damaged_57_0= 'true' ) ) | otherlv_58= 'false' )
            	                    {
            	                    // InternalMcmodel.g:7460:13: (otherlv_55= '=' | otherlv_56= '==' )
            	                    int alt209=2;
            	                    int LA209_0 = input.LA(1);

            	                    if ( (LA209_0==18) ) {
            	                        alt209=1;
            	                    }
            	                    else if ( (LA209_0==58) ) {
            	                        alt209=2;
            	                    }
            	                    else {
            	                        if (state.backtracking>0) {state.failed=true; return current;}
            	                        NoViableAltException nvae =
            	                            new NoViableAltException("", 209, 0, input);

            	                        throw nvae;
            	                    }
            	                    switch (alt209) {
            	                        case 1 :
            	                            // InternalMcmodel.g:7461:14: otherlv_55= '='
            	                            {
            	                            otherlv_55=(Token)match(input,18,FOLLOW_7); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_55, grammarAccess.getOverridePredicate_5Access().getEqualsSignKeyword_3_5_1_1_1_1_0_0());
            	                              													
            	                            }

            	                            }
            	                            break;
            	                        case 2 :
            	                            // InternalMcmodel.g:7466:14: otherlv_56= '=='
            	                            {
            	                            otherlv_56=(Token)match(input,58,FOLLOW_7); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_56, grammarAccess.getOverridePredicate_5Access().getEqualsSignEqualsSignKeyword_3_5_1_1_1_1_0_1());
            	                              													
            	                            }

            	                            }
            	                            break;

            	                    }

            	                    // InternalMcmodel.g:7471:13: ( ( (lv_damaged_57_0= 'true' ) ) | otherlv_58= 'false' )
            	                    int alt210=2;
            	                    int LA210_0 = input.LA(1);

            	                    if ( (LA210_0==20) ) {
            	                        alt210=1;
            	                    }
            	                    else if ( (LA210_0==21) ) {
            	                        alt210=2;
            	                    }
            	                    else {
            	                        if (state.backtracking>0) {state.failed=true; return current;}
            	                        NoViableAltException nvae =
            	                            new NoViableAltException("", 210, 0, input);

            	                        throw nvae;
            	                    }
            	                    switch (alt210) {
            	                        case 1 :
            	                            // InternalMcmodel.g:7472:14: ( (lv_damaged_57_0= 'true' ) )
            	                            {
            	                            // InternalMcmodel.g:7472:14: ( (lv_damaged_57_0= 'true' ) )
            	                            // InternalMcmodel.g:7473:15: (lv_damaged_57_0= 'true' )
            	                            {
            	                            // InternalMcmodel.g:7473:15: (lv_damaged_57_0= 'true' )
            	                            // InternalMcmodel.g:7474:16: lv_damaged_57_0= 'true'
            	                            {
            	                            lv_damaged_57_0=(Token)match(input,20,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              																newLeafNode(lv_damaged_57_0, grammarAccess.getOverridePredicate_5Access().getDamagedTrueKeyword_3_5_1_1_1_1_1_0_0());
            	                              															
            	                            }
            	                            if ( state.backtracking==0 ) {

            	                              																if (current==null) {
            	                              																	current = createModelElement(grammarAccess.getOverridePredicate_5Rule());
            	                              																}
            	                              																setWithLastConsumed(current, "damaged", true, "true");
            	                              															
            	                            }

            	                            }


            	                            }


            	                            }
            	                            break;
            	                        case 2 :
            	                            // InternalMcmodel.g:7487:14: otherlv_58= 'false'
            	                            {
            	                            otherlv_58=(Token)match(input,21,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_58, grammarAccess.getOverridePredicate_5Access().getFalseKeyword_3_5_1_1_1_1_1_1());
            	                              													
            	                            }

            	                            }
            	                            break;

            	                    }


            	                    }


            	                    }
            	                    break;

            	            }


            	            }


            	            }
            	            break;

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getOverridePredicate_5Access().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 7 :
            	    // InternalMcmodel.g:7502:4: ({...}? => ( ({...}? => (otherlv_59= '&' ( ( ( (lv_lefthandedDefined_60_0= '!' ) ) otherlv_61= 'lefthanded' ) | ( ( (lv_lefthandedDefined_62_0= 'lefthanded' ) ) ( (otherlv_63= '!=' ( ( (lv_lefthanded_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_lefthanded_68_0= 'true' ) ) | otherlv_69= 'false' ) ) ) ) ) ) ) ) )
            	    {
            	    // InternalMcmodel.g:7502:4: ({...}? => ( ({...}? => (otherlv_59= '&' ( ( ( (lv_lefthandedDefined_60_0= '!' ) ) otherlv_61= 'lefthanded' ) | ( ( (lv_lefthandedDefined_62_0= 'lefthanded' ) ) ( (otherlv_63= '!=' ( ( (lv_lefthanded_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_lefthanded_68_0= 'true' ) ) | otherlv_69= 'false' ) ) ) ) ) ) ) ) )
            	    // InternalMcmodel.g:7503:5: {...}? => ( ({...}? => (otherlv_59= '&' ( ( ( (lv_lefthandedDefined_60_0= '!' ) ) otherlv_61= 'lefthanded' ) | ( ( (lv_lefthandedDefined_62_0= 'lefthanded' ) ) ( (otherlv_63= '!=' ( ( (lv_lefthanded_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_lefthanded_68_0= 'true' ) ) | otherlv_69= 'false' ) ) ) ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_5Access().getUnorderedGroup_3(), 6) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_5", "getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_5Access().getUnorderedGroup_3(), 6)");
            	    }
            	    // InternalMcmodel.g:7503:116: ( ({...}? => (otherlv_59= '&' ( ( ( (lv_lefthandedDefined_60_0= '!' ) ) otherlv_61= 'lefthanded' ) | ( ( (lv_lefthandedDefined_62_0= 'lefthanded' ) ) ( (otherlv_63= '!=' ( ( (lv_lefthanded_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_lefthanded_68_0= 'true' ) ) | otherlv_69= 'false' ) ) ) ) ) ) ) )
            	    // InternalMcmodel.g:7504:6: ({...}? => (otherlv_59= '&' ( ( ( (lv_lefthandedDefined_60_0= '!' ) ) otherlv_61= 'lefthanded' ) | ( ( (lv_lefthandedDefined_62_0= 'lefthanded' ) ) ( (otherlv_63= '!=' ( ( (lv_lefthanded_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_lefthanded_68_0= 'true' ) ) | otherlv_69= 'false' ) ) ) ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getOverridePredicate_5Access().getUnorderedGroup_3(), 6);
            	    // InternalMcmodel.g:7507:9: ({...}? => (otherlv_59= '&' ( ( ( (lv_lefthandedDefined_60_0= '!' ) ) otherlv_61= 'lefthanded' ) | ( ( (lv_lefthandedDefined_62_0= 'lefthanded' ) ) ( (otherlv_63= '!=' ( ( (lv_lefthanded_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_lefthanded_68_0= 'true' ) ) | otherlv_69= 'false' ) ) ) ) ) ) )
            	    // InternalMcmodel.g:7507:10: {...}? => (otherlv_59= '&' ( ( ( (lv_lefthandedDefined_60_0= '!' ) ) otherlv_61= 'lefthanded' ) | ( ( (lv_lefthandedDefined_62_0= 'lefthanded' ) ) ( (otherlv_63= '!=' ( ( (lv_lefthanded_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_lefthanded_68_0= 'true' ) ) | otherlv_69= 'false' ) ) ) ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_5", "true");
            	    }
            	    // InternalMcmodel.g:7507:19: (otherlv_59= '&' ( ( ( (lv_lefthandedDefined_60_0= '!' ) ) otherlv_61= 'lefthanded' ) | ( ( (lv_lefthandedDefined_62_0= 'lefthanded' ) ) ( (otherlv_63= '!=' ( ( (lv_lefthanded_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_lefthanded_68_0= 'true' ) ) | otherlv_69= 'false' ) ) ) ) ) )
            	    // InternalMcmodel.g:7507:20: otherlv_59= '&' ( ( ( (lv_lefthandedDefined_60_0= '!' ) ) otherlv_61= 'lefthanded' ) | ( ( (lv_lefthandedDefined_62_0= 'lefthanded' ) ) ( (otherlv_63= '!=' ( ( (lv_lefthanded_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_lefthanded_68_0= 'true' ) ) | otherlv_69= 'false' ) ) ) ) )
            	    {
            	    otherlv_59=(Token)match(input,59,FOLLOW_49); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_59, grammarAccess.getOverridePredicate_5Access().getAmpersandKeyword_3_6_0());
            	      								
            	    }
            	    // InternalMcmodel.g:7511:9: ( ( ( (lv_lefthandedDefined_60_0= '!' ) ) otherlv_61= 'lefthanded' ) | ( ( (lv_lefthandedDefined_62_0= 'lefthanded' ) ) ( (otherlv_63= '!=' ( ( (lv_lefthanded_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_lefthanded_68_0= 'true' ) ) | otherlv_69= 'false' ) ) ) ) )
            	    int alt217=2;
            	    int LA217_0 = input.LA(1);

            	    if ( (LA217_0==60) ) {
            	        alt217=1;
            	    }
            	    else if ( (LA217_0==68) ) {
            	        alt217=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 217, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt217) {
            	        case 1 :
            	            // InternalMcmodel.g:7512:10: ( ( (lv_lefthandedDefined_60_0= '!' ) ) otherlv_61= 'lefthanded' )
            	            {
            	            // InternalMcmodel.g:7512:10: ( ( (lv_lefthandedDefined_60_0= '!' ) ) otherlv_61= 'lefthanded' )
            	            // InternalMcmodel.g:7513:11: ( (lv_lefthandedDefined_60_0= '!' ) ) otherlv_61= 'lefthanded'
            	            {
            	            // InternalMcmodel.g:7513:11: ( (lv_lefthandedDefined_60_0= '!' ) )
            	            // InternalMcmodel.g:7514:12: (lv_lefthandedDefined_60_0= '!' )
            	            {
            	            // InternalMcmodel.g:7514:12: (lv_lefthandedDefined_60_0= '!' )
            	            // InternalMcmodel.g:7515:13: lv_lefthandedDefined_60_0= '!'
            	            {
            	            lv_lefthandedDefined_60_0=(Token)match(input,60,FOLLOW_50); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              													newLeafNode(lv_lefthandedDefined_60_0, grammarAccess.getOverridePredicate_5Access().getLefthandedDefinedExclamationMarkKeyword_3_6_1_0_0_0());
            	              												
            	            }
            	            if ( state.backtracking==0 ) {

            	              													if (current==null) {
            	              														current = createModelElement(grammarAccess.getOverridePredicate_5Rule());
            	              													}
            	              													setWithLastConsumed(current, "lefthandedDefined", true, "!");
            	              												
            	            }

            	            }


            	            }

            	            otherlv_61=(Token)match(input,68,FOLLOW_37); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              											newLeafNode(otherlv_61, grammarAccess.getOverridePredicate_5Access().getLefthandedKeyword_3_6_1_0_1());
            	              										
            	            }

            	            }


            	            }
            	            break;
            	        case 2 :
            	            // InternalMcmodel.g:7533:10: ( ( (lv_lefthandedDefined_62_0= 'lefthanded' ) ) ( (otherlv_63= '!=' ( ( (lv_lefthanded_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_lefthanded_68_0= 'true' ) ) | otherlv_69= 'false' ) ) ) )
            	            {
            	            // InternalMcmodel.g:7533:10: ( ( (lv_lefthandedDefined_62_0= 'lefthanded' ) ) ( (otherlv_63= '!=' ( ( (lv_lefthanded_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_lefthanded_68_0= 'true' ) ) | otherlv_69= 'false' ) ) ) )
            	            // InternalMcmodel.g:7534:11: ( (lv_lefthandedDefined_62_0= 'lefthanded' ) ) ( (otherlv_63= '!=' ( ( (lv_lefthanded_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_lefthanded_68_0= 'true' ) ) | otherlv_69= 'false' ) ) )
            	            {
            	            // InternalMcmodel.g:7534:11: ( (lv_lefthandedDefined_62_0= 'lefthanded' ) )
            	            // InternalMcmodel.g:7535:12: (lv_lefthandedDefined_62_0= 'lefthanded' )
            	            {
            	            // InternalMcmodel.g:7535:12: (lv_lefthandedDefined_62_0= 'lefthanded' )
            	            // InternalMcmodel.g:7536:13: lv_lefthandedDefined_62_0= 'lefthanded'
            	            {
            	            lv_lefthandedDefined_62_0=(Token)match(input,68,FOLLOW_40); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              													newLeafNode(lv_lefthandedDefined_62_0, grammarAccess.getOverridePredicate_5Access().getLefthandedDefinedLefthandedKeyword_3_6_1_1_0_0());
            	              												
            	            }
            	            if ( state.backtracking==0 ) {

            	              													if (current==null) {
            	              														current = createModelElement(grammarAccess.getOverridePredicate_5Rule());
            	              													}
            	              													setWithLastConsumed(current, "lefthandedDefined", true, "lefthanded");
            	              												
            	            }

            	            }


            	            }

            	            // InternalMcmodel.g:7548:11: ( (otherlv_63= '!=' ( ( (lv_lefthanded_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_lefthanded_68_0= 'true' ) ) | otherlv_69= 'false' ) ) )
            	            int alt216=2;
            	            int LA216_0 = input.LA(1);

            	            if ( (LA216_0==62) ) {
            	                alt216=1;
            	            }
            	            else if ( (LA216_0==18||LA216_0==58) ) {
            	                alt216=2;
            	            }
            	            else {
            	                if (state.backtracking>0) {state.failed=true; return current;}
            	                NoViableAltException nvae =
            	                    new NoViableAltException("", 216, 0, input);

            	                throw nvae;
            	            }
            	            switch (alt216) {
            	                case 1 :
            	                    // InternalMcmodel.g:7549:12: (otherlv_63= '!=' ( ( (lv_lefthanded_64_0= 'false' ) ) | otherlv_65= 'true' ) )
            	                    {
            	                    // InternalMcmodel.g:7549:12: (otherlv_63= '!=' ( ( (lv_lefthanded_64_0= 'false' ) ) | otherlv_65= 'true' ) )
            	                    // InternalMcmodel.g:7550:13: otherlv_63= '!=' ( ( (lv_lefthanded_64_0= 'false' ) ) | otherlv_65= 'true' )
            	                    {
            	                    otherlv_63=(Token)match(input,62,FOLLOW_7); if (state.failed) return current;
            	                    if ( state.backtracking==0 ) {

            	                      													newLeafNode(otherlv_63, grammarAccess.getOverridePredicate_5Access().getExclamationMarkEqualsSignKeyword_3_6_1_1_1_0_0());
            	                      												
            	                    }
            	                    // InternalMcmodel.g:7554:13: ( ( (lv_lefthanded_64_0= 'false' ) ) | otherlv_65= 'true' )
            	                    int alt213=2;
            	                    int LA213_0 = input.LA(1);

            	                    if ( (LA213_0==21) ) {
            	                        alt213=1;
            	                    }
            	                    else if ( (LA213_0==20) ) {
            	                        alt213=2;
            	                    }
            	                    else {
            	                        if (state.backtracking>0) {state.failed=true; return current;}
            	                        NoViableAltException nvae =
            	                            new NoViableAltException("", 213, 0, input);

            	                        throw nvae;
            	                    }
            	                    switch (alt213) {
            	                        case 1 :
            	                            // InternalMcmodel.g:7555:14: ( (lv_lefthanded_64_0= 'false' ) )
            	                            {
            	                            // InternalMcmodel.g:7555:14: ( (lv_lefthanded_64_0= 'false' ) )
            	                            // InternalMcmodel.g:7556:15: (lv_lefthanded_64_0= 'false' )
            	                            {
            	                            // InternalMcmodel.g:7556:15: (lv_lefthanded_64_0= 'false' )
            	                            // InternalMcmodel.g:7557:16: lv_lefthanded_64_0= 'false'
            	                            {
            	                            lv_lefthanded_64_0=(Token)match(input,21,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              																newLeafNode(lv_lefthanded_64_0, grammarAccess.getOverridePredicate_5Access().getLefthandedFalseKeyword_3_6_1_1_1_0_1_0_0());
            	                              															
            	                            }
            	                            if ( state.backtracking==0 ) {

            	                              																if (current==null) {
            	                              																	current = createModelElement(grammarAccess.getOverridePredicate_5Rule());
            	                              																}
            	                              																setWithLastConsumed(current, "lefthanded", true, "false");
            	                              															
            	                            }

            	                            }


            	                            }


            	                            }
            	                            break;
            	                        case 2 :
            	                            // InternalMcmodel.g:7570:14: otherlv_65= 'true'
            	                            {
            	                            otherlv_65=(Token)match(input,20,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_65, grammarAccess.getOverridePredicate_5Access().getTrueKeyword_3_6_1_1_1_0_1_1());
            	                              													
            	                            }

            	                            }
            	                            break;

            	                    }


            	                    }


            	                    }
            	                    break;
            	                case 2 :
            	                    // InternalMcmodel.g:7577:12: ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_lefthanded_68_0= 'true' ) ) | otherlv_69= 'false' ) )
            	                    {
            	                    // InternalMcmodel.g:7577:12: ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_lefthanded_68_0= 'true' ) ) | otherlv_69= 'false' ) )
            	                    // InternalMcmodel.g:7578:13: (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_lefthanded_68_0= 'true' ) ) | otherlv_69= 'false' )
            	                    {
            	                    // InternalMcmodel.g:7578:13: (otherlv_66= '=' | otherlv_67= '==' )
            	                    int alt214=2;
            	                    int LA214_0 = input.LA(1);

            	                    if ( (LA214_0==18) ) {
            	                        alt214=1;
            	                    }
            	                    else if ( (LA214_0==58) ) {
            	                        alt214=2;
            	                    }
            	                    else {
            	                        if (state.backtracking>0) {state.failed=true; return current;}
            	                        NoViableAltException nvae =
            	                            new NoViableAltException("", 214, 0, input);

            	                        throw nvae;
            	                    }
            	                    switch (alt214) {
            	                        case 1 :
            	                            // InternalMcmodel.g:7579:14: otherlv_66= '='
            	                            {
            	                            otherlv_66=(Token)match(input,18,FOLLOW_7); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_66, grammarAccess.getOverridePredicate_5Access().getEqualsSignKeyword_3_6_1_1_1_1_0_0());
            	                              													
            	                            }

            	                            }
            	                            break;
            	                        case 2 :
            	                            // InternalMcmodel.g:7584:14: otherlv_67= '=='
            	                            {
            	                            otherlv_67=(Token)match(input,58,FOLLOW_7); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_67, grammarAccess.getOverridePredicate_5Access().getEqualsSignEqualsSignKeyword_3_6_1_1_1_1_0_1());
            	                              													
            	                            }

            	                            }
            	                            break;

            	                    }

            	                    // InternalMcmodel.g:7589:13: ( ( (lv_lefthanded_68_0= 'true' ) ) | otherlv_69= 'false' )
            	                    int alt215=2;
            	                    int LA215_0 = input.LA(1);

            	                    if ( (LA215_0==20) ) {
            	                        alt215=1;
            	                    }
            	                    else if ( (LA215_0==21) ) {
            	                        alt215=2;
            	                    }
            	                    else {
            	                        if (state.backtracking>0) {state.failed=true; return current;}
            	                        NoViableAltException nvae =
            	                            new NoViableAltException("", 215, 0, input);

            	                        throw nvae;
            	                    }
            	                    switch (alt215) {
            	                        case 1 :
            	                            // InternalMcmodel.g:7590:14: ( (lv_lefthanded_68_0= 'true' ) )
            	                            {
            	                            // InternalMcmodel.g:7590:14: ( (lv_lefthanded_68_0= 'true' ) )
            	                            // InternalMcmodel.g:7591:15: (lv_lefthanded_68_0= 'true' )
            	                            {
            	                            // InternalMcmodel.g:7591:15: (lv_lefthanded_68_0= 'true' )
            	                            // InternalMcmodel.g:7592:16: lv_lefthanded_68_0= 'true'
            	                            {
            	                            lv_lefthanded_68_0=(Token)match(input,20,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              																newLeafNode(lv_lefthanded_68_0, grammarAccess.getOverridePredicate_5Access().getLefthandedTrueKeyword_3_6_1_1_1_1_1_0_0());
            	                              															
            	                            }
            	                            if ( state.backtracking==0 ) {

            	                              																if (current==null) {
            	                              																	current = createModelElement(grammarAccess.getOverridePredicate_5Rule());
            	                              																}
            	                              																setWithLastConsumed(current, "lefthanded", true, "true");
            	                              															
            	                            }

            	                            }


            	                            }


            	                            }
            	                            break;
            	                        case 2 :
            	                            // InternalMcmodel.g:7605:14: otherlv_69= 'false'
            	                            {
            	                            otherlv_69=(Token)match(input,21,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_69, grammarAccess.getOverridePredicate_5Access().getFalseKeyword_3_6_1_1_1_1_1_1());
            	                              													
            	                            }

            	                            }
            	                            break;

            	                    }


            	                    }


            	                    }
            	                    break;

            	            }


            	            }


            	            }
            	            break;

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getOverridePredicate_5Access().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 8 :
            	    // InternalMcmodel.g:7620:4: ({...}? => ( ({...}? => (otherlv_70= '&' ( (lv_pullDefined_71_0= 'pull' ) ) (otherlv_72= '=' | otherlv_73= '==' ) ( (lv_pull_74_0= RULE_PERCENTAGE ) ) ) ) ) )
            	    {
            	    // InternalMcmodel.g:7620:4: ({...}? => ( ({...}? => (otherlv_70= '&' ( (lv_pullDefined_71_0= 'pull' ) ) (otherlv_72= '=' | otherlv_73= '==' ) ( (lv_pull_74_0= RULE_PERCENTAGE ) ) ) ) ) )
            	    // InternalMcmodel.g:7621:5: {...}? => ( ({...}? => (otherlv_70= '&' ( (lv_pullDefined_71_0= 'pull' ) ) (otherlv_72= '=' | otherlv_73= '==' ) ( (lv_pull_74_0= RULE_PERCENTAGE ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_5Access().getUnorderedGroup_3(), 7) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_5", "getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_5Access().getUnorderedGroup_3(), 7)");
            	    }
            	    // InternalMcmodel.g:7621:116: ( ({...}? => (otherlv_70= '&' ( (lv_pullDefined_71_0= 'pull' ) ) (otherlv_72= '=' | otherlv_73= '==' ) ( (lv_pull_74_0= RULE_PERCENTAGE ) ) ) ) )
            	    // InternalMcmodel.g:7622:6: ({...}? => (otherlv_70= '&' ( (lv_pullDefined_71_0= 'pull' ) ) (otherlv_72= '=' | otherlv_73= '==' ) ( (lv_pull_74_0= RULE_PERCENTAGE ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getOverridePredicate_5Access().getUnorderedGroup_3(), 7);
            	    // InternalMcmodel.g:7625:9: ({...}? => (otherlv_70= '&' ( (lv_pullDefined_71_0= 'pull' ) ) (otherlv_72= '=' | otherlv_73= '==' ) ( (lv_pull_74_0= RULE_PERCENTAGE ) ) ) )
            	    // InternalMcmodel.g:7625:10: {...}? => (otherlv_70= '&' ( (lv_pullDefined_71_0= 'pull' ) ) (otherlv_72= '=' | otherlv_73= '==' ) ( (lv_pull_74_0= RULE_PERCENTAGE ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_5", "true");
            	    }
            	    // InternalMcmodel.g:7625:19: (otherlv_70= '&' ( (lv_pullDefined_71_0= 'pull' ) ) (otherlv_72= '=' | otherlv_73= '==' ) ( (lv_pull_74_0= RULE_PERCENTAGE ) ) )
            	    // InternalMcmodel.g:7625:20: otherlv_70= '&' ( (lv_pullDefined_71_0= 'pull' ) ) (otherlv_72= '=' | otherlv_73= '==' ) ( (lv_pull_74_0= RULE_PERCENTAGE ) )
            	    {
            	    otherlv_70=(Token)match(input,59,FOLLOW_51); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_70, grammarAccess.getOverridePredicate_5Access().getAmpersandKeyword_3_7_0());
            	      								
            	    }
            	    // InternalMcmodel.g:7629:9: ( (lv_pullDefined_71_0= 'pull' ) )
            	    // InternalMcmodel.g:7630:10: (lv_pullDefined_71_0= 'pull' )
            	    {
            	    // InternalMcmodel.g:7630:10: (lv_pullDefined_71_0= 'pull' )
            	    // InternalMcmodel.g:7631:11: lv_pullDefined_71_0= 'pull'
            	    {
            	    lv_pullDefined_71_0=(Token)match(input,69,FOLLOW_35); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											newLeafNode(lv_pullDefined_71_0, grammarAccess.getOverridePredicate_5Access().getPullDefinedPullKeyword_3_7_1_0());
            	      										
            	    }
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElement(grammarAccess.getOverridePredicate_5Rule());
            	      											}
            	      											setWithLastConsumed(current, "pullDefined", true, "pull");
            	      										
            	    }

            	    }


            	    }

            	    // InternalMcmodel.g:7643:9: (otherlv_72= '=' | otherlv_73= '==' )
            	    int alt218=2;
            	    int LA218_0 = input.LA(1);

            	    if ( (LA218_0==18) ) {
            	        alt218=1;
            	    }
            	    else if ( (LA218_0==58) ) {
            	        alt218=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 218, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt218) {
            	        case 1 :
            	            // InternalMcmodel.g:7644:10: otherlv_72= '='
            	            {
            	            otherlv_72=(Token)match(input,18,FOLLOW_36); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(otherlv_72, grammarAccess.getOverridePredicate_5Access().getEqualsSignKeyword_3_7_2_0());
            	              									
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalMcmodel.g:7649:10: otherlv_73= '=='
            	            {
            	            otherlv_73=(Token)match(input,58,FOLLOW_36); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(otherlv_73, grammarAccess.getOverridePredicate_5Access().getEqualsSignEqualsSignKeyword_3_7_2_1());
            	              									
            	            }

            	            }
            	            break;

            	    }

            	    // InternalMcmodel.g:7654:9: ( (lv_pull_74_0= RULE_PERCENTAGE ) )
            	    // InternalMcmodel.g:7655:10: (lv_pull_74_0= RULE_PERCENTAGE )
            	    {
            	    // InternalMcmodel.g:7655:10: (lv_pull_74_0= RULE_PERCENTAGE )
            	    // InternalMcmodel.g:7656:11: lv_pull_74_0= RULE_PERCENTAGE
            	    {
            	    lv_pull_74_0=(Token)match(input,RULE_PERCENTAGE,FOLLOW_37); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											newLeafNode(lv_pull_74_0, grammarAccess.getOverridePredicate_5Access().getPullPERCENTAGETerminalRuleCall_3_7_3_0());
            	      										
            	    }
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElement(grammarAccess.getOverridePredicate_5Rule());
            	      											}
            	      											setWithLastConsumed(
            	      												current,
            	      												"pull",
            	      												lv_pull_74_0,
            	      												"com.raptor.mcmodel.Mcmodel.PERCENTAGE");
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getOverridePredicate_5Access().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 9 :
            	    // InternalMcmodel.g:7678:4: ({...}? => ( ({...}? => (otherlv_75= '&' ( ( ( (lv_pullingDefined_76_0= '!' ) ) otherlv_77= 'pulling' ) | ( ( (lv_pullingDefined_78_0= 'pulling' ) ) ( (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) ) | ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) ) ) ) ) ) ) ) )
            	    {
            	    // InternalMcmodel.g:7678:4: ({...}? => ( ({...}? => (otherlv_75= '&' ( ( ( (lv_pullingDefined_76_0= '!' ) ) otherlv_77= 'pulling' ) | ( ( (lv_pullingDefined_78_0= 'pulling' ) ) ( (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) ) | ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) ) ) ) ) ) ) ) )
            	    // InternalMcmodel.g:7679:5: {...}? => ( ({...}? => (otherlv_75= '&' ( ( ( (lv_pullingDefined_76_0= '!' ) ) otherlv_77= 'pulling' ) | ( ( (lv_pullingDefined_78_0= 'pulling' ) ) ( (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) ) | ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) ) ) ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_5Access().getUnorderedGroup_3(), 8) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_5", "getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_5Access().getUnorderedGroup_3(), 8)");
            	    }
            	    // InternalMcmodel.g:7679:116: ( ({...}? => (otherlv_75= '&' ( ( ( (lv_pullingDefined_76_0= '!' ) ) otherlv_77= 'pulling' ) | ( ( (lv_pullingDefined_78_0= 'pulling' ) ) ( (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) ) | ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) ) ) ) ) ) ) )
            	    // InternalMcmodel.g:7680:6: ({...}? => (otherlv_75= '&' ( ( ( (lv_pullingDefined_76_0= '!' ) ) otherlv_77= 'pulling' ) | ( ( (lv_pullingDefined_78_0= 'pulling' ) ) ( (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) ) | ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) ) ) ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getOverridePredicate_5Access().getUnorderedGroup_3(), 8);
            	    // InternalMcmodel.g:7683:9: ({...}? => (otherlv_75= '&' ( ( ( (lv_pullingDefined_76_0= '!' ) ) otherlv_77= 'pulling' ) | ( ( (lv_pullingDefined_78_0= 'pulling' ) ) ( (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) ) | ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) ) ) ) ) ) )
            	    // InternalMcmodel.g:7683:10: {...}? => (otherlv_75= '&' ( ( ( (lv_pullingDefined_76_0= '!' ) ) otherlv_77= 'pulling' ) | ( ( (lv_pullingDefined_78_0= 'pulling' ) ) ( (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) ) | ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) ) ) ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_5", "true");
            	    }
            	    // InternalMcmodel.g:7683:19: (otherlv_75= '&' ( ( ( (lv_pullingDefined_76_0= '!' ) ) otherlv_77= 'pulling' ) | ( ( (lv_pullingDefined_78_0= 'pulling' ) ) ( (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) ) | ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) ) ) ) ) )
            	    // InternalMcmodel.g:7683:20: otherlv_75= '&' ( ( ( (lv_pullingDefined_76_0= '!' ) ) otherlv_77= 'pulling' ) | ( ( (lv_pullingDefined_78_0= 'pulling' ) ) ( (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) ) | ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) ) ) ) )
            	    {
            	    otherlv_75=(Token)match(input,59,FOLLOW_52); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_75, grammarAccess.getOverridePredicate_5Access().getAmpersandKeyword_3_8_0());
            	      								
            	    }
            	    // InternalMcmodel.g:7687:9: ( ( ( (lv_pullingDefined_76_0= '!' ) ) otherlv_77= 'pulling' ) | ( ( (lv_pullingDefined_78_0= 'pulling' ) ) ( (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) ) | ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) ) ) ) )
            	    int alt223=2;
            	    int LA223_0 = input.LA(1);

            	    if ( (LA223_0==60) ) {
            	        alt223=1;
            	    }
            	    else if ( (LA223_0==70) ) {
            	        alt223=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 223, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt223) {
            	        case 1 :
            	            // InternalMcmodel.g:7688:10: ( ( (lv_pullingDefined_76_0= '!' ) ) otherlv_77= 'pulling' )
            	            {
            	            // InternalMcmodel.g:7688:10: ( ( (lv_pullingDefined_76_0= '!' ) ) otherlv_77= 'pulling' )
            	            // InternalMcmodel.g:7689:11: ( (lv_pullingDefined_76_0= '!' ) ) otherlv_77= 'pulling'
            	            {
            	            // InternalMcmodel.g:7689:11: ( (lv_pullingDefined_76_0= '!' ) )
            	            // InternalMcmodel.g:7690:12: (lv_pullingDefined_76_0= '!' )
            	            {
            	            // InternalMcmodel.g:7690:12: (lv_pullingDefined_76_0= '!' )
            	            // InternalMcmodel.g:7691:13: lv_pullingDefined_76_0= '!'
            	            {
            	            lv_pullingDefined_76_0=(Token)match(input,60,FOLLOW_53); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              													newLeafNode(lv_pullingDefined_76_0, grammarAccess.getOverridePredicate_5Access().getPullingDefinedExclamationMarkKeyword_3_8_1_0_0_0());
            	              												
            	            }
            	            if ( state.backtracking==0 ) {

            	              													if (current==null) {
            	              														current = createModelElement(grammarAccess.getOverridePredicate_5Rule());
            	              													}
            	              													setWithLastConsumed(current, "pullingDefined", true, "!");
            	              												
            	            }

            	            }


            	            }

            	            otherlv_77=(Token)match(input,70,FOLLOW_37); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              											newLeafNode(otherlv_77, grammarAccess.getOverridePredicate_5Access().getPullingKeyword_3_8_1_0_1());
            	              										
            	            }

            	            }


            	            }
            	            break;
            	        case 2 :
            	            // InternalMcmodel.g:7709:10: ( ( (lv_pullingDefined_78_0= 'pulling' ) ) ( (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) ) | ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) ) ) )
            	            {
            	            // InternalMcmodel.g:7709:10: ( ( (lv_pullingDefined_78_0= 'pulling' ) ) ( (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) ) | ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) ) ) )
            	            // InternalMcmodel.g:7710:11: ( (lv_pullingDefined_78_0= 'pulling' ) ) ( (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) ) | ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) ) )
            	            {
            	            // InternalMcmodel.g:7710:11: ( (lv_pullingDefined_78_0= 'pulling' ) )
            	            // InternalMcmodel.g:7711:12: (lv_pullingDefined_78_0= 'pulling' )
            	            {
            	            // InternalMcmodel.g:7711:12: (lv_pullingDefined_78_0= 'pulling' )
            	            // InternalMcmodel.g:7712:13: lv_pullingDefined_78_0= 'pulling'
            	            {
            	            lv_pullingDefined_78_0=(Token)match(input,70,FOLLOW_40); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              													newLeafNode(lv_pullingDefined_78_0, grammarAccess.getOverridePredicate_5Access().getPullingDefinedPullingKeyword_3_8_1_1_0_0());
            	              												
            	            }
            	            if ( state.backtracking==0 ) {

            	              													if (current==null) {
            	              														current = createModelElement(grammarAccess.getOverridePredicate_5Rule());
            	              													}
            	              													setWithLastConsumed(current, "pullingDefined", true, "pulling");
            	              												
            	            }

            	            }


            	            }

            	            // InternalMcmodel.g:7724:11: ( (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) ) | ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) ) )
            	            int alt222=2;
            	            int LA222_0 = input.LA(1);

            	            if ( (LA222_0==62) ) {
            	                alt222=1;
            	            }
            	            else if ( (LA222_0==18||LA222_0==58) ) {
            	                alt222=2;
            	            }
            	            else {
            	                if (state.backtracking>0) {state.failed=true; return current;}
            	                NoViableAltException nvae =
            	                    new NoViableAltException("", 222, 0, input);

            	                throw nvae;
            	            }
            	            switch (alt222) {
            	                case 1 :
            	                    // InternalMcmodel.g:7725:12: (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) )
            	                    {
            	                    // InternalMcmodel.g:7725:12: (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) )
            	                    // InternalMcmodel.g:7726:13: otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' )
            	                    {
            	                    otherlv_79=(Token)match(input,62,FOLLOW_7); if (state.failed) return current;
            	                    if ( state.backtracking==0 ) {

            	                      													newLeafNode(otherlv_79, grammarAccess.getOverridePredicate_5Access().getExclamationMarkEqualsSignKeyword_3_8_1_1_1_0_0());
            	                      												
            	                    }
            	                    // InternalMcmodel.g:7730:13: ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' )
            	                    int alt219=2;
            	                    int LA219_0 = input.LA(1);

            	                    if ( (LA219_0==21) ) {
            	                        alt219=1;
            	                    }
            	                    else if ( (LA219_0==20) ) {
            	                        alt219=2;
            	                    }
            	                    else {
            	                        if (state.backtracking>0) {state.failed=true; return current;}
            	                        NoViableAltException nvae =
            	                            new NoViableAltException("", 219, 0, input);

            	                        throw nvae;
            	                    }
            	                    switch (alt219) {
            	                        case 1 :
            	                            // InternalMcmodel.g:7731:14: ( (lv_pulling_80_0= 'false' ) )
            	                            {
            	                            // InternalMcmodel.g:7731:14: ( (lv_pulling_80_0= 'false' ) )
            	                            // InternalMcmodel.g:7732:15: (lv_pulling_80_0= 'false' )
            	                            {
            	                            // InternalMcmodel.g:7732:15: (lv_pulling_80_0= 'false' )
            	                            // InternalMcmodel.g:7733:16: lv_pulling_80_0= 'false'
            	                            {
            	                            lv_pulling_80_0=(Token)match(input,21,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              																newLeafNode(lv_pulling_80_0, grammarAccess.getOverridePredicate_5Access().getPullingFalseKeyword_3_8_1_1_1_0_1_0_0());
            	                              															
            	                            }
            	                            if ( state.backtracking==0 ) {

            	                              																if (current==null) {
            	                              																	current = createModelElement(grammarAccess.getOverridePredicate_5Rule());
            	                              																}
            	                              																setWithLastConsumed(current, "pulling", true, "false");
            	                              															
            	                            }

            	                            }


            	                            }


            	                            }
            	                            break;
            	                        case 2 :
            	                            // InternalMcmodel.g:7746:14: otherlv_81= 'true'
            	                            {
            	                            otherlv_81=(Token)match(input,20,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_81, grammarAccess.getOverridePredicate_5Access().getTrueKeyword_3_8_1_1_1_0_1_1());
            	                              													
            	                            }

            	                            }
            	                            break;

            	                    }


            	                    }


            	                    }
            	                    break;
            	                case 2 :
            	                    // InternalMcmodel.g:7753:12: ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) )
            	                    {
            	                    // InternalMcmodel.g:7753:12: ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) )
            	                    // InternalMcmodel.g:7754:13: (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' )
            	                    {
            	                    // InternalMcmodel.g:7754:13: (otherlv_82= '=' | otherlv_83= '==' )
            	                    int alt220=2;
            	                    int LA220_0 = input.LA(1);

            	                    if ( (LA220_0==18) ) {
            	                        alt220=1;
            	                    }
            	                    else if ( (LA220_0==58) ) {
            	                        alt220=2;
            	                    }
            	                    else {
            	                        if (state.backtracking>0) {state.failed=true; return current;}
            	                        NoViableAltException nvae =
            	                            new NoViableAltException("", 220, 0, input);

            	                        throw nvae;
            	                    }
            	                    switch (alt220) {
            	                        case 1 :
            	                            // InternalMcmodel.g:7755:14: otherlv_82= '='
            	                            {
            	                            otherlv_82=(Token)match(input,18,FOLLOW_7); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_82, grammarAccess.getOverridePredicate_5Access().getEqualsSignKeyword_3_8_1_1_1_1_0_0());
            	                              													
            	                            }

            	                            }
            	                            break;
            	                        case 2 :
            	                            // InternalMcmodel.g:7760:14: otherlv_83= '=='
            	                            {
            	                            otherlv_83=(Token)match(input,58,FOLLOW_7); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_83, grammarAccess.getOverridePredicate_5Access().getEqualsSignEqualsSignKeyword_3_8_1_1_1_1_0_1());
            	                              													
            	                            }

            	                            }
            	                            break;

            	                    }

            	                    // InternalMcmodel.g:7765:13: ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' )
            	                    int alt221=2;
            	                    int LA221_0 = input.LA(1);

            	                    if ( (LA221_0==20) ) {
            	                        alt221=1;
            	                    }
            	                    else if ( (LA221_0==21) ) {
            	                        alt221=2;
            	                    }
            	                    else {
            	                        if (state.backtracking>0) {state.failed=true; return current;}
            	                        NoViableAltException nvae =
            	                            new NoViableAltException("", 221, 0, input);

            	                        throw nvae;
            	                    }
            	                    switch (alt221) {
            	                        case 1 :
            	                            // InternalMcmodel.g:7766:14: ( (lv_pulling_84_0= 'true' ) )
            	                            {
            	                            // InternalMcmodel.g:7766:14: ( (lv_pulling_84_0= 'true' ) )
            	                            // InternalMcmodel.g:7767:15: (lv_pulling_84_0= 'true' )
            	                            {
            	                            // InternalMcmodel.g:7767:15: (lv_pulling_84_0= 'true' )
            	                            // InternalMcmodel.g:7768:16: lv_pulling_84_0= 'true'
            	                            {
            	                            lv_pulling_84_0=(Token)match(input,20,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              																newLeafNode(lv_pulling_84_0, grammarAccess.getOverridePredicate_5Access().getPullingTrueKeyword_3_8_1_1_1_1_1_0_0());
            	                              															
            	                            }
            	                            if ( state.backtracking==0 ) {

            	                              																if (current==null) {
            	                              																	current = createModelElement(grammarAccess.getOverridePredicate_5Rule());
            	                              																}
            	                              																setWithLastConsumed(current, "pulling", true, "true");
            	                              															
            	                            }

            	                            }


            	                            }


            	                            }
            	                            break;
            	                        case 2 :
            	                            // InternalMcmodel.g:7781:14: otherlv_85= 'false'
            	                            {
            	                            otherlv_85=(Token)match(input,21,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_85, grammarAccess.getOverridePredicate_5Access().getFalseKeyword_3_8_1_1_1_1_1_1());
            	                              													
            	                            }

            	                            }
            	                            break;

            	                    }


            	                    }


            	                    }
            	                    break;

            	            }


            	            }


            	            }
            	            break;

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getOverridePredicate_5Access().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 10 :
            	    // InternalMcmodel.g:7796:4: ({...}? => ( ({...}? => (otherlv_86= '&' ( ( ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing' ) | ( ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) ) ) ) ) ) )
            	    {
            	    // InternalMcmodel.g:7796:4: ({...}? => ( ({...}? => (otherlv_86= '&' ( ( ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing' ) | ( ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) ) ) ) ) ) )
            	    // InternalMcmodel.g:7797:5: {...}? => ( ({...}? => (otherlv_86= '&' ( ( ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing' ) | ( ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_5Access().getUnorderedGroup_3(), 9) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_5", "getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_5Access().getUnorderedGroup_3(), 9)");
            	    }
            	    // InternalMcmodel.g:7797:116: ( ({...}? => (otherlv_86= '&' ( ( ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing' ) | ( ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) ) ) ) ) )
            	    // InternalMcmodel.g:7798:6: ({...}? => (otherlv_86= '&' ( ( ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing' ) | ( ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getOverridePredicate_5Access().getUnorderedGroup_3(), 9);
            	    // InternalMcmodel.g:7801:9: ({...}? => (otherlv_86= '&' ( ( ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing' ) | ( ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) ) ) ) )
            	    // InternalMcmodel.g:7801:10: {...}? => (otherlv_86= '&' ( ( ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing' ) | ( ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_5", "true");
            	    }
            	    // InternalMcmodel.g:7801:19: (otherlv_86= '&' ( ( ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing' ) | ( ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) ) ) )
            	    // InternalMcmodel.g:7801:20: otherlv_86= '&' ( ( ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing' ) | ( ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) ) )
            	    {
            	    otherlv_86=(Token)match(input,59,FOLLOW_54); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_86, grammarAccess.getOverridePredicate_5Access().getAmpersandKeyword_3_9_0());
            	      								
            	    }
            	    // InternalMcmodel.g:7805:9: ( ( ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing' ) | ( ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) ) )
            	    int alt228=2;
            	    int LA228_0 = input.LA(1);

            	    if ( (LA228_0==60) ) {
            	        alt228=1;
            	    }
            	    else if ( (LA228_0==71) ) {
            	        alt228=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 228, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt228) {
            	        case 1 :
            	            // InternalMcmodel.g:7806:10: ( ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing' )
            	            {
            	            // InternalMcmodel.g:7806:10: ( ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing' )
            	            // InternalMcmodel.g:7807:11: ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing'
            	            {
            	            // InternalMcmodel.g:7807:11: ( (lv_throwingDefined_87_0= '!' ) )
            	            // InternalMcmodel.g:7808:12: (lv_throwingDefined_87_0= '!' )
            	            {
            	            // InternalMcmodel.g:7808:12: (lv_throwingDefined_87_0= '!' )
            	            // InternalMcmodel.g:7809:13: lv_throwingDefined_87_0= '!'
            	            {
            	            lv_throwingDefined_87_0=(Token)match(input,60,FOLLOW_55); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              													newLeafNode(lv_throwingDefined_87_0, grammarAccess.getOverridePredicate_5Access().getThrowingDefinedExclamationMarkKeyword_3_9_1_0_0_0());
            	              												
            	            }
            	            if ( state.backtracking==0 ) {

            	              													if (current==null) {
            	              														current = createModelElement(grammarAccess.getOverridePredicate_5Rule());
            	              													}
            	              													setWithLastConsumed(current, "throwingDefined", true, "!");
            	              												
            	            }

            	            }


            	            }

            	            otherlv_88=(Token)match(input,71,FOLLOW_37); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              											newLeafNode(otherlv_88, grammarAccess.getOverridePredicate_5Access().getThrowingKeyword_3_9_1_0_1());
            	              										
            	            }

            	            }


            	            }
            	            break;
            	        case 2 :
            	            // InternalMcmodel.g:7827:10: ( ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) )
            	            {
            	            // InternalMcmodel.g:7827:10: ( ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) )
            	            // InternalMcmodel.g:7828:11: ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) )
            	            {
            	            // InternalMcmodel.g:7828:11: ( (lv_throwingDefined_89_0= 'throwing' ) )
            	            // InternalMcmodel.g:7829:12: (lv_throwingDefined_89_0= 'throwing' )
            	            {
            	            // InternalMcmodel.g:7829:12: (lv_throwingDefined_89_0= 'throwing' )
            	            // InternalMcmodel.g:7830:13: lv_throwingDefined_89_0= 'throwing'
            	            {
            	            lv_throwingDefined_89_0=(Token)match(input,71,FOLLOW_40); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              													newLeafNode(lv_throwingDefined_89_0, grammarAccess.getOverridePredicate_5Access().getThrowingDefinedThrowingKeyword_3_9_1_1_0_0());
            	              												
            	            }
            	            if ( state.backtracking==0 ) {

            	              													if (current==null) {
            	              														current = createModelElement(grammarAccess.getOverridePredicate_5Rule());
            	              													}
            	              													setWithLastConsumed(current, "throwingDefined", true, "throwing");
            	              												
            	            }

            	            }


            	            }

            	            // InternalMcmodel.g:7842:11: ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) )
            	            int alt227=2;
            	            int LA227_0 = input.LA(1);

            	            if ( (LA227_0==62) ) {
            	                alt227=1;
            	            }
            	            else if ( (LA227_0==18||LA227_0==58) ) {
            	                alt227=2;
            	            }
            	            else {
            	                if (state.backtracking>0) {state.failed=true; return current;}
            	                NoViableAltException nvae =
            	                    new NoViableAltException("", 227, 0, input);

            	                throw nvae;
            	            }
            	            switch (alt227) {
            	                case 1 :
            	                    // InternalMcmodel.g:7843:12: (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) )
            	                    {
            	                    // InternalMcmodel.g:7843:12: (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) )
            	                    // InternalMcmodel.g:7844:13: otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' )
            	                    {
            	                    otherlv_90=(Token)match(input,62,FOLLOW_7); if (state.failed) return current;
            	                    if ( state.backtracking==0 ) {

            	                      													newLeafNode(otherlv_90, grammarAccess.getOverridePredicate_5Access().getExclamationMarkEqualsSignKeyword_3_9_1_1_1_0_0());
            	                      												
            	                    }
            	                    // InternalMcmodel.g:7848:13: ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' )
            	                    int alt224=2;
            	                    int LA224_0 = input.LA(1);

            	                    if ( (LA224_0==21) ) {
            	                        alt224=1;
            	                    }
            	                    else if ( (LA224_0==20) ) {
            	                        alt224=2;
            	                    }
            	                    else {
            	                        if (state.backtracking>0) {state.failed=true; return current;}
            	                        NoViableAltException nvae =
            	                            new NoViableAltException("", 224, 0, input);

            	                        throw nvae;
            	                    }
            	                    switch (alt224) {
            	                        case 1 :
            	                            // InternalMcmodel.g:7849:14: ( (lv_throwing_91_0= 'false' ) )
            	                            {
            	                            // InternalMcmodel.g:7849:14: ( (lv_throwing_91_0= 'false' ) )
            	                            // InternalMcmodel.g:7850:15: (lv_throwing_91_0= 'false' )
            	                            {
            	                            // InternalMcmodel.g:7850:15: (lv_throwing_91_0= 'false' )
            	                            // InternalMcmodel.g:7851:16: lv_throwing_91_0= 'false'
            	                            {
            	                            lv_throwing_91_0=(Token)match(input,21,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              																newLeafNode(lv_throwing_91_0, grammarAccess.getOverridePredicate_5Access().getThrowingFalseKeyword_3_9_1_1_1_0_1_0_0());
            	                              															
            	                            }
            	                            if ( state.backtracking==0 ) {

            	                              																if (current==null) {
            	                              																	current = createModelElement(grammarAccess.getOverridePredicate_5Rule());
            	                              																}
            	                              																setWithLastConsumed(current, "throwing", true, "false");
            	                              															
            	                            }

            	                            }


            	                            }


            	                            }
            	                            break;
            	                        case 2 :
            	                            // InternalMcmodel.g:7864:14: otherlv_92= 'true'
            	                            {
            	                            otherlv_92=(Token)match(input,20,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_92, grammarAccess.getOverridePredicate_5Access().getTrueKeyword_3_9_1_1_1_0_1_1());
            	                              													
            	                            }

            	                            }
            	                            break;

            	                    }


            	                    }


            	                    }
            	                    break;
            	                case 2 :
            	                    // InternalMcmodel.g:7871:12: ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) )
            	                    {
            	                    // InternalMcmodel.g:7871:12: ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) )
            	                    // InternalMcmodel.g:7872:13: (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' )
            	                    {
            	                    // InternalMcmodel.g:7872:13: (otherlv_93= '=' | otherlv_94= '==' )
            	                    int alt225=2;
            	                    int LA225_0 = input.LA(1);

            	                    if ( (LA225_0==18) ) {
            	                        alt225=1;
            	                    }
            	                    else if ( (LA225_0==58) ) {
            	                        alt225=2;
            	                    }
            	                    else {
            	                        if (state.backtracking>0) {state.failed=true; return current;}
            	                        NoViableAltException nvae =
            	                            new NoViableAltException("", 225, 0, input);

            	                        throw nvae;
            	                    }
            	                    switch (alt225) {
            	                        case 1 :
            	                            // InternalMcmodel.g:7873:14: otherlv_93= '='
            	                            {
            	                            otherlv_93=(Token)match(input,18,FOLLOW_7); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_93, grammarAccess.getOverridePredicate_5Access().getEqualsSignKeyword_3_9_1_1_1_1_0_0());
            	                              													
            	                            }

            	                            }
            	                            break;
            	                        case 2 :
            	                            // InternalMcmodel.g:7878:14: otherlv_94= '=='
            	                            {
            	                            otherlv_94=(Token)match(input,58,FOLLOW_7); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_94, grammarAccess.getOverridePredicate_5Access().getEqualsSignEqualsSignKeyword_3_9_1_1_1_1_0_1());
            	                              													
            	                            }

            	                            }
            	                            break;

            	                    }

            	                    // InternalMcmodel.g:7883:13: ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' )
            	                    int alt226=2;
            	                    int LA226_0 = input.LA(1);

            	                    if ( (LA226_0==20) ) {
            	                        alt226=1;
            	                    }
            	                    else if ( (LA226_0==21) ) {
            	                        alt226=2;
            	                    }
            	                    else {
            	                        if (state.backtracking>0) {state.failed=true; return current;}
            	                        NoViableAltException nvae =
            	                            new NoViableAltException("", 226, 0, input);

            	                        throw nvae;
            	                    }
            	                    switch (alt226) {
            	                        case 1 :
            	                            // InternalMcmodel.g:7884:14: ( (lv_throwing_95_0= 'true' ) )
            	                            {
            	                            // InternalMcmodel.g:7884:14: ( (lv_throwing_95_0= 'true' ) )
            	                            // InternalMcmodel.g:7885:15: (lv_throwing_95_0= 'true' )
            	                            {
            	                            // InternalMcmodel.g:7885:15: (lv_throwing_95_0= 'true' )
            	                            // InternalMcmodel.g:7886:16: lv_throwing_95_0= 'true'
            	                            {
            	                            lv_throwing_95_0=(Token)match(input,20,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              																newLeafNode(lv_throwing_95_0, grammarAccess.getOverridePredicate_5Access().getThrowingTrueKeyword_3_9_1_1_1_1_1_0_0());
            	                              															
            	                            }
            	                            if ( state.backtracking==0 ) {

            	                              																if (current==null) {
            	                              																	current = createModelElement(grammarAccess.getOverridePredicate_5Rule());
            	                              																}
            	                              																setWithLastConsumed(current, "throwing", true, "true");
            	                              															
            	                            }

            	                            }


            	                            }


            	                            }
            	                            break;
            	                        case 2 :
            	                            // InternalMcmodel.g:7899:14: otherlv_96= 'false'
            	                            {
            	                            otherlv_96=(Token)match(input,21,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_96, grammarAccess.getOverridePredicate_5Access().getFalseKeyword_3_9_1_1_1_1_1_1());
            	                              													
            	                            }

            	                            }
            	                            break;

            	                    }


            	                    }


            	                    }
            	                    break;

            	            }


            	            }


            	            }
            	            break;

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getOverridePredicate_5Access().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 11 :
            	    // InternalMcmodel.g:7914:4: ({...}? => ( ({...}? => (otherlv_97= '&' ( (lv_timeDefined_98_0= 'time' ) ) (otherlv_99= '=' | otherlv_100= '==' ) ( (lv_time_101_0= RULE_PERCENTAGE ) ) ) ) ) )
            	    {
            	    // InternalMcmodel.g:7914:4: ({...}? => ( ({...}? => (otherlv_97= '&' ( (lv_timeDefined_98_0= 'time' ) ) (otherlv_99= '=' | otherlv_100= '==' ) ( (lv_time_101_0= RULE_PERCENTAGE ) ) ) ) ) )
            	    // InternalMcmodel.g:7915:5: {...}? => ( ({...}? => (otherlv_97= '&' ( (lv_timeDefined_98_0= 'time' ) ) (otherlv_99= '=' | otherlv_100= '==' ) ( (lv_time_101_0= RULE_PERCENTAGE ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_5Access().getUnorderedGroup_3(), 10) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_5", "getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_5Access().getUnorderedGroup_3(), 10)");
            	    }
            	    // InternalMcmodel.g:7915:117: ( ({...}? => (otherlv_97= '&' ( (lv_timeDefined_98_0= 'time' ) ) (otherlv_99= '=' | otherlv_100= '==' ) ( (lv_time_101_0= RULE_PERCENTAGE ) ) ) ) )
            	    // InternalMcmodel.g:7916:6: ({...}? => (otherlv_97= '&' ( (lv_timeDefined_98_0= 'time' ) ) (otherlv_99= '=' | otherlv_100= '==' ) ( (lv_time_101_0= RULE_PERCENTAGE ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getOverridePredicate_5Access().getUnorderedGroup_3(), 10);
            	    // InternalMcmodel.g:7919:9: ({...}? => (otherlv_97= '&' ( (lv_timeDefined_98_0= 'time' ) ) (otherlv_99= '=' | otherlv_100= '==' ) ( (lv_time_101_0= RULE_PERCENTAGE ) ) ) )
            	    // InternalMcmodel.g:7919:10: {...}? => (otherlv_97= '&' ( (lv_timeDefined_98_0= 'time' ) ) (otherlv_99= '=' | otherlv_100= '==' ) ( (lv_time_101_0= RULE_PERCENTAGE ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_5", "true");
            	    }
            	    // InternalMcmodel.g:7919:19: (otherlv_97= '&' ( (lv_timeDefined_98_0= 'time' ) ) (otherlv_99= '=' | otherlv_100= '==' ) ( (lv_time_101_0= RULE_PERCENTAGE ) ) )
            	    // InternalMcmodel.g:7919:20: otherlv_97= '&' ( (lv_timeDefined_98_0= 'time' ) ) (otherlv_99= '=' | otherlv_100= '==' ) ( (lv_time_101_0= RULE_PERCENTAGE ) )
            	    {
            	    otherlv_97=(Token)match(input,59,FOLLOW_56); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_97, grammarAccess.getOverridePredicate_5Access().getAmpersandKeyword_3_10_0());
            	      								
            	    }
            	    // InternalMcmodel.g:7923:9: ( (lv_timeDefined_98_0= 'time' ) )
            	    // InternalMcmodel.g:7924:10: (lv_timeDefined_98_0= 'time' )
            	    {
            	    // InternalMcmodel.g:7924:10: (lv_timeDefined_98_0= 'time' )
            	    // InternalMcmodel.g:7925:11: lv_timeDefined_98_0= 'time'
            	    {
            	    lv_timeDefined_98_0=(Token)match(input,72,FOLLOW_35); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											newLeafNode(lv_timeDefined_98_0, grammarAccess.getOverridePredicate_5Access().getTimeDefinedTimeKeyword_3_10_1_0());
            	      										
            	    }
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElement(grammarAccess.getOverridePredicate_5Rule());
            	      											}
            	      											setWithLastConsumed(current, "timeDefined", true, "time");
            	      										
            	    }

            	    }


            	    }

            	    // InternalMcmodel.g:7937:9: (otherlv_99= '=' | otherlv_100= '==' )
            	    int alt229=2;
            	    int LA229_0 = input.LA(1);

            	    if ( (LA229_0==18) ) {
            	        alt229=1;
            	    }
            	    else if ( (LA229_0==58) ) {
            	        alt229=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 229, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt229) {
            	        case 1 :
            	            // InternalMcmodel.g:7938:10: otherlv_99= '='
            	            {
            	            otherlv_99=(Token)match(input,18,FOLLOW_36); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(otherlv_99, grammarAccess.getOverridePredicate_5Access().getEqualsSignKeyword_3_10_2_0());
            	              									
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalMcmodel.g:7943:10: otherlv_100= '=='
            	            {
            	            otherlv_100=(Token)match(input,58,FOLLOW_36); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(otherlv_100, grammarAccess.getOverridePredicate_5Access().getEqualsSignEqualsSignKeyword_3_10_2_1());
            	              									
            	            }

            	            }
            	            break;

            	    }

            	    // InternalMcmodel.g:7948:9: ( (lv_time_101_0= RULE_PERCENTAGE ) )
            	    // InternalMcmodel.g:7949:10: (lv_time_101_0= RULE_PERCENTAGE )
            	    {
            	    // InternalMcmodel.g:7949:10: (lv_time_101_0= RULE_PERCENTAGE )
            	    // InternalMcmodel.g:7950:11: lv_time_101_0= RULE_PERCENTAGE
            	    {
            	    lv_time_101_0=(Token)match(input,RULE_PERCENTAGE,FOLLOW_37); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											newLeafNode(lv_time_101_0, grammarAccess.getOverridePredicate_5Access().getTimePERCENTAGETerminalRuleCall_3_10_3_0());
            	      										
            	    }
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElement(grammarAccess.getOverridePredicate_5Rule());
            	      											}
            	      											setWithLastConsumed(
            	      												current,
            	      												"time",
            	      												lv_time_101_0,
            	      												"com.raptor.mcmodel.Mcmodel.PERCENTAGE");
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getOverridePredicate_5Access().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 12 :
            	    // InternalMcmodel.g:7972:4: ({...}? => ( ({...}? => (otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) ) ) ) ) )
            	    {
            	    // InternalMcmodel.g:7972:4: ({...}? => ( ({...}? => (otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) ) ) ) ) )
            	    // InternalMcmodel.g:7973:5: {...}? => ( ({...}? => (otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_5Access().getUnorderedGroup_3(), 11) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_5", "getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_5Access().getUnorderedGroup_3(), 11)");
            	    }
            	    // InternalMcmodel.g:7973:117: ( ({...}? => (otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) ) ) ) )
            	    // InternalMcmodel.g:7974:6: ({...}? => (otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getOverridePredicate_5Access().getUnorderedGroup_3(), 11);
            	    // InternalMcmodel.g:7977:9: ({...}? => (otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) ) ) )
            	    // InternalMcmodel.g:7977:10: {...}? => (otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_5", "true");
            	    }
            	    // InternalMcmodel.g:7977:19: (otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) ) )
            	    // InternalMcmodel.g:7977:20: otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) )
            	    {
            	    otherlv_102=(Token)match(input,59,FOLLOW_57); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_102, grammarAccess.getOverridePredicate_5Access().getAmpersandKeyword_3_11_0());
            	      								
            	    }
            	    // InternalMcmodel.g:7981:9: ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) )
            	    // InternalMcmodel.g:7982:10: (lv_customModelDataDefined_103_0= 'custom_model_data' )
            	    {
            	    // InternalMcmodel.g:7982:10: (lv_customModelDataDefined_103_0= 'custom_model_data' )
            	    // InternalMcmodel.g:7983:11: lv_customModelDataDefined_103_0= 'custom_model_data'
            	    {
            	    lv_customModelDataDefined_103_0=(Token)match(input,73,FOLLOW_35); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											newLeafNode(lv_customModelDataDefined_103_0, grammarAccess.getOverridePredicate_5Access().getCustomModelDataDefinedCustom_model_dataKeyword_3_11_1_0());
            	      										
            	    }
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElement(grammarAccess.getOverridePredicate_5Rule());
            	      											}
            	      											setWithLastConsumed(current, "customModelDataDefined", true, "custom_model_data");
            	      										
            	    }

            	    }


            	    }

            	    // InternalMcmodel.g:7995:9: (otherlv_104= '=' | otherlv_105= '==' )
            	    int alt230=2;
            	    int LA230_0 = input.LA(1);

            	    if ( (LA230_0==18) ) {
            	        alt230=1;
            	    }
            	    else if ( (LA230_0==58) ) {
            	        alt230=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 230, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt230) {
            	        case 1 :
            	            // InternalMcmodel.g:7996:10: otherlv_104= '='
            	            {
            	            otherlv_104=(Token)match(input,18,FOLLOW_29); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(otherlv_104, grammarAccess.getOverridePredicate_5Access().getEqualsSignKeyword_3_11_2_0());
            	              									
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalMcmodel.g:8001:10: otherlv_105= '=='
            	            {
            	            otherlv_105=(Token)match(input,58,FOLLOW_29); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(otherlv_105, grammarAccess.getOverridePredicate_5Access().getEqualsSignEqualsSignKeyword_3_11_2_1());
            	              									
            	            }

            	            }
            	            break;

            	    }

            	    // InternalMcmodel.g:8006:9: ( (lv_customModelData_106_0= ruleLONG ) )
            	    // InternalMcmodel.g:8007:10: (lv_customModelData_106_0= ruleLONG )
            	    {
            	    // InternalMcmodel.g:8007:10: (lv_customModelData_106_0= ruleLONG )
            	    // InternalMcmodel.g:8008:11: lv_customModelData_106_0= ruleLONG
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getOverridePredicate_5Access().getCustomModelDataLONGParserRuleCall_3_11_3_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_37);
            	    lv_customModelData_106_0=ruleLONG();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getOverridePredicate_5Rule());
            	      											}
            	      											set(
            	      												current,
            	      												"customModelData",
            	      												lv_customModelData_106_0,
            	      												"com.raptor.mcmodel.Mcmodel.LONG");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getOverridePredicate_5Access().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop231;
                }
            } while (true);


            }


            }

            getUnorderedGroupHelper().leave(grammarAccess.getOverridePredicate_5Access().getUnorderedGroup_3());

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOverridePredicate_5"


    // $ANTLR start "entryRuleOverridePredicate_6"
    // InternalMcmodel.g:8042:1: entryRuleOverridePredicate_6 returns [EObject current=null] : iv_ruleOverridePredicate_6= ruleOverridePredicate_6 EOF ;
    public final EObject entryRuleOverridePredicate_6() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleOverridePredicate_6 = null;


        try {
            // InternalMcmodel.g:8042:60: (iv_ruleOverridePredicate_6= ruleOverridePredicate_6 EOF )
            // InternalMcmodel.g:8043:2: iv_ruleOverridePredicate_6= ruleOverridePredicate_6 EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOverridePredicate_6Rule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOverridePredicate_6=ruleOverridePredicate_6();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOverridePredicate_6; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOverridePredicate_6"


    // $ANTLR start "ruleOverridePredicate_6"
    // InternalMcmodel.g:8049:1: ruleOverridePredicate_6 returns [EObject current=null] : ( ( (lv_damageDefined_0_0= 'damage' ) ) (otherlv_1= '=' | otherlv_2= '==' ) ( (lv_damage_3_0= RULE_PERCENTAGE ) ) ( ( ( ( ({...}? => ( ({...}? => (otherlv_5= '&' ( (lv_angleDefined_6_0= 'angle' ) ) (otherlv_7= '=' | otherlv_8= '==' ) ( (lv_angle_9_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= '&' ( ( ( (lv_blockingDefined_11_0= '!' ) ) otherlv_12= 'blocking' ) | ( ( (lv_blockingDefined_13_0= 'blocking' ) ) ( (otherlv_14= '!=' ( ( (lv_blocking_15_0= 'false' ) ) | otherlv_16= 'true' ) ) | ( (otherlv_17= '=' | otherlv_18= '==' ) ( ( (lv_blocking_19_0= 'true' ) ) | otherlv_20= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= '&' ( ( ( (lv_brokenDefined_22_0= '!' ) ) otherlv_23= 'broken' ) | ( ( (lv_brokenDefined_24_0= 'broken' ) ) ( (otherlv_25= '!=' ( ( (lv_broken_26_0= 'false' ) ) | otherlv_27= 'true' ) ) | ( (otherlv_28= '=' | otherlv_29= '==' ) ( ( (lv_broken_30_0= 'true' ) ) | otherlv_31= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_32= '&' ( ( ( (lv_castDefined_33_0= '!' ) ) otherlv_34= 'cast' ) | ( ( (lv_castDefined_35_0= 'cast' ) ) ( (otherlv_36= '!=' ( ( (lv_cast_37_0= 'false' ) ) | otherlv_38= 'true' ) ) | ( (otherlv_39= '=' | otherlv_40= '==' ) ( ( (lv_cast_41_0= 'true' ) ) | otherlv_42= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= '&' ( (lv_cooldownDefined_44_0= 'cooldown' ) ) (otherlv_45= '=' | otherlv_46= '==' ) ( (lv_cooldown_47_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_48= '&' ( ( ( (lv_damagedDefined_49_0= '!' ) ) otherlv_50= 'damaged' ) | ( ( (lv_damagedDefined_51_0= 'damaged' ) ) ( (otherlv_52= '!=' ( ( (lv_damaged_53_0= 'false' ) ) | otherlv_54= 'true' ) ) | ( (otherlv_55= '=' | otherlv_56= '==' ) ( ( (lv_damaged_57_0= 'true' ) ) | otherlv_58= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_59= '&' ( ( ( (lv_lefthandedDefined_60_0= '!' ) ) otherlv_61= 'lefthanded' ) | ( ( (lv_lefthandedDefined_62_0= 'lefthanded' ) ) ( (otherlv_63= '!=' ( ( (lv_lefthanded_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_lefthanded_68_0= 'true' ) ) | otherlv_69= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_70= '&' ( (lv_pullDefined_71_0= 'pull' ) ) (otherlv_72= '=' | otherlv_73= '==' ) ( (lv_pull_74_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_75= '&' ( ( ( (lv_pullingDefined_76_0= '!' ) ) otherlv_77= 'pulling' ) | ( ( (lv_pullingDefined_78_0= 'pulling' ) ) ( (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) ) | ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_86= '&' ( ( ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing' ) | ( ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_97= '&' ( (lv_timeDefined_98_0= 'time' ) ) (otherlv_99= '=' | otherlv_100= '==' ) ( (lv_time_101_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) ) ) ) ) ) )* ) ) ) ) ;
    public final EObject ruleOverridePredicate_6() throws RecognitionException {
        EObject current = null;

        Token lv_damageDefined_0_0=null;
        Token otherlv_1=null;
        Token otherlv_2=null;
        Token lv_damage_3_0=null;
        Token otherlv_5=null;
        Token lv_angleDefined_6_0=null;
        Token otherlv_7=null;
        Token otherlv_8=null;
        Token lv_angle_9_0=null;
        Token otherlv_10=null;
        Token lv_blockingDefined_11_0=null;
        Token otherlv_12=null;
        Token lv_blockingDefined_13_0=null;
        Token otherlv_14=null;
        Token lv_blocking_15_0=null;
        Token otherlv_16=null;
        Token otherlv_17=null;
        Token otherlv_18=null;
        Token lv_blocking_19_0=null;
        Token otherlv_20=null;
        Token otherlv_21=null;
        Token lv_brokenDefined_22_0=null;
        Token otherlv_23=null;
        Token lv_brokenDefined_24_0=null;
        Token otherlv_25=null;
        Token lv_broken_26_0=null;
        Token otherlv_27=null;
        Token otherlv_28=null;
        Token otherlv_29=null;
        Token lv_broken_30_0=null;
        Token otherlv_31=null;
        Token otherlv_32=null;
        Token lv_castDefined_33_0=null;
        Token otherlv_34=null;
        Token lv_castDefined_35_0=null;
        Token otherlv_36=null;
        Token lv_cast_37_0=null;
        Token otherlv_38=null;
        Token otherlv_39=null;
        Token otherlv_40=null;
        Token lv_cast_41_0=null;
        Token otherlv_42=null;
        Token otherlv_43=null;
        Token lv_cooldownDefined_44_0=null;
        Token otherlv_45=null;
        Token otherlv_46=null;
        Token lv_cooldown_47_0=null;
        Token otherlv_48=null;
        Token lv_damagedDefined_49_0=null;
        Token otherlv_50=null;
        Token lv_damagedDefined_51_0=null;
        Token otherlv_52=null;
        Token lv_damaged_53_0=null;
        Token otherlv_54=null;
        Token otherlv_55=null;
        Token otherlv_56=null;
        Token lv_damaged_57_0=null;
        Token otherlv_58=null;
        Token otherlv_59=null;
        Token lv_lefthandedDefined_60_0=null;
        Token otherlv_61=null;
        Token lv_lefthandedDefined_62_0=null;
        Token otherlv_63=null;
        Token lv_lefthanded_64_0=null;
        Token otherlv_65=null;
        Token otherlv_66=null;
        Token otherlv_67=null;
        Token lv_lefthanded_68_0=null;
        Token otherlv_69=null;
        Token otherlv_70=null;
        Token lv_pullDefined_71_0=null;
        Token otherlv_72=null;
        Token otherlv_73=null;
        Token lv_pull_74_0=null;
        Token otherlv_75=null;
        Token lv_pullingDefined_76_0=null;
        Token otherlv_77=null;
        Token lv_pullingDefined_78_0=null;
        Token otherlv_79=null;
        Token lv_pulling_80_0=null;
        Token otherlv_81=null;
        Token otherlv_82=null;
        Token otherlv_83=null;
        Token lv_pulling_84_0=null;
        Token otherlv_85=null;
        Token otherlv_86=null;
        Token lv_throwingDefined_87_0=null;
        Token otherlv_88=null;
        Token lv_throwingDefined_89_0=null;
        Token otherlv_90=null;
        Token lv_throwing_91_0=null;
        Token otherlv_92=null;
        Token otherlv_93=null;
        Token otherlv_94=null;
        Token lv_throwing_95_0=null;
        Token otherlv_96=null;
        Token otherlv_97=null;
        Token lv_timeDefined_98_0=null;
        Token otherlv_99=null;
        Token otherlv_100=null;
        Token lv_time_101_0=null;
        Token otherlv_102=null;
        Token lv_customModelDataDefined_103_0=null;
        Token otherlv_104=null;
        Token otherlv_105=null;
        AntlrDatatypeRuleToken lv_customModelData_106_0 = null;



        	enterRule();

        try {
            // InternalMcmodel.g:8055:2: ( ( ( (lv_damageDefined_0_0= 'damage' ) ) (otherlv_1= '=' | otherlv_2= '==' ) ( (lv_damage_3_0= RULE_PERCENTAGE ) ) ( ( ( ( ({...}? => ( ({...}? => (otherlv_5= '&' ( (lv_angleDefined_6_0= 'angle' ) ) (otherlv_7= '=' | otherlv_8= '==' ) ( (lv_angle_9_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= '&' ( ( ( (lv_blockingDefined_11_0= '!' ) ) otherlv_12= 'blocking' ) | ( ( (lv_blockingDefined_13_0= 'blocking' ) ) ( (otherlv_14= '!=' ( ( (lv_blocking_15_0= 'false' ) ) | otherlv_16= 'true' ) ) | ( (otherlv_17= '=' | otherlv_18= '==' ) ( ( (lv_blocking_19_0= 'true' ) ) | otherlv_20= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= '&' ( ( ( (lv_brokenDefined_22_0= '!' ) ) otherlv_23= 'broken' ) | ( ( (lv_brokenDefined_24_0= 'broken' ) ) ( (otherlv_25= '!=' ( ( (lv_broken_26_0= 'false' ) ) | otherlv_27= 'true' ) ) | ( (otherlv_28= '=' | otherlv_29= '==' ) ( ( (lv_broken_30_0= 'true' ) ) | otherlv_31= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_32= '&' ( ( ( (lv_castDefined_33_0= '!' ) ) otherlv_34= 'cast' ) | ( ( (lv_castDefined_35_0= 'cast' ) ) ( (otherlv_36= '!=' ( ( (lv_cast_37_0= 'false' ) ) | otherlv_38= 'true' ) ) | ( (otherlv_39= '=' | otherlv_40= '==' ) ( ( (lv_cast_41_0= 'true' ) ) | otherlv_42= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= '&' ( (lv_cooldownDefined_44_0= 'cooldown' ) ) (otherlv_45= '=' | otherlv_46= '==' ) ( (lv_cooldown_47_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_48= '&' ( ( ( (lv_damagedDefined_49_0= '!' ) ) otherlv_50= 'damaged' ) | ( ( (lv_damagedDefined_51_0= 'damaged' ) ) ( (otherlv_52= '!=' ( ( (lv_damaged_53_0= 'false' ) ) | otherlv_54= 'true' ) ) | ( (otherlv_55= '=' | otherlv_56= '==' ) ( ( (lv_damaged_57_0= 'true' ) ) | otherlv_58= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_59= '&' ( ( ( (lv_lefthandedDefined_60_0= '!' ) ) otherlv_61= 'lefthanded' ) | ( ( (lv_lefthandedDefined_62_0= 'lefthanded' ) ) ( (otherlv_63= '!=' ( ( (lv_lefthanded_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_lefthanded_68_0= 'true' ) ) | otherlv_69= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_70= '&' ( (lv_pullDefined_71_0= 'pull' ) ) (otherlv_72= '=' | otherlv_73= '==' ) ( (lv_pull_74_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_75= '&' ( ( ( (lv_pullingDefined_76_0= '!' ) ) otherlv_77= 'pulling' ) | ( ( (lv_pullingDefined_78_0= 'pulling' ) ) ( (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) ) | ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_86= '&' ( ( ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing' ) | ( ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_97= '&' ( (lv_timeDefined_98_0= 'time' ) ) (otherlv_99= '=' | otherlv_100= '==' ) ( (lv_time_101_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) ) ) ) ) ) )* ) ) ) ) )
            // InternalMcmodel.g:8056:2: ( ( (lv_damageDefined_0_0= 'damage' ) ) (otherlv_1= '=' | otherlv_2= '==' ) ( (lv_damage_3_0= RULE_PERCENTAGE ) ) ( ( ( ( ({...}? => ( ({...}? => (otherlv_5= '&' ( (lv_angleDefined_6_0= 'angle' ) ) (otherlv_7= '=' | otherlv_8= '==' ) ( (lv_angle_9_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= '&' ( ( ( (lv_blockingDefined_11_0= '!' ) ) otherlv_12= 'blocking' ) | ( ( (lv_blockingDefined_13_0= 'blocking' ) ) ( (otherlv_14= '!=' ( ( (lv_blocking_15_0= 'false' ) ) | otherlv_16= 'true' ) ) | ( (otherlv_17= '=' | otherlv_18= '==' ) ( ( (lv_blocking_19_0= 'true' ) ) | otherlv_20= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= '&' ( ( ( (lv_brokenDefined_22_0= '!' ) ) otherlv_23= 'broken' ) | ( ( (lv_brokenDefined_24_0= 'broken' ) ) ( (otherlv_25= '!=' ( ( (lv_broken_26_0= 'false' ) ) | otherlv_27= 'true' ) ) | ( (otherlv_28= '=' | otherlv_29= '==' ) ( ( (lv_broken_30_0= 'true' ) ) | otherlv_31= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_32= '&' ( ( ( (lv_castDefined_33_0= '!' ) ) otherlv_34= 'cast' ) | ( ( (lv_castDefined_35_0= 'cast' ) ) ( (otherlv_36= '!=' ( ( (lv_cast_37_0= 'false' ) ) | otherlv_38= 'true' ) ) | ( (otherlv_39= '=' | otherlv_40= '==' ) ( ( (lv_cast_41_0= 'true' ) ) | otherlv_42= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= '&' ( (lv_cooldownDefined_44_0= 'cooldown' ) ) (otherlv_45= '=' | otherlv_46= '==' ) ( (lv_cooldown_47_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_48= '&' ( ( ( (lv_damagedDefined_49_0= '!' ) ) otherlv_50= 'damaged' ) | ( ( (lv_damagedDefined_51_0= 'damaged' ) ) ( (otherlv_52= '!=' ( ( (lv_damaged_53_0= 'false' ) ) | otherlv_54= 'true' ) ) | ( (otherlv_55= '=' | otherlv_56= '==' ) ( ( (lv_damaged_57_0= 'true' ) ) | otherlv_58= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_59= '&' ( ( ( (lv_lefthandedDefined_60_0= '!' ) ) otherlv_61= 'lefthanded' ) | ( ( (lv_lefthandedDefined_62_0= 'lefthanded' ) ) ( (otherlv_63= '!=' ( ( (lv_lefthanded_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_lefthanded_68_0= 'true' ) ) | otherlv_69= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_70= '&' ( (lv_pullDefined_71_0= 'pull' ) ) (otherlv_72= '=' | otherlv_73= '==' ) ( (lv_pull_74_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_75= '&' ( ( ( (lv_pullingDefined_76_0= '!' ) ) otherlv_77= 'pulling' ) | ( ( (lv_pullingDefined_78_0= 'pulling' ) ) ( (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) ) | ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_86= '&' ( ( ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing' ) | ( ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_97= '&' ( (lv_timeDefined_98_0= 'time' ) ) (otherlv_99= '=' | otherlv_100= '==' ) ( (lv_time_101_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) ) ) ) ) ) )* ) ) ) )
            {
            // InternalMcmodel.g:8056:2: ( ( (lv_damageDefined_0_0= 'damage' ) ) (otherlv_1= '=' | otherlv_2= '==' ) ( (lv_damage_3_0= RULE_PERCENTAGE ) ) ( ( ( ( ({...}? => ( ({...}? => (otherlv_5= '&' ( (lv_angleDefined_6_0= 'angle' ) ) (otherlv_7= '=' | otherlv_8= '==' ) ( (lv_angle_9_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= '&' ( ( ( (lv_blockingDefined_11_0= '!' ) ) otherlv_12= 'blocking' ) | ( ( (lv_blockingDefined_13_0= 'blocking' ) ) ( (otherlv_14= '!=' ( ( (lv_blocking_15_0= 'false' ) ) | otherlv_16= 'true' ) ) | ( (otherlv_17= '=' | otherlv_18= '==' ) ( ( (lv_blocking_19_0= 'true' ) ) | otherlv_20= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= '&' ( ( ( (lv_brokenDefined_22_0= '!' ) ) otherlv_23= 'broken' ) | ( ( (lv_brokenDefined_24_0= 'broken' ) ) ( (otherlv_25= '!=' ( ( (lv_broken_26_0= 'false' ) ) | otherlv_27= 'true' ) ) | ( (otherlv_28= '=' | otherlv_29= '==' ) ( ( (lv_broken_30_0= 'true' ) ) | otherlv_31= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_32= '&' ( ( ( (lv_castDefined_33_0= '!' ) ) otherlv_34= 'cast' ) | ( ( (lv_castDefined_35_0= 'cast' ) ) ( (otherlv_36= '!=' ( ( (lv_cast_37_0= 'false' ) ) | otherlv_38= 'true' ) ) | ( (otherlv_39= '=' | otherlv_40= '==' ) ( ( (lv_cast_41_0= 'true' ) ) | otherlv_42= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= '&' ( (lv_cooldownDefined_44_0= 'cooldown' ) ) (otherlv_45= '=' | otherlv_46= '==' ) ( (lv_cooldown_47_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_48= '&' ( ( ( (lv_damagedDefined_49_0= '!' ) ) otherlv_50= 'damaged' ) | ( ( (lv_damagedDefined_51_0= 'damaged' ) ) ( (otherlv_52= '!=' ( ( (lv_damaged_53_0= 'false' ) ) | otherlv_54= 'true' ) ) | ( (otherlv_55= '=' | otherlv_56= '==' ) ( ( (lv_damaged_57_0= 'true' ) ) | otherlv_58= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_59= '&' ( ( ( (lv_lefthandedDefined_60_0= '!' ) ) otherlv_61= 'lefthanded' ) | ( ( (lv_lefthandedDefined_62_0= 'lefthanded' ) ) ( (otherlv_63= '!=' ( ( (lv_lefthanded_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_lefthanded_68_0= 'true' ) ) | otherlv_69= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_70= '&' ( (lv_pullDefined_71_0= 'pull' ) ) (otherlv_72= '=' | otherlv_73= '==' ) ( (lv_pull_74_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_75= '&' ( ( ( (lv_pullingDefined_76_0= '!' ) ) otherlv_77= 'pulling' ) | ( ( (lv_pullingDefined_78_0= 'pulling' ) ) ( (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) ) | ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_86= '&' ( ( ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing' ) | ( ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_97= '&' ( (lv_timeDefined_98_0= 'time' ) ) (otherlv_99= '=' | otherlv_100= '==' ) ( (lv_time_101_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) ) ) ) ) ) )* ) ) ) )
            // InternalMcmodel.g:8057:3: ( (lv_damageDefined_0_0= 'damage' ) ) (otherlv_1= '=' | otherlv_2= '==' ) ( (lv_damage_3_0= RULE_PERCENTAGE ) ) ( ( ( ( ({...}? => ( ({...}? => (otherlv_5= '&' ( (lv_angleDefined_6_0= 'angle' ) ) (otherlv_7= '=' | otherlv_8= '==' ) ( (lv_angle_9_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= '&' ( ( ( (lv_blockingDefined_11_0= '!' ) ) otherlv_12= 'blocking' ) | ( ( (lv_blockingDefined_13_0= 'blocking' ) ) ( (otherlv_14= '!=' ( ( (lv_blocking_15_0= 'false' ) ) | otherlv_16= 'true' ) ) | ( (otherlv_17= '=' | otherlv_18= '==' ) ( ( (lv_blocking_19_0= 'true' ) ) | otherlv_20= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= '&' ( ( ( (lv_brokenDefined_22_0= '!' ) ) otherlv_23= 'broken' ) | ( ( (lv_brokenDefined_24_0= 'broken' ) ) ( (otherlv_25= '!=' ( ( (lv_broken_26_0= 'false' ) ) | otherlv_27= 'true' ) ) | ( (otherlv_28= '=' | otherlv_29= '==' ) ( ( (lv_broken_30_0= 'true' ) ) | otherlv_31= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_32= '&' ( ( ( (lv_castDefined_33_0= '!' ) ) otherlv_34= 'cast' ) | ( ( (lv_castDefined_35_0= 'cast' ) ) ( (otherlv_36= '!=' ( ( (lv_cast_37_0= 'false' ) ) | otherlv_38= 'true' ) ) | ( (otherlv_39= '=' | otherlv_40= '==' ) ( ( (lv_cast_41_0= 'true' ) ) | otherlv_42= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= '&' ( (lv_cooldownDefined_44_0= 'cooldown' ) ) (otherlv_45= '=' | otherlv_46= '==' ) ( (lv_cooldown_47_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_48= '&' ( ( ( (lv_damagedDefined_49_0= '!' ) ) otherlv_50= 'damaged' ) | ( ( (lv_damagedDefined_51_0= 'damaged' ) ) ( (otherlv_52= '!=' ( ( (lv_damaged_53_0= 'false' ) ) | otherlv_54= 'true' ) ) | ( (otherlv_55= '=' | otherlv_56= '==' ) ( ( (lv_damaged_57_0= 'true' ) ) | otherlv_58= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_59= '&' ( ( ( (lv_lefthandedDefined_60_0= '!' ) ) otherlv_61= 'lefthanded' ) | ( ( (lv_lefthandedDefined_62_0= 'lefthanded' ) ) ( (otherlv_63= '!=' ( ( (lv_lefthanded_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_lefthanded_68_0= 'true' ) ) | otherlv_69= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_70= '&' ( (lv_pullDefined_71_0= 'pull' ) ) (otherlv_72= '=' | otherlv_73= '==' ) ( (lv_pull_74_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_75= '&' ( ( ( (lv_pullingDefined_76_0= '!' ) ) otherlv_77= 'pulling' ) | ( ( (lv_pullingDefined_78_0= 'pulling' ) ) ( (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) ) | ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_86= '&' ( ( ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing' ) | ( ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_97= '&' ( (lv_timeDefined_98_0= 'time' ) ) (otherlv_99= '=' | otherlv_100= '==' ) ( (lv_time_101_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) ) ) ) ) ) )* ) ) )
            {
            // InternalMcmodel.g:8057:3: ( (lv_damageDefined_0_0= 'damage' ) )
            // InternalMcmodel.g:8058:4: (lv_damageDefined_0_0= 'damage' )
            {
            // InternalMcmodel.g:8058:4: (lv_damageDefined_0_0= 'damage' )
            // InternalMcmodel.g:8059:5: lv_damageDefined_0_0= 'damage'
            {
            lv_damageDefined_0_0=(Token)match(input,66,FOLLOW_35); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_damageDefined_0_0, grammarAccess.getOverridePredicate_6Access().getDamageDefinedDamageKeyword_0_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getOverridePredicate_6Rule());
              					}
              					setWithLastConsumed(current, "damageDefined", true, "damage");
              				
            }

            }


            }

            // InternalMcmodel.g:8071:3: (otherlv_1= '=' | otherlv_2= '==' )
            int alt232=2;
            int LA232_0 = input.LA(1);

            if ( (LA232_0==18) ) {
                alt232=1;
            }
            else if ( (LA232_0==58) ) {
                alt232=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 232, 0, input);

                throw nvae;
            }
            switch (alt232) {
                case 1 :
                    // InternalMcmodel.g:8072:4: otherlv_1= '='
                    {
                    otherlv_1=(Token)match(input,18,FOLLOW_36); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getOverridePredicate_6Access().getEqualsSignKeyword_1_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalMcmodel.g:8077:4: otherlv_2= '=='
                    {
                    otherlv_2=(Token)match(input,58,FOLLOW_36); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getOverridePredicate_6Access().getEqualsSignEqualsSignKeyword_1_1());
                      			
                    }

                    }
                    break;

            }

            // InternalMcmodel.g:8082:3: ( (lv_damage_3_0= RULE_PERCENTAGE ) )
            // InternalMcmodel.g:8083:4: (lv_damage_3_0= RULE_PERCENTAGE )
            {
            // InternalMcmodel.g:8083:4: (lv_damage_3_0= RULE_PERCENTAGE )
            // InternalMcmodel.g:8084:5: lv_damage_3_0= RULE_PERCENTAGE
            {
            lv_damage_3_0=(Token)match(input,RULE_PERCENTAGE,FOLLOW_37); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_damage_3_0, grammarAccess.getOverridePredicate_6Access().getDamagePERCENTAGETerminalRuleCall_2_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getOverridePredicate_6Rule());
              					}
              					setWithLastConsumed(
              						current,
              						"damage",
              						lv_damage_3_0,
              						"com.raptor.mcmodel.Mcmodel.PERCENTAGE");
              				
            }

            }


            }

            // InternalMcmodel.g:8100:3: ( ( ( ( ({...}? => ( ({...}? => (otherlv_5= '&' ( (lv_angleDefined_6_0= 'angle' ) ) (otherlv_7= '=' | otherlv_8= '==' ) ( (lv_angle_9_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= '&' ( ( ( (lv_blockingDefined_11_0= '!' ) ) otherlv_12= 'blocking' ) | ( ( (lv_blockingDefined_13_0= 'blocking' ) ) ( (otherlv_14= '!=' ( ( (lv_blocking_15_0= 'false' ) ) | otherlv_16= 'true' ) ) | ( (otherlv_17= '=' | otherlv_18= '==' ) ( ( (lv_blocking_19_0= 'true' ) ) | otherlv_20= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= '&' ( ( ( (lv_brokenDefined_22_0= '!' ) ) otherlv_23= 'broken' ) | ( ( (lv_brokenDefined_24_0= 'broken' ) ) ( (otherlv_25= '!=' ( ( (lv_broken_26_0= 'false' ) ) | otherlv_27= 'true' ) ) | ( (otherlv_28= '=' | otherlv_29= '==' ) ( ( (lv_broken_30_0= 'true' ) ) | otherlv_31= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_32= '&' ( ( ( (lv_castDefined_33_0= '!' ) ) otherlv_34= 'cast' ) | ( ( (lv_castDefined_35_0= 'cast' ) ) ( (otherlv_36= '!=' ( ( (lv_cast_37_0= 'false' ) ) | otherlv_38= 'true' ) ) | ( (otherlv_39= '=' | otherlv_40= '==' ) ( ( (lv_cast_41_0= 'true' ) ) | otherlv_42= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= '&' ( (lv_cooldownDefined_44_0= 'cooldown' ) ) (otherlv_45= '=' | otherlv_46= '==' ) ( (lv_cooldown_47_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_48= '&' ( ( ( (lv_damagedDefined_49_0= '!' ) ) otherlv_50= 'damaged' ) | ( ( (lv_damagedDefined_51_0= 'damaged' ) ) ( (otherlv_52= '!=' ( ( (lv_damaged_53_0= 'false' ) ) | otherlv_54= 'true' ) ) | ( (otherlv_55= '=' | otherlv_56= '==' ) ( ( (lv_damaged_57_0= 'true' ) ) | otherlv_58= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_59= '&' ( ( ( (lv_lefthandedDefined_60_0= '!' ) ) otherlv_61= 'lefthanded' ) | ( ( (lv_lefthandedDefined_62_0= 'lefthanded' ) ) ( (otherlv_63= '!=' ( ( (lv_lefthanded_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_lefthanded_68_0= 'true' ) ) | otherlv_69= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_70= '&' ( (lv_pullDefined_71_0= 'pull' ) ) (otherlv_72= '=' | otherlv_73= '==' ) ( (lv_pull_74_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_75= '&' ( ( ( (lv_pullingDefined_76_0= '!' ) ) otherlv_77= 'pulling' ) | ( ( (lv_pullingDefined_78_0= 'pulling' ) ) ( (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) ) | ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_86= '&' ( ( ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing' ) | ( ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_97= '&' ( (lv_timeDefined_98_0= 'time' ) ) (otherlv_99= '=' | otherlv_100= '==' ) ( (lv_time_101_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) ) ) ) ) ) )* ) ) )
            // InternalMcmodel.g:8101:4: ( ( ( ({...}? => ( ({...}? => (otherlv_5= '&' ( (lv_angleDefined_6_0= 'angle' ) ) (otherlv_7= '=' | otherlv_8= '==' ) ( (lv_angle_9_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= '&' ( ( ( (lv_blockingDefined_11_0= '!' ) ) otherlv_12= 'blocking' ) | ( ( (lv_blockingDefined_13_0= 'blocking' ) ) ( (otherlv_14= '!=' ( ( (lv_blocking_15_0= 'false' ) ) | otherlv_16= 'true' ) ) | ( (otherlv_17= '=' | otherlv_18= '==' ) ( ( (lv_blocking_19_0= 'true' ) ) | otherlv_20= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= '&' ( ( ( (lv_brokenDefined_22_0= '!' ) ) otherlv_23= 'broken' ) | ( ( (lv_brokenDefined_24_0= 'broken' ) ) ( (otherlv_25= '!=' ( ( (lv_broken_26_0= 'false' ) ) | otherlv_27= 'true' ) ) | ( (otherlv_28= '=' | otherlv_29= '==' ) ( ( (lv_broken_30_0= 'true' ) ) | otherlv_31= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_32= '&' ( ( ( (lv_castDefined_33_0= '!' ) ) otherlv_34= 'cast' ) | ( ( (lv_castDefined_35_0= 'cast' ) ) ( (otherlv_36= '!=' ( ( (lv_cast_37_0= 'false' ) ) | otherlv_38= 'true' ) ) | ( (otherlv_39= '=' | otherlv_40= '==' ) ( ( (lv_cast_41_0= 'true' ) ) | otherlv_42= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= '&' ( (lv_cooldownDefined_44_0= 'cooldown' ) ) (otherlv_45= '=' | otherlv_46= '==' ) ( (lv_cooldown_47_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_48= '&' ( ( ( (lv_damagedDefined_49_0= '!' ) ) otherlv_50= 'damaged' ) | ( ( (lv_damagedDefined_51_0= 'damaged' ) ) ( (otherlv_52= '!=' ( ( (lv_damaged_53_0= 'false' ) ) | otherlv_54= 'true' ) ) | ( (otherlv_55= '=' | otherlv_56= '==' ) ( ( (lv_damaged_57_0= 'true' ) ) | otherlv_58= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_59= '&' ( ( ( (lv_lefthandedDefined_60_0= '!' ) ) otherlv_61= 'lefthanded' ) | ( ( (lv_lefthandedDefined_62_0= 'lefthanded' ) ) ( (otherlv_63= '!=' ( ( (lv_lefthanded_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_lefthanded_68_0= 'true' ) ) | otherlv_69= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_70= '&' ( (lv_pullDefined_71_0= 'pull' ) ) (otherlv_72= '=' | otherlv_73= '==' ) ( (lv_pull_74_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_75= '&' ( ( ( (lv_pullingDefined_76_0= '!' ) ) otherlv_77= 'pulling' ) | ( ( (lv_pullingDefined_78_0= 'pulling' ) ) ( (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) ) | ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_86= '&' ( ( ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing' ) | ( ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_97= '&' ( (lv_timeDefined_98_0= 'time' ) ) (otherlv_99= '=' | otherlv_100= '==' ) ( (lv_time_101_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) ) ) ) ) ) )* ) )
            {
            // InternalMcmodel.g:8101:4: ( ( ( ({...}? => ( ({...}? => (otherlv_5= '&' ( (lv_angleDefined_6_0= 'angle' ) ) (otherlv_7= '=' | otherlv_8= '==' ) ( (lv_angle_9_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= '&' ( ( ( (lv_blockingDefined_11_0= '!' ) ) otherlv_12= 'blocking' ) | ( ( (lv_blockingDefined_13_0= 'blocking' ) ) ( (otherlv_14= '!=' ( ( (lv_blocking_15_0= 'false' ) ) | otherlv_16= 'true' ) ) | ( (otherlv_17= '=' | otherlv_18= '==' ) ( ( (lv_blocking_19_0= 'true' ) ) | otherlv_20= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= '&' ( ( ( (lv_brokenDefined_22_0= '!' ) ) otherlv_23= 'broken' ) | ( ( (lv_brokenDefined_24_0= 'broken' ) ) ( (otherlv_25= '!=' ( ( (lv_broken_26_0= 'false' ) ) | otherlv_27= 'true' ) ) | ( (otherlv_28= '=' | otherlv_29= '==' ) ( ( (lv_broken_30_0= 'true' ) ) | otherlv_31= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_32= '&' ( ( ( (lv_castDefined_33_0= '!' ) ) otherlv_34= 'cast' ) | ( ( (lv_castDefined_35_0= 'cast' ) ) ( (otherlv_36= '!=' ( ( (lv_cast_37_0= 'false' ) ) | otherlv_38= 'true' ) ) | ( (otherlv_39= '=' | otherlv_40= '==' ) ( ( (lv_cast_41_0= 'true' ) ) | otherlv_42= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= '&' ( (lv_cooldownDefined_44_0= 'cooldown' ) ) (otherlv_45= '=' | otherlv_46= '==' ) ( (lv_cooldown_47_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_48= '&' ( ( ( (lv_damagedDefined_49_0= '!' ) ) otherlv_50= 'damaged' ) | ( ( (lv_damagedDefined_51_0= 'damaged' ) ) ( (otherlv_52= '!=' ( ( (lv_damaged_53_0= 'false' ) ) | otherlv_54= 'true' ) ) | ( (otherlv_55= '=' | otherlv_56= '==' ) ( ( (lv_damaged_57_0= 'true' ) ) | otherlv_58= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_59= '&' ( ( ( (lv_lefthandedDefined_60_0= '!' ) ) otherlv_61= 'lefthanded' ) | ( ( (lv_lefthandedDefined_62_0= 'lefthanded' ) ) ( (otherlv_63= '!=' ( ( (lv_lefthanded_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_lefthanded_68_0= 'true' ) ) | otherlv_69= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_70= '&' ( (lv_pullDefined_71_0= 'pull' ) ) (otherlv_72= '=' | otherlv_73= '==' ) ( (lv_pull_74_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_75= '&' ( ( ( (lv_pullingDefined_76_0= '!' ) ) otherlv_77= 'pulling' ) | ( ( (lv_pullingDefined_78_0= 'pulling' ) ) ( (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) ) | ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_86= '&' ( ( ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing' ) | ( ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_97= '&' ( (lv_timeDefined_98_0= 'time' ) ) (otherlv_99= '=' | otherlv_100= '==' ) ( (lv_time_101_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) ) ) ) ) ) )* ) )
            // InternalMcmodel.g:8102:5: ( ( ({...}? => ( ({...}? => (otherlv_5= '&' ( (lv_angleDefined_6_0= 'angle' ) ) (otherlv_7= '=' | otherlv_8= '==' ) ( (lv_angle_9_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= '&' ( ( ( (lv_blockingDefined_11_0= '!' ) ) otherlv_12= 'blocking' ) | ( ( (lv_blockingDefined_13_0= 'blocking' ) ) ( (otherlv_14= '!=' ( ( (lv_blocking_15_0= 'false' ) ) | otherlv_16= 'true' ) ) | ( (otherlv_17= '=' | otherlv_18= '==' ) ( ( (lv_blocking_19_0= 'true' ) ) | otherlv_20= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= '&' ( ( ( (lv_brokenDefined_22_0= '!' ) ) otherlv_23= 'broken' ) | ( ( (lv_brokenDefined_24_0= 'broken' ) ) ( (otherlv_25= '!=' ( ( (lv_broken_26_0= 'false' ) ) | otherlv_27= 'true' ) ) | ( (otherlv_28= '=' | otherlv_29= '==' ) ( ( (lv_broken_30_0= 'true' ) ) | otherlv_31= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_32= '&' ( ( ( (lv_castDefined_33_0= '!' ) ) otherlv_34= 'cast' ) | ( ( (lv_castDefined_35_0= 'cast' ) ) ( (otherlv_36= '!=' ( ( (lv_cast_37_0= 'false' ) ) | otherlv_38= 'true' ) ) | ( (otherlv_39= '=' | otherlv_40= '==' ) ( ( (lv_cast_41_0= 'true' ) ) | otherlv_42= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= '&' ( (lv_cooldownDefined_44_0= 'cooldown' ) ) (otherlv_45= '=' | otherlv_46= '==' ) ( (lv_cooldown_47_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_48= '&' ( ( ( (lv_damagedDefined_49_0= '!' ) ) otherlv_50= 'damaged' ) | ( ( (lv_damagedDefined_51_0= 'damaged' ) ) ( (otherlv_52= '!=' ( ( (lv_damaged_53_0= 'false' ) ) | otherlv_54= 'true' ) ) | ( (otherlv_55= '=' | otherlv_56= '==' ) ( ( (lv_damaged_57_0= 'true' ) ) | otherlv_58= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_59= '&' ( ( ( (lv_lefthandedDefined_60_0= '!' ) ) otherlv_61= 'lefthanded' ) | ( ( (lv_lefthandedDefined_62_0= 'lefthanded' ) ) ( (otherlv_63= '!=' ( ( (lv_lefthanded_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_lefthanded_68_0= 'true' ) ) | otherlv_69= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_70= '&' ( (lv_pullDefined_71_0= 'pull' ) ) (otherlv_72= '=' | otherlv_73= '==' ) ( (lv_pull_74_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_75= '&' ( ( ( (lv_pullingDefined_76_0= '!' ) ) otherlv_77= 'pulling' ) | ( ( (lv_pullingDefined_78_0= 'pulling' ) ) ( (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) ) | ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_86= '&' ( ( ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing' ) | ( ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_97= '&' ( (lv_timeDefined_98_0= 'time' ) ) (otherlv_99= '=' | otherlv_100= '==' ) ( (lv_time_101_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) ) ) ) ) ) )* )
            {
            getUnorderedGroupHelper().enter(grammarAccess.getOverridePredicate_6Access().getUnorderedGroup_3());
            // InternalMcmodel.g:8105:5: ( ( ({...}? => ( ({...}? => (otherlv_5= '&' ( (lv_angleDefined_6_0= 'angle' ) ) (otherlv_7= '=' | otherlv_8= '==' ) ( (lv_angle_9_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= '&' ( ( ( (lv_blockingDefined_11_0= '!' ) ) otherlv_12= 'blocking' ) | ( ( (lv_blockingDefined_13_0= 'blocking' ) ) ( (otherlv_14= '!=' ( ( (lv_blocking_15_0= 'false' ) ) | otherlv_16= 'true' ) ) | ( (otherlv_17= '=' | otherlv_18= '==' ) ( ( (lv_blocking_19_0= 'true' ) ) | otherlv_20= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= '&' ( ( ( (lv_brokenDefined_22_0= '!' ) ) otherlv_23= 'broken' ) | ( ( (lv_brokenDefined_24_0= 'broken' ) ) ( (otherlv_25= '!=' ( ( (lv_broken_26_0= 'false' ) ) | otherlv_27= 'true' ) ) | ( (otherlv_28= '=' | otherlv_29= '==' ) ( ( (lv_broken_30_0= 'true' ) ) | otherlv_31= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_32= '&' ( ( ( (lv_castDefined_33_0= '!' ) ) otherlv_34= 'cast' ) | ( ( (lv_castDefined_35_0= 'cast' ) ) ( (otherlv_36= '!=' ( ( (lv_cast_37_0= 'false' ) ) | otherlv_38= 'true' ) ) | ( (otherlv_39= '=' | otherlv_40= '==' ) ( ( (lv_cast_41_0= 'true' ) ) | otherlv_42= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= '&' ( (lv_cooldownDefined_44_0= 'cooldown' ) ) (otherlv_45= '=' | otherlv_46= '==' ) ( (lv_cooldown_47_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_48= '&' ( ( ( (lv_damagedDefined_49_0= '!' ) ) otherlv_50= 'damaged' ) | ( ( (lv_damagedDefined_51_0= 'damaged' ) ) ( (otherlv_52= '!=' ( ( (lv_damaged_53_0= 'false' ) ) | otherlv_54= 'true' ) ) | ( (otherlv_55= '=' | otherlv_56= '==' ) ( ( (lv_damaged_57_0= 'true' ) ) | otherlv_58= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_59= '&' ( ( ( (lv_lefthandedDefined_60_0= '!' ) ) otherlv_61= 'lefthanded' ) | ( ( (lv_lefthandedDefined_62_0= 'lefthanded' ) ) ( (otherlv_63= '!=' ( ( (lv_lefthanded_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_lefthanded_68_0= 'true' ) ) | otherlv_69= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_70= '&' ( (lv_pullDefined_71_0= 'pull' ) ) (otherlv_72= '=' | otherlv_73= '==' ) ( (lv_pull_74_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_75= '&' ( ( ( (lv_pullingDefined_76_0= '!' ) ) otherlv_77= 'pulling' ) | ( ( (lv_pullingDefined_78_0= 'pulling' ) ) ( (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) ) | ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_86= '&' ( ( ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing' ) | ( ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_97= '&' ( (lv_timeDefined_98_0= 'time' ) ) (otherlv_99= '=' | otherlv_100= '==' ) ( (lv_time_101_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) ) ) ) ) ) )* )
            // InternalMcmodel.g:8106:6: ( ({...}? => ( ({...}? => (otherlv_5= '&' ( (lv_angleDefined_6_0= 'angle' ) ) (otherlv_7= '=' | otherlv_8= '==' ) ( (lv_angle_9_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= '&' ( ( ( (lv_blockingDefined_11_0= '!' ) ) otherlv_12= 'blocking' ) | ( ( (lv_blockingDefined_13_0= 'blocking' ) ) ( (otherlv_14= '!=' ( ( (lv_blocking_15_0= 'false' ) ) | otherlv_16= 'true' ) ) | ( (otherlv_17= '=' | otherlv_18= '==' ) ( ( (lv_blocking_19_0= 'true' ) ) | otherlv_20= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= '&' ( ( ( (lv_brokenDefined_22_0= '!' ) ) otherlv_23= 'broken' ) | ( ( (lv_brokenDefined_24_0= 'broken' ) ) ( (otherlv_25= '!=' ( ( (lv_broken_26_0= 'false' ) ) | otherlv_27= 'true' ) ) | ( (otherlv_28= '=' | otherlv_29= '==' ) ( ( (lv_broken_30_0= 'true' ) ) | otherlv_31= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_32= '&' ( ( ( (lv_castDefined_33_0= '!' ) ) otherlv_34= 'cast' ) | ( ( (lv_castDefined_35_0= 'cast' ) ) ( (otherlv_36= '!=' ( ( (lv_cast_37_0= 'false' ) ) | otherlv_38= 'true' ) ) | ( (otherlv_39= '=' | otherlv_40= '==' ) ( ( (lv_cast_41_0= 'true' ) ) | otherlv_42= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= '&' ( (lv_cooldownDefined_44_0= 'cooldown' ) ) (otherlv_45= '=' | otherlv_46= '==' ) ( (lv_cooldown_47_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_48= '&' ( ( ( (lv_damagedDefined_49_0= '!' ) ) otherlv_50= 'damaged' ) | ( ( (lv_damagedDefined_51_0= 'damaged' ) ) ( (otherlv_52= '!=' ( ( (lv_damaged_53_0= 'false' ) ) | otherlv_54= 'true' ) ) | ( (otherlv_55= '=' | otherlv_56= '==' ) ( ( (lv_damaged_57_0= 'true' ) ) | otherlv_58= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_59= '&' ( ( ( (lv_lefthandedDefined_60_0= '!' ) ) otherlv_61= 'lefthanded' ) | ( ( (lv_lefthandedDefined_62_0= 'lefthanded' ) ) ( (otherlv_63= '!=' ( ( (lv_lefthanded_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_lefthanded_68_0= 'true' ) ) | otherlv_69= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_70= '&' ( (lv_pullDefined_71_0= 'pull' ) ) (otherlv_72= '=' | otherlv_73= '==' ) ( (lv_pull_74_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_75= '&' ( ( ( (lv_pullingDefined_76_0= '!' ) ) otherlv_77= 'pulling' ) | ( ( (lv_pullingDefined_78_0= 'pulling' ) ) ( (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) ) | ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_86= '&' ( ( ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing' ) | ( ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_97= '&' ( (lv_timeDefined_98_0= 'time' ) ) (otherlv_99= '=' | otherlv_100= '==' ) ( (lv_time_101_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) ) ) ) ) ) )*
            {
            // InternalMcmodel.g:8106:6: ( ({...}? => ( ({...}? => (otherlv_5= '&' ( (lv_angleDefined_6_0= 'angle' ) ) (otherlv_7= '=' | otherlv_8= '==' ) ( (lv_angle_9_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= '&' ( ( ( (lv_blockingDefined_11_0= '!' ) ) otherlv_12= 'blocking' ) | ( ( (lv_blockingDefined_13_0= 'blocking' ) ) ( (otherlv_14= '!=' ( ( (lv_blocking_15_0= 'false' ) ) | otherlv_16= 'true' ) ) | ( (otherlv_17= '=' | otherlv_18= '==' ) ( ( (lv_blocking_19_0= 'true' ) ) | otherlv_20= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= '&' ( ( ( (lv_brokenDefined_22_0= '!' ) ) otherlv_23= 'broken' ) | ( ( (lv_brokenDefined_24_0= 'broken' ) ) ( (otherlv_25= '!=' ( ( (lv_broken_26_0= 'false' ) ) | otherlv_27= 'true' ) ) | ( (otherlv_28= '=' | otherlv_29= '==' ) ( ( (lv_broken_30_0= 'true' ) ) | otherlv_31= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_32= '&' ( ( ( (lv_castDefined_33_0= '!' ) ) otherlv_34= 'cast' ) | ( ( (lv_castDefined_35_0= 'cast' ) ) ( (otherlv_36= '!=' ( ( (lv_cast_37_0= 'false' ) ) | otherlv_38= 'true' ) ) | ( (otherlv_39= '=' | otherlv_40= '==' ) ( ( (lv_cast_41_0= 'true' ) ) | otherlv_42= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= '&' ( (lv_cooldownDefined_44_0= 'cooldown' ) ) (otherlv_45= '=' | otherlv_46= '==' ) ( (lv_cooldown_47_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_48= '&' ( ( ( (lv_damagedDefined_49_0= '!' ) ) otherlv_50= 'damaged' ) | ( ( (lv_damagedDefined_51_0= 'damaged' ) ) ( (otherlv_52= '!=' ( ( (lv_damaged_53_0= 'false' ) ) | otherlv_54= 'true' ) ) | ( (otherlv_55= '=' | otherlv_56= '==' ) ( ( (lv_damaged_57_0= 'true' ) ) | otherlv_58= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_59= '&' ( ( ( (lv_lefthandedDefined_60_0= '!' ) ) otherlv_61= 'lefthanded' ) | ( ( (lv_lefthandedDefined_62_0= 'lefthanded' ) ) ( (otherlv_63= '!=' ( ( (lv_lefthanded_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_lefthanded_68_0= 'true' ) ) | otherlv_69= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_70= '&' ( (lv_pullDefined_71_0= 'pull' ) ) (otherlv_72= '=' | otherlv_73= '==' ) ( (lv_pull_74_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_75= '&' ( ( ( (lv_pullingDefined_76_0= '!' ) ) otherlv_77= 'pulling' ) | ( ( (lv_pullingDefined_78_0= 'pulling' ) ) ( (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) ) | ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_86= '&' ( ( ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing' ) | ( ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_97= '&' ( (lv_timeDefined_98_0= 'time' ) ) (otherlv_99= '=' | otherlv_100= '==' ) ( (lv_time_101_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) ) ) ) ) ) )*
            loop273:
            do {
                int alt273=13;
                alt273 = dfa273.predict(input);
                switch (alt273) {
            	case 1 :
            	    // InternalMcmodel.g:8107:4: ({...}? => ( ({...}? => (otherlv_5= '&' ( (lv_angleDefined_6_0= 'angle' ) ) (otherlv_7= '=' | otherlv_8= '==' ) ( (lv_angle_9_0= RULE_PERCENTAGE ) ) ) ) ) )
            	    {
            	    // InternalMcmodel.g:8107:4: ({...}? => ( ({...}? => (otherlv_5= '&' ( (lv_angleDefined_6_0= 'angle' ) ) (otherlv_7= '=' | otherlv_8= '==' ) ( (lv_angle_9_0= RULE_PERCENTAGE ) ) ) ) ) )
            	    // InternalMcmodel.g:8108:5: {...}? => ( ({...}? => (otherlv_5= '&' ( (lv_angleDefined_6_0= 'angle' ) ) (otherlv_7= '=' | otherlv_8= '==' ) ( (lv_angle_9_0= RULE_PERCENTAGE ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_6Access().getUnorderedGroup_3(), 0) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_6", "getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_6Access().getUnorderedGroup_3(), 0)");
            	    }
            	    // InternalMcmodel.g:8108:116: ( ({...}? => (otherlv_5= '&' ( (lv_angleDefined_6_0= 'angle' ) ) (otherlv_7= '=' | otherlv_8= '==' ) ( (lv_angle_9_0= RULE_PERCENTAGE ) ) ) ) )
            	    // InternalMcmodel.g:8109:6: ({...}? => (otherlv_5= '&' ( (lv_angleDefined_6_0= 'angle' ) ) (otherlv_7= '=' | otherlv_8= '==' ) ( (lv_angle_9_0= RULE_PERCENTAGE ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getOverridePredicate_6Access().getUnorderedGroup_3(), 0);
            	    // InternalMcmodel.g:8112:9: ({...}? => (otherlv_5= '&' ( (lv_angleDefined_6_0= 'angle' ) ) (otherlv_7= '=' | otherlv_8= '==' ) ( (lv_angle_9_0= RULE_PERCENTAGE ) ) ) )
            	    // InternalMcmodel.g:8112:10: {...}? => (otherlv_5= '&' ( (lv_angleDefined_6_0= 'angle' ) ) (otherlv_7= '=' | otherlv_8= '==' ) ( (lv_angle_9_0= RULE_PERCENTAGE ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_6", "true");
            	    }
            	    // InternalMcmodel.g:8112:19: (otherlv_5= '&' ( (lv_angleDefined_6_0= 'angle' ) ) (otherlv_7= '=' | otherlv_8= '==' ) ( (lv_angle_9_0= RULE_PERCENTAGE ) ) )
            	    // InternalMcmodel.g:8112:20: otherlv_5= '&' ( (lv_angleDefined_6_0= 'angle' ) ) (otherlv_7= '=' | otherlv_8= '==' ) ( (lv_angle_9_0= RULE_PERCENTAGE ) )
            	    {
            	    otherlv_5=(Token)match(input,59,FOLLOW_58); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_5, grammarAccess.getOverridePredicate_6Access().getAmpersandKeyword_3_0_0());
            	      								
            	    }
            	    // InternalMcmodel.g:8116:9: ( (lv_angleDefined_6_0= 'angle' ) )
            	    // InternalMcmodel.g:8117:10: (lv_angleDefined_6_0= 'angle' )
            	    {
            	    // InternalMcmodel.g:8117:10: (lv_angleDefined_6_0= 'angle' )
            	    // InternalMcmodel.g:8118:11: lv_angleDefined_6_0= 'angle'
            	    {
            	    lv_angleDefined_6_0=(Token)match(input,38,FOLLOW_35); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											newLeafNode(lv_angleDefined_6_0, grammarAccess.getOverridePredicate_6Access().getAngleDefinedAngleKeyword_3_0_1_0());
            	      										
            	    }
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElement(grammarAccess.getOverridePredicate_6Rule());
            	      											}
            	      											setWithLastConsumed(current, "angleDefined", true, "angle");
            	      										
            	    }

            	    }


            	    }

            	    // InternalMcmodel.g:8130:9: (otherlv_7= '=' | otherlv_8= '==' )
            	    int alt233=2;
            	    int LA233_0 = input.LA(1);

            	    if ( (LA233_0==18) ) {
            	        alt233=1;
            	    }
            	    else if ( (LA233_0==58) ) {
            	        alt233=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 233, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt233) {
            	        case 1 :
            	            // InternalMcmodel.g:8131:10: otherlv_7= '='
            	            {
            	            otherlv_7=(Token)match(input,18,FOLLOW_36); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(otherlv_7, grammarAccess.getOverridePredicate_6Access().getEqualsSignKeyword_3_0_2_0());
            	              									
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalMcmodel.g:8136:10: otherlv_8= '=='
            	            {
            	            otherlv_8=(Token)match(input,58,FOLLOW_36); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(otherlv_8, grammarAccess.getOverridePredicate_6Access().getEqualsSignEqualsSignKeyword_3_0_2_1());
            	              									
            	            }

            	            }
            	            break;

            	    }

            	    // InternalMcmodel.g:8141:9: ( (lv_angle_9_0= RULE_PERCENTAGE ) )
            	    // InternalMcmodel.g:8142:10: (lv_angle_9_0= RULE_PERCENTAGE )
            	    {
            	    // InternalMcmodel.g:8142:10: (lv_angle_9_0= RULE_PERCENTAGE )
            	    // InternalMcmodel.g:8143:11: lv_angle_9_0= RULE_PERCENTAGE
            	    {
            	    lv_angle_9_0=(Token)match(input,RULE_PERCENTAGE,FOLLOW_37); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											newLeafNode(lv_angle_9_0, grammarAccess.getOverridePredicate_6Access().getAnglePERCENTAGETerminalRuleCall_3_0_3_0());
            	      										
            	    }
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElement(grammarAccess.getOverridePredicate_6Rule());
            	      											}
            	      											setWithLastConsumed(
            	      												current,
            	      												"angle",
            	      												lv_angle_9_0,
            	      												"com.raptor.mcmodel.Mcmodel.PERCENTAGE");
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getOverridePredicate_6Access().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // InternalMcmodel.g:8165:4: ({...}? => ( ({...}? => (otherlv_10= '&' ( ( ( (lv_blockingDefined_11_0= '!' ) ) otherlv_12= 'blocking' ) | ( ( (lv_blockingDefined_13_0= 'blocking' ) ) ( (otherlv_14= '!=' ( ( (lv_blocking_15_0= 'false' ) ) | otherlv_16= 'true' ) ) | ( (otherlv_17= '=' | otherlv_18= '==' ) ( ( (lv_blocking_19_0= 'true' ) ) | otherlv_20= 'false' ) ) ) ) ) ) ) ) )
            	    {
            	    // InternalMcmodel.g:8165:4: ({...}? => ( ({...}? => (otherlv_10= '&' ( ( ( (lv_blockingDefined_11_0= '!' ) ) otherlv_12= 'blocking' ) | ( ( (lv_blockingDefined_13_0= 'blocking' ) ) ( (otherlv_14= '!=' ( ( (lv_blocking_15_0= 'false' ) ) | otherlv_16= 'true' ) ) | ( (otherlv_17= '=' | otherlv_18= '==' ) ( ( (lv_blocking_19_0= 'true' ) ) | otherlv_20= 'false' ) ) ) ) ) ) ) ) )
            	    // InternalMcmodel.g:8166:5: {...}? => ( ({...}? => (otherlv_10= '&' ( ( ( (lv_blockingDefined_11_0= '!' ) ) otherlv_12= 'blocking' ) | ( ( (lv_blockingDefined_13_0= 'blocking' ) ) ( (otherlv_14= '!=' ( ( (lv_blocking_15_0= 'false' ) ) | otherlv_16= 'true' ) ) | ( (otherlv_17= '=' | otherlv_18= '==' ) ( ( (lv_blocking_19_0= 'true' ) ) | otherlv_20= 'false' ) ) ) ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_6Access().getUnorderedGroup_3(), 1) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_6", "getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_6Access().getUnorderedGroup_3(), 1)");
            	    }
            	    // InternalMcmodel.g:8166:116: ( ({...}? => (otherlv_10= '&' ( ( ( (lv_blockingDefined_11_0= '!' ) ) otherlv_12= 'blocking' ) | ( ( (lv_blockingDefined_13_0= 'blocking' ) ) ( (otherlv_14= '!=' ( ( (lv_blocking_15_0= 'false' ) ) | otherlv_16= 'true' ) ) | ( (otherlv_17= '=' | otherlv_18= '==' ) ( ( (lv_blocking_19_0= 'true' ) ) | otherlv_20= 'false' ) ) ) ) ) ) ) )
            	    // InternalMcmodel.g:8167:6: ({...}? => (otherlv_10= '&' ( ( ( (lv_blockingDefined_11_0= '!' ) ) otherlv_12= 'blocking' ) | ( ( (lv_blockingDefined_13_0= 'blocking' ) ) ( (otherlv_14= '!=' ( ( (lv_blocking_15_0= 'false' ) ) | otherlv_16= 'true' ) ) | ( (otherlv_17= '=' | otherlv_18= '==' ) ( ( (lv_blocking_19_0= 'true' ) ) | otherlv_20= 'false' ) ) ) ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getOverridePredicate_6Access().getUnorderedGroup_3(), 1);
            	    // InternalMcmodel.g:8170:9: ({...}? => (otherlv_10= '&' ( ( ( (lv_blockingDefined_11_0= '!' ) ) otherlv_12= 'blocking' ) | ( ( (lv_blockingDefined_13_0= 'blocking' ) ) ( (otherlv_14= '!=' ( ( (lv_blocking_15_0= 'false' ) ) | otherlv_16= 'true' ) ) | ( (otherlv_17= '=' | otherlv_18= '==' ) ( ( (lv_blocking_19_0= 'true' ) ) | otherlv_20= 'false' ) ) ) ) ) ) )
            	    // InternalMcmodel.g:8170:10: {...}? => (otherlv_10= '&' ( ( ( (lv_blockingDefined_11_0= '!' ) ) otherlv_12= 'blocking' ) | ( ( (lv_blockingDefined_13_0= 'blocking' ) ) ( (otherlv_14= '!=' ( ( (lv_blocking_15_0= 'false' ) ) | otherlv_16= 'true' ) ) | ( (otherlv_17= '=' | otherlv_18= '==' ) ( ( (lv_blocking_19_0= 'true' ) ) | otherlv_20= 'false' ) ) ) ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_6", "true");
            	    }
            	    // InternalMcmodel.g:8170:19: (otherlv_10= '&' ( ( ( (lv_blockingDefined_11_0= '!' ) ) otherlv_12= 'blocking' ) | ( ( (lv_blockingDefined_13_0= 'blocking' ) ) ( (otherlv_14= '!=' ( ( (lv_blocking_15_0= 'false' ) ) | otherlv_16= 'true' ) ) | ( (otherlv_17= '=' | otherlv_18= '==' ) ( ( (lv_blocking_19_0= 'true' ) ) | otherlv_20= 'false' ) ) ) ) ) )
            	    // InternalMcmodel.g:8170:20: otherlv_10= '&' ( ( ( (lv_blockingDefined_11_0= '!' ) ) otherlv_12= 'blocking' ) | ( ( (lv_blockingDefined_13_0= 'blocking' ) ) ( (otherlv_14= '!=' ( ( (lv_blocking_15_0= 'false' ) ) | otherlv_16= 'true' ) ) | ( (otherlv_17= '=' | otherlv_18= '==' ) ( ( (lv_blocking_19_0= 'true' ) ) | otherlv_20= 'false' ) ) ) ) )
            	    {
            	    otherlv_10=(Token)match(input,59,FOLLOW_38); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_10, grammarAccess.getOverridePredicate_6Access().getAmpersandKeyword_3_1_0());
            	      								
            	    }
            	    // InternalMcmodel.g:8174:9: ( ( ( (lv_blockingDefined_11_0= '!' ) ) otherlv_12= 'blocking' ) | ( ( (lv_blockingDefined_13_0= 'blocking' ) ) ( (otherlv_14= '!=' ( ( (lv_blocking_15_0= 'false' ) ) | otherlv_16= 'true' ) ) | ( (otherlv_17= '=' | otherlv_18= '==' ) ( ( (lv_blocking_19_0= 'true' ) ) | otherlv_20= 'false' ) ) ) ) )
            	    int alt238=2;
            	    int LA238_0 = input.LA(1);

            	    if ( (LA238_0==60) ) {
            	        alt238=1;
            	    }
            	    else if ( (LA238_0==61) ) {
            	        alt238=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 238, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt238) {
            	        case 1 :
            	            // InternalMcmodel.g:8175:10: ( ( (lv_blockingDefined_11_0= '!' ) ) otherlv_12= 'blocking' )
            	            {
            	            // InternalMcmodel.g:8175:10: ( ( (lv_blockingDefined_11_0= '!' ) ) otherlv_12= 'blocking' )
            	            // InternalMcmodel.g:8176:11: ( (lv_blockingDefined_11_0= '!' ) ) otherlv_12= 'blocking'
            	            {
            	            // InternalMcmodel.g:8176:11: ( (lv_blockingDefined_11_0= '!' ) )
            	            // InternalMcmodel.g:8177:12: (lv_blockingDefined_11_0= '!' )
            	            {
            	            // InternalMcmodel.g:8177:12: (lv_blockingDefined_11_0= '!' )
            	            // InternalMcmodel.g:8178:13: lv_blockingDefined_11_0= '!'
            	            {
            	            lv_blockingDefined_11_0=(Token)match(input,60,FOLLOW_39); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              													newLeafNode(lv_blockingDefined_11_0, grammarAccess.getOverridePredicate_6Access().getBlockingDefinedExclamationMarkKeyword_3_1_1_0_0_0());
            	              												
            	            }
            	            if ( state.backtracking==0 ) {

            	              													if (current==null) {
            	              														current = createModelElement(grammarAccess.getOverridePredicate_6Rule());
            	              													}
            	              													setWithLastConsumed(current, "blockingDefined", true, "!");
            	              												
            	            }

            	            }


            	            }

            	            otherlv_12=(Token)match(input,61,FOLLOW_37); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              											newLeafNode(otherlv_12, grammarAccess.getOverridePredicate_6Access().getBlockingKeyword_3_1_1_0_1());
            	              										
            	            }

            	            }


            	            }
            	            break;
            	        case 2 :
            	            // InternalMcmodel.g:8196:10: ( ( (lv_blockingDefined_13_0= 'blocking' ) ) ( (otherlv_14= '!=' ( ( (lv_blocking_15_0= 'false' ) ) | otherlv_16= 'true' ) ) | ( (otherlv_17= '=' | otherlv_18= '==' ) ( ( (lv_blocking_19_0= 'true' ) ) | otherlv_20= 'false' ) ) ) )
            	            {
            	            // InternalMcmodel.g:8196:10: ( ( (lv_blockingDefined_13_0= 'blocking' ) ) ( (otherlv_14= '!=' ( ( (lv_blocking_15_0= 'false' ) ) | otherlv_16= 'true' ) ) | ( (otherlv_17= '=' | otherlv_18= '==' ) ( ( (lv_blocking_19_0= 'true' ) ) | otherlv_20= 'false' ) ) ) )
            	            // InternalMcmodel.g:8197:11: ( (lv_blockingDefined_13_0= 'blocking' ) ) ( (otherlv_14= '!=' ( ( (lv_blocking_15_0= 'false' ) ) | otherlv_16= 'true' ) ) | ( (otherlv_17= '=' | otherlv_18= '==' ) ( ( (lv_blocking_19_0= 'true' ) ) | otherlv_20= 'false' ) ) )
            	            {
            	            // InternalMcmodel.g:8197:11: ( (lv_blockingDefined_13_0= 'blocking' ) )
            	            // InternalMcmodel.g:8198:12: (lv_blockingDefined_13_0= 'blocking' )
            	            {
            	            // InternalMcmodel.g:8198:12: (lv_blockingDefined_13_0= 'blocking' )
            	            // InternalMcmodel.g:8199:13: lv_blockingDefined_13_0= 'blocking'
            	            {
            	            lv_blockingDefined_13_0=(Token)match(input,61,FOLLOW_40); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              													newLeafNode(lv_blockingDefined_13_0, grammarAccess.getOverridePredicate_6Access().getBlockingDefinedBlockingKeyword_3_1_1_1_0_0());
            	              												
            	            }
            	            if ( state.backtracking==0 ) {

            	              													if (current==null) {
            	              														current = createModelElement(grammarAccess.getOverridePredicate_6Rule());
            	              													}
            	              													setWithLastConsumed(current, "blockingDefined", true, "blocking");
            	              												
            	            }

            	            }


            	            }

            	            // InternalMcmodel.g:8211:11: ( (otherlv_14= '!=' ( ( (lv_blocking_15_0= 'false' ) ) | otherlv_16= 'true' ) ) | ( (otherlv_17= '=' | otherlv_18= '==' ) ( ( (lv_blocking_19_0= 'true' ) ) | otherlv_20= 'false' ) ) )
            	            int alt237=2;
            	            int LA237_0 = input.LA(1);

            	            if ( (LA237_0==62) ) {
            	                alt237=1;
            	            }
            	            else if ( (LA237_0==18||LA237_0==58) ) {
            	                alt237=2;
            	            }
            	            else {
            	                if (state.backtracking>0) {state.failed=true; return current;}
            	                NoViableAltException nvae =
            	                    new NoViableAltException("", 237, 0, input);

            	                throw nvae;
            	            }
            	            switch (alt237) {
            	                case 1 :
            	                    // InternalMcmodel.g:8212:12: (otherlv_14= '!=' ( ( (lv_blocking_15_0= 'false' ) ) | otherlv_16= 'true' ) )
            	                    {
            	                    // InternalMcmodel.g:8212:12: (otherlv_14= '!=' ( ( (lv_blocking_15_0= 'false' ) ) | otherlv_16= 'true' ) )
            	                    // InternalMcmodel.g:8213:13: otherlv_14= '!=' ( ( (lv_blocking_15_0= 'false' ) ) | otherlv_16= 'true' )
            	                    {
            	                    otherlv_14=(Token)match(input,62,FOLLOW_7); if (state.failed) return current;
            	                    if ( state.backtracking==0 ) {

            	                      													newLeafNode(otherlv_14, grammarAccess.getOverridePredicate_6Access().getExclamationMarkEqualsSignKeyword_3_1_1_1_1_0_0());
            	                      												
            	                    }
            	                    // InternalMcmodel.g:8217:13: ( ( (lv_blocking_15_0= 'false' ) ) | otherlv_16= 'true' )
            	                    int alt234=2;
            	                    int LA234_0 = input.LA(1);

            	                    if ( (LA234_0==21) ) {
            	                        alt234=1;
            	                    }
            	                    else if ( (LA234_0==20) ) {
            	                        alt234=2;
            	                    }
            	                    else {
            	                        if (state.backtracking>0) {state.failed=true; return current;}
            	                        NoViableAltException nvae =
            	                            new NoViableAltException("", 234, 0, input);

            	                        throw nvae;
            	                    }
            	                    switch (alt234) {
            	                        case 1 :
            	                            // InternalMcmodel.g:8218:14: ( (lv_blocking_15_0= 'false' ) )
            	                            {
            	                            // InternalMcmodel.g:8218:14: ( (lv_blocking_15_0= 'false' ) )
            	                            // InternalMcmodel.g:8219:15: (lv_blocking_15_0= 'false' )
            	                            {
            	                            // InternalMcmodel.g:8219:15: (lv_blocking_15_0= 'false' )
            	                            // InternalMcmodel.g:8220:16: lv_blocking_15_0= 'false'
            	                            {
            	                            lv_blocking_15_0=(Token)match(input,21,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              																newLeafNode(lv_blocking_15_0, grammarAccess.getOverridePredicate_6Access().getBlockingFalseKeyword_3_1_1_1_1_0_1_0_0());
            	                              															
            	                            }
            	                            if ( state.backtracking==0 ) {

            	                              																if (current==null) {
            	                              																	current = createModelElement(grammarAccess.getOverridePredicate_6Rule());
            	                              																}
            	                              																setWithLastConsumed(current, "blocking", true, "false");
            	                              															
            	                            }

            	                            }


            	                            }


            	                            }
            	                            break;
            	                        case 2 :
            	                            // InternalMcmodel.g:8233:14: otherlv_16= 'true'
            	                            {
            	                            otherlv_16=(Token)match(input,20,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_16, grammarAccess.getOverridePredicate_6Access().getTrueKeyword_3_1_1_1_1_0_1_1());
            	                              													
            	                            }

            	                            }
            	                            break;

            	                    }


            	                    }


            	                    }
            	                    break;
            	                case 2 :
            	                    // InternalMcmodel.g:8240:12: ( (otherlv_17= '=' | otherlv_18= '==' ) ( ( (lv_blocking_19_0= 'true' ) ) | otherlv_20= 'false' ) )
            	                    {
            	                    // InternalMcmodel.g:8240:12: ( (otherlv_17= '=' | otherlv_18= '==' ) ( ( (lv_blocking_19_0= 'true' ) ) | otherlv_20= 'false' ) )
            	                    // InternalMcmodel.g:8241:13: (otherlv_17= '=' | otherlv_18= '==' ) ( ( (lv_blocking_19_0= 'true' ) ) | otherlv_20= 'false' )
            	                    {
            	                    // InternalMcmodel.g:8241:13: (otherlv_17= '=' | otherlv_18= '==' )
            	                    int alt235=2;
            	                    int LA235_0 = input.LA(1);

            	                    if ( (LA235_0==18) ) {
            	                        alt235=1;
            	                    }
            	                    else if ( (LA235_0==58) ) {
            	                        alt235=2;
            	                    }
            	                    else {
            	                        if (state.backtracking>0) {state.failed=true; return current;}
            	                        NoViableAltException nvae =
            	                            new NoViableAltException("", 235, 0, input);

            	                        throw nvae;
            	                    }
            	                    switch (alt235) {
            	                        case 1 :
            	                            // InternalMcmodel.g:8242:14: otherlv_17= '='
            	                            {
            	                            otherlv_17=(Token)match(input,18,FOLLOW_7); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_17, grammarAccess.getOverridePredicate_6Access().getEqualsSignKeyword_3_1_1_1_1_1_0_0());
            	                              													
            	                            }

            	                            }
            	                            break;
            	                        case 2 :
            	                            // InternalMcmodel.g:8247:14: otherlv_18= '=='
            	                            {
            	                            otherlv_18=(Token)match(input,58,FOLLOW_7); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_18, grammarAccess.getOverridePredicate_6Access().getEqualsSignEqualsSignKeyword_3_1_1_1_1_1_0_1());
            	                              													
            	                            }

            	                            }
            	                            break;

            	                    }

            	                    // InternalMcmodel.g:8252:13: ( ( (lv_blocking_19_0= 'true' ) ) | otherlv_20= 'false' )
            	                    int alt236=2;
            	                    int LA236_0 = input.LA(1);

            	                    if ( (LA236_0==20) ) {
            	                        alt236=1;
            	                    }
            	                    else if ( (LA236_0==21) ) {
            	                        alt236=2;
            	                    }
            	                    else {
            	                        if (state.backtracking>0) {state.failed=true; return current;}
            	                        NoViableAltException nvae =
            	                            new NoViableAltException("", 236, 0, input);

            	                        throw nvae;
            	                    }
            	                    switch (alt236) {
            	                        case 1 :
            	                            // InternalMcmodel.g:8253:14: ( (lv_blocking_19_0= 'true' ) )
            	                            {
            	                            // InternalMcmodel.g:8253:14: ( (lv_blocking_19_0= 'true' ) )
            	                            // InternalMcmodel.g:8254:15: (lv_blocking_19_0= 'true' )
            	                            {
            	                            // InternalMcmodel.g:8254:15: (lv_blocking_19_0= 'true' )
            	                            // InternalMcmodel.g:8255:16: lv_blocking_19_0= 'true'
            	                            {
            	                            lv_blocking_19_0=(Token)match(input,20,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              																newLeafNode(lv_blocking_19_0, grammarAccess.getOverridePredicate_6Access().getBlockingTrueKeyword_3_1_1_1_1_1_1_0_0());
            	                              															
            	                            }
            	                            if ( state.backtracking==0 ) {

            	                              																if (current==null) {
            	                              																	current = createModelElement(grammarAccess.getOverridePredicate_6Rule());
            	                              																}
            	                              																setWithLastConsumed(current, "blocking", true, "true");
            	                              															
            	                            }

            	                            }


            	                            }


            	                            }
            	                            break;
            	                        case 2 :
            	                            // InternalMcmodel.g:8268:14: otherlv_20= 'false'
            	                            {
            	                            otherlv_20=(Token)match(input,21,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_20, grammarAccess.getOverridePredicate_6Access().getFalseKeyword_3_1_1_1_1_1_1_1());
            	                              													
            	                            }

            	                            }
            	                            break;

            	                    }


            	                    }


            	                    }
            	                    break;

            	            }


            	            }


            	            }
            	            break;

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getOverridePredicate_6Access().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 3 :
            	    // InternalMcmodel.g:8283:4: ({...}? => ( ({...}? => (otherlv_21= '&' ( ( ( (lv_brokenDefined_22_0= '!' ) ) otherlv_23= 'broken' ) | ( ( (lv_brokenDefined_24_0= 'broken' ) ) ( (otherlv_25= '!=' ( ( (lv_broken_26_0= 'false' ) ) | otherlv_27= 'true' ) ) | ( (otherlv_28= '=' | otherlv_29= '==' ) ( ( (lv_broken_30_0= 'true' ) ) | otherlv_31= 'false' ) ) ) ) ) ) ) ) )
            	    {
            	    // InternalMcmodel.g:8283:4: ({...}? => ( ({...}? => (otherlv_21= '&' ( ( ( (lv_brokenDefined_22_0= '!' ) ) otherlv_23= 'broken' ) | ( ( (lv_brokenDefined_24_0= 'broken' ) ) ( (otherlv_25= '!=' ( ( (lv_broken_26_0= 'false' ) ) | otherlv_27= 'true' ) ) | ( (otherlv_28= '=' | otherlv_29= '==' ) ( ( (lv_broken_30_0= 'true' ) ) | otherlv_31= 'false' ) ) ) ) ) ) ) ) )
            	    // InternalMcmodel.g:8284:5: {...}? => ( ({...}? => (otherlv_21= '&' ( ( ( (lv_brokenDefined_22_0= '!' ) ) otherlv_23= 'broken' ) | ( ( (lv_brokenDefined_24_0= 'broken' ) ) ( (otherlv_25= '!=' ( ( (lv_broken_26_0= 'false' ) ) | otherlv_27= 'true' ) ) | ( (otherlv_28= '=' | otherlv_29= '==' ) ( ( (lv_broken_30_0= 'true' ) ) | otherlv_31= 'false' ) ) ) ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_6Access().getUnorderedGroup_3(), 2) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_6", "getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_6Access().getUnorderedGroup_3(), 2)");
            	    }
            	    // InternalMcmodel.g:8284:116: ( ({...}? => (otherlv_21= '&' ( ( ( (lv_brokenDefined_22_0= '!' ) ) otherlv_23= 'broken' ) | ( ( (lv_brokenDefined_24_0= 'broken' ) ) ( (otherlv_25= '!=' ( ( (lv_broken_26_0= 'false' ) ) | otherlv_27= 'true' ) ) | ( (otherlv_28= '=' | otherlv_29= '==' ) ( ( (lv_broken_30_0= 'true' ) ) | otherlv_31= 'false' ) ) ) ) ) ) ) )
            	    // InternalMcmodel.g:8285:6: ({...}? => (otherlv_21= '&' ( ( ( (lv_brokenDefined_22_0= '!' ) ) otherlv_23= 'broken' ) | ( ( (lv_brokenDefined_24_0= 'broken' ) ) ( (otherlv_25= '!=' ( ( (lv_broken_26_0= 'false' ) ) | otherlv_27= 'true' ) ) | ( (otherlv_28= '=' | otherlv_29= '==' ) ( ( (lv_broken_30_0= 'true' ) ) | otherlv_31= 'false' ) ) ) ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getOverridePredicate_6Access().getUnorderedGroup_3(), 2);
            	    // InternalMcmodel.g:8288:9: ({...}? => (otherlv_21= '&' ( ( ( (lv_brokenDefined_22_0= '!' ) ) otherlv_23= 'broken' ) | ( ( (lv_brokenDefined_24_0= 'broken' ) ) ( (otherlv_25= '!=' ( ( (lv_broken_26_0= 'false' ) ) | otherlv_27= 'true' ) ) | ( (otherlv_28= '=' | otherlv_29= '==' ) ( ( (lv_broken_30_0= 'true' ) ) | otherlv_31= 'false' ) ) ) ) ) ) )
            	    // InternalMcmodel.g:8288:10: {...}? => (otherlv_21= '&' ( ( ( (lv_brokenDefined_22_0= '!' ) ) otherlv_23= 'broken' ) | ( ( (lv_brokenDefined_24_0= 'broken' ) ) ( (otherlv_25= '!=' ( ( (lv_broken_26_0= 'false' ) ) | otherlv_27= 'true' ) ) | ( (otherlv_28= '=' | otherlv_29= '==' ) ( ( (lv_broken_30_0= 'true' ) ) | otherlv_31= 'false' ) ) ) ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_6", "true");
            	    }
            	    // InternalMcmodel.g:8288:19: (otherlv_21= '&' ( ( ( (lv_brokenDefined_22_0= '!' ) ) otherlv_23= 'broken' ) | ( ( (lv_brokenDefined_24_0= 'broken' ) ) ( (otherlv_25= '!=' ( ( (lv_broken_26_0= 'false' ) ) | otherlv_27= 'true' ) ) | ( (otherlv_28= '=' | otherlv_29= '==' ) ( ( (lv_broken_30_0= 'true' ) ) | otherlv_31= 'false' ) ) ) ) ) )
            	    // InternalMcmodel.g:8288:20: otherlv_21= '&' ( ( ( (lv_brokenDefined_22_0= '!' ) ) otherlv_23= 'broken' ) | ( ( (lv_brokenDefined_24_0= 'broken' ) ) ( (otherlv_25= '!=' ( ( (lv_broken_26_0= 'false' ) ) | otherlv_27= 'true' ) ) | ( (otherlv_28= '=' | otherlv_29= '==' ) ( ( (lv_broken_30_0= 'true' ) ) | otherlv_31= 'false' ) ) ) ) )
            	    {
            	    otherlv_21=(Token)match(input,59,FOLLOW_41); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_21, grammarAccess.getOverridePredicate_6Access().getAmpersandKeyword_3_2_0());
            	      								
            	    }
            	    // InternalMcmodel.g:8292:9: ( ( ( (lv_brokenDefined_22_0= '!' ) ) otherlv_23= 'broken' ) | ( ( (lv_brokenDefined_24_0= 'broken' ) ) ( (otherlv_25= '!=' ( ( (lv_broken_26_0= 'false' ) ) | otherlv_27= 'true' ) ) | ( (otherlv_28= '=' | otherlv_29= '==' ) ( ( (lv_broken_30_0= 'true' ) ) | otherlv_31= 'false' ) ) ) ) )
            	    int alt243=2;
            	    int LA243_0 = input.LA(1);

            	    if ( (LA243_0==60) ) {
            	        alt243=1;
            	    }
            	    else if ( (LA243_0==63) ) {
            	        alt243=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 243, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt243) {
            	        case 1 :
            	            // InternalMcmodel.g:8293:10: ( ( (lv_brokenDefined_22_0= '!' ) ) otherlv_23= 'broken' )
            	            {
            	            // InternalMcmodel.g:8293:10: ( ( (lv_brokenDefined_22_0= '!' ) ) otherlv_23= 'broken' )
            	            // InternalMcmodel.g:8294:11: ( (lv_brokenDefined_22_0= '!' ) ) otherlv_23= 'broken'
            	            {
            	            // InternalMcmodel.g:8294:11: ( (lv_brokenDefined_22_0= '!' ) )
            	            // InternalMcmodel.g:8295:12: (lv_brokenDefined_22_0= '!' )
            	            {
            	            // InternalMcmodel.g:8295:12: (lv_brokenDefined_22_0= '!' )
            	            // InternalMcmodel.g:8296:13: lv_brokenDefined_22_0= '!'
            	            {
            	            lv_brokenDefined_22_0=(Token)match(input,60,FOLLOW_42); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              													newLeafNode(lv_brokenDefined_22_0, grammarAccess.getOverridePredicate_6Access().getBrokenDefinedExclamationMarkKeyword_3_2_1_0_0_0());
            	              												
            	            }
            	            if ( state.backtracking==0 ) {

            	              													if (current==null) {
            	              														current = createModelElement(grammarAccess.getOverridePredicate_6Rule());
            	              													}
            	              													setWithLastConsumed(current, "brokenDefined", true, "!");
            	              												
            	            }

            	            }


            	            }

            	            otherlv_23=(Token)match(input,63,FOLLOW_37); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              											newLeafNode(otherlv_23, grammarAccess.getOverridePredicate_6Access().getBrokenKeyword_3_2_1_0_1());
            	              										
            	            }

            	            }


            	            }
            	            break;
            	        case 2 :
            	            // InternalMcmodel.g:8314:10: ( ( (lv_brokenDefined_24_0= 'broken' ) ) ( (otherlv_25= '!=' ( ( (lv_broken_26_0= 'false' ) ) | otherlv_27= 'true' ) ) | ( (otherlv_28= '=' | otherlv_29= '==' ) ( ( (lv_broken_30_0= 'true' ) ) | otherlv_31= 'false' ) ) ) )
            	            {
            	            // InternalMcmodel.g:8314:10: ( ( (lv_brokenDefined_24_0= 'broken' ) ) ( (otherlv_25= '!=' ( ( (lv_broken_26_0= 'false' ) ) | otherlv_27= 'true' ) ) | ( (otherlv_28= '=' | otherlv_29= '==' ) ( ( (lv_broken_30_0= 'true' ) ) | otherlv_31= 'false' ) ) ) )
            	            // InternalMcmodel.g:8315:11: ( (lv_brokenDefined_24_0= 'broken' ) ) ( (otherlv_25= '!=' ( ( (lv_broken_26_0= 'false' ) ) | otherlv_27= 'true' ) ) | ( (otherlv_28= '=' | otherlv_29= '==' ) ( ( (lv_broken_30_0= 'true' ) ) | otherlv_31= 'false' ) ) )
            	            {
            	            // InternalMcmodel.g:8315:11: ( (lv_brokenDefined_24_0= 'broken' ) )
            	            // InternalMcmodel.g:8316:12: (lv_brokenDefined_24_0= 'broken' )
            	            {
            	            // InternalMcmodel.g:8316:12: (lv_brokenDefined_24_0= 'broken' )
            	            // InternalMcmodel.g:8317:13: lv_brokenDefined_24_0= 'broken'
            	            {
            	            lv_brokenDefined_24_0=(Token)match(input,63,FOLLOW_40); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              													newLeafNode(lv_brokenDefined_24_0, grammarAccess.getOverridePredicate_6Access().getBrokenDefinedBrokenKeyword_3_2_1_1_0_0());
            	              												
            	            }
            	            if ( state.backtracking==0 ) {

            	              													if (current==null) {
            	              														current = createModelElement(grammarAccess.getOverridePredicate_6Rule());
            	              													}
            	              													setWithLastConsumed(current, "brokenDefined", true, "broken");
            	              												
            	            }

            	            }


            	            }

            	            // InternalMcmodel.g:8329:11: ( (otherlv_25= '!=' ( ( (lv_broken_26_0= 'false' ) ) | otherlv_27= 'true' ) ) | ( (otherlv_28= '=' | otherlv_29= '==' ) ( ( (lv_broken_30_0= 'true' ) ) | otherlv_31= 'false' ) ) )
            	            int alt242=2;
            	            int LA242_0 = input.LA(1);

            	            if ( (LA242_0==62) ) {
            	                alt242=1;
            	            }
            	            else if ( (LA242_0==18||LA242_0==58) ) {
            	                alt242=2;
            	            }
            	            else {
            	                if (state.backtracking>0) {state.failed=true; return current;}
            	                NoViableAltException nvae =
            	                    new NoViableAltException("", 242, 0, input);

            	                throw nvae;
            	            }
            	            switch (alt242) {
            	                case 1 :
            	                    // InternalMcmodel.g:8330:12: (otherlv_25= '!=' ( ( (lv_broken_26_0= 'false' ) ) | otherlv_27= 'true' ) )
            	                    {
            	                    // InternalMcmodel.g:8330:12: (otherlv_25= '!=' ( ( (lv_broken_26_0= 'false' ) ) | otherlv_27= 'true' ) )
            	                    // InternalMcmodel.g:8331:13: otherlv_25= '!=' ( ( (lv_broken_26_0= 'false' ) ) | otherlv_27= 'true' )
            	                    {
            	                    otherlv_25=(Token)match(input,62,FOLLOW_7); if (state.failed) return current;
            	                    if ( state.backtracking==0 ) {

            	                      													newLeafNode(otherlv_25, grammarAccess.getOverridePredicate_6Access().getExclamationMarkEqualsSignKeyword_3_2_1_1_1_0_0());
            	                      												
            	                    }
            	                    // InternalMcmodel.g:8335:13: ( ( (lv_broken_26_0= 'false' ) ) | otherlv_27= 'true' )
            	                    int alt239=2;
            	                    int LA239_0 = input.LA(1);

            	                    if ( (LA239_0==21) ) {
            	                        alt239=1;
            	                    }
            	                    else if ( (LA239_0==20) ) {
            	                        alt239=2;
            	                    }
            	                    else {
            	                        if (state.backtracking>0) {state.failed=true; return current;}
            	                        NoViableAltException nvae =
            	                            new NoViableAltException("", 239, 0, input);

            	                        throw nvae;
            	                    }
            	                    switch (alt239) {
            	                        case 1 :
            	                            // InternalMcmodel.g:8336:14: ( (lv_broken_26_0= 'false' ) )
            	                            {
            	                            // InternalMcmodel.g:8336:14: ( (lv_broken_26_0= 'false' ) )
            	                            // InternalMcmodel.g:8337:15: (lv_broken_26_0= 'false' )
            	                            {
            	                            // InternalMcmodel.g:8337:15: (lv_broken_26_0= 'false' )
            	                            // InternalMcmodel.g:8338:16: lv_broken_26_0= 'false'
            	                            {
            	                            lv_broken_26_0=(Token)match(input,21,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              																newLeafNode(lv_broken_26_0, grammarAccess.getOverridePredicate_6Access().getBrokenFalseKeyword_3_2_1_1_1_0_1_0_0());
            	                              															
            	                            }
            	                            if ( state.backtracking==0 ) {

            	                              																if (current==null) {
            	                              																	current = createModelElement(grammarAccess.getOverridePredicate_6Rule());
            	                              																}
            	                              																setWithLastConsumed(current, "broken", true, "false");
            	                              															
            	                            }

            	                            }


            	                            }


            	                            }
            	                            break;
            	                        case 2 :
            	                            // InternalMcmodel.g:8351:14: otherlv_27= 'true'
            	                            {
            	                            otherlv_27=(Token)match(input,20,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_27, grammarAccess.getOverridePredicate_6Access().getTrueKeyword_3_2_1_1_1_0_1_1());
            	                              													
            	                            }

            	                            }
            	                            break;

            	                    }


            	                    }


            	                    }
            	                    break;
            	                case 2 :
            	                    // InternalMcmodel.g:8358:12: ( (otherlv_28= '=' | otherlv_29= '==' ) ( ( (lv_broken_30_0= 'true' ) ) | otherlv_31= 'false' ) )
            	                    {
            	                    // InternalMcmodel.g:8358:12: ( (otherlv_28= '=' | otherlv_29= '==' ) ( ( (lv_broken_30_0= 'true' ) ) | otherlv_31= 'false' ) )
            	                    // InternalMcmodel.g:8359:13: (otherlv_28= '=' | otherlv_29= '==' ) ( ( (lv_broken_30_0= 'true' ) ) | otherlv_31= 'false' )
            	                    {
            	                    // InternalMcmodel.g:8359:13: (otherlv_28= '=' | otherlv_29= '==' )
            	                    int alt240=2;
            	                    int LA240_0 = input.LA(1);

            	                    if ( (LA240_0==18) ) {
            	                        alt240=1;
            	                    }
            	                    else if ( (LA240_0==58) ) {
            	                        alt240=2;
            	                    }
            	                    else {
            	                        if (state.backtracking>0) {state.failed=true; return current;}
            	                        NoViableAltException nvae =
            	                            new NoViableAltException("", 240, 0, input);

            	                        throw nvae;
            	                    }
            	                    switch (alt240) {
            	                        case 1 :
            	                            // InternalMcmodel.g:8360:14: otherlv_28= '='
            	                            {
            	                            otherlv_28=(Token)match(input,18,FOLLOW_7); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_28, grammarAccess.getOverridePredicate_6Access().getEqualsSignKeyword_3_2_1_1_1_1_0_0());
            	                              													
            	                            }

            	                            }
            	                            break;
            	                        case 2 :
            	                            // InternalMcmodel.g:8365:14: otherlv_29= '=='
            	                            {
            	                            otherlv_29=(Token)match(input,58,FOLLOW_7); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_29, grammarAccess.getOverridePredicate_6Access().getEqualsSignEqualsSignKeyword_3_2_1_1_1_1_0_1());
            	                              													
            	                            }

            	                            }
            	                            break;

            	                    }

            	                    // InternalMcmodel.g:8370:13: ( ( (lv_broken_30_0= 'true' ) ) | otherlv_31= 'false' )
            	                    int alt241=2;
            	                    int LA241_0 = input.LA(1);

            	                    if ( (LA241_0==20) ) {
            	                        alt241=1;
            	                    }
            	                    else if ( (LA241_0==21) ) {
            	                        alt241=2;
            	                    }
            	                    else {
            	                        if (state.backtracking>0) {state.failed=true; return current;}
            	                        NoViableAltException nvae =
            	                            new NoViableAltException("", 241, 0, input);

            	                        throw nvae;
            	                    }
            	                    switch (alt241) {
            	                        case 1 :
            	                            // InternalMcmodel.g:8371:14: ( (lv_broken_30_0= 'true' ) )
            	                            {
            	                            // InternalMcmodel.g:8371:14: ( (lv_broken_30_0= 'true' ) )
            	                            // InternalMcmodel.g:8372:15: (lv_broken_30_0= 'true' )
            	                            {
            	                            // InternalMcmodel.g:8372:15: (lv_broken_30_0= 'true' )
            	                            // InternalMcmodel.g:8373:16: lv_broken_30_0= 'true'
            	                            {
            	                            lv_broken_30_0=(Token)match(input,20,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              																newLeafNode(lv_broken_30_0, grammarAccess.getOverridePredicate_6Access().getBrokenTrueKeyword_3_2_1_1_1_1_1_0_0());
            	                              															
            	                            }
            	                            if ( state.backtracking==0 ) {

            	                              																if (current==null) {
            	                              																	current = createModelElement(grammarAccess.getOverridePredicate_6Rule());
            	                              																}
            	                              																setWithLastConsumed(current, "broken", true, "true");
            	                              															
            	                            }

            	                            }


            	                            }


            	                            }
            	                            break;
            	                        case 2 :
            	                            // InternalMcmodel.g:8386:14: otherlv_31= 'false'
            	                            {
            	                            otherlv_31=(Token)match(input,21,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_31, grammarAccess.getOverridePredicate_6Access().getFalseKeyword_3_2_1_1_1_1_1_1());
            	                              													
            	                            }

            	                            }
            	                            break;

            	                    }


            	                    }


            	                    }
            	                    break;

            	            }


            	            }


            	            }
            	            break;

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getOverridePredicate_6Access().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 4 :
            	    // InternalMcmodel.g:8401:4: ({...}? => ( ({...}? => (otherlv_32= '&' ( ( ( (lv_castDefined_33_0= '!' ) ) otherlv_34= 'cast' ) | ( ( (lv_castDefined_35_0= 'cast' ) ) ( (otherlv_36= '!=' ( ( (lv_cast_37_0= 'false' ) ) | otherlv_38= 'true' ) ) | ( (otherlv_39= '=' | otherlv_40= '==' ) ( ( (lv_cast_41_0= 'true' ) ) | otherlv_42= 'false' ) ) ) ) ) ) ) ) )
            	    {
            	    // InternalMcmodel.g:8401:4: ({...}? => ( ({...}? => (otherlv_32= '&' ( ( ( (lv_castDefined_33_0= '!' ) ) otherlv_34= 'cast' ) | ( ( (lv_castDefined_35_0= 'cast' ) ) ( (otherlv_36= '!=' ( ( (lv_cast_37_0= 'false' ) ) | otherlv_38= 'true' ) ) | ( (otherlv_39= '=' | otherlv_40= '==' ) ( ( (lv_cast_41_0= 'true' ) ) | otherlv_42= 'false' ) ) ) ) ) ) ) ) )
            	    // InternalMcmodel.g:8402:5: {...}? => ( ({...}? => (otherlv_32= '&' ( ( ( (lv_castDefined_33_0= '!' ) ) otherlv_34= 'cast' ) | ( ( (lv_castDefined_35_0= 'cast' ) ) ( (otherlv_36= '!=' ( ( (lv_cast_37_0= 'false' ) ) | otherlv_38= 'true' ) ) | ( (otherlv_39= '=' | otherlv_40= '==' ) ( ( (lv_cast_41_0= 'true' ) ) | otherlv_42= 'false' ) ) ) ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_6Access().getUnorderedGroup_3(), 3) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_6", "getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_6Access().getUnorderedGroup_3(), 3)");
            	    }
            	    // InternalMcmodel.g:8402:116: ( ({...}? => (otherlv_32= '&' ( ( ( (lv_castDefined_33_0= '!' ) ) otherlv_34= 'cast' ) | ( ( (lv_castDefined_35_0= 'cast' ) ) ( (otherlv_36= '!=' ( ( (lv_cast_37_0= 'false' ) ) | otherlv_38= 'true' ) ) | ( (otherlv_39= '=' | otherlv_40= '==' ) ( ( (lv_cast_41_0= 'true' ) ) | otherlv_42= 'false' ) ) ) ) ) ) ) )
            	    // InternalMcmodel.g:8403:6: ({...}? => (otherlv_32= '&' ( ( ( (lv_castDefined_33_0= '!' ) ) otherlv_34= 'cast' ) | ( ( (lv_castDefined_35_0= 'cast' ) ) ( (otherlv_36= '!=' ( ( (lv_cast_37_0= 'false' ) ) | otherlv_38= 'true' ) ) | ( (otherlv_39= '=' | otherlv_40= '==' ) ( ( (lv_cast_41_0= 'true' ) ) | otherlv_42= 'false' ) ) ) ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getOverridePredicate_6Access().getUnorderedGroup_3(), 3);
            	    // InternalMcmodel.g:8406:9: ({...}? => (otherlv_32= '&' ( ( ( (lv_castDefined_33_0= '!' ) ) otherlv_34= 'cast' ) | ( ( (lv_castDefined_35_0= 'cast' ) ) ( (otherlv_36= '!=' ( ( (lv_cast_37_0= 'false' ) ) | otherlv_38= 'true' ) ) | ( (otherlv_39= '=' | otherlv_40= '==' ) ( ( (lv_cast_41_0= 'true' ) ) | otherlv_42= 'false' ) ) ) ) ) ) )
            	    // InternalMcmodel.g:8406:10: {...}? => (otherlv_32= '&' ( ( ( (lv_castDefined_33_0= '!' ) ) otherlv_34= 'cast' ) | ( ( (lv_castDefined_35_0= 'cast' ) ) ( (otherlv_36= '!=' ( ( (lv_cast_37_0= 'false' ) ) | otherlv_38= 'true' ) ) | ( (otherlv_39= '=' | otherlv_40= '==' ) ( ( (lv_cast_41_0= 'true' ) ) | otherlv_42= 'false' ) ) ) ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_6", "true");
            	    }
            	    // InternalMcmodel.g:8406:19: (otherlv_32= '&' ( ( ( (lv_castDefined_33_0= '!' ) ) otherlv_34= 'cast' ) | ( ( (lv_castDefined_35_0= 'cast' ) ) ( (otherlv_36= '!=' ( ( (lv_cast_37_0= 'false' ) ) | otherlv_38= 'true' ) ) | ( (otherlv_39= '=' | otherlv_40= '==' ) ( ( (lv_cast_41_0= 'true' ) ) | otherlv_42= 'false' ) ) ) ) ) )
            	    // InternalMcmodel.g:8406:20: otherlv_32= '&' ( ( ( (lv_castDefined_33_0= '!' ) ) otherlv_34= 'cast' ) | ( ( (lv_castDefined_35_0= 'cast' ) ) ( (otherlv_36= '!=' ( ( (lv_cast_37_0= 'false' ) ) | otherlv_38= 'true' ) ) | ( (otherlv_39= '=' | otherlv_40= '==' ) ( ( (lv_cast_41_0= 'true' ) ) | otherlv_42= 'false' ) ) ) ) )
            	    {
            	    otherlv_32=(Token)match(input,59,FOLLOW_43); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_32, grammarAccess.getOverridePredicate_6Access().getAmpersandKeyword_3_3_0());
            	      								
            	    }
            	    // InternalMcmodel.g:8410:9: ( ( ( (lv_castDefined_33_0= '!' ) ) otherlv_34= 'cast' ) | ( ( (lv_castDefined_35_0= 'cast' ) ) ( (otherlv_36= '!=' ( ( (lv_cast_37_0= 'false' ) ) | otherlv_38= 'true' ) ) | ( (otherlv_39= '=' | otherlv_40= '==' ) ( ( (lv_cast_41_0= 'true' ) ) | otherlv_42= 'false' ) ) ) ) )
            	    int alt248=2;
            	    int LA248_0 = input.LA(1);

            	    if ( (LA248_0==60) ) {
            	        alt248=1;
            	    }
            	    else if ( (LA248_0==64) ) {
            	        alt248=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 248, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt248) {
            	        case 1 :
            	            // InternalMcmodel.g:8411:10: ( ( (lv_castDefined_33_0= '!' ) ) otherlv_34= 'cast' )
            	            {
            	            // InternalMcmodel.g:8411:10: ( ( (lv_castDefined_33_0= '!' ) ) otherlv_34= 'cast' )
            	            // InternalMcmodel.g:8412:11: ( (lv_castDefined_33_0= '!' ) ) otherlv_34= 'cast'
            	            {
            	            // InternalMcmodel.g:8412:11: ( (lv_castDefined_33_0= '!' ) )
            	            // InternalMcmodel.g:8413:12: (lv_castDefined_33_0= '!' )
            	            {
            	            // InternalMcmodel.g:8413:12: (lv_castDefined_33_0= '!' )
            	            // InternalMcmodel.g:8414:13: lv_castDefined_33_0= '!'
            	            {
            	            lv_castDefined_33_0=(Token)match(input,60,FOLLOW_44); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              													newLeafNode(lv_castDefined_33_0, grammarAccess.getOverridePredicate_6Access().getCastDefinedExclamationMarkKeyword_3_3_1_0_0_0());
            	              												
            	            }
            	            if ( state.backtracking==0 ) {

            	              													if (current==null) {
            	              														current = createModelElement(grammarAccess.getOverridePredicate_6Rule());
            	              													}
            	              													setWithLastConsumed(current, "castDefined", true, "!");
            	              												
            	            }

            	            }


            	            }

            	            otherlv_34=(Token)match(input,64,FOLLOW_37); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              											newLeafNode(otherlv_34, grammarAccess.getOverridePredicate_6Access().getCastKeyword_3_3_1_0_1());
            	              										
            	            }

            	            }


            	            }
            	            break;
            	        case 2 :
            	            // InternalMcmodel.g:8432:10: ( ( (lv_castDefined_35_0= 'cast' ) ) ( (otherlv_36= '!=' ( ( (lv_cast_37_0= 'false' ) ) | otherlv_38= 'true' ) ) | ( (otherlv_39= '=' | otherlv_40= '==' ) ( ( (lv_cast_41_0= 'true' ) ) | otherlv_42= 'false' ) ) ) )
            	            {
            	            // InternalMcmodel.g:8432:10: ( ( (lv_castDefined_35_0= 'cast' ) ) ( (otherlv_36= '!=' ( ( (lv_cast_37_0= 'false' ) ) | otherlv_38= 'true' ) ) | ( (otherlv_39= '=' | otherlv_40= '==' ) ( ( (lv_cast_41_0= 'true' ) ) | otherlv_42= 'false' ) ) ) )
            	            // InternalMcmodel.g:8433:11: ( (lv_castDefined_35_0= 'cast' ) ) ( (otherlv_36= '!=' ( ( (lv_cast_37_0= 'false' ) ) | otherlv_38= 'true' ) ) | ( (otherlv_39= '=' | otherlv_40= '==' ) ( ( (lv_cast_41_0= 'true' ) ) | otherlv_42= 'false' ) ) )
            	            {
            	            // InternalMcmodel.g:8433:11: ( (lv_castDefined_35_0= 'cast' ) )
            	            // InternalMcmodel.g:8434:12: (lv_castDefined_35_0= 'cast' )
            	            {
            	            // InternalMcmodel.g:8434:12: (lv_castDefined_35_0= 'cast' )
            	            // InternalMcmodel.g:8435:13: lv_castDefined_35_0= 'cast'
            	            {
            	            lv_castDefined_35_0=(Token)match(input,64,FOLLOW_40); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              													newLeafNode(lv_castDefined_35_0, grammarAccess.getOverridePredicate_6Access().getCastDefinedCastKeyword_3_3_1_1_0_0());
            	              												
            	            }
            	            if ( state.backtracking==0 ) {

            	              													if (current==null) {
            	              														current = createModelElement(grammarAccess.getOverridePredicate_6Rule());
            	              													}
            	              													setWithLastConsumed(current, "castDefined", true, "cast");
            	              												
            	            }

            	            }


            	            }

            	            // InternalMcmodel.g:8447:11: ( (otherlv_36= '!=' ( ( (lv_cast_37_0= 'false' ) ) | otherlv_38= 'true' ) ) | ( (otherlv_39= '=' | otherlv_40= '==' ) ( ( (lv_cast_41_0= 'true' ) ) | otherlv_42= 'false' ) ) )
            	            int alt247=2;
            	            int LA247_0 = input.LA(1);

            	            if ( (LA247_0==62) ) {
            	                alt247=1;
            	            }
            	            else if ( (LA247_0==18||LA247_0==58) ) {
            	                alt247=2;
            	            }
            	            else {
            	                if (state.backtracking>0) {state.failed=true; return current;}
            	                NoViableAltException nvae =
            	                    new NoViableAltException("", 247, 0, input);

            	                throw nvae;
            	            }
            	            switch (alt247) {
            	                case 1 :
            	                    // InternalMcmodel.g:8448:12: (otherlv_36= '!=' ( ( (lv_cast_37_0= 'false' ) ) | otherlv_38= 'true' ) )
            	                    {
            	                    // InternalMcmodel.g:8448:12: (otherlv_36= '!=' ( ( (lv_cast_37_0= 'false' ) ) | otherlv_38= 'true' ) )
            	                    // InternalMcmodel.g:8449:13: otherlv_36= '!=' ( ( (lv_cast_37_0= 'false' ) ) | otherlv_38= 'true' )
            	                    {
            	                    otherlv_36=(Token)match(input,62,FOLLOW_7); if (state.failed) return current;
            	                    if ( state.backtracking==0 ) {

            	                      													newLeafNode(otherlv_36, grammarAccess.getOverridePredicate_6Access().getExclamationMarkEqualsSignKeyword_3_3_1_1_1_0_0());
            	                      												
            	                    }
            	                    // InternalMcmodel.g:8453:13: ( ( (lv_cast_37_0= 'false' ) ) | otherlv_38= 'true' )
            	                    int alt244=2;
            	                    int LA244_0 = input.LA(1);

            	                    if ( (LA244_0==21) ) {
            	                        alt244=1;
            	                    }
            	                    else if ( (LA244_0==20) ) {
            	                        alt244=2;
            	                    }
            	                    else {
            	                        if (state.backtracking>0) {state.failed=true; return current;}
            	                        NoViableAltException nvae =
            	                            new NoViableAltException("", 244, 0, input);

            	                        throw nvae;
            	                    }
            	                    switch (alt244) {
            	                        case 1 :
            	                            // InternalMcmodel.g:8454:14: ( (lv_cast_37_0= 'false' ) )
            	                            {
            	                            // InternalMcmodel.g:8454:14: ( (lv_cast_37_0= 'false' ) )
            	                            // InternalMcmodel.g:8455:15: (lv_cast_37_0= 'false' )
            	                            {
            	                            // InternalMcmodel.g:8455:15: (lv_cast_37_0= 'false' )
            	                            // InternalMcmodel.g:8456:16: lv_cast_37_0= 'false'
            	                            {
            	                            lv_cast_37_0=(Token)match(input,21,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              																newLeafNode(lv_cast_37_0, grammarAccess.getOverridePredicate_6Access().getCastFalseKeyword_3_3_1_1_1_0_1_0_0());
            	                              															
            	                            }
            	                            if ( state.backtracking==0 ) {

            	                              																if (current==null) {
            	                              																	current = createModelElement(grammarAccess.getOverridePredicate_6Rule());
            	                              																}
            	                              																setWithLastConsumed(current, "cast", true, "false");
            	                              															
            	                            }

            	                            }


            	                            }


            	                            }
            	                            break;
            	                        case 2 :
            	                            // InternalMcmodel.g:8469:14: otherlv_38= 'true'
            	                            {
            	                            otherlv_38=(Token)match(input,20,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_38, grammarAccess.getOverridePredicate_6Access().getTrueKeyword_3_3_1_1_1_0_1_1());
            	                              													
            	                            }

            	                            }
            	                            break;

            	                    }


            	                    }


            	                    }
            	                    break;
            	                case 2 :
            	                    // InternalMcmodel.g:8476:12: ( (otherlv_39= '=' | otherlv_40= '==' ) ( ( (lv_cast_41_0= 'true' ) ) | otherlv_42= 'false' ) )
            	                    {
            	                    // InternalMcmodel.g:8476:12: ( (otherlv_39= '=' | otherlv_40= '==' ) ( ( (lv_cast_41_0= 'true' ) ) | otherlv_42= 'false' ) )
            	                    // InternalMcmodel.g:8477:13: (otherlv_39= '=' | otherlv_40= '==' ) ( ( (lv_cast_41_0= 'true' ) ) | otherlv_42= 'false' )
            	                    {
            	                    // InternalMcmodel.g:8477:13: (otherlv_39= '=' | otherlv_40= '==' )
            	                    int alt245=2;
            	                    int LA245_0 = input.LA(1);

            	                    if ( (LA245_0==18) ) {
            	                        alt245=1;
            	                    }
            	                    else if ( (LA245_0==58) ) {
            	                        alt245=2;
            	                    }
            	                    else {
            	                        if (state.backtracking>0) {state.failed=true; return current;}
            	                        NoViableAltException nvae =
            	                            new NoViableAltException("", 245, 0, input);

            	                        throw nvae;
            	                    }
            	                    switch (alt245) {
            	                        case 1 :
            	                            // InternalMcmodel.g:8478:14: otherlv_39= '='
            	                            {
            	                            otherlv_39=(Token)match(input,18,FOLLOW_7); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_39, grammarAccess.getOverridePredicate_6Access().getEqualsSignKeyword_3_3_1_1_1_1_0_0());
            	                              													
            	                            }

            	                            }
            	                            break;
            	                        case 2 :
            	                            // InternalMcmodel.g:8483:14: otherlv_40= '=='
            	                            {
            	                            otherlv_40=(Token)match(input,58,FOLLOW_7); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_40, grammarAccess.getOverridePredicate_6Access().getEqualsSignEqualsSignKeyword_3_3_1_1_1_1_0_1());
            	                              													
            	                            }

            	                            }
            	                            break;

            	                    }

            	                    // InternalMcmodel.g:8488:13: ( ( (lv_cast_41_0= 'true' ) ) | otherlv_42= 'false' )
            	                    int alt246=2;
            	                    int LA246_0 = input.LA(1);

            	                    if ( (LA246_0==20) ) {
            	                        alt246=1;
            	                    }
            	                    else if ( (LA246_0==21) ) {
            	                        alt246=2;
            	                    }
            	                    else {
            	                        if (state.backtracking>0) {state.failed=true; return current;}
            	                        NoViableAltException nvae =
            	                            new NoViableAltException("", 246, 0, input);

            	                        throw nvae;
            	                    }
            	                    switch (alt246) {
            	                        case 1 :
            	                            // InternalMcmodel.g:8489:14: ( (lv_cast_41_0= 'true' ) )
            	                            {
            	                            // InternalMcmodel.g:8489:14: ( (lv_cast_41_0= 'true' ) )
            	                            // InternalMcmodel.g:8490:15: (lv_cast_41_0= 'true' )
            	                            {
            	                            // InternalMcmodel.g:8490:15: (lv_cast_41_0= 'true' )
            	                            // InternalMcmodel.g:8491:16: lv_cast_41_0= 'true'
            	                            {
            	                            lv_cast_41_0=(Token)match(input,20,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              																newLeafNode(lv_cast_41_0, grammarAccess.getOverridePredicate_6Access().getCastTrueKeyword_3_3_1_1_1_1_1_0_0());
            	                              															
            	                            }
            	                            if ( state.backtracking==0 ) {

            	                              																if (current==null) {
            	                              																	current = createModelElement(grammarAccess.getOverridePredicate_6Rule());
            	                              																}
            	                              																setWithLastConsumed(current, "cast", true, "true");
            	                              															
            	                            }

            	                            }


            	                            }


            	                            }
            	                            break;
            	                        case 2 :
            	                            // InternalMcmodel.g:8504:14: otherlv_42= 'false'
            	                            {
            	                            otherlv_42=(Token)match(input,21,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_42, grammarAccess.getOverridePredicate_6Access().getFalseKeyword_3_3_1_1_1_1_1_1());
            	                              													
            	                            }

            	                            }
            	                            break;

            	                    }


            	                    }


            	                    }
            	                    break;

            	            }


            	            }


            	            }
            	            break;

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getOverridePredicate_6Access().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 5 :
            	    // InternalMcmodel.g:8519:4: ({...}? => ( ({...}? => (otherlv_43= '&' ( (lv_cooldownDefined_44_0= 'cooldown' ) ) (otherlv_45= '=' | otherlv_46= '==' ) ( (lv_cooldown_47_0= RULE_PERCENTAGE ) ) ) ) ) )
            	    {
            	    // InternalMcmodel.g:8519:4: ({...}? => ( ({...}? => (otherlv_43= '&' ( (lv_cooldownDefined_44_0= 'cooldown' ) ) (otherlv_45= '=' | otherlv_46= '==' ) ( (lv_cooldown_47_0= RULE_PERCENTAGE ) ) ) ) ) )
            	    // InternalMcmodel.g:8520:5: {...}? => ( ({...}? => (otherlv_43= '&' ( (lv_cooldownDefined_44_0= 'cooldown' ) ) (otherlv_45= '=' | otherlv_46= '==' ) ( (lv_cooldown_47_0= RULE_PERCENTAGE ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_6Access().getUnorderedGroup_3(), 4) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_6", "getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_6Access().getUnorderedGroup_3(), 4)");
            	    }
            	    // InternalMcmodel.g:8520:116: ( ({...}? => (otherlv_43= '&' ( (lv_cooldownDefined_44_0= 'cooldown' ) ) (otherlv_45= '=' | otherlv_46= '==' ) ( (lv_cooldown_47_0= RULE_PERCENTAGE ) ) ) ) )
            	    // InternalMcmodel.g:8521:6: ({...}? => (otherlv_43= '&' ( (lv_cooldownDefined_44_0= 'cooldown' ) ) (otherlv_45= '=' | otherlv_46= '==' ) ( (lv_cooldown_47_0= RULE_PERCENTAGE ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getOverridePredicate_6Access().getUnorderedGroup_3(), 4);
            	    // InternalMcmodel.g:8524:9: ({...}? => (otherlv_43= '&' ( (lv_cooldownDefined_44_0= 'cooldown' ) ) (otherlv_45= '=' | otherlv_46= '==' ) ( (lv_cooldown_47_0= RULE_PERCENTAGE ) ) ) )
            	    // InternalMcmodel.g:8524:10: {...}? => (otherlv_43= '&' ( (lv_cooldownDefined_44_0= 'cooldown' ) ) (otherlv_45= '=' | otherlv_46= '==' ) ( (lv_cooldown_47_0= RULE_PERCENTAGE ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_6", "true");
            	    }
            	    // InternalMcmodel.g:8524:19: (otherlv_43= '&' ( (lv_cooldownDefined_44_0= 'cooldown' ) ) (otherlv_45= '=' | otherlv_46= '==' ) ( (lv_cooldown_47_0= RULE_PERCENTAGE ) ) )
            	    // InternalMcmodel.g:8524:20: otherlv_43= '&' ( (lv_cooldownDefined_44_0= 'cooldown' ) ) (otherlv_45= '=' | otherlv_46= '==' ) ( (lv_cooldown_47_0= RULE_PERCENTAGE ) )
            	    {
            	    otherlv_43=(Token)match(input,59,FOLLOW_45); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_43, grammarAccess.getOverridePredicate_6Access().getAmpersandKeyword_3_4_0());
            	      								
            	    }
            	    // InternalMcmodel.g:8528:9: ( (lv_cooldownDefined_44_0= 'cooldown' ) )
            	    // InternalMcmodel.g:8529:10: (lv_cooldownDefined_44_0= 'cooldown' )
            	    {
            	    // InternalMcmodel.g:8529:10: (lv_cooldownDefined_44_0= 'cooldown' )
            	    // InternalMcmodel.g:8530:11: lv_cooldownDefined_44_0= 'cooldown'
            	    {
            	    lv_cooldownDefined_44_0=(Token)match(input,65,FOLLOW_35); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											newLeafNode(lv_cooldownDefined_44_0, grammarAccess.getOverridePredicate_6Access().getCooldownDefinedCooldownKeyword_3_4_1_0());
            	      										
            	    }
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElement(grammarAccess.getOverridePredicate_6Rule());
            	      											}
            	      											setWithLastConsumed(current, "cooldownDefined", true, "cooldown");
            	      										
            	    }

            	    }


            	    }

            	    // InternalMcmodel.g:8542:9: (otherlv_45= '=' | otherlv_46= '==' )
            	    int alt249=2;
            	    int LA249_0 = input.LA(1);

            	    if ( (LA249_0==18) ) {
            	        alt249=1;
            	    }
            	    else if ( (LA249_0==58) ) {
            	        alt249=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 249, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt249) {
            	        case 1 :
            	            // InternalMcmodel.g:8543:10: otherlv_45= '='
            	            {
            	            otherlv_45=(Token)match(input,18,FOLLOW_36); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(otherlv_45, grammarAccess.getOverridePredicate_6Access().getEqualsSignKeyword_3_4_2_0());
            	              									
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalMcmodel.g:8548:10: otherlv_46= '=='
            	            {
            	            otherlv_46=(Token)match(input,58,FOLLOW_36); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(otherlv_46, grammarAccess.getOverridePredicate_6Access().getEqualsSignEqualsSignKeyword_3_4_2_1());
            	              									
            	            }

            	            }
            	            break;

            	    }

            	    // InternalMcmodel.g:8553:9: ( (lv_cooldown_47_0= RULE_PERCENTAGE ) )
            	    // InternalMcmodel.g:8554:10: (lv_cooldown_47_0= RULE_PERCENTAGE )
            	    {
            	    // InternalMcmodel.g:8554:10: (lv_cooldown_47_0= RULE_PERCENTAGE )
            	    // InternalMcmodel.g:8555:11: lv_cooldown_47_0= RULE_PERCENTAGE
            	    {
            	    lv_cooldown_47_0=(Token)match(input,RULE_PERCENTAGE,FOLLOW_37); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											newLeafNode(lv_cooldown_47_0, grammarAccess.getOverridePredicate_6Access().getCooldownPERCENTAGETerminalRuleCall_3_4_3_0());
            	      										
            	    }
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElement(grammarAccess.getOverridePredicate_6Rule());
            	      											}
            	      											setWithLastConsumed(
            	      												current,
            	      												"cooldown",
            	      												lv_cooldown_47_0,
            	      												"com.raptor.mcmodel.Mcmodel.PERCENTAGE");
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getOverridePredicate_6Access().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 6 :
            	    // InternalMcmodel.g:8577:4: ({...}? => ( ({...}? => (otherlv_48= '&' ( ( ( (lv_damagedDefined_49_0= '!' ) ) otherlv_50= 'damaged' ) | ( ( (lv_damagedDefined_51_0= 'damaged' ) ) ( (otherlv_52= '!=' ( ( (lv_damaged_53_0= 'false' ) ) | otherlv_54= 'true' ) ) | ( (otherlv_55= '=' | otherlv_56= '==' ) ( ( (lv_damaged_57_0= 'true' ) ) | otherlv_58= 'false' ) ) ) ) ) ) ) ) )
            	    {
            	    // InternalMcmodel.g:8577:4: ({...}? => ( ({...}? => (otherlv_48= '&' ( ( ( (lv_damagedDefined_49_0= '!' ) ) otherlv_50= 'damaged' ) | ( ( (lv_damagedDefined_51_0= 'damaged' ) ) ( (otherlv_52= '!=' ( ( (lv_damaged_53_0= 'false' ) ) | otherlv_54= 'true' ) ) | ( (otherlv_55= '=' | otherlv_56= '==' ) ( ( (lv_damaged_57_0= 'true' ) ) | otherlv_58= 'false' ) ) ) ) ) ) ) ) )
            	    // InternalMcmodel.g:8578:5: {...}? => ( ({...}? => (otherlv_48= '&' ( ( ( (lv_damagedDefined_49_0= '!' ) ) otherlv_50= 'damaged' ) | ( ( (lv_damagedDefined_51_0= 'damaged' ) ) ( (otherlv_52= '!=' ( ( (lv_damaged_53_0= 'false' ) ) | otherlv_54= 'true' ) ) | ( (otherlv_55= '=' | otherlv_56= '==' ) ( ( (lv_damaged_57_0= 'true' ) ) | otherlv_58= 'false' ) ) ) ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_6Access().getUnorderedGroup_3(), 5) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_6", "getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_6Access().getUnorderedGroup_3(), 5)");
            	    }
            	    // InternalMcmodel.g:8578:116: ( ({...}? => (otherlv_48= '&' ( ( ( (lv_damagedDefined_49_0= '!' ) ) otherlv_50= 'damaged' ) | ( ( (lv_damagedDefined_51_0= 'damaged' ) ) ( (otherlv_52= '!=' ( ( (lv_damaged_53_0= 'false' ) ) | otherlv_54= 'true' ) ) | ( (otherlv_55= '=' | otherlv_56= '==' ) ( ( (lv_damaged_57_0= 'true' ) ) | otherlv_58= 'false' ) ) ) ) ) ) ) )
            	    // InternalMcmodel.g:8579:6: ({...}? => (otherlv_48= '&' ( ( ( (lv_damagedDefined_49_0= '!' ) ) otherlv_50= 'damaged' ) | ( ( (lv_damagedDefined_51_0= 'damaged' ) ) ( (otherlv_52= '!=' ( ( (lv_damaged_53_0= 'false' ) ) | otherlv_54= 'true' ) ) | ( (otherlv_55= '=' | otherlv_56= '==' ) ( ( (lv_damaged_57_0= 'true' ) ) | otherlv_58= 'false' ) ) ) ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getOverridePredicate_6Access().getUnorderedGroup_3(), 5);
            	    // InternalMcmodel.g:8582:9: ({...}? => (otherlv_48= '&' ( ( ( (lv_damagedDefined_49_0= '!' ) ) otherlv_50= 'damaged' ) | ( ( (lv_damagedDefined_51_0= 'damaged' ) ) ( (otherlv_52= '!=' ( ( (lv_damaged_53_0= 'false' ) ) | otherlv_54= 'true' ) ) | ( (otherlv_55= '=' | otherlv_56= '==' ) ( ( (lv_damaged_57_0= 'true' ) ) | otherlv_58= 'false' ) ) ) ) ) ) )
            	    // InternalMcmodel.g:8582:10: {...}? => (otherlv_48= '&' ( ( ( (lv_damagedDefined_49_0= '!' ) ) otherlv_50= 'damaged' ) | ( ( (lv_damagedDefined_51_0= 'damaged' ) ) ( (otherlv_52= '!=' ( ( (lv_damaged_53_0= 'false' ) ) | otherlv_54= 'true' ) ) | ( (otherlv_55= '=' | otherlv_56= '==' ) ( ( (lv_damaged_57_0= 'true' ) ) | otherlv_58= 'false' ) ) ) ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_6", "true");
            	    }
            	    // InternalMcmodel.g:8582:19: (otherlv_48= '&' ( ( ( (lv_damagedDefined_49_0= '!' ) ) otherlv_50= 'damaged' ) | ( ( (lv_damagedDefined_51_0= 'damaged' ) ) ( (otherlv_52= '!=' ( ( (lv_damaged_53_0= 'false' ) ) | otherlv_54= 'true' ) ) | ( (otherlv_55= '=' | otherlv_56= '==' ) ( ( (lv_damaged_57_0= 'true' ) ) | otherlv_58= 'false' ) ) ) ) ) )
            	    // InternalMcmodel.g:8582:20: otherlv_48= '&' ( ( ( (lv_damagedDefined_49_0= '!' ) ) otherlv_50= 'damaged' ) | ( ( (lv_damagedDefined_51_0= 'damaged' ) ) ( (otherlv_52= '!=' ( ( (lv_damaged_53_0= 'false' ) ) | otherlv_54= 'true' ) ) | ( (otherlv_55= '=' | otherlv_56= '==' ) ( ( (lv_damaged_57_0= 'true' ) ) | otherlv_58= 'false' ) ) ) ) )
            	    {
            	    otherlv_48=(Token)match(input,59,FOLLOW_47); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_48, grammarAccess.getOverridePredicate_6Access().getAmpersandKeyword_3_5_0());
            	      								
            	    }
            	    // InternalMcmodel.g:8586:9: ( ( ( (lv_damagedDefined_49_0= '!' ) ) otherlv_50= 'damaged' ) | ( ( (lv_damagedDefined_51_0= 'damaged' ) ) ( (otherlv_52= '!=' ( ( (lv_damaged_53_0= 'false' ) ) | otherlv_54= 'true' ) ) | ( (otherlv_55= '=' | otherlv_56= '==' ) ( ( (lv_damaged_57_0= 'true' ) ) | otherlv_58= 'false' ) ) ) ) )
            	    int alt254=2;
            	    int LA254_0 = input.LA(1);

            	    if ( (LA254_0==60) ) {
            	        alt254=1;
            	    }
            	    else if ( (LA254_0==67) ) {
            	        alt254=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 254, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt254) {
            	        case 1 :
            	            // InternalMcmodel.g:8587:10: ( ( (lv_damagedDefined_49_0= '!' ) ) otherlv_50= 'damaged' )
            	            {
            	            // InternalMcmodel.g:8587:10: ( ( (lv_damagedDefined_49_0= '!' ) ) otherlv_50= 'damaged' )
            	            // InternalMcmodel.g:8588:11: ( (lv_damagedDefined_49_0= '!' ) ) otherlv_50= 'damaged'
            	            {
            	            // InternalMcmodel.g:8588:11: ( (lv_damagedDefined_49_0= '!' ) )
            	            // InternalMcmodel.g:8589:12: (lv_damagedDefined_49_0= '!' )
            	            {
            	            // InternalMcmodel.g:8589:12: (lv_damagedDefined_49_0= '!' )
            	            // InternalMcmodel.g:8590:13: lv_damagedDefined_49_0= '!'
            	            {
            	            lv_damagedDefined_49_0=(Token)match(input,60,FOLLOW_48); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              													newLeafNode(lv_damagedDefined_49_0, grammarAccess.getOverridePredicate_6Access().getDamagedDefinedExclamationMarkKeyword_3_5_1_0_0_0());
            	              												
            	            }
            	            if ( state.backtracking==0 ) {

            	              													if (current==null) {
            	              														current = createModelElement(grammarAccess.getOverridePredicate_6Rule());
            	              													}
            	              													setWithLastConsumed(current, "damagedDefined", true, "!");
            	              												
            	            }

            	            }


            	            }

            	            otherlv_50=(Token)match(input,67,FOLLOW_37); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              											newLeafNode(otherlv_50, grammarAccess.getOverridePredicate_6Access().getDamagedKeyword_3_5_1_0_1());
            	              										
            	            }

            	            }


            	            }
            	            break;
            	        case 2 :
            	            // InternalMcmodel.g:8608:10: ( ( (lv_damagedDefined_51_0= 'damaged' ) ) ( (otherlv_52= '!=' ( ( (lv_damaged_53_0= 'false' ) ) | otherlv_54= 'true' ) ) | ( (otherlv_55= '=' | otherlv_56= '==' ) ( ( (lv_damaged_57_0= 'true' ) ) | otherlv_58= 'false' ) ) ) )
            	            {
            	            // InternalMcmodel.g:8608:10: ( ( (lv_damagedDefined_51_0= 'damaged' ) ) ( (otherlv_52= '!=' ( ( (lv_damaged_53_0= 'false' ) ) | otherlv_54= 'true' ) ) | ( (otherlv_55= '=' | otherlv_56= '==' ) ( ( (lv_damaged_57_0= 'true' ) ) | otherlv_58= 'false' ) ) ) )
            	            // InternalMcmodel.g:8609:11: ( (lv_damagedDefined_51_0= 'damaged' ) ) ( (otherlv_52= '!=' ( ( (lv_damaged_53_0= 'false' ) ) | otherlv_54= 'true' ) ) | ( (otherlv_55= '=' | otherlv_56= '==' ) ( ( (lv_damaged_57_0= 'true' ) ) | otherlv_58= 'false' ) ) )
            	            {
            	            // InternalMcmodel.g:8609:11: ( (lv_damagedDefined_51_0= 'damaged' ) )
            	            // InternalMcmodel.g:8610:12: (lv_damagedDefined_51_0= 'damaged' )
            	            {
            	            // InternalMcmodel.g:8610:12: (lv_damagedDefined_51_0= 'damaged' )
            	            // InternalMcmodel.g:8611:13: lv_damagedDefined_51_0= 'damaged'
            	            {
            	            lv_damagedDefined_51_0=(Token)match(input,67,FOLLOW_40); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              													newLeafNode(lv_damagedDefined_51_0, grammarAccess.getOverridePredicate_6Access().getDamagedDefinedDamagedKeyword_3_5_1_1_0_0());
            	              												
            	            }
            	            if ( state.backtracking==0 ) {

            	              													if (current==null) {
            	              														current = createModelElement(grammarAccess.getOverridePredicate_6Rule());
            	              													}
            	              													setWithLastConsumed(current, "damagedDefined", true, "damaged");
            	              												
            	            }

            	            }


            	            }

            	            // InternalMcmodel.g:8623:11: ( (otherlv_52= '!=' ( ( (lv_damaged_53_0= 'false' ) ) | otherlv_54= 'true' ) ) | ( (otherlv_55= '=' | otherlv_56= '==' ) ( ( (lv_damaged_57_0= 'true' ) ) | otherlv_58= 'false' ) ) )
            	            int alt253=2;
            	            int LA253_0 = input.LA(1);

            	            if ( (LA253_0==62) ) {
            	                alt253=1;
            	            }
            	            else if ( (LA253_0==18||LA253_0==58) ) {
            	                alt253=2;
            	            }
            	            else {
            	                if (state.backtracking>0) {state.failed=true; return current;}
            	                NoViableAltException nvae =
            	                    new NoViableAltException("", 253, 0, input);

            	                throw nvae;
            	            }
            	            switch (alt253) {
            	                case 1 :
            	                    // InternalMcmodel.g:8624:12: (otherlv_52= '!=' ( ( (lv_damaged_53_0= 'false' ) ) | otherlv_54= 'true' ) )
            	                    {
            	                    // InternalMcmodel.g:8624:12: (otherlv_52= '!=' ( ( (lv_damaged_53_0= 'false' ) ) | otherlv_54= 'true' ) )
            	                    // InternalMcmodel.g:8625:13: otherlv_52= '!=' ( ( (lv_damaged_53_0= 'false' ) ) | otherlv_54= 'true' )
            	                    {
            	                    otherlv_52=(Token)match(input,62,FOLLOW_7); if (state.failed) return current;
            	                    if ( state.backtracking==0 ) {

            	                      													newLeafNode(otherlv_52, grammarAccess.getOverridePredicate_6Access().getExclamationMarkEqualsSignKeyword_3_5_1_1_1_0_0());
            	                      												
            	                    }
            	                    // InternalMcmodel.g:8629:13: ( ( (lv_damaged_53_0= 'false' ) ) | otherlv_54= 'true' )
            	                    int alt250=2;
            	                    int LA250_0 = input.LA(1);

            	                    if ( (LA250_0==21) ) {
            	                        alt250=1;
            	                    }
            	                    else if ( (LA250_0==20) ) {
            	                        alt250=2;
            	                    }
            	                    else {
            	                        if (state.backtracking>0) {state.failed=true; return current;}
            	                        NoViableAltException nvae =
            	                            new NoViableAltException("", 250, 0, input);

            	                        throw nvae;
            	                    }
            	                    switch (alt250) {
            	                        case 1 :
            	                            // InternalMcmodel.g:8630:14: ( (lv_damaged_53_0= 'false' ) )
            	                            {
            	                            // InternalMcmodel.g:8630:14: ( (lv_damaged_53_0= 'false' ) )
            	                            // InternalMcmodel.g:8631:15: (lv_damaged_53_0= 'false' )
            	                            {
            	                            // InternalMcmodel.g:8631:15: (lv_damaged_53_0= 'false' )
            	                            // InternalMcmodel.g:8632:16: lv_damaged_53_0= 'false'
            	                            {
            	                            lv_damaged_53_0=(Token)match(input,21,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              																newLeafNode(lv_damaged_53_0, grammarAccess.getOverridePredicate_6Access().getDamagedFalseKeyword_3_5_1_1_1_0_1_0_0());
            	                              															
            	                            }
            	                            if ( state.backtracking==0 ) {

            	                              																if (current==null) {
            	                              																	current = createModelElement(grammarAccess.getOverridePredicate_6Rule());
            	                              																}
            	                              																setWithLastConsumed(current, "damaged", true, "false");
            	                              															
            	                            }

            	                            }


            	                            }


            	                            }
            	                            break;
            	                        case 2 :
            	                            // InternalMcmodel.g:8645:14: otherlv_54= 'true'
            	                            {
            	                            otherlv_54=(Token)match(input,20,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_54, grammarAccess.getOverridePredicate_6Access().getTrueKeyword_3_5_1_1_1_0_1_1());
            	                              													
            	                            }

            	                            }
            	                            break;

            	                    }


            	                    }


            	                    }
            	                    break;
            	                case 2 :
            	                    // InternalMcmodel.g:8652:12: ( (otherlv_55= '=' | otherlv_56= '==' ) ( ( (lv_damaged_57_0= 'true' ) ) | otherlv_58= 'false' ) )
            	                    {
            	                    // InternalMcmodel.g:8652:12: ( (otherlv_55= '=' | otherlv_56= '==' ) ( ( (lv_damaged_57_0= 'true' ) ) | otherlv_58= 'false' ) )
            	                    // InternalMcmodel.g:8653:13: (otherlv_55= '=' | otherlv_56= '==' ) ( ( (lv_damaged_57_0= 'true' ) ) | otherlv_58= 'false' )
            	                    {
            	                    // InternalMcmodel.g:8653:13: (otherlv_55= '=' | otherlv_56= '==' )
            	                    int alt251=2;
            	                    int LA251_0 = input.LA(1);

            	                    if ( (LA251_0==18) ) {
            	                        alt251=1;
            	                    }
            	                    else if ( (LA251_0==58) ) {
            	                        alt251=2;
            	                    }
            	                    else {
            	                        if (state.backtracking>0) {state.failed=true; return current;}
            	                        NoViableAltException nvae =
            	                            new NoViableAltException("", 251, 0, input);

            	                        throw nvae;
            	                    }
            	                    switch (alt251) {
            	                        case 1 :
            	                            // InternalMcmodel.g:8654:14: otherlv_55= '='
            	                            {
            	                            otherlv_55=(Token)match(input,18,FOLLOW_7); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_55, grammarAccess.getOverridePredicate_6Access().getEqualsSignKeyword_3_5_1_1_1_1_0_0());
            	                              													
            	                            }

            	                            }
            	                            break;
            	                        case 2 :
            	                            // InternalMcmodel.g:8659:14: otherlv_56= '=='
            	                            {
            	                            otherlv_56=(Token)match(input,58,FOLLOW_7); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_56, grammarAccess.getOverridePredicate_6Access().getEqualsSignEqualsSignKeyword_3_5_1_1_1_1_0_1());
            	                              													
            	                            }

            	                            }
            	                            break;

            	                    }

            	                    // InternalMcmodel.g:8664:13: ( ( (lv_damaged_57_0= 'true' ) ) | otherlv_58= 'false' )
            	                    int alt252=2;
            	                    int LA252_0 = input.LA(1);

            	                    if ( (LA252_0==20) ) {
            	                        alt252=1;
            	                    }
            	                    else if ( (LA252_0==21) ) {
            	                        alt252=2;
            	                    }
            	                    else {
            	                        if (state.backtracking>0) {state.failed=true; return current;}
            	                        NoViableAltException nvae =
            	                            new NoViableAltException("", 252, 0, input);

            	                        throw nvae;
            	                    }
            	                    switch (alt252) {
            	                        case 1 :
            	                            // InternalMcmodel.g:8665:14: ( (lv_damaged_57_0= 'true' ) )
            	                            {
            	                            // InternalMcmodel.g:8665:14: ( (lv_damaged_57_0= 'true' ) )
            	                            // InternalMcmodel.g:8666:15: (lv_damaged_57_0= 'true' )
            	                            {
            	                            // InternalMcmodel.g:8666:15: (lv_damaged_57_0= 'true' )
            	                            // InternalMcmodel.g:8667:16: lv_damaged_57_0= 'true'
            	                            {
            	                            lv_damaged_57_0=(Token)match(input,20,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              																newLeafNode(lv_damaged_57_0, grammarAccess.getOverridePredicate_6Access().getDamagedTrueKeyword_3_5_1_1_1_1_1_0_0());
            	                              															
            	                            }
            	                            if ( state.backtracking==0 ) {

            	                              																if (current==null) {
            	                              																	current = createModelElement(grammarAccess.getOverridePredicate_6Rule());
            	                              																}
            	                              																setWithLastConsumed(current, "damaged", true, "true");
            	                              															
            	                            }

            	                            }


            	                            }


            	                            }
            	                            break;
            	                        case 2 :
            	                            // InternalMcmodel.g:8680:14: otherlv_58= 'false'
            	                            {
            	                            otherlv_58=(Token)match(input,21,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_58, grammarAccess.getOverridePredicate_6Access().getFalseKeyword_3_5_1_1_1_1_1_1());
            	                              													
            	                            }

            	                            }
            	                            break;

            	                    }


            	                    }


            	                    }
            	                    break;

            	            }


            	            }


            	            }
            	            break;

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getOverridePredicate_6Access().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 7 :
            	    // InternalMcmodel.g:8695:4: ({...}? => ( ({...}? => (otherlv_59= '&' ( ( ( (lv_lefthandedDefined_60_0= '!' ) ) otherlv_61= 'lefthanded' ) | ( ( (lv_lefthandedDefined_62_0= 'lefthanded' ) ) ( (otherlv_63= '!=' ( ( (lv_lefthanded_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_lefthanded_68_0= 'true' ) ) | otherlv_69= 'false' ) ) ) ) ) ) ) ) )
            	    {
            	    // InternalMcmodel.g:8695:4: ({...}? => ( ({...}? => (otherlv_59= '&' ( ( ( (lv_lefthandedDefined_60_0= '!' ) ) otherlv_61= 'lefthanded' ) | ( ( (lv_lefthandedDefined_62_0= 'lefthanded' ) ) ( (otherlv_63= '!=' ( ( (lv_lefthanded_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_lefthanded_68_0= 'true' ) ) | otherlv_69= 'false' ) ) ) ) ) ) ) ) )
            	    // InternalMcmodel.g:8696:5: {...}? => ( ({...}? => (otherlv_59= '&' ( ( ( (lv_lefthandedDefined_60_0= '!' ) ) otherlv_61= 'lefthanded' ) | ( ( (lv_lefthandedDefined_62_0= 'lefthanded' ) ) ( (otherlv_63= '!=' ( ( (lv_lefthanded_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_lefthanded_68_0= 'true' ) ) | otherlv_69= 'false' ) ) ) ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_6Access().getUnorderedGroup_3(), 6) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_6", "getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_6Access().getUnorderedGroup_3(), 6)");
            	    }
            	    // InternalMcmodel.g:8696:116: ( ({...}? => (otherlv_59= '&' ( ( ( (lv_lefthandedDefined_60_0= '!' ) ) otherlv_61= 'lefthanded' ) | ( ( (lv_lefthandedDefined_62_0= 'lefthanded' ) ) ( (otherlv_63= '!=' ( ( (lv_lefthanded_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_lefthanded_68_0= 'true' ) ) | otherlv_69= 'false' ) ) ) ) ) ) ) )
            	    // InternalMcmodel.g:8697:6: ({...}? => (otherlv_59= '&' ( ( ( (lv_lefthandedDefined_60_0= '!' ) ) otherlv_61= 'lefthanded' ) | ( ( (lv_lefthandedDefined_62_0= 'lefthanded' ) ) ( (otherlv_63= '!=' ( ( (lv_lefthanded_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_lefthanded_68_0= 'true' ) ) | otherlv_69= 'false' ) ) ) ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getOverridePredicate_6Access().getUnorderedGroup_3(), 6);
            	    // InternalMcmodel.g:8700:9: ({...}? => (otherlv_59= '&' ( ( ( (lv_lefthandedDefined_60_0= '!' ) ) otherlv_61= 'lefthanded' ) | ( ( (lv_lefthandedDefined_62_0= 'lefthanded' ) ) ( (otherlv_63= '!=' ( ( (lv_lefthanded_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_lefthanded_68_0= 'true' ) ) | otherlv_69= 'false' ) ) ) ) ) ) )
            	    // InternalMcmodel.g:8700:10: {...}? => (otherlv_59= '&' ( ( ( (lv_lefthandedDefined_60_0= '!' ) ) otherlv_61= 'lefthanded' ) | ( ( (lv_lefthandedDefined_62_0= 'lefthanded' ) ) ( (otherlv_63= '!=' ( ( (lv_lefthanded_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_lefthanded_68_0= 'true' ) ) | otherlv_69= 'false' ) ) ) ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_6", "true");
            	    }
            	    // InternalMcmodel.g:8700:19: (otherlv_59= '&' ( ( ( (lv_lefthandedDefined_60_0= '!' ) ) otherlv_61= 'lefthanded' ) | ( ( (lv_lefthandedDefined_62_0= 'lefthanded' ) ) ( (otherlv_63= '!=' ( ( (lv_lefthanded_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_lefthanded_68_0= 'true' ) ) | otherlv_69= 'false' ) ) ) ) ) )
            	    // InternalMcmodel.g:8700:20: otherlv_59= '&' ( ( ( (lv_lefthandedDefined_60_0= '!' ) ) otherlv_61= 'lefthanded' ) | ( ( (lv_lefthandedDefined_62_0= 'lefthanded' ) ) ( (otherlv_63= '!=' ( ( (lv_lefthanded_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_lefthanded_68_0= 'true' ) ) | otherlv_69= 'false' ) ) ) ) )
            	    {
            	    otherlv_59=(Token)match(input,59,FOLLOW_49); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_59, grammarAccess.getOverridePredicate_6Access().getAmpersandKeyword_3_6_0());
            	      								
            	    }
            	    // InternalMcmodel.g:8704:9: ( ( ( (lv_lefthandedDefined_60_0= '!' ) ) otherlv_61= 'lefthanded' ) | ( ( (lv_lefthandedDefined_62_0= 'lefthanded' ) ) ( (otherlv_63= '!=' ( ( (lv_lefthanded_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_lefthanded_68_0= 'true' ) ) | otherlv_69= 'false' ) ) ) ) )
            	    int alt259=2;
            	    int LA259_0 = input.LA(1);

            	    if ( (LA259_0==60) ) {
            	        alt259=1;
            	    }
            	    else if ( (LA259_0==68) ) {
            	        alt259=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 259, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt259) {
            	        case 1 :
            	            // InternalMcmodel.g:8705:10: ( ( (lv_lefthandedDefined_60_0= '!' ) ) otherlv_61= 'lefthanded' )
            	            {
            	            // InternalMcmodel.g:8705:10: ( ( (lv_lefthandedDefined_60_0= '!' ) ) otherlv_61= 'lefthanded' )
            	            // InternalMcmodel.g:8706:11: ( (lv_lefthandedDefined_60_0= '!' ) ) otherlv_61= 'lefthanded'
            	            {
            	            // InternalMcmodel.g:8706:11: ( (lv_lefthandedDefined_60_0= '!' ) )
            	            // InternalMcmodel.g:8707:12: (lv_lefthandedDefined_60_0= '!' )
            	            {
            	            // InternalMcmodel.g:8707:12: (lv_lefthandedDefined_60_0= '!' )
            	            // InternalMcmodel.g:8708:13: lv_lefthandedDefined_60_0= '!'
            	            {
            	            lv_lefthandedDefined_60_0=(Token)match(input,60,FOLLOW_50); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              													newLeafNode(lv_lefthandedDefined_60_0, grammarAccess.getOverridePredicate_6Access().getLefthandedDefinedExclamationMarkKeyword_3_6_1_0_0_0());
            	              												
            	            }
            	            if ( state.backtracking==0 ) {

            	              													if (current==null) {
            	              														current = createModelElement(grammarAccess.getOverridePredicate_6Rule());
            	              													}
            	              													setWithLastConsumed(current, "lefthandedDefined", true, "!");
            	              												
            	            }

            	            }


            	            }

            	            otherlv_61=(Token)match(input,68,FOLLOW_37); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              											newLeafNode(otherlv_61, grammarAccess.getOverridePredicate_6Access().getLefthandedKeyword_3_6_1_0_1());
            	              										
            	            }

            	            }


            	            }
            	            break;
            	        case 2 :
            	            // InternalMcmodel.g:8726:10: ( ( (lv_lefthandedDefined_62_0= 'lefthanded' ) ) ( (otherlv_63= '!=' ( ( (lv_lefthanded_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_lefthanded_68_0= 'true' ) ) | otherlv_69= 'false' ) ) ) )
            	            {
            	            // InternalMcmodel.g:8726:10: ( ( (lv_lefthandedDefined_62_0= 'lefthanded' ) ) ( (otherlv_63= '!=' ( ( (lv_lefthanded_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_lefthanded_68_0= 'true' ) ) | otherlv_69= 'false' ) ) ) )
            	            // InternalMcmodel.g:8727:11: ( (lv_lefthandedDefined_62_0= 'lefthanded' ) ) ( (otherlv_63= '!=' ( ( (lv_lefthanded_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_lefthanded_68_0= 'true' ) ) | otherlv_69= 'false' ) ) )
            	            {
            	            // InternalMcmodel.g:8727:11: ( (lv_lefthandedDefined_62_0= 'lefthanded' ) )
            	            // InternalMcmodel.g:8728:12: (lv_lefthandedDefined_62_0= 'lefthanded' )
            	            {
            	            // InternalMcmodel.g:8728:12: (lv_lefthandedDefined_62_0= 'lefthanded' )
            	            // InternalMcmodel.g:8729:13: lv_lefthandedDefined_62_0= 'lefthanded'
            	            {
            	            lv_lefthandedDefined_62_0=(Token)match(input,68,FOLLOW_40); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              													newLeafNode(lv_lefthandedDefined_62_0, grammarAccess.getOverridePredicate_6Access().getLefthandedDefinedLefthandedKeyword_3_6_1_1_0_0());
            	              												
            	            }
            	            if ( state.backtracking==0 ) {

            	              													if (current==null) {
            	              														current = createModelElement(grammarAccess.getOverridePredicate_6Rule());
            	              													}
            	              													setWithLastConsumed(current, "lefthandedDefined", true, "lefthanded");
            	              												
            	            }

            	            }


            	            }

            	            // InternalMcmodel.g:8741:11: ( (otherlv_63= '!=' ( ( (lv_lefthanded_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_lefthanded_68_0= 'true' ) ) | otherlv_69= 'false' ) ) )
            	            int alt258=2;
            	            int LA258_0 = input.LA(1);

            	            if ( (LA258_0==62) ) {
            	                alt258=1;
            	            }
            	            else if ( (LA258_0==18||LA258_0==58) ) {
            	                alt258=2;
            	            }
            	            else {
            	                if (state.backtracking>0) {state.failed=true; return current;}
            	                NoViableAltException nvae =
            	                    new NoViableAltException("", 258, 0, input);

            	                throw nvae;
            	            }
            	            switch (alt258) {
            	                case 1 :
            	                    // InternalMcmodel.g:8742:12: (otherlv_63= '!=' ( ( (lv_lefthanded_64_0= 'false' ) ) | otherlv_65= 'true' ) )
            	                    {
            	                    // InternalMcmodel.g:8742:12: (otherlv_63= '!=' ( ( (lv_lefthanded_64_0= 'false' ) ) | otherlv_65= 'true' ) )
            	                    // InternalMcmodel.g:8743:13: otherlv_63= '!=' ( ( (lv_lefthanded_64_0= 'false' ) ) | otherlv_65= 'true' )
            	                    {
            	                    otherlv_63=(Token)match(input,62,FOLLOW_7); if (state.failed) return current;
            	                    if ( state.backtracking==0 ) {

            	                      													newLeafNode(otherlv_63, grammarAccess.getOverridePredicate_6Access().getExclamationMarkEqualsSignKeyword_3_6_1_1_1_0_0());
            	                      												
            	                    }
            	                    // InternalMcmodel.g:8747:13: ( ( (lv_lefthanded_64_0= 'false' ) ) | otherlv_65= 'true' )
            	                    int alt255=2;
            	                    int LA255_0 = input.LA(1);

            	                    if ( (LA255_0==21) ) {
            	                        alt255=1;
            	                    }
            	                    else if ( (LA255_0==20) ) {
            	                        alt255=2;
            	                    }
            	                    else {
            	                        if (state.backtracking>0) {state.failed=true; return current;}
            	                        NoViableAltException nvae =
            	                            new NoViableAltException("", 255, 0, input);

            	                        throw nvae;
            	                    }
            	                    switch (alt255) {
            	                        case 1 :
            	                            // InternalMcmodel.g:8748:14: ( (lv_lefthanded_64_0= 'false' ) )
            	                            {
            	                            // InternalMcmodel.g:8748:14: ( (lv_lefthanded_64_0= 'false' ) )
            	                            // InternalMcmodel.g:8749:15: (lv_lefthanded_64_0= 'false' )
            	                            {
            	                            // InternalMcmodel.g:8749:15: (lv_lefthanded_64_0= 'false' )
            	                            // InternalMcmodel.g:8750:16: lv_lefthanded_64_0= 'false'
            	                            {
            	                            lv_lefthanded_64_0=(Token)match(input,21,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              																newLeafNode(lv_lefthanded_64_0, grammarAccess.getOverridePredicate_6Access().getLefthandedFalseKeyword_3_6_1_1_1_0_1_0_0());
            	                              															
            	                            }
            	                            if ( state.backtracking==0 ) {

            	                              																if (current==null) {
            	                              																	current = createModelElement(grammarAccess.getOverridePredicate_6Rule());
            	                              																}
            	                              																setWithLastConsumed(current, "lefthanded", true, "false");
            	                              															
            	                            }

            	                            }


            	                            }


            	                            }
            	                            break;
            	                        case 2 :
            	                            // InternalMcmodel.g:8763:14: otherlv_65= 'true'
            	                            {
            	                            otherlv_65=(Token)match(input,20,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_65, grammarAccess.getOverridePredicate_6Access().getTrueKeyword_3_6_1_1_1_0_1_1());
            	                              													
            	                            }

            	                            }
            	                            break;

            	                    }


            	                    }


            	                    }
            	                    break;
            	                case 2 :
            	                    // InternalMcmodel.g:8770:12: ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_lefthanded_68_0= 'true' ) ) | otherlv_69= 'false' ) )
            	                    {
            	                    // InternalMcmodel.g:8770:12: ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_lefthanded_68_0= 'true' ) ) | otherlv_69= 'false' ) )
            	                    // InternalMcmodel.g:8771:13: (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_lefthanded_68_0= 'true' ) ) | otherlv_69= 'false' )
            	                    {
            	                    // InternalMcmodel.g:8771:13: (otherlv_66= '=' | otherlv_67= '==' )
            	                    int alt256=2;
            	                    int LA256_0 = input.LA(1);

            	                    if ( (LA256_0==18) ) {
            	                        alt256=1;
            	                    }
            	                    else if ( (LA256_0==58) ) {
            	                        alt256=2;
            	                    }
            	                    else {
            	                        if (state.backtracking>0) {state.failed=true; return current;}
            	                        NoViableAltException nvae =
            	                            new NoViableAltException("", 256, 0, input);

            	                        throw nvae;
            	                    }
            	                    switch (alt256) {
            	                        case 1 :
            	                            // InternalMcmodel.g:8772:14: otherlv_66= '='
            	                            {
            	                            otherlv_66=(Token)match(input,18,FOLLOW_7); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_66, grammarAccess.getOverridePredicate_6Access().getEqualsSignKeyword_3_6_1_1_1_1_0_0());
            	                              													
            	                            }

            	                            }
            	                            break;
            	                        case 2 :
            	                            // InternalMcmodel.g:8777:14: otherlv_67= '=='
            	                            {
            	                            otherlv_67=(Token)match(input,58,FOLLOW_7); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_67, grammarAccess.getOverridePredicate_6Access().getEqualsSignEqualsSignKeyword_3_6_1_1_1_1_0_1());
            	                              													
            	                            }

            	                            }
            	                            break;

            	                    }

            	                    // InternalMcmodel.g:8782:13: ( ( (lv_lefthanded_68_0= 'true' ) ) | otherlv_69= 'false' )
            	                    int alt257=2;
            	                    int LA257_0 = input.LA(1);

            	                    if ( (LA257_0==20) ) {
            	                        alt257=1;
            	                    }
            	                    else if ( (LA257_0==21) ) {
            	                        alt257=2;
            	                    }
            	                    else {
            	                        if (state.backtracking>0) {state.failed=true; return current;}
            	                        NoViableAltException nvae =
            	                            new NoViableAltException("", 257, 0, input);

            	                        throw nvae;
            	                    }
            	                    switch (alt257) {
            	                        case 1 :
            	                            // InternalMcmodel.g:8783:14: ( (lv_lefthanded_68_0= 'true' ) )
            	                            {
            	                            // InternalMcmodel.g:8783:14: ( (lv_lefthanded_68_0= 'true' ) )
            	                            // InternalMcmodel.g:8784:15: (lv_lefthanded_68_0= 'true' )
            	                            {
            	                            // InternalMcmodel.g:8784:15: (lv_lefthanded_68_0= 'true' )
            	                            // InternalMcmodel.g:8785:16: lv_lefthanded_68_0= 'true'
            	                            {
            	                            lv_lefthanded_68_0=(Token)match(input,20,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              																newLeafNode(lv_lefthanded_68_0, grammarAccess.getOverridePredicate_6Access().getLefthandedTrueKeyword_3_6_1_1_1_1_1_0_0());
            	                              															
            	                            }
            	                            if ( state.backtracking==0 ) {

            	                              																if (current==null) {
            	                              																	current = createModelElement(grammarAccess.getOverridePredicate_6Rule());
            	                              																}
            	                              																setWithLastConsumed(current, "lefthanded", true, "true");
            	                              															
            	                            }

            	                            }


            	                            }


            	                            }
            	                            break;
            	                        case 2 :
            	                            // InternalMcmodel.g:8798:14: otherlv_69= 'false'
            	                            {
            	                            otherlv_69=(Token)match(input,21,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_69, grammarAccess.getOverridePredicate_6Access().getFalseKeyword_3_6_1_1_1_1_1_1());
            	                              													
            	                            }

            	                            }
            	                            break;

            	                    }


            	                    }


            	                    }
            	                    break;

            	            }


            	            }


            	            }
            	            break;

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getOverridePredicate_6Access().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 8 :
            	    // InternalMcmodel.g:8813:4: ({...}? => ( ({...}? => (otherlv_70= '&' ( (lv_pullDefined_71_0= 'pull' ) ) (otherlv_72= '=' | otherlv_73= '==' ) ( (lv_pull_74_0= RULE_PERCENTAGE ) ) ) ) ) )
            	    {
            	    // InternalMcmodel.g:8813:4: ({...}? => ( ({...}? => (otherlv_70= '&' ( (lv_pullDefined_71_0= 'pull' ) ) (otherlv_72= '=' | otherlv_73= '==' ) ( (lv_pull_74_0= RULE_PERCENTAGE ) ) ) ) ) )
            	    // InternalMcmodel.g:8814:5: {...}? => ( ({...}? => (otherlv_70= '&' ( (lv_pullDefined_71_0= 'pull' ) ) (otherlv_72= '=' | otherlv_73= '==' ) ( (lv_pull_74_0= RULE_PERCENTAGE ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_6Access().getUnorderedGroup_3(), 7) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_6", "getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_6Access().getUnorderedGroup_3(), 7)");
            	    }
            	    // InternalMcmodel.g:8814:116: ( ({...}? => (otherlv_70= '&' ( (lv_pullDefined_71_0= 'pull' ) ) (otherlv_72= '=' | otherlv_73= '==' ) ( (lv_pull_74_0= RULE_PERCENTAGE ) ) ) ) )
            	    // InternalMcmodel.g:8815:6: ({...}? => (otherlv_70= '&' ( (lv_pullDefined_71_0= 'pull' ) ) (otherlv_72= '=' | otherlv_73= '==' ) ( (lv_pull_74_0= RULE_PERCENTAGE ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getOverridePredicate_6Access().getUnorderedGroup_3(), 7);
            	    // InternalMcmodel.g:8818:9: ({...}? => (otherlv_70= '&' ( (lv_pullDefined_71_0= 'pull' ) ) (otherlv_72= '=' | otherlv_73= '==' ) ( (lv_pull_74_0= RULE_PERCENTAGE ) ) ) )
            	    // InternalMcmodel.g:8818:10: {...}? => (otherlv_70= '&' ( (lv_pullDefined_71_0= 'pull' ) ) (otherlv_72= '=' | otherlv_73= '==' ) ( (lv_pull_74_0= RULE_PERCENTAGE ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_6", "true");
            	    }
            	    // InternalMcmodel.g:8818:19: (otherlv_70= '&' ( (lv_pullDefined_71_0= 'pull' ) ) (otherlv_72= '=' | otherlv_73= '==' ) ( (lv_pull_74_0= RULE_PERCENTAGE ) ) )
            	    // InternalMcmodel.g:8818:20: otherlv_70= '&' ( (lv_pullDefined_71_0= 'pull' ) ) (otherlv_72= '=' | otherlv_73= '==' ) ( (lv_pull_74_0= RULE_PERCENTAGE ) )
            	    {
            	    otherlv_70=(Token)match(input,59,FOLLOW_51); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_70, grammarAccess.getOverridePredicate_6Access().getAmpersandKeyword_3_7_0());
            	      								
            	    }
            	    // InternalMcmodel.g:8822:9: ( (lv_pullDefined_71_0= 'pull' ) )
            	    // InternalMcmodel.g:8823:10: (lv_pullDefined_71_0= 'pull' )
            	    {
            	    // InternalMcmodel.g:8823:10: (lv_pullDefined_71_0= 'pull' )
            	    // InternalMcmodel.g:8824:11: lv_pullDefined_71_0= 'pull'
            	    {
            	    lv_pullDefined_71_0=(Token)match(input,69,FOLLOW_35); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											newLeafNode(lv_pullDefined_71_0, grammarAccess.getOverridePredicate_6Access().getPullDefinedPullKeyword_3_7_1_0());
            	      										
            	    }
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElement(grammarAccess.getOverridePredicate_6Rule());
            	      											}
            	      											setWithLastConsumed(current, "pullDefined", true, "pull");
            	      										
            	    }

            	    }


            	    }

            	    // InternalMcmodel.g:8836:9: (otherlv_72= '=' | otherlv_73= '==' )
            	    int alt260=2;
            	    int LA260_0 = input.LA(1);

            	    if ( (LA260_0==18) ) {
            	        alt260=1;
            	    }
            	    else if ( (LA260_0==58) ) {
            	        alt260=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 260, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt260) {
            	        case 1 :
            	            // InternalMcmodel.g:8837:10: otherlv_72= '='
            	            {
            	            otherlv_72=(Token)match(input,18,FOLLOW_36); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(otherlv_72, grammarAccess.getOverridePredicate_6Access().getEqualsSignKeyword_3_7_2_0());
            	              									
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalMcmodel.g:8842:10: otherlv_73= '=='
            	            {
            	            otherlv_73=(Token)match(input,58,FOLLOW_36); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(otherlv_73, grammarAccess.getOverridePredicate_6Access().getEqualsSignEqualsSignKeyword_3_7_2_1());
            	              									
            	            }

            	            }
            	            break;

            	    }

            	    // InternalMcmodel.g:8847:9: ( (lv_pull_74_0= RULE_PERCENTAGE ) )
            	    // InternalMcmodel.g:8848:10: (lv_pull_74_0= RULE_PERCENTAGE )
            	    {
            	    // InternalMcmodel.g:8848:10: (lv_pull_74_0= RULE_PERCENTAGE )
            	    // InternalMcmodel.g:8849:11: lv_pull_74_0= RULE_PERCENTAGE
            	    {
            	    lv_pull_74_0=(Token)match(input,RULE_PERCENTAGE,FOLLOW_37); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											newLeafNode(lv_pull_74_0, grammarAccess.getOverridePredicate_6Access().getPullPERCENTAGETerminalRuleCall_3_7_3_0());
            	      										
            	    }
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElement(grammarAccess.getOverridePredicate_6Rule());
            	      											}
            	      											setWithLastConsumed(
            	      												current,
            	      												"pull",
            	      												lv_pull_74_0,
            	      												"com.raptor.mcmodel.Mcmodel.PERCENTAGE");
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getOverridePredicate_6Access().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 9 :
            	    // InternalMcmodel.g:8871:4: ({...}? => ( ({...}? => (otherlv_75= '&' ( ( ( (lv_pullingDefined_76_0= '!' ) ) otherlv_77= 'pulling' ) | ( ( (lv_pullingDefined_78_0= 'pulling' ) ) ( (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) ) | ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) ) ) ) ) ) ) ) )
            	    {
            	    // InternalMcmodel.g:8871:4: ({...}? => ( ({...}? => (otherlv_75= '&' ( ( ( (lv_pullingDefined_76_0= '!' ) ) otherlv_77= 'pulling' ) | ( ( (lv_pullingDefined_78_0= 'pulling' ) ) ( (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) ) | ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) ) ) ) ) ) ) ) )
            	    // InternalMcmodel.g:8872:5: {...}? => ( ({...}? => (otherlv_75= '&' ( ( ( (lv_pullingDefined_76_0= '!' ) ) otherlv_77= 'pulling' ) | ( ( (lv_pullingDefined_78_0= 'pulling' ) ) ( (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) ) | ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) ) ) ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_6Access().getUnorderedGroup_3(), 8) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_6", "getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_6Access().getUnorderedGroup_3(), 8)");
            	    }
            	    // InternalMcmodel.g:8872:116: ( ({...}? => (otherlv_75= '&' ( ( ( (lv_pullingDefined_76_0= '!' ) ) otherlv_77= 'pulling' ) | ( ( (lv_pullingDefined_78_0= 'pulling' ) ) ( (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) ) | ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) ) ) ) ) ) ) )
            	    // InternalMcmodel.g:8873:6: ({...}? => (otherlv_75= '&' ( ( ( (lv_pullingDefined_76_0= '!' ) ) otherlv_77= 'pulling' ) | ( ( (lv_pullingDefined_78_0= 'pulling' ) ) ( (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) ) | ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) ) ) ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getOverridePredicate_6Access().getUnorderedGroup_3(), 8);
            	    // InternalMcmodel.g:8876:9: ({...}? => (otherlv_75= '&' ( ( ( (lv_pullingDefined_76_0= '!' ) ) otherlv_77= 'pulling' ) | ( ( (lv_pullingDefined_78_0= 'pulling' ) ) ( (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) ) | ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) ) ) ) ) ) )
            	    // InternalMcmodel.g:8876:10: {...}? => (otherlv_75= '&' ( ( ( (lv_pullingDefined_76_0= '!' ) ) otherlv_77= 'pulling' ) | ( ( (lv_pullingDefined_78_0= 'pulling' ) ) ( (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) ) | ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) ) ) ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_6", "true");
            	    }
            	    // InternalMcmodel.g:8876:19: (otherlv_75= '&' ( ( ( (lv_pullingDefined_76_0= '!' ) ) otherlv_77= 'pulling' ) | ( ( (lv_pullingDefined_78_0= 'pulling' ) ) ( (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) ) | ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) ) ) ) ) )
            	    // InternalMcmodel.g:8876:20: otherlv_75= '&' ( ( ( (lv_pullingDefined_76_0= '!' ) ) otherlv_77= 'pulling' ) | ( ( (lv_pullingDefined_78_0= 'pulling' ) ) ( (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) ) | ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) ) ) ) )
            	    {
            	    otherlv_75=(Token)match(input,59,FOLLOW_52); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_75, grammarAccess.getOverridePredicate_6Access().getAmpersandKeyword_3_8_0());
            	      								
            	    }
            	    // InternalMcmodel.g:8880:9: ( ( ( (lv_pullingDefined_76_0= '!' ) ) otherlv_77= 'pulling' ) | ( ( (lv_pullingDefined_78_0= 'pulling' ) ) ( (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) ) | ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) ) ) ) )
            	    int alt265=2;
            	    int LA265_0 = input.LA(1);

            	    if ( (LA265_0==60) ) {
            	        alt265=1;
            	    }
            	    else if ( (LA265_0==70) ) {
            	        alt265=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 265, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt265) {
            	        case 1 :
            	            // InternalMcmodel.g:8881:10: ( ( (lv_pullingDefined_76_0= '!' ) ) otherlv_77= 'pulling' )
            	            {
            	            // InternalMcmodel.g:8881:10: ( ( (lv_pullingDefined_76_0= '!' ) ) otherlv_77= 'pulling' )
            	            // InternalMcmodel.g:8882:11: ( (lv_pullingDefined_76_0= '!' ) ) otherlv_77= 'pulling'
            	            {
            	            // InternalMcmodel.g:8882:11: ( (lv_pullingDefined_76_0= '!' ) )
            	            // InternalMcmodel.g:8883:12: (lv_pullingDefined_76_0= '!' )
            	            {
            	            // InternalMcmodel.g:8883:12: (lv_pullingDefined_76_0= '!' )
            	            // InternalMcmodel.g:8884:13: lv_pullingDefined_76_0= '!'
            	            {
            	            lv_pullingDefined_76_0=(Token)match(input,60,FOLLOW_53); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              													newLeafNode(lv_pullingDefined_76_0, grammarAccess.getOverridePredicate_6Access().getPullingDefinedExclamationMarkKeyword_3_8_1_0_0_0());
            	              												
            	            }
            	            if ( state.backtracking==0 ) {

            	              													if (current==null) {
            	              														current = createModelElement(grammarAccess.getOverridePredicate_6Rule());
            	              													}
            	              													setWithLastConsumed(current, "pullingDefined", true, "!");
            	              												
            	            }

            	            }


            	            }

            	            otherlv_77=(Token)match(input,70,FOLLOW_37); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              											newLeafNode(otherlv_77, grammarAccess.getOverridePredicate_6Access().getPullingKeyword_3_8_1_0_1());
            	              										
            	            }

            	            }


            	            }
            	            break;
            	        case 2 :
            	            // InternalMcmodel.g:8902:10: ( ( (lv_pullingDefined_78_0= 'pulling' ) ) ( (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) ) | ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) ) ) )
            	            {
            	            // InternalMcmodel.g:8902:10: ( ( (lv_pullingDefined_78_0= 'pulling' ) ) ( (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) ) | ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) ) ) )
            	            // InternalMcmodel.g:8903:11: ( (lv_pullingDefined_78_0= 'pulling' ) ) ( (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) ) | ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) ) )
            	            {
            	            // InternalMcmodel.g:8903:11: ( (lv_pullingDefined_78_0= 'pulling' ) )
            	            // InternalMcmodel.g:8904:12: (lv_pullingDefined_78_0= 'pulling' )
            	            {
            	            // InternalMcmodel.g:8904:12: (lv_pullingDefined_78_0= 'pulling' )
            	            // InternalMcmodel.g:8905:13: lv_pullingDefined_78_0= 'pulling'
            	            {
            	            lv_pullingDefined_78_0=(Token)match(input,70,FOLLOW_40); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              													newLeafNode(lv_pullingDefined_78_0, grammarAccess.getOverridePredicate_6Access().getPullingDefinedPullingKeyword_3_8_1_1_0_0());
            	              												
            	            }
            	            if ( state.backtracking==0 ) {

            	              													if (current==null) {
            	              														current = createModelElement(grammarAccess.getOverridePredicate_6Rule());
            	              													}
            	              													setWithLastConsumed(current, "pullingDefined", true, "pulling");
            	              												
            	            }

            	            }


            	            }

            	            // InternalMcmodel.g:8917:11: ( (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) ) | ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) ) )
            	            int alt264=2;
            	            int LA264_0 = input.LA(1);

            	            if ( (LA264_0==62) ) {
            	                alt264=1;
            	            }
            	            else if ( (LA264_0==18||LA264_0==58) ) {
            	                alt264=2;
            	            }
            	            else {
            	                if (state.backtracking>0) {state.failed=true; return current;}
            	                NoViableAltException nvae =
            	                    new NoViableAltException("", 264, 0, input);

            	                throw nvae;
            	            }
            	            switch (alt264) {
            	                case 1 :
            	                    // InternalMcmodel.g:8918:12: (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) )
            	                    {
            	                    // InternalMcmodel.g:8918:12: (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) )
            	                    // InternalMcmodel.g:8919:13: otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' )
            	                    {
            	                    otherlv_79=(Token)match(input,62,FOLLOW_7); if (state.failed) return current;
            	                    if ( state.backtracking==0 ) {

            	                      													newLeafNode(otherlv_79, grammarAccess.getOverridePredicate_6Access().getExclamationMarkEqualsSignKeyword_3_8_1_1_1_0_0());
            	                      												
            	                    }
            	                    // InternalMcmodel.g:8923:13: ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' )
            	                    int alt261=2;
            	                    int LA261_0 = input.LA(1);

            	                    if ( (LA261_0==21) ) {
            	                        alt261=1;
            	                    }
            	                    else if ( (LA261_0==20) ) {
            	                        alt261=2;
            	                    }
            	                    else {
            	                        if (state.backtracking>0) {state.failed=true; return current;}
            	                        NoViableAltException nvae =
            	                            new NoViableAltException("", 261, 0, input);

            	                        throw nvae;
            	                    }
            	                    switch (alt261) {
            	                        case 1 :
            	                            // InternalMcmodel.g:8924:14: ( (lv_pulling_80_0= 'false' ) )
            	                            {
            	                            // InternalMcmodel.g:8924:14: ( (lv_pulling_80_0= 'false' ) )
            	                            // InternalMcmodel.g:8925:15: (lv_pulling_80_0= 'false' )
            	                            {
            	                            // InternalMcmodel.g:8925:15: (lv_pulling_80_0= 'false' )
            	                            // InternalMcmodel.g:8926:16: lv_pulling_80_0= 'false'
            	                            {
            	                            lv_pulling_80_0=(Token)match(input,21,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              																newLeafNode(lv_pulling_80_0, grammarAccess.getOverridePredicate_6Access().getPullingFalseKeyword_3_8_1_1_1_0_1_0_0());
            	                              															
            	                            }
            	                            if ( state.backtracking==0 ) {

            	                              																if (current==null) {
            	                              																	current = createModelElement(grammarAccess.getOverridePredicate_6Rule());
            	                              																}
            	                              																setWithLastConsumed(current, "pulling", true, "false");
            	                              															
            	                            }

            	                            }


            	                            }


            	                            }
            	                            break;
            	                        case 2 :
            	                            // InternalMcmodel.g:8939:14: otherlv_81= 'true'
            	                            {
            	                            otherlv_81=(Token)match(input,20,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_81, grammarAccess.getOverridePredicate_6Access().getTrueKeyword_3_8_1_1_1_0_1_1());
            	                              													
            	                            }

            	                            }
            	                            break;

            	                    }


            	                    }


            	                    }
            	                    break;
            	                case 2 :
            	                    // InternalMcmodel.g:8946:12: ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) )
            	                    {
            	                    // InternalMcmodel.g:8946:12: ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) )
            	                    // InternalMcmodel.g:8947:13: (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' )
            	                    {
            	                    // InternalMcmodel.g:8947:13: (otherlv_82= '=' | otherlv_83= '==' )
            	                    int alt262=2;
            	                    int LA262_0 = input.LA(1);

            	                    if ( (LA262_0==18) ) {
            	                        alt262=1;
            	                    }
            	                    else if ( (LA262_0==58) ) {
            	                        alt262=2;
            	                    }
            	                    else {
            	                        if (state.backtracking>0) {state.failed=true; return current;}
            	                        NoViableAltException nvae =
            	                            new NoViableAltException("", 262, 0, input);

            	                        throw nvae;
            	                    }
            	                    switch (alt262) {
            	                        case 1 :
            	                            // InternalMcmodel.g:8948:14: otherlv_82= '='
            	                            {
            	                            otherlv_82=(Token)match(input,18,FOLLOW_7); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_82, grammarAccess.getOverridePredicate_6Access().getEqualsSignKeyword_3_8_1_1_1_1_0_0());
            	                              													
            	                            }

            	                            }
            	                            break;
            	                        case 2 :
            	                            // InternalMcmodel.g:8953:14: otherlv_83= '=='
            	                            {
            	                            otherlv_83=(Token)match(input,58,FOLLOW_7); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_83, grammarAccess.getOverridePredicate_6Access().getEqualsSignEqualsSignKeyword_3_8_1_1_1_1_0_1());
            	                              													
            	                            }

            	                            }
            	                            break;

            	                    }

            	                    // InternalMcmodel.g:8958:13: ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' )
            	                    int alt263=2;
            	                    int LA263_0 = input.LA(1);

            	                    if ( (LA263_0==20) ) {
            	                        alt263=1;
            	                    }
            	                    else if ( (LA263_0==21) ) {
            	                        alt263=2;
            	                    }
            	                    else {
            	                        if (state.backtracking>0) {state.failed=true; return current;}
            	                        NoViableAltException nvae =
            	                            new NoViableAltException("", 263, 0, input);

            	                        throw nvae;
            	                    }
            	                    switch (alt263) {
            	                        case 1 :
            	                            // InternalMcmodel.g:8959:14: ( (lv_pulling_84_0= 'true' ) )
            	                            {
            	                            // InternalMcmodel.g:8959:14: ( (lv_pulling_84_0= 'true' ) )
            	                            // InternalMcmodel.g:8960:15: (lv_pulling_84_0= 'true' )
            	                            {
            	                            // InternalMcmodel.g:8960:15: (lv_pulling_84_0= 'true' )
            	                            // InternalMcmodel.g:8961:16: lv_pulling_84_0= 'true'
            	                            {
            	                            lv_pulling_84_0=(Token)match(input,20,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              																newLeafNode(lv_pulling_84_0, grammarAccess.getOverridePredicate_6Access().getPullingTrueKeyword_3_8_1_1_1_1_1_0_0());
            	                              															
            	                            }
            	                            if ( state.backtracking==0 ) {

            	                              																if (current==null) {
            	                              																	current = createModelElement(grammarAccess.getOverridePredicate_6Rule());
            	                              																}
            	                              																setWithLastConsumed(current, "pulling", true, "true");
            	                              															
            	                            }

            	                            }


            	                            }


            	                            }
            	                            break;
            	                        case 2 :
            	                            // InternalMcmodel.g:8974:14: otherlv_85= 'false'
            	                            {
            	                            otherlv_85=(Token)match(input,21,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_85, grammarAccess.getOverridePredicate_6Access().getFalseKeyword_3_8_1_1_1_1_1_1());
            	                              													
            	                            }

            	                            }
            	                            break;

            	                    }


            	                    }


            	                    }
            	                    break;

            	            }


            	            }


            	            }
            	            break;

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getOverridePredicate_6Access().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 10 :
            	    // InternalMcmodel.g:8989:4: ({...}? => ( ({...}? => (otherlv_86= '&' ( ( ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing' ) | ( ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) ) ) ) ) ) )
            	    {
            	    // InternalMcmodel.g:8989:4: ({...}? => ( ({...}? => (otherlv_86= '&' ( ( ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing' ) | ( ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) ) ) ) ) ) )
            	    // InternalMcmodel.g:8990:5: {...}? => ( ({...}? => (otherlv_86= '&' ( ( ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing' ) | ( ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_6Access().getUnorderedGroup_3(), 9) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_6", "getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_6Access().getUnorderedGroup_3(), 9)");
            	    }
            	    // InternalMcmodel.g:8990:116: ( ({...}? => (otherlv_86= '&' ( ( ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing' ) | ( ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) ) ) ) ) )
            	    // InternalMcmodel.g:8991:6: ({...}? => (otherlv_86= '&' ( ( ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing' ) | ( ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getOverridePredicate_6Access().getUnorderedGroup_3(), 9);
            	    // InternalMcmodel.g:8994:9: ({...}? => (otherlv_86= '&' ( ( ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing' ) | ( ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) ) ) ) )
            	    // InternalMcmodel.g:8994:10: {...}? => (otherlv_86= '&' ( ( ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing' ) | ( ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_6", "true");
            	    }
            	    // InternalMcmodel.g:8994:19: (otherlv_86= '&' ( ( ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing' ) | ( ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) ) ) )
            	    // InternalMcmodel.g:8994:20: otherlv_86= '&' ( ( ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing' ) | ( ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) ) )
            	    {
            	    otherlv_86=(Token)match(input,59,FOLLOW_54); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_86, grammarAccess.getOverridePredicate_6Access().getAmpersandKeyword_3_9_0());
            	      								
            	    }
            	    // InternalMcmodel.g:8998:9: ( ( ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing' ) | ( ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) ) )
            	    int alt270=2;
            	    int LA270_0 = input.LA(1);

            	    if ( (LA270_0==60) ) {
            	        alt270=1;
            	    }
            	    else if ( (LA270_0==71) ) {
            	        alt270=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 270, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt270) {
            	        case 1 :
            	            // InternalMcmodel.g:8999:10: ( ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing' )
            	            {
            	            // InternalMcmodel.g:8999:10: ( ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing' )
            	            // InternalMcmodel.g:9000:11: ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing'
            	            {
            	            // InternalMcmodel.g:9000:11: ( (lv_throwingDefined_87_0= '!' ) )
            	            // InternalMcmodel.g:9001:12: (lv_throwingDefined_87_0= '!' )
            	            {
            	            // InternalMcmodel.g:9001:12: (lv_throwingDefined_87_0= '!' )
            	            // InternalMcmodel.g:9002:13: lv_throwingDefined_87_0= '!'
            	            {
            	            lv_throwingDefined_87_0=(Token)match(input,60,FOLLOW_55); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              													newLeafNode(lv_throwingDefined_87_0, grammarAccess.getOverridePredicate_6Access().getThrowingDefinedExclamationMarkKeyword_3_9_1_0_0_0());
            	              												
            	            }
            	            if ( state.backtracking==0 ) {

            	              													if (current==null) {
            	              														current = createModelElement(grammarAccess.getOverridePredicate_6Rule());
            	              													}
            	              													setWithLastConsumed(current, "throwingDefined", true, "!");
            	              												
            	            }

            	            }


            	            }

            	            otherlv_88=(Token)match(input,71,FOLLOW_37); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              											newLeafNode(otherlv_88, grammarAccess.getOverridePredicate_6Access().getThrowingKeyword_3_9_1_0_1());
            	              										
            	            }

            	            }


            	            }
            	            break;
            	        case 2 :
            	            // InternalMcmodel.g:9020:10: ( ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) )
            	            {
            	            // InternalMcmodel.g:9020:10: ( ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) )
            	            // InternalMcmodel.g:9021:11: ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) )
            	            {
            	            // InternalMcmodel.g:9021:11: ( (lv_throwingDefined_89_0= 'throwing' ) )
            	            // InternalMcmodel.g:9022:12: (lv_throwingDefined_89_0= 'throwing' )
            	            {
            	            // InternalMcmodel.g:9022:12: (lv_throwingDefined_89_0= 'throwing' )
            	            // InternalMcmodel.g:9023:13: lv_throwingDefined_89_0= 'throwing'
            	            {
            	            lv_throwingDefined_89_0=(Token)match(input,71,FOLLOW_40); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              													newLeafNode(lv_throwingDefined_89_0, grammarAccess.getOverridePredicate_6Access().getThrowingDefinedThrowingKeyword_3_9_1_1_0_0());
            	              												
            	            }
            	            if ( state.backtracking==0 ) {

            	              													if (current==null) {
            	              														current = createModelElement(grammarAccess.getOverridePredicate_6Rule());
            	              													}
            	              													setWithLastConsumed(current, "throwingDefined", true, "throwing");
            	              												
            	            }

            	            }


            	            }

            	            // InternalMcmodel.g:9035:11: ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) )
            	            int alt269=2;
            	            int LA269_0 = input.LA(1);

            	            if ( (LA269_0==62) ) {
            	                alt269=1;
            	            }
            	            else if ( (LA269_0==18||LA269_0==58) ) {
            	                alt269=2;
            	            }
            	            else {
            	                if (state.backtracking>0) {state.failed=true; return current;}
            	                NoViableAltException nvae =
            	                    new NoViableAltException("", 269, 0, input);

            	                throw nvae;
            	            }
            	            switch (alt269) {
            	                case 1 :
            	                    // InternalMcmodel.g:9036:12: (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) )
            	                    {
            	                    // InternalMcmodel.g:9036:12: (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) )
            	                    // InternalMcmodel.g:9037:13: otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' )
            	                    {
            	                    otherlv_90=(Token)match(input,62,FOLLOW_7); if (state.failed) return current;
            	                    if ( state.backtracking==0 ) {

            	                      													newLeafNode(otherlv_90, grammarAccess.getOverridePredicate_6Access().getExclamationMarkEqualsSignKeyword_3_9_1_1_1_0_0());
            	                      												
            	                    }
            	                    // InternalMcmodel.g:9041:13: ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' )
            	                    int alt266=2;
            	                    int LA266_0 = input.LA(1);

            	                    if ( (LA266_0==21) ) {
            	                        alt266=1;
            	                    }
            	                    else if ( (LA266_0==20) ) {
            	                        alt266=2;
            	                    }
            	                    else {
            	                        if (state.backtracking>0) {state.failed=true; return current;}
            	                        NoViableAltException nvae =
            	                            new NoViableAltException("", 266, 0, input);

            	                        throw nvae;
            	                    }
            	                    switch (alt266) {
            	                        case 1 :
            	                            // InternalMcmodel.g:9042:14: ( (lv_throwing_91_0= 'false' ) )
            	                            {
            	                            // InternalMcmodel.g:9042:14: ( (lv_throwing_91_0= 'false' ) )
            	                            // InternalMcmodel.g:9043:15: (lv_throwing_91_0= 'false' )
            	                            {
            	                            // InternalMcmodel.g:9043:15: (lv_throwing_91_0= 'false' )
            	                            // InternalMcmodel.g:9044:16: lv_throwing_91_0= 'false'
            	                            {
            	                            lv_throwing_91_0=(Token)match(input,21,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              																newLeafNode(lv_throwing_91_0, grammarAccess.getOverridePredicate_6Access().getThrowingFalseKeyword_3_9_1_1_1_0_1_0_0());
            	                              															
            	                            }
            	                            if ( state.backtracking==0 ) {

            	                              																if (current==null) {
            	                              																	current = createModelElement(grammarAccess.getOverridePredicate_6Rule());
            	                              																}
            	                              																setWithLastConsumed(current, "throwing", true, "false");
            	                              															
            	                            }

            	                            }


            	                            }


            	                            }
            	                            break;
            	                        case 2 :
            	                            // InternalMcmodel.g:9057:14: otherlv_92= 'true'
            	                            {
            	                            otherlv_92=(Token)match(input,20,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_92, grammarAccess.getOverridePredicate_6Access().getTrueKeyword_3_9_1_1_1_0_1_1());
            	                              													
            	                            }

            	                            }
            	                            break;

            	                    }


            	                    }


            	                    }
            	                    break;
            	                case 2 :
            	                    // InternalMcmodel.g:9064:12: ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) )
            	                    {
            	                    // InternalMcmodel.g:9064:12: ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) )
            	                    // InternalMcmodel.g:9065:13: (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' )
            	                    {
            	                    // InternalMcmodel.g:9065:13: (otherlv_93= '=' | otherlv_94= '==' )
            	                    int alt267=2;
            	                    int LA267_0 = input.LA(1);

            	                    if ( (LA267_0==18) ) {
            	                        alt267=1;
            	                    }
            	                    else if ( (LA267_0==58) ) {
            	                        alt267=2;
            	                    }
            	                    else {
            	                        if (state.backtracking>0) {state.failed=true; return current;}
            	                        NoViableAltException nvae =
            	                            new NoViableAltException("", 267, 0, input);

            	                        throw nvae;
            	                    }
            	                    switch (alt267) {
            	                        case 1 :
            	                            // InternalMcmodel.g:9066:14: otherlv_93= '='
            	                            {
            	                            otherlv_93=(Token)match(input,18,FOLLOW_7); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_93, grammarAccess.getOverridePredicate_6Access().getEqualsSignKeyword_3_9_1_1_1_1_0_0());
            	                              													
            	                            }

            	                            }
            	                            break;
            	                        case 2 :
            	                            // InternalMcmodel.g:9071:14: otherlv_94= '=='
            	                            {
            	                            otherlv_94=(Token)match(input,58,FOLLOW_7); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_94, grammarAccess.getOverridePredicate_6Access().getEqualsSignEqualsSignKeyword_3_9_1_1_1_1_0_1());
            	                              													
            	                            }

            	                            }
            	                            break;

            	                    }

            	                    // InternalMcmodel.g:9076:13: ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' )
            	                    int alt268=2;
            	                    int LA268_0 = input.LA(1);

            	                    if ( (LA268_0==20) ) {
            	                        alt268=1;
            	                    }
            	                    else if ( (LA268_0==21) ) {
            	                        alt268=2;
            	                    }
            	                    else {
            	                        if (state.backtracking>0) {state.failed=true; return current;}
            	                        NoViableAltException nvae =
            	                            new NoViableAltException("", 268, 0, input);

            	                        throw nvae;
            	                    }
            	                    switch (alt268) {
            	                        case 1 :
            	                            // InternalMcmodel.g:9077:14: ( (lv_throwing_95_0= 'true' ) )
            	                            {
            	                            // InternalMcmodel.g:9077:14: ( (lv_throwing_95_0= 'true' ) )
            	                            // InternalMcmodel.g:9078:15: (lv_throwing_95_0= 'true' )
            	                            {
            	                            // InternalMcmodel.g:9078:15: (lv_throwing_95_0= 'true' )
            	                            // InternalMcmodel.g:9079:16: lv_throwing_95_0= 'true'
            	                            {
            	                            lv_throwing_95_0=(Token)match(input,20,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              																newLeafNode(lv_throwing_95_0, grammarAccess.getOverridePredicate_6Access().getThrowingTrueKeyword_3_9_1_1_1_1_1_0_0());
            	                              															
            	                            }
            	                            if ( state.backtracking==0 ) {

            	                              																if (current==null) {
            	                              																	current = createModelElement(grammarAccess.getOverridePredicate_6Rule());
            	                              																}
            	                              																setWithLastConsumed(current, "throwing", true, "true");
            	                              															
            	                            }

            	                            }


            	                            }


            	                            }
            	                            break;
            	                        case 2 :
            	                            // InternalMcmodel.g:9092:14: otherlv_96= 'false'
            	                            {
            	                            otherlv_96=(Token)match(input,21,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_96, grammarAccess.getOverridePredicate_6Access().getFalseKeyword_3_9_1_1_1_1_1_1());
            	                              													
            	                            }

            	                            }
            	                            break;

            	                    }


            	                    }


            	                    }
            	                    break;

            	            }


            	            }


            	            }
            	            break;

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getOverridePredicate_6Access().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 11 :
            	    // InternalMcmodel.g:9107:4: ({...}? => ( ({...}? => (otherlv_97= '&' ( (lv_timeDefined_98_0= 'time' ) ) (otherlv_99= '=' | otherlv_100= '==' ) ( (lv_time_101_0= RULE_PERCENTAGE ) ) ) ) ) )
            	    {
            	    // InternalMcmodel.g:9107:4: ({...}? => ( ({...}? => (otherlv_97= '&' ( (lv_timeDefined_98_0= 'time' ) ) (otherlv_99= '=' | otherlv_100= '==' ) ( (lv_time_101_0= RULE_PERCENTAGE ) ) ) ) ) )
            	    // InternalMcmodel.g:9108:5: {...}? => ( ({...}? => (otherlv_97= '&' ( (lv_timeDefined_98_0= 'time' ) ) (otherlv_99= '=' | otherlv_100= '==' ) ( (lv_time_101_0= RULE_PERCENTAGE ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_6Access().getUnorderedGroup_3(), 10) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_6", "getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_6Access().getUnorderedGroup_3(), 10)");
            	    }
            	    // InternalMcmodel.g:9108:117: ( ({...}? => (otherlv_97= '&' ( (lv_timeDefined_98_0= 'time' ) ) (otherlv_99= '=' | otherlv_100= '==' ) ( (lv_time_101_0= RULE_PERCENTAGE ) ) ) ) )
            	    // InternalMcmodel.g:9109:6: ({...}? => (otherlv_97= '&' ( (lv_timeDefined_98_0= 'time' ) ) (otherlv_99= '=' | otherlv_100= '==' ) ( (lv_time_101_0= RULE_PERCENTAGE ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getOverridePredicate_6Access().getUnorderedGroup_3(), 10);
            	    // InternalMcmodel.g:9112:9: ({...}? => (otherlv_97= '&' ( (lv_timeDefined_98_0= 'time' ) ) (otherlv_99= '=' | otherlv_100= '==' ) ( (lv_time_101_0= RULE_PERCENTAGE ) ) ) )
            	    // InternalMcmodel.g:9112:10: {...}? => (otherlv_97= '&' ( (lv_timeDefined_98_0= 'time' ) ) (otherlv_99= '=' | otherlv_100= '==' ) ( (lv_time_101_0= RULE_PERCENTAGE ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_6", "true");
            	    }
            	    // InternalMcmodel.g:9112:19: (otherlv_97= '&' ( (lv_timeDefined_98_0= 'time' ) ) (otherlv_99= '=' | otherlv_100= '==' ) ( (lv_time_101_0= RULE_PERCENTAGE ) ) )
            	    // InternalMcmodel.g:9112:20: otherlv_97= '&' ( (lv_timeDefined_98_0= 'time' ) ) (otherlv_99= '=' | otherlv_100= '==' ) ( (lv_time_101_0= RULE_PERCENTAGE ) )
            	    {
            	    otherlv_97=(Token)match(input,59,FOLLOW_56); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_97, grammarAccess.getOverridePredicate_6Access().getAmpersandKeyword_3_10_0());
            	      								
            	    }
            	    // InternalMcmodel.g:9116:9: ( (lv_timeDefined_98_0= 'time' ) )
            	    // InternalMcmodel.g:9117:10: (lv_timeDefined_98_0= 'time' )
            	    {
            	    // InternalMcmodel.g:9117:10: (lv_timeDefined_98_0= 'time' )
            	    // InternalMcmodel.g:9118:11: lv_timeDefined_98_0= 'time'
            	    {
            	    lv_timeDefined_98_0=(Token)match(input,72,FOLLOW_35); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											newLeafNode(lv_timeDefined_98_0, grammarAccess.getOverridePredicate_6Access().getTimeDefinedTimeKeyword_3_10_1_0());
            	      										
            	    }
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElement(grammarAccess.getOverridePredicate_6Rule());
            	      											}
            	      											setWithLastConsumed(current, "timeDefined", true, "time");
            	      										
            	    }

            	    }


            	    }

            	    // InternalMcmodel.g:9130:9: (otherlv_99= '=' | otherlv_100= '==' )
            	    int alt271=2;
            	    int LA271_0 = input.LA(1);

            	    if ( (LA271_0==18) ) {
            	        alt271=1;
            	    }
            	    else if ( (LA271_0==58) ) {
            	        alt271=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 271, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt271) {
            	        case 1 :
            	            // InternalMcmodel.g:9131:10: otherlv_99= '='
            	            {
            	            otherlv_99=(Token)match(input,18,FOLLOW_36); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(otherlv_99, grammarAccess.getOverridePredicate_6Access().getEqualsSignKeyword_3_10_2_0());
            	              									
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalMcmodel.g:9136:10: otherlv_100= '=='
            	            {
            	            otherlv_100=(Token)match(input,58,FOLLOW_36); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(otherlv_100, grammarAccess.getOverridePredicate_6Access().getEqualsSignEqualsSignKeyword_3_10_2_1());
            	              									
            	            }

            	            }
            	            break;

            	    }

            	    // InternalMcmodel.g:9141:9: ( (lv_time_101_0= RULE_PERCENTAGE ) )
            	    // InternalMcmodel.g:9142:10: (lv_time_101_0= RULE_PERCENTAGE )
            	    {
            	    // InternalMcmodel.g:9142:10: (lv_time_101_0= RULE_PERCENTAGE )
            	    // InternalMcmodel.g:9143:11: lv_time_101_0= RULE_PERCENTAGE
            	    {
            	    lv_time_101_0=(Token)match(input,RULE_PERCENTAGE,FOLLOW_37); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											newLeafNode(lv_time_101_0, grammarAccess.getOverridePredicate_6Access().getTimePERCENTAGETerminalRuleCall_3_10_3_0());
            	      										
            	    }
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElement(grammarAccess.getOverridePredicate_6Rule());
            	      											}
            	      											setWithLastConsumed(
            	      												current,
            	      												"time",
            	      												lv_time_101_0,
            	      												"com.raptor.mcmodel.Mcmodel.PERCENTAGE");
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getOverridePredicate_6Access().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 12 :
            	    // InternalMcmodel.g:9165:4: ({...}? => ( ({...}? => (otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) ) ) ) ) )
            	    {
            	    // InternalMcmodel.g:9165:4: ({...}? => ( ({...}? => (otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) ) ) ) ) )
            	    // InternalMcmodel.g:9166:5: {...}? => ( ({...}? => (otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_6Access().getUnorderedGroup_3(), 11) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_6", "getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_6Access().getUnorderedGroup_3(), 11)");
            	    }
            	    // InternalMcmodel.g:9166:117: ( ({...}? => (otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) ) ) ) )
            	    // InternalMcmodel.g:9167:6: ({...}? => (otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getOverridePredicate_6Access().getUnorderedGroup_3(), 11);
            	    // InternalMcmodel.g:9170:9: ({...}? => (otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) ) ) )
            	    // InternalMcmodel.g:9170:10: {...}? => (otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_6", "true");
            	    }
            	    // InternalMcmodel.g:9170:19: (otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) ) )
            	    // InternalMcmodel.g:9170:20: otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) )
            	    {
            	    otherlv_102=(Token)match(input,59,FOLLOW_57); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_102, grammarAccess.getOverridePredicate_6Access().getAmpersandKeyword_3_11_0());
            	      								
            	    }
            	    // InternalMcmodel.g:9174:9: ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) )
            	    // InternalMcmodel.g:9175:10: (lv_customModelDataDefined_103_0= 'custom_model_data' )
            	    {
            	    // InternalMcmodel.g:9175:10: (lv_customModelDataDefined_103_0= 'custom_model_data' )
            	    // InternalMcmodel.g:9176:11: lv_customModelDataDefined_103_0= 'custom_model_data'
            	    {
            	    lv_customModelDataDefined_103_0=(Token)match(input,73,FOLLOW_35); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											newLeafNode(lv_customModelDataDefined_103_0, grammarAccess.getOverridePredicate_6Access().getCustomModelDataDefinedCustom_model_dataKeyword_3_11_1_0());
            	      										
            	    }
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElement(grammarAccess.getOverridePredicate_6Rule());
            	      											}
            	      											setWithLastConsumed(current, "customModelDataDefined", true, "custom_model_data");
            	      										
            	    }

            	    }


            	    }

            	    // InternalMcmodel.g:9188:9: (otherlv_104= '=' | otherlv_105= '==' )
            	    int alt272=2;
            	    int LA272_0 = input.LA(1);

            	    if ( (LA272_0==18) ) {
            	        alt272=1;
            	    }
            	    else if ( (LA272_0==58) ) {
            	        alt272=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 272, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt272) {
            	        case 1 :
            	            // InternalMcmodel.g:9189:10: otherlv_104= '='
            	            {
            	            otherlv_104=(Token)match(input,18,FOLLOW_29); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(otherlv_104, grammarAccess.getOverridePredicate_6Access().getEqualsSignKeyword_3_11_2_0());
            	              									
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalMcmodel.g:9194:10: otherlv_105= '=='
            	            {
            	            otherlv_105=(Token)match(input,58,FOLLOW_29); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(otherlv_105, grammarAccess.getOverridePredicate_6Access().getEqualsSignEqualsSignKeyword_3_11_2_1());
            	              									
            	            }

            	            }
            	            break;

            	    }

            	    // InternalMcmodel.g:9199:9: ( (lv_customModelData_106_0= ruleLONG ) )
            	    // InternalMcmodel.g:9200:10: (lv_customModelData_106_0= ruleLONG )
            	    {
            	    // InternalMcmodel.g:9200:10: (lv_customModelData_106_0= ruleLONG )
            	    // InternalMcmodel.g:9201:11: lv_customModelData_106_0= ruleLONG
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getOverridePredicate_6Access().getCustomModelDataLONGParserRuleCall_3_11_3_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_37);
            	    lv_customModelData_106_0=ruleLONG();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getOverridePredicate_6Rule());
            	      											}
            	      											set(
            	      												current,
            	      												"customModelData",
            	      												lv_customModelData_106_0,
            	      												"com.raptor.mcmodel.Mcmodel.LONG");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getOverridePredicate_6Access().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop273;
                }
            } while (true);


            }


            }

            getUnorderedGroupHelper().leave(grammarAccess.getOverridePredicate_6Access().getUnorderedGroup_3());

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOverridePredicate_6"


    // $ANTLR start "entryRuleOverridePredicate_7"
    // InternalMcmodel.g:9235:1: entryRuleOverridePredicate_7 returns [EObject current=null] : iv_ruleOverridePredicate_7= ruleOverridePredicate_7 EOF ;
    public final EObject entryRuleOverridePredicate_7() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleOverridePredicate_7 = null;


        try {
            // InternalMcmodel.g:9235:60: (iv_ruleOverridePredicate_7= ruleOverridePredicate_7 EOF )
            // InternalMcmodel.g:9236:2: iv_ruleOverridePredicate_7= ruleOverridePredicate_7 EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOverridePredicate_7Rule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOverridePredicate_7=ruleOverridePredicate_7();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOverridePredicate_7; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOverridePredicate_7"


    // $ANTLR start "ruleOverridePredicate_7"
    // InternalMcmodel.g:9242:1: ruleOverridePredicate_7 returns [EObject current=null] : ( ( ( ( (lv_damagedDefined_0_0= '!' ) ) otherlv_1= 'damaged' ) | ( ( (lv_damagedDefined_2_0= 'damaged' ) ) ( (otherlv_3= '!=' ( ( (lv_damaged_4_0= 'false' ) ) | otherlv_5= 'true' ) ) | ( (otherlv_6= '=' | otherlv_7= '==' ) ( ( (lv_damaged_8_0= 'true' ) ) | otherlv_9= 'false' ) ) ) ) ) ( ( ( ( ({...}? => ( ({...}? => (otherlv_11= '&' ( (lv_angleDefined_12_0= 'angle' ) ) (otherlv_13= '=' | otherlv_14= '==' ) ( (lv_angle_15_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= '&' ( ( ( (lv_blockingDefined_17_0= '!' ) ) otherlv_18= 'blocking' ) | ( ( (lv_blockingDefined_19_0= 'blocking' ) ) ( (otherlv_20= '!=' ( ( (lv_blocking_21_0= 'false' ) ) | otherlv_22= 'true' ) ) | ( (otherlv_23= '=' | otherlv_24= '==' ) ( ( (lv_blocking_25_0= 'true' ) ) | otherlv_26= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= '&' ( ( ( (lv_brokenDefined_28_0= '!' ) ) otherlv_29= 'broken' ) | ( ( (lv_brokenDefined_30_0= 'broken' ) ) ( (otherlv_31= '!=' ( ( (lv_broken_32_0= 'false' ) ) | otherlv_33= 'true' ) ) | ( (otherlv_34= '=' | otherlv_35= '==' ) ( ( (lv_broken_36_0= 'true' ) ) | otherlv_37= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_38= '&' ( ( ( (lv_castDefined_39_0= '!' ) ) otherlv_40= 'cast' ) | ( ( (lv_castDefined_41_0= 'cast' ) ) ( (otherlv_42= '!=' ( ( (lv_cast_43_0= 'false' ) ) | otherlv_44= 'true' ) ) | ( (otherlv_45= '=' | otherlv_46= '==' ) ( ( (lv_cast_47_0= 'true' ) ) | otherlv_48= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_49= '&' ( (lv_cooldownDefined_50_0= 'cooldown' ) ) (otherlv_51= '=' | otherlv_52= '==' ) ( (lv_cooldown_53_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_54= '&' ( (lv_damageDefined_55_0= 'damage' ) ) (otherlv_56= '=' | otherlv_57= '==' ) ( (lv_damage_58_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_59= '&' ( ( ( (lv_lefthandedDefined_60_0= '!' ) ) otherlv_61= 'lefthanded' ) | ( ( (lv_lefthandedDefined_62_0= 'lefthanded' ) ) ( (otherlv_63= '!=' ( ( (lv_lefthanded_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_lefthanded_68_0= 'true' ) ) | otherlv_69= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_70= '&' ( (lv_pullDefined_71_0= 'pull' ) ) (otherlv_72= '=' | otherlv_73= '==' ) ( (lv_pull_74_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_75= '&' ( ( ( (lv_pullingDefined_76_0= '!' ) ) otherlv_77= 'pulling' ) | ( ( (lv_pullingDefined_78_0= 'pulling' ) ) ( (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) ) | ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_86= '&' ( ( ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing' ) | ( ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_97= '&' ( (lv_timeDefined_98_0= 'time' ) ) (otherlv_99= '=' | otherlv_100= '==' ) ( (lv_time_101_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) ) ) ) ) ) )* ) ) ) ) ;
    public final EObject ruleOverridePredicate_7() throws RecognitionException {
        EObject current = null;

        Token lv_damagedDefined_0_0=null;
        Token otherlv_1=null;
        Token lv_damagedDefined_2_0=null;
        Token otherlv_3=null;
        Token lv_damaged_4_0=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        Token lv_damaged_8_0=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        Token lv_angleDefined_12_0=null;
        Token otherlv_13=null;
        Token otherlv_14=null;
        Token lv_angle_15_0=null;
        Token otherlv_16=null;
        Token lv_blockingDefined_17_0=null;
        Token otherlv_18=null;
        Token lv_blockingDefined_19_0=null;
        Token otherlv_20=null;
        Token lv_blocking_21_0=null;
        Token otherlv_22=null;
        Token otherlv_23=null;
        Token otherlv_24=null;
        Token lv_blocking_25_0=null;
        Token otherlv_26=null;
        Token otherlv_27=null;
        Token lv_brokenDefined_28_0=null;
        Token otherlv_29=null;
        Token lv_brokenDefined_30_0=null;
        Token otherlv_31=null;
        Token lv_broken_32_0=null;
        Token otherlv_33=null;
        Token otherlv_34=null;
        Token otherlv_35=null;
        Token lv_broken_36_0=null;
        Token otherlv_37=null;
        Token otherlv_38=null;
        Token lv_castDefined_39_0=null;
        Token otherlv_40=null;
        Token lv_castDefined_41_0=null;
        Token otherlv_42=null;
        Token lv_cast_43_0=null;
        Token otherlv_44=null;
        Token otherlv_45=null;
        Token otherlv_46=null;
        Token lv_cast_47_0=null;
        Token otherlv_48=null;
        Token otherlv_49=null;
        Token lv_cooldownDefined_50_0=null;
        Token otherlv_51=null;
        Token otherlv_52=null;
        Token lv_cooldown_53_0=null;
        Token otherlv_54=null;
        Token lv_damageDefined_55_0=null;
        Token otherlv_56=null;
        Token otherlv_57=null;
        Token lv_damage_58_0=null;
        Token otherlv_59=null;
        Token lv_lefthandedDefined_60_0=null;
        Token otherlv_61=null;
        Token lv_lefthandedDefined_62_0=null;
        Token otherlv_63=null;
        Token lv_lefthanded_64_0=null;
        Token otherlv_65=null;
        Token otherlv_66=null;
        Token otherlv_67=null;
        Token lv_lefthanded_68_0=null;
        Token otherlv_69=null;
        Token otherlv_70=null;
        Token lv_pullDefined_71_0=null;
        Token otherlv_72=null;
        Token otherlv_73=null;
        Token lv_pull_74_0=null;
        Token otherlv_75=null;
        Token lv_pullingDefined_76_0=null;
        Token otherlv_77=null;
        Token lv_pullingDefined_78_0=null;
        Token otherlv_79=null;
        Token lv_pulling_80_0=null;
        Token otherlv_81=null;
        Token otherlv_82=null;
        Token otherlv_83=null;
        Token lv_pulling_84_0=null;
        Token otherlv_85=null;
        Token otherlv_86=null;
        Token lv_throwingDefined_87_0=null;
        Token otherlv_88=null;
        Token lv_throwingDefined_89_0=null;
        Token otherlv_90=null;
        Token lv_throwing_91_0=null;
        Token otherlv_92=null;
        Token otherlv_93=null;
        Token otherlv_94=null;
        Token lv_throwing_95_0=null;
        Token otherlv_96=null;
        Token otherlv_97=null;
        Token lv_timeDefined_98_0=null;
        Token otherlv_99=null;
        Token otherlv_100=null;
        Token lv_time_101_0=null;
        Token otherlv_102=null;
        Token lv_customModelDataDefined_103_0=null;
        Token otherlv_104=null;
        Token otherlv_105=null;
        AntlrDatatypeRuleToken lv_customModelData_106_0 = null;



        	enterRule();

        try {
            // InternalMcmodel.g:9248:2: ( ( ( ( ( (lv_damagedDefined_0_0= '!' ) ) otherlv_1= 'damaged' ) | ( ( (lv_damagedDefined_2_0= 'damaged' ) ) ( (otherlv_3= '!=' ( ( (lv_damaged_4_0= 'false' ) ) | otherlv_5= 'true' ) ) | ( (otherlv_6= '=' | otherlv_7= '==' ) ( ( (lv_damaged_8_0= 'true' ) ) | otherlv_9= 'false' ) ) ) ) ) ( ( ( ( ({...}? => ( ({...}? => (otherlv_11= '&' ( (lv_angleDefined_12_0= 'angle' ) ) (otherlv_13= '=' | otherlv_14= '==' ) ( (lv_angle_15_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= '&' ( ( ( (lv_blockingDefined_17_0= '!' ) ) otherlv_18= 'blocking' ) | ( ( (lv_blockingDefined_19_0= 'blocking' ) ) ( (otherlv_20= '!=' ( ( (lv_blocking_21_0= 'false' ) ) | otherlv_22= 'true' ) ) | ( (otherlv_23= '=' | otherlv_24= '==' ) ( ( (lv_blocking_25_0= 'true' ) ) | otherlv_26= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= '&' ( ( ( (lv_brokenDefined_28_0= '!' ) ) otherlv_29= 'broken' ) | ( ( (lv_brokenDefined_30_0= 'broken' ) ) ( (otherlv_31= '!=' ( ( (lv_broken_32_0= 'false' ) ) | otherlv_33= 'true' ) ) | ( (otherlv_34= '=' | otherlv_35= '==' ) ( ( (lv_broken_36_0= 'true' ) ) | otherlv_37= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_38= '&' ( ( ( (lv_castDefined_39_0= '!' ) ) otherlv_40= 'cast' ) | ( ( (lv_castDefined_41_0= 'cast' ) ) ( (otherlv_42= '!=' ( ( (lv_cast_43_0= 'false' ) ) | otherlv_44= 'true' ) ) | ( (otherlv_45= '=' | otherlv_46= '==' ) ( ( (lv_cast_47_0= 'true' ) ) | otherlv_48= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_49= '&' ( (lv_cooldownDefined_50_0= 'cooldown' ) ) (otherlv_51= '=' | otherlv_52= '==' ) ( (lv_cooldown_53_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_54= '&' ( (lv_damageDefined_55_0= 'damage' ) ) (otherlv_56= '=' | otherlv_57= '==' ) ( (lv_damage_58_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_59= '&' ( ( ( (lv_lefthandedDefined_60_0= '!' ) ) otherlv_61= 'lefthanded' ) | ( ( (lv_lefthandedDefined_62_0= 'lefthanded' ) ) ( (otherlv_63= '!=' ( ( (lv_lefthanded_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_lefthanded_68_0= 'true' ) ) | otherlv_69= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_70= '&' ( (lv_pullDefined_71_0= 'pull' ) ) (otherlv_72= '=' | otherlv_73= '==' ) ( (lv_pull_74_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_75= '&' ( ( ( (lv_pullingDefined_76_0= '!' ) ) otherlv_77= 'pulling' ) | ( ( (lv_pullingDefined_78_0= 'pulling' ) ) ( (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) ) | ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_86= '&' ( ( ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing' ) | ( ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_97= '&' ( (lv_timeDefined_98_0= 'time' ) ) (otherlv_99= '=' | otherlv_100= '==' ) ( (lv_time_101_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) ) ) ) ) ) )* ) ) ) ) )
            // InternalMcmodel.g:9249:2: ( ( ( ( (lv_damagedDefined_0_0= '!' ) ) otherlv_1= 'damaged' ) | ( ( (lv_damagedDefined_2_0= 'damaged' ) ) ( (otherlv_3= '!=' ( ( (lv_damaged_4_0= 'false' ) ) | otherlv_5= 'true' ) ) | ( (otherlv_6= '=' | otherlv_7= '==' ) ( ( (lv_damaged_8_0= 'true' ) ) | otherlv_9= 'false' ) ) ) ) ) ( ( ( ( ({...}? => ( ({...}? => (otherlv_11= '&' ( (lv_angleDefined_12_0= 'angle' ) ) (otherlv_13= '=' | otherlv_14= '==' ) ( (lv_angle_15_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= '&' ( ( ( (lv_blockingDefined_17_0= '!' ) ) otherlv_18= 'blocking' ) | ( ( (lv_blockingDefined_19_0= 'blocking' ) ) ( (otherlv_20= '!=' ( ( (lv_blocking_21_0= 'false' ) ) | otherlv_22= 'true' ) ) | ( (otherlv_23= '=' | otherlv_24= '==' ) ( ( (lv_blocking_25_0= 'true' ) ) | otherlv_26= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= '&' ( ( ( (lv_brokenDefined_28_0= '!' ) ) otherlv_29= 'broken' ) | ( ( (lv_brokenDefined_30_0= 'broken' ) ) ( (otherlv_31= '!=' ( ( (lv_broken_32_0= 'false' ) ) | otherlv_33= 'true' ) ) | ( (otherlv_34= '=' | otherlv_35= '==' ) ( ( (lv_broken_36_0= 'true' ) ) | otherlv_37= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_38= '&' ( ( ( (lv_castDefined_39_0= '!' ) ) otherlv_40= 'cast' ) | ( ( (lv_castDefined_41_0= 'cast' ) ) ( (otherlv_42= '!=' ( ( (lv_cast_43_0= 'false' ) ) | otherlv_44= 'true' ) ) | ( (otherlv_45= '=' | otherlv_46= '==' ) ( ( (lv_cast_47_0= 'true' ) ) | otherlv_48= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_49= '&' ( (lv_cooldownDefined_50_0= 'cooldown' ) ) (otherlv_51= '=' | otherlv_52= '==' ) ( (lv_cooldown_53_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_54= '&' ( (lv_damageDefined_55_0= 'damage' ) ) (otherlv_56= '=' | otherlv_57= '==' ) ( (lv_damage_58_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_59= '&' ( ( ( (lv_lefthandedDefined_60_0= '!' ) ) otherlv_61= 'lefthanded' ) | ( ( (lv_lefthandedDefined_62_0= 'lefthanded' ) ) ( (otherlv_63= '!=' ( ( (lv_lefthanded_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_lefthanded_68_0= 'true' ) ) | otherlv_69= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_70= '&' ( (lv_pullDefined_71_0= 'pull' ) ) (otherlv_72= '=' | otherlv_73= '==' ) ( (lv_pull_74_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_75= '&' ( ( ( (lv_pullingDefined_76_0= '!' ) ) otherlv_77= 'pulling' ) | ( ( (lv_pullingDefined_78_0= 'pulling' ) ) ( (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) ) | ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_86= '&' ( ( ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing' ) | ( ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_97= '&' ( (lv_timeDefined_98_0= 'time' ) ) (otherlv_99= '=' | otherlv_100= '==' ) ( (lv_time_101_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) ) ) ) ) ) )* ) ) ) )
            {
            // InternalMcmodel.g:9249:2: ( ( ( ( (lv_damagedDefined_0_0= '!' ) ) otherlv_1= 'damaged' ) | ( ( (lv_damagedDefined_2_0= 'damaged' ) ) ( (otherlv_3= '!=' ( ( (lv_damaged_4_0= 'false' ) ) | otherlv_5= 'true' ) ) | ( (otherlv_6= '=' | otherlv_7= '==' ) ( ( (lv_damaged_8_0= 'true' ) ) | otherlv_9= 'false' ) ) ) ) ) ( ( ( ( ({...}? => ( ({...}? => (otherlv_11= '&' ( (lv_angleDefined_12_0= 'angle' ) ) (otherlv_13= '=' | otherlv_14= '==' ) ( (lv_angle_15_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= '&' ( ( ( (lv_blockingDefined_17_0= '!' ) ) otherlv_18= 'blocking' ) | ( ( (lv_blockingDefined_19_0= 'blocking' ) ) ( (otherlv_20= '!=' ( ( (lv_blocking_21_0= 'false' ) ) | otherlv_22= 'true' ) ) | ( (otherlv_23= '=' | otherlv_24= '==' ) ( ( (lv_blocking_25_0= 'true' ) ) | otherlv_26= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= '&' ( ( ( (lv_brokenDefined_28_0= '!' ) ) otherlv_29= 'broken' ) | ( ( (lv_brokenDefined_30_0= 'broken' ) ) ( (otherlv_31= '!=' ( ( (lv_broken_32_0= 'false' ) ) | otherlv_33= 'true' ) ) | ( (otherlv_34= '=' | otherlv_35= '==' ) ( ( (lv_broken_36_0= 'true' ) ) | otherlv_37= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_38= '&' ( ( ( (lv_castDefined_39_0= '!' ) ) otherlv_40= 'cast' ) | ( ( (lv_castDefined_41_0= 'cast' ) ) ( (otherlv_42= '!=' ( ( (lv_cast_43_0= 'false' ) ) | otherlv_44= 'true' ) ) | ( (otherlv_45= '=' | otherlv_46= '==' ) ( ( (lv_cast_47_0= 'true' ) ) | otherlv_48= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_49= '&' ( (lv_cooldownDefined_50_0= 'cooldown' ) ) (otherlv_51= '=' | otherlv_52= '==' ) ( (lv_cooldown_53_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_54= '&' ( (lv_damageDefined_55_0= 'damage' ) ) (otherlv_56= '=' | otherlv_57= '==' ) ( (lv_damage_58_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_59= '&' ( ( ( (lv_lefthandedDefined_60_0= '!' ) ) otherlv_61= 'lefthanded' ) | ( ( (lv_lefthandedDefined_62_0= 'lefthanded' ) ) ( (otherlv_63= '!=' ( ( (lv_lefthanded_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_lefthanded_68_0= 'true' ) ) | otherlv_69= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_70= '&' ( (lv_pullDefined_71_0= 'pull' ) ) (otherlv_72= '=' | otherlv_73= '==' ) ( (lv_pull_74_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_75= '&' ( ( ( (lv_pullingDefined_76_0= '!' ) ) otherlv_77= 'pulling' ) | ( ( (lv_pullingDefined_78_0= 'pulling' ) ) ( (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) ) | ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_86= '&' ( ( ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing' ) | ( ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_97= '&' ( (lv_timeDefined_98_0= 'time' ) ) (otherlv_99= '=' | otherlv_100= '==' ) ( (lv_time_101_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) ) ) ) ) ) )* ) ) ) )
            // InternalMcmodel.g:9250:3: ( ( ( (lv_damagedDefined_0_0= '!' ) ) otherlv_1= 'damaged' ) | ( ( (lv_damagedDefined_2_0= 'damaged' ) ) ( (otherlv_3= '!=' ( ( (lv_damaged_4_0= 'false' ) ) | otherlv_5= 'true' ) ) | ( (otherlv_6= '=' | otherlv_7= '==' ) ( ( (lv_damaged_8_0= 'true' ) ) | otherlv_9= 'false' ) ) ) ) ) ( ( ( ( ({...}? => ( ({...}? => (otherlv_11= '&' ( (lv_angleDefined_12_0= 'angle' ) ) (otherlv_13= '=' | otherlv_14= '==' ) ( (lv_angle_15_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= '&' ( ( ( (lv_blockingDefined_17_0= '!' ) ) otherlv_18= 'blocking' ) | ( ( (lv_blockingDefined_19_0= 'blocking' ) ) ( (otherlv_20= '!=' ( ( (lv_blocking_21_0= 'false' ) ) | otherlv_22= 'true' ) ) | ( (otherlv_23= '=' | otherlv_24= '==' ) ( ( (lv_blocking_25_0= 'true' ) ) | otherlv_26= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= '&' ( ( ( (lv_brokenDefined_28_0= '!' ) ) otherlv_29= 'broken' ) | ( ( (lv_brokenDefined_30_0= 'broken' ) ) ( (otherlv_31= '!=' ( ( (lv_broken_32_0= 'false' ) ) | otherlv_33= 'true' ) ) | ( (otherlv_34= '=' | otherlv_35= '==' ) ( ( (lv_broken_36_0= 'true' ) ) | otherlv_37= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_38= '&' ( ( ( (lv_castDefined_39_0= '!' ) ) otherlv_40= 'cast' ) | ( ( (lv_castDefined_41_0= 'cast' ) ) ( (otherlv_42= '!=' ( ( (lv_cast_43_0= 'false' ) ) | otherlv_44= 'true' ) ) | ( (otherlv_45= '=' | otherlv_46= '==' ) ( ( (lv_cast_47_0= 'true' ) ) | otherlv_48= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_49= '&' ( (lv_cooldownDefined_50_0= 'cooldown' ) ) (otherlv_51= '=' | otherlv_52= '==' ) ( (lv_cooldown_53_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_54= '&' ( (lv_damageDefined_55_0= 'damage' ) ) (otherlv_56= '=' | otherlv_57= '==' ) ( (lv_damage_58_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_59= '&' ( ( ( (lv_lefthandedDefined_60_0= '!' ) ) otherlv_61= 'lefthanded' ) | ( ( (lv_lefthandedDefined_62_0= 'lefthanded' ) ) ( (otherlv_63= '!=' ( ( (lv_lefthanded_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_lefthanded_68_0= 'true' ) ) | otherlv_69= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_70= '&' ( (lv_pullDefined_71_0= 'pull' ) ) (otherlv_72= '=' | otherlv_73= '==' ) ( (lv_pull_74_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_75= '&' ( ( ( (lv_pullingDefined_76_0= '!' ) ) otherlv_77= 'pulling' ) | ( ( (lv_pullingDefined_78_0= 'pulling' ) ) ( (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) ) | ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_86= '&' ( ( ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing' ) | ( ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_97= '&' ( (lv_timeDefined_98_0= 'time' ) ) (otherlv_99= '=' | otherlv_100= '==' ) ( (lv_time_101_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) ) ) ) ) ) )* ) ) )
            {
            // InternalMcmodel.g:9250:3: ( ( ( (lv_damagedDefined_0_0= '!' ) ) otherlv_1= 'damaged' ) | ( ( (lv_damagedDefined_2_0= 'damaged' ) ) ( (otherlv_3= '!=' ( ( (lv_damaged_4_0= 'false' ) ) | otherlv_5= 'true' ) ) | ( (otherlv_6= '=' | otherlv_7= '==' ) ( ( (lv_damaged_8_0= 'true' ) ) | otherlv_9= 'false' ) ) ) ) )
            int alt278=2;
            int LA278_0 = input.LA(1);

            if ( (LA278_0==60) ) {
                alt278=1;
            }
            else if ( (LA278_0==67) ) {
                alt278=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 278, 0, input);

                throw nvae;
            }
            switch (alt278) {
                case 1 :
                    // InternalMcmodel.g:9251:4: ( ( (lv_damagedDefined_0_0= '!' ) ) otherlv_1= 'damaged' )
                    {
                    // InternalMcmodel.g:9251:4: ( ( (lv_damagedDefined_0_0= '!' ) ) otherlv_1= 'damaged' )
                    // InternalMcmodel.g:9252:5: ( (lv_damagedDefined_0_0= '!' ) ) otherlv_1= 'damaged'
                    {
                    // InternalMcmodel.g:9252:5: ( (lv_damagedDefined_0_0= '!' ) )
                    // InternalMcmodel.g:9253:6: (lv_damagedDefined_0_0= '!' )
                    {
                    // InternalMcmodel.g:9253:6: (lv_damagedDefined_0_0= '!' )
                    // InternalMcmodel.g:9254:7: lv_damagedDefined_0_0= '!'
                    {
                    lv_damagedDefined_0_0=(Token)match(input,60,FOLLOW_48); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							newLeafNode(lv_damagedDefined_0_0, grammarAccess.getOverridePredicate_7Access().getDamagedDefinedExclamationMarkKeyword_0_0_0_0());
                      						
                    }
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElement(grammarAccess.getOverridePredicate_7Rule());
                      							}
                      							setWithLastConsumed(current, "damagedDefined", true, "!");
                      						
                    }

                    }


                    }

                    otherlv_1=(Token)match(input,67,FOLLOW_37); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_1, grammarAccess.getOverridePredicate_7Access().getDamagedKeyword_0_0_1());
                      				
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalMcmodel.g:9272:4: ( ( (lv_damagedDefined_2_0= 'damaged' ) ) ( (otherlv_3= '!=' ( ( (lv_damaged_4_0= 'false' ) ) | otherlv_5= 'true' ) ) | ( (otherlv_6= '=' | otherlv_7= '==' ) ( ( (lv_damaged_8_0= 'true' ) ) | otherlv_9= 'false' ) ) ) )
                    {
                    // InternalMcmodel.g:9272:4: ( ( (lv_damagedDefined_2_0= 'damaged' ) ) ( (otherlv_3= '!=' ( ( (lv_damaged_4_0= 'false' ) ) | otherlv_5= 'true' ) ) | ( (otherlv_6= '=' | otherlv_7= '==' ) ( ( (lv_damaged_8_0= 'true' ) ) | otherlv_9= 'false' ) ) ) )
                    // InternalMcmodel.g:9273:5: ( (lv_damagedDefined_2_0= 'damaged' ) ) ( (otherlv_3= '!=' ( ( (lv_damaged_4_0= 'false' ) ) | otherlv_5= 'true' ) ) | ( (otherlv_6= '=' | otherlv_7= '==' ) ( ( (lv_damaged_8_0= 'true' ) ) | otherlv_9= 'false' ) ) )
                    {
                    // InternalMcmodel.g:9273:5: ( (lv_damagedDefined_2_0= 'damaged' ) )
                    // InternalMcmodel.g:9274:6: (lv_damagedDefined_2_0= 'damaged' )
                    {
                    // InternalMcmodel.g:9274:6: (lv_damagedDefined_2_0= 'damaged' )
                    // InternalMcmodel.g:9275:7: lv_damagedDefined_2_0= 'damaged'
                    {
                    lv_damagedDefined_2_0=(Token)match(input,67,FOLLOW_40); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							newLeafNode(lv_damagedDefined_2_0, grammarAccess.getOverridePredicate_7Access().getDamagedDefinedDamagedKeyword_0_1_0_0());
                      						
                    }
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElement(grammarAccess.getOverridePredicate_7Rule());
                      							}
                      							setWithLastConsumed(current, "damagedDefined", true, "damaged");
                      						
                    }

                    }


                    }

                    // InternalMcmodel.g:9287:5: ( (otherlv_3= '!=' ( ( (lv_damaged_4_0= 'false' ) ) | otherlv_5= 'true' ) ) | ( (otherlv_6= '=' | otherlv_7= '==' ) ( ( (lv_damaged_8_0= 'true' ) ) | otherlv_9= 'false' ) ) )
                    int alt277=2;
                    int LA277_0 = input.LA(1);

                    if ( (LA277_0==62) ) {
                        alt277=1;
                    }
                    else if ( (LA277_0==18||LA277_0==58) ) {
                        alt277=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 277, 0, input);

                        throw nvae;
                    }
                    switch (alt277) {
                        case 1 :
                            // InternalMcmodel.g:9288:6: (otherlv_3= '!=' ( ( (lv_damaged_4_0= 'false' ) ) | otherlv_5= 'true' ) )
                            {
                            // InternalMcmodel.g:9288:6: (otherlv_3= '!=' ( ( (lv_damaged_4_0= 'false' ) ) | otherlv_5= 'true' ) )
                            // InternalMcmodel.g:9289:7: otherlv_3= '!=' ( ( (lv_damaged_4_0= 'false' ) ) | otherlv_5= 'true' )
                            {
                            otherlv_3=(Token)match(input,62,FOLLOW_7); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(otherlv_3, grammarAccess.getOverridePredicate_7Access().getExclamationMarkEqualsSignKeyword_0_1_1_0_0());
                              						
                            }
                            // InternalMcmodel.g:9293:7: ( ( (lv_damaged_4_0= 'false' ) ) | otherlv_5= 'true' )
                            int alt274=2;
                            int LA274_0 = input.LA(1);

                            if ( (LA274_0==21) ) {
                                alt274=1;
                            }
                            else if ( (LA274_0==20) ) {
                                alt274=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 274, 0, input);

                                throw nvae;
                            }
                            switch (alt274) {
                                case 1 :
                                    // InternalMcmodel.g:9294:8: ( (lv_damaged_4_0= 'false' ) )
                                    {
                                    // InternalMcmodel.g:9294:8: ( (lv_damaged_4_0= 'false' ) )
                                    // InternalMcmodel.g:9295:9: (lv_damaged_4_0= 'false' )
                                    {
                                    // InternalMcmodel.g:9295:9: (lv_damaged_4_0= 'false' )
                                    // InternalMcmodel.g:9296:10: lv_damaged_4_0= 'false'
                                    {
                                    lv_damaged_4_0=(Token)match(input,21,FOLLOW_37); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      										newLeafNode(lv_damaged_4_0, grammarAccess.getOverridePredicate_7Access().getDamagedFalseKeyword_0_1_1_0_1_0_0());
                                      									
                                    }
                                    if ( state.backtracking==0 ) {

                                      										if (current==null) {
                                      											current = createModelElement(grammarAccess.getOverridePredicate_7Rule());
                                      										}
                                      										setWithLastConsumed(current, "damaged", true, "false");
                                      									
                                    }

                                    }


                                    }


                                    }
                                    break;
                                case 2 :
                                    // InternalMcmodel.g:9309:8: otherlv_5= 'true'
                                    {
                                    otherlv_5=(Token)match(input,20,FOLLOW_37); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(otherlv_5, grammarAccess.getOverridePredicate_7Access().getTrueKeyword_0_1_1_0_1_1());
                                      							
                                    }

                                    }
                                    break;

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalMcmodel.g:9316:6: ( (otherlv_6= '=' | otherlv_7= '==' ) ( ( (lv_damaged_8_0= 'true' ) ) | otherlv_9= 'false' ) )
                            {
                            // InternalMcmodel.g:9316:6: ( (otherlv_6= '=' | otherlv_7= '==' ) ( ( (lv_damaged_8_0= 'true' ) ) | otherlv_9= 'false' ) )
                            // InternalMcmodel.g:9317:7: (otherlv_6= '=' | otherlv_7= '==' ) ( ( (lv_damaged_8_0= 'true' ) ) | otherlv_9= 'false' )
                            {
                            // InternalMcmodel.g:9317:7: (otherlv_6= '=' | otherlv_7= '==' )
                            int alt275=2;
                            int LA275_0 = input.LA(1);

                            if ( (LA275_0==18) ) {
                                alt275=1;
                            }
                            else if ( (LA275_0==58) ) {
                                alt275=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 275, 0, input);

                                throw nvae;
                            }
                            switch (alt275) {
                                case 1 :
                                    // InternalMcmodel.g:9318:8: otherlv_6= '='
                                    {
                                    otherlv_6=(Token)match(input,18,FOLLOW_7); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(otherlv_6, grammarAccess.getOverridePredicate_7Access().getEqualsSignKeyword_0_1_1_1_0_0());
                                      							
                                    }

                                    }
                                    break;
                                case 2 :
                                    // InternalMcmodel.g:9323:8: otherlv_7= '=='
                                    {
                                    otherlv_7=(Token)match(input,58,FOLLOW_7); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(otherlv_7, grammarAccess.getOverridePredicate_7Access().getEqualsSignEqualsSignKeyword_0_1_1_1_0_1());
                                      							
                                    }

                                    }
                                    break;

                            }

                            // InternalMcmodel.g:9328:7: ( ( (lv_damaged_8_0= 'true' ) ) | otherlv_9= 'false' )
                            int alt276=2;
                            int LA276_0 = input.LA(1);

                            if ( (LA276_0==20) ) {
                                alt276=1;
                            }
                            else if ( (LA276_0==21) ) {
                                alt276=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 276, 0, input);

                                throw nvae;
                            }
                            switch (alt276) {
                                case 1 :
                                    // InternalMcmodel.g:9329:8: ( (lv_damaged_8_0= 'true' ) )
                                    {
                                    // InternalMcmodel.g:9329:8: ( (lv_damaged_8_0= 'true' ) )
                                    // InternalMcmodel.g:9330:9: (lv_damaged_8_0= 'true' )
                                    {
                                    // InternalMcmodel.g:9330:9: (lv_damaged_8_0= 'true' )
                                    // InternalMcmodel.g:9331:10: lv_damaged_8_0= 'true'
                                    {
                                    lv_damaged_8_0=(Token)match(input,20,FOLLOW_37); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      										newLeafNode(lv_damaged_8_0, grammarAccess.getOverridePredicate_7Access().getDamagedTrueKeyword_0_1_1_1_1_0_0());
                                      									
                                    }
                                    if ( state.backtracking==0 ) {

                                      										if (current==null) {
                                      											current = createModelElement(grammarAccess.getOverridePredicate_7Rule());
                                      										}
                                      										setWithLastConsumed(current, "damaged", true, "true");
                                      									
                                    }

                                    }


                                    }


                                    }
                                    break;
                                case 2 :
                                    // InternalMcmodel.g:9344:8: otherlv_9= 'false'
                                    {
                                    otherlv_9=(Token)match(input,21,FOLLOW_37); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(otherlv_9, grammarAccess.getOverridePredicate_7Access().getFalseKeyword_0_1_1_1_1_1());
                                      							
                                    }

                                    }
                                    break;

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;

            }

            // InternalMcmodel.g:9353:3: ( ( ( ( ({...}? => ( ({...}? => (otherlv_11= '&' ( (lv_angleDefined_12_0= 'angle' ) ) (otherlv_13= '=' | otherlv_14= '==' ) ( (lv_angle_15_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= '&' ( ( ( (lv_blockingDefined_17_0= '!' ) ) otherlv_18= 'blocking' ) | ( ( (lv_blockingDefined_19_0= 'blocking' ) ) ( (otherlv_20= '!=' ( ( (lv_blocking_21_0= 'false' ) ) | otherlv_22= 'true' ) ) | ( (otherlv_23= '=' | otherlv_24= '==' ) ( ( (lv_blocking_25_0= 'true' ) ) | otherlv_26= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= '&' ( ( ( (lv_brokenDefined_28_0= '!' ) ) otherlv_29= 'broken' ) | ( ( (lv_brokenDefined_30_0= 'broken' ) ) ( (otherlv_31= '!=' ( ( (lv_broken_32_0= 'false' ) ) | otherlv_33= 'true' ) ) | ( (otherlv_34= '=' | otherlv_35= '==' ) ( ( (lv_broken_36_0= 'true' ) ) | otherlv_37= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_38= '&' ( ( ( (lv_castDefined_39_0= '!' ) ) otherlv_40= 'cast' ) | ( ( (lv_castDefined_41_0= 'cast' ) ) ( (otherlv_42= '!=' ( ( (lv_cast_43_0= 'false' ) ) | otherlv_44= 'true' ) ) | ( (otherlv_45= '=' | otherlv_46= '==' ) ( ( (lv_cast_47_0= 'true' ) ) | otherlv_48= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_49= '&' ( (lv_cooldownDefined_50_0= 'cooldown' ) ) (otherlv_51= '=' | otherlv_52= '==' ) ( (lv_cooldown_53_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_54= '&' ( (lv_damageDefined_55_0= 'damage' ) ) (otherlv_56= '=' | otherlv_57= '==' ) ( (lv_damage_58_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_59= '&' ( ( ( (lv_lefthandedDefined_60_0= '!' ) ) otherlv_61= 'lefthanded' ) | ( ( (lv_lefthandedDefined_62_0= 'lefthanded' ) ) ( (otherlv_63= '!=' ( ( (lv_lefthanded_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_lefthanded_68_0= 'true' ) ) | otherlv_69= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_70= '&' ( (lv_pullDefined_71_0= 'pull' ) ) (otherlv_72= '=' | otherlv_73= '==' ) ( (lv_pull_74_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_75= '&' ( ( ( (lv_pullingDefined_76_0= '!' ) ) otherlv_77= 'pulling' ) | ( ( (lv_pullingDefined_78_0= 'pulling' ) ) ( (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) ) | ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_86= '&' ( ( ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing' ) | ( ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_97= '&' ( (lv_timeDefined_98_0= 'time' ) ) (otherlv_99= '=' | otherlv_100= '==' ) ( (lv_time_101_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) ) ) ) ) ) )* ) ) )
            // InternalMcmodel.g:9354:4: ( ( ( ({...}? => ( ({...}? => (otherlv_11= '&' ( (lv_angleDefined_12_0= 'angle' ) ) (otherlv_13= '=' | otherlv_14= '==' ) ( (lv_angle_15_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= '&' ( ( ( (lv_blockingDefined_17_0= '!' ) ) otherlv_18= 'blocking' ) | ( ( (lv_blockingDefined_19_0= 'blocking' ) ) ( (otherlv_20= '!=' ( ( (lv_blocking_21_0= 'false' ) ) | otherlv_22= 'true' ) ) | ( (otherlv_23= '=' | otherlv_24= '==' ) ( ( (lv_blocking_25_0= 'true' ) ) | otherlv_26= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= '&' ( ( ( (lv_brokenDefined_28_0= '!' ) ) otherlv_29= 'broken' ) | ( ( (lv_brokenDefined_30_0= 'broken' ) ) ( (otherlv_31= '!=' ( ( (lv_broken_32_0= 'false' ) ) | otherlv_33= 'true' ) ) | ( (otherlv_34= '=' | otherlv_35= '==' ) ( ( (lv_broken_36_0= 'true' ) ) | otherlv_37= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_38= '&' ( ( ( (lv_castDefined_39_0= '!' ) ) otherlv_40= 'cast' ) | ( ( (lv_castDefined_41_0= 'cast' ) ) ( (otherlv_42= '!=' ( ( (lv_cast_43_0= 'false' ) ) | otherlv_44= 'true' ) ) | ( (otherlv_45= '=' | otherlv_46= '==' ) ( ( (lv_cast_47_0= 'true' ) ) | otherlv_48= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_49= '&' ( (lv_cooldownDefined_50_0= 'cooldown' ) ) (otherlv_51= '=' | otherlv_52= '==' ) ( (lv_cooldown_53_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_54= '&' ( (lv_damageDefined_55_0= 'damage' ) ) (otherlv_56= '=' | otherlv_57= '==' ) ( (lv_damage_58_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_59= '&' ( ( ( (lv_lefthandedDefined_60_0= '!' ) ) otherlv_61= 'lefthanded' ) | ( ( (lv_lefthandedDefined_62_0= 'lefthanded' ) ) ( (otherlv_63= '!=' ( ( (lv_lefthanded_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_lefthanded_68_0= 'true' ) ) | otherlv_69= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_70= '&' ( (lv_pullDefined_71_0= 'pull' ) ) (otherlv_72= '=' | otherlv_73= '==' ) ( (lv_pull_74_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_75= '&' ( ( ( (lv_pullingDefined_76_0= '!' ) ) otherlv_77= 'pulling' ) | ( ( (lv_pullingDefined_78_0= 'pulling' ) ) ( (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) ) | ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_86= '&' ( ( ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing' ) | ( ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_97= '&' ( (lv_timeDefined_98_0= 'time' ) ) (otherlv_99= '=' | otherlv_100= '==' ) ( (lv_time_101_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) ) ) ) ) ) )* ) )
            {
            // InternalMcmodel.g:9354:4: ( ( ( ({...}? => ( ({...}? => (otherlv_11= '&' ( (lv_angleDefined_12_0= 'angle' ) ) (otherlv_13= '=' | otherlv_14= '==' ) ( (lv_angle_15_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= '&' ( ( ( (lv_blockingDefined_17_0= '!' ) ) otherlv_18= 'blocking' ) | ( ( (lv_blockingDefined_19_0= 'blocking' ) ) ( (otherlv_20= '!=' ( ( (lv_blocking_21_0= 'false' ) ) | otherlv_22= 'true' ) ) | ( (otherlv_23= '=' | otherlv_24= '==' ) ( ( (lv_blocking_25_0= 'true' ) ) | otherlv_26= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= '&' ( ( ( (lv_brokenDefined_28_0= '!' ) ) otherlv_29= 'broken' ) | ( ( (lv_brokenDefined_30_0= 'broken' ) ) ( (otherlv_31= '!=' ( ( (lv_broken_32_0= 'false' ) ) | otherlv_33= 'true' ) ) | ( (otherlv_34= '=' | otherlv_35= '==' ) ( ( (lv_broken_36_0= 'true' ) ) | otherlv_37= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_38= '&' ( ( ( (lv_castDefined_39_0= '!' ) ) otherlv_40= 'cast' ) | ( ( (lv_castDefined_41_0= 'cast' ) ) ( (otherlv_42= '!=' ( ( (lv_cast_43_0= 'false' ) ) | otherlv_44= 'true' ) ) | ( (otherlv_45= '=' | otherlv_46= '==' ) ( ( (lv_cast_47_0= 'true' ) ) | otherlv_48= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_49= '&' ( (lv_cooldownDefined_50_0= 'cooldown' ) ) (otherlv_51= '=' | otherlv_52= '==' ) ( (lv_cooldown_53_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_54= '&' ( (lv_damageDefined_55_0= 'damage' ) ) (otherlv_56= '=' | otherlv_57= '==' ) ( (lv_damage_58_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_59= '&' ( ( ( (lv_lefthandedDefined_60_0= '!' ) ) otherlv_61= 'lefthanded' ) | ( ( (lv_lefthandedDefined_62_0= 'lefthanded' ) ) ( (otherlv_63= '!=' ( ( (lv_lefthanded_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_lefthanded_68_0= 'true' ) ) | otherlv_69= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_70= '&' ( (lv_pullDefined_71_0= 'pull' ) ) (otherlv_72= '=' | otherlv_73= '==' ) ( (lv_pull_74_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_75= '&' ( ( ( (lv_pullingDefined_76_0= '!' ) ) otherlv_77= 'pulling' ) | ( ( (lv_pullingDefined_78_0= 'pulling' ) ) ( (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) ) | ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_86= '&' ( ( ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing' ) | ( ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_97= '&' ( (lv_timeDefined_98_0= 'time' ) ) (otherlv_99= '=' | otherlv_100= '==' ) ( (lv_time_101_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) ) ) ) ) ) )* ) )
            // InternalMcmodel.g:9355:5: ( ( ({...}? => ( ({...}? => (otherlv_11= '&' ( (lv_angleDefined_12_0= 'angle' ) ) (otherlv_13= '=' | otherlv_14= '==' ) ( (lv_angle_15_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= '&' ( ( ( (lv_blockingDefined_17_0= '!' ) ) otherlv_18= 'blocking' ) | ( ( (lv_blockingDefined_19_0= 'blocking' ) ) ( (otherlv_20= '!=' ( ( (lv_blocking_21_0= 'false' ) ) | otherlv_22= 'true' ) ) | ( (otherlv_23= '=' | otherlv_24= '==' ) ( ( (lv_blocking_25_0= 'true' ) ) | otherlv_26= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= '&' ( ( ( (lv_brokenDefined_28_0= '!' ) ) otherlv_29= 'broken' ) | ( ( (lv_brokenDefined_30_0= 'broken' ) ) ( (otherlv_31= '!=' ( ( (lv_broken_32_0= 'false' ) ) | otherlv_33= 'true' ) ) | ( (otherlv_34= '=' | otherlv_35= '==' ) ( ( (lv_broken_36_0= 'true' ) ) | otherlv_37= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_38= '&' ( ( ( (lv_castDefined_39_0= '!' ) ) otherlv_40= 'cast' ) | ( ( (lv_castDefined_41_0= 'cast' ) ) ( (otherlv_42= '!=' ( ( (lv_cast_43_0= 'false' ) ) | otherlv_44= 'true' ) ) | ( (otherlv_45= '=' | otherlv_46= '==' ) ( ( (lv_cast_47_0= 'true' ) ) | otherlv_48= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_49= '&' ( (lv_cooldownDefined_50_0= 'cooldown' ) ) (otherlv_51= '=' | otherlv_52= '==' ) ( (lv_cooldown_53_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_54= '&' ( (lv_damageDefined_55_0= 'damage' ) ) (otherlv_56= '=' | otherlv_57= '==' ) ( (lv_damage_58_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_59= '&' ( ( ( (lv_lefthandedDefined_60_0= '!' ) ) otherlv_61= 'lefthanded' ) | ( ( (lv_lefthandedDefined_62_0= 'lefthanded' ) ) ( (otherlv_63= '!=' ( ( (lv_lefthanded_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_lefthanded_68_0= 'true' ) ) | otherlv_69= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_70= '&' ( (lv_pullDefined_71_0= 'pull' ) ) (otherlv_72= '=' | otherlv_73= '==' ) ( (lv_pull_74_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_75= '&' ( ( ( (lv_pullingDefined_76_0= '!' ) ) otherlv_77= 'pulling' ) | ( ( (lv_pullingDefined_78_0= 'pulling' ) ) ( (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) ) | ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_86= '&' ( ( ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing' ) | ( ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_97= '&' ( (lv_timeDefined_98_0= 'time' ) ) (otherlv_99= '=' | otherlv_100= '==' ) ( (lv_time_101_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) ) ) ) ) ) )* )
            {
            getUnorderedGroupHelper().enter(grammarAccess.getOverridePredicate_7Access().getUnorderedGroup_1());
            // InternalMcmodel.g:9358:5: ( ( ({...}? => ( ({...}? => (otherlv_11= '&' ( (lv_angleDefined_12_0= 'angle' ) ) (otherlv_13= '=' | otherlv_14= '==' ) ( (lv_angle_15_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= '&' ( ( ( (lv_blockingDefined_17_0= '!' ) ) otherlv_18= 'blocking' ) | ( ( (lv_blockingDefined_19_0= 'blocking' ) ) ( (otherlv_20= '!=' ( ( (lv_blocking_21_0= 'false' ) ) | otherlv_22= 'true' ) ) | ( (otherlv_23= '=' | otherlv_24= '==' ) ( ( (lv_blocking_25_0= 'true' ) ) | otherlv_26= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= '&' ( ( ( (lv_brokenDefined_28_0= '!' ) ) otherlv_29= 'broken' ) | ( ( (lv_brokenDefined_30_0= 'broken' ) ) ( (otherlv_31= '!=' ( ( (lv_broken_32_0= 'false' ) ) | otherlv_33= 'true' ) ) | ( (otherlv_34= '=' | otherlv_35= '==' ) ( ( (lv_broken_36_0= 'true' ) ) | otherlv_37= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_38= '&' ( ( ( (lv_castDefined_39_0= '!' ) ) otherlv_40= 'cast' ) | ( ( (lv_castDefined_41_0= 'cast' ) ) ( (otherlv_42= '!=' ( ( (lv_cast_43_0= 'false' ) ) | otherlv_44= 'true' ) ) | ( (otherlv_45= '=' | otherlv_46= '==' ) ( ( (lv_cast_47_0= 'true' ) ) | otherlv_48= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_49= '&' ( (lv_cooldownDefined_50_0= 'cooldown' ) ) (otherlv_51= '=' | otherlv_52= '==' ) ( (lv_cooldown_53_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_54= '&' ( (lv_damageDefined_55_0= 'damage' ) ) (otherlv_56= '=' | otherlv_57= '==' ) ( (lv_damage_58_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_59= '&' ( ( ( (lv_lefthandedDefined_60_0= '!' ) ) otherlv_61= 'lefthanded' ) | ( ( (lv_lefthandedDefined_62_0= 'lefthanded' ) ) ( (otherlv_63= '!=' ( ( (lv_lefthanded_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_lefthanded_68_0= 'true' ) ) | otherlv_69= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_70= '&' ( (lv_pullDefined_71_0= 'pull' ) ) (otherlv_72= '=' | otherlv_73= '==' ) ( (lv_pull_74_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_75= '&' ( ( ( (lv_pullingDefined_76_0= '!' ) ) otherlv_77= 'pulling' ) | ( ( (lv_pullingDefined_78_0= 'pulling' ) ) ( (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) ) | ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_86= '&' ( ( ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing' ) | ( ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_97= '&' ( (lv_timeDefined_98_0= 'time' ) ) (otherlv_99= '=' | otherlv_100= '==' ) ( (lv_time_101_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) ) ) ) ) ) )* )
            // InternalMcmodel.g:9359:6: ( ({...}? => ( ({...}? => (otherlv_11= '&' ( (lv_angleDefined_12_0= 'angle' ) ) (otherlv_13= '=' | otherlv_14= '==' ) ( (lv_angle_15_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= '&' ( ( ( (lv_blockingDefined_17_0= '!' ) ) otherlv_18= 'blocking' ) | ( ( (lv_blockingDefined_19_0= 'blocking' ) ) ( (otherlv_20= '!=' ( ( (lv_blocking_21_0= 'false' ) ) | otherlv_22= 'true' ) ) | ( (otherlv_23= '=' | otherlv_24= '==' ) ( ( (lv_blocking_25_0= 'true' ) ) | otherlv_26= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= '&' ( ( ( (lv_brokenDefined_28_0= '!' ) ) otherlv_29= 'broken' ) | ( ( (lv_brokenDefined_30_0= 'broken' ) ) ( (otherlv_31= '!=' ( ( (lv_broken_32_0= 'false' ) ) | otherlv_33= 'true' ) ) | ( (otherlv_34= '=' | otherlv_35= '==' ) ( ( (lv_broken_36_0= 'true' ) ) | otherlv_37= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_38= '&' ( ( ( (lv_castDefined_39_0= '!' ) ) otherlv_40= 'cast' ) | ( ( (lv_castDefined_41_0= 'cast' ) ) ( (otherlv_42= '!=' ( ( (lv_cast_43_0= 'false' ) ) | otherlv_44= 'true' ) ) | ( (otherlv_45= '=' | otherlv_46= '==' ) ( ( (lv_cast_47_0= 'true' ) ) | otherlv_48= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_49= '&' ( (lv_cooldownDefined_50_0= 'cooldown' ) ) (otherlv_51= '=' | otherlv_52= '==' ) ( (lv_cooldown_53_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_54= '&' ( (lv_damageDefined_55_0= 'damage' ) ) (otherlv_56= '=' | otherlv_57= '==' ) ( (lv_damage_58_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_59= '&' ( ( ( (lv_lefthandedDefined_60_0= '!' ) ) otherlv_61= 'lefthanded' ) | ( ( (lv_lefthandedDefined_62_0= 'lefthanded' ) ) ( (otherlv_63= '!=' ( ( (lv_lefthanded_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_lefthanded_68_0= 'true' ) ) | otherlv_69= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_70= '&' ( (lv_pullDefined_71_0= 'pull' ) ) (otherlv_72= '=' | otherlv_73= '==' ) ( (lv_pull_74_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_75= '&' ( ( ( (lv_pullingDefined_76_0= '!' ) ) otherlv_77= 'pulling' ) | ( ( (lv_pullingDefined_78_0= 'pulling' ) ) ( (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) ) | ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_86= '&' ( ( ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing' ) | ( ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_97= '&' ( (lv_timeDefined_98_0= 'time' ) ) (otherlv_99= '=' | otherlv_100= '==' ) ( (lv_time_101_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) ) ) ) ) ) )*
            {
            // InternalMcmodel.g:9359:6: ( ({...}? => ( ({...}? => (otherlv_11= '&' ( (lv_angleDefined_12_0= 'angle' ) ) (otherlv_13= '=' | otherlv_14= '==' ) ( (lv_angle_15_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= '&' ( ( ( (lv_blockingDefined_17_0= '!' ) ) otherlv_18= 'blocking' ) | ( ( (lv_blockingDefined_19_0= 'blocking' ) ) ( (otherlv_20= '!=' ( ( (lv_blocking_21_0= 'false' ) ) | otherlv_22= 'true' ) ) | ( (otherlv_23= '=' | otherlv_24= '==' ) ( ( (lv_blocking_25_0= 'true' ) ) | otherlv_26= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= '&' ( ( ( (lv_brokenDefined_28_0= '!' ) ) otherlv_29= 'broken' ) | ( ( (lv_brokenDefined_30_0= 'broken' ) ) ( (otherlv_31= '!=' ( ( (lv_broken_32_0= 'false' ) ) | otherlv_33= 'true' ) ) | ( (otherlv_34= '=' | otherlv_35= '==' ) ( ( (lv_broken_36_0= 'true' ) ) | otherlv_37= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_38= '&' ( ( ( (lv_castDefined_39_0= '!' ) ) otherlv_40= 'cast' ) | ( ( (lv_castDefined_41_0= 'cast' ) ) ( (otherlv_42= '!=' ( ( (lv_cast_43_0= 'false' ) ) | otherlv_44= 'true' ) ) | ( (otherlv_45= '=' | otherlv_46= '==' ) ( ( (lv_cast_47_0= 'true' ) ) | otherlv_48= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_49= '&' ( (lv_cooldownDefined_50_0= 'cooldown' ) ) (otherlv_51= '=' | otherlv_52= '==' ) ( (lv_cooldown_53_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_54= '&' ( (lv_damageDefined_55_0= 'damage' ) ) (otherlv_56= '=' | otherlv_57= '==' ) ( (lv_damage_58_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_59= '&' ( ( ( (lv_lefthandedDefined_60_0= '!' ) ) otherlv_61= 'lefthanded' ) | ( ( (lv_lefthandedDefined_62_0= 'lefthanded' ) ) ( (otherlv_63= '!=' ( ( (lv_lefthanded_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_lefthanded_68_0= 'true' ) ) | otherlv_69= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_70= '&' ( (lv_pullDefined_71_0= 'pull' ) ) (otherlv_72= '=' | otherlv_73= '==' ) ( (lv_pull_74_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_75= '&' ( ( ( (lv_pullingDefined_76_0= '!' ) ) otherlv_77= 'pulling' ) | ( ( (lv_pullingDefined_78_0= 'pulling' ) ) ( (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) ) | ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_86= '&' ( ( ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing' ) | ( ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_97= '&' ( (lv_timeDefined_98_0= 'time' ) ) (otherlv_99= '=' | otherlv_100= '==' ) ( (lv_time_101_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) ) ) ) ) ) )*
            loop315:
            do {
                int alt315=13;
                alt315 = dfa315.predict(input);
                switch (alt315) {
            	case 1 :
            	    // InternalMcmodel.g:9360:4: ({...}? => ( ({...}? => (otherlv_11= '&' ( (lv_angleDefined_12_0= 'angle' ) ) (otherlv_13= '=' | otherlv_14= '==' ) ( (lv_angle_15_0= RULE_PERCENTAGE ) ) ) ) ) )
            	    {
            	    // InternalMcmodel.g:9360:4: ({...}? => ( ({...}? => (otherlv_11= '&' ( (lv_angleDefined_12_0= 'angle' ) ) (otherlv_13= '=' | otherlv_14= '==' ) ( (lv_angle_15_0= RULE_PERCENTAGE ) ) ) ) ) )
            	    // InternalMcmodel.g:9361:5: {...}? => ( ({...}? => (otherlv_11= '&' ( (lv_angleDefined_12_0= 'angle' ) ) (otherlv_13= '=' | otherlv_14= '==' ) ( (lv_angle_15_0= RULE_PERCENTAGE ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_7Access().getUnorderedGroup_1(), 0) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_7", "getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_7Access().getUnorderedGroup_1(), 0)");
            	    }
            	    // InternalMcmodel.g:9361:116: ( ({...}? => (otherlv_11= '&' ( (lv_angleDefined_12_0= 'angle' ) ) (otherlv_13= '=' | otherlv_14= '==' ) ( (lv_angle_15_0= RULE_PERCENTAGE ) ) ) ) )
            	    // InternalMcmodel.g:9362:6: ({...}? => (otherlv_11= '&' ( (lv_angleDefined_12_0= 'angle' ) ) (otherlv_13= '=' | otherlv_14= '==' ) ( (lv_angle_15_0= RULE_PERCENTAGE ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getOverridePredicate_7Access().getUnorderedGroup_1(), 0);
            	    // InternalMcmodel.g:9365:9: ({...}? => (otherlv_11= '&' ( (lv_angleDefined_12_0= 'angle' ) ) (otherlv_13= '=' | otherlv_14= '==' ) ( (lv_angle_15_0= RULE_PERCENTAGE ) ) ) )
            	    // InternalMcmodel.g:9365:10: {...}? => (otherlv_11= '&' ( (lv_angleDefined_12_0= 'angle' ) ) (otherlv_13= '=' | otherlv_14= '==' ) ( (lv_angle_15_0= RULE_PERCENTAGE ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_7", "true");
            	    }
            	    // InternalMcmodel.g:9365:19: (otherlv_11= '&' ( (lv_angleDefined_12_0= 'angle' ) ) (otherlv_13= '=' | otherlv_14= '==' ) ( (lv_angle_15_0= RULE_PERCENTAGE ) ) )
            	    // InternalMcmodel.g:9365:20: otherlv_11= '&' ( (lv_angleDefined_12_0= 'angle' ) ) (otherlv_13= '=' | otherlv_14= '==' ) ( (lv_angle_15_0= RULE_PERCENTAGE ) )
            	    {
            	    otherlv_11=(Token)match(input,59,FOLLOW_58); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_11, grammarAccess.getOverridePredicate_7Access().getAmpersandKeyword_1_0_0());
            	      								
            	    }
            	    // InternalMcmodel.g:9369:9: ( (lv_angleDefined_12_0= 'angle' ) )
            	    // InternalMcmodel.g:9370:10: (lv_angleDefined_12_0= 'angle' )
            	    {
            	    // InternalMcmodel.g:9370:10: (lv_angleDefined_12_0= 'angle' )
            	    // InternalMcmodel.g:9371:11: lv_angleDefined_12_0= 'angle'
            	    {
            	    lv_angleDefined_12_0=(Token)match(input,38,FOLLOW_35); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											newLeafNode(lv_angleDefined_12_0, grammarAccess.getOverridePredicate_7Access().getAngleDefinedAngleKeyword_1_0_1_0());
            	      										
            	    }
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElement(grammarAccess.getOverridePredicate_7Rule());
            	      											}
            	      											setWithLastConsumed(current, "angleDefined", true, "angle");
            	      										
            	    }

            	    }


            	    }

            	    // InternalMcmodel.g:9383:9: (otherlv_13= '=' | otherlv_14= '==' )
            	    int alt279=2;
            	    int LA279_0 = input.LA(1);

            	    if ( (LA279_0==18) ) {
            	        alt279=1;
            	    }
            	    else if ( (LA279_0==58) ) {
            	        alt279=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 279, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt279) {
            	        case 1 :
            	            // InternalMcmodel.g:9384:10: otherlv_13= '='
            	            {
            	            otherlv_13=(Token)match(input,18,FOLLOW_36); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(otherlv_13, grammarAccess.getOverridePredicate_7Access().getEqualsSignKeyword_1_0_2_0());
            	              									
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalMcmodel.g:9389:10: otherlv_14= '=='
            	            {
            	            otherlv_14=(Token)match(input,58,FOLLOW_36); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(otherlv_14, grammarAccess.getOverridePredicate_7Access().getEqualsSignEqualsSignKeyword_1_0_2_1());
            	              									
            	            }

            	            }
            	            break;

            	    }

            	    // InternalMcmodel.g:9394:9: ( (lv_angle_15_0= RULE_PERCENTAGE ) )
            	    // InternalMcmodel.g:9395:10: (lv_angle_15_0= RULE_PERCENTAGE )
            	    {
            	    // InternalMcmodel.g:9395:10: (lv_angle_15_0= RULE_PERCENTAGE )
            	    // InternalMcmodel.g:9396:11: lv_angle_15_0= RULE_PERCENTAGE
            	    {
            	    lv_angle_15_0=(Token)match(input,RULE_PERCENTAGE,FOLLOW_37); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											newLeafNode(lv_angle_15_0, grammarAccess.getOverridePredicate_7Access().getAnglePERCENTAGETerminalRuleCall_1_0_3_0());
            	      										
            	    }
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElement(grammarAccess.getOverridePredicate_7Rule());
            	      											}
            	      											setWithLastConsumed(
            	      												current,
            	      												"angle",
            	      												lv_angle_15_0,
            	      												"com.raptor.mcmodel.Mcmodel.PERCENTAGE");
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getOverridePredicate_7Access().getUnorderedGroup_1());

            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // InternalMcmodel.g:9418:4: ({...}? => ( ({...}? => (otherlv_16= '&' ( ( ( (lv_blockingDefined_17_0= '!' ) ) otherlv_18= 'blocking' ) | ( ( (lv_blockingDefined_19_0= 'blocking' ) ) ( (otherlv_20= '!=' ( ( (lv_blocking_21_0= 'false' ) ) | otherlv_22= 'true' ) ) | ( (otherlv_23= '=' | otherlv_24= '==' ) ( ( (lv_blocking_25_0= 'true' ) ) | otherlv_26= 'false' ) ) ) ) ) ) ) ) )
            	    {
            	    // InternalMcmodel.g:9418:4: ({...}? => ( ({...}? => (otherlv_16= '&' ( ( ( (lv_blockingDefined_17_0= '!' ) ) otherlv_18= 'blocking' ) | ( ( (lv_blockingDefined_19_0= 'blocking' ) ) ( (otherlv_20= '!=' ( ( (lv_blocking_21_0= 'false' ) ) | otherlv_22= 'true' ) ) | ( (otherlv_23= '=' | otherlv_24= '==' ) ( ( (lv_blocking_25_0= 'true' ) ) | otherlv_26= 'false' ) ) ) ) ) ) ) ) )
            	    // InternalMcmodel.g:9419:5: {...}? => ( ({...}? => (otherlv_16= '&' ( ( ( (lv_blockingDefined_17_0= '!' ) ) otherlv_18= 'blocking' ) | ( ( (lv_blockingDefined_19_0= 'blocking' ) ) ( (otherlv_20= '!=' ( ( (lv_blocking_21_0= 'false' ) ) | otherlv_22= 'true' ) ) | ( (otherlv_23= '=' | otherlv_24= '==' ) ( ( (lv_blocking_25_0= 'true' ) ) | otherlv_26= 'false' ) ) ) ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_7Access().getUnorderedGroup_1(), 1) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_7", "getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_7Access().getUnorderedGroup_1(), 1)");
            	    }
            	    // InternalMcmodel.g:9419:116: ( ({...}? => (otherlv_16= '&' ( ( ( (lv_blockingDefined_17_0= '!' ) ) otherlv_18= 'blocking' ) | ( ( (lv_blockingDefined_19_0= 'blocking' ) ) ( (otherlv_20= '!=' ( ( (lv_blocking_21_0= 'false' ) ) | otherlv_22= 'true' ) ) | ( (otherlv_23= '=' | otherlv_24= '==' ) ( ( (lv_blocking_25_0= 'true' ) ) | otherlv_26= 'false' ) ) ) ) ) ) ) )
            	    // InternalMcmodel.g:9420:6: ({...}? => (otherlv_16= '&' ( ( ( (lv_blockingDefined_17_0= '!' ) ) otherlv_18= 'blocking' ) | ( ( (lv_blockingDefined_19_0= 'blocking' ) ) ( (otherlv_20= '!=' ( ( (lv_blocking_21_0= 'false' ) ) | otherlv_22= 'true' ) ) | ( (otherlv_23= '=' | otherlv_24= '==' ) ( ( (lv_blocking_25_0= 'true' ) ) | otherlv_26= 'false' ) ) ) ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getOverridePredicate_7Access().getUnorderedGroup_1(), 1);
            	    // InternalMcmodel.g:9423:9: ({...}? => (otherlv_16= '&' ( ( ( (lv_blockingDefined_17_0= '!' ) ) otherlv_18= 'blocking' ) | ( ( (lv_blockingDefined_19_0= 'blocking' ) ) ( (otherlv_20= '!=' ( ( (lv_blocking_21_0= 'false' ) ) | otherlv_22= 'true' ) ) | ( (otherlv_23= '=' | otherlv_24= '==' ) ( ( (lv_blocking_25_0= 'true' ) ) | otherlv_26= 'false' ) ) ) ) ) ) )
            	    // InternalMcmodel.g:9423:10: {...}? => (otherlv_16= '&' ( ( ( (lv_blockingDefined_17_0= '!' ) ) otherlv_18= 'blocking' ) | ( ( (lv_blockingDefined_19_0= 'blocking' ) ) ( (otherlv_20= '!=' ( ( (lv_blocking_21_0= 'false' ) ) | otherlv_22= 'true' ) ) | ( (otherlv_23= '=' | otherlv_24= '==' ) ( ( (lv_blocking_25_0= 'true' ) ) | otherlv_26= 'false' ) ) ) ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_7", "true");
            	    }
            	    // InternalMcmodel.g:9423:19: (otherlv_16= '&' ( ( ( (lv_blockingDefined_17_0= '!' ) ) otherlv_18= 'blocking' ) | ( ( (lv_blockingDefined_19_0= 'blocking' ) ) ( (otherlv_20= '!=' ( ( (lv_blocking_21_0= 'false' ) ) | otherlv_22= 'true' ) ) | ( (otherlv_23= '=' | otherlv_24= '==' ) ( ( (lv_blocking_25_0= 'true' ) ) | otherlv_26= 'false' ) ) ) ) ) )
            	    // InternalMcmodel.g:9423:20: otherlv_16= '&' ( ( ( (lv_blockingDefined_17_0= '!' ) ) otherlv_18= 'blocking' ) | ( ( (lv_blockingDefined_19_0= 'blocking' ) ) ( (otherlv_20= '!=' ( ( (lv_blocking_21_0= 'false' ) ) | otherlv_22= 'true' ) ) | ( (otherlv_23= '=' | otherlv_24= '==' ) ( ( (lv_blocking_25_0= 'true' ) ) | otherlv_26= 'false' ) ) ) ) )
            	    {
            	    otherlv_16=(Token)match(input,59,FOLLOW_38); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_16, grammarAccess.getOverridePredicate_7Access().getAmpersandKeyword_1_1_0());
            	      								
            	    }
            	    // InternalMcmodel.g:9427:9: ( ( ( (lv_blockingDefined_17_0= '!' ) ) otherlv_18= 'blocking' ) | ( ( (lv_blockingDefined_19_0= 'blocking' ) ) ( (otherlv_20= '!=' ( ( (lv_blocking_21_0= 'false' ) ) | otherlv_22= 'true' ) ) | ( (otherlv_23= '=' | otherlv_24= '==' ) ( ( (lv_blocking_25_0= 'true' ) ) | otherlv_26= 'false' ) ) ) ) )
            	    int alt284=2;
            	    int LA284_0 = input.LA(1);

            	    if ( (LA284_0==60) ) {
            	        alt284=1;
            	    }
            	    else if ( (LA284_0==61) ) {
            	        alt284=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 284, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt284) {
            	        case 1 :
            	            // InternalMcmodel.g:9428:10: ( ( (lv_blockingDefined_17_0= '!' ) ) otherlv_18= 'blocking' )
            	            {
            	            // InternalMcmodel.g:9428:10: ( ( (lv_blockingDefined_17_0= '!' ) ) otherlv_18= 'blocking' )
            	            // InternalMcmodel.g:9429:11: ( (lv_blockingDefined_17_0= '!' ) ) otherlv_18= 'blocking'
            	            {
            	            // InternalMcmodel.g:9429:11: ( (lv_blockingDefined_17_0= '!' ) )
            	            // InternalMcmodel.g:9430:12: (lv_blockingDefined_17_0= '!' )
            	            {
            	            // InternalMcmodel.g:9430:12: (lv_blockingDefined_17_0= '!' )
            	            // InternalMcmodel.g:9431:13: lv_blockingDefined_17_0= '!'
            	            {
            	            lv_blockingDefined_17_0=(Token)match(input,60,FOLLOW_39); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              													newLeafNode(lv_blockingDefined_17_0, grammarAccess.getOverridePredicate_7Access().getBlockingDefinedExclamationMarkKeyword_1_1_1_0_0_0());
            	              												
            	            }
            	            if ( state.backtracking==0 ) {

            	              													if (current==null) {
            	              														current = createModelElement(grammarAccess.getOverridePredicate_7Rule());
            	              													}
            	              													setWithLastConsumed(current, "blockingDefined", true, "!");
            	              												
            	            }

            	            }


            	            }

            	            otherlv_18=(Token)match(input,61,FOLLOW_37); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              											newLeafNode(otherlv_18, grammarAccess.getOverridePredicate_7Access().getBlockingKeyword_1_1_1_0_1());
            	              										
            	            }

            	            }


            	            }
            	            break;
            	        case 2 :
            	            // InternalMcmodel.g:9449:10: ( ( (lv_blockingDefined_19_0= 'blocking' ) ) ( (otherlv_20= '!=' ( ( (lv_blocking_21_0= 'false' ) ) | otherlv_22= 'true' ) ) | ( (otherlv_23= '=' | otherlv_24= '==' ) ( ( (lv_blocking_25_0= 'true' ) ) | otherlv_26= 'false' ) ) ) )
            	            {
            	            // InternalMcmodel.g:9449:10: ( ( (lv_blockingDefined_19_0= 'blocking' ) ) ( (otherlv_20= '!=' ( ( (lv_blocking_21_0= 'false' ) ) | otherlv_22= 'true' ) ) | ( (otherlv_23= '=' | otherlv_24= '==' ) ( ( (lv_blocking_25_0= 'true' ) ) | otherlv_26= 'false' ) ) ) )
            	            // InternalMcmodel.g:9450:11: ( (lv_blockingDefined_19_0= 'blocking' ) ) ( (otherlv_20= '!=' ( ( (lv_blocking_21_0= 'false' ) ) | otherlv_22= 'true' ) ) | ( (otherlv_23= '=' | otherlv_24= '==' ) ( ( (lv_blocking_25_0= 'true' ) ) | otherlv_26= 'false' ) ) )
            	            {
            	            // InternalMcmodel.g:9450:11: ( (lv_blockingDefined_19_0= 'blocking' ) )
            	            // InternalMcmodel.g:9451:12: (lv_blockingDefined_19_0= 'blocking' )
            	            {
            	            // InternalMcmodel.g:9451:12: (lv_blockingDefined_19_0= 'blocking' )
            	            // InternalMcmodel.g:9452:13: lv_blockingDefined_19_0= 'blocking'
            	            {
            	            lv_blockingDefined_19_0=(Token)match(input,61,FOLLOW_40); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              													newLeafNode(lv_blockingDefined_19_0, grammarAccess.getOverridePredicate_7Access().getBlockingDefinedBlockingKeyword_1_1_1_1_0_0());
            	              												
            	            }
            	            if ( state.backtracking==0 ) {

            	              													if (current==null) {
            	              														current = createModelElement(grammarAccess.getOverridePredicate_7Rule());
            	              													}
            	              													setWithLastConsumed(current, "blockingDefined", true, "blocking");
            	              												
            	            }

            	            }


            	            }

            	            // InternalMcmodel.g:9464:11: ( (otherlv_20= '!=' ( ( (lv_blocking_21_0= 'false' ) ) | otherlv_22= 'true' ) ) | ( (otherlv_23= '=' | otherlv_24= '==' ) ( ( (lv_blocking_25_0= 'true' ) ) | otherlv_26= 'false' ) ) )
            	            int alt283=2;
            	            int LA283_0 = input.LA(1);

            	            if ( (LA283_0==62) ) {
            	                alt283=1;
            	            }
            	            else if ( (LA283_0==18||LA283_0==58) ) {
            	                alt283=2;
            	            }
            	            else {
            	                if (state.backtracking>0) {state.failed=true; return current;}
            	                NoViableAltException nvae =
            	                    new NoViableAltException("", 283, 0, input);

            	                throw nvae;
            	            }
            	            switch (alt283) {
            	                case 1 :
            	                    // InternalMcmodel.g:9465:12: (otherlv_20= '!=' ( ( (lv_blocking_21_0= 'false' ) ) | otherlv_22= 'true' ) )
            	                    {
            	                    // InternalMcmodel.g:9465:12: (otherlv_20= '!=' ( ( (lv_blocking_21_0= 'false' ) ) | otherlv_22= 'true' ) )
            	                    // InternalMcmodel.g:9466:13: otherlv_20= '!=' ( ( (lv_blocking_21_0= 'false' ) ) | otherlv_22= 'true' )
            	                    {
            	                    otherlv_20=(Token)match(input,62,FOLLOW_7); if (state.failed) return current;
            	                    if ( state.backtracking==0 ) {

            	                      													newLeafNode(otherlv_20, grammarAccess.getOverridePredicate_7Access().getExclamationMarkEqualsSignKeyword_1_1_1_1_1_0_0());
            	                      												
            	                    }
            	                    // InternalMcmodel.g:9470:13: ( ( (lv_blocking_21_0= 'false' ) ) | otherlv_22= 'true' )
            	                    int alt280=2;
            	                    int LA280_0 = input.LA(1);

            	                    if ( (LA280_0==21) ) {
            	                        alt280=1;
            	                    }
            	                    else if ( (LA280_0==20) ) {
            	                        alt280=2;
            	                    }
            	                    else {
            	                        if (state.backtracking>0) {state.failed=true; return current;}
            	                        NoViableAltException nvae =
            	                            new NoViableAltException("", 280, 0, input);

            	                        throw nvae;
            	                    }
            	                    switch (alt280) {
            	                        case 1 :
            	                            // InternalMcmodel.g:9471:14: ( (lv_blocking_21_0= 'false' ) )
            	                            {
            	                            // InternalMcmodel.g:9471:14: ( (lv_blocking_21_0= 'false' ) )
            	                            // InternalMcmodel.g:9472:15: (lv_blocking_21_0= 'false' )
            	                            {
            	                            // InternalMcmodel.g:9472:15: (lv_blocking_21_0= 'false' )
            	                            // InternalMcmodel.g:9473:16: lv_blocking_21_0= 'false'
            	                            {
            	                            lv_blocking_21_0=(Token)match(input,21,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              																newLeafNode(lv_blocking_21_0, grammarAccess.getOverridePredicate_7Access().getBlockingFalseKeyword_1_1_1_1_1_0_1_0_0());
            	                              															
            	                            }
            	                            if ( state.backtracking==0 ) {

            	                              																if (current==null) {
            	                              																	current = createModelElement(grammarAccess.getOverridePredicate_7Rule());
            	                              																}
            	                              																setWithLastConsumed(current, "blocking", true, "false");
            	                              															
            	                            }

            	                            }


            	                            }


            	                            }
            	                            break;
            	                        case 2 :
            	                            // InternalMcmodel.g:9486:14: otherlv_22= 'true'
            	                            {
            	                            otherlv_22=(Token)match(input,20,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_22, grammarAccess.getOverridePredicate_7Access().getTrueKeyword_1_1_1_1_1_0_1_1());
            	                              													
            	                            }

            	                            }
            	                            break;

            	                    }


            	                    }


            	                    }
            	                    break;
            	                case 2 :
            	                    // InternalMcmodel.g:9493:12: ( (otherlv_23= '=' | otherlv_24= '==' ) ( ( (lv_blocking_25_0= 'true' ) ) | otherlv_26= 'false' ) )
            	                    {
            	                    // InternalMcmodel.g:9493:12: ( (otherlv_23= '=' | otherlv_24= '==' ) ( ( (lv_blocking_25_0= 'true' ) ) | otherlv_26= 'false' ) )
            	                    // InternalMcmodel.g:9494:13: (otherlv_23= '=' | otherlv_24= '==' ) ( ( (lv_blocking_25_0= 'true' ) ) | otherlv_26= 'false' )
            	                    {
            	                    // InternalMcmodel.g:9494:13: (otherlv_23= '=' | otherlv_24= '==' )
            	                    int alt281=2;
            	                    int LA281_0 = input.LA(1);

            	                    if ( (LA281_0==18) ) {
            	                        alt281=1;
            	                    }
            	                    else if ( (LA281_0==58) ) {
            	                        alt281=2;
            	                    }
            	                    else {
            	                        if (state.backtracking>0) {state.failed=true; return current;}
            	                        NoViableAltException nvae =
            	                            new NoViableAltException("", 281, 0, input);

            	                        throw nvae;
            	                    }
            	                    switch (alt281) {
            	                        case 1 :
            	                            // InternalMcmodel.g:9495:14: otherlv_23= '='
            	                            {
            	                            otherlv_23=(Token)match(input,18,FOLLOW_7); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_23, grammarAccess.getOverridePredicate_7Access().getEqualsSignKeyword_1_1_1_1_1_1_0_0());
            	                              													
            	                            }

            	                            }
            	                            break;
            	                        case 2 :
            	                            // InternalMcmodel.g:9500:14: otherlv_24= '=='
            	                            {
            	                            otherlv_24=(Token)match(input,58,FOLLOW_7); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_24, grammarAccess.getOverridePredicate_7Access().getEqualsSignEqualsSignKeyword_1_1_1_1_1_1_0_1());
            	                              													
            	                            }

            	                            }
            	                            break;

            	                    }

            	                    // InternalMcmodel.g:9505:13: ( ( (lv_blocking_25_0= 'true' ) ) | otherlv_26= 'false' )
            	                    int alt282=2;
            	                    int LA282_0 = input.LA(1);

            	                    if ( (LA282_0==20) ) {
            	                        alt282=1;
            	                    }
            	                    else if ( (LA282_0==21) ) {
            	                        alt282=2;
            	                    }
            	                    else {
            	                        if (state.backtracking>0) {state.failed=true; return current;}
            	                        NoViableAltException nvae =
            	                            new NoViableAltException("", 282, 0, input);

            	                        throw nvae;
            	                    }
            	                    switch (alt282) {
            	                        case 1 :
            	                            // InternalMcmodel.g:9506:14: ( (lv_blocking_25_0= 'true' ) )
            	                            {
            	                            // InternalMcmodel.g:9506:14: ( (lv_blocking_25_0= 'true' ) )
            	                            // InternalMcmodel.g:9507:15: (lv_blocking_25_0= 'true' )
            	                            {
            	                            // InternalMcmodel.g:9507:15: (lv_blocking_25_0= 'true' )
            	                            // InternalMcmodel.g:9508:16: lv_blocking_25_0= 'true'
            	                            {
            	                            lv_blocking_25_0=(Token)match(input,20,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              																newLeafNode(lv_blocking_25_0, grammarAccess.getOverridePredicate_7Access().getBlockingTrueKeyword_1_1_1_1_1_1_1_0_0());
            	                              															
            	                            }
            	                            if ( state.backtracking==0 ) {

            	                              																if (current==null) {
            	                              																	current = createModelElement(grammarAccess.getOverridePredicate_7Rule());
            	                              																}
            	                              																setWithLastConsumed(current, "blocking", true, "true");
            	                              															
            	                            }

            	                            }


            	                            }


            	                            }
            	                            break;
            	                        case 2 :
            	                            // InternalMcmodel.g:9521:14: otherlv_26= 'false'
            	                            {
            	                            otherlv_26=(Token)match(input,21,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_26, grammarAccess.getOverridePredicate_7Access().getFalseKeyword_1_1_1_1_1_1_1_1());
            	                              													
            	                            }

            	                            }
            	                            break;

            	                    }


            	                    }


            	                    }
            	                    break;

            	            }


            	            }


            	            }
            	            break;

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getOverridePredicate_7Access().getUnorderedGroup_1());

            	    }


            	    }


            	    }
            	    break;
            	case 3 :
            	    // InternalMcmodel.g:9536:4: ({...}? => ( ({...}? => (otherlv_27= '&' ( ( ( (lv_brokenDefined_28_0= '!' ) ) otherlv_29= 'broken' ) | ( ( (lv_brokenDefined_30_0= 'broken' ) ) ( (otherlv_31= '!=' ( ( (lv_broken_32_0= 'false' ) ) | otherlv_33= 'true' ) ) | ( (otherlv_34= '=' | otherlv_35= '==' ) ( ( (lv_broken_36_0= 'true' ) ) | otherlv_37= 'false' ) ) ) ) ) ) ) ) )
            	    {
            	    // InternalMcmodel.g:9536:4: ({...}? => ( ({...}? => (otherlv_27= '&' ( ( ( (lv_brokenDefined_28_0= '!' ) ) otherlv_29= 'broken' ) | ( ( (lv_brokenDefined_30_0= 'broken' ) ) ( (otherlv_31= '!=' ( ( (lv_broken_32_0= 'false' ) ) | otherlv_33= 'true' ) ) | ( (otherlv_34= '=' | otherlv_35= '==' ) ( ( (lv_broken_36_0= 'true' ) ) | otherlv_37= 'false' ) ) ) ) ) ) ) ) )
            	    // InternalMcmodel.g:9537:5: {...}? => ( ({...}? => (otherlv_27= '&' ( ( ( (lv_brokenDefined_28_0= '!' ) ) otherlv_29= 'broken' ) | ( ( (lv_brokenDefined_30_0= 'broken' ) ) ( (otherlv_31= '!=' ( ( (lv_broken_32_0= 'false' ) ) | otherlv_33= 'true' ) ) | ( (otherlv_34= '=' | otherlv_35= '==' ) ( ( (lv_broken_36_0= 'true' ) ) | otherlv_37= 'false' ) ) ) ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_7Access().getUnorderedGroup_1(), 2) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_7", "getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_7Access().getUnorderedGroup_1(), 2)");
            	    }
            	    // InternalMcmodel.g:9537:116: ( ({...}? => (otherlv_27= '&' ( ( ( (lv_brokenDefined_28_0= '!' ) ) otherlv_29= 'broken' ) | ( ( (lv_brokenDefined_30_0= 'broken' ) ) ( (otherlv_31= '!=' ( ( (lv_broken_32_0= 'false' ) ) | otherlv_33= 'true' ) ) | ( (otherlv_34= '=' | otherlv_35= '==' ) ( ( (lv_broken_36_0= 'true' ) ) | otherlv_37= 'false' ) ) ) ) ) ) ) )
            	    // InternalMcmodel.g:9538:6: ({...}? => (otherlv_27= '&' ( ( ( (lv_brokenDefined_28_0= '!' ) ) otherlv_29= 'broken' ) | ( ( (lv_brokenDefined_30_0= 'broken' ) ) ( (otherlv_31= '!=' ( ( (lv_broken_32_0= 'false' ) ) | otherlv_33= 'true' ) ) | ( (otherlv_34= '=' | otherlv_35= '==' ) ( ( (lv_broken_36_0= 'true' ) ) | otherlv_37= 'false' ) ) ) ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getOverridePredicate_7Access().getUnorderedGroup_1(), 2);
            	    // InternalMcmodel.g:9541:9: ({...}? => (otherlv_27= '&' ( ( ( (lv_brokenDefined_28_0= '!' ) ) otherlv_29= 'broken' ) | ( ( (lv_brokenDefined_30_0= 'broken' ) ) ( (otherlv_31= '!=' ( ( (lv_broken_32_0= 'false' ) ) | otherlv_33= 'true' ) ) | ( (otherlv_34= '=' | otherlv_35= '==' ) ( ( (lv_broken_36_0= 'true' ) ) | otherlv_37= 'false' ) ) ) ) ) ) )
            	    // InternalMcmodel.g:9541:10: {...}? => (otherlv_27= '&' ( ( ( (lv_brokenDefined_28_0= '!' ) ) otherlv_29= 'broken' ) | ( ( (lv_brokenDefined_30_0= 'broken' ) ) ( (otherlv_31= '!=' ( ( (lv_broken_32_0= 'false' ) ) | otherlv_33= 'true' ) ) | ( (otherlv_34= '=' | otherlv_35= '==' ) ( ( (lv_broken_36_0= 'true' ) ) | otherlv_37= 'false' ) ) ) ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_7", "true");
            	    }
            	    // InternalMcmodel.g:9541:19: (otherlv_27= '&' ( ( ( (lv_brokenDefined_28_0= '!' ) ) otherlv_29= 'broken' ) | ( ( (lv_brokenDefined_30_0= 'broken' ) ) ( (otherlv_31= '!=' ( ( (lv_broken_32_0= 'false' ) ) | otherlv_33= 'true' ) ) | ( (otherlv_34= '=' | otherlv_35= '==' ) ( ( (lv_broken_36_0= 'true' ) ) | otherlv_37= 'false' ) ) ) ) ) )
            	    // InternalMcmodel.g:9541:20: otherlv_27= '&' ( ( ( (lv_brokenDefined_28_0= '!' ) ) otherlv_29= 'broken' ) | ( ( (lv_brokenDefined_30_0= 'broken' ) ) ( (otherlv_31= '!=' ( ( (lv_broken_32_0= 'false' ) ) | otherlv_33= 'true' ) ) | ( (otherlv_34= '=' | otherlv_35= '==' ) ( ( (lv_broken_36_0= 'true' ) ) | otherlv_37= 'false' ) ) ) ) )
            	    {
            	    otherlv_27=(Token)match(input,59,FOLLOW_41); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_27, grammarAccess.getOverridePredicate_7Access().getAmpersandKeyword_1_2_0());
            	      								
            	    }
            	    // InternalMcmodel.g:9545:9: ( ( ( (lv_brokenDefined_28_0= '!' ) ) otherlv_29= 'broken' ) | ( ( (lv_brokenDefined_30_0= 'broken' ) ) ( (otherlv_31= '!=' ( ( (lv_broken_32_0= 'false' ) ) | otherlv_33= 'true' ) ) | ( (otherlv_34= '=' | otherlv_35= '==' ) ( ( (lv_broken_36_0= 'true' ) ) | otherlv_37= 'false' ) ) ) ) )
            	    int alt289=2;
            	    int LA289_0 = input.LA(1);

            	    if ( (LA289_0==60) ) {
            	        alt289=1;
            	    }
            	    else if ( (LA289_0==63) ) {
            	        alt289=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 289, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt289) {
            	        case 1 :
            	            // InternalMcmodel.g:9546:10: ( ( (lv_brokenDefined_28_0= '!' ) ) otherlv_29= 'broken' )
            	            {
            	            // InternalMcmodel.g:9546:10: ( ( (lv_brokenDefined_28_0= '!' ) ) otherlv_29= 'broken' )
            	            // InternalMcmodel.g:9547:11: ( (lv_brokenDefined_28_0= '!' ) ) otherlv_29= 'broken'
            	            {
            	            // InternalMcmodel.g:9547:11: ( (lv_brokenDefined_28_0= '!' ) )
            	            // InternalMcmodel.g:9548:12: (lv_brokenDefined_28_0= '!' )
            	            {
            	            // InternalMcmodel.g:9548:12: (lv_brokenDefined_28_0= '!' )
            	            // InternalMcmodel.g:9549:13: lv_brokenDefined_28_0= '!'
            	            {
            	            lv_brokenDefined_28_0=(Token)match(input,60,FOLLOW_42); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              													newLeafNode(lv_brokenDefined_28_0, grammarAccess.getOverridePredicate_7Access().getBrokenDefinedExclamationMarkKeyword_1_2_1_0_0_0());
            	              												
            	            }
            	            if ( state.backtracking==0 ) {

            	              													if (current==null) {
            	              														current = createModelElement(grammarAccess.getOverridePredicate_7Rule());
            	              													}
            	              													setWithLastConsumed(current, "brokenDefined", true, "!");
            	              												
            	            }

            	            }


            	            }

            	            otherlv_29=(Token)match(input,63,FOLLOW_37); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              											newLeafNode(otherlv_29, grammarAccess.getOverridePredicate_7Access().getBrokenKeyword_1_2_1_0_1());
            	              										
            	            }

            	            }


            	            }
            	            break;
            	        case 2 :
            	            // InternalMcmodel.g:9567:10: ( ( (lv_brokenDefined_30_0= 'broken' ) ) ( (otherlv_31= '!=' ( ( (lv_broken_32_0= 'false' ) ) | otherlv_33= 'true' ) ) | ( (otherlv_34= '=' | otherlv_35= '==' ) ( ( (lv_broken_36_0= 'true' ) ) | otherlv_37= 'false' ) ) ) )
            	            {
            	            // InternalMcmodel.g:9567:10: ( ( (lv_brokenDefined_30_0= 'broken' ) ) ( (otherlv_31= '!=' ( ( (lv_broken_32_0= 'false' ) ) | otherlv_33= 'true' ) ) | ( (otherlv_34= '=' | otherlv_35= '==' ) ( ( (lv_broken_36_0= 'true' ) ) | otherlv_37= 'false' ) ) ) )
            	            // InternalMcmodel.g:9568:11: ( (lv_brokenDefined_30_0= 'broken' ) ) ( (otherlv_31= '!=' ( ( (lv_broken_32_0= 'false' ) ) | otherlv_33= 'true' ) ) | ( (otherlv_34= '=' | otherlv_35= '==' ) ( ( (lv_broken_36_0= 'true' ) ) | otherlv_37= 'false' ) ) )
            	            {
            	            // InternalMcmodel.g:9568:11: ( (lv_brokenDefined_30_0= 'broken' ) )
            	            // InternalMcmodel.g:9569:12: (lv_brokenDefined_30_0= 'broken' )
            	            {
            	            // InternalMcmodel.g:9569:12: (lv_brokenDefined_30_0= 'broken' )
            	            // InternalMcmodel.g:9570:13: lv_brokenDefined_30_0= 'broken'
            	            {
            	            lv_brokenDefined_30_0=(Token)match(input,63,FOLLOW_40); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              													newLeafNode(lv_brokenDefined_30_0, grammarAccess.getOverridePredicate_7Access().getBrokenDefinedBrokenKeyword_1_2_1_1_0_0());
            	              												
            	            }
            	            if ( state.backtracking==0 ) {

            	              													if (current==null) {
            	              														current = createModelElement(grammarAccess.getOverridePredicate_7Rule());
            	              													}
            	              													setWithLastConsumed(current, "brokenDefined", true, "broken");
            	              												
            	            }

            	            }


            	            }

            	            // InternalMcmodel.g:9582:11: ( (otherlv_31= '!=' ( ( (lv_broken_32_0= 'false' ) ) | otherlv_33= 'true' ) ) | ( (otherlv_34= '=' | otherlv_35= '==' ) ( ( (lv_broken_36_0= 'true' ) ) | otherlv_37= 'false' ) ) )
            	            int alt288=2;
            	            int LA288_0 = input.LA(1);

            	            if ( (LA288_0==62) ) {
            	                alt288=1;
            	            }
            	            else if ( (LA288_0==18||LA288_0==58) ) {
            	                alt288=2;
            	            }
            	            else {
            	                if (state.backtracking>0) {state.failed=true; return current;}
            	                NoViableAltException nvae =
            	                    new NoViableAltException("", 288, 0, input);

            	                throw nvae;
            	            }
            	            switch (alt288) {
            	                case 1 :
            	                    // InternalMcmodel.g:9583:12: (otherlv_31= '!=' ( ( (lv_broken_32_0= 'false' ) ) | otherlv_33= 'true' ) )
            	                    {
            	                    // InternalMcmodel.g:9583:12: (otherlv_31= '!=' ( ( (lv_broken_32_0= 'false' ) ) | otherlv_33= 'true' ) )
            	                    // InternalMcmodel.g:9584:13: otherlv_31= '!=' ( ( (lv_broken_32_0= 'false' ) ) | otherlv_33= 'true' )
            	                    {
            	                    otherlv_31=(Token)match(input,62,FOLLOW_7); if (state.failed) return current;
            	                    if ( state.backtracking==0 ) {

            	                      													newLeafNode(otherlv_31, grammarAccess.getOverridePredicate_7Access().getExclamationMarkEqualsSignKeyword_1_2_1_1_1_0_0());
            	                      												
            	                    }
            	                    // InternalMcmodel.g:9588:13: ( ( (lv_broken_32_0= 'false' ) ) | otherlv_33= 'true' )
            	                    int alt285=2;
            	                    int LA285_0 = input.LA(1);

            	                    if ( (LA285_0==21) ) {
            	                        alt285=1;
            	                    }
            	                    else if ( (LA285_0==20) ) {
            	                        alt285=2;
            	                    }
            	                    else {
            	                        if (state.backtracking>0) {state.failed=true; return current;}
            	                        NoViableAltException nvae =
            	                            new NoViableAltException("", 285, 0, input);

            	                        throw nvae;
            	                    }
            	                    switch (alt285) {
            	                        case 1 :
            	                            // InternalMcmodel.g:9589:14: ( (lv_broken_32_0= 'false' ) )
            	                            {
            	                            // InternalMcmodel.g:9589:14: ( (lv_broken_32_0= 'false' ) )
            	                            // InternalMcmodel.g:9590:15: (lv_broken_32_0= 'false' )
            	                            {
            	                            // InternalMcmodel.g:9590:15: (lv_broken_32_0= 'false' )
            	                            // InternalMcmodel.g:9591:16: lv_broken_32_0= 'false'
            	                            {
            	                            lv_broken_32_0=(Token)match(input,21,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              																newLeafNode(lv_broken_32_0, grammarAccess.getOverridePredicate_7Access().getBrokenFalseKeyword_1_2_1_1_1_0_1_0_0());
            	                              															
            	                            }
            	                            if ( state.backtracking==0 ) {

            	                              																if (current==null) {
            	                              																	current = createModelElement(grammarAccess.getOverridePredicate_7Rule());
            	                              																}
            	                              																setWithLastConsumed(current, "broken", true, "false");
            	                              															
            	                            }

            	                            }


            	                            }


            	                            }
            	                            break;
            	                        case 2 :
            	                            // InternalMcmodel.g:9604:14: otherlv_33= 'true'
            	                            {
            	                            otherlv_33=(Token)match(input,20,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_33, grammarAccess.getOverridePredicate_7Access().getTrueKeyword_1_2_1_1_1_0_1_1());
            	                              													
            	                            }

            	                            }
            	                            break;

            	                    }


            	                    }


            	                    }
            	                    break;
            	                case 2 :
            	                    // InternalMcmodel.g:9611:12: ( (otherlv_34= '=' | otherlv_35= '==' ) ( ( (lv_broken_36_0= 'true' ) ) | otherlv_37= 'false' ) )
            	                    {
            	                    // InternalMcmodel.g:9611:12: ( (otherlv_34= '=' | otherlv_35= '==' ) ( ( (lv_broken_36_0= 'true' ) ) | otherlv_37= 'false' ) )
            	                    // InternalMcmodel.g:9612:13: (otherlv_34= '=' | otherlv_35= '==' ) ( ( (lv_broken_36_0= 'true' ) ) | otherlv_37= 'false' )
            	                    {
            	                    // InternalMcmodel.g:9612:13: (otherlv_34= '=' | otherlv_35= '==' )
            	                    int alt286=2;
            	                    int LA286_0 = input.LA(1);

            	                    if ( (LA286_0==18) ) {
            	                        alt286=1;
            	                    }
            	                    else if ( (LA286_0==58) ) {
            	                        alt286=2;
            	                    }
            	                    else {
            	                        if (state.backtracking>0) {state.failed=true; return current;}
            	                        NoViableAltException nvae =
            	                            new NoViableAltException("", 286, 0, input);

            	                        throw nvae;
            	                    }
            	                    switch (alt286) {
            	                        case 1 :
            	                            // InternalMcmodel.g:9613:14: otherlv_34= '='
            	                            {
            	                            otherlv_34=(Token)match(input,18,FOLLOW_7); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_34, grammarAccess.getOverridePredicate_7Access().getEqualsSignKeyword_1_2_1_1_1_1_0_0());
            	                              													
            	                            }

            	                            }
            	                            break;
            	                        case 2 :
            	                            // InternalMcmodel.g:9618:14: otherlv_35= '=='
            	                            {
            	                            otherlv_35=(Token)match(input,58,FOLLOW_7); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_35, grammarAccess.getOverridePredicate_7Access().getEqualsSignEqualsSignKeyword_1_2_1_1_1_1_0_1());
            	                              													
            	                            }

            	                            }
            	                            break;

            	                    }

            	                    // InternalMcmodel.g:9623:13: ( ( (lv_broken_36_0= 'true' ) ) | otherlv_37= 'false' )
            	                    int alt287=2;
            	                    int LA287_0 = input.LA(1);

            	                    if ( (LA287_0==20) ) {
            	                        alt287=1;
            	                    }
            	                    else if ( (LA287_0==21) ) {
            	                        alt287=2;
            	                    }
            	                    else {
            	                        if (state.backtracking>0) {state.failed=true; return current;}
            	                        NoViableAltException nvae =
            	                            new NoViableAltException("", 287, 0, input);

            	                        throw nvae;
            	                    }
            	                    switch (alt287) {
            	                        case 1 :
            	                            // InternalMcmodel.g:9624:14: ( (lv_broken_36_0= 'true' ) )
            	                            {
            	                            // InternalMcmodel.g:9624:14: ( (lv_broken_36_0= 'true' ) )
            	                            // InternalMcmodel.g:9625:15: (lv_broken_36_0= 'true' )
            	                            {
            	                            // InternalMcmodel.g:9625:15: (lv_broken_36_0= 'true' )
            	                            // InternalMcmodel.g:9626:16: lv_broken_36_0= 'true'
            	                            {
            	                            lv_broken_36_0=(Token)match(input,20,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              																newLeafNode(lv_broken_36_0, grammarAccess.getOverridePredicate_7Access().getBrokenTrueKeyword_1_2_1_1_1_1_1_0_0());
            	                              															
            	                            }
            	                            if ( state.backtracking==0 ) {

            	                              																if (current==null) {
            	                              																	current = createModelElement(grammarAccess.getOverridePredicate_7Rule());
            	                              																}
            	                              																setWithLastConsumed(current, "broken", true, "true");
            	                              															
            	                            }

            	                            }


            	                            }


            	                            }
            	                            break;
            	                        case 2 :
            	                            // InternalMcmodel.g:9639:14: otherlv_37= 'false'
            	                            {
            	                            otherlv_37=(Token)match(input,21,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_37, grammarAccess.getOverridePredicate_7Access().getFalseKeyword_1_2_1_1_1_1_1_1());
            	                              													
            	                            }

            	                            }
            	                            break;

            	                    }


            	                    }


            	                    }
            	                    break;

            	            }


            	            }


            	            }
            	            break;

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getOverridePredicate_7Access().getUnorderedGroup_1());

            	    }


            	    }


            	    }
            	    break;
            	case 4 :
            	    // InternalMcmodel.g:9654:4: ({...}? => ( ({...}? => (otherlv_38= '&' ( ( ( (lv_castDefined_39_0= '!' ) ) otherlv_40= 'cast' ) | ( ( (lv_castDefined_41_0= 'cast' ) ) ( (otherlv_42= '!=' ( ( (lv_cast_43_0= 'false' ) ) | otherlv_44= 'true' ) ) | ( (otherlv_45= '=' | otherlv_46= '==' ) ( ( (lv_cast_47_0= 'true' ) ) | otherlv_48= 'false' ) ) ) ) ) ) ) ) )
            	    {
            	    // InternalMcmodel.g:9654:4: ({...}? => ( ({...}? => (otherlv_38= '&' ( ( ( (lv_castDefined_39_0= '!' ) ) otherlv_40= 'cast' ) | ( ( (lv_castDefined_41_0= 'cast' ) ) ( (otherlv_42= '!=' ( ( (lv_cast_43_0= 'false' ) ) | otherlv_44= 'true' ) ) | ( (otherlv_45= '=' | otherlv_46= '==' ) ( ( (lv_cast_47_0= 'true' ) ) | otherlv_48= 'false' ) ) ) ) ) ) ) ) )
            	    // InternalMcmodel.g:9655:5: {...}? => ( ({...}? => (otherlv_38= '&' ( ( ( (lv_castDefined_39_0= '!' ) ) otherlv_40= 'cast' ) | ( ( (lv_castDefined_41_0= 'cast' ) ) ( (otherlv_42= '!=' ( ( (lv_cast_43_0= 'false' ) ) | otherlv_44= 'true' ) ) | ( (otherlv_45= '=' | otherlv_46= '==' ) ( ( (lv_cast_47_0= 'true' ) ) | otherlv_48= 'false' ) ) ) ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_7Access().getUnorderedGroup_1(), 3) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_7", "getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_7Access().getUnorderedGroup_1(), 3)");
            	    }
            	    // InternalMcmodel.g:9655:116: ( ({...}? => (otherlv_38= '&' ( ( ( (lv_castDefined_39_0= '!' ) ) otherlv_40= 'cast' ) | ( ( (lv_castDefined_41_0= 'cast' ) ) ( (otherlv_42= '!=' ( ( (lv_cast_43_0= 'false' ) ) | otherlv_44= 'true' ) ) | ( (otherlv_45= '=' | otherlv_46= '==' ) ( ( (lv_cast_47_0= 'true' ) ) | otherlv_48= 'false' ) ) ) ) ) ) ) )
            	    // InternalMcmodel.g:9656:6: ({...}? => (otherlv_38= '&' ( ( ( (lv_castDefined_39_0= '!' ) ) otherlv_40= 'cast' ) | ( ( (lv_castDefined_41_0= 'cast' ) ) ( (otherlv_42= '!=' ( ( (lv_cast_43_0= 'false' ) ) | otherlv_44= 'true' ) ) | ( (otherlv_45= '=' | otherlv_46= '==' ) ( ( (lv_cast_47_0= 'true' ) ) | otherlv_48= 'false' ) ) ) ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getOverridePredicate_7Access().getUnorderedGroup_1(), 3);
            	    // InternalMcmodel.g:9659:9: ({...}? => (otherlv_38= '&' ( ( ( (lv_castDefined_39_0= '!' ) ) otherlv_40= 'cast' ) | ( ( (lv_castDefined_41_0= 'cast' ) ) ( (otherlv_42= '!=' ( ( (lv_cast_43_0= 'false' ) ) | otherlv_44= 'true' ) ) | ( (otherlv_45= '=' | otherlv_46= '==' ) ( ( (lv_cast_47_0= 'true' ) ) | otherlv_48= 'false' ) ) ) ) ) ) )
            	    // InternalMcmodel.g:9659:10: {...}? => (otherlv_38= '&' ( ( ( (lv_castDefined_39_0= '!' ) ) otherlv_40= 'cast' ) | ( ( (lv_castDefined_41_0= 'cast' ) ) ( (otherlv_42= '!=' ( ( (lv_cast_43_0= 'false' ) ) | otherlv_44= 'true' ) ) | ( (otherlv_45= '=' | otherlv_46= '==' ) ( ( (lv_cast_47_0= 'true' ) ) | otherlv_48= 'false' ) ) ) ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_7", "true");
            	    }
            	    // InternalMcmodel.g:9659:19: (otherlv_38= '&' ( ( ( (lv_castDefined_39_0= '!' ) ) otherlv_40= 'cast' ) | ( ( (lv_castDefined_41_0= 'cast' ) ) ( (otherlv_42= '!=' ( ( (lv_cast_43_0= 'false' ) ) | otherlv_44= 'true' ) ) | ( (otherlv_45= '=' | otherlv_46= '==' ) ( ( (lv_cast_47_0= 'true' ) ) | otherlv_48= 'false' ) ) ) ) ) )
            	    // InternalMcmodel.g:9659:20: otherlv_38= '&' ( ( ( (lv_castDefined_39_0= '!' ) ) otherlv_40= 'cast' ) | ( ( (lv_castDefined_41_0= 'cast' ) ) ( (otherlv_42= '!=' ( ( (lv_cast_43_0= 'false' ) ) | otherlv_44= 'true' ) ) | ( (otherlv_45= '=' | otherlv_46= '==' ) ( ( (lv_cast_47_0= 'true' ) ) | otherlv_48= 'false' ) ) ) ) )
            	    {
            	    otherlv_38=(Token)match(input,59,FOLLOW_43); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_38, grammarAccess.getOverridePredicate_7Access().getAmpersandKeyword_1_3_0());
            	      								
            	    }
            	    // InternalMcmodel.g:9663:9: ( ( ( (lv_castDefined_39_0= '!' ) ) otherlv_40= 'cast' ) | ( ( (lv_castDefined_41_0= 'cast' ) ) ( (otherlv_42= '!=' ( ( (lv_cast_43_0= 'false' ) ) | otherlv_44= 'true' ) ) | ( (otherlv_45= '=' | otherlv_46= '==' ) ( ( (lv_cast_47_0= 'true' ) ) | otherlv_48= 'false' ) ) ) ) )
            	    int alt294=2;
            	    int LA294_0 = input.LA(1);

            	    if ( (LA294_0==60) ) {
            	        alt294=1;
            	    }
            	    else if ( (LA294_0==64) ) {
            	        alt294=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 294, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt294) {
            	        case 1 :
            	            // InternalMcmodel.g:9664:10: ( ( (lv_castDefined_39_0= '!' ) ) otherlv_40= 'cast' )
            	            {
            	            // InternalMcmodel.g:9664:10: ( ( (lv_castDefined_39_0= '!' ) ) otherlv_40= 'cast' )
            	            // InternalMcmodel.g:9665:11: ( (lv_castDefined_39_0= '!' ) ) otherlv_40= 'cast'
            	            {
            	            // InternalMcmodel.g:9665:11: ( (lv_castDefined_39_0= '!' ) )
            	            // InternalMcmodel.g:9666:12: (lv_castDefined_39_0= '!' )
            	            {
            	            // InternalMcmodel.g:9666:12: (lv_castDefined_39_0= '!' )
            	            // InternalMcmodel.g:9667:13: lv_castDefined_39_0= '!'
            	            {
            	            lv_castDefined_39_0=(Token)match(input,60,FOLLOW_44); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              													newLeafNode(lv_castDefined_39_0, grammarAccess.getOverridePredicate_7Access().getCastDefinedExclamationMarkKeyword_1_3_1_0_0_0());
            	              												
            	            }
            	            if ( state.backtracking==0 ) {

            	              													if (current==null) {
            	              														current = createModelElement(grammarAccess.getOverridePredicate_7Rule());
            	              													}
            	              													setWithLastConsumed(current, "castDefined", true, "!");
            	              												
            	            }

            	            }


            	            }

            	            otherlv_40=(Token)match(input,64,FOLLOW_37); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              											newLeafNode(otherlv_40, grammarAccess.getOverridePredicate_7Access().getCastKeyword_1_3_1_0_1());
            	              										
            	            }

            	            }


            	            }
            	            break;
            	        case 2 :
            	            // InternalMcmodel.g:9685:10: ( ( (lv_castDefined_41_0= 'cast' ) ) ( (otherlv_42= '!=' ( ( (lv_cast_43_0= 'false' ) ) | otherlv_44= 'true' ) ) | ( (otherlv_45= '=' | otherlv_46= '==' ) ( ( (lv_cast_47_0= 'true' ) ) | otherlv_48= 'false' ) ) ) )
            	            {
            	            // InternalMcmodel.g:9685:10: ( ( (lv_castDefined_41_0= 'cast' ) ) ( (otherlv_42= '!=' ( ( (lv_cast_43_0= 'false' ) ) | otherlv_44= 'true' ) ) | ( (otherlv_45= '=' | otherlv_46= '==' ) ( ( (lv_cast_47_0= 'true' ) ) | otherlv_48= 'false' ) ) ) )
            	            // InternalMcmodel.g:9686:11: ( (lv_castDefined_41_0= 'cast' ) ) ( (otherlv_42= '!=' ( ( (lv_cast_43_0= 'false' ) ) | otherlv_44= 'true' ) ) | ( (otherlv_45= '=' | otherlv_46= '==' ) ( ( (lv_cast_47_0= 'true' ) ) | otherlv_48= 'false' ) ) )
            	            {
            	            // InternalMcmodel.g:9686:11: ( (lv_castDefined_41_0= 'cast' ) )
            	            // InternalMcmodel.g:9687:12: (lv_castDefined_41_0= 'cast' )
            	            {
            	            // InternalMcmodel.g:9687:12: (lv_castDefined_41_0= 'cast' )
            	            // InternalMcmodel.g:9688:13: lv_castDefined_41_0= 'cast'
            	            {
            	            lv_castDefined_41_0=(Token)match(input,64,FOLLOW_40); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              													newLeafNode(lv_castDefined_41_0, grammarAccess.getOverridePredicate_7Access().getCastDefinedCastKeyword_1_3_1_1_0_0());
            	              												
            	            }
            	            if ( state.backtracking==0 ) {

            	              													if (current==null) {
            	              														current = createModelElement(grammarAccess.getOverridePredicate_7Rule());
            	              													}
            	              													setWithLastConsumed(current, "castDefined", true, "cast");
            	              												
            	            }

            	            }


            	            }

            	            // InternalMcmodel.g:9700:11: ( (otherlv_42= '!=' ( ( (lv_cast_43_0= 'false' ) ) | otherlv_44= 'true' ) ) | ( (otherlv_45= '=' | otherlv_46= '==' ) ( ( (lv_cast_47_0= 'true' ) ) | otherlv_48= 'false' ) ) )
            	            int alt293=2;
            	            int LA293_0 = input.LA(1);

            	            if ( (LA293_0==62) ) {
            	                alt293=1;
            	            }
            	            else if ( (LA293_0==18||LA293_0==58) ) {
            	                alt293=2;
            	            }
            	            else {
            	                if (state.backtracking>0) {state.failed=true; return current;}
            	                NoViableAltException nvae =
            	                    new NoViableAltException("", 293, 0, input);

            	                throw nvae;
            	            }
            	            switch (alt293) {
            	                case 1 :
            	                    // InternalMcmodel.g:9701:12: (otherlv_42= '!=' ( ( (lv_cast_43_0= 'false' ) ) | otherlv_44= 'true' ) )
            	                    {
            	                    // InternalMcmodel.g:9701:12: (otherlv_42= '!=' ( ( (lv_cast_43_0= 'false' ) ) | otherlv_44= 'true' ) )
            	                    // InternalMcmodel.g:9702:13: otherlv_42= '!=' ( ( (lv_cast_43_0= 'false' ) ) | otherlv_44= 'true' )
            	                    {
            	                    otherlv_42=(Token)match(input,62,FOLLOW_7); if (state.failed) return current;
            	                    if ( state.backtracking==0 ) {

            	                      													newLeafNode(otherlv_42, grammarAccess.getOverridePredicate_7Access().getExclamationMarkEqualsSignKeyword_1_3_1_1_1_0_0());
            	                      												
            	                    }
            	                    // InternalMcmodel.g:9706:13: ( ( (lv_cast_43_0= 'false' ) ) | otherlv_44= 'true' )
            	                    int alt290=2;
            	                    int LA290_0 = input.LA(1);

            	                    if ( (LA290_0==21) ) {
            	                        alt290=1;
            	                    }
            	                    else if ( (LA290_0==20) ) {
            	                        alt290=2;
            	                    }
            	                    else {
            	                        if (state.backtracking>0) {state.failed=true; return current;}
            	                        NoViableAltException nvae =
            	                            new NoViableAltException("", 290, 0, input);

            	                        throw nvae;
            	                    }
            	                    switch (alt290) {
            	                        case 1 :
            	                            // InternalMcmodel.g:9707:14: ( (lv_cast_43_0= 'false' ) )
            	                            {
            	                            // InternalMcmodel.g:9707:14: ( (lv_cast_43_0= 'false' ) )
            	                            // InternalMcmodel.g:9708:15: (lv_cast_43_0= 'false' )
            	                            {
            	                            // InternalMcmodel.g:9708:15: (lv_cast_43_0= 'false' )
            	                            // InternalMcmodel.g:9709:16: lv_cast_43_0= 'false'
            	                            {
            	                            lv_cast_43_0=(Token)match(input,21,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              																newLeafNode(lv_cast_43_0, grammarAccess.getOverridePredicate_7Access().getCastFalseKeyword_1_3_1_1_1_0_1_0_0());
            	                              															
            	                            }
            	                            if ( state.backtracking==0 ) {

            	                              																if (current==null) {
            	                              																	current = createModelElement(grammarAccess.getOverridePredicate_7Rule());
            	                              																}
            	                              																setWithLastConsumed(current, "cast", true, "false");
            	                              															
            	                            }

            	                            }


            	                            }


            	                            }
            	                            break;
            	                        case 2 :
            	                            // InternalMcmodel.g:9722:14: otherlv_44= 'true'
            	                            {
            	                            otherlv_44=(Token)match(input,20,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_44, grammarAccess.getOverridePredicate_7Access().getTrueKeyword_1_3_1_1_1_0_1_1());
            	                              													
            	                            }

            	                            }
            	                            break;

            	                    }


            	                    }


            	                    }
            	                    break;
            	                case 2 :
            	                    // InternalMcmodel.g:9729:12: ( (otherlv_45= '=' | otherlv_46= '==' ) ( ( (lv_cast_47_0= 'true' ) ) | otherlv_48= 'false' ) )
            	                    {
            	                    // InternalMcmodel.g:9729:12: ( (otherlv_45= '=' | otherlv_46= '==' ) ( ( (lv_cast_47_0= 'true' ) ) | otherlv_48= 'false' ) )
            	                    // InternalMcmodel.g:9730:13: (otherlv_45= '=' | otherlv_46= '==' ) ( ( (lv_cast_47_0= 'true' ) ) | otherlv_48= 'false' )
            	                    {
            	                    // InternalMcmodel.g:9730:13: (otherlv_45= '=' | otherlv_46= '==' )
            	                    int alt291=2;
            	                    int LA291_0 = input.LA(1);

            	                    if ( (LA291_0==18) ) {
            	                        alt291=1;
            	                    }
            	                    else if ( (LA291_0==58) ) {
            	                        alt291=2;
            	                    }
            	                    else {
            	                        if (state.backtracking>0) {state.failed=true; return current;}
            	                        NoViableAltException nvae =
            	                            new NoViableAltException("", 291, 0, input);

            	                        throw nvae;
            	                    }
            	                    switch (alt291) {
            	                        case 1 :
            	                            // InternalMcmodel.g:9731:14: otherlv_45= '='
            	                            {
            	                            otherlv_45=(Token)match(input,18,FOLLOW_7); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_45, grammarAccess.getOverridePredicate_7Access().getEqualsSignKeyword_1_3_1_1_1_1_0_0());
            	                              													
            	                            }

            	                            }
            	                            break;
            	                        case 2 :
            	                            // InternalMcmodel.g:9736:14: otherlv_46= '=='
            	                            {
            	                            otherlv_46=(Token)match(input,58,FOLLOW_7); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_46, grammarAccess.getOverridePredicate_7Access().getEqualsSignEqualsSignKeyword_1_3_1_1_1_1_0_1());
            	                              													
            	                            }

            	                            }
            	                            break;

            	                    }

            	                    // InternalMcmodel.g:9741:13: ( ( (lv_cast_47_0= 'true' ) ) | otherlv_48= 'false' )
            	                    int alt292=2;
            	                    int LA292_0 = input.LA(1);

            	                    if ( (LA292_0==20) ) {
            	                        alt292=1;
            	                    }
            	                    else if ( (LA292_0==21) ) {
            	                        alt292=2;
            	                    }
            	                    else {
            	                        if (state.backtracking>0) {state.failed=true; return current;}
            	                        NoViableAltException nvae =
            	                            new NoViableAltException("", 292, 0, input);

            	                        throw nvae;
            	                    }
            	                    switch (alt292) {
            	                        case 1 :
            	                            // InternalMcmodel.g:9742:14: ( (lv_cast_47_0= 'true' ) )
            	                            {
            	                            // InternalMcmodel.g:9742:14: ( (lv_cast_47_0= 'true' ) )
            	                            // InternalMcmodel.g:9743:15: (lv_cast_47_0= 'true' )
            	                            {
            	                            // InternalMcmodel.g:9743:15: (lv_cast_47_0= 'true' )
            	                            // InternalMcmodel.g:9744:16: lv_cast_47_0= 'true'
            	                            {
            	                            lv_cast_47_0=(Token)match(input,20,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              																newLeafNode(lv_cast_47_0, grammarAccess.getOverridePredicate_7Access().getCastTrueKeyword_1_3_1_1_1_1_1_0_0());
            	                              															
            	                            }
            	                            if ( state.backtracking==0 ) {

            	                              																if (current==null) {
            	                              																	current = createModelElement(grammarAccess.getOverridePredicate_7Rule());
            	                              																}
            	                              																setWithLastConsumed(current, "cast", true, "true");
            	                              															
            	                            }

            	                            }


            	                            }


            	                            }
            	                            break;
            	                        case 2 :
            	                            // InternalMcmodel.g:9757:14: otherlv_48= 'false'
            	                            {
            	                            otherlv_48=(Token)match(input,21,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_48, grammarAccess.getOverridePredicate_7Access().getFalseKeyword_1_3_1_1_1_1_1_1());
            	                              													
            	                            }

            	                            }
            	                            break;

            	                    }


            	                    }


            	                    }
            	                    break;

            	            }


            	            }


            	            }
            	            break;

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getOverridePredicate_7Access().getUnorderedGroup_1());

            	    }


            	    }


            	    }
            	    break;
            	case 5 :
            	    // InternalMcmodel.g:9772:4: ({...}? => ( ({...}? => (otherlv_49= '&' ( (lv_cooldownDefined_50_0= 'cooldown' ) ) (otherlv_51= '=' | otherlv_52= '==' ) ( (lv_cooldown_53_0= RULE_PERCENTAGE ) ) ) ) ) )
            	    {
            	    // InternalMcmodel.g:9772:4: ({...}? => ( ({...}? => (otherlv_49= '&' ( (lv_cooldownDefined_50_0= 'cooldown' ) ) (otherlv_51= '=' | otherlv_52= '==' ) ( (lv_cooldown_53_0= RULE_PERCENTAGE ) ) ) ) ) )
            	    // InternalMcmodel.g:9773:5: {...}? => ( ({...}? => (otherlv_49= '&' ( (lv_cooldownDefined_50_0= 'cooldown' ) ) (otherlv_51= '=' | otherlv_52= '==' ) ( (lv_cooldown_53_0= RULE_PERCENTAGE ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_7Access().getUnorderedGroup_1(), 4) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_7", "getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_7Access().getUnorderedGroup_1(), 4)");
            	    }
            	    // InternalMcmodel.g:9773:116: ( ({...}? => (otherlv_49= '&' ( (lv_cooldownDefined_50_0= 'cooldown' ) ) (otherlv_51= '=' | otherlv_52= '==' ) ( (lv_cooldown_53_0= RULE_PERCENTAGE ) ) ) ) )
            	    // InternalMcmodel.g:9774:6: ({...}? => (otherlv_49= '&' ( (lv_cooldownDefined_50_0= 'cooldown' ) ) (otherlv_51= '=' | otherlv_52= '==' ) ( (lv_cooldown_53_0= RULE_PERCENTAGE ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getOverridePredicate_7Access().getUnorderedGroup_1(), 4);
            	    // InternalMcmodel.g:9777:9: ({...}? => (otherlv_49= '&' ( (lv_cooldownDefined_50_0= 'cooldown' ) ) (otherlv_51= '=' | otherlv_52= '==' ) ( (lv_cooldown_53_0= RULE_PERCENTAGE ) ) ) )
            	    // InternalMcmodel.g:9777:10: {...}? => (otherlv_49= '&' ( (lv_cooldownDefined_50_0= 'cooldown' ) ) (otherlv_51= '=' | otherlv_52= '==' ) ( (lv_cooldown_53_0= RULE_PERCENTAGE ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_7", "true");
            	    }
            	    // InternalMcmodel.g:9777:19: (otherlv_49= '&' ( (lv_cooldownDefined_50_0= 'cooldown' ) ) (otherlv_51= '=' | otherlv_52= '==' ) ( (lv_cooldown_53_0= RULE_PERCENTAGE ) ) )
            	    // InternalMcmodel.g:9777:20: otherlv_49= '&' ( (lv_cooldownDefined_50_0= 'cooldown' ) ) (otherlv_51= '=' | otherlv_52= '==' ) ( (lv_cooldown_53_0= RULE_PERCENTAGE ) )
            	    {
            	    otherlv_49=(Token)match(input,59,FOLLOW_45); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_49, grammarAccess.getOverridePredicate_7Access().getAmpersandKeyword_1_4_0());
            	      								
            	    }
            	    // InternalMcmodel.g:9781:9: ( (lv_cooldownDefined_50_0= 'cooldown' ) )
            	    // InternalMcmodel.g:9782:10: (lv_cooldownDefined_50_0= 'cooldown' )
            	    {
            	    // InternalMcmodel.g:9782:10: (lv_cooldownDefined_50_0= 'cooldown' )
            	    // InternalMcmodel.g:9783:11: lv_cooldownDefined_50_0= 'cooldown'
            	    {
            	    lv_cooldownDefined_50_0=(Token)match(input,65,FOLLOW_35); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											newLeafNode(lv_cooldownDefined_50_0, grammarAccess.getOverridePredicate_7Access().getCooldownDefinedCooldownKeyword_1_4_1_0());
            	      										
            	    }
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElement(grammarAccess.getOverridePredicate_7Rule());
            	      											}
            	      											setWithLastConsumed(current, "cooldownDefined", true, "cooldown");
            	      										
            	    }

            	    }


            	    }

            	    // InternalMcmodel.g:9795:9: (otherlv_51= '=' | otherlv_52= '==' )
            	    int alt295=2;
            	    int LA295_0 = input.LA(1);

            	    if ( (LA295_0==18) ) {
            	        alt295=1;
            	    }
            	    else if ( (LA295_0==58) ) {
            	        alt295=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 295, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt295) {
            	        case 1 :
            	            // InternalMcmodel.g:9796:10: otherlv_51= '='
            	            {
            	            otherlv_51=(Token)match(input,18,FOLLOW_36); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(otherlv_51, grammarAccess.getOverridePredicate_7Access().getEqualsSignKeyword_1_4_2_0());
            	              									
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalMcmodel.g:9801:10: otherlv_52= '=='
            	            {
            	            otherlv_52=(Token)match(input,58,FOLLOW_36); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(otherlv_52, grammarAccess.getOverridePredicate_7Access().getEqualsSignEqualsSignKeyword_1_4_2_1());
            	              									
            	            }

            	            }
            	            break;

            	    }

            	    // InternalMcmodel.g:9806:9: ( (lv_cooldown_53_0= RULE_PERCENTAGE ) )
            	    // InternalMcmodel.g:9807:10: (lv_cooldown_53_0= RULE_PERCENTAGE )
            	    {
            	    // InternalMcmodel.g:9807:10: (lv_cooldown_53_0= RULE_PERCENTAGE )
            	    // InternalMcmodel.g:9808:11: lv_cooldown_53_0= RULE_PERCENTAGE
            	    {
            	    lv_cooldown_53_0=(Token)match(input,RULE_PERCENTAGE,FOLLOW_37); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											newLeafNode(lv_cooldown_53_0, grammarAccess.getOverridePredicate_7Access().getCooldownPERCENTAGETerminalRuleCall_1_4_3_0());
            	      										
            	    }
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElement(grammarAccess.getOverridePredicate_7Rule());
            	      											}
            	      											setWithLastConsumed(
            	      												current,
            	      												"cooldown",
            	      												lv_cooldown_53_0,
            	      												"com.raptor.mcmodel.Mcmodel.PERCENTAGE");
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getOverridePredicate_7Access().getUnorderedGroup_1());

            	    }


            	    }


            	    }
            	    break;
            	case 6 :
            	    // InternalMcmodel.g:9830:4: ({...}? => ( ({...}? => (otherlv_54= '&' ( (lv_damageDefined_55_0= 'damage' ) ) (otherlv_56= '=' | otherlv_57= '==' ) ( (lv_damage_58_0= RULE_PERCENTAGE ) ) ) ) ) )
            	    {
            	    // InternalMcmodel.g:9830:4: ({...}? => ( ({...}? => (otherlv_54= '&' ( (lv_damageDefined_55_0= 'damage' ) ) (otherlv_56= '=' | otherlv_57= '==' ) ( (lv_damage_58_0= RULE_PERCENTAGE ) ) ) ) ) )
            	    // InternalMcmodel.g:9831:5: {...}? => ( ({...}? => (otherlv_54= '&' ( (lv_damageDefined_55_0= 'damage' ) ) (otherlv_56= '=' | otherlv_57= '==' ) ( (lv_damage_58_0= RULE_PERCENTAGE ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_7Access().getUnorderedGroup_1(), 5) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_7", "getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_7Access().getUnorderedGroup_1(), 5)");
            	    }
            	    // InternalMcmodel.g:9831:116: ( ({...}? => (otherlv_54= '&' ( (lv_damageDefined_55_0= 'damage' ) ) (otherlv_56= '=' | otherlv_57= '==' ) ( (lv_damage_58_0= RULE_PERCENTAGE ) ) ) ) )
            	    // InternalMcmodel.g:9832:6: ({...}? => (otherlv_54= '&' ( (lv_damageDefined_55_0= 'damage' ) ) (otherlv_56= '=' | otherlv_57= '==' ) ( (lv_damage_58_0= RULE_PERCENTAGE ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getOverridePredicate_7Access().getUnorderedGroup_1(), 5);
            	    // InternalMcmodel.g:9835:9: ({...}? => (otherlv_54= '&' ( (lv_damageDefined_55_0= 'damage' ) ) (otherlv_56= '=' | otherlv_57= '==' ) ( (lv_damage_58_0= RULE_PERCENTAGE ) ) ) )
            	    // InternalMcmodel.g:9835:10: {...}? => (otherlv_54= '&' ( (lv_damageDefined_55_0= 'damage' ) ) (otherlv_56= '=' | otherlv_57= '==' ) ( (lv_damage_58_0= RULE_PERCENTAGE ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_7", "true");
            	    }
            	    // InternalMcmodel.g:9835:19: (otherlv_54= '&' ( (lv_damageDefined_55_0= 'damage' ) ) (otherlv_56= '=' | otherlv_57= '==' ) ( (lv_damage_58_0= RULE_PERCENTAGE ) ) )
            	    // InternalMcmodel.g:9835:20: otherlv_54= '&' ( (lv_damageDefined_55_0= 'damage' ) ) (otherlv_56= '=' | otherlv_57= '==' ) ( (lv_damage_58_0= RULE_PERCENTAGE ) )
            	    {
            	    otherlv_54=(Token)match(input,59,FOLLOW_46); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_54, grammarAccess.getOverridePredicate_7Access().getAmpersandKeyword_1_5_0());
            	      								
            	    }
            	    // InternalMcmodel.g:9839:9: ( (lv_damageDefined_55_0= 'damage' ) )
            	    // InternalMcmodel.g:9840:10: (lv_damageDefined_55_0= 'damage' )
            	    {
            	    // InternalMcmodel.g:9840:10: (lv_damageDefined_55_0= 'damage' )
            	    // InternalMcmodel.g:9841:11: lv_damageDefined_55_0= 'damage'
            	    {
            	    lv_damageDefined_55_0=(Token)match(input,66,FOLLOW_35); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											newLeafNode(lv_damageDefined_55_0, grammarAccess.getOverridePredicate_7Access().getDamageDefinedDamageKeyword_1_5_1_0());
            	      										
            	    }
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElement(grammarAccess.getOverridePredicate_7Rule());
            	      											}
            	      											setWithLastConsumed(current, "damageDefined", true, "damage");
            	      										
            	    }

            	    }


            	    }

            	    // InternalMcmodel.g:9853:9: (otherlv_56= '=' | otherlv_57= '==' )
            	    int alt296=2;
            	    int LA296_0 = input.LA(1);

            	    if ( (LA296_0==18) ) {
            	        alt296=1;
            	    }
            	    else if ( (LA296_0==58) ) {
            	        alt296=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 296, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt296) {
            	        case 1 :
            	            // InternalMcmodel.g:9854:10: otherlv_56= '='
            	            {
            	            otherlv_56=(Token)match(input,18,FOLLOW_36); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(otherlv_56, grammarAccess.getOverridePredicate_7Access().getEqualsSignKeyword_1_5_2_0());
            	              									
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalMcmodel.g:9859:10: otherlv_57= '=='
            	            {
            	            otherlv_57=(Token)match(input,58,FOLLOW_36); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(otherlv_57, grammarAccess.getOverridePredicate_7Access().getEqualsSignEqualsSignKeyword_1_5_2_1());
            	              									
            	            }

            	            }
            	            break;

            	    }

            	    // InternalMcmodel.g:9864:9: ( (lv_damage_58_0= RULE_PERCENTAGE ) )
            	    // InternalMcmodel.g:9865:10: (lv_damage_58_0= RULE_PERCENTAGE )
            	    {
            	    // InternalMcmodel.g:9865:10: (lv_damage_58_0= RULE_PERCENTAGE )
            	    // InternalMcmodel.g:9866:11: lv_damage_58_0= RULE_PERCENTAGE
            	    {
            	    lv_damage_58_0=(Token)match(input,RULE_PERCENTAGE,FOLLOW_37); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											newLeafNode(lv_damage_58_0, grammarAccess.getOverridePredicate_7Access().getDamagePERCENTAGETerminalRuleCall_1_5_3_0());
            	      										
            	    }
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElement(grammarAccess.getOverridePredicate_7Rule());
            	      											}
            	      											setWithLastConsumed(
            	      												current,
            	      												"damage",
            	      												lv_damage_58_0,
            	      												"com.raptor.mcmodel.Mcmodel.PERCENTAGE");
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getOverridePredicate_7Access().getUnorderedGroup_1());

            	    }


            	    }


            	    }
            	    break;
            	case 7 :
            	    // InternalMcmodel.g:9888:4: ({...}? => ( ({...}? => (otherlv_59= '&' ( ( ( (lv_lefthandedDefined_60_0= '!' ) ) otherlv_61= 'lefthanded' ) | ( ( (lv_lefthandedDefined_62_0= 'lefthanded' ) ) ( (otherlv_63= '!=' ( ( (lv_lefthanded_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_lefthanded_68_0= 'true' ) ) | otherlv_69= 'false' ) ) ) ) ) ) ) ) )
            	    {
            	    // InternalMcmodel.g:9888:4: ({...}? => ( ({...}? => (otherlv_59= '&' ( ( ( (lv_lefthandedDefined_60_0= '!' ) ) otherlv_61= 'lefthanded' ) | ( ( (lv_lefthandedDefined_62_0= 'lefthanded' ) ) ( (otherlv_63= '!=' ( ( (lv_lefthanded_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_lefthanded_68_0= 'true' ) ) | otherlv_69= 'false' ) ) ) ) ) ) ) ) )
            	    // InternalMcmodel.g:9889:5: {...}? => ( ({...}? => (otherlv_59= '&' ( ( ( (lv_lefthandedDefined_60_0= '!' ) ) otherlv_61= 'lefthanded' ) | ( ( (lv_lefthandedDefined_62_0= 'lefthanded' ) ) ( (otherlv_63= '!=' ( ( (lv_lefthanded_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_lefthanded_68_0= 'true' ) ) | otherlv_69= 'false' ) ) ) ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_7Access().getUnorderedGroup_1(), 6) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_7", "getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_7Access().getUnorderedGroup_1(), 6)");
            	    }
            	    // InternalMcmodel.g:9889:116: ( ({...}? => (otherlv_59= '&' ( ( ( (lv_lefthandedDefined_60_0= '!' ) ) otherlv_61= 'lefthanded' ) | ( ( (lv_lefthandedDefined_62_0= 'lefthanded' ) ) ( (otherlv_63= '!=' ( ( (lv_lefthanded_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_lefthanded_68_0= 'true' ) ) | otherlv_69= 'false' ) ) ) ) ) ) ) )
            	    // InternalMcmodel.g:9890:6: ({...}? => (otherlv_59= '&' ( ( ( (lv_lefthandedDefined_60_0= '!' ) ) otherlv_61= 'lefthanded' ) | ( ( (lv_lefthandedDefined_62_0= 'lefthanded' ) ) ( (otherlv_63= '!=' ( ( (lv_lefthanded_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_lefthanded_68_0= 'true' ) ) | otherlv_69= 'false' ) ) ) ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getOverridePredicate_7Access().getUnorderedGroup_1(), 6);
            	    // InternalMcmodel.g:9893:9: ({...}? => (otherlv_59= '&' ( ( ( (lv_lefthandedDefined_60_0= '!' ) ) otherlv_61= 'lefthanded' ) | ( ( (lv_lefthandedDefined_62_0= 'lefthanded' ) ) ( (otherlv_63= '!=' ( ( (lv_lefthanded_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_lefthanded_68_0= 'true' ) ) | otherlv_69= 'false' ) ) ) ) ) ) )
            	    // InternalMcmodel.g:9893:10: {...}? => (otherlv_59= '&' ( ( ( (lv_lefthandedDefined_60_0= '!' ) ) otherlv_61= 'lefthanded' ) | ( ( (lv_lefthandedDefined_62_0= 'lefthanded' ) ) ( (otherlv_63= '!=' ( ( (lv_lefthanded_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_lefthanded_68_0= 'true' ) ) | otherlv_69= 'false' ) ) ) ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_7", "true");
            	    }
            	    // InternalMcmodel.g:9893:19: (otherlv_59= '&' ( ( ( (lv_lefthandedDefined_60_0= '!' ) ) otherlv_61= 'lefthanded' ) | ( ( (lv_lefthandedDefined_62_0= 'lefthanded' ) ) ( (otherlv_63= '!=' ( ( (lv_lefthanded_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_lefthanded_68_0= 'true' ) ) | otherlv_69= 'false' ) ) ) ) ) )
            	    // InternalMcmodel.g:9893:20: otherlv_59= '&' ( ( ( (lv_lefthandedDefined_60_0= '!' ) ) otherlv_61= 'lefthanded' ) | ( ( (lv_lefthandedDefined_62_0= 'lefthanded' ) ) ( (otherlv_63= '!=' ( ( (lv_lefthanded_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_lefthanded_68_0= 'true' ) ) | otherlv_69= 'false' ) ) ) ) )
            	    {
            	    otherlv_59=(Token)match(input,59,FOLLOW_49); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_59, grammarAccess.getOverridePredicate_7Access().getAmpersandKeyword_1_6_0());
            	      								
            	    }
            	    // InternalMcmodel.g:9897:9: ( ( ( (lv_lefthandedDefined_60_0= '!' ) ) otherlv_61= 'lefthanded' ) | ( ( (lv_lefthandedDefined_62_0= 'lefthanded' ) ) ( (otherlv_63= '!=' ( ( (lv_lefthanded_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_lefthanded_68_0= 'true' ) ) | otherlv_69= 'false' ) ) ) ) )
            	    int alt301=2;
            	    int LA301_0 = input.LA(1);

            	    if ( (LA301_0==60) ) {
            	        alt301=1;
            	    }
            	    else if ( (LA301_0==68) ) {
            	        alt301=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 301, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt301) {
            	        case 1 :
            	            // InternalMcmodel.g:9898:10: ( ( (lv_lefthandedDefined_60_0= '!' ) ) otherlv_61= 'lefthanded' )
            	            {
            	            // InternalMcmodel.g:9898:10: ( ( (lv_lefthandedDefined_60_0= '!' ) ) otherlv_61= 'lefthanded' )
            	            // InternalMcmodel.g:9899:11: ( (lv_lefthandedDefined_60_0= '!' ) ) otherlv_61= 'lefthanded'
            	            {
            	            // InternalMcmodel.g:9899:11: ( (lv_lefthandedDefined_60_0= '!' ) )
            	            // InternalMcmodel.g:9900:12: (lv_lefthandedDefined_60_0= '!' )
            	            {
            	            // InternalMcmodel.g:9900:12: (lv_lefthandedDefined_60_0= '!' )
            	            // InternalMcmodel.g:9901:13: lv_lefthandedDefined_60_0= '!'
            	            {
            	            lv_lefthandedDefined_60_0=(Token)match(input,60,FOLLOW_50); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              													newLeafNode(lv_lefthandedDefined_60_0, grammarAccess.getOverridePredicate_7Access().getLefthandedDefinedExclamationMarkKeyword_1_6_1_0_0_0());
            	              												
            	            }
            	            if ( state.backtracking==0 ) {

            	              													if (current==null) {
            	              														current = createModelElement(grammarAccess.getOverridePredicate_7Rule());
            	              													}
            	              													setWithLastConsumed(current, "lefthandedDefined", true, "!");
            	              												
            	            }

            	            }


            	            }

            	            otherlv_61=(Token)match(input,68,FOLLOW_37); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              											newLeafNode(otherlv_61, grammarAccess.getOverridePredicate_7Access().getLefthandedKeyword_1_6_1_0_1());
            	              										
            	            }

            	            }


            	            }
            	            break;
            	        case 2 :
            	            // InternalMcmodel.g:9919:10: ( ( (lv_lefthandedDefined_62_0= 'lefthanded' ) ) ( (otherlv_63= '!=' ( ( (lv_lefthanded_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_lefthanded_68_0= 'true' ) ) | otherlv_69= 'false' ) ) ) )
            	            {
            	            // InternalMcmodel.g:9919:10: ( ( (lv_lefthandedDefined_62_0= 'lefthanded' ) ) ( (otherlv_63= '!=' ( ( (lv_lefthanded_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_lefthanded_68_0= 'true' ) ) | otherlv_69= 'false' ) ) ) )
            	            // InternalMcmodel.g:9920:11: ( (lv_lefthandedDefined_62_0= 'lefthanded' ) ) ( (otherlv_63= '!=' ( ( (lv_lefthanded_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_lefthanded_68_0= 'true' ) ) | otherlv_69= 'false' ) ) )
            	            {
            	            // InternalMcmodel.g:9920:11: ( (lv_lefthandedDefined_62_0= 'lefthanded' ) )
            	            // InternalMcmodel.g:9921:12: (lv_lefthandedDefined_62_0= 'lefthanded' )
            	            {
            	            // InternalMcmodel.g:9921:12: (lv_lefthandedDefined_62_0= 'lefthanded' )
            	            // InternalMcmodel.g:9922:13: lv_lefthandedDefined_62_0= 'lefthanded'
            	            {
            	            lv_lefthandedDefined_62_0=(Token)match(input,68,FOLLOW_40); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              													newLeafNode(lv_lefthandedDefined_62_0, grammarAccess.getOverridePredicate_7Access().getLefthandedDefinedLefthandedKeyword_1_6_1_1_0_0());
            	              												
            	            }
            	            if ( state.backtracking==0 ) {

            	              													if (current==null) {
            	              														current = createModelElement(grammarAccess.getOverridePredicate_7Rule());
            	              													}
            	              													setWithLastConsumed(current, "lefthandedDefined", true, "lefthanded");
            	              												
            	            }

            	            }


            	            }

            	            // InternalMcmodel.g:9934:11: ( (otherlv_63= '!=' ( ( (lv_lefthanded_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_lefthanded_68_0= 'true' ) ) | otherlv_69= 'false' ) ) )
            	            int alt300=2;
            	            int LA300_0 = input.LA(1);

            	            if ( (LA300_0==62) ) {
            	                alt300=1;
            	            }
            	            else if ( (LA300_0==18||LA300_0==58) ) {
            	                alt300=2;
            	            }
            	            else {
            	                if (state.backtracking>0) {state.failed=true; return current;}
            	                NoViableAltException nvae =
            	                    new NoViableAltException("", 300, 0, input);

            	                throw nvae;
            	            }
            	            switch (alt300) {
            	                case 1 :
            	                    // InternalMcmodel.g:9935:12: (otherlv_63= '!=' ( ( (lv_lefthanded_64_0= 'false' ) ) | otherlv_65= 'true' ) )
            	                    {
            	                    // InternalMcmodel.g:9935:12: (otherlv_63= '!=' ( ( (lv_lefthanded_64_0= 'false' ) ) | otherlv_65= 'true' ) )
            	                    // InternalMcmodel.g:9936:13: otherlv_63= '!=' ( ( (lv_lefthanded_64_0= 'false' ) ) | otherlv_65= 'true' )
            	                    {
            	                    otherlv_63=(Token)match(input,62,FOLLOW_7); if (state.failed) return current;
            	                    if ( state.backtracking==0 ) {

            	                      													newLeafNode(otherlv_63, grammarAccess.getOverridePredicate_7Access().getExclamationMarkEqualsSignKeyword_1_6_1_1_1_0_0());
            	                      												
            	                    }
            	                    // InternalMcmodel.g:9940:13: ( ( (lv_lefthanded_64_0= 'false' ) ) | otherlv_65= 'true' )
            	                    int alt297=2;
            	                    int LA297_0 = input.LA(1);

            	                    if ( (LA297_0==21) ) {
            	                        alt297=1;
            	                    }
            	                    else if ( (LA297_0==20) ) {
            	                        alt297=2;
            	                    }
            	                    else {
            	                        if (state.backtracking>0) {state.failed=true; return current;}
            	                        NoViableAltException nvae =
            	                            new NoViableAltException("", 297, 0, input);

            	                        throw nvae;
            	                    }
            	                    switch (alt297) {
            	                        case 1 :
            	                            // InternalMcmodel.g:9941:14: ( (lv_lefthanded_64_0= 'false' ) )
            	                            {
            	                            // InternalMcmodel.g:9941:14: ( (lv_lefthanded_64_0= 'false' ) )
            	                            // InternalMcmodel.g:9942:15: (lv_lefthanded_64_0= 'false' )
            	                            {
            	                            // InternalMcmodel.g:9942:15: (lv_lefthanded_64_0= 'false' )
            	                            // InternalMcmodel.g:9943:16: lv_lefthanded_64_0= 'false'
            	                            {
            	                            lv_lefthanded_64_0=(Token)match(input,21,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              																newLeafNode(lv_lefthanded_64_0, grammarAccess.getOverridePredicate_7Access().getLefthandedFalseKeyword_1_6_1_1_1_0_1_0_0());
            	                              															
            	                            }
            	                            if ( state.backtracking==0 ) {

            	                              																if (current==null) {
            	                              																	current = createModelElement(grammarAccess.getOverridePredicate_7Rule());
            	                              																}
            	                              																setWithLastConsumed(current, "lefthanded", true, "false");
            	                              															
            	                            }

            	                            }


            	                            }


            	                            }
            	                            break;
            	                        case 2 :
            	                            // InternalMcmodel.g:9956:14: otherlv_65= 'true'
            	                            {
            	                            otherlv_65=(Token)match(input,20,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_65, grammarAccess.getOverridePredicate_7Access().getTrueKeyword_1_6_1_1_1_0_1_1());
            	                              													
            	                            }

            	                            }
            	                            break;

            	                    }


            	                    }


            	                    }
            	                    break;
            	                case 2 :
            	                    // InternalMcmodel.g:9963:12: ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_lefthanded_68_0= 'true' ) ) | otherlv_69= 'false' ) )
            	                    {
            	                    // InternalMcmodel.g:9963:12: ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_lefthanded_68_0= 'true' ) ) | otherlv_69= 'false' ) )
            	                    // InternalMcmodel.g:9964:13: (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_lefthanded_68_0= 'true' ) ) | otherlv_69= 'false' )
            	                    {
            	                    // InternalMcmodel.g:9964:13: (otherlv_66= '=' | otherlv_67= '==' )
            	                    int alt298=2;
            	                    int LA298_0 = input.LA(1);

            	                    if ( (LA298_0==18) ) {
            	                        alt298=1;
            	                    }
            	                    else if ( (LA298_0==58) ) {
            	                        alt298=2;
            	                    }
            	                    else {
            	                        if (state.backtracking>0) {state.failed=true; return current;}
            	                        NoViableAltException nvae =
            	                            new NoViableAltException("", 298, 0, input);

            	                        throw nvae;
            	                    }
            	                    switch (alt298) {
            	                        case 1 :
            	                            // InternalMcmodel.g:9965:14: otherlv_66= '='
            	                            {
            	                            otherlv_66=(Token)match(input,18,FOLLOW_7); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_66, grammarAccess.getOverridePredicate_7Access().getEqualsSignKeyword_1_6_1_1_1_1_0_0());
            	                              													
            	                            }

            	                            }
            	                            break;
            	                        case 2 :
            	                            // InternalMcmodel.g:9970:14: otherlv_67= '=='
            	                            {
            	                            otherlv_67=(Token)match(input,58,FOLLOW_7); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_67, grammarAccess.getOverridePredicate_7Access().getEqualsSignEqualsSignKeyword_1_6_1_1_1_1_0_1());
            	                              													
            	                            }

            	                            }
            	                            break;

            	                    }

            	                    // InternalMcmodel.g:9975:13: ( ( (lv_lefthanded_68_0= 'true' ) ) | otherlv_69= 'false' )
            	                    int alt299=2;
            	                    int LA299_0 = input.LA(1);

            	                    if ( (LA299_0==20) ) {
            	                        alt299=1;
            	                    }
            	                    else if ( (LA299_0==21) ) {
            	                        alt299=2;
            	                    }
            	                    else {
            	                        if (state.backtracking>0) {state.failed=true; return current;}
            	                        NoViableAltException nvae =
            	                            new NoViableAltException("", 299, 0, input);

            	                        throw nvae;
            	                    }
            	                    switch (alt299) {
            	                        case 1 :
            	                            // InternalMcmodel.g:9976:14: ( (lv_lefthanded_68_0= 'true' ) )
            	                            {
            	                            // InternalMcmodel.g:9976:14: ( (lv_lefthanded_68_0= 'true' ) )
            	                            // InternalMcmodel.g:9977:15: (lv_lefthanded_68_0= 'true' )
            	                            {
            	                            // InternalMcmodel.g:9977:15: (lv_lefthanded_68_0= 'true' )
            	                            // InternalMcmodel.g:9978:16: lv_lefthanded_68_0= 'true'
            	                            {
            	                            lv_lefthanded_68_0=(Token)match(input,20,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              																newLeafNode(lv_lefthanded_68_0, grammarAccess.getOverridePredicate_7Access().getLefthandedTrueKeyword_1_6_1_1_1_1_1_0_0());
            	                              															
            	                            }
            	                            if ( state.backtracking==0 ) {

            	                              																if (current==null) {
            	                              																	current = createModelElement(grammarAccess.getOverridePredicate_7Rule());
            	                              																}
            	                              																setWithLastConsumed(current, "lefthanded", true, "true");
            	                              															
            	                            }

            	                            }


            	                            }


            	                            }
            	                            break;
            	                        case 2 :
            	                            // InternalMcmodel.g:9991:14: otherlv_69= 'false'
            	                            {
            	                            otherlv_69=(Token)match(input,21,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_69, grammarAccess.getOverridePredicate_7Access().getFalseKeyword_1_6_1_1_1_1_1_1());
            	                              													
            	                            }

            	                            }
            	                            break;

            	                    }


            	                    }


            	                    }
            	                    break;

            	            }


            	            }


            	            }
            	            break;

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getOverridePredicate_7Access().getUnorderedGroup_1());

            	    }


            	    }


            	    }
            	    break;
            	case 8 :
            	    // InternalMcmodel.g:10006:4: ({...}? => ( ({...}? => (otherlv_70= '&' ( (lv_pullDefined_71_0= 'pull' ) ) (otherlv_72= '=' | otherlv_73= '==' ) ( (lv_pull_74_0= RULE_PERCENTAGE ) ) ) ) ) )
            	    {
            	    // InternalMcmodel.g:10006:4: ({...}? => ( ({...}? => (otherlv_70= '&' ( (lv_pullDefined_71_0= 'pull' ) ) (otherlv_72= '=' | otherlv_73= '==' ) ( (lv_pull_74_0= RULE_PERCENTAGE ) ) ) ) ) )
            	    // InternalMcmodel.g:10007:5: {...}? => ( ({...}? => (otherlv_70= '&' ( (lv_pullDefined_71_0= 'pull' ) ) (otherlv_72= '=' | otherlv_73= '==' ) ( (lv_pull_74_0= RULE_PERCENTAGE ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_7Access().getUnorderedGroup_1(), 7) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_7", "getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_7Access().getUnorderedGroup_1(), 7)");
            	    }
            	    // InternalMcmodel.g:10007:116: ( ({...}? => (otherlv_70= '&' ( (lv_pullDefined_71_0= 'pull' ) ) (otherlv_72= '=' | otherlv_73= '==' ) ( (lv_pull_74_0= RULE_PERCENTAGE ) ) ) ) )
            	    // InternalMcmodel.g:10008:6: ({...}? => (otherlv_70= '&' ( (lv_pullDefined_71_0= 'pull' ) ) (otherlv_72= '=' | otherlv_73= '==' ) ( (lv_pull_74_0= RULE_PERCENTAGE ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getOverridePredicate_7Access().getUnorderedGroup_1(), 7);
            	    // InternalMcmodel.g:10011:9: ({...}? => (otherlv_70= '&' ( (lv_pullDefined_71_0= 'pull' ) ) (otherlv_72= '=' | otherlv_73= '==' ) ( (lv_pull_74_0= RULE_PERCENTAGE ) ) ) )
            	    // InternalMcmodel.g:10011:10: {...}? => (otherlv_70= '&' ( (lv_pullDefined_71_0= 'pull' ) ) (otherlv_72= '=' | otherlv_73= '==' ) ( (lv_pull_74_0= RULE_PERCENTAGE ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_7", "true");
            	    }
            	    // InternalMcmodel.g:10011:19: (otherlv_70= '&' ( (lv_pullDefined_71_0= 'pull' ) ) (otherlv_72= '=' | otherlv_73= '==' ) ( (lv_pull_74_0= RULE_PERCENTAGE ) ) )
            	    // InternalMcmodel.g:10011:20: otherlv_70= '&' ( (lv_pullDefined_71_0= 'pull' ) ) (otherlv_72= '=' | otherlv_73= '==' ) ( (lv_pull_74_0= RULE_PERCENTAGE ) )
            	    {
            	    otherlv_70=(Token)match(input,59,FOLLOW_51); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_70, grammarAccess.getOverridePredicate_7Access().getAmpersandKeyword_1_7_0());
            	      								
            	    }
            	    // InternalMcmodel.g:10015:9: ( (lv_pullDefined_71_0= 'pull' ) )
            	    // InternalMcmodel.g:10016:10: (lv_pullDefined_71_0= 'pull' )
            	    {
            	    // InternalMcmodel.g:10016:10: (lv_pullDefined_71_0= 'pull' )
            	    // InternalMcmodel.g:10017:11: lv_pullDefined_71_0= 'pull'
            	    {
            	    lv_pullDefined_71_0=(Token)match(input,69,FOLLOW_35); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											newLeafNode(lv_pullDefined_71_0, grammarAccess.getOverridePredicate_7Access().getPullDefinedPullKeyword_1_7_1_0());
            	      										
            	    }
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElement(grammarAccess.getOverridePredicate_7Rule());
            	      											}
            	      											setWithLastConsumed(current, "pullDefined", true, "pull");
            	      										
            	    }

            	    }


            	    }

            	    // InternalMcmodel.g:10029:9: (otherlv_72= '=' | otherlv_73= '==' )
            	    int alt302=2;
            	    int LA302_0 = input.LA(1);

            	    if ( (LA302_0==18) ) {
            	        alt302=1;
            	    }
            	    else if ( (LA302_0==58) ) {
            	        alt302=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 302, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt302) {
            	        case 1 :
            	            // InternalMcmodel.g:10030:10: otherlv_72= '='
            	            {
            	            otherlv_72=(Token)match(input,18,FOLLOW_36); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(otherlv_72, grammarAccess.getOverridePredicate_7Access().getEqualsSignKeyword_1_7_2_0());
            	              									
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalMcmodel.g:10035:10: otherlv_73= '=='
            	            {
            	            otherlv_73=(Token)match(input,58,FOLLOW_36); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(otherlv_73, grammarAccess.getOverridePredicate_7Access().getEqualsSignEqualsSignKeyword_1_7_2_1());
            	              									
            	            }

            	            }
            	            break;

            	    }

            	    // InternalMcmodel.g:10040:9: ( (lv_pull_74_0= RULE_PERCENTAGE ) )
            	    // InternalMcmodel.g:10041:10: (lv_pull_74_0= RULE_PERCENTAGE )
            	    {
            	    // InternalMcmodel.g:10041:10: (lv_pull_74_0= RULE_PERCENTAGE )
            	    // InternalMcmodel.g:10042:11: lv_pull_74_0= RULE_PERCENTAGE
            	    {
            	    lv_pull_74_0=(Token)match(input,RULE_PERCENTAGE,FOLLOW_37); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											newLeafNode(lv_pull_74_0, grammarAccess.getOverridePredicate_7Access().getPullPERCENTAGETerminalRuleCall_1_7_3_0());
            	      										
            	    }
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElement(grammarAccess.getOverridePredicate_7Rule());
            	      											}
            	      											setWithLastConsumed(
            	      												current,
            	      												"pull",
            	      												lv_pull_74_0,
            	      												"com.raptor.mcmodel.Mcmodel.PERCENTAGE");
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getOverridePredicate_7Access().getUnorderedGroup_1());

            	    }


            	    }


            	    }
            	    break;
            	case 9 :
            	    // InternalMcmodel.g:10064:4: ({...}? => ( ({...}? => (otherlv_75= '&' ( ( ( (lv_pullingDefined_76_0= '!' ) ) otherlv_77= 'pulling' ) | ( ( (lv_pullingDefined_78_0= 'pulling' ) ) ( (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) ) | ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) ) ) ) ) ) ) ) )
            	    {
            	    // InternalMcmodel.g:10064:4: ({...}? => ( ({...}? => (otherlv_75= '&' ( ( ( (lv_pullingDefined_76_0= '!' ) ) otherlv_77= 'pulling' ) | ( ( (lv_pullingDefined_78_0= 'pulling' ) ) ( (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) ) | ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) ) ) ) ) ) ) ) )
            	    // InternalMcmodel.g:10065:5: {...}? => ( ({...}? => (otherlv_75= '&' ( ( ( (lv_pullingDefined_76_0= '!' ) ) otherlv_77= 'pulling' ) | ( ( (lv_pullingDefined_78_0= 'pulling' ) ) ( (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) ) | ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) ) ) ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_7Access().getUnorderedGroup_1(), 8) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_7", "getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_7Access().getUnorderedGroup_1(), 8)");
            	    }
            	    // InternalMcmodel.g:10065:116: ( ({...}? => (otherlv_75= '&' ( ( ( (lv_pullingDefined_76_0= '!' ) ) otherlv_77= 'pulling' ) | ( ( (lv_pullingDefined_78_0= 'pulling' ) ) ( (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) ) | ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) ) ) ) ) ) ) )
            	    // InternalMcmodel.g:10066:6: ({...}? => (otherlv_75= '&' ( ( ( (lv_pullingDefined_76_0= '!' ) ) otherlv_77= 'pulling' ) | ( ( (lv_pullingDefined_78_0= 'pulling' ) ) ( (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) ) | ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) ) ) ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getOverridePredicate_7Access().getUnorderedGroup_1(), 8);
            	    // InternalMcmodel.g:10069:9: ({...}? => (otherlv_75= '&' ( ( ( (lv_pullingDefined_76_0= '!' ) ) otherlv_77= 'pulling' ) | ( ( (lv_pullingDefined_78_0= 'pulling' ) ) ( (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) ) | ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) ) ) ) ) ) )
            	    // InternalMcmodel.g:10069:10: {...}? => (otherlv_75= '&' ( ( ( (lv_pullingDefined_76_0= '!' ) ) otherlv_77= 'pulling' ) | ( ( (lv_pullingDefined_78_0= 'pulling' ) ) ( (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) ) | ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) ) ) ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_7", "true");
            	    }
            	    // InternalMcmodel.g:10069:19: (otherlv_75= '&' ( ( ( (lv_pullingDefined_76_0= '!' ) ) otherlv_77= 'pulling' ) | ( ( (lv_pullingDefined_78_0= 'pulling' ) ) ( (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) ) | ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) ) ) ) ) )
            	    // InternalMcmodel.g:10069:20: otherlv_75= '&' ( ( ( (lv_pullingDefined_76_0= '!' ) ) otherlv_77= 'pulling' ) | ( ( (lv_pullingDefined_78_0= 'pulling' ) ) ( (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) ) | ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) ) ) ) )
            	    {
            	    otherlv_75=(Token)match(input,59,FOLLOW_52); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_75, grammarAccess.getOverridePredicate_7Access().getAmpersandKeyword_1_8_0());
            	      								
            	    }
            	    // InternalMcmodel.g:10073:9: ( ( ( (lv_pullingDefined_76_0= '!' ) ) otherlv_77= 'pulling' ) | ( ( (lv_pullingDefined_78_0= 'pulling' ) ) ( (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) ) | ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) ) ) ) )
            	    int alt307=2;
            	    int LA307_0 = input.LA(1);

            	    if ( (LA307_0==60) ) {
            	        alt307=1;
            	    }
            	    else if ( (LA307_0==70) ) {
            	        alt307=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 307, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt307) {
            	        case 1 :
            	            // InternalMcmodel.g:10074:10: ( ( (lv_pullingDefined_76_0= '!' ) ) otherlv_77= 'pulling' )
            	            {
            	            // InternalMcmodel.g:10074:10: ( ( (lv_pullingDefined_76_0= '!' ) ) otherlv_77= 'pulling' )
            	            // InternalMcmodel.g:10075:11: ( (lv_pullingDefined_76_0= '!' ) ) otherlv_77= 'pulling'
            	            {
            	            // InternalMcmodel.g:10075:11: ( (lv_pullingDefined_76_0= '!' ) )
            	            // InternalMcmodel.g:10076:12: (lv_pullingDefined_76_0= '!' )
            	            {
            	            // InternalMcmodel.g:10076:12: (lv_pullingDefined_76_0= '!' )
            	            // InternalMcmodel.g:10077:13: lv_pullingDefined_76_0= '!'
            	            {
            	            lv_pullingDefined_76_0=(Token)match(input,60,FOLLOW_53); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              													newLeafNode(lv_pullingDefined_76_0, grammarAccess.getOverridePredicate_7Access().getPullingDefinedExclamationMarkKeyword_1_8_1_0_0_0());
            	              												
            	            }
            	            if ( state.backtracking==0 ) {

            	              													if (current==null) {
            	              														current = createModelElement(grammarAccess.getOverridePredicate_7Rule());
            	              													}
            	              													setWithLastConsumed(current, "pullingDefined", true, "!");
            	              												
            	            }

            	            }


            	            }

            	            otherlv_77=(Token)match(input,70,FOLLOW_37); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              											newLeafNode(otherlv_77, grammarAccess.getOverridePredicate_7Access().getPullingKeyword_1_8_1_0_1());
            	              										
            	            }

            	            }


            	            }
            	            break;
            	        case 2 :
            	            // InternalMcmodel.g:10095:10: ( ( (lv_pullingDefined_78_0= 'pulling' ) ) ( (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) ) | ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) ) ) )
            	            {
            	            // InternalMcmodel.g:10095:10: ( ( (lv_pullingDefined_78_0= 'pulling' ) ) ( (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) ) | ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) ) ) )
            	            // InternalMcmodel.g:10096:11: ( (lv_pullingDefined_78_0= 'pulling' ) ) ( (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) ) | ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) ) )
            	            {
            	            // InternalMcmodel.g:10096:11: ( (lv_pullingDefined_78_0= 'pulling' ) )
            	            // InternalMcmodel.g:10097:12: (lv_pullingDefined_78_0= 'pulling' )
            	            {
            	            // InternalMcmodel.g:10097:12: (lv_pullingDefined_78_0= 'pulling' )
            	            // InternalMcmodel.g:10098:13: lv_pullingDefined_78_0= 'pulling'
            	            {
            	            lv_pullingDefined_78_0=(Token)match(input,70,FOLLOW_40); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              													newLeafNode(lv_pullingDefined_78_0, grammarAccess.getOverridePredicate_7Access().getPullingDefinedPullingKeyword_1_8_1_1_0_0());
            	              												
            	            }
            	            if ( state.backtracking==0 ) {

            	              													if (current==null) {
            	              														current = createModelElement(grammarAccess.getOverridePredicate_7Rule());
            	              													}
            	              													setWithLastConsumed(current, "pullingDefined", true, "pulling");
            	              												
            	            }

            	            }


            	            }

            	            // InternalMcmodel.g:10110:11: ( (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) ) | ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) ) )
            	            int alt306=2;
            	            int LA306_0 = input.LA(1);

            	            if ( (LA306_0==62) ) {
            	                alt306=1;
            	            }
            	            else if ( (LA306_0==18||LA306_0==58) ) {
            	                alt306=2;
            	            }
            	            else {
            	                if (state.backtracking>0) {state.failed=true; return current;}
            	                NoViableAltException nvae =
            	                    new NoViableAltException("", 306, 0, input);

            	                throw nvae;
            	            }
            	            switch (alt306) {
            	                case 1 :
            	                    // InternalMcmodel.g:10111:12: (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) )
            	                    {
            	                    // InternalMcmodel.g:10111:12: (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) )
            	                    // InternalMcmodel.g:10112:13: otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' )
            	                    {
            	                    otherlv_79=(Token)match(input,62,FOLLOW_7); if (state.failed) return current;
            	                    if ( state.backtracking==0 ) {

            	                      													newLeafNode(otherlv_79, grammarAccess.getOverridePredicate_7Access().getExclamationMarkEqualsSignKeyword_1_8_1_1_1_0_0());
            	                      												
            	                    }
            	                    // InternalMcmodel.g:10116:13: ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' )
            	                    int alt303=2;
            	                    int LA303_0 = input.LA(1);

            	                    if ( (LA303_0==21) ) {
            	                        alt303=1;
            	                    }
            	                    else if ( (LA303_0==20) ) {
            	                        alt303=2;
            	                    }
            	                    else {
            	                        if (state.backtracking>0) {state.failed=true; return current;}
            	                        NoViableAltException nvae =
            	                            new NoViableAltException("", 303, 0, input);

            	                        throw nvae;
            	                    }
            	                    switch (alt303) {
            	                        case 1 :
            	                            // InternalMcmodel.g:10117:14: ( (lv_pulling_80_0= 'false' ) )
            	                            {
            	                            // InternalMcmodel.g:10117:14: ( (lv_pulling_80_0= 'false' ) )
            	                            // InternalMcmodel.g:10118:15: (lv_pulling_80_0= 'false' )
            	                            {
            	                            // InternalMcmodel.g:10118:15: (lv_pulling_80_0= 'false' )
            	                            // InternalMcmodel.g:10119:16: lv_pulling_80_0= 'false'
            	                            {
            	                            lv_pulling_80_0=(Token)match(input,21,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              																newLeafNode(lv_pulling_80_0, grammarAccess.getOverridePredicate_7Access().getPullingFalseKeyword_1_8_1_1_1_0_1_0_0());
            	                              															
            	                            }
            	                            if ( state.backtracking==0 ) {

            	                              																if (current==null) {
            	                              																	current = createModelElement(grammarAccess.getOverridePredicate_7Rule());
            	                              																}
            	                              																setWithLastConsumed(current, "pulling", true, "false");
            	                              															
            	                            }

            	                            }


            	                            }


            	                            }
            	                            break;
            	                        case 2 :
            	                            // InternalMcmodel.g:10132:14: otherlv_81= 'true'
            	                            {
            	                            otherlv_81=(Token)match(input,20,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_81, grammarAccess.getOverridePredicate_7Access().getTrueKeyword_1_8_1_1_1_0_1_1());
            	                              													
            	                            }

            	                            }
            	                            break;

            	                    }


            	                    }


            	                    }
            	                    break;
            	                case 2 :
            	                    // InternalMcmodel.g:10139:12: ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) )
            	                    {
            	                    // InternalMcmodel.g:10139:12: ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) )
            	                    // InternalMcmodel.g:10140:13: (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' )
            	                    {
            	                    // InternalMcmodel.g:10140:13: (otherlv_82= '=' | otherlv_83= '==' )
            	                    int alt304=2;
            	                    int LA304_0 = input.LA(1);

            	                    if ( (LA304_0==18) ) {
            	                        alt304=1;
            	                    }
            	                    else if ( (LA304_0==58) ) {
            	                        alt304=2;
            	                    }
            	                    else {
            	                        if (state.backtracking>0) {state.failed=true; return current;}
            	                        NoViableAltException nvae =
            	                            new NoViableAltException("", 304, 0, input);

            	                        throw nvae;
            	                    }
            	                    switch (alt304) {
            	                        case 1 :
            	                            // InternalMcmodel.g:10141:14: otherlv_82= '='
            	                            {
            	                            otherlv_82=(Token)match(input,18,FOLLOW_7); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_82, grammarAccess.getOverridePredicate_7Access().getEqualsSignKeyword_1_8_1_1_1_1_0_0());
            	                              													
            	                            }

            	                            }
            	                            break;
            	                        case 2 :
            	                            // InternalMcmodel.g:10146:14: otherlv_83= '=='
            	                            {
            	                            otherlv_83=(Token)match(input,58,FOLLOW_7); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_83, grammarAccess.getOverridePredicate_7Access().getEqualsSignEqualsSignKeyword_1_8_1_1_1_1_0_1());
            	                              													
            	                            }

            	                            }
            	                            break;

            	                    }

            	                    // InternalMcmodel.g:10151:13: ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' )
            	                    int alt305=2;
            	                    int LA305_0 = input.LA(1);

            	                    if ( (LA305_0==20) ) {
            	                        alt305=1;
            	                    }
            	                    else if ( (LA305_0==21) ) {
            	                        alt305=2;
            	                    }
            	                    else {
            	                        if (state.backtracking>0) {state.failed=true; return current;}
            	                        NoViableAltException nvae =
            	                            new NoViableAltException("", 305, 0, input);

            	                        throw nvae;
            	                    }
            	                    switch (alt305) {
            	                        case 1 :
            	                            // InternalMcmodel.g:10152:14: ( (lv_pulling_84_0= 'true' ) )
            	                            {
            	                            // InternalMcmodel.g:10152:14: ( (lv_pulling_84_0= 'true' ) )
            	                            // InternalMcmodel.g:10153:15: (lv_pulling_84_0= 'true' )
            	                            {
            	                            // InternalMcmodel.g:10153:15: (lv_pulling_84_0= 'true' )
            	                            // InternalMcmodel.g:10154:16: lv_pulling_84_0= 'true'
            	                            {
            	                            lv_pulling_84_0=(Token)match(input,20,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              																newLeafNode(lv_pulling_84_0, grammarAccess.getOverridePredicate_7Access().getPullingTrueKeyword_1_8_1_1_1_1_1_0_0());
            	                              															
            	                            }
            	                            if ( state.backtracking==0 ) {

            	                              																if (current==null) {
            	                              																	current = createModelElement(grammarAccess.getOverridePredicate_7Rule());
            	                              																}
            	                              																setWithLastConsumed(current, "pulling", true, "true");
            	                              															
            	                            }

            	                            }


            	                            }


            	                            }
            	                            break;
            	                        case 2 :
            	                            // InternalMcmodel.g:10167:14: otherlv_85= 'false'
            	                            {
            	                            otherlv_85=(Token)match(input,21,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_85, grammarAccess.getOverridePredicate_7Access().getFalseKeyword_1_8_1_1_1_1_1_1());
            	                              													
            	                            }

            	                            }
            	                            break;

            	                    }


            	                    }


            	                    }
            	                    break;

            	            }


            	            }


            	            }
            	            break;

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getOverridePredicate_7Access().getUnorderedGroup_1());

            	    }


            	    }


            	    }
            	    break;
            	case 10 :
            	    // InternalMcmodel.g:10182:4: ({...}? => ( ({...}? => (otherlv_86= '&' ( ( ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing' ) | ( ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) ) ) ) ) ) )
            	    {
            	    // InternalMcmodel.g:10182:4: ({...}? => ( ({...}? => (otherlv_86= '&' ( ( ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing' ) | ( ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) ) ) ) ) ) )
            	    // InternalMcmodel.g:10183:5: {...}? => ( ({...}? => (otherlv_86= '&' ( ( ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing' ) | ( ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_7Access().getUnorderedGroup_1(), 9) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_7", "getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_7Access().getUnorderedGroup_1(), 9)");
            	    }
            	    // InternalMcmodel.g:10183:116: ( ({...}? => (otherlv_86= '&' ( ( ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing' ) | ( ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) ) ) ) ) )
            	    // InternalMcmodel.g:10184:6: ({...}? => (otherlv_86= '&' ( ( ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing' ) | ( ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getOverridePredicate_7Access().getUnorderedGroup_1(), 9);
            	    // InternalMcmodel.g:10187:9: ({...}? => (otherlv_86= '&' ( ( ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing' ) | ( ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) ) ) ) )
            	    // InternalMcmodel.g:10187:10: {...}? => (otherlv_86= '&' ( ( ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing' ) | ( ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_7", "true");
            	    }
            	    // InternalMcmodel.g:10187:19: (otherlv_86= '&' ( ( ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing' ) | ( ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) ) ) )
            	    // InternalMcmodel.g:10187:20: otherlv_86= '&' ( ( ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing' ) | ( ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) ) )
            	    {
            	    otherlv_86=(Token)match(input,59,FOLLOW_54); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_86, grammarAccess.getOverridePredicate_7Access().getAmpersandKeyword_1_9_0());
            	      								
            	    }
            	    // InternalMcmodel.g:10191:9: ( ( ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing' ) | ( ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) ) )
            	    int alt312=2;
            	    int LA312_0 = input.LA(1);

            	    if ( (LA312_0==60) ) {
            	        alt312=1;
            	    }
            	    else if ( (LA312_0==71) ) {
            	        alt312=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 312, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt312) {
            	        case 1 :
            	            // InternalMcmodel.g:10192:10: ( ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing' )
            	            {
            	            // InternalMcmodel.g:10192:10: ( ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing' )
            	            // InternalMcmodel.g:10193:11: ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing'
            	            {
            	            // InternalMcmodel.g:10193:11: ( (lv_throwingDefined_87_0= '!' ) )
            	            // InternalMcmodel.g:10194:12: (lv_throwingDefined_87_0= '!' )
            	            {
            	            // InternalMcmodel.g:10194:12: (lv_throwingDefined_87_0= '!' )
            	            // InternalMcmodel.g:10195:13: lv_throwingDefined_87_0= '!'
            	            {
            	            lv_throwingDefined_87_0=(Token)match(input,60,FOLLOW_55); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              													newLeafNode(lv_throwingDefined_87_0, grammarAccess.getOverridePredicate_7Access().getThrowingDefinedExclamationMarkKeyword_1_9_1_0_0_0());
            	              												
            	            }
            	            if ( state.backtracking==0 ) {

            	              													if (current==null) {
            	              														current = createModelElement(grammarAccess.getOverridePredicate_7Rule());
            	              													}
            	              													setWithLastConsumed(current, "throwingDefined", true, "!");
            	              												
            	            }

            	            }


            	            }

            	            otherlv_88=(Token)match(input,71,FOLLOW_37); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              											newLeafNode(otherlv_88, grammarAccess.getOverridePredicate_7Access().getThrowingKeyword_1_9_1_0_1());
            	              										
            	            }

            	            }


            	            }
            	            break;
            	        case 2 :
            	            // InternalMcmodel.g:10213:10: ( ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) )
            	            {
            	            // InternalMcmodel.g:10213:10: ( ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) )
            	            // InternalMcmodel.g:10214:11: ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) )
            	            {
            	            // InternalMcmodel.g:10214:11: ( (lv_throwingDefined_89_0= 'throwing' ) )
            	            // InternalMcmodel.g:10215:12: (lv_throwingDefined_89_0= 'throwing' )
            	            {
            	            // InternalMcmodel.g:10215:12: (lv_throwingDefined_89_0= 'throwing' )
            	            // InternalMcmodel.g:10216:13: lv_throwingDefined_89_0= 'throwing'
            	            {
            	            lv_throwingDefined_89_0=(Token)match(input,71,FOLLOW_40); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              													newLeafNode(lv_throwingDefined_89_0, grammarAccess.getOverridePredicate_7Access().getThrowingDefinedThrowingKeyword_1_9_1_1_0_0());
            	              												
            	            }
            	            if ( state.backtracking==0 ) {

            	              													if (current==null) {
            	              														current = createModelElement(grammarAccess.getOverridePredicate_7Rule());
            	              													}
            	              													setWithLastConsumed(current, "throwingDefined", true, "throwing");
            	              												
            	            }

            	            }


            	            }

            	            // InternalMcmodel.g:10228:11: ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) )
            	            int alt311=2;
            	            int LA311_0 = input.LA(1);

            	            if ( (LA311_0==62) ) {
            	                alt311=1;
            	            }
            	            else if ( (LA311_0==18||LA311_0==58) ) {
            	                alt311=2;
            	            }
            	            else {
            	                if (state.backtracking>0) {state.failed=true; return current;}
            	                NoViableAltException nvae =
            	                    new NoViableAltException("", 311, 0, input);

            	                throw nvae;
            	            }
            	            switch (alt311) {
            	                case 1 :
            	                    // InternalMcmodel.g:10229:12: (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) )
            	                    {
            	                    // InternalMcmodel.g:10229:12: (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) )
            	                    // InternalMcmodel.g:10230:13: otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' )
            	                    {
            	                    otherlv_90=(Token)match(input,62,FOLLOW_7); if (state.failed) return current;
            	                    if ( state.backtracking==0 ) {

            	                      													newLeafNode(otherlv_90, grammarAccess.getOverridePredicate_7Access().getExclamationMarkEqualsSignKeyword_1_9_1_1_1_0_0());
            	                      												
            	                    }
            	                    // InternalMcmodel.g:10234:13: ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' )
            	                    int alt308=2;
            	                    int LA308_0 = input.LA(1);

            	                    if ( (LA308_0==21) ) {
            	                        alt308=1;
            	                    }
            	                    else if ( (LA308_0==20) ) {
            	                        alt308=2;
            	                    }
            	                    else {
            	                        if (state.backtracking>0) {state.failed=true; return current;}
            	                        NoViableAltException nvae =
            	                            new NoViableAltException("", 308, 0, input);

            	                        throw nvae;
            	                    }
            	                    switch (alt308) {
            	                        case 1 :
            	                            // InternalMcmodel.g:10235:14: ( (lv_throwing_91_0= 'false' ) )
            	                            {
            	                            // InternalMcmodel.g:10235:14: ( (lv_throwing_91_0= 'false' ) )
            	                            // InternalMcmodel.g:10236:15: (lv_throwing_91_0= 'false' )
            	                            {
            	                            // InternalMcmodel.g:10236:15: (lv_throwing_91_0= 'false' )
            	                            // InternalMcmodel.g:10237:16: lv_throwing_91_0= 'false'
            	                            {
            	                            lv_throwing_91_0=(Token)match(input,21,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              																newLeafNode(lv_throwing_91_0, grammarAccess.getOverridePredicate_7Access().getThrowingFalseKeyword_1_9_1_1_1_0_1_0_0());
            	                              															
            	                            }
            	                            if ( state.backtracking==0 ) {

            	                              																if (current==null) {
            	                              																	current = createModelElement(grammarAccess.getOverridePredicate_7Rule());
            	                              																}
            	                              																setWithLastConsumed(current, "throwing", true, "false");
            	                              															
            	                            }

            	                            }


            	                            }


            	                            }
            	                            break;
            	                        case 2 :
            	                            // InternalMcmodel.g:10250:14: otherlv_92= 'true'
            	                            {
            	                            otherlv_92=(Token)match(input,20,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_92, grammarAccess.getOverridePredicate_7Access().getTrueKeyword_1_9_1_1_1_0_1_1());
            	                              													
            	                            }

            	                            }
            	                            break;

            	                    }


            	                    }


            	                    }
            	                    break;
            	                case 2 :
            	                    // InternalMcmodel.g:10257:12: ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) )
            	                    {
            	                    // InternalMcmodel.g:10257:12: ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) )
            	                    // InternalMcmodel.g:10258:13: (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' )
            	                    {
            	                    // InternalMcmodel.g:10258:13: (otherlv_93= '=' | otherlv_94= '==' )
            	                    int alt309=2;
            	                    int LA309_0 = input.LA(1);

            	                    if ( (LA309_0==18) ) {
            	                        alt309=1;
            	                    }
            	                    else if ( (LA309_0==58) ) {
            	                        alt309=2;
            	                    }
            	                    else {
            	                        if (state.backtracking>0) {state.failed=true; return current;}
            	                        NoViableAltException nvae =
            	                            new NoViableAltException("", 309, 0, input);

            	                        throw nvae;
            	                    }
            	                    switch (alt309) {
            	                        case 1 :
            	                            // InternalMcmodel.g:10259:14: otherlv_93= '='
            	                            {
            	                            otherlv_93=(Token)match(input,18,FOLLOW_7); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_93, grammarAccess.getOverridePredicate_7Access().getEqualsSignKeyword_1_9_1_1_1_1_0_0());
            	                              													
            	                            }

            	                            }
            	                            break;
            	                        case 2 :
            	                            // InternalMcmodel.g:10264:14: otherlv_94= '=='
            	                            {
            	                            otherlv_94=(Token)match(input,58,FOLLOW_7); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_94, grammarAccess.getOverridePredicate_7Access().getEqualsSignEqualsSignKeyword_1_9_1_1_1_1_0_1());
            	                              													
            	                            }

            	                            }
            	                            break;

            	                    }

            	                    // InternalMcmodel.g:10269:13: ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' )
            	                    int alt310=2;
            	                    int LA310_0 = input.LA(1);

            	                    if ( (LA310_0==20) ) {
            	                        alt310=1;
            	                    }
            	                    else if ( (LA310_0==21) ) {
            	                        alt310=2;
            	                    }
            	                    else {
            	                        if (state.backtracking>0) {state.failed=true; return current;}
            	                        NoViableAltException nvae =
            	                            new NoViableAltException("", 310, 0, input);

            	                        throw nvae;
            	                    }
            	                    switch (alt310) {
            	                        case 1 :
            	                            // InternalMcmodel.g:10270:14: ( (lv_throwing_95_0= 'true' ) )
            	                            {
            	                            // InternalMcmodel.g:10270:14: ( (lv_throwing_95_0= 'true' ) )
            	                            // InternalMcmodel.g:10271:15: (lv_throwing_95_0= 'true' )
            	                            {
            	                            // InternalMcmodel.g:10271:15: (lv_throwing_95_0= 'true' )
            	                            // InternalMcmodel.g:10272:16: lv_throwing_95_0= 'true'
            	                            {
            	                            lv_throwing_95_0=(Token)match(input,20,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              																newLeafNode(lv_throwing_95_0, grammarAccess.getOverridePredicate_7Access().getThrowingTrueKeyword_1_9_1_1_1_1_1_0_0());
            	                              															
            	                            }
            	                            if ( state.backtracking==0 ) {

            	                              																if (current==null) {
            	                              																	current = createModelElement(grammarAccess.getOverridePredicate_7Rule());
            	                              																}
            	                              																setWithLastConsumed(current, "throwing", true, "true");
            	                              															
            	                            }

            	                            }


            	                            }


            	                            }
            	                            break;
            	                        case 2 :
            	                            // InternalMcmodel.g:10285:14: otherlv_96= 'false'
            	                            {
            	                            otherlv_96=(Token)match(input,21,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_96, grammarAccess.getOverridePredicate_7Access().getFalseKeyword_1_9_1_1_1_1_1_1());
            	                              													
            	                            }

            	                            }
            	                            break;

            	                    }


            	                    }


            	                    }
            	                    break;

            	            }


            	            }


            	            }
            	            break;

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getOverridePredicate_7Access().getUnorderedGroup_1());

            	    }


            	    }


            	    }
            	    break;
            	case 11 :
            	    // InternalMcmodel.g:10300:4: ({...}? => ( ({...}? => (otherlv_97= '&' ( (lv_timeDefined_98_0= 'time' ) ) (otherlv_99= '=' | otherlv_100= '==' ) ( (lv_time_101_0= RULE_PERCENTAGE ) ) ) ) ) )
            	    {
            	    // InternalMcmodel.g:10300:4: ({...}? => ( ({...}? => (otherlv_97= '&' ( (lv_timeDefined_98_0= 'time' ) ) (otherlv_99= '=' | otherlv_100= '==' ) ( (lv_time_101_0= RULE_PERCENTAGE ) ) ) ) ) )
            	    // InternalMcmodel.g:10301:5: {...}? => ( ({...}? => (otherlv_97= '&' ( (lv_timeDefined_98_0= 'time' ) ) (otherlv_99= '=' | otherlv_100= '==' ) ( (lv_time_101_0= RULE_PERCENTAGE ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_7Access().getUnorderedGroup_1(), 10) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_7", "getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_7Access().getUnorderedGroup_1(), 10)");
            	    }
            	    // InternalMcmodel.g:10301:117: ( ({...}? => (otherlv_97= '&' ( (lv_timeDefined_98_0= 'time' ) ) (otherlv_99= '=' | otherlv_100= '==' ) ( (lv_time_101_0= RULE_PERCENTAGE ) ) ) ) )
            	    // InternalMcmodel.g:10302:6: ({...}? => (otherlv_97= '&' ( (lv_timeDefined_98_0= 'time' ) ) (otherlv_99= '=' | otherlv_100= '==' ) ( (lv_time_101_0= RULE_PERCENTAGE ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getOverridePredicate_7Access().getUnorderedGroup_1(), 10);
            	    // InternalMcmodel.g:10305:9: ({...}? => (otherlv_97= '&' ( (lv_timeDefined_98_0= 'time' ) ) (otherlv_99= '=' | otherlv_100= '==' ) ( (lv_time_101_0= RULE_PERCENTAGE ) ) ) )
            	    // InternalMcmodel.g:10305:10: {...}? => (otherlv_97= '&' ( (lv_timeDefined_98_0= 'time' ) ) (otherlv_99= '=' | otherlv_100= '==' ) ( (lv_time_101_0= RULE_PERCENTAGE ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_7", "true");
            	    }
            	    // InternalMcmodel.g:10305:19: (otherlv_97= '&' ( (lv_timeDefined_98_0= 'time' ) ) (otherlv_99= '=' | otherlv_100= '==' ) ( (lv_time_101_0= RULE_PERCENTAGE ) ) )
            	    // InternalMcmodel.g:10305:20: otherlv_97= '&' ( (lv_timeDefined_98_0= 'time' ) ) (otherlv_99= '=' | otherlv_100= '==' ) ( (lv_time_101_0= RULE_PERCENTAGE ) )
            	    {
            	    otherlv_97=(Token)match(input,59,FOLLOW_56); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_97, grammarAccess.getOverridePredicate_7Access().getAmpersandKeyword_1_10_0());
            	      								
            	    }
            	    // InternalMcmodel.g:10309:9: ( (lv_timeDefined_98_0= 'time' ) )
            	    // InternalMcmodel.g:10310:10: (lv_timeDefined_98_0= 'time' )
            	    {
            	    // InternalMcmodel.g:10310:10: (lv_timeDefined_98_0= 'time' )
            	    // InternalMcmodel.g:10311:11: lv_timeDefined_98_0= 'time'
            	    {
            	    lv_timeDefined_98_0=(Token)match(input,72,FOLLOW_35); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											newLeafNode(lv_timeDefined_98_0, grammarAccess.getOverridePredicate_7Access().getTimeDefinedTimeKeyword_1_10_1_0());
            	      										
            	    }
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElement(grammarAccess.getOverridePredicate_7Rule());
            	      											}
            	      											setWithLastConsumed(current, "timeDefined", true, "time");
            	      										
            	    }

            	    }


            	    }

            	    // InternalMcmodel.g:10323:9: (otherlv_99= '=' | otherlv_100= '==' )
            	    int alt313=2;
            	    int LA313_0 = input.LA(1);

            	    if ( (LA313_0==18) ) {
            	        alt313=1;
            	    }
            	    else if ( (LA313_0==58) ) {
            	        alt313=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 313, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt313) {
            	        case 1 :
            	            // InternalMcmodel.g:10324:10: otherlv_99= '='
            	            {
            	            otherlv_99=(Token)match(input,18,FOLLOW_36); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(otherlv_99, grammarAccess.getOverridePredicate_7Access().getEqualsSignKeyword_1_10_2_0());
            	              									
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalMcmodel.g:10329:10: otherlv_100= '=='
            	            {
            	            otherlv_100=(Token)match(input,58,FOLLOW_36); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(otherlv_100, grammarAccess.getOverridePredicate_7Access().getEqualsSignEqualsSignKeyword_1_10_2_1());
            	              									
            	            }

            	            }
            	            break;

            	    }

            	    // InternalMcmodel.g:10334:9: ( (lv_time_101_0= RULE_PERCENTAGE ) )
            	    // InternalMcmodel.g:10335:10: (lv_time_101_0= RULE_PERCENTAGE )
            	    {
            	    // InternalMcmodel.g:10335:10: (lv_time_101_0= RULE_PERCENTAGE )
            	    // InternalMcmodel.g:10336:11: lv_time_101_0= RULE_PERCENTAGE
            	    {
            	    lv_time_101_0=(Token)match(input,RULE_PERCENTAGE,FOLLOW_37); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											newLeafNode(lv_time_101_0, grammarAccess.getOverridePredicate_7Access().getTimePERCENTAGETerminalRuleCall_1_10_3_0());
            	      										
            	    }
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElement(grammarAccess.getOverridePredicate_7Rule());
            	      											}
            	      											setWithLastConsumed(
            	      												current,
            	      												"time",
            	      												lv_time_101_0,
            	      												"com.raptor.mcmodel.Mcmodel.PERCENTAGE");
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getOverridePredicate_7Access().getUnorderedGroup_1());

            	    }


            	    }


            	    }
            	    break;
            	case 12 :
            	    // InternalMcmodel.g:10358:4: ({...}? => ( ({...}? => (otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) ) ) ) ) )
            	    {
            	    // InternalMcmodel.g:10358:4: ({...}? => ( ({...}? => (otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) ) ) ) ) )
            	    // InternalMcmodel.g:10359:5: {...}? => ( ({...}? => (otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_7Access().getUnorderedGroup_1(), 11) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_7", "getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_7Access().getUnorderedGroup_1(), 11)");
            	    }
            	    // InternalMcmodel.g:10359:117: ( ({...}? => (otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) ) ) ) )
            	    // InternalMcmodel.g:10360:6: ({...}? => (otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getOverridePredicate_7Access().getUnorderedGroup_1(), 11);
            	    // InternalMcmodel.g:10363:9: ({...}? => (otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) ) ) )
            	    // InternalMcmodel.g:10363:10: {...}? => (otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_7", "true");
            	    }
            	    // InternalMcmodel.g:10363:19: (otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) ) )
            	    // InternalMcmodel.g:10363:20: otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) )
            	    {
            	    otherlv_102=(Token)match(input,59,FOLLOW_57); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_102, grammarAccess.getOverridePredicate_7Access().getAmpersandKeyword_1_11_0());
            	      								
            	    }
            	    // InternalMcmodel.g:10367:9: ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) )
            	    // InternalMcmodel.g:10368:10: (lv_customModelDataDefined_103_0= 'custom_model_data' )
            	    {
            	    // InternalMcmodel.g:10368:10: (lv_customModelDataDefined_103_0= 'custom_model_data' )
            	    // InternalMcmodel.g:10369:11: lv_customModelDataDefined_103_0= 'custom_model_data'
            	    {
            	    lv_customModelDataDefined_103_0=(Token)match(input,73,FOLLOW_35); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											newLeafNode(lv_customModelDataDefined_103_0, grammarAccess.getOverridePredicate_7Access().getCustomModelDataDefinedCustom_model_dataKeyword_1_11_1_0());
            	      										
            	    }
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElement(grammarAccess.getOverridePredicate_7Rule());
            	      											}
            	      											setWithLastConsumed(current, "customModelDataDefined", true, "custom_model_data");
            	      										
            	    }

            	    }


            	    }

            	    // InternalMcmodel.g:10381:9: (otherlv_104= '=' | otherlv_105= '==' )
            	    int alt314=2;
            	    int LA314_0 = input.LA(1);

            	    if ( (LA314_0==18) ) {
            	        alt314=1;
            	    }
            	    else if ( (LA314_0==58) ) {
            	        alt314=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 314, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt314) {
            	        case 1 :
            	            // InternalMcmodel.g:10382:10: otherlv_104= '='
            	            {
            	            otherlv_104=(Token)match(input,18,FOLLOW_29); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(otherlv_104, grammarAccess.getOverridePredicate_7Access().getEqualsSignKeyword_1_11_2_0());
            	              									
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalMcmodel.g:10387:10: otherlv_105= '=='
            	            {
            	            otherlv_105=(Token)match(input,58,FOLLOW_29); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(otherlv_105, grammarAccess.getOverridePredicate_7Access().getEqualsSignEqualsSignKeyword_1_11_2_1());
            	              									
            	            }

            	            }
            	            break;

            	    }

            	    // InternalMcmodel.g:10392:9: ( (lv_customModelData_106_0= ruleLONG ) )
            	    // InternalMcmodel.g:10393:10: (lv_customModelData_106_0= ruleLONG )
            	    {
            	    // InternalMcmodel.g:10393:10: (lv_customModelData_106_0= ruleLONG )
            	    // InternalMcmodel.g:10394:11: lv_customModelData_106_0= ruleLONG
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getOverridePredicate_7Access().getCustomModelDataLONGParserRuleCall_1_11_3_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_37);
            	    lv_customModelData_106_0=ruleLONG();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getOverridePredicate_7Rule());
            	      											}
            	      											set(
            	      												current,
            	      												"customModelData",
            	      												lv_customModelData_106_0,
            	      												"com.raptor.mcmodel.Mcmodel.LONG");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getOverridePredicate_7Access().getUnorderedGroup_1());

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop315;
                }
            } while (true);


            }


            }

            getUnorderedGroupHelper().leave(grammarAccess.getOverridePredicate_7Access().getUnorderedGroup_1());

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOverridePredicate_7"


    // $ANTLR start "entryRuleOverridePredicate_8"
    // InternalMcmodel.g:10428:1: entryRuleOverridePredicate_8 returns [EObject current=null] : iv_ruleOverridePredicate_8= ruleOverridePredicate_8 EOF ;
    public final EObject entryRuleOverridePredicate_8() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleOverridePredicate_8 = null;


        try {
            // InternalMcmodel.g:10428:60: (iv_ruleOverridePredicate_8= ruleOverridePredicate_8 EOF )
            // InternalMcmodel.g:10429:2: iv_ruleOverridePredicate_8= ruleOverridePredicate_8 EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOverridePredicate_8Rule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOverridePredicate_8=ruleOverridePredicate_8();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOverridePredicate_8; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOverridePredicate_8"


    // $ANTLR start "ruleOverridePredicate_8"
    // InternalMcmodel.g:10435:1: ruleOverridePredicate_8 returns [EObject current=null] : ( ( ( ( (lv_lefthandedDefined_0_0= '!' ) ) otherlv_1= 'lefthanded' ) | ( ( (lv_lefthandedDefined_2_0= 'lefthanded' ) ) ( (otherlv_3= '!=' ( ( (lv_lefthanded_4_0= 'false' ) ) | otherlv_5= 'true' ) ) | ( (otherlv_6= '=' | otherlv_7= '==' ) ( ( (lv_lefthanded_8_0= 'true' ) ) | otherlv_9= 'false' ) ) ) ) ) ( ( ( ( ({...}? => ( ({...}? => (otherlv_11= '&' ( (lv_angleDefined_12_0= 'angle' ) ) (otherlv_13= '=' | otherlv_14= '==' ) ( (lv_angle_15_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= '&' ( ( ( (lv_blockingDefined_17_0= '!' ) ) otherlv_18= 'blocking' ) | ( ( (lv_blockingDefined_19_0= 'blocking' ) ) ( (otherlv_20= '!=' ( ( (lv_blocking_21_0= 'false' ) ) | otherlv_22= 'true' ) ) | ( (otherlv_23= '=' | otherlv_24= '==' ) ( ( (lv_blocking_25_0= 'true' ) ) | otherlv_26= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= '&' ( ( ( (lv_brokenDefined_28_0= '!' ) ) otherlv_29= 'broken' ) | ( ( (lv_brokenDefined_30_0= 'broken' ) ) ( (otherlv_31= '!=' ( ( (lv_broken_32_0= 'false' ) ) | otherlv_33= 'true' ) ) | ( (otherlv_34= '=' | otherlv_35= '==' ) ( ( (lv_broken_36_0= 'true' ) ) | otherlv_37= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_38= '&' ( ( ( (lv_castDefined_39_0= '!' ) ) otherlv_40= 'cast' ) | ( ( (lv_castDefined_41_0= 'cast' ) ) ( (otherlv_42= '!=' ( ( (lv_cast_43_0= 'false' ) ) | otherlv_44= 'true' ) ) | ( (otherlv_45= '=' | otherlv_46= '==' ) ( ( (lv_cast_47_0= 'true' ) ) | otherlv_48= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_49= '&' ( (lv_cooldownDefined_50_0= 'cooldown' ) ) (otherlv_51= '=' | otherlv_52= '==' ) ( (lv_cooldown_53_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_54= '&' ( (lv_damageDefined_55_0= 'damage' ) ) (otherlv_56= '=' | otherlv_57= '==' ) ( (lv_damage_58_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_59= '&' ( ( ( (lv_damagedDefined_60_0= '!' ) ) otherlv_61= 'damaged' ) | ( ( (lv_damagedDefined_62_0= 'damaged' ) ) ( (otherlv_63= '!=' ( ( (lv_damaged_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_damaged_68_0= 'true' ) ) | otherlv_69= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_70= '&' ( (lv_pullDefined_71_0= 'pull' ) ) (otherlv_72= '=' | otherlv_73= '==' ) ( (lv_pull_74_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_75= '&' ( ( ( (lv_pullingDefined_76_0= '!' ) ) otherlv_77= 'pulling' ) | ( ( (lv_pullingDefined_78_0= 'pulling' ) ) ( (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) ) | ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_86= '&' ( ( ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing' ) | ( ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_97= '&' ( (lv_timeDefined_98_0= 'time' ) ) (otherlv_99= '=' | otherlv_100= '==' ) ( (lv_time_101_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) ) ) ) ) ) )* ) ) ) ) ;
    public final EObject ruleOverridePredicate_8() throws RecognitionException {
        EObject current = null;

        Token lv_lefthandedDefined_0_0=null;
        Token otherlv_1=null;
        Token lv_lefthandedDefined_2_0=null;
        Token otherlv_3=null;
        Token lv_lefthanded_4_0=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        Token lv_lefthanded_8_0=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        Token lv_angleDefined_12_0=null;
        Token otherlv_13=null;
        Token otherlv_14=null;
        Token lv_angle_15_0=null;
        Token otherlv_16=null;
        Token lv_blockingDefined_17_0=null;
        Token otherlv_18=null;
        Token lv_blockingDefined_19_0=null;
        Token otherlv_20=null;
        Token lv_blocking_21_0=null;
        Token otherlv_22=null;
        Token otherlv_23=null;
        Token otherlv_24=null;
        Token lv_blocking_25_0=null;
        Token otherlv_26=null;
        Token otherlv_27=null;
        Token lv_brokenDefined_28_0=null;
        Token otherlv_29=null;
        Token lv_brokenDefined_30_0=null;
        Token otherlv_31=null;
        Token lv_broken_32_0=null;
        Token otherlv_33=null;
        Token otherlv_34=null;
        Token otherlv_35=null;
        Token lv_broken_36_0=null;
        Token otherlv_37=null;
        Token otherlv_38=null;
        Token lv_castDefined_39_0=null;
        Token otherlv_40=null;
        Token lv_castDefined_41_0=null;
        Token otherlv_42=null;
        Token lv_cast_43_0=null;
        Token otherlv_44=null;
        Token otherlv_45=null;
        Token otherlv_46=null;
        Token lv_cast_47_0=null;
        Token otherlv_48=null;
        Token otherlv_49=null;
        Token lv_cooldownDefined_50_0=null;
        Token otherlv_51=null;
        Token otherlv_52=null;
        Token lv_cooldown_53_0=null;
        Token otherlv_54=null;
        Token lv_damageDefined_55_0=null;
        Token otherlv_56=null;
        Token otherlv_57=null;
        Token lv_damage_58_0=null;
        Token otherlv_59=null;
        Token lv_damagedDefined_60_0=null;
        Token otherlv_61=null;
        Token lv_damagedDefined_62_0=null;
        Token otherlv_63=null;
        Token lv_damaged_64_0=null;
        Token otherlv_65=null;
        Token otherlv_66=null;
        Token otherlv_67=null;
        Token lv_damaged_68_0=null;
        Token otherlv_69=null;
        Token otherlv_70=null;
        Token lv_pullDefined_71_0=null;
        Token otherlv_72=null;
        Token otherlv_73=null;
        Token lv_pull_74_0=null;
        Token otherlv_75=null;
        Token lv_pullingDefined_76_0=null;
        Token otherlv_77=null;
        Token lv_pullingDefined_78_0=null;
        Token otherlv_79=null;
        Token lv_pulling_80_0=null;
        Token otherlv_81=null;
        Token otherlv_82=null;
        Token otherlv_83=null;
        Token lv_pulling_84_0=null;
        Token otherlv_85=null;
        Token otherlv_86=null;
        Token lv_throwingDefined_87_0=null;
        Token otherlv_88=null;
        Token lv_throwingDefined_89_0=null;
        Token otherlv_90=null;
        Token lv_throwing_91_0=null;
        Token otherlv_92=null;
        Token otherlv_93=null;
        Token otherlv_94=null;
        Token lv_throwing_95_0=null;
        Token otherlv_96=null;
        Token otherlv_97=null;
        Token lv_timeDefined_98_0=null;
        Token otherlv_99=null;
        Token otherlv_100=null;
        Token lv_time_101_0=null;
        Token otherlv_102=null;
        Token lv_customModelDataDefined_103_0=null;
        Token otherlv_104=null;
        Token otherlv_105=null;
        AntlrDatatypeRuleToken lv_customModelData_106_0 = null;



        	enterRule();

        try {
            // InternalMcmodel.g:10441:2: ( ( ( ( ( (lv_lefthandedDefined_0_0= '!' ) ) otherlv_1= 'lefthanded' ) | ( ( (lv_lefthandedDefined_2_0= 'lefthanded' ) ) ( (otherlv_3= '!=' ( ( (lv_lefthanded_4_0= 'false' ) ) | otherlv_5= 'true' ) ) | ( (otherlv_6= '=' | otherlv_7= '==' ) ( ( (lv_lefthanded_8_0= 'true' ) ) | otherlv_9= 'false' ) ) ) ) ) ( ( ( ( ({...}? => ( ({...}? => (otherlv_11= '&' ( (lv_angleDefined_12_0= 'angle' ) ) (otherlv_13= '=' | otherlv_14= '==' ) ( (lv_angle_15_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= '&' ( ( ( (lv_blockingDefined_17_0= '!' ) ) otherlv_18= 'blocking' ) | ( ( (lv_blockingDefined_19_0= 'blocking' ) ) ( (otherlv_20= '!=' ( ( (lv_blocking_21_0= 'false' ) ) | otherlv_22= 'true' ) ) | ( (otherlv_23= '=' | otherlv_24= '==' ) ( ( (lv_blocking_25_0= 'true' ) ) | otherlv_26= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= '&' ( ( ( (lv_brokenDefined_28_0= '!' ) ) otherlv_29= 'broken' ) | ( ( (lv_brokenDefined_30_0= 'broken' ) ) ( (otherlv_31= '!=' ( ( (lv_broken_32_0= 'false' ) ) | otherlv_33= 'true' ) ) | ( (otherlv_34= '=' | otherlv_35= '==' ) ( ( (lv_broken_36_0= 'true' ) ) | otherlv_37= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_38= '&' ( ( ( (lv_castDefined_39_0= '!' ) ) otherlv_40= 'cast' ) | ( ( (lv_castDefined_41_0= 'cast' ) ) ( (otherlv_42= '!=' ( ( (lv_cast_43_0= 'false' ) ) | otherlv_44= 'true' ) ) | ( (otherlv_45= '=' | otherlv_46= '==' ) ( ( (lv_cast_47_0= 'true' ) ) | otherlv_48= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_49= '&' ( (lv_cooldownDefined_50_0= 'cooldown' ) ) (otherlv_51= '=' | otherlv_52= '==' ) ( (lv_cooldown_53_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_54= '&' ( (lv_damageDefined_55_0= 'damage' ) ) (otherlv_56= '=' | otherlv_57= '==' ) ( (lv_damage_58_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_59= '&' ( ( ( (lv_damagedDefined_60_0= '!' ) ) otherlv_61= 'damaged' ) | ( ( (lv_damagedDefined_62_0= 'damaged' ) ) ( (otherlv_63= '!=' ( ( (lv_damaged_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_damaged_68_0= 'true' ) ) | otherlv_69= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_70= '&' ( (lv_pullDefined_71_0= 'pull' ) ) (otherlv_72= '=' | otherlv_73= '==' ) ( (lv_pull_74_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_75= '&' ( ( ( (lv_pullingDefined_76_0= '!' ) ) otherlv_77= 'pulling' ) | ( ( (lv_pullingDefined_78_0= 'pulling' ) ) ( (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) ) | ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_86= '&' ( ( ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing' ) | ( ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_97= '&' ( (lv_timeDefined_98_0= 'time' ) ) (otherlv_99= '=' | otherlv_100= '==' ) ( (lv_time_101_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) ) ) ) ) ) )* ) ) ) ) )
            // InternalMcmodel.g:10442:2: ( ( ( ( (lv_lefthandedDefined_0_0= '!' ) ) otherlv_1= 'lefthanded' ) | ( ( (lv_lefthandedDefined_2_0= 'lefthanded' ) ) ( (otherlv_3= '!=' ( ( (lv_lefthanded_4_0= 'false' ) ) | otherlv_5= 'true' ) ) | ( (otherlv_6= '=' | otherlv_7= '==' ) ( ( (lv_lefthanded_8_0= 'true' ) ) | otherlv_9= 'false' ) ) ) ) ) ( ( ( ( ({...}? => ( ({...}? => (otherlv_11= '&' ( (lv_angleDefined_12_0= 'angle' ) ) (otherlv_13= '=' | otherlv_14= '==' ) ( (lv_angle_15_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= '&' ( ( ( (lv_blockingDefined_17_0= '!' ) ) otherlv_18= 'blocking' ) | ( ( (lv_blockingDefined_19_0= 'blocking' ) ) ( (otherlv_20= '!=' ( ( (lv_blocking_21_0= 'false' ) ) | otherlv_22= 'true' ) ) | ( (otherlv_23= '=' | otherlv_24= '==' ) ( ( (lv_blocking_25_0= 'true' ) ) | otherlv_26= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= '&' ( ( ( (lv_brokenDefined_28_0= '!' ) ) otherlv_29= 'broken' ) | ( ( (lv_brokenDefined_30_0= 'broken' ) ) ( (otherlv_31= '!=' ( ( (lv_broken_32_0= 'false' ) ) | otherlv_33= 'true' ) ) | ( (otherlv_34= '=' | otherlv_35= '==' ) ( ( (lv_broken_36_0= 'true' ) ) | otherlv_37= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_38= '&' ( ( ( (lv_castDefined_39_0= '!' ) ) otherlv_40= 'cast' ) | ( ( (lv_castDefined_41_0= 'cast' ) ) ( (otherlv_42= '!=' ( ( (lv_cast_43_0= 'false' ) ) | otherlv_44= 'true' ) ) | ( (otherlv_45= '=' | otherlv_46= '==' ) ( ( (lv_cast_47_0= 'true' ) ) | otherlv_48= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_49= '&' ( (lv_cooldownDefined_50_0= 'cooldown' ) ) (otherlv_51= '=' | otherlv_52= '==' ) ( (lv_cooldown_53_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_54= '&' ( (lv_damageDefined_55_0= 'damage' ) ) (otherlv_56= '=' | otherlv_57= '==' ) ( (lv_damage_58_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_59= '&' ( ( ( (lv_damagedDefined_60_0= '!' ) ) otherlv_61= 'damaged' ) | ( ( (lv_damagedDefined_62_0= 'damaged' ) ) ( (otherlv_63= '!=' ( ( (lv_damaged_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_damaged_68_0= 'true' ) ) | otherlv_69= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_70= '&' ( (lv_pullDefined_71_0= 'pull' ) ) (otherlv_72= '=' | otherlv_73= '==' ) ( (lv_pull_74_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_75= '&' ( ( ( (lv_pullingDefined_76_0= '!' ) ) otherlv_77= 'pulling' ) | ( ( (lv_pullingDefined_78_0= 'pulling' ) ) ( (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) ) | ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_86= '&' ( ( ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing' ) | ( ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_97= '&' ( (lv_timeDefined_98_0= 'time' ) ) (otherlv_99= '=' | otherlv_100= '==' ) ( (lv_time_101_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) ) ) ) ) ) )* ) ) ) )
            {
            // InternalMcmodel.g:10442:2: ( ( ( ( (lv_lefthandedDefined_0_0= '!' ) ) otherlv_1= 'lefthanded' ) | ( ( (lv_lefthandedDefined_2_0= 'lefthanded' ) ) ( (otherlv_3= '!=' ( ( (lv_lefthanded_4_0= 'false' ) ) | otherlv_5= 'true' ) ) | ( (otherlv_6= '=' | otherlv_7= '==' ) ( ( (lv_lefthanded_8_0= 'true' ) ) | otherlv_9= 'false' ) ) ) ) ) ( ( ( ( ({...}? => ( ({...}? => (otherlv_11= '&' ( (lv_angleDefined_12_0= 'angle' ) ) (otherlv_13= '=' | otherlv_14= '==' ) ( (lv_angle_15_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= '&' ( ( ( (lv_blockingDefined_17_0= '!' ) ) otherlv_18= 'blocking' ) | ( ( (lv_blockingDefined_19_0= 'blocking' ) ) ( (otherlv_20= '!=' ( ( (lv_blocking_21_0= 'false' ) ) | otherlv_22= 'true' ) ) | ( (otherlv_23= '=' | otherlv_24= '==' ) ( ( (lv_blocking_25_0= 'true' ) ) | otherlv_26= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= '&' ( ( ( (lv_brokenDefined_28_0= '!' ) ) otherlv_29= 'broken' ) | ( ( (lv_brokenDefined_30_0= 'broken' ) ) ( (otherlv_31= '!=' ( ( (lv_broken_32_0= 'false' ) ) | otherlv_33= 'true' ) ) | ( (otherlv_34= '=' | otherlv_35= '==' ) ( ( (lv_broken_36_0= 'true' ) ) | otherlv_37= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_38= '&' ( ( ( (lv_castDefined_39_0= '!' ) ) otherlv_40= 'cast' ) | ( ( (lv_castDefined_41_0= 'cast' ) ) ( (otherlv_42= '!=' ( ( (lv_cast_43_0= 'false' ) ) | otherlv_44= 'true' ) ) | ( (otherlv_45= '=' | otherlv_46= '==' ) ( ( (lv_cast_47_0= 'true' ) ) | otherlv_48= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_49= '&' ( (lv_cooldownDefined_50_0= 'cooldown' ) ) (otherlv_51= '=' | otherlv_52= '==' ) ( (lv_cooldown_53_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_54= '&' ( (lv_damageDefined_55_0= 'damage' ) ) (otherlv_56= '=' | otherlv_57= '==' ) ( (lv_damage_58_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_59= '&' ( ( ( (lv_damagedDefined_60_0= '!' ) ) otherlv_61= 'damaged' ) | ( ( (lv_damagedDefined_62_0= 'damaged' ) ) ( (otherlv_63= '!=' ( ( (lv_damaged_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_damaged_68_0= 'true' ) ) | otherlv_69= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_70= '&' ( (lv_pullDefined_71_0= 'pull' ) ) (otherlv_72= '=' | otherlv_73= '==' ) ( (lv_pull_74_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_75= '&' ( ( ( (lv_pullingDefined_76_0= '!' ) ) otherlv_77= 'pulling' ) | ( ( (lv_pullingDefined_78_0= 'pulling' ) ) ( (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) ) | ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_86= '&' ( ( ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing' ) | ( ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_97= '&' ( (lv_timeDefined_98_0= 'time' ) ) (otherlv_99= '=' | otherlv_100= '==' ) ( (lv_time_101_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) ) ) ) ) ) )* ) ) ) )
            // InternalMcmodel.g:10443:3: ( ( ( (lv_lefthandedDefined_0_0= '!' ) ) otherlv_1= 'lefthanded' ) | ( ( (lv_lefthandedDefined_2_0= 'lefthanded' ) ) ( (otherlv_3= '!=' ( ( (lv_lefthanded_4_0= 'false' ) ) | otherlv_5= 'true' ) ) | ( (otherlv_6= '=' | otherlv_7= '==' ) ( ( (lv_lefthanded_8_0= 'true' ) ) | otherlv_9= 'false' ) ) ) ) ) ( ( ( ( ({...}? => ( ({...}? => (otherlv_11= '&' ( (lv_angleDefined_12_0= 'angle' ) ) (otherlv_13= '=' | otherlv_14= '==' ) ( (lv_angle_15_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= '&' ( ( ( (lv_blockingDefined_17_0= '!' ) ) otherlv_18= 'blocking' ) | ( ( (lv_blockingDefined_19_0= 'blocking' ) ) ( (otherlv_20= '!=' ( ( (lv_blocking_21_0= 'false' ) ) | otherlv_22= 'true' ) ) | ( (otherlv_23= '=' | otherlv_24= '==' ) ( ( (lv_blocking_25_0= 'true' ) ) | otherlv_26= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= '&' ( ( ( (lv_brokenDefined_28_0= '!' ) ) otherlv_29= 'broken' ) | ( ( (lv_brokenDefined_30_0= 'broken' ) ) ( (otherlv_31= '!=' ( ( (lv_broken_32_0= 'false' ) ) | otherlv_33= 'true' ) ) | ( (otherlv_34= '=' | otherlv_35= '==' ) ( ( (lv_broken_36_0= 'true' ) ) | otherlv_37= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_38= '&' ( ( ( (lv_castDefined_39_0= '!' ) ) otherlv_40= 'cast' ) | ( ( (lv_castDefined_41_0= 'cast' ) ) ( (otherlv_42= '!=' ( ( (lv_cast_43_0= 'false' ) ) | otherlv_44= 'true' ) ) | ( (otherlv_45= '=' | otherlv_46= '==' ) ( ( (lv_cast_47_0= 'true' ) ) | otherlv_48= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_49= '&' ( (lv_cooldownDefined_50_0= 'cooldown' ) ) (otherlv_51= '=' | otherlv_52= '==' ) ( (lv_cooldown_53_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_54= '&' ( (lv_damageDefined_55_0= 'damage' ) ) (otherlv_56= '=' | otherlv_57= '==' ) ( (lv_damage_58_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_59= '&' ( ( ( (lv_damagedDefined_60_0= '!' ) ) otherlv_61= 'damaged' ) | ( ( (lv_damagedDefined_62_0= 'damaged' ) ) ( (otherlv_63= '!=' ( ( (lv_damaged_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_damaged_68_0= 'true' ) ) | otherlv_69= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_70= '&' ( (lv_pullDefined_71_0= 'pull' ) ) (otherlv_72= '=' | otherlv_73= '==' ) ( (lv_pull_74_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_75= '&' ( ( ( (lv_pullingDefined_76_0= '!' ) ) otherlv_77= 'pulling' ) | ( ( (lv_pullingDefined_78_0= 'pulling' ) ) ( (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) ) | ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_86= '&' ( ( ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing' ) | ( ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_97= '&' ( (lv_timeDefined_98_0= 'time' ) ) (otherlv_99= '=' | otherlv_100= '==' ) ( (lv_time_101_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) ) ) ) ) ) )* ) ) )
            {
            // InternalMcmodel.g:10443:3: ( ( ( (lv_lefthandedDefined_0_0= '!' ) ) otherlv_1= 'lefthanded' ) | ( ( (lv_lefthandedDefined_2_0= 'lefthanded' ) ) ( (otherlv_3= '!=' ( ( (lv_lefthanded_4_0= 'false' ) ) | otherlv_5= 'true' ) ) | ( (otherlv_6= '=' | otherlv_7= '==' ) ( ( (lv_lefthanded_8_0= 'true' ) ) | otherlv_9= 'false' ) ) ) ) )
            int alt320=2;
            int LA320_0 = input.LA(1);

            if ( (LA320_0==60) ) {
                alt320=1;
            }
            else if ( (LA320_0==68) ) {
                alt320=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 320, 0, input);

                throw nvae;
            }
            switch (alt320) {
                case 1 :
                    // InternalMcmodel.g:10444:4: ( ( (lv_lefthandedDefined_0_0= '!' ) ) otherlv_1= 'lefthanded' )
                    {
                    // InternalMcmodel.g:10444:4: ( ( (lv_lefthandedDefined_0_0= '!' ) ) otherlv_1= 'lefthanded' )
                    // InternalMcmodel.g:10445:5: ( (lv_lefthandedDefined_0_0= '!' ) ) otherlv_1= 'lefthanded'
                    {
                    // InternalMcmodel.g:10445:5: ( (lv_lefthandedDefined_0_0= '!' ) )
                    // InternalMcmodel.g:10446:6: (lv_lefthandedDefined_0_0= '!' )
                    {
                    // InternalMcmodel.g:10446:6: (lv_lefthandedDefined_0_0= '!' )
                    // InternalMcmodel.g:10447:7: lv_lefthandedDefined_0_0= '!'
                    {
                    lv_lefthandedDefined_0_0=(Token)match(input,60,FOLLOW_50); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							newLeafNode(lv_lefthandedDefined_0_0, grammarAccess.getOverridePredicate_8Access().getLefthandedDefinedExclamationMarkKeyword_0_0_0_0());
                      						
                    }
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElement(grammarAccess.getOverridePredicate_8Rule());
                      							}
                      							setWithLastConsumed(current, "lefthandedDefined", true, "!");
                      						
                    }

                    }


                    }

                    otherlv_1=(Token)match(input,68,FOLLOW_37); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_1, grammarAccess.getOverridePredicate_8Access().getLefthandedKeyword_0_0_1());
                      				
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalMcmodel.g:10465:4: ( ( (lv_lefthandedDefined_2_0= 'lefthanded' ) ) ( (otherlv_3= '!=' ( ( (lv_lefthanded_4_0= 'false' ) ) | otherlv_5= 'true' ) ) | ( (otherlv_6= '=' | otherlv_7= '==' ) ( ( (lv_lefthanded_8_0= 'true' ) ) | otherlv_9= 'false' ) ) ) )
                    {
                    // InternalMcmodel.g:10465:4: ( ( (lv_lefthandedDefined_2_0= 'lefthanded' ) ) ( (otherlv_3= '!=' ( ( (lv_lefthanded_4_0= 'false' ) ) | otherlv_5= 'true' ) ) | ( (otherlv_6= '=' | otherlv_7= '==' ) ( ( (lv_lefthanded_8_0= 'true' ) ) | otherlv_9= 'false' ) ) ) )
                    // InternalMcmodel.g:10466:5: ( (lv_lefthandedDefined_2_0= 'lefthanded' ) ) ( (otherlv_3= '!=' ( ( (lv_lefthanded_4_0= 'false' ) ) | otherlv_5= 'true' ) ) | ( (otherlv_6= '=' | otherlv_7= '==' ) ( ( (lv_lefthanded_8_0= 'true' ) ) | otherlv_9= 'false' ) ) )
                    {
                    // InternalMcmodel.g:10466:5: ( (lv_lefthandedDefined_2_0= 'lefthanded' ) )
                    // InternalMcmodel.g:10467:6: (lv_lefthandedDefined_2_0= 'lefthanded' )
                    {
                    // InternalMcmodel.g:10467:6: (lv_lefthandedDefined_2_0= 'lefthanded' )
                    // InternalMcmodel.g:10468:7: lv_lefthandedDefined_2_0= 'lefthanded'
                    {
                    lv_lefthandedDefined_2_0=(Token)match(input,68,FOLLOW_40); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							newLeafNode(lv_lefthandedDefined_2_0, grammarAccess.getOverridePredicate_8Access().getLefthandedDefinedLefthandedKeyword_0_1_0_0());
                      						
                    }
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElement(grammarAccess.getOverridePredicate_8Rule());
                      							}
                      							setWithLastConsumed(current, "lefthandedDefined", true, "lefthanded");
                      						
                    }

                    }


                    }

                    // InternalMcmodel.g:10480:5: ( (otherlv_3= '!=' ( ( (lv_lefthanded_4_0= 'false' ) ) | otherlv_5= 'true' ) ) | ( (otherlv_6= '=' | otherlv_7= '==' ) ( ( (lv_lefthanded_8_0= 'true' ) ) | otherlv_9= 'false' ) ) )
                    int alt319=2;
                    int LA319_0 = input.LA(1);

                    if ( (LA319_0==62) ) {
                        alt319=1;
                    }
                    else if ( (LA319_0==18||LA319_0==58) ) {
                        alt319=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 319, 0, input);

                        throw nvae;
                    }
                    switch (alt319) {
                        case 1 :
                            // InternalMcmodel.g:10481:6: (otherlv_3= '!=' ( ( (lv_lefthanded_4_0= 'false' ) ) | otherlv_5= 'true' ) )
                            {
                            // InternalMcmodel.g:10481:6: (otherlv_3= '!=' ( ( (lv_lefthanded_4_0= 'false' ) ) | otherlv_5= 'true' ) )
                            // InternalMcmodel.g:10482:7: otherlv_3= '!=' ( ( (lv_lefthanded_4_0= 'false' ) ) | otherlv_5= 'true' )
                            {
                            otherlv_3=(Token)match(input,62,FOLLOW_7); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(otherlv_3, grammarAccess.getOverridePredicate_8Access().getExclamationMarkEqualsSignKeyword_0_1_1_0_0());
                              						
                            }
                            // InternalMcmodel.g:10486:7: ( ( (lv_lefthanded_4_0= 'false' ) ) | otherlv_5= 'true' )
                            int alt316=2;
                            int LA316_0 = input.LA(1);

                            if ( (LA316_0==21) ) {
                                alt316=1;
                            }
                            else if ( (LA316_0==20) ) {
                                alt316=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 316, 0, input);

                                throw nvae;
                            }
                            switch (alt316) {
                                case 1 :
                                    // InternalMcmodel.g:10487:8: ( (lv_lefthanded_4_0= 'false' ) )
                                    {
                                    // InternalMcmodel.g:10487:8: ( (lv_lefthanded_4_0= 'false' ) )
                                    // InternalMcmodel.g:10488:9: (lv_lefthanded_4_0= 'false' )
                                    {
                                    // InternalMcmodel.g:10488:9: (lv_lefthanded_4_0= 'false' )
                                    // InternalMcmodel.g:10489:10: lv_lefthanded_4_0= 'false'
                                    {
                                    lv_lefthanded_4_0=(Token)match(input,21,FOLLOW_37); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      										newLeafNode(lv_lefthanded_4_0, grammarAccess.getOverridePredicate_8Access().getLefthandedFalseKeyword_0_1_1_0_1_0_0());
                                      									
                                    }
                                    if ( state.backtracking==0 ) {

                                      										if (current==null) {
                                      											current = createModelElement(grammarAccess.getOverridePredicate_8Rule());
                                      										}
                                      										setWithLastConsumed(current, "lefthanded", true, "false");
                                      									
                                    }

                                    }


                                    }


                                    }
                                    break;
                                case 2 :
                                    // InternalMcmodel.g:10502:8: otherlv_5= 'true'
                                    {
                                    otherlv_5=(Token)match(input,20,FOLLOW_37); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(otherlv_5, grammarAccess.getOverridePredicate_8Access().getTrueKeyword_0_1_1_0_1_1());
                                      							
                                    }

                                    }
                                    break;

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalMcmodel.g:10509:6: ( (otherlv_6= '=' | otherlv_7= '==' ) ( ( (lv_lefthanded_8_0= 'true' ) ) | otherlv_9= 'false' ) )
                            {
                            // InternalMcmodel.g:10509:6: ( (otherlv_6= '=' | otherlv_7= '==' ) ( ( (lv_lefthanded_8_0= 'true' ) ) | otherlv_9= 'false' ) )
                            // InternalMcmodel.g:10510:7: (otherlv_6= '=' | otherlv_7= '==' ) ( ( (lv_lefthanded_8_0= 'true' ) ) | otherlv_9= 'false' )
                            {
                            // InternalMcmodel.g:10510:7: (otherlv_6= '=' | otherlv_7= '==' )
                            int alt317=2;
                            int LA317_0 = input.LA(1);

                            if ( (LA317_0==18) ) {
                                alt317=1;
                            }
                            else if ( (LA317_0==58) ) {
                                alt317=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 317, 0, input);

                                throw nvae;
                            }
                            switch (alt317) {
                                case 1 :
                                    // InternalMcmodel.g:10511:8: otherlv_6= '='
                                    {
                                    otherlv_6=(Token)match(input,18,FOLLOW_7); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(otherlv_6, grammarAccess.getOverridePredicate_8Access().getEqualsSignKeyword_0_1_1_1_0_0());
                                      							
                                    }

                                    }
                                    break;
                                case 2 :
                                    // InternalMcmodel.g:10516:8: otherlv_7= '=='
                                    {
                                    otherlv_7=(Token)match(input,58,FOLLOW_7); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(otherlv_7, grammarAccess.getOverridePredicate_8Access().getEqualsSignEqualsSignKeyword_0_1_1_1_0_1());
                                      							
                                    }

                                    }
                                    break;

                            }

                            // InternalMcmodel.g:10521:7: ( ( (lv_lefthanded_8_0= 'true' ) ) | otherlv_9= 'false' )
                            int alt318=2;
                            int LA318_0 = input.LA(1);

                            if ( (LA318_0==20) ) {
                                alt318=1;
                            }
                            else if ( (LA318_0==21) ) {
                                alt318=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 318, 0, input);

                                throw nvae;
                            }
                            switch (alt318) {
                                case 1 :
                                    // InternalMcmodel.g:10522:8: ( (lv_lefthanded_8_0= 'true' ) )
                                    {
                                    // InternalMcmodel.g:10522:8: ( (lv_lefthanded_8_0= 'true' ) )
                                    // InternalMcmodel.g:10523:9: (lv_lefthanded_8_0= 'true' )
                                    {
                                    // InternalMcmodel.g:10523:9: (lv_lefthanded_8_0= 'true' )
                                    // InternalMcmodel.g:10524:10: lv_lefthanded_8_0= 'true'
                                    {
                                    lv_lefthanded_8_0=(Token)match(input,20,FOLLOW_37); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      										newLeafNode(lv_lefthanded_8_0, grammarAccess.getOverridePredicate_8Access().getLefthandedTrueKeyword_0_1_1_1_1_0_0());
                                      									
                                    }
                                    if ( state.backtracking==0 ) {

                                      										if (current==null) {
                                      											current = createModelElement(grammarAccess.getOverridePredicate_8Rule());
                                      										}
                                      										setWithLastConsumed(current, "lefthanded", true, "true");
                                      									
                                    }

                                    }


                                    }


                                    }
                                    break;
                                case 2 :
                                    // InternalMcmodel.g:10537:8: otherlv_9= 'false'
                                    {
                                    otherlv_9=(Token)match(input,21,FOLLOW_37); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(otherlv_9, grammarAccess.getOverridePredicate_8Access().getFalseKeyword_0_1_1_1_1_1());
                                      							
                                    }

                                    }
                                    break;

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;

            }

            // InternalMcmodel.g:10546:3: ( ( ( ( ({...}? => ( ({...}? => (otherlv_11= '&' ( (lv_angleDefined_12_0= 'angle' ) ) (otherlv_13= '=' | otherlv_14= '==' ) ( (lv_angle_15_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= '&' ( ( ( (lv_blockingDefined_17_0= '!' ) ) otherlv_18= 'blocking' ) | ( ( (lv_blockingDefined_19_0= 'blocking' ) ) ( (otherlv_20= '!=' ( ( (lv_blocking_21_0= 'false' ) ) | otherlv_22= 'true' ) ) | ( (otherlv_23= '=' | otherlv_24= '==' ) ( ( (lv_blocking_25_0= 'true' ) ) | otherlv_26= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= '&' ( ( ( (lv_brokenDefined_28_0= '!' ) ) otherlv_29= 'broken' ) | ( ( (lv_brokenDefined_30_0= 'broken' ) ) ( (otherlv_31= '!=' ( ( (lv_broken_32_0= 'false' ) ) | otherlv_33= 'true' ) ) | ( (otherlv_34= '=' | otherlv_35= '==' ) ( ( (lv_broken_36_0= 'true' ) ) | otherlv_37= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_38= '&' ( ( ( (lv_castDefined_39_0= '!' ) ) otherlv_40= 'cast' ) | ( ( (lv_castDefined_41_0= 'cast' ) ) ( (otherlv_42= '!=' ( ( (lv_cast_43_0= 'false' ) ) | otherlv_44= 'true' ) ) | ( (otherlv_45= '=' | otherlv_46= '==' ) ( ( (lv_cast_47_0= 'true' ) ) | otherlv_48= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_49= '&' ( (lv_cooldownDefined_50_0= 'cooldown' ) ) (otherlv_51= '=' | otherlv_52= '==' ) ( (lv_cooldown_53_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_54= '&' ( (lv_damageDefined_55_0= 'damage' ) ) (otherlv_56= '=' | otherlv_57= '==' ) ( (lv_damage_58_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_59= '&' ( ( ( (lv_damagedDefined_60_0= '!' ) ) otherlv_61= 'damaged' ) | ( ( (lv_damagedDefined_62_0= 'damaged' ) ) ( (otherlv_63= '!=' ( ( (lv_damaged_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_damaged_68_0= 'true' ) ) | otherlv_69= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_70= '&' ( (lv_pullDefined_71_0= 'pull' ) ) (otherlv_72= '=' | otherlv_73= '==' ) ( (lv_pull_74_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_75= '&' ( ( ( (lv_pullingDefined_76_0= '!' ) ) otherlv_77= 'pulling' ) | ( ( (lv_pullingDefined_78_0= 'pulling' ) ) ( (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) ) | ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_86= '&' ( ( ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing' ) | ( ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_97= '&' ( (lv_timeDefined_98_0= 'time' ) ) (otherlv_99= '=' | otherlv_100= '==' ) ( (lv_time_101_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) ) ) ) ) ) )* ) ) )
            // InternalMcmodel.g:10547:4: ( ( ( ({...}? => ( ({...}? => (otherlv_11= '&' ( (lv_angleDefined_12_0= 'angle' ) ) (otherlv_13= '=' | otherlv_14= '==' ) ( (lv_angle_15_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= '&' ( ( ( (lv_blockingDefined_17_0= '!' ) ) otherlv_18= 'blocking' ) | ( ( (lv_blockingDefined_19_0= 'blocking' ) ) ( (otherlv_20= '!=' ( ( (lv_blocking_21_0= 'false' ) ) | otherlv_22= 'true' ) ) | ( (otherlv_23= '=' | otherlv_24= '==' ) ( ( (lv_blocking_25_0= 'true' ) ) | otherlv_26= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= '&' ( ( ( (lv_brokenDefined_28_0= '!' ) ) otherlv_29= 'broken' ) | ( ( (lv_brokenDefined_30_0= 'broken' ) ) ( (otherlv_31= '!=' ( ( (lv_broken_32_0= 'false' ) ) | otherlv_33= 'true' ) ) | ( (otherlv_34= '=' | otherlv_35= '==' ) ( ( (lv_broken_36_0= 'true' ) ) | otherlv_37= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_38= '&' ( ( ( (lv_castDefined_39_0= '!' ) ) otherlv_40= 'cast' ) | ( ( (lv_castDefined_41_0= 'cast' ) ) ( (otherlv_42= '!=' ( ( (lv_cast_43_0= 'false' ) ) | otherlv_44= 'true' ) ) | ( (otherlv_45= '=' | otherlv_46= '==' ) ( ( (lv_cast_47_0= 'true' ) ) | otherlv_48= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_49= '&' ( (lv_cooldownDefined_50_0= 'cooldown' ) ) (otherlv_51= '=' | otherlv_52= '==' ) ( (lv_cooldown_53_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_54= '&' ( (lv_damageDefined_55_0= 'damage' ) ) (otherlv_56= '=' | otherlv_57= '==' ) ( (lv_damage_58_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_59= '&' ( ( ( (lv_damagedDefined_60_0= '!' ) ) otherlv_61= 'damaged' ) | ( ( (lv_damagedDefined_62_0= 'damaged' ) ) ( (otherlv_63= '!=' ( ( (lv_damaged_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_damaged_68_0= 'true' ) ) | otherlv_69= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_70= '&' ( (lv_pullDefined_71_0= 'pull' ) ) (otherlv_72= '=' | otherlv_73= '==' ) ( (lv_pull_74_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_75= '&' ( ( ( (lv_pullingDefined_76_0= '!' ) ) otherlv_77= 'pulling' ) | ( ( (lv_pullingDefined_78_0= 'pulling' ) ) ( (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) ) | ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_86= '&' ( ( ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing' ) | ( ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_97= '&' ( (lv_timeDefined_98_0= 'time' ) ) (otherlv_99= '=' | otherlv_100= '==' ) ( (lv_time_101_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) ) ) ) ) ) )* ) )
            {
            // InternalMcmodel.g:10547:4: ( ( ( ({...}? => ( ({...}? => (otherlv_11= '&' ( (lv_angleDefined_12_0= 'angle' ) ) (otherlv_13= '=' | otherlv_14= '==' ) ( (lv_angle_15_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= '&' ( ( ( (lv_blockingDefined_17_0= '!' ) ) otherlv_18= 'blocking' ) | ( ( (lv_blockingDefined_19_0= 'blocking' ) ) ( (otherlv_20= '!=' ( ( (lv_blocking_21_0= 'false' ) ) | otherlv_22= 'true' ) ) | ( (otherlv_23= '=' | otherlv_24= '==' ) ( ( (lv_blocking_25_0= 'true' ) ) | otherlv_26= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= '&' ( ( ( (lv_brokenDefined_28_0= '!' ) ) otherlv_29= 'broken' ) | ( ( (lv_brokenDefined_30_0= 'broken' ) ) ( (otherlv_31= '!=' ( ( (lv_broken_32_0= 'false' ) ) | otherlv_33= 'true' ) ) | ( (otherlv_34= '=' | otherlv_35= '==' ) ( ( (lv_broken_36_0= 'true' ) ) | otherlv_37= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_38= '&' ( ( ( (lv_castDefined_39_0= '!' ) ) otherlv_40= 'cast' ) | ( ( (lv_castDefined_41_0= 'cast' ) ) ( (otherlv_42= '!=' ( ( (lv_cast_43_0= 'false' ) ) | otherlv_44= 'true' ) ) | ( (otherlv_45= '=' | otherlv_46= '==' ) ( ( (lv_cast_47_0= 'true' ) ) | otherlv_48= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_49= '&' ( (lv_cooldownDefined_50_0= 'cooldown' ) ) (otherlv_51= '=' | otherlv_52= '==' ) ( (lv_cooldown_53_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_54= '&' ( (lv_damageDefined_55_0= 'damage' ) ) (otherlv_56= '=' | otherlv_57= '==' ) ( (lv_damage_58_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_59= '&' ( ( ( (lv_damagedDefined_60_0= '!' ) ) otherlv_61= 'damaged' ) | ( ( (lv_damagedDefined_62_0= 'damaged' ) ) ( (otherlv_63= '!=' ( ( (lv_damaged_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_damaged_68_0= 'true' ) ) | otherlv_69= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_70= '&' ( (lv_pullDefined_71_0= 'pull' ) ) (otherlv_72= '=' | otherlv_73= '==' ) ( (lv_pull_74_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_75= '&' ( ( ( (lv_pullingDefined_76_0= '!' ) ) otherlv_77= 'pulling' ) | ( ( (lv_pullingDefined_78_0= 'pulling' ) ) ( (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) ) | ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_86= '&' ( ( ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing' ) | ( ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_97= '&' ( (lv_timeDefined_98_0= 'time' ) ) (otherlv_99= '=' | otherlv_100= '==' ) ( (lv_time_101_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) ) ) ) ) ) )* ) )
            // InternalMcmodel.g:10548:5: ( ( ({...}? => ( ({...}? => (otherlv_11= '&' ( (lv_angleDefined_12_0= 'angle' ) ) (otherlv_13= '=' | otherlv_14= '==' ) ( (lv_angle_15_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= '&' ( ( ( (lv_blockingDefined_17_0= '!' ) ) otherlv_18= 'blocking' ) | ( ( (lv_blockingDefined_19_0= 'blocking' ) ) ( (otherlv_20= '!=' ( ( (lv_blocking_21_0= 'false' ) ) | otherlv_22= 'true' ) ) | ( (otherlv_23= '=' | otherlv_24= '==' ) ( ( (lv_blocking_25_0= 'true' ) ) | otherlv_26= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= '&' ( ( ( (lv_brokenDefined_28_0= '!' ) ) otherlv_29= 'broken' ) | ( ( (lv_brokenDefined_30_0= 'broken' ) ) ( (otherlv_31= '!=' ( ( (lv_broken_32_0= 'false' ) ) | otherlv_33= 'true' ) ) | ( (otherlv_34= '=' | otherlv_35= '==' ) ( ( (lv_broken_36_0= 'true' ) ) | otherlv_37= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_38= '&' ( ( ( (lv_castDefined_39_0= '!' ) ) otherlv_40= 'cast' ) | ( ( (lv_castDefined_41_0= 'cast' ) ) ( (otherlv_42= '!=' ( ( (lv_cast_43_0= 'false' ) ) | otherlv_44= 'true' ) ) | ( (otherlv_45= '=' | otherlv_46= '==' ) ( ( (lv_cast_47_0= 'true' ) ) | otherlv_48= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_49= '&' ( (lv_cooldownDefined_50_0= 'cooldown' ) ) (otherlv_51= '=' | otherlv_52= '==' ) ( (lv_cooldown_53_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_54= '&' ( (lv_damageDefined_55_0= 'damage' ) ) (otherlv_56= '=' | otherlv_57= '==' ) ( (lv_damage_58_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_59= '&' ( ( ( (lv_damagedDefined_60_0= '!' ) ) otherlv_61= 'damaged' ) | ( ( (lv_damagedDefined_62_0= 'damaged' ) ) ( (otherlv_63= '!=' ( ( (lv_damaged_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_damaged_68_0= 'true' ) ) | otherlv_69= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_70= '&' ( (lv_pullDefined_71_0= 'pull' ) ) (otherlv_72= '=' | otherlv_73= '==' ) ( (lv_pull_74_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_75= '&' ( ( ( (lv_pullingDefined_76_0= '!' ) ) otherlv_77= 'pulling' ) | ( ( (lv_pullingDefined_78_0= 'pulling' ) ) ( (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) ) | ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_86= '&' ( ( ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing' ) | ( ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_97= '&' ( (lv_timeDefined_98_0= 'time' ) ) (otherlv_99= '=' | otherlv_100= '==' ) ( (lv_time_101_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) ) ) ) ) ) )* )
            {
            getUnorderedGroupHelper().enter(grammarAccess.getOverridePredicate_8Access().getUnorderedGroup_1());
            // InternalMcmodel.g:10551:5: ( ( ({...}? => ( ({...}? => (otherlv_11= '&' ( (lv_angleDefined_12_0= 'angle' ) ) (otherlv_13= '=' | otherlv_14= '==' ) ( (lv_angle_15_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= '&' ( ( ( (lv_blockingDefined_17_0= '!' ) ) otherlv_18= 'blocking' ) | ( ( (lv_blockingDefined_19_0= 'blocking' ) ) ( (otherlv_20= '!=' ( ( (lv_blocking_21_0= 'false' ) ) | otherlv_22= 'true' ) ) | ( (otherlv_23= '=' | otherlv_24= '==' ) ( ( (lv_blocking_25_0= 'true' ) ) | otherlv_26= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= '&' ( ( ( (lv_brokenDefined_28_0= '!' ) ) otherlv_29= 'broken' ) | ( ( (lv_brokenDefined_30_0= 'broken' ) ) ( (otherlv_31= '!=' ( ( (lv_broken_32_0= 'false' ) ) | otherlv_33= 'true' ) ) | ( (otherlv_34= '=' | otherlv_35= '==' ) ( ( (lv_broken_36_0= 'true' ) ) | otherlv_37= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_38= '&' ( ( ( (lv_castDefined_39_0= '!' ) ) otherlv_40= 'cast' ) | ( ( (lv_castDefined_41_0= 'cast' ) ) ( (otherlv_42= '!=' ( ( (lv_cast_43_0= 'false' ) ) | otherlv_44= 'true' ) ) | ( (otherlv_45= '=' | otherlv_46= '==' ) ( ( (lv_cast_47_0= 'true' ) ) | otherlv_48= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_49= '&' ( (lv_cooldownDefined_50_0= 'cooldown' ) ) (otherlv_51= '=' | otherlv_52= '==' ) ( (lv_cooldown_53_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_54= '&' ( (lv_damageDefined_55_0= 'damage' ) ) (otherlv_56= '=' | otherlv_57= '==' ) ( (lv_damage_58_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_59= '&' ( ( ( (lv_damagedDefined_60_0= '!' ) ) otherlv_61= 'damaged' ) | ( ( (lv_damagedDefined_62_0= 'damaged' ) ) ( (otherlv_63= '!=' ( ( (lv_damaged_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_damaged_68_0= 'true' ) ) | otherlv_69= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_70= '&' ( (lv_pullDefined_71_0= 'pull' ) ) (otherlv_72= '=' | otherlv_73= '==' ) ( (lv_pull_74_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_75= '&' ( ( ( (lv_pullingDefined_76_0= '!' ) ) otherlv_77= 'pulling' ) | ( ( (lv_pullingDefined_78_0= 'pulling' ) ) ( (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) ) | ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_86= '&' ( ( ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing' ) | ( ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_97= '&' ( (lv_timeDefined_98_0= 'time' ) ) (otherlv_99= '=' | otherlv_100= '==' ) ( (lv_time_101_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) ) ) ) ) ) )* )
            // InternalMcmodel.g:10552:6: ( ({...}? => ( ({...}? => (otherlv_11= '&' ( (lv_angleDefined_12_0= 'angle' ) ) (otherlv_13= '=' | otherlv_14= '==' ) ( (lv_angle_15_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= '&' ( ( ( (lv_blockingDefined_17_0= '!' ) ) otherlv_18= 'blocking' ) | ( ( (lv_blockingDefined_19_0= 'blocking' ) ) ( (otherlv_20= '!=' ( ( (lv_blocking_21_0= 'false' ) ) | otherlv_22= 'true' ) ) | ( (otherlv_23= '=' | otherlv_24= '==' ) ( ( (lv_blocking_25_0= 'true' ) ) | otherlv_26= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= '&' ( ( ( (lv_brokenDefined_28_0= '!' ) ) otherlv_29= 'broken' ) | ( ( (lv_brokenDefined_30_0= 'broken' ) ) ( (otherlv_31= '!=' ( ( (lv_broken_32_0= 'false' ) ) | otherlv_33= 'true' ) ) | ( (otherlv_34= '=' | otherlv_35= '==' ) ( ( (lv_broken_36_0= 'true' ) ) | otherlv_37= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_38= '&' ( ( ( (lv_castDefined_39_0= '!' ) ) otherlv_40= 'cast' ) | ( ( (lv_castDefined_41_0= 'cast' ) ) ( (otherlv_42= '!=' ( ( (lv_cast_43_0= 'false' ) ) | otherlv_44= 'true' ) ) | ( (otherlv_45= '=' | otherlv_46= '==' ) ( ( (lv_cast_47_0= 'true' ) ) | otherlv_48= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_49= '&' ( (lv_cooldownDefined_50_0= 'cooldown' ) ) (otherlv_51= '=' | otherlv_52= '==' ) ( (lv_cooldown_53_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_54= '&' ( (lv_damageDefined_55_0= 'damage' ) ) (otherlv_56= '=' | otherlv_57= '==' ) ( (lv_damage_58_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_59= '&' ( ( ( (lv_damagedDefined_60_0= '!' ) ) otherlv_61= 'damaged' ) | ( ( (lv_damagedDefined_62_0= 'damaged' ) ) ( (otherlv_63= '!=' ( ( (lv_damaged_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_damaged_68_0= 'true' ) ) | otherlv_69= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_70= '&' ( (lv_pullDefined_71_0= 'pull' ) ) (otherlv_72= '=' | otherlv_73= '==' ) ( (lv_pull_74_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_75= '&' ( ( ( (lv_pullingDefined_76_0= '!' ) ) otherlv_77= 'pulling' ) | ( ( (lv_pullingDefined_78_0= 'pulling' ) ) ( (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) ) | ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_86= '&' ( ( ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing' ) | ( ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_97= '&' ( (lv_timeDefined_98_0= 'time' ) ) (otherlv_99= '=' | otherlv_100= '==' ) ( (lv_time_101_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) ) ) ) ) ) )*
            {
            // InternalMcmodel.g:10552:6: ( ({...}? => ( ({...}? => (otherlv_11= '&' ( (lv_angleDefined_12_0= 'angle' ) ) (otherlv_13= '=' | otherlv_14= '==' ) ( (lv_angle_15_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= '&' ( ( ( (lv_blockingDefined_17_0= '!' ) ) otherlv_18= 'blocking' ) | ( ( (lv_blockingDefined_19_0= 'blocking' ) ) ( (otherlv_20= '!=' ( ( (lv_blocking_21_0= 'false' ) ) | otherlv_22= 'true' ) ) | ( (otherlv_23= '=' | otherlv_24= '==' ) ( ( (lv_blocking_25_0= 'true' ) ) | otherlv_26= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= '&' ( ( ( (lv_brokenDefined_28_0= '!' ) ) otherlv_29= 'broken' ) | ( ( (lv_brokenDefined_30_0= 'broken' ) ) ( (otherlv_31= '!=' ( ( (lv_broken_32_0= 'false' ) ) | otherlv_33= 'true' ) ) | ( (otherlv_34= '=' | otherlv_35= '==' ) ( ( (lv_broken_36_0= 'true' ) ) | otherlv_37= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_38= '&' ( ( ( (lv_castDefined_39_0= '!' ) ) otherlv_40= 'cast' ) | ( ( (lv_castDefined_41_0= 'cast' ) ) ( (otherlv_42= '!=' ( ( (lv_cast_43_0= 'false' ) ) | otherlv_44= 'true' ) ) | ( (otherlv_45= '=' | otherlv_46= '==' ) ( ( (lv_cast_47_0= 'true' ) ) | otherlv_48= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_49= '&' ( (lv_cooldownDefined_50_0= 'cooldown' ) ) (otherlv_51= '=' | otherlv_52= '==' ) ( (lv_cooldown_53_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_54= '&' ( (lv_damageDefined_55_0= 'damage' ) ) (otherlv_56= '=' | otherlv_57= '==' ) ( (lv_damage_58_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_59= '&' ( ( ( (lv_damagedDefined_60_0= '!' ) ) otherlv_61= 'damaged' ) | ( ( (lv_damagedDefined_62_0= 'damaged' ) ) ( (otherlv_63= '!=' ( ( (lv_damaged_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_damaged_68_0= 'true' ) ) | otherlv_69= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_70= '&' ( (lv_pullDefined_71_0= 'pull' ) ) (otherlv_72= '=' | otherlv_73= '==' ) ( (lv_pull_74_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_75= '&' ( ( ( (lv_pullingDefined_76_0= '!' ) ) otherlv_77= 'pulling' ) | ( ( (lv_pullingDefined_78_0= 'pulling' ) ) ( (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) ) | ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_86= '&' ( ( ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing' ) | ( ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_97= '&' ( (lv_timeDefined_98_0= 'time' ) ) (otherlv_99= '=' | otherlv_100= '==' ) ( (lv_time_101_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) ) ) ) ) ) )*
            loop357:
            do {
                int alt357=13;
                alt357 = dfa357.predict(input);
                switch (alt357) {
            	case 1 :
            	    // InternalMcmodel.g:10553:4: ({...}? => ( ({...}? => (otherlv_11= '&' ( (lv_angleDefined_12_0= 'angle' ) ) (otherlv_13= '=' | otherlv_14= '==' ) ( (lv_angle_15_0= RULE_PERCENTAGE ) ) ) ) ) )
            	    {
            	    // InternalMcmodel.g:10553:4: ({...}? => ( ({...}? => (otherlv_11= '&' ( (lv_angleDefined_12_0= 'angle' ) ) (otherlv_13= '=' | otherlv_14= '==' ) ( (lv_angle_15_0= RULE_PERCENTAGE ) ) ) ) ) )
            	    // InternalMcmodel.g:10554:5: {...}? => ( ({...}? => (otherlv_11= '&' ( (lv_angleDefined_12_0= 'angle' ) ) (otherlv_13= '=' | otherlv_14= '==' ) ( (lv_angle_15_0= RULE_PERCENTAGE ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_8Access().getUnorderedGroup_1(), 0) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_8", "getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_8Access().getUnorderedGroup_1(), 0)");
            	    }
            	    // InternalMcmodel.g:10554:116: ( ({...}? => (otherlv_11= '&' ( (lv_angleDefined_12_0= 'angle' ) ) (otherlv_13= '=' | otherlv_14= '==' ) ( (lv_angle_15_0= RULE_PERCENTAGE ) ) ) ) )
            	    // InternalMcmodel.g:10555:6: ({...}? => (otherlv_11= '&' ( (lv_angleDefined_12_0= 'angle' ) ) (otherlv_13= '=' | otherlv_14= '==' ) ( (lv_angle_15_0= RULE_PERCENTAGE ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getOverridePredicate_8Access().getUnorderedGroup_1(), 0);
            	    // InternalMcmodel.g:10558:9: ({...}? => (otherlv_11= '&' ( (lv_angleDefined_12_0= 'angle' ) ) (otherlv_13= '=' | otherlv_14= '==' ) ( (lv_angle_15_0= RULE_PERCENTAGE ) ) ) )
            	    // InternalMcmodel.g:10558:10: {...}? => (otherlv_11= '&' ( (lv_angleDefined_12_0= 'angle' ) ) (otherlv_13= '=' | otherlv_14= '==' ) ( (lv_angle_15_0= RULE_PERCENTAGE ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_8", "true");
            	    }
            	    // InternalMcmodel.g:10558:19: (otherlv_11= '&' ( (lv_angleDefined_12_0= 'angle' ) ) (otherlv_13= '=' | otherlv_14= '==' ) ( (lv_angle_15_0= RULE_PERCENTAGE ) ) )
            	    // InternalMcmodel.g:10558:20: otherlv_11= '&' ( (lv_angleDefined_12_0= 'angle' ) ) (otherlv_13= '=' | otherlv_14= '==' ) ( (lv_angle_15_0= RULE_PERCENTAGE ) )
            	    {
            	    otherlv_11=(Token)match(input,59,FOLLOW_58); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_11, grammarAccess.getOverridePredicate_8Access().getAmpersandKeyword_1_0_0());
            	      								
            	    }
            	    // InternalMcmodel.g:10562:9: ( (lv_angleDefined_12_0= 'angle' ) )
            	    // InternalMcmodel.g:10563:10: (lv_angleDefined_12_0= 'angle' )
            	    {
            	    // InternalMcmodel.g:10563:10: (lv_angleDefined_12_0= 'angle' )
            	    // InternalMcmodel.g:10564:11: lv_angleDefined_12_0= 'angle'
            	    {
            	    lv_angleDefined_12_0=(Token)match(input,38,FOLLOW_35); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											newLeafNode(lv_angleDefined_12_0, grammarAccess.getOverridePredicate_8Access().getAngleDefinedAngleKeyword_1_0_1_0());
            	      										
            	    }
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElement(grammarAccess.getOverridePredicate_8Rule());
            	      											}
            	      											setWithLastConsumed(current, "angleDefined", true, "angle");
            	      										
            	    }

            	    }


            	    }

            	    // InternalMcmodel.g:10576:9: (otherlv_13= '=' | otherlv_14= '==' )
            	    int alt321=2;
            	    int LA321_0 = input.LA(1);

            	    if ( (LA321_0==18) ) {
            	        alt321=1;
            	    }
            	    else if ( (LA321_0==58) ) {
            	        alt321=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 321, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt321) {
            	        case 1 :
            	            // InternalMcmodel.g:10577:10: otherlv_13= '='
            	            {
            	            otherlv_13=(Token)match(input,18,FOLLOW_36); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(otherlv_13, grammarAccess.getOverridePredicate_8Access().getEqualsSignKeyword_1_0_2_0());
            	              									
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalMcmodel.g:10582:10: otherlv_14= '=='
            	            {
            	            otherlv_14=(Token)match(input,58,FOLLOW_36); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(otherlv_14, grammarAccess.getOverridePredicate_8Access().getEqualsSignEqualsSignKeyword_1_0_2_1());
            	              									
            	            }

            	            }
            	            break;

            	    }

            	    // InternalMcmodel.g:10587:9: ( (lv_angle_15_0= RULE_PERCENTAGE ) )
            	    // InternalMcmodel.g:10588:10: (lv_angle_15_0= RULE_PERCENTAGE )
            	    {
            	    // InternalMcmodel.g:10588:10: (lv_angle_15_0= RULE_PERCENTAGE )
            	    // InternalMcmodel.g:10589:11: lv_angle_15_0= RULE_PERCENTAGE
            	    {
            	    lv_angle_15_0=(Token)match(input,RULE_PERCENTAGE,FOLLOW_37); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											newLeafNode(lv_angle_15_0, grammarAccess.getOverridePredicate_8Access().getAnglePERCENTAGETerminalRuleCall_1_0_3_0());
            	      										
            	    }
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElement(grammarAccess.getOverridePredicate_8Rule());
            	      											}
            	      											setWithLastConsumed(
            	      												current,
            	      												"angle",
            	      												lv_angle_15_0,
            	      												"com.raptor.mcmodel.Mcmodel.PERCENTAGE");
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getOverridePredicate_8Access().getUnorderedGroup_1());

            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // InternalMcmodel.g:10611:4: ({...}? => ( ({...}? => (otherlv_16= '&' ( ( ( (lv_blockingDefined_17_0= '!' ) ) otherlv_18= 'blocking' ) | ( ( (lv_blockingDefined_19_0= 'blocking' ) ) ( (otherlv_20= '!=' ( ( (lv_blocking_21_0= 'false' ) ) | otherlv_22= 'true' ) ) | ( (otherlv_23= '=' | otherlv_24= '==' ) ( ( (lv_blocking_25_0= 'true' ) ) | otherlv_26= 'false' ) ) ) ) ) ) ) ) )
            	    {
            	    // InternalMcmodel.g:10611:4: ({...}? => ( ({...}? => (otherlv_16= '&' ( ( ( (lv_blockingDefined_17_0= '!' ) ) otherlv_18= 'blocking' ) | ( ( (lv_blockingDefined_19_0= 'blocking' ) ) ( (otherlv_20= '!=' ( ( (lv_blocking_21_0= 'false' ) ) | otherlv_22= 'true' ) ) | ( (otherlv_23= '=' | otherlv_24= '==' ) ( ( (lv_blocking_25_0= 'true' ) ) | otherlv_26= 'false' ) ) ) ) ) ) ) ) )
            	    // InternalMcmodel.g:10612:5: {...}? => ( ({...}? => (otherlv_16= '&' ( ( ( (lv_blockingDefined_17_0= '!' ) ) otherlv_18= 'blocking' ) | ( ( (lv_blockingDefined_19_0= 'blocking' ) ) ( (otherlv_20= '!=' ( ( (lv_blocking_21_0= 'false' ) ) | otherlv_22= 'true' ) ) | ( (otherlv_23= '=' | otherlv_24= '==' ) ( ( (lv_blocking_25_0= 'true' ) ) | otherlv_26= 'false' ) ) ) ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_8Access().getUnorderedGroup_1(), 1) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_8", "getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_8Access().getUnorderedGroup_1(), 1)");
            	    }
            	    // InternalMcmodel.g:10612:116: ( ({...}? => (otherlv_16= '&' ( ( ( (lv_blockingDefined_17_0= '!' ) ) otherlv_18= 'blocking' ) | ( ( (lv_blockingDefined_19_0= 'blocking' ) ) ( (otherlv_20= '!=' ( ( (lv_blocking_21_0= 'false' ) ) | otherlv_22= 'true' ) ) | ( (otherlv_23= '=' | otherlv_24= '==' ) ( ( (lv_blocking_25_0= 'true' ) ) | otherlv_26= 'false' ) ) ) ) ) ) ) )
            	    // InternalMcmodel.g:10613:6: ({...}? => (otherlv_16= '&' ( ( ( (lv_blockingDefined_17_0= '!' ) ) otherlv_18= 'blocking' ) | ( ( (lv_blockingDefined_19_0= 'blocking' ) ) ( (otherlv_20= '!=' ( ( (lv_blocking_21_0= 'false' ) ) | otherlv_22= 'true' ) ) | ( (otherlv_23= '=' | otherlv_24= '==' ) ( ( (lv_blocking_25_0= 'true' ) ) | otherlv_26= 'false' ) ) ) ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getOverridePredicate_8Access().getUnorderedGroup_1(), 1);
            	    // InternalMcmodel.g:10616:9: ({...}? => (otherlv_16= '&' ( ( ( (lv_blockingDefined_17_0= '!' ) ) otherlv_18= 'blocking' ) | ( ( (lv_blockingDefined_19_0= 'blocking' ) ) ( (otherlv_20= '!=' ( ( (lv_blocking_21_0= 'false' ) ) | otherlv_22= 'true' ) ) | ( (otherlv_23= '=' | otherlv_24= '==' ) ( ( (lv_blocking_25_0= 'true' ) ) | otherlv_26= 'false' ) ) ) ) ) ) )
            	    // InternalMcmodel.g:10616:10: {...}? => (otherlv_16= '&' ( ( ( (lv_blockingDefined_17_0= '!' ) ) otherlv_18= 'blocking' ) | ( ( (lv_blockingDefined_19_0= 'blocking' ) ) ( (otherlv_20= '!=' ( ( (lv_blocking_21_0= 'false' ) ) | otherlv_22= 'true' ) ) | ( (otherlv_23= '=' | otherlv_24= '==' ) ( ( (lv_blocking_25_0= 'true' ) ) | otherlv_26= 'false' ) ) ) ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_8", "true");
            	    }
            	    // InternalMcmodel.g:10616:19: (otherlv_16= '&' ( ( ( (lv_blockingDefined_17_0= '!' ) ) otherlv_18= 'blocking' ) | ( ( (lv_blockingDefined_19_0= 'blocking' ) ) ( (otherlv_20= '!=' ( ( (lv_blocking_21_0= 'false' ) ) | otherlv_22= 'true' ) ) | ( (otherlv_23= '=' | otherlv_24= '==' ) ( ( (lv_blocking_25_0= 'true' ) ) | otherlv_26= 'false' ) ) ) ) ) )
            	    // InternalMcmodel.g:10616:20: otherlv_16= '&' ( ( ( (lv_blockingDefined_17_0= '!' ) ) otherlv_18= 'blocking' ) | ( ( (lv_blockingDefined_19_0= 'blocking' ) ) ( (otherlv_20= '!=' ( ( (lv_blocking_21_0= 'false' ) ) | otherlv_22= 'true' ) ) | ( (otherlv_23= '=' | otherlv_24= '==' ) ( ( (lv_blocking_25_0= 'true' ) ) | otherlv_26= 'false' ) ) ) ) )
            	    {
            	    otherlv_16=(Token)match(input,59,FOLLOW_38); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_16, grammarAccess.getOverridePredicate_8Access().getAmpersandKeyword_1_1_0());
            	      								
            	    }
            	    // InternalMcmodel.g:10620:9: ( ( ( (lv_blockingDefined_17_0= '!' ) ) otherlv_18= 'blocking' ) | ( ( (lv_blockingDefined_19_0= 'blocking' ) ) ( (otherlv_20= '!=' ( ( (lv_blocking_21_0= 'false' ) ) | otherlv_22= 'true' ) ) | ( (otherlv_23= '=' | otherlv_24= '==' ) ( ( (lv_blocking_25_0= 'true' ) ) | otherlv_26= 'false' ) ) ) ) )
            	    int alt326=2;
            	    int LA326_0 = input.LA(1);

            	    if ( (LA326_0==60) ) {
            	        alt326=1;
            	    }
            	    else if ( (LA326_0==61) ) {
            	        alt326=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 326, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt326) {
            	        case 1 :
            	            // InternalMcmodel.g:10621:10: ( ( (lv_blockingDefined_17_0= '!' ) ) otherlv_18= 'blocking' )
            	            {
            	            // InternalMcmodel.g:10621:10: ( ( (lv_blockingDefined_17_0= '!' ) ) otherlv_18= 'blocking' )
            	            // InternalMcmodel.g:10622:11: ( (lv_blockingDefined_17_0= '!' ) ) otherlv_18= 'blocking'
            	            {
            	            // InternalMcmodel.g:10622:11: ( (lv_blockingDefined_17_0= '!' ) )
            	            // InternalMcmodel.g:10623:12: (lv_blockingDefined_17_0= '!' )
            	            {
            	            // InternalMcmodel.g:10623:12: (lv_blockingDefined_17_0= '!' )
            	            // InternalMcmodel.g:10624:13: lv_blockingDefined_17_0= '!'
            	            {
            	            lv_blockingDefined_17_0=(Token)match(input,60,FOLLOW_39); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              													newLeafNode(lv_blockingDefined_17_0, grammarAccess.getOverridePredicate_8Access().getBlockingDefinedExclamationMarkKeyword_1_1_1_0_0_0());
            	              												
            	            }
            	            if ( state.backtracking==0 ) {

            	              													if (current==null) {
            	              														current = createModelElement(grammarAccess.getOverridePredicate_8Rule());
            	              													}
            	              													setWithLastConsumed(current, "blockingDefined", true, "!");
            	              												
            	            }

            	            }


            	            }

            	            otherlv_18=(Token)match(input,61,FOLLOW_37); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              											newLeafNode(otherlv_18, grammarAccess.getOverridePredicate_8Access().getBlockingKeyword_1_1_1_0_1());
            	              										
            	            }

            	            }


            	            }
            	            break;
            	        case 2 :
            	            // InternalMcmodel.g:10642:10: ( ( (lv_blockingDefined_19_0= 'blocking' ) ) ( (otherlv_20= '!=' ( ( (lv_blocking_21_0= 'false' ) ) | otherlv_22= 'true' ) ) | ( (otherlv_23= '=' | otherlv_24= '==' ) ( ( (lv_blocking_25_0= 'true' ) ) | otherlv_26= 'false' ) ) ) )
            	            {
            	            // InternalMcmodel.g:10642:10: ( ( (lv_blockingDefined_19_0= 'blocking' ) ) ( (otherlv_20= '!=' ( ( (lv_blocking_21_0= 'false' ) ) | otherlv_22= 'true' ) ) | ( (otherlv_23= '=' | otherlv_24= '==' ) ( ( (lv_blocking_25_0= 'true' ) ) | otherlv_26= 'false' ) ) ) )
            	            // InternalMcmodel.g:10643:11: ( (lv_blockingDefined_19_0= 'blocking' ) ) ( (otherlv_20= '!=' ( ( (lv_blocking_21_0= 'false' ) ) | otherlv_22= 'true' ) ) | ( (otherlv_23= '=' | otherlv_24= '==' ) ( ( (lv_blocking_25_0= 'true' ) ) | otherlv_26= 'false' ) ) )
            	            {
            	            // InternalMcmodel.g:10643:11: ( (lv_blockingDefined_19_0= 'blocking' ) )
            	            // InternalMcmodel.g:10644:12: (lv_blockingDefined_19_0= 'blocking' )
            	            {
            	            // InternalMcmodel.g:10644:12: (lv_blockingDefined_19_0= 'blocking' )
            	            // InternalMcmodel.g:10645:13: lv_blockingDefined_19_0= 'blocking'
            	            {
            	            lv_blockingDefined_19_0=(Token)match(input,61,FOLLOW_40); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              													newLeafNode(lv_blockingDefined_19_0, grammarAccess.getOverridePredicate_8Access().getBlockingDefinedBlockingKeyword_1_1_1_1_0_0());
            	              												
            	            }
            	            if ( state.backtracking==0 ) {

            	              													if (current==null) {
            	              														current = createModelElement(grammarAccess.getOverridePredicate_8Rule());
            	              													}
            	              													setWithLastConsumed(current, "blockingDefined", true, "blocking");
            	              												
            	            }

            	            }


            	            }

            	            // InternalMcmodel.g:10657:11: ( (otherlv_20= '!=' ( ( (lv_blocking_21_0= 'false' ) ) | otherlv_22= 'true' ) ) | ( (otherlv_23= '=' | otherlv_24= '==' ) ( ( (lv_blocking_25_0= 'true' ) ) | otherlv_26= 'false' ) ) )
            	            int alt325=2;
            	            int LA325_0 = input.LA(1);

            	            if ( (LA325_0==62) ) {
            	                alt325=1;
            	            }
            	            else if ( (LA325_0==18||LA325_0==58) ) {
            	                alt325=2;
            	            }
            	            else {
            	                if (state.backtracking>0) {state.failed=true; return current;}
            	                NoViableAltException nvae =
            	                    new NoViableAltException("", 325, 0, input);

            	                throw nvae;
            	            }
            	            switch (alt325) {
            	                case 1 :
            	                    // InternalMcmodel.g:10658:12: (otherlv_20= '!=' ( ( (lv_blocking_21_0= 'false' ) ) | otherlv_22= 'true' ) )
            	                    {
            	                    // InternalMcmodel.g:10658:12: (otherlv_20= '!=' ( ( (lv_blocking_21_0= 'false' ) ) | otherlv_22= 'true' ) )
            	                    // InternalMcmodel.g:10659:13: otherlv_20= '!=' ( ( (lv_blocking_21_0= 'false' ) ) | otherlv_22= 'true' )
            	                    {
            	                    otherlv_20=(Token)match(input,62,FOLLOW_7); if (state.failed) return current;
            	                    if ( state.backtracking==0 ) {

            	                      													newLeafNode(otherlv_20, grammarAccess.getOverridePredicate_8Access().getExclamationMarkEqualsSignKeyword_1_1_1_1_1_0_0());
            	                      												
            	                    }
            	                    // InternalMcmodel.g:10663:13: ( ( (lv_blocking_21_0= 'false' ) ) | otherlv_22= 'true' )
            	                    int alt322=2;
            	                    int LA322_0 = input.LA(1);

            	                    if ( (LA322_0==21) ) {
            	                        alt322=1;
            	                    }
            	                    else if ( (LA322_0==20) ) {
            	                        alt322=2;
            	                    }
            	                    else {
            	                        if (state.backtracking>0) {state.failed=true; return current;}
            	                        NoViableAltException nvae =
            	                            new NoViableAltException("", 322, 0, input);

            	                        throw nvae;
            	                    }
            	                    switch (alt322) {
            	                        case 1 :
            	                            // InternalMcmodel.g:10664:14: ( (lv_blocking_21_0= 'false' ) )
            	                            {
            	                            // InternalMcmodel.g:10664:14: ( (lv_blocking_21_0= 'false' ) )
            	                            // InternalMcmodel.g:10665:15: (lv_blocking_21_0= 'false' )
            	                            {
            	                            // InternalMcmodel.g:10665:15: (lv_blocking_21_0= 'false' )
            	                            // InternalMcmodel.g:10666:16: lv_blocking_21_0= 'false'
            	                            {
            	                            lv_blocking_21_0=(Token)match(input,21,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              																newLeafNode(lv_blocking_21_0, grammarAccess.getOverridePredicate_8Access().getBlockingFalseKeyword_1_1_1_1_1_0_1_0_0());
            	                              															
            	                            }
            	                            if ( state.backtracking==0 ) {

            	                              																if (current==null) {
            	                              																	current = createModelElement(grammarAccess.getOverridePredicate_8Rule());
            	                              																}
            	                              																setWithLastConsumed(current, "blocking", true, "false");
            	                              															
            	                            }

            	                            }


            	                            }


            	                            }
            	                            break;
            	                        case 2 :
            	                            // InternalMcmodel.g:10679:14: otherlv_22= 'true'
            	                            {
            	                            otherlv_22=(Token)match(input,20,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_22, grammarAccess.getOverridePredicate_8Access().getTrueKeyword_1_1_1_1_1_0_1_1());
            	                              													
            	                            }

            	                            }
            	                            break;

            	                    }


            	                    }


            	                    }
            	                    break;
            	                case 2 :
            	                    // InternalMcmodel.g:10686:12: ( (otherlv_23= '=' | otherlv_24= '==' ) ( ( (lv_blocking_25_0= 'true' ) ) | otherlv_26= 'false' ) )
            	                    {
            	                    // InternalMcmodel.g:10686:12: ( (otherlv_23= '=' | otherlv_24= '==' ) ( ( (lv_blocking_25_0= 'true' ) ) | otherlv_26= 'false' ) )
            	                    // InternalMcmodel.g:10687:13: (otherlv_23= '=' | otherlv_24= '==' ) ( ( (lv_blocking_25_0= 'true' ) ) | otherlv_26= 'false' )
            	                    {
            	                    // InternalMcmodel.g:10687:13: (otherlv_23= '=' | otherlv_24= '==' )
            	                    int alt323=2;
            	                    int LA323_0 = input.LA(1);

            	                    if ( (LA323_0==18) ) {
            	                        alt323=1;
            	                    }
            	                    else if ( (LA323_0==58) ) {
            	                        alt323=2;
            	                    }
            	                    else {
            	                        if (state.backtracking>0) {state.failed=true; return current;}
            	                        NoViableAltException nvae =
            	                            new NoViableAltException("", 323, 0, input);

            	                        throw nvae;
            	                    }
            	                    switch (alt323) {
            	                        case 1 :
            	                            // InternalMcmodel.g:10688:14: otherlv_23= '='
            	                            {
            	                            otherlv_23=(Token)match(input,18,FOLLOW_7); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_23, grammarAccess.getOverridePredicate_8Access().getEqualsSignKeyword_1_1_1_1_1_1_0_0());
            	                              													
            	                            }

            	                            }
            	                            break;
            	                        case 2 :
            	                            // InternalMcmodel.g:10693:14: otherlv_24= '=='
            	                            {
            	                            otherlv_24=(Token)match(input,58,FOLLOW_7); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_24, grammarAccess.getOverridePredicate_8Access().getEqualsSignEqualsSignKeyword_1_1_1_1_1_1_0_1());
            	                              													
            	                            }

            	                            }
            	                            break;

            	                    }

            	                    // InternalMcmodel.g:10698:13: ( ( (lv_blocking_25_0= 'true' ) ) | otherlv_26= 'false' )
            	                    int alt324=2;
            	                    int LA324_0 = input.LA(1);

            	                    if ( (LA324_0==20) ) {
            	                        alt324=1;
            	                    }
            	                    else if ( (LA324_0==21) ) {
            	                        alt324=2;
            	                    }
            	                    else {
            	                        if (state.backtracking>0) {state.failed=true; return current;}
            	                        NoViableAltException nvae =
            	                            new NoViableAltException("", 324, 0, input);

            	                        throw nvae;
            	                    }
            	                    switch (alt324) {
            	                        case 1 :
            	                            // InternalMcmodel.g:10699:14: ( (lv_blocking_25_0= 'true' ) )
            	                            {
            	                            // InternalMcmodel.g:10699:14: ( (lv_blocking_25_0= 'true' ) )
            	                            // InternalMcmodel.g:10700:15: (lv_blocking_25_0= 'true' )
            	                            {
            	                            // InternalMcmodel.g:10700:15: (lv_blocking_25_0= 'true' )
            	                            // InternalMcmodel.g:10701:16: lv_blocking_25_0= 'true'
            	                            {
            	                            lv_blocking_25_0=(Token)match(input,20,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              																newLeafNode(lv_blocking_25_0, grammarAccess.getOverridePredicate_8Access().getBlockingTrueKeyword_1_1_1_1_1_1_1_0_0());
            	                              															
            	                            }
            	                            if ( state.backtracking==0 ) {

            	                              																if (current==null) {
            	                              																	current = createModelElement(grammarAccess.getOverridePredicate_8Rule());
            	                              																}
            	                              																setWithLastConsumed(current, "blocking", true, "true");
            	                              															
            	                            }

            	                            }


            	                            }


            	                            }
            	                            break;
            	                        case 2 :
            	                            // InternalMcmodel.g:10714:14: otherlv_26= 'false'
            	                            {
            	                            otherlv_26=(Token)match(input,21,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_26, grammarAccess.getOverridePredicate_8Access().getFalseKeyword_1_1_1_1_1_1_1_1());
            	                              													
            	                            }

            	                            }
            	                            break;

            	                    }


            	                    }


            	                    }
            	                    break;

            	            }


            	            }


            	            }
            	            break;

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getOverridePredicate_8Access().getUnorderedGroup_1());

            	    }


            	    }


            	    }
            	    break;
            	case 3 :
            	    // InternalMcmodel.g:10729:4: ({...}? => ( ({...}? => (otherlv_27= '&' ( ( ( (lv_brokenDefined_28_0= '!' ) ) otherlv_29= 'broken' ) | ( ( (lv_brokenDefined_30_0= 'broken' ) ) ( (otherlv_31= '!=' ( ( (lv_broken_32_0= 'false' ) ) | otherlv_33= 'true' ) ) | ( (otherlv_34= '=' | otherlv_35= '==' ) ( ( (lv_broken_36_0= 'true' ) ) | otherlv_37= 'false' ) ) ) ) ) ) ) ) )
            	    {
            	    // InternalMcmodel.g:10729:4: ({...}? => ( ({...}? => (otherlv_27= '&' ( ( ( (lv_brokenDefined_28_0= '!' ) ) otherlv_29= 'broken' ) | ( ( (lv_brokenDefined_30_0= 'broken' ) ) ( (otherlv_31= '!=' ( ( (lv_broken_32_0= 'false' ) ) | otherlv_33= 'true' ) ) | ( (otherlv_34= '=' | otherlv_35= '==' ) ( ( (lv_broken_36_0= 'true' ) ) | otherlv_37= 'false' ) ) ) ) ) ) ) ) )
            	    // InternalMcmodel.g:10730:5: {...}? => ( ({...}? => (otherlv_27= '&' ( ( ( (lv_brokenDefined_28_0= '!' ) ) otherlv_29= 'broken' ) | ( ( (lv_brokenDefined_30_0= 'broken' ) ) ( (otherlv_31= '!=' ( ( (lv_broken_32_0= 'false' ) ) | otherlv_33= 'true' ) ) | ( (otherlv_34= '=' | otherlv_35= '==' ) ( ( (lv_broken_36_0= 'true' ) ) | otherlv_37= 'false' ) ) ) ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_8Access().getUnorderedGroup_1(), 2) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_8", "getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_8Access().getUnorderedGroup_1(), 2)");
            	    }
            	    // InternalMcmodel.g:10730:116: ( ({...}? => (otherlv_27= '&' ( ( ( (lv_brokenDefined_28_0= '!' ) ) otherlv_29= 'broken' ) | ( ( (lv_brokenDefined_30_0= 'broken' ) ) ( (otherlv_31= '!=' ( ( (lv_broken_32_0= 'false' ) ) | otherlv_33= 'true' ) ) | ( (otherlv_34= '=' | otherlv_35= '==' ) ( ( (lv_broken_36_0= 'true' ) ) | otherlv_37= 'false' ) ) ) ) ) ) ) )
            	    // InternalMcmodel.g:10731:6: ({...}? => (otherlv_27= '&' ( ( ( (lv_brokenDefined_28_0= '!' ) ) otherlv_29= 'broken' ) | ( ( (lv_brokenDefined_30_0= 'broken' ) ) ( (otherlv_31= '!=' ( ( (lv_broken_32_0= 'false' ) ) | otherlv_33= 'true' ) ) | ( (otherlv_34= '=' | otherlv_35= '==' ) ( ( (lv_broken_36_0= 'true' ) ) | otherlv_37= 'false' ) ) ) ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getOverridePredicate_8Access().getUnorderedGroup_1(), 2);
            	    // InternalMcmodel.g:10734:9: ({...}? => (otherlv_27= '&' ( ( ( (lv_brokenDefined_28_0= '!' ) ) otherlv_29= 'broken' ) | ( ( (lv_brokenDefined_30_0= 'broken' ) ) ( (otherlv_31= '!=' ( ( (lv_broken_32_0= 'false' ) ) | otherlv_33= 'true' ) ) | ( (otherlv_34= '=' | otherlv_35= '==' ) ( ( (lv_broken_36_0= 'true' ) ) | otherlv_37= 'false' ) ) ) ) ) ) )
            	    // InternalMcmodel.g:10734:10: {...}? => (otherlv_27= '&' ( ( ( (lv_brokenDefined_28_0= '!' ) ) otherlv_29= 'broken' ) | ( ( (lv_brokenDefined_30_0= 'broken' ) ) ( (otherlv_31= '!=' ( ( (lv_broken_32_0= 'false' ) ) | otherlv_33= 'true' ) ) | ( (otherlv_34= '=' | otherlv_35= '==' ) ( ( (lv_broken_36_0= 'true' ) ) | otherlv_37= 'false' ) ) ) ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_8", "true");
            	    }
            	    // InternalMcmodel.g:10734:19: (otherlv_27= '&' ( ( ( (lv_brokenDefined_28_0= '!' ) ) otherlv_29= 'broken' ) | ( ( (lv_brokenDefined_30_0= 'broken' ) ) ( (otherlv_31= '!=' ( ( (lv_broken_32_0= 'false' ) ) | otherlv_33= 'true' ) ) | ( (otherlv_34= '=' | otherlv_35= '==' ) ( ( (lv_broken_36_0= 'true' ) ) | otherlv_37= 'false' ) ) ) ) ) )
            	    // InternalMcmodel.g:10734:20: otherlv_27= '&' ( ( ( (lv_brokenDefined_28_0= '!' ) ) otherlv_29= 'broken' ) | ( ( (lv_brokenDefined_30_0= 'broken' ) ) ( (otherlv_31= '!=' ( ( (lv_broken_32_0= 'false' ) ) | otherlv_33= 'true' ) ) | ( (otherlv_34= '=' | otherlv_35= '==' ) ( ( (lv_broken_36_0= 'true' ) ) | otherlv_37= 'false' ) ) ) ) )
            	    {
            	    otherlv_27=(Token)match(input,59,FOLLOW_41); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_27, grammarAccess.getOverridePredicate_8Access().getAmpersandKeyword_1_2_0());
            	      								
            	    }
            	    // InternalMcmodel.g:10738:9: ( ( ( (lv_brokenDefined_28_0= '!' ) ) otherlv_29= 'broken' ) | ( ( (lv_brokenDefined_30_0= 'broken' ) ) ( (otherlv_31= '!=' ( ( (lv_broken_32_0= 'false' ) ) | otherlv_33= 'true' ) ) | ( (otherlv_34= '=' | otherlv_35= '==' ) ( ( (lv_broken_36_0= 'true' ) ) | otherlv_37= 'false' ) ) ) ) )
            	    int alt331=2;
            	    int LA331_0 = input.LA(1);

            	    if ( (LA331_0==60) ) {
            	        alt331=1;
            	    }
            	    else if ( (LA331_0==63) ) {
            	        alt331=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 331, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt331) {
            	        case 1 :
            	            // InternalMcmodel.g:10739:10: ( ( (lv_brokenDefined_28_0= '!' ) ) otherlv_29= 'broken' )
            	            {
            	            // InternalMcmodel.g:10739:10: ( ( (lv_brokenDefined_28_0= '!' ) ) otherlv_29= 'broken' )
            	            // InternalMcmodel.g:10740:11: ( (lv_brokenDefined_28_0= '!' ) ) otherlv_29= 'broken'
            	            {
            	            // InternalMcmodel.g:10740:11: ( (lv_brokenDefined_28_0= '!' ) )
            	            // InternalMcmodel.g:10741:12: (lv_brokenDefined_28_0= '!' )
            	            {
            	            // InternalMcmodel.g:10741:12: (lv_brokenDefined_28_0= '!' )
            	            // InternalMcmodel.g:10742:13: lv_brokenDefined_28_0= '!'
            	            {
            	            lv_brokenDefined_28_0=(Token)match(input,60,FOLLOW_42); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              													newLeafNode(lv_brokenDefined_28_0, grammarAccess.getOverridePredicate_8Access().getBrokenDefinedExclamationMarkKeyword_1_2_1_0_0_0());
            	              												
            	            }
            	            if ( state.backtracking==0 ) {

            	              													if (current==null) {
            	              														current = createModelElement(grammarAccess.getOverridePredicate_8Rule());
            	              													}
            	              													setWithLastConsumed(current, "brokenDefined", true, "!");
            	              												
            	            }

            	            }


            	            }

            	            otherlv_29=(Token)match(input,63,FOLLOW_37); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              											newLeafNode(otherlv_29, grammarAccess.getOverridePredicate_8Access().getBrokenKeyword_1_2_1_0_1());
            	              										
            	            }

            	            }


            	            }
            	            break;
            	        case 2 :
            	            // InternalMcmodel.g:10760:10: ( ( (lv_brokenDefined_30_0= 'broken' ) ) ( (otherlv_31= '!=' ( ( (lv_broken_32_0= 'false' ) ) | otherlv_33= 'true' ) ) | ( (otherlv_34= '=' | otherlv_35= '==' ) ( ( (lv_broken_36_0= 'true' ) ) | otherlv_37= 'false' ) ) ) )
            	            {
            	            // InternalMcmodel.g:10760:10: ( ( (lv_brokenDefined_30_0= 'broken' ) ) ( (otherlv_31= '!=' ( ( (lv_broken_32_0= 'false' ) ) | otherlv_33= 'true' ) ) | ( (otherlv_34= '=' | otherlv_35= '==' ) ( ( (lv_broken_36_0= 'true' ) ) | otherlv_37= 'false' ) ) ) )
            	            // InternalMcmodel.g:10761:11: ( (lv_brokenDefined_30_0= 'broken' ) ) ( (otherlv_31= '!=' ( ( (lv_broken_32_0= 'false' ) ) | otherlv_33= 'true' ) ) | ( (otherlv_34= '=' | otherlv_35= '==' ) ( ( (lv_broken_36_0= 'true' ) ) | otherlv_37= 'false' ) ) )
            	            {
            	            // InternalMcmodel.g:10761:11: ( (lv_brokenDefined_30_0= 'broken' ) )
            	            // InternalMcmodel.g:10762:12: (lv_brokenDefined_30_0= 'broken' )
            	            {
            	            // InternalMcmodel.g:10762:12: (lv_brokenDefined_30_0= 'broken' )
            	            // InternalMcmodel.g:10763:13: lv_brokenDefined_30_0= 'broken'
            	            {
            	            lv_brokenDefined_30_0=(Token)match(input,63,FOLLOW_40); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              													newLeafNode(lv_brokenDefined_30_0, grammarAccess.getOverridePredicate_8Access().getBrokenDefinedBrokenKeyword_1_2_1_1_0_0());
            	              												
            	            }
            	            if ( state.backtracking==0 ) {

            	              													if (current==null) {
            	              														current = createModelElement(grammarAccess.getOverridePredicate_8Rule());
            	              													}
            	              													setWithLastConsumed(current, "brokenDefined", true, "broken");
            	              												
            	            }

            	            }


            	            }

            	            // InternalMcmodel.g:10775:11: ( (otherlv_31= '!=' ( ( (lv_broken_32_0= 'false' ) ) | otherlv_33= 'true' ) ) | ( (otherlv_34= '=' | otherlv_35= '==' ) ( ( (lv_broken_36_0= 'true' ) ) | otherlv_37= 'false' ) ) )
            	            int alt330=2;
            	            int LA330_0 = input.LA(1);

            	            if ( (LA330_0==62) ) {
            	                alt330=1;
            	            }
            	            else if ( (LA330_0==18||LA330_0==58) ) {
            	                alt330=2;
            	            }
            	            else {
            	                if (state.backtracking>0) {state.failed=true; return current;}
            	                NoViableAltException nvae =
            	                    new NoViableAltException("", 330, 0, input);

            	                throw nvae;
            	            }
            	            switch (alt330) {
            	                case 1 :
            	                    // InternalMcmodel.g:10776:12: (otherlv_31= '!=' ( ( (lv_broken_32_0= 'false' ) ) | otherlv_33= 'true' ) )
            	                    {
            	                    // InternalMcmodel.g:10776:12: (otherlv_31= '!=' ( ( (lv_broken_32_0= 'false' ) ) | otherlv_33= 'true' ) )
            	                    // InternalMcmodel.g:10777:13: otherlv_31= '!=' ( ( (lv_broken_32_0= 'false' ) ) | otherlv_33= 'true' )
            	                    {
            	                    otherlv_31=(Token)match(input,62,FOLLOW_7); if (state.failed) return current;
            	                    if ( state.backtracking==0 ) {

            	                      													newLeafNode(otherlv_31, grammarAccess.getOverridePredicate_8Access().getExclamationMarkEqualsSignKeyword_1_2_1_1_1_0_0());
            	                      												
            	                    }
            	                    // InternalMcmodel.g:10781:13: ( ( (lv_broken_32_0= 'false' ) ) | otherlv_33= 'true' )
            	                    int alt327=2;
            	                    int LA327_0 = input.LA(1);

            	                    if ( (LA327_0==21) ) {
            	                        alt327=1;
            	                    }
            	                    else if ( (LA327_0==20) ) {
            	                        alt327=2;
            	                    }
            	                    else {
            	                        if (state.backtracking>0) {state.failed=true; return current;}
            	                        NoViableAltException nvae =
            	                            new NoViableAltException("", 327, 0, input);

            	                        throw nvae;
            	                    }
            	                    switch (alt327) {
            	                        case 1 :
            	                            // InternalMcmodel.g:10782:14: ( (lv_broken_32_0= 'false' ) )
            	                            {
            	                            // InternalMcmodel.g:10782:14: ( (lv_broken_32_0= 'false' ) )
            	                            // InternalMcmodel.g:10783:15: (lv_broken_32_0= 'false' )
            	                            {
            	                            // InternalMcmodel.g:10783:15: (lv_broken_32_0= 'false' )
            	                            // InternalMcmodel.g:10784:16: lv_broken_32_0= 'false'
            	                            {
            	                            lv_broken_32_0=(Token)match(input,21,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              																newLeafNode(lv_broken_32_0, grammarAccess.getOverridePredicate_8Access().getBrokenFalseKeyword_1_2_1_1_1_0_1_0_0());
            	                              															
            	                            }
            	                            if ( state.backtracking==0 ) {

            	                              																if (current==null) {
            	                              																	current = createModelElement(grammarAccess.getOverridePredicate_8Rule());
            	                              																}
            	                              																setWithLastConsumed(current, "broken", true, "false");
            	                              															
            	                            }

            	                            }


            	                            }


            	                            }
            	                            break;
            	                        case 2 :
            	                            // InternalMcmodel.g:10797:14: otherlv_33= 'true'
            	                            {
            	                            otherlv_33=(Token)match(input,20,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_33, grammarAccess.getOverridePredicate_8Access().getTrueKeyword_1_2_1_1_1_0_1_1());
            	                              													
            	                            }

            	                            }
            	                            break;

            	                    }


            	                    }


            	                    }
            	                    break;
            	                case 2 :
            	                    // InternalMcmodel.g:10804:12: ( (otherlv_34= '=' | otherlv_35= '==' ) ( ( (lv_broken_36_0= 'true' ) ) | otherlv_37= 'false' ) )
            	                    {
            	                    // InternalMcmodel.g:10804:12: ( (otherlv_34= '=' | otherlv_35= '==' ) ( ( (lv_broken_36_0= 'true' ) ) | otherlv_37= 'false' ) )
            	                    // InternalMcmodel.g:10805:13: (otherlv_34= '=' | otherlv_35= '==' ) ( ( (lv_broken_36_0= 'true' ) ) | otherlv_37= 'false' )
            	                    {
            	                    // InternalMcmodel.g:10805:13: (otherlv_34= '=' | otherlv_35= '==' )
            	                    int alt328=2;
            	                    int LA328_0 = input.LA(1);

            	                    if ( (LA328_0==18) ) {
            	                        alt328=1;
            	                    }
            	                    else if ( (LA328_0==58) ) {
            	                        alt328=2;
            	                    }
            	                    else {
            	                        if (state.backtracking>0) {state.failed=true; return current;}
            	                        NoViableAltException nvae =
            	                            new NoViableAltException("", 328, 0, input);

            	                        throw nvae;
            	                    }
            	                    switch (alt328) {
            	                        case 1 :
            	                            // InternalMcmodel.g:10806:14: otherlv_34= '='
            	                            {
            	                            otherlv_34=(Token)match(input,18,FOLLOW_7); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_34, grammarAccess.getOverridePredicate_8Access().getEqualsSignKeyword_1_2_1_1_1_1_0_0());
            	                              													
            	                            }

            	                            }
            	                            break;
            	                        case 2 :
            	                            // InternalMcmodel.g:10811:14: otherlv_35= '=='
            	                            {
            	                            otherlv_35=(Token)match(input,58,FOLLOW_7); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_35, grammarAccess.getOverridePredicate_8Access().getEqualsSignEqualsSignKeyword_1_2_1_1_1_1_0_1());
            	                              													
            	                            }

            	                            }
            	                            break;

            	                    }

            	                    // InternalMcmodel.g:10816:13: ( ( (lv_broken_36_0= 'true' ) ) | otherlv_37= 'false' )
            	                    int alt329=2;
            	                    int LA329_0 = input.LA(1);

            	                    if ( (LA329_0==20) ) {
            	                        alt329=1;
            	                    }
            	                    else if ( (LA329_0==21) ) {
            	                        alt329=2;
            	                    }
            	                    else {
            	                        if (state.backtracking>0) {state.failed=true; return current;}
            	                        NoViableAltException nvae =
            	                            new NoViableAltException("", 329, 0, input);

            	                        throw nvae;
            	                    }
            	                    switch (alt329) {
            	                        case 1 :
            	                            // InternalMcmodel.g:10817:14: ( (lv_broken_36_0= 'true' ) )
            	                            {
            	                            // InternalMcmodel.g:10817:14: ( (lv_broken_36_0= 'true' ) )
            	                            // InternalMcmodel.g:10818:15: (lv_broken_36_0= 'true' )
            	                            {
            	                            // InternalMcmodel.g:10818:15: (lv_broken_36_0= 'true' )
            	                            // InternalMcmodel.g:10819:16: lv_broken_36_0= 'true'
            	                            {
            	                            lv_broken_36_0=(Token)match(input,20,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              																newLeafNode(lv_broken_36_0, grammarAccess.getOverridePredicate_8Access().getBrokenTrueKeyword_1_2_1_1_1_1_1_0_0());
            	                              															
            	                            }
            	                            if ( state.backtracking==0 ) {

            	                              																if (current==null) {
            	                              																	current = createModelElement(grammarAccess.getOverridePredicate_8Rule());
            	                              																}
            	                              																setWithLastConsumed(current, "broken", true, "true");
            	                              															
            	                            }

            	                            }


            	                            }


            	                            }
            	                            break;
            	                        case 2 :
            	                            // InternalMcmodel.g:10832:14: otherlv_37= 'false'
            	                            {
            	                            otherlv_37=(Token)match(input,21,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_37, grammarAccess.getOverridePredicate_8Access().getFalseKeyword_1_2_1_1_1_1_1_1());
            	                              													
            	                            }

            	                            }
            	                            break;

            	                    }


            	                    }


            	                    }
            	                    break;

            	            }


            	            }


            	            }
            	            break;

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getOverridePredicate_8Access().getUnorderedGroup_1());

            	    }


            	    }


            	    }
            	    break;
            	case 4 :
            	    // InternalMcmodel.g:10847:4: ({...}? => ( ({...}? => (otherlv_38= '&' ( ( ( (lv_castDefined_39_0= '!' ) ) otherlv_40= 'cast' ) | ( ( (lv_castDefined_41_0= 'cast' ) ) ( (otherlv_42= '!=' ( ( (lv_cast_43_0= 'false' ) ) | otherlv_44= 'true' ) ) | ( (otherlv_45= '=' | otherlv_46= '==' ) ( ( (lv_cast_47_0= 'true' ) ) | otherlv_48= 'false' ) ) ) ) ) ) ) ) )
            	    {
            	    // InternalMcmodel.g:10847:4: ({...}? => ( ({...}? => (otherlv_38= '&' ( ( ( (lv_castDefined_39_0= '!' ) ) otherlv_40= 'cast' ) | ( ( (lv_castDefined_41_0= 'cast' ) ) ( (otherlv_42= '!=' ( ( (lv_cast_43_0= 'false' ) ) | otherlv_44= 'true' ) ) | ( (otherlv_45= '=' | otherlv_46= '==' ) ( ( (lv_cast_47_0= 'true' ) ) | otherlv_48= 'false' ) ) ) ) ) ) ) ) )
            	    // InternalMcmodel.g:10848:5: {...}? => ( ({...}? => (otherlv_38= '&' ( ( ( (lv_castDefined_39_0= '!' ) ) otherlv_40= 'cast' ) | ( ( (lv_castDefined_41_0= 'cast' ) ) ( (otherlv_42= '!=' ( ( (lv_cast_43_0= 'false' ) ) | otherlv_44= 'true' ) ) | ( (otherlv_45= '=' | otherlv_46= '==' ) ( ( (lv_cast_47_0= 'true' ) ) | otherlv_48= 'false' ) ) ) ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_8Access().getUnorderedGroup_1(), 3) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_8", "getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_8Access().getUnorderedGroup_1(), 3)");
            	    }
            	    // InternalMcmodel.g:10848:116: ( ({...}? => (otherlv_38= '&' ( ( ( (lv_castDefined_39_0= '!' ) ) otherlv_40= 'cast' ) | ( ( (lv_castDefined_41_0= 'cast' ) ) ( (otherlv_42= '!=' ( ( (lv_cast_43_0= 'false' ) ) | otherlv_44= 'true' ) ) | ( (otherlv_45= '=' | otherlv_46= '==' ) ( ( (lv_cast_47_0= 'true' ) ) | otherlv_48= 'false' ) ) ) ) ) ) ) )
            	    // InternalMcmodel.g:10849:6: ({...}? => (otherlv_38= '&' ( ( ( (lv_castDefined_39_0= '!' ) ) otherlv_40= 'cast' ) | ( ( (lv_castDefined_41_0= 'cast' ) ) ( (otherlv_42= '!=' ( ( (lv_cast_43_0= 'false' ) ) | otherlv_44= 'true' ) ) | ( (otherlv_45= '=' | otherlv_46= '==' ) ( ( (lv_cast_47_0= 'true' ) ) | otherlv_48= 'false' ) ) ) ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getOverridePredicate_8Access().getUnorderedGroup_1(), 3);
            	    // InternalMcmodel.g:10852:9: ({...}? => (otherlv_38= '&' ( ( ( (lv_castDefined_39_0= '!' ) ) otherlv_40= 'cast' ) | ( ( (lv_castDefined_41_0= 'cast' ) ) ( (otherlv_42= '!=' ( ( (lv_cast_43_0= 'false' ) ) | otherlv_44= 'true' ) ) | ( (otherlv_45= '=' | otherlv_46= '==' ) ( ( (lv_cast_47_0= 'true' ) ) | otherlv_48= 'false' ) ) ) ) ) ) )
            	    // InternalMcmodel.g:10852:10: {...}? => (otherlv_38= '&' ( ( ( (lv_castDefined_39_0= '!' ) ) otherlv_40= 'cast' ) | ( ( (lv_castDefined_41_0= 'cast' ) ) ( (otherlv_42= '!=' ( ( (lv_cast_43_0= 'false' ) ) | otherlv_44= 'true' ) ) | ( (otherlv_45= '=' | otherlv_46= '==' ) ( ( (lv_cast_47_0= 'true' ) ) | otherlv_48= 'false' ) ) ) ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_8", "true");
            	    }
            	    // InternalMcmodel.g:10852:19: (otherlv_38= '&' ( ( ( (lv_castDefined_39_0= '!' ) ) otherlv_40= 'cast' ) | ( ( (lv_castDefined_41_0= 'cast' ) ) ( (otherlv_42= '!=' ( ( (lv_cast_43_0= 'false' ) ) | otherlv_44= 'true' ) ) | ( (otherlv_45= '=' | otherlv_46= '==' ) ( ( (lv_cast_47_0= 'true' ) ) | otherlv_48= 'false' ) ) ) ) ) )
            	    // InternalMcmodel.g:10852:20: otherlv_38= '&' ( ( ( (lv_castDefined_39_0= '!' ) ) otherlv_40= 'cast' ) | ( ( (lv_castDefined_41_0= 'cast' ) ) ( (otherlv_42= '!=' ( ( (lv_cast_43_0= 'false' ) ) | otherlv_44= 'true' ) ) | ( (otherlv_45= '=' | otherlv_46= '==' ) ( ( (lv_cast_47_0= 'true' ) ) | otherlv_48= 'false' ) ) ) ) )
            	    {
            	    otherlv_38=(Token)match(input,59,FOLLOW_43); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_38, grammarAccess.getOverridePredicate_8Access().getAmpersandKeyword_1_3_0());
            	      								
            	    }
            	    // InternalMcmodel.g:10856:9: ( ( ( (lv_castDefined_39_0= '!' ) ) otherlv_40= 'cast' ) | ( ( (lv_castDefined_41_0= 'cast' ) ) ( (otherlv_42= '!=' ( ( (lv_cast_43_0= 'false' ) ) | otherlv_44= 'true' ) ) | ( (otherlv_45= '=' | otherlv_46= '==' ) ( ( (lv_cast_47_0= 'true' ) ) | otherlv_48= 'false' ) ) ) ) )
            	    int alt336=2;
            	    int LA336_0 = input.LA(1);

            	    if ( (LA336_0==60) ) {
            	        alt336=1;
            	    }
            	    else if ( (LA336_0==64) ) {
            	        alt336=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 336, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt336) {
            	        case 1 :
            	            // InternalMcmodel.g:10857:10: ( ( (lv_castDefined_39_0= '!' ) ) otherlv_40= 'cast' )
            	            {
            	            // InternalMcmodel.g:10857:10: ( ( (lv_castDefined_39_0= '!' ) ) otherlv_40= 'cast' )
            	            // InternalMcmodel.g:10858:11: ( (lv_castDefined_39_0= '!' ) ) otherlv_40= 'cast'
            	            {
            	            // InternalMcmodel.g:10858:11: ( (lv_castDefined_39_0= '!' ) )
            	            // InternalMcmodel.g:10859:12: (lv_castDefined_39_0= '!' )
            	            {
            	            // InternalMcmodel.g:10859:12: (lv_castDefined_39_0= '!' )
            	            // InternalMcmodel.g:10860:13: lv_castDefined_39_0= '!'
            	            {
            	            lv_castDefined_39_0=(Token)match(input,60,FOLLOW_44); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              													newLeafNode(lv_castDefined_39_0, grammarAccess.getOverridePredicate_8Access().getCastDefinedExclamationMarkKeyword_1_3_1_0_0_0());
            	              												
            	            }
            	            if ( state.backtracking==0 ) {

            	              													if (current==null) {
            	              														current = createModelElement(grammarAccess.getOverridePredicate_8Rule());
            	              													}
            	              													setWithLastConsumed(current, "castDefined", true, "!");
            	              												
            	            }

            	            }


            	            }

            	            otherlv_40=(Token)match(input,64,FOLLOW_37); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              											newLeafNode(otherlv_40, grammarAccess.getOverridePredicate_8Access().getCastKeyword_1_3_1_0_1());
            	              										
            	            }

            	            }


            	            }
            	            break;
            	        case 2 :
            	            // InternalMcmodel.g:10878:10: ( ( (lv_castDefined_41_0= 'cast' ) ) ( (otherlv_42= '!=' ( ( (lv_cast_43_0= 'false' ) ) | otherlv_44= 'true' ) ) | ( (otherlv_45= '=' | otherlv_46= '==' ) ( ( (lv_cast_47_0= 'true' ) ) | otherlv_48= 'false' ) ) ) )
            	            {
            	            // InternalMcmodel.g:10878:10: ( ( (lv_castDefined_41_0= 'cast' ) ) ( (otherlv_42= '!=' ( ( (lv_cast_43_0= 'false' ) ) | otherlv_44= 'true' ) ) | ( (otherlv_45= '=' | otherlv_46= '==' ) ( ( (lv_cast_47_0= 'true' ) ) | otherlv_48= 'false' ) ) ) )
            	            // InternalMcmodel.g:10879:11: ( (lv_castDefined_41_0= 'cast' ) ) ( (otherlv_42= '!=' ( ( (lv_cast_43_0= 'false' ) ) | otherlv_44= 'true' ) ) | ( (otherlv_45= '=' | otherlv_46= '==' ) ( ( (lv_cast_47_0= 'true' ) ) | otherlv_48= 'false' ) ) )
            	            {
            	            // InternalMcmodel.g:10879:11: ( (lv_castDefined_41_0= 'cast' ) )
            	            // InternalMcmodel.g:10880:12: (lv_castDefined_41_0= 'cast' )
            	            {
            	            // InternalMcmodel.g:10880:12: (lv_castDefined_41_0= 'cast' )
            	            // InternalMcmodel.g:10881:13: lv_castDefined_41_0= 'cast'
            	            {
            	            lv_castDefined_41_0=(Token)match(input,64,FOLLOW_40); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              													newLeafNode(lv_castDefined_41_0, grammarAccess.getOverridePredicate_8Access().getCastDefinedCastKeyword_1_3_1_1_0_0());
            	              												
            	            }
            	            if ( state.backtracking==0 ) {

            	              													if (current==null) {
            	              														current = createModelElement(grammarAccess.getOverridePredicate_8Rule());
            	              													}
            	              													setWithLastConsumed(current, "castDefined", true, "cast");
            	              												
            	            }

            	            }


            	            }

            	            // InternalMcmodel.g:10893:11: ( (otherlv_42= '!=' ( ( (lv_cast_43_0= 'false' ) ) | otherlv_44= 'true' ) ) | ( (otherlv_45= '=' | otherlv_46= '==' ) ( ( (lv_cast_47_0= 'true' ) ) | otherlv_48= 'false' ) ) )
            	            int alt335=2;
            	            int LA335_0 = input.LA(1);

            	            if ( (LA335_0==62) ) {
            	                alt335=1;
            	            }
            	            else if ( (LA335_0==18||LA335_0==58) ) {
            	                alt335=2;
            	            }
            	            else {
            	                if (state.backtracking>0) {state.failed=true; return current;}
            	                NoViableAltException nvae =
            	                    new NoViableAltException("", 335, 0, input);

            	                throw nvae;
            	            }
            	            switch (alt335) {
            	                case 1 :
            	                    // InternalMcmodel.g:10894:12: (otherlv_42= '!=' ( ( (lv_cast_43_0= 'false' ) ) | otherlv_44= 'true' ) )
            	                    {
            	                    // InternalMcmodel.g:10894:12: (otherlv_42= '!=' ( ( (lv_cast_43_0= 'false' ) ) | otherlv_44= 'true' ) )
            	                    // InternalMcmodel.g:10895:13: otherlv_42= '!=' ( ( (lv_cast_43_0= 'false' ) ) | otherlv_44= 'true' )
            	                    {
            	                    otherlv_42=(Token)match(input,62,FOLLOW_7); if (state.failed) return current;
            	                    if ( state.backtracking==0 ) {

            	                      													newLeafNode(otherlv_42, grammarAccess.getOverridePredicate_8Access().getExclamationMarkEqualsSignKeyword_1_3_1_1_1_0_0());
            	                      												
            	                    }
            	                    // InternalMcmodel.g:10899:13: ( ( (lv_cast_43_0= 'false' ) ) | otherlv_44= 'true' )
            	                    int alt332=2;
            	                    int LA332_0 = input.LA(1);

            	                    if ( (LA332_0==21) ) {
            	                        alt332=1;
            	                    }
            	                    else if ( (LA332_0==20) ) {
            	                        alt332=2;
            	                    }
            	                    else {
            	                        if (state.backtracking>0) {state.failed=true; return current;}
            	                        NoViableAltException nvae =
            	                            new NoViableAltException("", 332, 0, input);

            	                        throw nvae;
            	                    }
            	                    switch (alt332) {
            	                        case 1 :
            	                            // InternalMcmodel.g:10900:14: ( (lv_cast_43_0= 'false' ) )
            	                            {
            	                            // InternalMcmodel.g:10900:14: ( (lv_cast_43_0= 'false' ) )
            	                            // InternalMcmodel.g:10901:15: (lv_cast_43_0= 'false' )
            	                            {
            	                            // InternalMcmodel.g:10901:15: (lv_cast_43_0= 'false' )
            	                            // InternalMcmodel.g:10902:16: lv_cast_43_0= 'false'
            	                            {
            	                            lv_cast_43_0=(Token)match(input,21,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              																newLeafNode(lv_cast_43_0, grammarAccess.getOverridePredicate_8Access().getCastFalseKeyword_1_3_1_1_1_0_1_0_0());
            	                              															
            	                            }
            	                            if ( state.backtracking==0 ) {

            	                              																if (current==null) {
            	                              																	current = createModelElement(grammarAccess.getOverridePredicate_8Rule());
            	                              																}
            	                              																setWithLastConsumed(current, "cast", true, "false");
            	                              															
            	                            }

            	                            }


            	                            }


            	                            }
            	                            break;
            	                        case 2 :
            	                            // InternalMcmodel.g:10915:14: otherlv_44= 'true'
            	                            {
            	                            otherlv_44=(Token)match(input,20,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_44, grammarAccess.getOverridePredicate_8Access().getTrueKeyword_1_3_1_1_1_0_1_1());
            	                              													
            	                            }

            	                            }
            	                            break;

            	                    }


            	                    }


            	                    }
            	                    break;
            	                case 2 :
            	                    // InternalMcmodel.g:10922:12: ( (otherlv_45= '=' | otherlv_46= '==' ) ( ( (lv_cast_47_0= 'true' ) ) | otherlv_48= 'false' ) )
            	                    {
            	                    // InternalMcmodel.g:10922:12: ( (otherlv_45= '=' | otherlv_46= '==' ) ( ( (lv_cast_47_0= 'true' ) ) | otherlv_48= 'false' ) )
            	                    // InternalMcmodel.g:10923:13: (otherlv_45= '=' | otherlv_46= '==' ) ( ( (lv_cast_47_0= 'true' ) ) | otherlv_48= 'false' )
            	                    {
            	                    // InternalMcmodel.g:10923:13: (otherlv_45= '=' | otherlv_46= '==' )
            	                    int alt333=2;
            	                    int LA333_0 = input.LA(1);

            	                    if ( (LA333_0==18) ) {
            	                        alt333=1;
            	                    }
            	                    else if ( (LA333_0==58) ) {
            	                        alt333=2;
            	                    }
            	                    else {
            	                        if (state.backtracking>0) {state.failed=true; return current;}
            	                        NoViableAltException nvae =
            	                            new NoViableAltException("", 333, 0, input);

            	                        throw nvae;
            	                    }
            	                    switch (alt333) {
            	                        case 1 :
            	                            // InternalMcmodel.g:10924:14: otherlv_45= '='
            	                            {
            	                            otherlv_45=(Token)match(input,18,FOLLOW_7); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_45, grammarAccess.getOverridePredicate_8Access().getEqualsSignKeyword_1_3_1_1_1_1_0_0());
            	                              													
            	                            }

            	                            }
            	                            break;
            	                        case 2 :
            	                            // InternalMcmodel.g:10929:14: otherlv_46= '=='
            	                            {
            	                            otherlv_46=(Token)match(input,58,FOLLOW_7); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_46, grammarAccess.getOverridePredicate_8Access().getEqualsSignEqualsSignKeyword_1_3_1_1_1_1_0_1());
            	                              													
            	                            }

            	                            }
            	                            break;

            	                    }

            	                    // InternalMcmodel.g:10934:13: ( ( (lv_cast_47_0= 'true' ) ) | otherlv_48= 'false' )
            	                    int alt334=2;
            	                    int LA334_0 = input.LA(1);

            	                    if ( (LA334_0==20) ) {
            	                        alt334=1;
            	                    }
            	                    else if ( (LA334_0==21) ) {
            	                        alt334=2;
            	                    }
            	                    else {
            	                        if (state.backtracking>0) {state.failed=true; return current;}
            	                        NoViableAltException nvae =
            	                            new NoViableAltException("", 334, 0, input);

            	                        throw nvae;
            	                    }
            	                    switch (alt334) {
            	                        case 1 :
            	                            // InternalMcmodel.g:10935:14: ( (lv_cast_47_0= 'true' ) )
            	                            {
            	                            // InternalMcmodel.g:10935:14: ( (lv_cast_47_0= 'true' ) )
            	                            // InternalMcmodel.g:10936:15: (lv_cast_47_0= 'true' )
            	                            {
            	                            // InternalMcmodel.g:10936:15: (lv_cast_47_0= 'true' )
            	                            // InternalMcmodel.g:10937:16: lv_cast_47_0= 'true'
            	                            {
            	                            lv_cast_47_0=(Token)match(input,20,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              																newLeafNode(lv_cast_47_0, grammarAccess.getOverridePredicate_8Access().getCastTrueKeyword_1_3_1_1_1_1_1_0_0());
            	                              															
            	                            }
            	                            if ( state.backtracking==0 ) {

            	                              																if (current==null) {
            	                              																	current = createModelElement(grammarAccess.getOverridePredicate_8Rule());
            	                              																}
            	                              																setWithLastConsumed(current, "cast", true, "true");
            	                              															
            	                            }

            	                            }


            	                            }


            	                            }
            	                            break;
            	                        case 2 :
            	                            // InternalMcmodel.g:10950:14: otherlv_48= 'false'
            	                            {
            	                            otherlv_48=(Token)match(input,21,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_48, grammarAccess.getOverridePredicate_8Access().getFalseKeyword_1_3_1_1_1_1_1_1());
            	                              													
            	                            }

            	                            }
            	                            break;

            	                    }


            	                    }


            	                    }
            	                    break;

            	            }


            	            }


            	            }
            	            break;

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getOverridePredicate_8Access().getUnorderedGroup_1());

            	    }


            	    }


            	    }
            	    break;
            	case 5 :
            	    // InternalMcmodel.g:10965:4: ({...}? => ( ({...}? => (otherlv_49= '&' ( (lv_cooldownDefined_50_0= 'cooldown' ) ) (otherlv_51= '=' | otherlv_52= '==' ) ( (lv_cooldown_53_0= RULE_PERCENTAGE ) ) ) ) ) )
            	    {
            	    // InternalMcmodel.g:10965:4: ({...}? => ( ({...}? => (otherlv_49= '&' ( (lv_cooldownDefined_50_0= 'cooldown' ) ) (otherlv_51= '=' | otherlv_52= '==' ) ( (lv_cooldown_53_0= RULE_PERCENTAGE ) ) ) ) ) )
            	    // InternalMcmodel.g:10966:5: {...}? => ( ({...}? => (otherlv_49= '&' ( (lv_cooldownDefined_50_0= 'cooldown' ) ) (otherlv_51= '=' | otherlv_52= '==' ) ( (lv_cooldown_53_0= RULE_PERCENTAGE ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_8Access().getUnorderedGroup_1(), 4) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_8", "getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_8Access().getUnorderedGroup_1(), 4)");
            	    }
            	    // InternalMcmodel.g:10966:116: ( ({...}? => (otherlv_49= '&' ( (lv_cooldownDefined_50_0= 'cooldown' ) ) (otherlv_51= '=' | otherlv_52= '==' ) ( (lv_cooldown_53_0= RULE_PERCENTAGE ) ) ) ) )
            	    // InternalMcmodel.g:10967:6: ({...}? => (otherlv_49= '&' ( (lv_cooldownDefined_50_0= 'cooldown' ) ) (otherlv_51= '=' | otherlv_52= '==' ) ( (lv_cooldown_53_0= RULE_PERCENTAGE ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getOverridePredicate_8Access().getUnorderedGroup_1(), 4);
            	    // InternalMcmodel.g:10970:9: ({...}? => (otherlv_49= '&' ( (lv_cooldownDefined_50_0= 'cooldown' ) ) (otherlv_51= '=' | otherlv_52= '==' ) ( (lv_cooldown_53_0= RULE_PERCENTAGE ) ) ) )
            	    // InternalMcmodel.g:10970:10: {...}? => (otherlv_49= '&' ( (lv_cooldownDefined_50_0= 'cooldown' ) ) (otherlv_51= '=' | otherlv_52= '==' ) ( (lv_cooldown_53_0= RULE_PERCENTAGE ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_8", "true");
            	    }
            	    // InternalMcmodel.g:10970:19: (otherlv_49= '&' ( (lv_cooldownDefined_50_0= 'cooldown' ) ) (otherlv_51= '=' | otherlv_52= '==' ) ( (lv_cooldown_53_0= RULE_PERCENTAGE ) ) )
            	    // InternalMcmodel.g:10970:20: otherlv_49= '&' ( (lv_cooldownDefined_50_0= 'cooldown' ) ) (otherlv_51= '=' | otherlv_52= '==' ) ( (lv_cooldown_53_0= RULE_PERCENTAGE ) )
            	    {
            	    otherlv_49=(Token)match(input,59,FOLLOW_45); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_49, grammarAccess.getOverridePredicate_8Access().getAmpersandKeyword_1_4_0());
            	      								
            	    }
            	    // InternalMcmodel.g:10974:9: ( (lv_cooldownDefined_50_0= 'cooldown' ) )
            	    // InternalMcmodel.g:10975:10: (lv_cooldownDefined_50_0= 'cooldown' )
            	    {
            	    // InternalMcmodel.g:10975:10: (lv_cooldownDefined_50_0= 'cooldown' )
            	    // InternalMcmodel.g:10976:11: lv_cooldownDefined_50_0= 'cooldown'
            	    {
            	    lv_cooldownDefined_50_0=(Token)match(input,65,FOLLOW_35); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											newLeafNode(lv_cooldownDefined_50_0, grammarAccess.getOverridePredicate_8Access().getCooldownDefinedCooldownKeyword_1_4_1_0());
            	      										
            	    }
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElement(grammarAccess.getOverridePredicate_8Rule());
            	      											}
            	      											setWithLastConsumed(current, "cooldownDefined", true, "cooldown");
            	      										
            	    }

            	    }


            	    }

            	    // InternalMcmodel.g:10988:9: (otherlv_51= '=' | otherlv_52= '==' )
            	    int alt337=2;
            	    int LA337_0 = input.LA(1);

            	    if ( (LA337_0==18) ) {
            	        alt337=1;
            	    }
            	    else if ( (LA337_0==58) ) {
            	        alt337=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 337, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt337) {
            	        case 1 :
            	            // InternalMcmodel.g:10989:10: otherlv_51= '='
            	            {
            	            otherlv_51=(Token)match(input,18,FOLLOW_36); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(otherlv_51, grammarAccess.getOverridePredicate_8Access().getEqualsSignKeyword_1_4_2_0());
            	              									
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalMcmodel.g:10994:10: otherlv_52= '=='
            	            {
            	            otherlv_52=(Token)match(input,58,FOLLOW_36); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(otherlv_52, grammarAccess.getOverridePredicate_8Access().getEqualsSignEqualsSignKeyword_1_4_2_1());
            	              									
            	            }

            	            }
            	            break;

            	    }

            	    // InternalMcmodel.g:10999:9: ( (lv_cooldown_53_0= RULE_PERCENTAGE ) )
            	    // InternalMcmodel.g:11000:10: (lv_cooldown_53_0= RULE_PERCENTAGE )
            	    {
            	    // InternalMcmodel.g:11000:10: (lv_cooldown_53_0= RULE_PERCENTAGE )
            	    // InternalMcmodel.g:11001:11: lv_cooldown_53_0= RULE_PERCENTAGE
            	    {
            	    lv_cooldown_53_0=(Token)match(input,RULE_PERCENTAGE,FOLLOW_37); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											newLeafNode(lv_cooldown_53_0, grammarAccess.getOverridePredicate_8Access().getCooldownPERCENTAGETerminalRuleCall_1_4_3_0());
            	      										
            	    }
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElement(grammarAccess.getOverridePredicate_8Rule());
            	      											}
            	      											setWithLastConsumed(
            	      												current,
            	      												"cooldown",
            	      												lv_cooldown_53_0,
            	      												"com.raptor.mcmodel.Mcmodel.PERCENTAGE");
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getOverridePredicate_8Access().getUnorderedGroup_1());

            	    }


            	    }


            	    }
            	    break;
            	case 6 :
            	    // InternalMcmodel.g:11023:4: ({...}? => ( ({...}? => (otherlv_54= '&' ( (lv_damageDefined_55_0= 'damage' ) ) (otherlv_56= '=' | otherlv_57= '==' ) ( (lv_damage_58_0= RULE_PERCENTAGE ) ) ) ) ) )
            	    {
            	    // InternalMcmodel.g:11023:4: ({...}? => ( ({...}? => (otherlv_54= '&' ( (lv_damageDefined_55_0= 'damage' ) ) (otherlv_56= '=' | otherlv_57= '==' ) ( (lv_damage_58_0= RULE_PERCENTAGE ) ) ) ) ) )
            	    // InternalMcmodel.g:11024:5: {...}? => ( ({...}? => (otherlv_54= '&' ( (lv_damageDefined_55_0= 'damage' ) ) (otherlv_56= '=' | otherlv_57= '==' ) ( (lv_damage_58_0= RULE_PERCENTAGE ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_8Access().getUnorderedGroup_1(), 5) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_8", "getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_8Access().getUnorderedGroup_1(), 5)");
            	    }
            	    // InternalMcmodel.g:11024:116: ( ({...}? => (otherlv_54= '&' ( (lv_damageDefined_55_0= 'damage' ) ) (otherlv_56= '=' | otherlv_57= '==' ) ( (lv_damage_58_0= RULE_PERCENTAGE ) ) ) ) )
            	    // InternalMcmodel.g:11025:6: ({...}? => (otherlv_54= '&' ( (lv_damageDefined_55_0= 'damage' ) ) (otherlv_56= '=' | otherlv_57= '==' ) ( (lv_damage_58_0= RULE_PERCENTAGE ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getOverridePredicate_8Access().getUnorderedGroup_1(), 5);
            	    // InternalMcmodel.g:11028:9: ({...}? => (otherlv_54= '&' ( (lv_damageDefined_55_0= 'damage' ) ) (otherlv_56= '=' | otherlv_57= '==' ) ( (lv_damage_58_0= RULE_PERCENTAGE ) ) ) )
            	    // InternalMcmodel.g:11028:10: {...}? => (otherlv_54= '&' ( (lv_damageDefined_55_0= 'damage' ) ) (otherlv_56= '=' | otherlv_57= '==' ) ( (lv_damage_58_0= RULE_PERCENTAGE ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_8", "true");
            	    }
            	    // InternalMcmodel.g:11028:19: (otherlv_54= '&' ( (lv_damageDefined_55_0= 'damage' ) ) (otherlv_56= '=' | otherlv_57= '==' ) ( (lv_damage_58_0= RULE_PERCENTAGE ) ) )
            	    // InternalMcmodel.g:11028:20: otherlv_54= '&' ( (lv_damageDefined_55_0= 'damage' ) ) (otherlv_56= '=' | otherlv_57= '==' ) ( (lv_damage_58_0= RULE_PERCENTAGE ) )
            	    {
            	    otherlv_54=(Token)match(input,59,FOLLOW_46); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_54, grammarAccess.getOverridePredicate_8Access().getAmpersandKeyword_1_5_0());
            	      								
            	    }
            	    // InternalMcmodel.g:11032:9: ( (lv_damageDefined_55_0= 'damage' ) )
            	    // InternalMcmodel.g:11033:10: (lv_damageDefined_55_0= 'damage' )
            	    {
            	    // InternalMcmodel.g:11033:10: (lv_damageDefined_55_0= 'damage' )
            	    // InternalMcmodel.g:11034:11: lv_damageDefined_55_0= 'damage'
            	    {
            	    lv_damageDefined_55_0=(Token)match(input,66,FOLLOW_35); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											newLeafNode(lv_damageDefined_55_0, grammarAccess.getOverridePredicate_8Access().getDamageDefinedDamageKeyword_1_5_1_0());
            	      										
            	    }
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElement(grammarAccess.getOverridePredicate_8Rule());
            	      											}
            	      											setWithLastConsumed(current, "damageDefined", true, "damage");
            	      										
            	    }

            	    }


            	    }

            	    // InternalMcmodel.g:11046:9: (otherlv_56= '=' | otherlv_57= '==' )
            	    int alt338=2;
            	    int LA338_0 = input.LA(1);

            	    if ( (LA338_0==18) ) {
            	        alt338=1;
            	    }
            	    else if ( (LA338_0==58) ) {
            	        alt338=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 338, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt338) {
            	        case 1 :
            	            // InternalMcmodel.g:11047:10: otherlv_56= '='
            	            {
            	            otherlv_56=(Token)match(input,18,FOLLOW_36); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(otherlv_56, grammarAccess.getOverridePredicate_8Access().getEqualsSignKeyword_1_5_2_0());
            	              									
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalMcmodel.g:11052:10: otherlv_57= '=='
            	            {
            	            otherlv_57=(Token)match(input,58,FOLLOW_36); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(otherlv_57, grammarAccess.getOverridePredicate_8Access().getEqualsSignEqualsSignKeyword_1_5_2_1());
            	              									
            	            }

            	            }
            	            break;

            	    }

            	    // InternalMcmodel.g:11057:9: ( (lv_damage_58_0= RULE_PERCENTAGE ) )
            	    // InternalMcmodel.g:11058:10: (lv_damage_58_0= RULE_PERCENTAGE )
            	    {
            	    // InternalMcmodel.g:11058:10: (lv_damage_58_0= RULE_PERCENTAGE )
            	    // InternalMcmodel.g:11059:11: lv_damage_58_0= RULE_PERCENTAGE
            	    {
            	    lv_damage_58_0=(Token)match(input,RULE_PERCENTAGE,FOLLOW_37); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											newLeafNode(lv_damage_58_0, grammarAccess.getOverridePredicate_8Access().getDamagePERCENTAGETerminalRuleCall_1_5_3_0());
            	      										
            	    }
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElement(grammarAccess.getOverridePredicate_8Rule());
            	      											}
            	      											setWithLastConsumed(
            	      												current,
            	      												"damage",
            	      												lv_damage_58_0,
            	      												"com.raptor.mcmodel.Mcmodel.PERCENTAGE");
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getOverridePredicate_8Access().getUnorderedGroup_1());

            	    }


            	    }


            	    }
            	    break;
            	case 7 :
            	    // InternalMcmodel.g:11081:4: ({...}? => ( ({...}? => (otherlv_59= '&' ( ( ( (lv_damagedDefined_60_0= '!' ) ) otherlv_61= 'damaged' ) | ( ( (lv_damagedDefined_62_0= 'damaged' ) ) ( (otherlv_63= '!=' ( ( (lv_damaged_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_damaged_68_0= 'true' ) ) | otherlv_69= 'false' ) ) ) ) ) ) ) ) )
            	    {
            	    // InternalMcmodel.g:11081:4: ({...}? => ( ({...}? => (otherlv_59= '&' ( ( ( (lv_damagedDefined_60_0= '!' ) ) otherlv_61= 'damaged' ) | ( ( (lv_damagedDefined_62_0= 'damaged' ) ) ( (otherlv_63= '!=' ( ( (lv_damaged_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_damaged_68_0= 'true' ) ) | otherlv_69= 'false' ) ) ) ) ) ) ) ) )
            	    // InternalMcmodel.g:11082:5: {...}? => ( ({...}? => (otherlv_59= '&' ( ( ( (lv_damagedDefined_60_0= '!' ) ) otherlv_61= 'damaged' ) | ( ( (lv_damagedDefined_62_0= 'damaged' ) ) ( (otherlv_63= '!=' ( ( (lv_damaged_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_damaged_68_0= 'true' ) ) | otherlv_69= 'false' ) ) ) ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_8Access().getUnorderedGroup_1(), 6) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_8", "getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_8Access().getUnorderedGroup_1(), 6)");
            	    }
            	    // InternalMcmodel.g:11082:116: ( ({...}? => (otherlv_59= '&' ( ( ( (lv_damagedDefined_60_0= '!' ) ) otherlv_61= 'damaged' ) | ( ( (lv_damagedDefined_62_0= 'damaged' ) ) ( (otherlv_63= '!=' ( ( (lv_damaged_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_damaged_68_0= 'true' ) ) | otherlv_69= 'false' ) ) ) ) ) ) ) )
            	    // InternalMcmodel.g:11083:6: ({...}? => (otherlv_59= '&' ( ( ( (lv_damagedDefined_60_0= '!' ) ) otherlv_61= 'damaged' ) | ( ( (lv_damagedDefined_62_0= 'damaged' ) ) ( (otherlv_63= '!=' ( ( (lv_damaged_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_damaged_68_0= 'true' ) ) | otherlv_69= 'false' ) ) ) ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getOverridePredicate_8Access().getUnorderedGroup_1(), 6);
            	    // InternalMcmodel.g:11086:9: ({...}? => (otherlv_59= '&' ( ( ( (lv_damagedDefined_60_0= '!' ) ) otherlv_61= 'damaged' ) | ( ( (lv_damagedDefined_62_0= 'damaged' ) ) ( (otherlv_63= '!=' ( ( (lv_damaged_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_damaged_68_0= 'true' ) ) | otherlv_69= 'false' ) ) ) ) ) ) )
            	    // InternalMcmodel.g:11086:10: {...}? => (otherlv_59= '&' ( ( ( (lv_damagedDefined_60_0= '!' ) ) otherlv_61= 'damaged' ) | ( ( (lv_damagedDefined_62_0= 'damaged' ) ) ( (otherlv_63= '!=' ( ( (lv_damaged_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_damaged_68_0= 'true' ) ) | otherlv_69= 'false' ) ) ) ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_8", "true");
            	    }
            	    // InternalMcmodel.g:11086:19: (otherlv_59= '&' ( ( ( (lv_damagedDefined_60_0= '!' ) ) otherlv_61= 'damaged' ) | ( ( (lv_damagedDefined_62_0= 'damaged' ) ) ( (otherlv_63= '!=' ( ( (lv_damaged_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_damaged_68_0= 'true' ) ) | otherlv_69= 'false' ) ) ) ) ) )
            	    // InternalMcmodel.g:11086:20: otherlv_59= '&' ( ( ( (lv_damagedDefined_60_0= '!' ) ) otherlv_61= 'damaged' ) | ( ( (lv_damagedDefined_62_0= 'damaged' ) ) ( (otherlv_63= '!=' ( ( (lv_damaged_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_damaged_68_0= 'true' ) ) | otherlv_69= 'false' ) ) ) ) )
            	    {
            	    otherlv_59=(Token)match(input,59,FOLLOW_47); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_59, grammarAccess.getOverridePredicate_8Access().getAmpersandKeyword_1_6_0());
            	      								
            	    }
            	    // InternalMcmodel.g:11090:9: ( ( ( (lv_damagedDefined_60_0= '!' ) ) otherlv_61= 'damaged' ) | ( ( (lv_damagedDefined_62_0= 'damaged' ) ) ( (otherlv_63= '!=' ( ( (lv_damaged_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_damaged_68_0= 'true' ) ) | otherlv_69= 'false' ) ) ) ) )
            	    int alt343=2;
            	    int LA343_0 = input.LA(1);

            	    if ( (LA343_0==60) ) {
            	        alt343=1;
            	    }
            	    else if ( (LA343_0==67) ) {
            	        alt343=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 343, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt343) {
            	        case 1 :
            	            // InternalMcmodel.g:11091:10: ( ( (lv_damagedDefined_60_0= '!' ) ) otherlv_61= 'damaged' )
            	            {
            	            // InternalMcmodel.g:11091:10: ( ( (lv_damagedDefined_60_0= '!' ) ) otherlv_61= 'damaged' )
            	            // InternalMcmodel.g:11092:11: ( (lv_damagedDefined_60_0= '!' ) ) otherlv_61= 'damaged'
            	            {
            	            // InternalMcmodel.g:11092:11: ( (lv_damagedDefined_60_0= '!' ) )
            	            // InternalMcmodel.g:11093:12: (lv_damagedDefined_60_0= '!' )
            	            {
            	            // InternalMcmodel.g:11093:12: (lv_damagedDefined_60_0= '!' )
            	            // InternalMcmodel.g:11094:13: lv_damagedDefined_60_0= '!'
            	            {
            	            lv_damagedDefined_60_0=(Token)match(input,60,FOLLOW_48); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              													newLeafNode(lv_damagedDefined_60_0, grammarAccess.getOverridePredicate_8Access().getDamagedDefinedExclamationMarkKeyword_1_6_1_0_0_0());
            	              												
            	            }
            	            if ( state.backtracking==0 ) {

            	              													if (current==null) {
            	              														current = createModelElement(grammarAccess.getOverridePredicate_8Rule());
            	              													}
            	              													setWithLastConsumed(current, "damagedDefined", true, "!");
            	              												
            	            }

            	            }


            	            }

            	            otherlv_61=(Token)match(input,67,FOLLOW_37); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              											newLeafNode(otherlv_61, grammarAccess.getOverridePredicate_8Access().getDamagedKeyword_1_6_1_0_1());
            	              										
            	            }

            	            }


            	            }
            	            break;
            	        case 2 :
            	            // InternalMcmodel.g:11112:10: ( ( (lv_damagedDefined_62_0= 'damaged' ) ) ( (otherlv_63= '!=' ( ( (lv_damaged_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_damaged_68_0= 'true' ) ) | otherlv_69= 'false' ) ) ) )
            	            {
            	            // InternalMcmodel.g:11112:10: ( ( (lv_damagedDefined_62_0= 'damaged' ) ) ( (otherlv_63= '!=' ( ( (lv_damaged_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_damaged_68_0= 'true' ) ) | otherlv_69= 'false' ) ) ) )
            	            // InternalMcmodel.g:11113:11: ( (lv_damagedDefined_62_0= 'damaged' ) ) ( (otherlv_63= '!=' ( ( (lv_damaged_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_damaged_68_0= 'true' ) ) | otherlv_69= 'false' ) ) )
            	            {
            	            // InternalMcmodel.g:11113:11: ( (lv_damagedDefined_62_0= 'damaged' ) )
            	            // InternalMcmodel.g:11114:12: (lv_damagedDefined_62_0= 'damaged' )
            	            {
            	            // InternalMcmodel.g:11114:12: (lv_damagedDefined_62_0= 'damaged' )
            	            // InternalMcmodel.g:11115:13: lv_damagedDefined_62_0= 'damaged'
            	            {
            	            lv_damagedDefined_62_0=(Token)match(input,67,FOLLOW_40); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              													newLeafNode(lv_damagedDefined_62_0, grammarAccess.getOverridePredicate_8Access().getDamagedDefinedDamagedKeyword_1_6_1_1_0_0());
            	              												
            	            }
            	            if ( state.backtracking==0 ) {

            	              													if (current==null) {
            	              														current = createModelElement(grammarAccess.getOverridePredicate_8Rule());
            	              													}
            	              													setWithLastConsumed(current, "damagedDefined", true, "damaged");
            	              												
            	            }

            	            }


            	            }

            	            // InternalMcmodel.g:11127:11: ( (otherlv_63= '!=' ( ( (lv_damaged_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_damaged_68_0= 'true' ) ) | otherlv_69= 'false' ) ) )
            	            int alt342=2;
            	            int LA342_0 = input.LA(1);

            	            if ( (LA342_0==62) ) {
            	                alt342=1;
            	            }
            	            else if ( (LA342_0==18||LA342_0==58) ) {
            	                alt342=2;
            	            }
            	            else {
            	                if (state.backtracking>0) {state.failed=true; return current;}
            	                NoViableAltException nvae =
            	                    new NoViableAltException("", 342, 0, input);

            	                throw nvae;
            	            }
            	            switch (alt342) {
            	                case 1 :
            	                    // InternalMcmodel.g:11128:12: (otherlv_63= '!=' ( ( (lv_damaged_64_0= 'false' ) ) | otherlv_65= 'true' ) )
            	                    {
            	                    // InternalMcmodel.g:11128:12: (otherlv_63= '!=' ( ( (lv_damaged_64_0= 'false' ) ) | otherlv_65= 'true' ) )
            	                    // InternalMcmodel.g:11129:13: otherlv_63= '!=' ( ( (lv_damaged_64_0= 'false' ) ) | otherlv_65= 'true' )
            	                    {
            	                    otherlv_63=(Token)match(input,62,FOLLOW_7); if (state.failed) return current;
            	                    if ( state.backtracking==0 ) {

            	                      													newLeafNode(otherlv_63, grammarAccess.getOverridePredicate_8Access().getExclamationMarkEqualsSignKeyword_1_6_1_1_1_0_0());
            	                      												
            	                    }
            	                    // InternalMcmodel.g:11133:13: ( ( (lv_damaged_64_0= 'false' ) ) | otherlv_65= 'true' )
            	                    int alt339=2;
            	                    int LA339_0 = input.LA(1);

            	                    if ( (LA339_0==21) ) {
            	                        alt339=1;
            	                    }
            	                    else if ( (LA339_0==20) ) {
            	                        alt339=2;
            	                    }
            	                    else {
            	                        if (state.backtracking>0) {state.failed=true; return current;}
            	                        NoViableAltException nvae =
            	                            new NoViableAltException("", 339, 0, input);

            	                        throw nvae;
            	                    }
            	                    switch (alt339) {
            	                        case 1 :
            	                            // InternalMcmodel.g:11134:14: ( (lv_damaged_64_0= 'false' ) )
            	                            {
            	                            // InternalMcmodel.g:11134:14: ( (lv_damaged_64_0= 'false' ) )
            	                            // InternalMcmodel.g:11135:15: (lv_damaged_64_0= 'false' )
            	                            {
            	                            // InternalMcmodel.g:11135:15: (lv_damaged_64_0= 'false' )
            	                            // InternalMcmodel.g:11136:16: lv_damaged_64_0= 'false'
            	                            {
            	                            lv_damaged_64_0=(Token)match(input,21,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              																newLeafNode(lv_damaged_64_0, grammarAccess.getOverridePredicate_8Access().getDamagedFalseKeyword_1_6_1_1_1_0_1_0_0());
            	                              															
            	                            }
            	                            if ( state.backtracking==0 ) {

            	                              																if (current==null) {
            	                              																	current = createModelElement(grammarAccess.getOverridePredicate_8Rule());
            	                              																}
            	                              																setWithLastConsumed(current, "damaged", true, "false");
            	                              															
            	                            }

            	                            }


            	                            }


            	                            }
            	                            break;
            	                        case 2 :
            	                            // InternalMcmodel.g:11149:14: otherlv_65= 'true'
            	                            {
            	                            otherlv_65=(Token)match(input,20,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_65, grammarAccess.getOverridePredicate_8Access().getTrueKeyword_1_6_1_1_1_0_1_1());
            	                              													
            	                            }

            	                            }
            	                            break;

            	                    }


            	                    }


            	                    }
            	                    break;
            	                case 2 :
            	                    // InternalMcmodel.g:11156:12: ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_damaged_68_0= 'true' ) ) | otherlv_69= 'false' ) )
            	                    {
            	                    // InternalMcmodel.g:11156:12: ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_damaged_68_0= 'true' ) ) | otherlv_69= 'false' ) )
            	                    // InternalMcmodel.g:11157:13: (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_damaged_68_0= 'true' ) ) | otherlv_69= 'false' )
            	                    {
            	                    // InternalMcmodel.g:11157:13: (otherlv_66= '=' | otherlv_67= '==' )
            	                    int alt340=2;
            	                    int LA340_0 = input.LA(1);

            	                    if ( (LA340_0==18) ) {
            	                        alt340=1;
            	                    }
            	                    else if ( (LA340_0==58) ) {
            	                        alt340=2;
            	                    }
            	                    else {
            	                        if (state.backtracking>0) {state.failed=true; return current;}
            	                        NoViableAltException nvae =
            	                            new NoViableAltException("", 340, 0, input);

            	                        throw nvae;
            	                    }
            	                    switch (alt340) {
            	                        case 1 :
            	                            // InternalMcmodel.g:11158:14: otherlv_66= '='
            	                            {
            	                            otherlv_66=(Token)match(input,18,FOLLOW_7); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_66, grammarAccess.getOverridePredicate_8Access().getEqualsSignKeyword_1_6_1_1_1_1_0_0());
            	                              													
            	                            }

            	                            }
            	                            break;
            	                        case 2 :
            	                            // InternalMcmodel.g:11163:14: otherlv_67= '=='
            	                            {
            	                            otherlv_67=(Token)match(input,58,FOLLOW_7); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_67, grammarAccess.getOverridePredicate_8Access().getEqualsSignEqualsSignKeyword_1_6_1_1_1_1_0_1());
            	                              													
            	                            }

            	                            }
            	                            break;

            	                    }

            	                    // InternalMcmodel.g:11168:13: ( ( (lv_damaged_68_0= 'true' ) ) | otherlv_69= 'false' )
            	                    int alt341=2;
            	                    int LA341_0 = input.LA(1);

            	                    if ( (LA341_0==20) ) {
            	                        alt341=1;
            	                    }
            	                    else if ( (LA341_0==21) ) {
            	                        alt341=2;
            	                    }
            	                    else {
            	                        if (state.backtracking>0) {state.failed=true; return current;}
            	                        NoViableAltException nvae =
            	                            new NoViableAltException("", 341, 0, input);

            	                        throw nvae;
            	                    }
            	                    switch (alt341) {
            	                        case 1 :
            	                            // InternalMcmodel.g:11169:14: ( (lv_damaged_68_0= 'true' ) )
            	                            {
            	                            // InternalMcmodel.g:11169:14: ( (lv_damaged_68_0= 'true' ) )
            	                            // InternalMcmodel.g:11170:15: (lv_damaged_68_0= 'true' )
            	                            {
            	                            // InternalMcmodel.g:11170:15: (lv_damaged_68_0= 'true' )
            	                            // InternalMcmodel.g:11171:16: lv_damaged_68_0= 'true'
            	                            {
            	                            lv_damaged_68_0=(Token)match(input,20,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              																newLeafNode(lv_damaged_68_0, grammarAccess.getOverridePredicate_8Access().getDamagedTrueKeyword_1_6_1_1_1_1_1_0_0());
            	                              															
            	                            }
            	                            if ( state.backtracking==0 ) {

            	                              																if (current==null) {
            	                              																	current = createModelElement(grammarAccess.getOverridePredicate_8Rule());
            	                              																}
            	                              																setWithLastConsumed(current, "damaged", true, "true");
            	                              															
            	                            }

            	                            }


            	                            }


            	                            }
            	                            break;
            	                        case 2 :
            	                            // InternalMcmodel.g:11184:14: otherlv_69= 'false'
            	                            {
            	                            otherlv_69=(Token)match(input,21,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_69, grammarAccess.getOverridePredicate_8Access().getFalseKeyword_1_6_1_1_1_1_1_1());
            	                              													
            	                            }

            	                            }
            	                            break;

            	                    }


            	                    }


            	                    }
            	                    break;

            	            }


            	            }


            	            }
            	            break;

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getOverridePredicate_8Access().getUnorderedGroup_1());

            	    }


            	    }


            	    }
            	    break;
            	case 8 :
            	    // InternalMcmodel.g:11199:4: ({...}? => ( ({...}? => (otherlv_70= '&' ( (lv_pullDefined_71_0= 'pull' ) ) (otherlv_72= '=' | otherlv_73= '==' ) ( (lv_pull_74_0= RULE_PERCENTAGE ) ) ) ) ) )
            	    {
            	    // InternalMcmodel.g:11199:4: ({...}? => ( ({...}? => (otherlv_70= '&' ( (lv_pullDefined_71_0= 'pull' ) ) (otherlv_72= '=' | otherlv_73= '==' ) ( (lv_pull_74_0= RULE_PERCENTAGE ) ) ) ) ) )
            	    // InternalMcmodel.g:11200:5: {...}? => ( ({...}? => (otherlv_70= '&' ( (lv_pullDefined_71_0= 'pull' ) ) (otherlv_72= '=' | otherlv_73= '==' ) ( (lv_pull_74_0= RULE_PERCENTAGE ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_8Access().getUnorderedGroup_1(), 7) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_8", "getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_8Access().getUnorderedGroup_1(), 7)");
            	    }
            	    // InternalMcmodel.g:11200:116: ( ({...}? => (otherlv_70= '&' ( (lv_pullDefined_71_0= 'pull' ) ) (otherlv_72= '=' | otherlv_73= '==' ) ( (lv_pull_74_0= RULE_PERCENTAGE ) ) ) ) )
            	    // InternalMcmodel.g:11201:6: ({...}? => (otherlv_70= '&' ( (lv_pullDefined_71_0= 'pull' ) ) (otherlv_72= '=' | otherlv_73= '==' ) ( (lv_pull_74_0= RULE_PERCENTAGE ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getOverridePredicate_8Access().getUnorderedGroup_1(), 7);
            	    // InternalMcmodel.g:11204:9: ({...}? => (otherlv_70= '&' ( (lv_pullDefined_71_0= 'pull' ) ) (otherlv_72= '=' | otherlv_73= '==' ) ( (lv_pull_74_0= RULE_PERCENTAGE ) ) ) )
            	    // InternalMcmodel.g:11204:10: {...}? => (otherlv_70= '&' ( (lv_pullDefined_71_0= 'pull' ) ) (otherlv_72= '=' | otherlv_73= '==' ) ( (lv_pull_74_0= RULE_PERCENTAGE ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_8", "true");
            	    }
            	    // InternalMcmodel.g:11204:19: (otherlv_70= '&' ( (lv_pullDefined_71_0= 'pull' ) ) (otherlv_72= '=' | otherlv_73= '==' ) ( (lv_pull_74_0= RULE_PERCENTAGE ) ) )
            	    // InternalMcmodel.g:11204:20: otherlv_70= '&' ( (lv_pullDefined_71_0= 'pull' ) ) (otherlv_72= '=' | otherlv_73= '==' ) ( (lv_pull_74_0= RULE_PERCENTAGE ) )
            	    {
            	    otherlv_70=(Token)match(input,59,FOLLOW_51); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_70, grammarAccess.getOverridePredicate_8Access().getAmpersandKeyword_1_7_0());
            	      								
            	    }
            	    // InternalMcmodel.g:11208:9: ( (lv_pullDefined_71_0= 'pull' ) )
            	    // InternalMcmodel.g:11209:10: (lv_pullDefined_71_0= 'pull' )
            	    {
            	    // InternalMcmodel.g:11209:10: (lv_pullDefined_71_0= 'pull' )
            	    // InternalMcmodel.g:11210:11: lv_pullDefined_71_0= 'pull'
            	    {
            	    lv_pullDefined_71_0=(Token)match(input,69,FOLLOW_35); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											newLeafNode(lv_pullDefined_71_0, grammarAccess.getOverridePredicate_8Access().getPullDefinedPullKeyword_1_7_1_0());
            	      										
            	    }
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElement(grammarAccess.getOverridePredicate_8Rule());
            	      											}
            	      											setWithLastConsumed(current, "pullDefined", true, "pull");
            	      										
            	    }

            	    }


            	    }

            	    // InternalMcmodel.g:11222:9: (otherlv_72= '=' | otherlv_73= '==' )
            	    int alt344=2;
            	    int LA344_0 = input.LA(1);

            	    if ( (LA344_0==18) ) {
            	        alt344=1;
            	    }
            	    else if ( (LA344_0==58) ) {
            	        alt344=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 344, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt344) {
            	        case 1 :
            	            // InternalMcmodel.g:11223:10: otherlv_72= '='
            	            {
            	            otherlv_72=(Token)match(input,18,FOLLOW_36); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(otherlv_72, grammarAccess.getOverridePredicate_8Access().getEqualsSignKeyword_1_7_2_0());
            	              									
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalMcmodel.g:11228:10: otherlv_73= '=='
            	            {
            	            otherlv_73=(Token)match(input,58,FOLLOW_36); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(otherlv_73, grammarAccess.getOverridePredicate_8Access().getEqualsSignEqualsSignKeyword_1_7_2_1());
            	              									
            	            }

            	            }
            	            break;

            	    }

            	    // InternalMcmodel.g:11233:9: ( (lv_pull_74_0= RULE_PERCENTAGE ) )
            	    // InternalMcmodel.g:11234:10: (lv_pull_74_0= RULE_PERCENTAGE )
            	    {
            	    // InternalMcmodel.g:11234:10: (lv_pull_74_0= RULE_PERCENTAGE )
            	    // InternalMcmodel.g:11235:11: lv_pull_74_0= RULE_PERCENTAGE
            	    {
            	    lv_pull_74_0=(Token)match(input,RULE_PERCENTAGE,FOLLOW_37); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											newLeafNode(lv_pull_74_0, grammarAccess.getOverridePredicate_8Access().getPullPERCENTAGETerminalRuleCall_1_7_3_0());
            	      										
            	    }
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElement(grammarAccess.getOverridePredicate_8Rule());
            	      											}
            	      											setWithLastConsumed(
            	      												current,
            	      												"pull",
            	      												lv_pull_74_0,
            	      												"com.raptor.mcmodel.Mcmodel.PERCENTAGE");
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getOverridePredicate_8Access().getUnorderedGroup_1());

            	    }


            	    }


            	    }
            	    break;
            	case 9 :
            	    // InternalMcmodel.g:11257:4: ({...}? => ( ({...}? => (otherlv_75= '&' ( ( ( (lv_pullingDefined_76_0= '!' ) ) otherlv_77= 'pulling' ) | ( ( (lv_pullingDefined_78_0= 'pulling' ) ) ( (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) ) | ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) ) ) ) ) ) ) ) )
            	    {
            	    // InternalMcmodel.g:11257:4: ({...}? => ( ({...}? => (otherlv_75= '&' ( ( ( (lv_pullingDefined_76_0= '!' ) ) otherlv_77= 'pulling' ) | ( ( (lv_pullingDefined_78_0= 'pulling' ) ) ( (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) ) | ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) ) ) ) ) ) ) ) )
            	    // InternalMcmodel.g:11258:5: {...}? => ( ({...}? => (otherlv_75= '&' ( ( ( (lv_pullingDefined_76_0= '!' ) ) otherlv_77= 'pulling' ) | ( ( (lv_pullingDefined_78_0= 'pulling' ) ) ( (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) ) | ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) ) ) ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_8Access().getUnorderedGroup_1(), 8) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_8", "getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_8Access().getUnorderedGroup_1(), 8)");
            	    }
            	    // InternalMcmodel.g:11258:116: ( ({...}? => (otherlv_75= '&' ( ( ( (lv_pullingDefined_76_0= '!' ) ) otherlv_77= 'pulling' ) | ( ( (lv_pullingDefined_78_0= 'pulling' ) ) ( (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) ) | ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) ) ) ) ) ) ) )
            	    // InternalMcmodel.g:11259:6: ({...}? => (otherlv_75= '&' ( ( ( (lv_pullingDefined_76_0= '!' ) ) otherlv_77= 'pulling' ) | ( ( (lv_pullingDefined_78_0= 'pulling' ) ) ( (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) ) | ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) ) ) ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getOverridePredicate_8Access().getUnorderedGroup_1(), 8);
            	    // InternalMcmodel.g:11262:9: ({...}? => (otherlv_75= '&' ( ( ( (lv_pullingDefined_76_0= '!' ) ) otherlv_77= 'pulling' ) | ( ( (lv_pullingDefined_78_0= 'pulling' ) ) ( (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) ) | ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) ) ) ) ) ) )
            	    // InternalMcmodel.g:11262:10: {...}? => (otherlv_75= '&' ( ( ( (lv_pullingDefined_76_0= '!' ) ) otherlv_77= 'pulling' ) | ( ( (lv_pullingDefined_78_0= 'pulling' ) ) ( (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) ) | ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) ) ) ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_8", "true");
            	    }
            	    // InternalMcmodel.g:11262:19: (otherlv_75= '&' ( ( ( (lv_pullingDefined_76_0= '!' ) ) otherlv_77= 'pulling' ) | ( ( (lv_pullingDefined_78_0= 'pulling' ) ) ( (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) ) | ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) ) ) ) ) )
            	    // InternalMcmodel.g:11262:20: otherlv_75= '&' ( ( ( (lv_pullingDefined_76_0= '!' ) ) otherlv_77= 'pulling' ) | ( ( (lv_pullingDefined_78_0= 'pulling' ) ) ( (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) ) | ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) ) ) ) )
            	    {
            	    otherlv_75=(Token)match(input,59,FOLLOW_52); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_75, grammarAccess.getOverridePredicate_8Access().getAmpersandKeyword_1_8_0());
            	      								
            	    }
            	    // InternalMcmodel.g:11266:9: ( ( ( (lv_pullingDefined_76_0= '!' ) ) otherlv_77= 'pulling' ) | ( ( (lv_pullingDefined_78_0= 'pulling' ) ) ( (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) ) | ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) ) ) ) )
            	    int alt349=2;
            	    int LA349_0 = input.LA(1);

            	    if ( (LA349_0==60) ) {
            	        alt349=1;
            	    }
            	    else if ( (LA349_0==70) ) {
            	        alt349=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 349, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt349) {
            	        case 1 :
            	            // InternalMcmodel.g:11267:10: ( ( (lv_pullingDefined_76_0= '!' ) ) otherlv_77= 'pulling' )
            	            {
            	            // InternalMcmodel.g:11267:10: ( ( (lv_pullingDefined_76_0= '!' ) ) otherlv_77= 'pulling' )
            	            // InternalMcmodel.g:11268:11: ( (lv_pullingDefined_76_0= '!' ) ) otherlv_77= 'pulling'
            	            {
            	            // InternalMcmodel.g:11268:11: ( (lv_pullingDefined_76_0= '!' ) )
            	            // InternalMcmodel.g:11269:12: (lv_pullingDefined_76_0= '!' )
            	            {
            	            // InternalMcmodel.g:11269:12: (lv_pullingDefined_76_0= '!' )
            	            // InternalMcmodel.g:11270:13: lv_pullingDefined_76_0= '!'
            	            {
            	            lv_pullingDefined_76_0=(Token)match(input,60,FOLLOW_53); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              													newLeafNode(lv_pullingDefined_76_0, grammarAccess.getOverridePredicate_8Access().getPullingDefinedExclamationMarkKeyword_1_8_1_0_0_0());
            	              												
            	            }
            	            if ( state.backtracking==0 ) {

            	              													if (current==null) {
            	              														current = createModelElement(grammarAccess.getOverridePredicate_8Rule());
            	              													}
            	              													setWithLastConsumed(current, "pullingDefined", true, "!");
            	              												
            	            }

            	            }


            	            }

            	            otherlv_77=(Token)match(input,70,FOLLOW_37); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              											newLeafNode(otherlv_77, grammarAccess.getOverridePredicate_8Access().getPullingKeyword_1_8_1_0_1());
            	              										
            	            }

            	            }


            	            }
            	            break;
            	        case 2 :
            	            // InternalMcmodel.g:11288:10: ( ( (lv_pullingDefined_78_0= 'pulling' ) ) ( (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) ) | ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) ) ) )
            	            {
            	            // InternalMcmodel.g:11288:10: ( ( (lv_pullingDefined_78_0= 'pulling' ) ) ( (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) ) | ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) ) ) )
            	            // InternalMcmodel.g:11289:11: ( (lv_pullingDefined_78_0= 'pulling' ) ) ( (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) ) | ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) ) )
            	            {
            	            // InternalMcmodel.g:11289:11: ( (lv_pullingDefined_78_0= 'pulling' ) )
            	            // InternalMcmodel.g:11290:12: (lv_pullingDefined_78_0= 'pulling' )
            	            {
            	            // InternalMcmodel.g:11290:12: (lv_pullingDefined_78_0= 'pulling' )
            	            // InternalMcmodel.g:11291:13: lv_pullingDefined_78_0= 'pulling'
            	            {
            	            lv_pullingDefined_78_0=(Token)match(input,70,FOLLOW_40); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              													newLeafNode(lv_pullingDefined_78_0, grammarAccess.getOverridePredicate_8Access().getPullingDefinedPullingKeyword_1_8_1_1_0_0());
            	              												
            	            }
            	            if ( state.backtracking==0 ) {

            	              													if (current==null) {
            	              														current = createModelElement(grammarAccess.getOverridePredicate_8Rule());
            	              													}
            	              													setWithLastConsumed(current, "pullingDefined", true, "pulling");
            	              												
            	            }

            	            }


            	            }

            	            // InternalMcmodel.g:11303:11: ( (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) ) | ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) ) )
            	            int alt348=2;
            	            int LA348_0 = input.LA(1);

            	            if ( (LA348_0==62) ) {
            	                alt348=1;
            	            }
            	            else if ( (LA348_0==18||LA348_0==58) ) {
            	                alt348=2;
            	            }
            	            else {
            	                if (state.backtracking>0) {state.failed=true; return current;}
            	                NoViableAltException nvae =
            	                    new NoViableAltException("", 348, 0, input);

            	                throw nvae;
            	            }
            	            switch (alt348) {
            	                case 1 :
            	                    // InternalMcmodel.g:11304:12: (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) )
            	                    {
            	                    // InternalMcmodel.g:11304:12: (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) )
            	                    // InternalMcmodel.g:11305:13: otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' )
            	                    {
            	                    otherlv_79=(Token)match(input,62,FOLLOW_7); if (state.failed) return current;
            	                    if ( state.backtracking==0 ) {

            	                      													newLeafNode(otherlv_79, grammarAccess.getOverridePredicate_8Access().getExclamationMarkEqualsSignKeyword_1_8_1_1_1_0_0());
            	                      												
            	                    }
            	                    // InternalMcmodel.g:11309:13: ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' )
            	                    int alt345=2;
            	                    int LA345_0 = input.LA(1);

            	                    if ( (LA345_0==21) ) {
            	                        alt345=1;
            	                    }
            	                    else if ( (LA345_0==20) ) {
            	                        alt345=2;
            	                    }
            	                    else {
            	                        if (state.backtracking>0) {state.failed=true; return current;}
            	                        NoViableAltException nvae =
            	                            new NoViableAltException("", 345, 0, input);

            	                        throw nvae;
            	                    }
            	                    switch (alt345) {
            	                        case 1 :
            	                            // InternalMcmodel.g:11310:14: ( (lv_pulling_80_0= 'false' ) )
            	                            {
            	                            // InternalMcmodel.g:11310:14: ( (lv_pulling_80_0= 'false' ) )
            	                            // InternalMcmodel.g:11311:15: (lv_pulling_80_0= 'false' )
            	                            {
            	                            // InternalMcmodel.g:11311:15: (lv_pulling_80_0= 'false' )
            	                            // InternalMcmodel.g:11312:16: lv_pulling_80_0= 'false'
            	                            {
            	                            lv_pulling_80_0=(Token)match(input,21,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              																newLeafNode(lv_pulling_80_0, grammarAccess.getOverridePredicate_8Access().getPullingFalseKeyword_1_8_1_1_1_0_1_0_0());
            	                              															
            	                            }
            	                            if ( state.backtracking==0 ) {

            	                              																if (current==null) {
            	                              																	current = createModelElement(grammarAccess.getOverridePredicate_8Rule());
            	                              																}
            	                              																setWithLastConsumed(current, "pulling", true, "false");
            	                              															
            	                            }

            	                            }


            	                            }


            	                            }
            	                            break;
            	                        case 2 :
            	                            // InternalMcmodel.g:11325:14: otherlv_81= 'true'
            	                            {
            	                            otherlv_81=(Token)match(input,20,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_81, grammarAccess.getOverridePredicate_8Access().getTrueKeyword_1_8_1_1_1_0_1_1());
            	                              													
            	                            }

            	                            }
            	                            break;

            	                    }


            	                    }


            	                    }
            	                    break;
            	                case 2 :
            	                    // InternalMcmodel.g:11332:12: ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) )
            	                    {
            	                    // InternalMcmodel.g:11332:12: ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) )
            	                    // InternalMcmodel.g:11333:13: (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' )
            	                    {
            	                    // InternalMcmodel.g:11333:13: (otherlv_82= '=' | otherlv_83= '==' )
            	                    int alt346=2;
            	                    int LA346_0 = input.LA(1);

            	                    if ( (LA346_0==18) ) {
            	                        alt346=1;
            	                    }
            	                    else if ( (LA346_0==58) ) {
            	                        alt346=2;
            	                    }
            	                    else {
            	                        if (state.backtracking>0) {state.failed=true; return current;}
            	                        NoViableAltException nvae =
            	                            new NoViableAltException("", 346, 0, input);

            	                        throw nvae;
            	                    }
            	                    switch (alt346) {
            	                        case 1 :
            	                            // InternalMcmodel.g:11334:14: otherlv_82= '='
            	                            {
            	                            otherlv_82=(Token)match(input,18,FOLLOW_7); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_82, grammarAccess.getOverridePredicate_8Access().getEqualsSignKeyword_1_8_1_1_1_1_0_0());
            	                              													
            	                            }

            	                            }
            	                            break;
            	                        case 2 :
            	                            // InternalMcmodel.g:11339:14: otherlv_83= '=='
            	                            {
            	                            otherlv_83=(Token)match(input,58,FOLLOW_7); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_83, grammarAccess.getOverridePredicate_8Access().getEqualsSignEqualsSignKeyword_1_8_1_1_1_1_0_1());
            	                              													
            	                            }

            	                            }
            	                            break;

            	                    }

            	                    // InternalMcmodel.g:11344:13: ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' )
            	                    int alt347=2;
            	                    int LA347_0 = input.LA(1);

            	                    if ( (LA347_0==20) ) {
            	                        alt347=1;
            	                    }
            	                    else if ( (LA347_0==21) ) {
            	                        alt347=2;
            	                    }
            	                    else {
            	                        if (state.backtracking>0) {state.failed=true; return current;}
            	                        NoViableAltException nvae =
            	                            new NoViableAltException("", 347, 0, input);

            	                        throw nvae;
            	                    }
            	                    switch (alt347) {
            	                        case 1 :
            	                            // InternalMcmodel.g:11345:14: ( (lv_pulling_84_0= 'true' ) )
            	                            {
            	                            // InternalMcmodel.g:11345:14: ( (lv_pulling_84_0= 'true' ) )
            	                            // InternalMcmodel.g:11346:15: (lv_pulling_84_0= 'true' )
            	                            {
            	                            // InternalMcmodel.g:11346:15: (lv_pulling_84_0= 'true' )
            	                            // InternalMcmodel.g:11347:16: lv_pulling_84_0= 'true'
            	                            {
            	                            lv_pulling_84_0=(Token)match(input,20,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              																newLeafNode(lv_pulling_84_0, grammarAccess.getOverridePredicate_8Access().getPullingTrueKeyword_1_8_1_1_1_1_1_0_0());
            	                              															
            	                            }
            	                            if ( state.backtracking==0 ) {

            	                              																if (current==null) {
            	                              																	current = createModelElement(grammarAccess.getOverridePredicate_8Rule());
            	                              																}
            	                              																setWithLastConsumed(current, "pulling", true, "true");
            	                              															
            	                            }

            	                            }


            	                            }


            	                            }
            	                            break;
            	                        case 2 :
            	                            // InternalMcmodel.g:11360:14: otherlv_85= 'false'
            	                            {
            	                            otherlv_85=(Token)match(input,21,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_85, grammarAccess.getOverridePredicate_8Access().getFalseKeyword_1_8_1_1_1_1_1_1());
            	                              													
            	                            }

            	                            }
            	                            break;

            	                    }


            	                    }


            	                    }
            	                    break;

            	            }


            	            }


            	            }
            	            break;

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getOverridePredicate_8Access().getUnorderedGroup_1());

            	    }


            	    }


            	    }
            	    break;
            	case 10 :
            	    // InternalMcmodel.g:11375:4: ({...}? => ( ({...}? => (otherlv_86= '&' ( ( ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing' ) | ( ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) ) ) ) ) ) )
            	    {
            	    // InternalMcmodel.g:11375:4: ({...}? => ( ({...}? => (otherlv_86= '&' ( ( ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing' ) | ( ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) ) ) ) ) ) )
            	    // InternalMcmodel.g:11376:5: {...}? => ( ({...}? => (otherlv_86= '&' ( ( ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing' ) | ( ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_8Access().getUnorderedGroup_1(), 9) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_8", "getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_8Access().getUnorderedGroup_1(), 9)");
            	    }
            	    // InternalMcmodel.g:11376:116: ( ({...}? => (otherlv_86= '&' ( ( ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing' ) | ( ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) ) ) ) ) )
            	    // InternalMcmodel.g:11377:6: ({...}? => (otherlv_86= '&' ( ( ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing' ) | ( ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getOverridePredicate_8Access().getUnorderedGroup_1(), 9);
            	    // InternalMcmodel.g:11380:9: ({...}? => (otherlv_86= '&' ( ( ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing' ) | ( ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) ) ) ) )
            	    // InternalMcmodel.g:11380:10: {...}? => (otherlv_86= '&' ( ( ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing' ) | ( ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_8", "true");
            	    }
            	    // InternalMcmodel.g:11380:19: (otherlv_86= '&' ( ( ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing' ) | ( ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) ) ) )
            	    // InternalMcmodel.g:11380:20: otherlv_86= '&' ( ( ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing' ) | ( ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) ) )
            	    {
            	    otherlv_86=(Token)match(input,59,FOLLOW_54); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_86, grammarAccess.getOverridePredicate_8Access().getAmpersandKeyword_1_9_0());
            	      								
            	    }
            	    // InternalMcmodel.g:11384:9: ( ( ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing' ) | ( ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) ) )
            	    int alt354=2;
            	    int LA354_0 = input.LA(1);

            	    if ( (LA354_0==60) ) {
            	        alt354=1;
            	    }
            	    else if ( (LA354_0==71) ) {
            	        alt354=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 354, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt354) {
            	        case 1 :
            	            // InternalMcmodel.g:11385:10: ( ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing' )
            	            {
            	            // InternalMcmodel.g:11385:10: ( ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing' )
            	            // InternalMcmodel.g:11386:11: ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing'
            	            {
            	            // InternalMcmodel.g:11386:11: ( (lv_throwingDefined_87_0= '!' ) )
            	            // InternalMcmodel.g:11387:12: (lv_throwingDefined_87_0= '!' )
            	            {
            	            // InternalMcmodel.g:11387:12: (lv_throwingDefined_87_0= '!' )
            	            // InternalMcmodel.g:11388:13: lv_throwingDefined_87_0= '!'
            	            {
            	            lv_throwingDefined_87_0=(Token)match(input,60,FOLLOW_55); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              													newLeafNode(lv_throwingDefined_87_0, grammarAccess.getOverridePredicate_8Access().getThrowingDefinedExclamationMarkKeyword_1_9_1_0_0_0());
            	              												
            	            }
            	            if ( state.backtracking==0 ) {

            	              													if (current==null) {
            	              														current = createModelElement(grammarAccess.getOverridePredicate_8Rule());
            	              													}
            	              													setWithLastConsumed(current, "throwingDefined", true, "!");
            	              												
            	            }

            	            }


            	            }

            	            otherlv_88=(Token)match(input,71,FOLLOW_37); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              											newLeafNode(otherlv_88, grammarAccess.getOverridePredicate_8Access().getThrowingKeyword_1_9_1_0_1());
            	              										
            	            }

            	            }


            	            }
            	            break;
            	        case 2 :
            	            // InternalMcmodel.g:11406:10: ( ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) )
            	            {
            	            // InternalMcmodel.g:11406:10: ( ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) )
            	            // InternalMcmodel.g:11407:11: ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) )
            	            {
            	            // InternalMcmodel.g:11407:11: ( (lv_throwingDefined_89_0= 'throwing' ) )
            	            // InternalMcmodel.g:11408:12: (lv_throwingDefined_89_0= 'throwing' )
            	            {
            	            // InternalMcmodel.g:11408:12: (lv_throwingDefined_89_0= 'throwing' )
            	            // InternalMcmodel.g:11409:13: lv_throwingDefined_89_0= 'throwing'
            	            {
            	            lv_throwingDefined_89_0=(Token)match(input,71,FOLLOW_40); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              													newLeafNode(lv_throwingDefined_89_0, grammarAccess.getOverridePredicate_8Access().getThrowingDefinedThrowingKeyword_1_9_1_1_0_0());
            	              												
            	            }
            	            if ( state.backtracking==0 ) {

            	              													if (current==null) {
            	              														current = createModelElement(grammarAccess.getOverridePredicate_8Rule());
            	              													}
            	              													setWithLastConsumed(current, "throwingDefined", true, "throwing");
            	              												
            	            }

            	            }


            	            }

            	            // InternalMcmodel.g:11421:11: ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) )
            	            int alt353=2;
            	            int LA353_0 = input.LA(1);

            	            if ( (LA353_0==62) ) {
            	                alt353=1;
            	            }
            	            else if ( (LA353_0==18||LA353_0==58) ) {
            	                alt353=2;
            	            }
            	            else {
            	                if (state.backtracking>0) {state.failed=true; return current;}
            	                NoViableAltException nvae =
            	                    new NoViableAltException("", 353, 0, input);

            	                throw nvae;
            	            }
            	            switch (alt353) {
            	                case 1 :
            	                    // InternalMcmodel.g:11422:12: (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) )
            	                    {
            	                    // InternalMcmodel.g:11422:12: (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) )
            	                    // InternalMcmodel.g:11423:13: otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' )
            	                    {
            	                    otherlv_90=(Token)match(input,62,FOLLOW_7); if (state.failed) return current;
            	                    if ( state.backtracking==0 ) {

            	                      													newLeafNode(otherlv_90, grammarAccess.getOverridePredicate_8Access().getExclamationMarkEqualsSignKeyword_1_9_1_1_1_0_0());
            	                      												
            	                    }
            	                    // InternalMcmodel.g:11427:13: ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' )
            	                    int alt350=2;
            	                    int LA350_0 = input.LA(1);

            	                    if ( (LA350_0==21) ) {
            	                        alt350=1;
            	                    }
            	                    else if ( (LA350_0==20) ) {
            	                        alt350=2;
            	                    }
            	                    else {
            	                        if (state.backtracking>0) {state.failed=true; return current;}
            	                        NoViableAltException nvae =
            	                            new NoViableAltException("", 350, 0, input);

            	                        throw nvae;
            	                    }
            	                    switch (alt350) {
            	                        case 1 :
            	                            // InternalMcmodel.g:11428:14: ( (lv_throwing_91_0= 'false' ) )
            	                            {
            	                            // InternalMcmodel.g:11428:14: ( (lv_throwing_91_0= 'false' ) )
            	                            // InternalMcmodel.g:11429:15: (lv_throwing_91_0= 'false' )
            	                            {
            	                            // InternalMcmodel.g:11429:15: (lv_throwing_91_0= 'false' )
            	                            // InternalMcmodel.g:11430:16: lv_throwing_91_0= 'false'
            	                            {
            	                            lv_throwing_91_0=(Token)match(input,21,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              																newLeafNode(lv_throwing_91_0, grammarAccess.getOverridePredicate_8Access().getThrowingFalseKeyword_1_9_1_1_1_0_1_0_0());
            	                              															
            	                            }
            	                            if ( state.backtracking==0 ) {

            	                              																if (current==null) {
            	                              																	current = createModelElement(grammarAccess.getOverridePredicate_8Rule());
            	                              																}
            	                              																setWithLastConsumed(current, "throwing", true, "false");
            	                              															
            	                            }

            	                            }


            	                            }


            	                            }
            	                            break;
            	                        case 2 :
            	                            // InternalMcmodel.g:11443:14: otherlv_92= 'true'
            	                            {
            	                            otherlv_92=(Token)match(input,20,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_92, grammarAccess.getOverridePredicate_8Access().getTrueKeyword_1_9_1_1_1_0_1_1());
            	                              													
            	                            }

            	                            }
            	                            break;

            	                    }


            	                    }


            	                    }
            	                    break;
            	                case 2 :
            	                    // InternalMcmodel.g:11450:12: ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) )
            	                    {
            	                    // InternalMcmodel.g:11450:12: ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) )
            	                    // InternalMcmodel.g:11451:13: (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' )
            	                    {
            	                    // InternalMcmodel.g:11451:13: (otherlv_93= '=' | otherlv_94= '==' )
            	                    int alt351=2;
            	                    int LA351_0 = input.LA(1);

            	                    if ( (LA351_0==18) ) {
            	                        alt351=1;
            	                    }
            	                    else if ( (LA351_0==58) ) {
            	                        alt351=2;
            	                    }
            	                    else {
            	                        if (state.backtracking>0) {state.failed=true; return current;}
            	                        NoViableAltException nvae =
            	                            new NoViableAltException("", 351, 0, input);

            	                        throw nvae;
            	                    }
            	                    switch (alt351) {
            	                        case 1 :
            	                            // InternalMcmodel.g:11452:14: otherlv_93= '='
            	                            {
            	                            otherlv_93=(Token)match(input,18,FOLLOW_7); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_93, grammarAccess.getOverridePredicate_8Access().getEqualsSignKeyword_1_9_1_1_1_1_0_0());
            	                              													
            	                            }

            	                            }
            	                            break;
            	                        case 2 :
            	                            // InternalMcmodel.g:11457:14: otherlv_94= '=='
            	                            {
            	                            otherlv_94=(Token)match(input,58,FOLLOW_7); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_94, grammarAccess.getOverridePredicate_8Access().getEqualsSignEqualsSignKeyword_1_9_1_1_1_1_0_1());
            	                              													
            	                            }

            	                            }
            	                            break;

            	                    }

            	                    // InternalMcmodel.g:11462:13: ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' )
            	                    int alt352=2;
            	                    int LA352_0 = input.LA(1);

            	                    if ( (LA352_0==20) ) {
            	                        alt352=1;
            	                    }
            	                    else if ( (LA352_0==21) ) {
            	                        alt352=2;
            	                    }
            	                    else {
            	                        if (state.backtracking>0) {state.failed=true; return current;}
            	                        NoViableAltException nvae =
            	                            new NoViableAltException("", 352, 0, input);

            	                        throw nvae;
            	                    }
            	                    switch (alt352) {
            	                        case 1 :
            	                            // InternalMcmodel.g:11463:14: ( (lv_throwing_95_0= 'true' ) )
            	                            {
            	                            // InternalMcmodel.g:11463:14: ( (lv_throwing_95_0= 'true' ) )
            	                            // InternalMcmodel.g:11464:15: (lv_throwing_95_0= 'true' )
            	                            {
            	                            // InternalMcmodel.g:11464:15: (lv_throwing_95_0= 'true' )
            	                            // InternalMcmodel.g:11465:16: lv_throwing_95_0= 'true'
            	                            {
            	                            lv_throwing_95_0=(Token)match(input,20,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              																newLeafNode(lv_throwing_95_0, grammarAccess.getOverridePredicate_8Access().getThrowingTrueKeyword_1_9_1_1_1_1_1_0_0());
            	                              															
            	                            }
            	                            if ( state.backtracking==0 ) {

            	                              																if (current==null) {
            	                              																	current = createModelElement(grammarAccess.getOverridePredicate_8Rule());
            	                              																}
            	                              																setWithLastConsumed(current, "throwing", true, "true");
            	                              															
            	                            }

            	                            }


            	                            }


            	                            }
            	                            break;
            	                        case 2 :
            	                            // InternalMcmodel.g:11478:14: otherlv_96= 'false'
            	                            {
            	                            otherlv_96=(Token)match(input,21,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_96, grammarAccess.getOverridePredicate_8Access().getFalseKeyword_1_9_1_1_1_1_1_1());
            	                              													
            	                            }

            	                            }
            	                            break;

            	                    }


            	                    }


            	                    }
            	                    break;

            	            }


            	            }


            	            }
            	            break;

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getOverridePredicate_8Access().getUnorderedGroup_1());

            	    }


            	    }


            	    }
            	    break;
            	case 11 :
            	    // InternalMcmodel.g:11493:4: ({...}? => ( ({...}? => (otherlv_97= '&' ( (lv_timeDefined_98_0= 'time' ) ) (otherlv_99= '=' | otherlv_100= '==' ) ( (lv_time_101_0= RULE_PERCENTAGE ) ) ) ) ) )
            	    {
            	    // InternalMcmodel.g:11493:4: ({...}? => ( ({...}? => (otherlv_97= '&' ( (lv_timeDefined_98_0= 'time' ) ) (otherlv_99= '=' | otherlv_100= '==' ) ( (lv_time_101_0= RULE_PERCENTAGE ) ) ) ) ) )
            	    // InternalMcmodel.g:11494:5: {...}? => ( ({...}? => (otherlv_97= '&' ( (lv_timeDefined_98_0= 'time' ) ) (otherlv_99= '=' | otherlv_100= '==' ) ( (lv_time_101_0= RULE_PERCENTAGE ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_8Access().getUnorderedGroup_1(), 10) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_8", "getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_8Access().getUnorderedGroup_1(), 10)");
            	    }
            	    // InternalMcmodel.g:11494:117: ( ({...}? => (otherlv_97= '&' ( (lv_timeDefined_98_0= 'time' ) ) (otherlv_99= '=' | otherlv_100= '==' ) ( (lv_time_101_0= RULE_PERCENTAGE ) ) ) ) )
            	    // InternalMcmodel.g:11495:6: ({...}? => (otherlv_97= '&' ( (lv_timeDefined_98_0= 'time' ) ) (otherlv_99= '=' | otherlv_100= '==' ) ( (lv_time_101_0= RULE_PERCENTAGE ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getOverridePredicate_8Access().getUnorderedGroup_1(), 10);
            	    // InternalMcmodel.g:11498:9: ({...}? => (otherlv_97= '&' ( (lv_timeDefined_98_0= 'time' ) ) (otherlv_99= '=' | otherlv_100= '==' ) ( (lv_time_101_0= RULE_PERCENTAGE ) ) ) )
            	    // InternalMcmodel.g:11498:10: {...}? => (otherlv_97= '&' ( (lv_timeDefined_98_0= 'time' ) ) (otherlv_99= '=' | otherlv_100= '==' ) ( (lv_time_101_0= RULE_PERCENTAGE ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_8", "true");
            	    }
            	    // InternalMcmodel.g:11498:19: (otherlv_97= '&' ( (lv_timeDefined_98_0= 'time' ) ) (otherlv_99= '=' | otherlv_100= '==' ) ( (lv_time_101_0= RULE_PERCENTAGE ) ) )
            	    // InternalMcmodel.g:11498:20: otherlv_97= '&' ( (lv_timeDefined_98_0= 'time' ) ) (otherlv_99= '=' | otherlv_100= '==' ) ( (lv_time_101_0= RULE_PERCENTAGE ) )
            	    {
            	    otherlv_97=(Token)match(input,59,FOLLOW_56); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_97, grammarAccess.getOverridePredicate_8Access().getAmpersandKeyword_1_10_0());
            	      								
            	    }
            	    // InternalMcmodel.g:11502:9: ( (lv_timeDefined_98_0= 'time' ) )
            	    // InternalMcmodel.g:11503:10: (lv_timeDefined_98_0= 'time' )
            	    {
            	    // InternalMcmodel.g:11503:10: (lv_timeDefined_98_0= 'time' )
            	    // InternalMcmodel.g:11504:11: lv_timeDefined_98_0= 'time'
            	    {
            	    lv_timeDefined_98_0=(Token)match(input,72,FOLLOW_35); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											newLeafNode(lv_timeDefined_98_0, grammarAccess.getOverridePredicate_8Access().getTimeDefinedTimeKeyword_1_10_1_0());
            	      										
            	    }
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElement(grammarAccess.getOverridePredicate_8Rule());
            	      											}
            	      											setWithLastConsumed(current, "timeDefined", true, "time");
            	      										
            	    }

            	    }


            	    }

            	    // InternalMcmodel.g:11516:9: (otherlv_99= '=' | otherlv_100= '==' )
            	    int alt355=2;
            	    int LA355_0 = input.LA(1);

            	    if ( (LA355_0==18) ) {
            	        alt355=1;
            	    }
            	    else if ( (LA355_0==58) ) {
            	        alt355=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 355, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt355) {
            	        case 1 :
            	            // InternalMcmodel.g:11517:10: otherlv_99= '='
            	            {
            	            otherlv_99=(Token)match(input,18,FOLLOW_36); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(otherlv_99, grammarAccess.getOverridePredicate_8Access().getEqualsSignKeyword_1_10_2_0());
            	              									
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalMcmodel.g:11522:10: otherlv_100= '=='
            	            {
            	            otherlv_100=(Token)match(input,58,FOLLOW_36); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(otherlv_100, grammarAccess.getOverridePredicate_8Access().getEqualsSignEqualsSignKeyword_1_10_2_1());
            	              									
            	            }

            	            }
            	            break;

            	    }

            	    // InternalMcmodel.g:11527:9: ( (lv_time_101_0= RULE_PERCENTAGE ) )
            	    // InternalMcmodel.g:11528:10: (lv_time_101_0= RULE_PERCENTAGE )
            	    {
            	    // InternalMcmodel.g:11528:10: (lv_time_101_0= RULE_PERCENTAGE )
            	    // InternalMcmodel.g:11529:11: lv_time_101_0= RULE_PERCENTAGE
            	    {
            	    lv_time_101_0=(Token)match(input,RULE_PERCENTAGE,FOLLOW_37); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											newLeafNode(lv_time_101_0, grammarAccess.getOverridePredicate_8Access().getTimePERCENTAGETerminalRuleCall_1_10_3_0());
            	      										
            	    }
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElement(grammarAccess.getOverridePredicate_8Rule());
            	      											}
            	      											setWithLastConsumed(
            	      												current,
            	      												"time",
            	      												lv_time_101_0,
            	      												"com.raptor.mcmodel.Mcmodel.PERCENTAGE");
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getOverridePredicate_8Access().getUnorderedGroup_1());

            	    }


            	    }


            	    }
            	    break;
            	case 12 :
            	    // InternalMcmodel.g:11551:4: ({...}? => ( ({...}? => (otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) ) ) ) ) )
            	    {
            	    // InternalMcmodel.g:11551:4: ({...}? => ( ({...}? => (otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) ) ) ) ) )
            	    // InternalMcmodel.g:11552:5: {...}? => ( ({...}? => (otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_8Access().getUnorderedGroup_1(), 11) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_8", "getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_8Access().getUnorderedGroup_1(), 11)");
            	    }
            	    // InternalMcmodel.g:11552:117: ( ({...}? => (otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) ) ) ) )
            	    // InternalMcmodel.g:11553:6: ({...}? => (otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getOverridePredicate_8Access().getUnorderedGroup_1(), 11);
            	    // InternalMcmodel.g:11556:9: ({...}? => (otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) ) ) )
            	    // InternalMcmodel.g:11556:10: {...}? => (otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_8", "true");
            	    }
            	    // InternalMcmodel.g:11556:19: (otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) ) )
            	    // InternalMcmodel.g:11556:20: otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) )
            	    {
            	    otherlv_102=(Token)match(input,59,FOLLOW_57); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_102, grammarAccess.getOverridePredicate_8Access().getAmpersandKeyword_1_11_0());
            	      								
            	    }
            	    // InternalMcmodel.g:11560:9: ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) )
            	    // InternalMcmodel.g:11561:10: (lv_customModelDataDefined_103_0= 'custom_model_data' )
            	    {
            	    // InternalMcmodel.g:11561:10: (lv_customModelDataDefined_103_0= 'custom_model_data' )
            	    // InternalMcmodel.g:11562:11: lv_customModelDataDefined_103_0= 'custom_model_data'
            	    {
            	    lv_customModelDataDefined_103_0=(Token)match(input,73,FOLLOW_35); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											newLeafNode(lv_customModelDataDefined_103_0, grammarAccess.getOverridePredicate_8Access().getCustomModelDataDefinedCustom_model_dataKeyword_1_11_1_0());
            	      										
            	    }
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElement(grammarAccess.getOverridePredicate_8Rule());
            	      											}
            	      											setWithLastConsumed(current, "customModelDataDefined", true, "custom_model_data");
            	      										
            	    }

            	    }


            	    }

            	    // InternalMcmodel.g:11574:9: (otherlv_104= '=' | otherlv_105= '==' )
            	    int alt356=2;
            	    int LA356_0 = input.LA(1);

            	    if ( (LA356_0==18) ) {
            	        alt356=1;
            	    }
            	    else if ( (LA356_0==58) ) {
            	        alt356=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 356, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt356) {
            	        case 1 :
            	            // InternalMcmodel.g:11575:10: otherlv_104= '='
            	            {
            	            otherlv_104=(Token)match(input,18,FOLLOW_29); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(otherlv_104, grammarAccess.getOverridePredicate_8Access().getEqualsSignKeyword_1_11_2_0());
            	              									
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalMcmodel.g:11580:10: otherlv_105= '=='
            	            {
            	            otherlv_105=(Token)match(input,58,FOLLOW_29); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(otherlv_105, grammarAccess.getOverridePredicate_8Access().getEqualsSignEqualsSignKeyword_1_11_2_1());
            	              									
            	            }

            	            }
            	            break;

            	    }

            	    // InternalMcmodel.g:11585:9: ( (lv_customModelData_106_0= ruleLONG ) )
            	    // InternalMcmodel.g:11586:10: (lv_customModelData_106_0= ruleLONG )
            	    {
            	    // InternalMcmodel.g:11586:10: (lv_customModelData_106_0= ruleLONG )
            	    // InternalMcmodel.g:11587:11: lv_customModelData_106_0= ruleLONG
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getOverridePredicate_8Access().getCustomModelDataLONGParserRuleCall_1_11_3_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_37);
            	    lv_customModelData_106_0=ruleLONG();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getOverridePredicate_8Rule());
            	      											}
            	      											set(
            	      												current,
            	      												"customModelData",
            	      												lv_customModelData_106_0,
            	      												"com.raptor.mcmodel.Mcmodel.LONG");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getOverridePredicate_8Access().getUnorderedGroup_1());

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop357;
                }
            } while (true);


            }


            }

            getUnorderedGroupHelper().leave(grammarAccess.getOverridePredicate_8Access().getUnorderedGroup_1());

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOverridePredicate_8"


    // $ANTLR start "entryRuleOverridePredicate_9"
    // InternalMcmodel.g:11621:1: entryRuleOverridePredicate_9 returns [EObject current=null] : iv_ruleOverridePredicate_9= ruleOverridePredicate_9 EOF ;
    public final EObject entryRuleOverridePredicate_9() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleOverridePredicate_9 = null;


        try {
            // InternalMcmodel.g:11621:60: (iv_ruleOverridePredicate_9= ruleOverridePredicate_9 EOF )
            // InternalMcmodel.g:11622:2: iv_ruleOverridePredicate_9= ruleOverridePredicate_9 EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOverridePredicate_9Rule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOverridePredicate_9=ruleOverridePredicate_9();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOverridePredicate_9; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOverridePredicate_9"


    // $ANTLR start "ruleOverridePredicate_9"
    // InternalMcmodel.g:11628:1: ruleOverridePredicate_9 returns [EObject current=null] : ( ( (lv_pullDefined_0_0= 'pull' ) ) (otherlv_1= '=' | otherlv_2= '==' ) ( (lv_pull_3_0= RULE_PERCENTAGE ) ) ( ( ( ( ({...}? => ( ({...}? => (otherlv_5= '&' ( (lv_angleDefined_6_0= 'angle' ) ) (otherlv_7= '=' | otherlv_8= '==' ) ( (lv_angle_9_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= '&' ( ( ( (lv_blockingDefined_11_0= '!' ) ) otherlv_12= 'blocking' ) | ( ( (lv_blockingDefined_13_0= 'blocking' ) ) ( (otherlv_14= '!=' ( ( (lv_blocking_15_0= 'false' ) ) | otherlv_16= 'true' ) ) | ( (otherlv_17= '=' | otherlv_18= '==' ) ( ( (lv_blocking_19_0= 'true' ) ) | otherlv_20= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= '&' ( ( ( (lv_brokenDefined_22_0= '!' ) ) otherlv_23= 'broken' ) | ( ( (lv_brokenDefined_24_0= 'broken' ) ) ( (otherlv_25= '!=' ( ( (lv_broken_26_0= 'false' ) ) | otherlv_27= 'true' ) ) | ( (otherlv_28= '=' | otherlv_29= '==' ) ( ( (lv_broken_30_0= 'true' ) ) | otherlv_31= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_32= '&' ( ( ( (lv_castDefined_33_0= '!' ) ) otherlv_34= 'cast' ) | ( ( (lv_castDefined_35_0= 'cast' ) ) ( (otherlv_36= '!=' ( ( (lv_cast_37_0= 'false' ) ) | otherlv_38= 'true' ) ) | ( (otherlv_39= '=' | otherlv_40= '==' ) ( ( (lv_cast_41_0= 'true' ) ) | otherlv_42= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= '&' ( (lv_cooldownDefined_44_0= 'cooldown' ) ) (otherlv_45= '=' | otherlv_46= '==' ) ( (lv_cooldown_47_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_48= '&' ( (lv_damageDefined_49_0= 'damage' ) ) (otherlv_50= '=' | otherlv_51= '==' ) ( (lv_damage_52_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_53= '&' ( ( ( (lv_damagedDefined_54_0= '!' ) ) otherlv_55= 'damaged' ) | ( ( (lv_damagedDefined_56_0= 'damaged' ) ) ( (otherlv_57= '!=' ( ( (lv_damaged_58_0= 'false' ) ) | otherlv_59= 'true' ) ) | ( (otherlv_60= '=' | otherlv_61= '==' ) ( ( (lv_damaged_62_0= 'true' ) ) | otherlv_63= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_64= '&' ( ( ( (lv_lefthandedDefined_65_0= '!' ) ) otherlv_66= 'lefthanded' ) | ( ( (lv_lefthandedDefined_67_0= 'lefthanded' ) ) ( (otherlv_68= '!=' ( ( (lv_lefthanded_69_0= 'false' ) ) | otherlv_70= 'true' ) ) | ( (otherlv_71= '=' | otherlv_72= '==' ) ( ( (lv_lefthanded_73_0= 'true' ) ) | otherlv_74= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_75= '&' ( ( ( (lv_pullingDefined_76_0= '!' ) ) otherlv_77= 'pulling' ) | ( ( (lv_pullingDefined_78_0= 'pulling' ) ) ( (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) ) | ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_86= '&' ( ( ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing' ) | ( ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_97= '&' ( (lv_timeDefined_98_0= 'time' ) ) (otherlv_99= '=' | otherlv_100= '==' ) ( (lv_time_101_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) ) ) ) ) ) )* ) ) ) ) ;
    public final EObject ruleOverridePredicate_9() throws RecognitionException {
        EObject current = null;

        Token lv_pullDefined_0_0=null;
        Token otherlv_1=null;
        Token otherlv_2=null;
        Token lv_pull_3_0=null;
        Token otherlv_5=null;
        Token lv_angleDefined_6_0=null;
        Token otherlv_7=null;
        Token otherlv_8=null;
        Token lv_angle_9_0=null;
        Token otherlv_10=null;
        Token lv_blockingDefined_11_0=null;
        Token otherlv_12=null;
        Token lv_blockingDefined_13_0=null;
        Token otherlv_14=null;
        Token lv_blocking_15_0=null;
        Token otherlv_16=null;
        Token otherlv_17=null;
        Token otherlv_18=null;
        Token lv_blocking_19_0=null;
        Token otherlv_20=null;
        Token otherlv_21=null;
        Token lv_brokenDefined_22_0=null;
        Token otherlv_23=null;
        Token lv_brokenDefined_24_0=null;
        Token otherlv_25=null;
        Token lv_broken_26_0=null;
        Token otherlv_27=null;
        Token otherlv_28=null;
        Token otherlv_29=null;
        Token lv_broken_30_0=null;
        Token otherlv_31=null;
        Token otherlv_32=null;
        Token lv_castDefined_33_0=null;
        Token otherlv_34=null;
        Token lv_castDefined_35_0=null;
        Token otherlv_36=null;
        Token lv_cast_37_0=null;
        Token otherlv_38=null;
        Token otherlv_39=null;
        Token otherlv_40=null;
        Token lv_cast_41_0=null;
        Token otherlv_42=null;
        Token otherlv_43=null;
        Token lv_cooldownDefined_44_0=null;
        Token otherlv_45=null;
        Token otherlv_46=null;
        Token lv_cooldown_47_0=null;
        Token otherlv_48=null;
        Token lv_damageDefined_49_0=null;
        Token otherlv_50=null;
        Token otherlv_51=null;
        Token lv_damage_52_0=null;
        Token otherlv_53=null;
        Token lv_damagedDefined_54_0=null;
        Token otherlv_55=null;
        Token lv_damagedDefined_56_0=null;
        Token otherlv_57=null;
        Token lv_damaged_58_0=null;
        Token otherlv_59=null;
        Token otherlv_60=null;
        Token otherlv_61=null;
        Token lv_damaged_62_0=null;
        Token otherlv_63=null;
        Token otherlv_64=null;
        Token lv_lefthandedDefined_65_0=null;
        Token otherlv_66=null;
        Token lv_lefthandedDefined_67_0=null;
        Token otherlv_68=null;
        Token lv_lefthanded_69_0=null;
        Token otherlv_70=null;
        Token otherlv_71=null;
        Token otherlv_72=null;
        Token lv_lefthanded_73_0=null;
        Token otherlv_74=null;
        Token otherlv_75=null;
        Token lv_pullingDefined_76_0=null;
        Token otherlv_77=null;
        Token lv_pullingDefined_78_0=null;
        Token otherlv_79=null;
        Token lv_pulling_80_0=null;
        Token otherlv_81=null;
        Token otherlv_82=null;
        Token otherlv_83=null;
        Token lv_pulling_84_0=null;
        Token otherlv_85=null;
        Token otherlv_86=null;
        Token lv_throwingDefined_87_0=null;
        Token otherlv_88=null;
        Token lv_throwingDefined_89_0=null;
        Token otherlv_90=null;
        Token lv_throwing_91_0=null;
        Token otherlv_92=null;
        Token otherlv_93=null;
        Token otherlv_94=null;
        Token lv_throwing_95_0=null;
        Token otherlv_96=null;
        Token otherlv_97=null;
        Token lv_timeDefined_98_0=null;
        Token otherlv_99=null;
        Token otherlv_100=null;
        Token lv_time_101_0=null;
        Token otherlv_102=null;
        Token lv_customModelDataDefined_103_0=null;
        Token otherlv_104=null;
        Token otherlv_105=null;
        AntlrDatatypeRuleToken lv_customModelData_106_0 = null;



        	enterRule();

        try {
            // InternalMcmodel.g:11634:2: ( ( ( (lv_pullDefined_0_0= 'pull' ) ) (otherlv_1= '=' | otherlv_2= '==' ) ( (lv_pull_3_0= RULE_PERCENTAGE ) ) ( ( ( ( ({...}? => ( ({...}? => (otherlv_5= '&' ( (lv_angleDefined_6_0= 'angle' ) ) (otherlv_7= '=' | otherlv_8= '==' ) ( (lv_angle_9_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= '&' ( ( ( (lv_blockingDefined_11_0= '!' ) ) otherlv_12= 'blocking' ) | ( ( (lv_blockingDefined_13_0= 'blocking' ) ) ( (otherlv_14= '!=' ( ( (lv_blocking_15_0= 'false' ) ) | otherlv_16= 'true' ) ) | ( (otherlv_17= '=' | otherlv_18= '==' ) ( ( (lv_blocking_19_0= 'true' ) ) | otherlv_20= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= '&' ( ( ( (lv_brokenDefined_22_0= '!' ) ) otherlv_23= 'broken' ) | ( ( (lv_brokenDefined_24_0= 'broken' ) ) ( (otherlv_25= '!=' ( ( (lv_broken_26_0= 'false' ) ) | otherlv_27= 'true' ) ) | ( (otherlv_28= '=' | otherlv_29= '==' ) ( ( (lv_broken_30_0= 'true' ) ) | otherlv_31= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_32= '&' ( ( ( (lv_castDefined_33_0= '!' ) ) otherlv_34= 'cast' ) | ( ( (lv_castDefined_35_0= 'cast' ) ) ( (otherlv_36= '!=' ( ( (lv_cast_37_0= 'false' ) ) | otherlv_38= 'true' ) ) | ( (otherlv_39= '=' | otherlv_40= '==' ) ( ( (lv_cast_41_0= 'true' ) ) | otherlv_42= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= '&' ( (lv_cooldownDefined_44_0= 'cooldown' ) ) (otherlv_45= '=' | otherlv_46= '==' ) ( (lv_cooldown_47_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_48= '&' ( (lv_damageDefined_49_0= 'damage' ) ) (otherlv_50= '=' | otherlv_51= '==' ) ( (lv_damage_52_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_53= '&' ( ( ( (lv_damagedDefined_54_0= '!' ) ) otherlv_55= 'damaged' ) | ( ( (lv_damagedDefined_56_0= 'damaged' ) ) ( (otherlv_57= '!=' ( ( (lv_damaged_58_0= 'false' ) ) | otherlv_59= 'true' ) ) | ( (otherlv_60= '=' | otherlv_61= '==' ) ( ( (lv_damaged_62_0= 'true' ) ) | otherlv_63= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_64= '&' ( ( ( (lv_lefthandedDefined_65_0= '!' ) ) otherlv_66= 'lefthanded' ) | ( ( (lv_lefthandedDefined_67_0= 'lefthanded' ) ) ( (otherlv_68= '!=' ( ( (lv_lefthanded_69_0= 'false' ) ) | otherlv_70= 'true' ) ) | ( (otherlv_71= '=' | otherlv_72= '==' ) ( ( (lv_lefthanded_73_0= 'true' ) ) | otherlv_74= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_75= '&' ( ( ( (lv_pullingDefined_76_0= '!' ) ) otherlv_77= 'pulling' ) | ( ( (lv_pullingDefined_78_0= 'pulling' ) ) ( (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) ) | ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_86= '&' ( ( ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing' ) | ( ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_97= '&' ( (lv_timeDefined_98_0= 'time' ) ) (otherlv_99= '=' | otherlv_100= '==' ) ( (lv_time_101_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) ) ) ) ) ) )* ) ) ) ) )
            // InternalMcmodel.g:11635:2: ( ( (lv_pullDefined_0_0= 'pull' ) ) (otherlv_1= '=' | otherlv_2= '==' ) ( (lv_pull_3_0= RULE_PERCENTAGE ) ) ( ( ( ( ({...}? => ( ({...}? => (otherlv_5= '&' ( (lv_angleDefined_6_0= 'angle' ) ) (otherlv_7= '=' | otherlv_8= '==' ) ( (lv_angle_9_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= '&' ( ( ( (lv_blockingDefined_11_0= '!' ) ) otherlv_12= 'blocking' ) | ( ( (lv_blockingDefined_13_0= 'blocking' ) ) ( (otherlv_14= '!=' ( ( (lv_blocking_15_0= 'false' ) ) | otherlv_16= 'true' ) ) | ( (otherlv_17= '=' | otherlv_18= '==' ) ( ( (lv_blocking_19_0= 'true' ) ) | otherlv_20= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= '&' ( ( ( (lv_brokenDefined_22_0= '!' ) ) otherlv_23= 'broken' ) | ( ( (lv_brokenDefined_24_0= 'broken' ) ) ( (otherlv_25= '!=' ( ( (lv_broken_26_0= 'false' ) ) | otherlv_27= 'true' ) ) | ( (otherlv_28= '=' | otherlv_29= '==' ) ( ( (lv_broken_30_0= 'true' ) ) | otherlv_31= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_32= '&' ( ( ( (lv_castDefined_33_0= '!' ) ) otherlv_34= 'cast' ) | ( ( (lv_castDefined_35_0= 'cast' ) ) ( (otherlv_36= '!=' ( ( (lv_cast_37_0= 'false' ) ) | otherlv_38= 'true' ) ) | ( (otherlv_39= '=' | otherlv_40= '==' ) ( ( (lv_cast_41_0= 'true' ) ) | otherlv_42= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= '&' ( (lv_cooldownDefined_44_0= 'cooldown' ) ) (otherlv_45= '=' | otherlv_46= '==' ) ( (lv_cooldown_47_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_48= '&' ( (lv_damageDefined_49_0= 'damage' ) ) (otherlv_50= '=' | otherlv_51= '==' ) ( (lv_damage_52_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_53= '&' ( ( ( (lv_damagedDefined_54_0= '!' ) ) otherlv_55= 'damaged' ) | ( ( (lv_damagedDefined_56_0= 'damaged' ) ) ( (otherlv_57= '!=' ( ( (lv_damaged_58_0= 'false' ) ) | otherlv_59= 'true' ) ) | ( (otherlv_60= '=' | otherlv_61= '==' ) ( ( (lv_damaged_62_0= 'true' ) ) | otherlv_63= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_64= '&' ( ( ( (lv_lefthandedDefined_65_0= '!' ) ) otherlv_66= 'lefthanded' ) | ( ( (lv_lefthandedDefined_67_0= 'lefthanded' ) ) ( (otherlv_68= '!=' ( ( (lv_lefthanded_69_0= 'false' ) ) | otherlv_70= 'true' ) ) | ( (otherlv_71= '=' | otherlv_72= '==' ) ( ( (lv_lefthanded_73_0= 'true' ) ) | otherlv_74= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_75= '&' ( ( ( (lv_pullingDefined_76_0= '!' ) ) otherlv_77= 'pulling' ) | ( ( (lv_pullingDefined_78_0= 'pulling' ) ) ( (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) ) | ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_86= '&' ( ( ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing' ) | ( ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_97= '&' ( (lv_timeDefined_98_0= 'time' ) ) (otherlv_99= '=' | otherlv_100= '==' ) ( (lv_time_101_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) ) ) ) ) ) )* ) ) ) )
            {
            // InternalMcmodel.g:11635:2: ( ( (lv_pullDefined_0_0= 'pull' ) ) (otherlv_1= '=' | otherlv_2= '==' ) ( (lv_pull_3_0= RULE_PERCENTAGE ) ) ( ( ( ( ({...}? => ( ({...}? => (otherlv_5= '&' ( (lv_angleDefined_6_0= 'angle' ) ) (otherlv_7= '=' | otherlv_8= '==' ) ( (lv_angle_9_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= '&' ( ( ( (lv_blockingDefined_11_0= '!' ) ) otherlv_12= 'blocking' ) | ( ( (lv_blockingDefined_13_0= 'blocking' ) ) ( (otherlv_14= '!=' ( ( (lv_blocking_15_0= 'false' ) ) | otherlv_16= 'true' ) ) | ( (otherlv_17= '=' | otherlv_18= '==' ) ( ( (lv_blocking_19_0= 'true' ) ) | otherlv_20= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= '&' ( ( ( (lv_brokenDefined_22_0= '!' ) ) otherlv_23= 'broken' ) | ( ( (lv_brokenDefined_24_0= 'broken' ) ) ( (otherlv_25= '!=' ( ( (lv_broken_26_0= 'false' ) ) | otherlv_27= 'true' ) ) | ( (otherlv_28= '=' | otherlv_29= '==' ) ( ( (lv_broken_30_0= 'true' ) ) | otherlv_31= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_32= '&' ( ( ( (lv_castDefined_33_0= '!' ) ) otherlv_34= 'cast' ) | ( ( (lv_castDefined_35_0= 'cast' ) ) ( (otherlv_36= '!=' ( ( (lv_cast_37_0= 'false' ) ) | otherlv_38= 'true' ) ) | ( (otherlv_39= '=' | otherlv_40= '==' ) ( ( (lv_cast_41_0= 'true' ) ) | otherlv_42= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= '&' ( (lv_cooldownDefined_44_0= 'cooldown' ) ) (otherlv_45= '=' | otherlv_46= '==' ) ( (lv_cooldown_47_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_48= '&' ( (lv_damageDefined_49_0= 'damage' ) ) (otherlv_50= '=' | otherlv_51= '==' ) ( (lv_damage_52_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_53= '&' ( ( ( (lv_damagedDefined_54_0= '!' ) ) otherlv_55= 'damaged' ) | ( ( (lv_damagedDefined_56_0= 'damaged' ) ) ( (otherlv_57= '!=' ( ( (lv_damaged_58_0= 'false' ) ) | otherlv_59= 'true' ) ) | ( (otherlv_60= '=' | otherlv_61= '==' ) ( ( (lv_damaged_62_0= 'true' ) ) | otherlv_63= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_64= '&' ( ( ( (lv_lefthandedDefined_65_0= '!' ) ) otherlv_66= 'lefthanded' ) | ( ( (lv_lefthandedDefined_67_0= 'lefthanded' ) ) ( (otherlv_68= '!=' ( ( (lv_lefthanded_69_0= 'false' ) ) | otherlv_70= 'true' ) ) | ( (otherlv_71= '=' | otherlv_72= '==' ) ( ( (lv_lefthanded_73_0= 'true' ) ) | otherlv_74= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_75= '&' ( ( ( (lv_pullingDefined_76_0= '!' ) ) otherlv_77= 'pulling' ) | ( ( (lv_pullingDefined_78_0= 'pulling' ) ) ( (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) ) | ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_86= '&' ( ( ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing' ) | ( ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_97= '&' ( (lv_timeDefined_98_0= 'time' ) ) (otherlv_99= '=' | otherlv_100= '==' ) ( (lv_time_101_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) ) ) ) ) ) )* ) ) ) )
            // InternalMcmodel.g:11636:3: ( (lv_pullDefined_0_0= 'pull' ) ) (otherlv_1= '=' | otherlv_2= '==' ) ( (lv_pull_3_0= RULE_PERCENTAGE ) ) ( ( ( ( ({...}? => ( ({...}? => (otherlv_5= '&' ( (lv_angleDefined_6_0= 'angle' ) ) (otherlv_7= '=' | otherlv_8= '==' ) ( (lv_angle_9_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= '&' ( ( ( (lv_blockingDefined_11_0= '!' ) ) otherlv_12= 'blocking' ) | ( ( (lv_blockingDefined_13_0= 'blocking' ) ) ( (otherlv_14= '!=' ( ( (lv_blocking_15_0= 'false' ) ) | otherlv_16= 'true' ) ) | ( (otherlv_17= '=' | otherlv_18= '==' ) ( ( (lv_blocking_19_0= 'true' ) ) | otherlv_20= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= '&' ( ( ( (lv_brokenDefined_22_0= '!' ) ) otherlv_23= 'broken' ) | ( ( (lv_brokenDefined_24_0= 'broken' ) ) ( (otherlv_25= '!=' ( ( (lv_broken_26_0= 'false' ) ) | otherlv_27= 'true' ) ) | ( (otherlv_28= '=' | otherlv_29= '==' ) ( ( (lv_broken_30_0= 'true' ) ) | otherlv_31= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_32= '&' ( ( ( (lv_castDefined_33_0= '!' ) ) otherlv_34= 'cast' ) | ( ( (lv_castDefined_35_0= 'cast' ) ) ( (otherlv_36= '!=' ( ( (lv_cast_37_0= 'false' ) ) | otherlv_38= 'true' ) ) | ( (otherlv_39= '=' | otherlv_40= '==' ) ( ( (lv_cast_41_0= 'true' ) ) | otherlv_42= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= '&' ( (lv_cooldownDefined_44_0= 'cooldown' ) ) (otherlv_45= '=' | otherlv_46= '==' ) ( (lv_cooldown_47_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_48= '&' ( (lv_damageDefined_49_0= 'damage' ) ) (otherlv_50= '=' | otherlv_51= '==' ) ( (lv_damage_52_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_53= '&' ( ( ( (lv_damagedDefined_54_0= '!' ) ) otherlv_55= 'damaged' ) | ( ( (lv_damagedDefined_56_0= 'damaged' ) ) ( (otherlv_57= '!=' ( ( (lv_damaged_58_0= 'false' ) ) | otherlv_59= 'true' ) ) | ( (otherlv_60= '=' | otherlv_61= '==' ) ( ( (lv_damaged_62_0= 'true' ) ) | otherlv_63= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_64= '&' ( ( ( (lv_lefthandedDefined_65_0= '!' ) ) otherlv_66= 'lefthanded' ) | ( ( (lv_lefthandedDefined_67_0= 'lefthanded' ) ) ( (otherlv_68= '!=' ( ( (lv_lefthanded_69_0= 'false' ) ) | otherlv_70= 'true' ) ) | ( (otherlv_71= '=' | otherlv_72= '==' ) ( ( (lv_lefthanded_73_0= 'true' ) ) | otherlv_74= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_75= '&' ( ( ( (lv_pullingDefined_76_0= '!' ) ) otherlv_77= 'pulling' ) | ( ( (lv_pullingDefined_78_0= 'pulling' ) ) ( (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) ) | ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_86= '&' ( ( ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing' ) | ( ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_97= '&' ( (lv_timeDefined_98_0= 'time' ) ) (otherlv_99= '=' | otherlv_100= '==' ) ( (lv_time_101_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) ) ) ) ) ) )* ) ) )
            {
            // InternalMcmodel.g:11636:3: ( (lv_pullDefined_0_0= 'pull' ) )
            // InternalMcmodel.g:11637:4: (lv_pullDefined_0_0= 'pull' )
            {
            // InternalMcmodel.g:11637:4: (lv_pullDefined_0_0= 'pull' )
            // InternalMcmodel.g:11638:5: lv_pullDefined_0_0= 'pull'
            {
            lv_pullDefined_0_0=(Token)match(input,69,FOLLOW_35); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_pullDefined_0_0, grammarAccess.getOverridePredicate_9Access().getPullDefinedPullKeyword_0_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getOverridePredicate_9Rule());
              					}
              					setWithLastConsumed(current, "pullDefined", true, "pull");
              				
            }

            }


            }

            // InternalMcmodel.g:11650:3: (otherlv_1= '=' | otherlv_2= '==' )
            int alt358=2;
            int LA358_0 = input.LA(1);

            if ( (LA358_0==18) ) {
                alt358=1;
            }
            else if ( (LA358_0==58) ) {
                alt358=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 358, 0, input);

                throw nvae;
            }
            switch (alt358) {
                case 1 :
                    // InternalMcmodel.g:11651:4: otherlv_1= '='
                    {
                    otherlv_1=(Token)match(input,18,FOLLOW_36); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getOverridePredicate_9Access().getEqualsSignKeyword_1_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalMcmodel.g:11656:4: otherlv_2= '=='
                    {
                    otherlv_2=(Token)match(input,58,FOLLOW_36); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getOverridePredicate_9Access().getEqualsSignEqualsSignKeyword_1_1());
                      			
                    }

                    }
                    break;

            }

            // InternalMcmodel.g:11661:3: ( (lv_pull_3_0= RULE_PERCENTAGE ) )
            // InternalMcmodel.g:11662:4: (lv_pull_3_0= RULE_PERCENTAGE )
            {
            // InternalMcmodel.g:11662:4: (lv_pull_3_0= RULE_PERCENTAGE )
            // InternalMcmodel.g:11663:5: lv_pull_3_0= RULE_PERCENTAGE
            {
            lv_pull_3_0=(Token)match(input,RULE_PERCENTAGE,FOLLOW_37); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_pull_3_0, grammarAccess.getOverridePredicate_9Access().getPullPERCENTAGETerminalRuleCall_2_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getOverridePredicate_9Rule());
              					}
              					setWithLastConsumed(
              						current,
              						"pull",
              						lv_pull_3_0,
              						"com.raptor.mcmodel.Mcmodel.PERCENTAGE");
              				
            }

            }


            }

            // InternalMcmodel.g:11679:3: ( ( ( ( ({...}? => ( ({...}? => (otherlv_5= '&' ( (lv_angleDefined_6_0= 'angle' ) ) (otherlv_7= '=' | otherlv_8= '==' ) ( (lv_angle_9_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= '&' ( ( ( (lv_blockingDefined_11_0= '!' ) ) otherlv_12= 'blocking' ) | ( ( (lv_blockingDefined_13_0= 'blocking' ) ) ( (otherlv_14= '!=' ( ( (lv_blocking_15_0= 'false' ) ) | otherlv_16= 'true' ) ) | ( (otherlv_17= '=' | otherlv_18= '==' ) ( ( (lv_blocking_19_0= 'true' ) ) | otherlv_20= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= '&' ( ( ( (lv_brokenDefined_22_0= '!' ) ) otherlv_23= 'broken' ) | ( ( (lv_brokenDefined_24_0= 'broken' ) ) ( (otherlv_25= '!=' ( ( (lv_broken_26_0= 'false' ) ) | otherlv_27= 'true' ) ) | ( (otherlv_28= '=' | otherlv_29= '==' ) ( ( (lv_broken_30_0= 'true' ) ) | otherlv_31= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_32= '&' ( ( ( (lv_castDefined_33_0= '!' ) ) otherlv_34= 'cast' ) | ( ( (lv_castDefined_35_0= 'cast' ) ) ( (otherlv_36= '!=' ( ( (lv_cast_37_0= 'false' ) ) | otherlv_38= 'true' ) ) | ( (otherlv_39= '=' | otherlv_40= '==' ) ( ( (lv_cast_41_0= 'true' ) ) | otherlv_42= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= '&' ( (lv_cooldownDefined_44_0= 'cooldown' ) ) (otherlv_45= '=' | otherlv_46= '==' ) ( (lv_cooldown_47_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_48= '&' ( (lv_damageDefined_49_0= 'damage' ) ) (otherlv_50= '=' | otherlv_51= '==' ) ( (lv_damage_52_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_53= '&' ( ( ( (lv_damagedDefined_54_0= '!' ) ) otherlv_55= 'damaged' ) | ( ( (lv_damagedDefined_56_0= 'damaged' ) ) ( (otherlv_57= '!=' ( ( (lv_damaged_58_0= 'false' ) ) | otherlv_59= 'true' ) ) | ( (otherlv_60= '=' | otherlv_61= '==' ) ( ( (lv_damaged_62_0= 'true' ) ) | otherlv_63= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_64= '&' ( ( ( (lv_lefthandedDefined_65_0= '!' ) ) otherlv_66= 'lefthanded' ) | ( ( (lv_lefthandedDefined_67_0= 'lefthanded' ) ) ( (otherlv_68= '!=' ( ( (lv_lefthanded_69_0= 'false' ) ) | otherlv_70= 'true' ) ) | ( (otherlv_71= '=' | otherlv_72= '==' ) ( ( (lv_lefthanded_73_0= 'true' ) ) | otherlv_74= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_75= '&' ( ( ( (lv_pullingDefined_76_0= '!' ) ) otherlv_77= 'pulling' ) | ( ( (lv_pullingDefined_78_0= 'pulling' ) ) ( (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) ) | ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_86= '&' ( ( ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing' ) | ( ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_97= '&' ( (lv_timeDefined_98_0= 'time' ) ) (otherlv_99= '=' | otherlv_100= '==' ) ( (lv_time_101_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) ) ) ) ) ) )* ) ) )
            // InternalMcmodel.g:11680:4: ( ( ( ({...}? => ( ({...}? => (otherlv_5= '&' ( (lv_angleDefined_6_0= 'angle' ) ) (otherlv_7= '=' | otherlv_8= '==' ) ( (lv_angle_9_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= '&' ( ( ( (lv_blockingDefined_11_0= '!' ) ) otherlv_12= 'blocking' ) | ( ( (lv_blockingDefined_13_0= 'blocking' ) ) ( (otherlv_14= '!=' ( ( (lv_blocking_15_0= 'false' ) ) | otherlv_16= 'true' ) ) | ( (otherlv_17= '=' | otherlv_18= '==' ) ( ( (lv_blocking_19_0= 'true' ) ) | otherlv_20= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= '&' ( ( ( (lv_brokenDefined_22_0= '!' ) ) otherlv_23= 'broken' ) | ( ( (lv_brokenDefined_24_0= 'broken' ) ) ( (otherlv_25= '!=' ( ( (lv_broken_26_0= 'false' ) ) | otherlv_27= 'true' ) ) | ( (otherlv_28= '=' | otherlv_29= '==' ) ( ( (lv_broken_30_0= 'true' ) ) | otherlv_31= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_32= '&' ( ( ( (lv_castDefined_33_0= '!' ) ) otherlv_34= 'cast' ) | ( ( (lv_castDefined_35_0= 'cast' ) ) ( (otherlv_36= '!=' ( ( (lv_cast_37_0= 'false' ) ) | otherlv_38= 'true' ) ) | ( (otherlv_39= '=' | otherlv_40= '==' ) ( ( (lv_cast_41_0= 'true' ) ) | otherlv_42= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= '&' ( (lv_cooldownDefined_44_0= 'cooldown' ) ) (otherlv_45= '=' | otherlv_46= '==' ) ( (lv_cooldown_47_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_48= '&' ( (lv_damageDefined_49_0= 'damage' ) ) (otherlv_50= '=' | otherlv_51= '==' ) ( (lv_damage_52_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_53= '&' ( ( ( (lv_damagedDefined_54_0= '!' ) ) otherlv_55= 'damaged' ) | ( ( (lv_damagedDefined_56_0= 'damaged' ) ) ( (otherlv_57= '!=' ( ( (lv_damaged_58_0= 'false' ) ) | otherlv_59= 'true' ) ) | ( (otherlv_60= '=' | otherlv_61= '==' ) ( ( (lv_damaged_62_0= 'true' ) ) | otherlv_63= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_64= '&' ( ( ( (lv_lefthandedDefined_65_0= '!' ) ) otherlv_66= 'lefthanded' ) | ( ( (lv_lefthandedDefined_67_0= 'lefthanded' ) ) ( (otherlv_68= '!=' ( ( (lv_lefthanded_69_0= 'false' ) ) | otherlv_70= 'true' ) ) | ( (otherlv_71= '=' | otherlv_72= '==' ) ( ( (lv_lefthanded_73_0= 'true' ) ) | otherlv_74= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_75= '&' ( ( ( (lv_pullingDefined_76_0= '!' ) ) otherlv_77= 'pulling' ) | ( ( (lv_pullingDefined_78_0= 'pulling' ) ) ( (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) ) | ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_86= '&' ( ( ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing' ) | ( ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_97= '&' ( (lv_timeDefined_98_0= 'time' ) ) (otherlv_99= '=' | otherlv_100= '==' ) ( (lv_time_101_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) ) ) ) ) ) )* ) )
            {
            // InternalMcmodel.g:11680:4: ( ( ( ({...}? => ( ({...}? => (otherlv_5= '&' ( (lv_angleDefined_6_0= 'angle' ) ) (otherlv_7= '=' | otherlv_8= '==' ) ( (lv_angle_9_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= '&' ( ( ( (lv_blockingDefined_11_0= '!' ) ) otherlv_12= 'blocking' ) | ( ( (lv_blockingDefined_13_0= 'blocking' ) ) ( (otherlv_14= '!=' ( ( (lv_blocking_15_0= 'false' ) ) | otherlv_16= 'true' ) ) | ( (otherlv_17= '=' | otherlv_18= '==' ) ( ( (lv_blocking_19_0= 'true' ) ) | otherlv_20= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= '&' ( ( ( (lv_brokenDefined_22_0= '!' ) ) otherlv_23= 'broken' ) | ( ( (lv_brokenDefined_24_0= 'broken' ) ) ( (otherlv_25= '!=' ( ( (lv_broken_26_0= 'false' ) ) | otherlv_27= 'true' ) ) | ( (otherlv_28= '=' | otherlv_29= '==' ) ( ( (lv_broken_30_0= 'true' ) ) | otherlv_31= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_32= '&' ( ( ( (lv_castDefined_33_0= '!' ) ) otherlv_34= 'cast' ) | ( ( (lv_castDefined_35_0= 'cast' ) ) ( (otherlv_36= '!=' ( ( (lv_cast_37_0= 'false' ) ) | otherlv_38= 'true' ) ) | ( (otherlv_39= '=' | otherlv_40= '==' ) ( ( (lv_cast_41_0= 'true' ) ) | otherlv_42= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= '&' ( (lv_cooldownDefined_44_0= 'cooldown' ) ) (otherlv_45= '=' | otherlv_46= '==' ) ( (lv_cooldown_47_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_48= '&' ( (lv_damageDefined_49_0= 'damage' ) ) (otherlv_50= '=' | otherlv_51= '==' ) ( (lv_damage_52_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_53= '&' ( ( ( (lv_damagedDefined_54_0= '!' ) ) otherlv_55= 'damaged' ) | ( ( (lv_damagedDefined_56_0= 'damaged' ) ) ( (otherlv_57= '!=' ( ( (lv_damaged_58_0= 'false' ) ) | otherlv_59= 'true' ) ) | ( (otherlv_60= '=' | otherlv_61= '==' ) ( ( (lv_damaged_62_0= 'true' ) ) | otherlv_63= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_64= '&' ( ( ( (lv_lefthandedDefined_65_0= '!' ) ) otherlv_66= 'lefthanded' ) | ( ( (lv_lefthandedDefined_67_0= 'lefthanded' ) ) ( (otherlv_68= '!=' ( ( (lv_lefthanded_69_0= 'false' ) ) | otherlv_70= 'true' ) ) | ( (otherlv_71= '=' | otherlv_72= '==' ) ( ( (lv_lefthanded_73_0= 'true' ) ) | otherlv_74= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_75= '&' ( ( ( (lv_pullingDefined_76_0= '!' ) ) otherlv_77= 'pulling' ) | ( ( (lv_pullingDefined_78_0= 'pulling' ) ) ( (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) ) | ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_86= '&' ( ( ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing' ) | ( ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_97= '&' ( (lv_timeDefined_98_0= 'time' ) ) (otherlv_99= '=' | otherlv_100= '==' ) ( (lv_time_101_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) ) ) ) ) ) )* ) )
            // InternalMcmodel.g:11681:5: ( ( ({...}? => ( ({...}? => (otherlv_5= '&' ( (lv_angleDefined_6_0= 'angle' ) ) (otherlv_7= '=' | otherlv_8= '==' ) ( (lv_angle_9_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= '&' ( ( ( (lv_blockingDefined_11_0= '!' ) ) otherlv_12= 'blocking' ) | ( ( (lv_blockingDefined_13_0= 'blocking' ) ) ( (otherlv_14= '!=' ( ( (lv_blocking_15_0= 'false' ) ) | otherlv_16= 'true' ) ) | ( (otherlv_17= '=' | otherlv_18= '==' ) ( ( (lv_blocking_19_0= 'true' ) ) | otherlv_20= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= '&' ( ( ( (lv_brokenDefined_22_0= '!' ) ) otherlv_23= 'broken' ) | ( ( (lv_brokenDefined_24_0= 'broken' ) ) ( (otherlv_25= '!=' ( ( (lv_broken_26_0= 'false' ) ) | otherlv_27= 'true' ) ) | ( (otherlv_28= '=' | otherlv_29= '==' ) ( ( (lv_broken_30_0= 'true' ) ) | otherlv_31= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_32= '&' ( ( ( (lv_castDefined_33_0= '!' ) ) otherlv_34= 'cast' ) | ( ( (lv_castDefined_35_0= 'cast' ) ) ( (otherlv_36= '!=' ( ( (lv_cast_37_0= 'false' ) ) | otherlv_38= 'true' ) ) | ( (otherlv_39= '=' | otherlv_40= '==' ) ( ( (lv_cast_41_0= 'true' ) ) | otherlv_42= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= '&' ( (lv_cooldownDefined_44_0= 'cooldown' ) ) (otherlv_45= '=' | otherlv_46= '==' ) ( (lv_cooldown_47_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_48= '&' ( (lv_damageDefined_49_0= 'damage' ) ) (otherlv_50= '=' | otherlv_51= '==' ) ( (lv_damage_52_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_53= '&' ( ( ( (lv_damagedDefined_54_0= '!' ) ) otherlv_55= 'damaged' ) | ( ( (lv_damagedDefined_56_0= 'damaged' ) ) ( (otherlv_57= '!=' ( ( (lv_damaged_58_0= 'false' ) ) | otherlv_59= 'true' ) ) | ( (otherlv_60= '=' | otherlv_61= '==' ) ( ( (lv_damaged_62_0= 'true' ) ) | otherlv_63= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_64= '&' ( ( ( (lv_lefthandedDefined_65_0= '!' ) ) otherlv_66= 'lefthanded' ) | ( ( (lv_lefthandedDefined_67_0= 'lefthanded' ) ) ( (otherlv_68= '!=' ( ( (lv_lefthanded_69_0= 'false' ) ) | otherlv_70= 'true' ) ) | ( (otherlv_71= '=' | otherlv_72= '==' ) ( ( (lv_lefthanded_73_0= 'true' ) ) | otherlv_74= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_75= '&' ( ( ( (lv_pullingDefined_76_0= '!' ) ) otherlv_77= 'pulling' ) | ( ( (lv_pullingDefined_78_0= 'pulling' ) ) ( (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) ) | ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_86= '&' ( ( ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing' ) | ( ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_97= '&' ( (lv_timeDefined_98_0= 'time' ) ) (otherlv_99= '=' | otherlv_100= '==' ) ( (lv_time_101_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) ) ) ) ) ) )* )
            {
            getUnorderedGroupHelper().enter(grammarAccess.getOverridePredicate_9Access().getUnorderedGroup_3());
            // InternalMcmodel.g:11684:5: ( ( ({...}? => ( ({...}? => (otherlv_5= '&' ( (lv_angleDefined_6_0= 'angle' ) ) (otherlv_7= '=' | otherlv_8= '==' ) ( (lv_angle_9_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= '&' ( ( ( (lv_blockingDefined_11_0= '!' ) ) otherlv_12= 'blocking' ) | ( ( (lv_blockingDefined_13_0= 'blocking' ) ) ( (otherlv_14= '!=' ( ( (lv_blocking_15_0= 'false' ) ) | otherlv_16= 'true' ) ) | ( (otherlv_17= '=' | otherlv_18= '==' ) ( ( (lv_blocking_19_0= 'true' ) ) | otherlv_20= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= '&' ( ( ( (lv_brokenDefined_22_0= '!' ) ) otherlv_23= 'broken' ) | ( ( (lv_brokenDefined_24_0= 'broken' ) ) ( (otherlv_25= '!=' ( ( (lv_broken_26_0= 'false' ) ) | otherlv_27= 'true' ) ) | ( (otherlv_28= '=' | otherlv_29= '==' ) ( ( (lv_broken_30_0= 'true' ) ) | otherlv_31= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_32= '&' ( ( ( (lv_castDefined_33_0= '!' ) ) otherlv_34= 'cast' ) | ( ( (lv_castDefined_35_0= 'cast' ) ) ( (otherlv_36= '!=' ( ( (lv_cast_37_0= 'false' ) ) | otherlv_38= 'true' ) ) | ( (otherlv_39= '=' | otherlv_40= '==' ) ( ( (lv_cast_41_0= 'true' ) ) | otherlv_42= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= '&' ( (lv_cooldownDefined_44_0= 'cooldown' ) ) (otherlv_45= '=' | otherlv_46= '==' ) ( (lv_cooldown_47_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_48= '&' ( (lv_damageDefined_49_0= 'damage' ) ) (otherlv_50= '=' | otherlv_51= '==' ) ( (lv_damage_52_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_53= '&' ( ( ( (lv_damagedDefined_54_0= '!' ) ) otherlv_55= 'damaged' ) | ( ( (lv_damagedDefined_56_0= 'damaged' ) ) ( (otherlv_57= '!=' ( ( (lv_damaged_58_0= 'false' ) ) | otherlv_59= 'true' ) ) | ( (otherlv_60= '=' | otherlv_61= '==' ) ( ( (lv_damaged_62_0= 'true' ) ) | otherlv_63= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_64= '&' ( ( ( (lv_lefthandedDefined_65_0= '!' ) ) otherlv_66= 'lefthanded' ) | ( ( (lv_lefthandedDefined_67_0= 'lefthanded' ) ) ( (otherlv_68= '!=' ( ( (lv_lefthanded_69_0= 'false' ) ) | otherlv_70= 'true' ) ) | ( (otherlv_71= '=' | otherlv_72= '==' ) ( ( (lv_lefthanded_73_0= 'true' ) ) | otherlv_74= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_75= '&' ( ( ( (lv_pullingDefined_76_0= '!' ) ) otherlv_77= 'pulling' ) | ( ( (lv_pullingDefined_78_0= 'pulling' ) ) ( (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) ) | ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_86= '&' ( ( ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing' ) | ( ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_97= '&' ( (lv_timeDefined_98_0= 'time' ) ) (otherlv_99= '=' | otherlv_100= '==' ) ( (lv_time_101_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) ) ) ) ) ) )* )
            // InternalMcmodel.g:11685:6: ( ({...}? => ( ({...}? => (otherlv_5= '&' ( (lv_angleDefined_6_0= 'angle' ) ) (otherlv_7= '=' | otherlv_8= '==' ) ( (lv_angle_9_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= '&' ( ( ( (lv_blockingDefined_11_0= '!' ) ) otherlv_12= 'blocking' ) | ( ( (lv_blockingDefined_13_0= 'blocking' ) ) ( (otherlv_14= '!=' ( ( (lv_blocking_15_0= 'false' ) ) | otherlv_16= 'true' ) ) | ( (otherlv_17= '=' | otherlv_18= '==' ) ( ( (lv_blocking_19_0= 'true' ) ) | otherlv_20= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= '&' ( ( ( (lv_brokenDefined_22_0= '!' ) ) otherlv_23= 'broken' ) | ( ( (lv_brokenDefined_24_0= 'broken' ) ) ( (otherlv_25= '!=' ( ( (lv_broken_26_0= 'false' ) ) | otherlv_27= 'true' ) ) | ( (otherlv_28= '=' | otherlv_29= '==' ) ( ( (lv_broken_30_0= 'true' ) ) | otherlv_31= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_32= '&' ( ( ( (lv_castDefined_33_0= '!' ) ) otherlv_34= 'cast' ) | ( ( (lv_castDefined_35_0= 'cast' ) ) ( (otherlv_36= '!=' ( ( (lv_cast_37_0= 'false' ) ) | otherlv_38= 'true' ) ) | ( (otherlv_39= '=' | otherlv_40= '==' ) ( ( (lv_cast_41_0= 'true' ) ) | otherlv_42= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= '&' ( (lv_cooldownDefined_44_0= 'cooldown' ) ) (otherlv_45= '=' | otherlv_46= '==' ) ( (lv_cooldown_47_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_48= '&' ( (lv_damageDefined_49_0= 'damage' ) ) (otherlv_50= '=' | otherlv_51= '==' ) ( (lv_damage_52_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_53= '&' ( ( ( (lv_damagedDefined_54_0= '!' ) ) otherlv_55= 'damaged' ) | ( ( (lv_damagedDefined_56_0= 'damaged' ) ) ( (otherlv_57= '!=' ( ( (lv_damaged_58_0= 'false' ) ) | otherlv_59= 'true' ) ) | ( (otherlv_60= '=' | otherlv_61= '==' ) ( ( (lv_damaged_62_0= 'true' ) ) | otherlv_63= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_64= '&' ( ( ( (lv_lefthandedDefined_65_0= '!' ) ) otherlv_66= 'lefthanded' ) | ( ( (lv_lefthandedDefined_67_0= 'lefthanded' ) ) ( (otherlv_68= '!=' ( ( (lv_lefthanded_69_0= 'false' ) ) | otherlv_70= 'true' ) ) | ( (otherlv_71= '=' | otherlv_72= '==' ) ( ( (lv_lefthanded_73_0= 'true' ) ) | otherlv_74= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_75= '&' ( ( ( (lv_pullingDefined_76_0= '!' ) ) otherlv_77= 'pulling' ) | ( ( (lv_pullingDefined_78_0= 'pulling' ) ) ( (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) ) | ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_86= '&' ( ( ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing' ) | ( ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_97= '&' ( (lv_timeDefined_98_0= 'time' ) ) (otherlv_99= '=' | otherlv_100= '==' ) ( (lv_time_101_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) ) ) ) ) ) )*
            {
            // InternalMcmodel.g:11685:6: ( ({...}? => ( ({...}? => (otherlv_5= '&' ( (lv_angleDefined_6_0= 'angle' ) ) (otherlv_7= '=' | otherlv_8= '==' ) ( (lv_angle_9_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= '&' ( ( ( (lv_blockingDefined_11_0= '!' ) ) otherlv_12= 'blocking' ) | ( ( (lv_blockingDefined_13_0= 'blocking' ) ) ( (otherlv_14= '!=' ( ( (lv_blocking_15_0= 'false' ) ) | otherlv_16= 'true' ) ) | ( (otherlv_17= '=' | otherlv_18= '==' ) ( ( (lv_blocking_19_0= 'true' ) ) | otherlv_20= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= '&' ( ( ( (lv_brokenDefined_22_0= '!' ) ) otherlv_23= 'broken' ) | ( ( (lv_brokenDefined_24_0= 'broken' ) ) ( (otherlv_25= '!=' ( ( (lv_broken_26_0= 'false' ) ) | otherlv_27= 'true' ) ) | ( (otherlv_28= '=' | otherlv_29= '==' ) ( ( (lv_broken_30_0= 'true' ) ) | otherlv_31= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_32= '&' ( ( ( (lv_castDefined_33_0= '!' ) ) otherlv_34= 'cast' ) | ( ( (lv_castDefined_35_0= 'cast' ) ) ( (otherlv_36= '!=' ( ( (lv_cast_37_0= 'false' ) ) | otherlv_38= 'true' ) ) | ( (otherlv_39= '=' | otherlv_40= '==' ) ( ( (lv_cast_41_0= 'true' ) ) | otherlv_42= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= '&' ( (lv_cooldownDefined_44_0= 'cooldown' ) ) (otherlv_45= '=' | otherlv_46= '==' ) ( (lv_cooldown_47_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_48= '&' ( (lv_damageDefined_49_0= 'damage' ) ) (otherlv_50= '=' | otherlv_51= '==' ) ( (lv_damage_52_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_53= '&' ( ( ( (lv_damagedDefined_54_0= '!' ) ) otherlv_55= 'damaged' ) | ( ( (lv_damagedDefined_56_0= 'damaged' ) ) ( (otherlv_57= '!=' ( ( (lv_damaged_58_0= 'false' ) ) | otherlv_59= 'true' ) ) | ( (otherlv_60= '=' | otherlv_61= '==' ) ( ( (lv_damaged_62_0= 'true' ) ) | otherlv_63= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_64= '&' ( ( ( (lv_lefthandedDefined_65_0= '!' ) ) otherlv_66= 'lefthanded' ) | ( ( (lv_lefthandedDefined_67_0= 'lefthanded' ) ) ( (otherlv_68= '!=' ( ( (lv_lefthanded_69_0= 'false' ) ) | otherlv_70= 'true' ) ) | ( (otherlv_71= '=' | otherlv_72= '==' ) ( ( (lv_lefthanded_73_0= 'true' ) ) | otherlv_74= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_75= '&' ( ( ( (lv_pullingDefined_76_0= '!' ) ) otherlv_77= 'pulling' ) | ( ( (lv_pullingDefined_78_0= 'pulling' ) ) ( (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) ) | ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_86= '&' ( ( ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing' ) | ( ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_97= '&' ( (lv_timeDefined_98_0= 'time' ) ) (otherlv_99= '=' | otherlv_100= '==' ) ( (lv_time_101_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) ) ) ) ) ) )*
            loop399:
            do {
                int alt399=13;
                alt399 = dfa399.predict(input);
                switch (alt399) {
            	case 1 :
            	    // InternalMcmodel.g:11686:4: ({...}? => ( ({...}? => (otherlv_5= '&' ( (lv_angleDefined_6_0= 'angle' ) ) (otherlv_7= '=' | otherlv_8= '==' ) ( (lv_angle_9_0= RULE_PERCENTAGE ) ) ) ) ) )
            	    {
            	    // InternalMcmodel.g:11686:4: ({...}? => ( ({...}? => (otherlv_5= '&' ( (lv_angleDefined_6_0= 'angle' ) ) (otherlv_7= '=' | otherlv_8= '==' ) ( (lv_angle_9_0= RULE_PERCENTAGE ) ) ) ) ) )
            	    // InternalMcmodel.g:11687:5: {...}? => ( ({...}? => (otherlv_5= '&' ( (lv_angleDefined_6_0= 'angle' ) ) (otherlv_7= '=' | otherlv_8= '==' ) ( (lv_angle_9_0= RULE_PERCENTAGE ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_9Access().getUnorderedGroup_3(), 0) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_9", "getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_9Access().getUnorderedGroup_3(), 0)");
            	    }
            	    // InternalMcmodel.g:11687:116: ( ({...}? => (otherlv_5= '&' ( (lv_angleDefined_6_0= 'angle' ) ) (otherlv_7= '=' | otherlv_8= '==' ) ( (lv_angle_9_0= RULE_PERCENTAGE ) ) ) ) )
            	    // InternalMcmodel.g:11688:6: ({...}? => (otherlv_5= '&' ( (lv_angleDefined_6_0= 'angle' ) ) (otherlv_7= '=' | otherlv_8= '==' ) ( (lv_angle_9_0= RULE_PERCENTAGE ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getOverridePredicate_9Access().getUnorderedGroup_3(), 0);
            	    // InternalMcmodel.g:11691:9: ({...}? => (otherlv_5= '&' ( (lv_angleDefined_6_0= 'angle' ) ) (otherlv_7= '=' | otherlv_8= '==' ) ( (lv_angle_9_0= RULE_PERCENTAGE ) ) ) )
            	    // InternalMcmodel.g:11691:10: {...}? => (otherlv_5= '&' ( (lv_angleDefined_6_0= 'angle' ) ) (otherlv_7= '=' | otherlv_8= '==' ) ( (lv_angle_9_0= RULE_PERCENTAGE ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_9", "true");
            	    }
            	    // InternalMcmodel.g:11691:19: (otherlv_5= '&' ( (lv_angleDefined_6_0= 'angle' ) ) (otherlv_7= '=' | otherlv_8= '==' ) ( (lv_angle_9_0= RULE_PERCENTAGE ) ) )
            	    // InternalMcmodel.g:11691:20: otherlv_5= '&' ( (lv_angleDefined_6_0= 'angle' ) ) (otherlv_7= '=' | otherlv_8= '==' ) ( (lv_angle_9_0= RULE_PERCENTAGE ) )
            	    {
            	    otherlv_5=(Token)match(input,59,FOLLOW_58); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_5, grammarAccess.getOverridePredicate_9Access().getAmpersandKeyword_3_0_0());
            	      								
            	    }
            	    // InternalMcmodel.g:11695:9: ( (lv_angleDefined_6_0= 'angle' ) )
            	    // InternalMcmodel.g:11696:10: (lv_angleDefined_6_0= 'angle' )
            	    {
            	    // InternalMcmodel.g:11696:10: (lv_angleDefined_6_0= 'angle' )
            	    // InternalMcmodel.g:11697:11: lv_angleDefined_6_0= 'angle'
            	    {
            	    lv_angleDefined_6_0=(Token)match(input,38,FOLLOW_35); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											newLeafNode(lv_angleDefined_6_0, grammarAccess.getOverridePredicate_9Access().getAngleDefinedAngleKeyword_3_0_1_0());
            	      										
            	    }
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElement(grammarAccess.getOverridePredicate_9Rule());
            	      											}
            	      											setWithLastConsumed(current, "angleDefined", true, "angle");
            	      										
            	    }

            	    }


            	    }

            	    // InternalMcmodel.g:11709:9: (otherlv_7= '=' | otherlv_8= '==' )
            	    int alt359=2;
            	    int LA359_0 = input.LA(1);

            	    if ( (LA359_0==18) ) {
            	        alt359=1;
            	    }
            	    else if ( (LA359_0==58) ) {
            	        alt359=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 359, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt359) {
            	        case 1 :
            	            // InternalMcmodel.g:11710:10: otherlv_7= '='
            	            {
            	            otherlv_7=(Token)match(input,18,FOLLOW_36); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(otherlv_7, grammarAccess.getOverridePredicate_9Access().getEqualsSignKeyword_3_0_2_0());
            	              									
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalMcmodel.g:11715:10: otherlv_8= '=='
            	            {
            	            otherlv_8=(Token)match(input,58,FOLLOW_36); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(otherlv_8, grammarAccess.getOverridePredicate_9Access().getEqualsSignEqualsSignKeyword_3_0_2_1());
            	              									
            	            }

            	            }
            	            break;

            	    }

            	    // InternalMcmodel.g:11720:9: ( (lv_angle_9_0= RULE_PERCENTAGE ) )
            	    // InternalMcmodel.g:11721:10: (lv_angle_9_0= RULE_PERCENTAGE )
            	    {
            	    // InternalMcmodel.g:11721:10: (lv_angle_9_0= RULE_PERCENTAGE )
            	    // InternalMcmodel.g:11722:11: lv_angle_9_0= RULE_PERCENTAGE
            	    {
            	    lv_angle_9_0=(Token)match(input,RULE_PERCENTAGE,FOLLOW_37); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											newLeafNode(lv_angle_9_0, grammarAccess.getOverridePredicate_9Access().getAnglePERCENTAGETerminalRuleCall_3_0_3_0());
            	      										
            	    }
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElement(grammarAccess.getOverridePredicate_9Rule());
            	      											}
            	      											setWithLastConsumed(
            	      												current,
            	      												"angle",
            	      												lv_angle_9_0,
            	      												"com.raptor.mcmodel.Mcmodel.PERCENTAGE");
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getOverridePredicate_9Access().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // InternalMcmodel.g:11744:4: ({...}? => ( ({...}? => (otherlv_10= '&' ( ( ( (lv_blockingDefined_11_0= '!' ) ) otherlv_12= 'blocking' ) | ( ( (lv_blockingDefined_13_0= 'blocking' ) ) ( (otherlv_14= '!=' ( ( (lv_blocking_15_0= 'false' ) ) | otherlv_16= 'true' ) ) | ( (otherlv_17= '=' | otherlv_18= '==' ) ( ( (lv_blocking_19_0= 'true' ) ) | otherlv_20= 'false' ) ) ) ) ) ) ) ) )
            	    {
            	    // InternalMcmodel.g:11744:4: ({...}? => ( ({...}? => (otherlv_10= '&' ( ( ( (lv_blockingDefined_11_0= '!' ) ) otherlv_12= 'blocking' ) | ( ( (lv_blockingDefined_13_0= 'blocking' ) ) ( (otherlv_14= '!=' ( ( (lv_blocking_15_0= 'false' ) ) | otherlv_16= 'true' ) ) | ( (otherlv_17= '=' | otherlv_18= '==' ) ( ( (lv_blocking_19_0= 'true' ) ) | otherlv_20= 'false' ) ) ) ) ) ) ) ) )
            	    // InternalMcmodel.g:11745:5: {...}? => ( ({...}? => (otherlv_10= '&' ( ( ( (lv_blockingDefined_11_0= '!' ) ) otherlv_12= 'blocking' ) | ( ( (lv_blockingDefined_13_0= 'blocking' ) ) ( (otherlv_14= '!=' ( ( (lv_blocking_15_0= 'false' ) ) | otherlv_16= 'true' ) ) | ( (otherlv_17= '=' | otherlv_18= '==' ) ( ( (lv_blocking_19_0= 'true' ) ) | otherlv_20= 'false' ) ) ) ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_9Access().getUnorderedGroup_3(), 1) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_9", "getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_9Access().getUnorderedGroup_3(), 1)");
            	    }
            	    // InternalMcmodel.g:11745:116: ( ({...}? => (otherlv_10= '&' ( ( ( (lv_blockingDefined_11_0= '!' ) ) otherlv_12= 'blocking' ) | ( ( (lv_blockingDefined_13_0= 'blocking' ) ) ( (otherlv_14= '!=' ( ( (lv_blocking_15_0= 'false' ) ) | otherlv_16= 'true' ) ) | ( (otherlv_17= '=' | otherlv_18= '==' ) ( ( (lv_blocking_19_0= 'true' ) ) | otherlv_20= 'false' ) ) ) ) ) ) ) )
            	    // InternalMcmodel.g:11746:6: ({...}? => (otherlv_10= '&' ( ( ( (lv_blockingDefined_11_0= '!' ) ) otherlv_12= 'blocking' ) | ( ( (lv_blockingDefined_13_0= 'blocking' ) ) ( (otherlv_14= '!=' ( ( (lv_blocking_15_0= 'false' ) ) | otherlv_16= 'true' ) ) | ( (otherlv_17= '=' | otherlv_18= '==' ) ( ( (lv_blocking_19_0= 'true' ) ) | otherlv_20= 'false' ) ) ) ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getOverridePredicate_9Access().getUnorderedGroup_3(), 1);
            	    // InternalMcmodel.g:11749:9: ({...}? => (otherlv_10= '&' ( ( ( (lv_blockingDefined_11_0= '!' ) ) otherlv_12= 'blocking' ) | ( ( (lv_blockingDefined_13_0= 'blocking' ) ) ( (otherlv_14= '!=' ( ( (lv_blocking_15_0= 'false' ) ) | otherlv_16= 'true' ) ) | ( (otherlv_17= '=' | otherlv_18= '==' ) ( ( (lv_blocking_19_0= 'true' ) ) | otherlv_20= 'false' ) ) ) ) ) ) )
            	    // InternalMcmodel.g:11749:10: {...}? => (otherlv_10= '&' ( ( ( (lv_blockingDefined_11_0= '!' ) ) otherlv_12= 'blocking' ) | ( ( (lv_blockingDefined_13_0= 'blocking' ) ) ( (otherlv_14= '!=' ( ( (lv_blocking_15_0= 'false' ) ) | otherlv_16= 'true' ) ) | ( (otherlv_17= '=' | otherlv_18= '==' ) ( ( (lv_blocking_19_0= 'true' ) ) | otherlv_20= 'false' ) ) ) ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_9", "true");
            	    }
            	    // InternalMcmodel.g:11749:19: (otherlv_10= '&' ( ( ( (lv_blockingDefined_11_0= '!' ) ) otherlv_12= 'blocking' ) | ( ( (lv_blockingDefined_13_0= 'blocking' ) ) ( (otherlv_14= '!=' ( ( (lv_blocking_15_0= 'false' ) ) | otherlv_16= 'true' ) ) | ( (otherlv_17= '=' | otherlv_18= '==' ) ( ( (lv_blocking_19_0= 'true' ) ) | otherlv_20= 'false' ) ) ) ) ) )
            	    // InternalMcmodel.g:11749:20: otherlv_10= '&' ( ( ( (lv_blockingDefined_11_0= '!' ) ) otherlv_12= 'blocking' ) | ( ( (lv_blockingDefined_13_0= 'blocking' ) ) ( (otherlv_14= '!=' ( ( (lv_blocking_15_0= 'false' ) ) | otherlv_16= 'true' ) ) | ( (otherlv_17= '=' | otherlv_18= '==' ) ( ( (lv_blocking_19_0= 'true' ) ) | otherlv_20= 'false' ) ) ) ) )
            	    {
            	    otherlv_10=(Token)match(input,59,FOLLOW_38); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_10, grammarAccess.getOverridePredicate_9Access().getAmpersandKeyword_3_1_0());
            	      								
            	    }
            	    // InternalMcmodel.g:11753:9: ( ( ( (lv_blockingDefined_11_0= '!' ) ) otherlv_12= 'blocking' ) | ( ( (lv_blockingDefined_13_0= 'blocking' ) ) ( (otherlv_14= '!=' ( ( (lv_blocking_15_0= 'false' ) ) | otherlv_16= 'true' ) ) | ( (otherlv_17= '=' | otherlv_18= '==' ) ( ( (lv_blocking_19_0= 'true' ) ) | otherlv_20= 'false' ) ) ) ) )
            	    int alt364=2;
            	    int LA364_0 = input.LA(1);

            	    if ( (LA364_0==60) ) {
            	        alt364=1;
            	    }
            	    else if ( (LA364_0==61) ) {
            	        alt364=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 364, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt364) {
            	        case 1 :
            	            // InternalMcmodel.g:11754:10: ( ( (lv_blockingDefined_11_0= '!' ) ) otherlv_12= 'blocking' )
            	            {
            	            // InternalMcmodel.g:11754:10: ( ( (lv_blockingDefined_11_0= '!' ) ) otherlv_12= 'blocking' )
            	            // InternalMcmodel.g:11755:11: ( (lv_blockingDefined_11_0= '!' ) ) otherlv_12= 'blocking'
            	            {
            	            // InternalMcmodel.g:11755:11: ( (lv_blockingDefined_11_0= '!' ) )
            	            // InternalMcmodel.g:11756:12: (lv_blockingDefined_11_0= '!' )
            	            {
            	            // InternalMcmodel.g:11756:12: (lv_blockingDefined_11_0= '!' )
            	            // InternalMcmodel.g:11757:13: lv_blockingDefined_11_0= '!'
            	            {
            	            lv_blockingDefined_11_0=(Token)match(input,60,FOLLOW_39); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              													newLeafNode(lv_blockingDefined_11_0, grammarAccess.getOverridePredicate_9Access().getBlockingDefinedExclamationMarkKeyword_3_1_1_0_0_0());
            	              												
            	            }
            	            if ( state.backtracking==0 ) {

            	              													if (current==null) {
            	              														current = createModelElement(grammarAccess.getOverridePredicate_9Rule());
            	              													}
            	              													setWithLastConsumed(current, "blockingDefined", true, "!");
            	              												
            	            }

            	            }


            	            }

            	            otherlv_12=(Token)match(input,61,FOLLOW_37); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              											newLeafNode(otherlv_12, grammarAccess.getOverridePredicate_9Access().getBlockingKeyword_3_1_1_0_1());
            	              										
            	            }

            	            }


            	            }
            	            break;
            	        case 2 :
            	            // InternalMcmodel.g:11775:10: ( ( (lv_blockingDefined_13_0= 'blocking' ) ) ( (otherlv_14= '!=' ( ( (lv_blocking_15_0= 'false' ) ) | otherlv_16= 'true' ) ) | ( (otherlv_17= '=' | otherlv_18= '==' ) ( ( (lv_blocking_19_0= 'true' ) ) | otherlv_20= 'false' ) ) ) )
            	            {
            	            // InternalMcmodel.g:11775:10: ( ( (lv_blockingDefined_13_0= 'blocking' ) ) ( (otherlv_14= '!=' ( ( (lv_blocking_15_0= 'false' ) ) | otherlv_16= 'true' ) ) | ( (otherlv_17= '=' | otherlv_18= '==' ) ( ( (lv_blocking_19_0= 'true' ) ) | otherlv_20= 'false' ) ) ) )
            	            // InternalMcmodel.g:11776:11: ( (lv_blockingDefined_13_0= 'blocking' ) ) ( (otherlv_14= '!=' ( ( (lv_blocking_15_0= 'false' ) ) | otherlv_16= 'true' ) ) | ( (otherlv_17= '=' | otherlv_18= '==' ) ( ( (lv_blocking_19_0= 'true' ) ) | otherlv_20= 'false' ) ) )
            	            {
            	            // InternalMcmodel.g:11776:11: ( (lv_blockingDefined_13_0= 'blocking' ) )
            	            // InternalMcmodel.g:11777:12: (lv_blockingDefined_13_0= 'blocking' )
            	            {
            	            // InternalMcmodel.g:11777:12: (lv_blockingDefined_13_0= 'blocking' )
            	            // InternalMcmodel.g:11778:13: lv_blockingDefined_13_0= 'blocking'
            	            {
            	            lv_blockingDefined_13_0=(Token)match(input,61,FOLLOW_40); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              													newLeafNode(lv_blockingDefined_13_0, grammarAccess.getOverridePredicate_9Access().getBlockingDefinedBlockingKeyword_3_1_1_1_0_0());
            	              												
            	            }
            	            if ( state.backtracking==0 ) {

            	              													if (current==null) {
            	              														current = createModelElement(grammarAccess.getOverridePredicate_9Rule());
            	              													}
            	              													setWithLastConsumed(current, "blockingDefined", true, "blocking");
            	              												
            	            }

            	            }


            	            }

            	            // InternalMcmodel.g:11790:11: ( (otherlv_14= '!=' ( ( (lv_blocking_15_0= 'false' ) ) | otherlv_16= 'true' ) ) | ( (otherlv_17= '=' | otherlv_18= '==' ) ( ( (lv_blocking_19_0= 'true' ) ) | otherlv_20= 'false' ) ) )
            	            int alt363=2;
            	            int LA363_0 = input.LA(1);

            	            if ( (LA363_0==62) ) {
            	                alt363=1;
            	            }
            	            else if ( (LA363_0==18||LA363_0==58) ) {
            	                alt363=2;
            	            }
            	            else {
            	                if (state.backtracking>0) {state.failed=true; return current;}
            	                NoViableAltException nvae =
            	                    new NoViableAltException("", 363, 0, input);

            	                throw nvae;
            	            }
            	            switch (alt363) {
            	                case 1 :
            	                    // InternalMcmodel.g:11791:12: (otherlv_14= '!=' ( ( (lv_blocking_15_0= 'false' ) ) | otherlv_16= 'true' ) )
            	                    {
            	                    // InternalMcmodel.g:11791:12: (otherlv_14= '!=' ( ( (lv_blocking_15_0= 'false' ) ) | otherlv_16= 'true' ) )
            	                    // InternalMcmodel.g:11792:13: otherlv_14= '!=' ( ( (lv_blocking_15_0= 'false' ) ) | otherlv_16= 'true' )
            	                    {
            	                    otherlv_14=(Token)match(input,62,FOLLOW_7); if (state.failed) return current;
            	                    if ( state.backtracking==0 ) {

            	                      													newLeafNode(otherlv_14, grammarAccess.getOverridePredicate_9Access().getExclamationMarkEqualsSignKeyword_3_1_1_1_1_0_0());
            	                      												
            	                    }
            	                    // InternalMcmodel.g:11796:13: ( ( (lv_blocking_15_0= 'false' ) ) | otherlv_16= 'true' )
            	                    int alt360=2;
            	                    int LA360_0 = input.LA(1);

            	                    if ( (LA360_0==21) ) {
            	                        alt360=1;
            	                    }
            	                    else if ( (LA360_0==20) ) {
            	                        alt360=2;
            	                    }
            	                    else {
            	                        if (state.backtracking>0) {state.failed=true; return current;}
            	                        NoViableAltException nvae =
            	                            new NoViableAltException("", 360, 0, input);

            	                        throw nvae;
            	                    }
            	                    switch (alt360) {
            	                        case 1 :
            	                            // InternalMcmodel.g:11797:14: ( (lv_blocking_15_0= 'false' ) )
            	                            {
            	                            // InternalMcmodel.g:11797:14: ( (lv_blocking_15_0= 'false' ) )
            	                            // InternalMcmodel.g:11798:15: (lv_blocking_15_0= 'false' )
            	                            {
            	                            // InternalMcmodel.g:11798:15: (lv_blocking_15_0= 'false' )
            	                            // InternalMcmodel.g:11799:16: lv_blocking_15_0= 'false'
            	                            {
            	                            lv_blocking_15_0=(Token)match(input,21,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              																newLeafNode(lv_blocking_15_0, grammarAccess.getOverridePredicate_9Access().getBlockingFalseKeyword_3_1_1_1_1_0_1_0_0());
            	                              															
            	                            }
            	                            if ( state.backtracking==0 ) {

            	                              																if (current==null) {
            	                              																	current = createModelElement(grammarAccess.getOverridePredicate_9Rule());
            	                              																}
            	                              																setWithLastConsumed(current, "blocking", true, "false");
            	                              															
            	                            }

            	                            }


            	                            }


            	                            }
            	                            break;
            	                        case 2 :
            	                            // InternalMcmodel.g:11812:14: otherlv_16= 'true'
            	                            {
            	                            otherlv_16=(Token)match(input,20,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_16, grammarAccess.getOverridePredicate_9Access().getTrueKeyword_3_1_1_1_1_0_1_1());
            	                              													
            	                            }

            	                            }
            	                            break;

            	                    }


            	                    }


            	                    }
            	                    break;
            	                case 2 :
            	                    // InternalMcmodel.g:11819:12: ( (otherlv_17= '=' | otherlv_18= '==' ) ( ( (lv_blocking_19_0= 'true' ) ) | otherlv_20= 'false' ) )
            	                    {
            	                    // InternalMcmodel.g:11819:12: ( (otherlv_17= '=' | otherlv_18= '==' ) ( ( (lv_blocking_19_0= 'true' ) ) | otherlv_20= 'false' ) )
            	                    // InternalMcmodel.g:11820:13: (otherlv_17= '=' | otherlv_18= '==' ) ( ( (lv_blocking_19_0= 'true' ) ) | otherlv_20= 'false' )
            	                    {
            	                    // InternalMcmodel.g:11820:13: (otherlv_17= '=' | otherlv_18= '==' )
            	                    int alt361=2;
            	                    int LA361_0 = input.LA(1);

            	                    if ( (LA361_0==18) ) {
            	                        alt361=1;
            	                    }
            	                    else if ( (LA361_0==58) ) {
            	                        alt361=2;
            	                    }
            	                    else {
            	                        if (state.backtracking>0) {state.failed=true; return current;}
            	                        NoViableAltException nvae =
            	                            new NoViableAltException("", 361, 0, input);

            	                        throw nvae;
            	                    }
            	                    switch (alt361) {
            	                        case 1 :
            	                            // InternalMcmodel.g:11821:14: otherlv_17= '='
            	                            {
            	                            otherlv_17=(Token)match(input,18,FOLLOW_7); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_17, grammarAccess.getOverridePredicate_9Access().getEqualsSignKeyword_3_1_1_1_1_1_0_0());
            	                              													
            	                            }

            	                            }
            	                            break;
            	                        case 2 :
            	                            // InternalMcmodel.g:11826:14: otherlv_18= '=='
            	                            {
            	                            otherlv_18=(Token)match(input,58,FOLLOW_7); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_18, grammarAccess.getOverridePredicate_9Access().getEqualsSignEqualsSignKeyword_3_1_1_1_1_1_0_1());
            	                              													
            	                            }

            	                            }
            	                            break;

            	                    }

            	                    // InternalMcmodel.g:11831:13: ( ( (lv_blocking_19_0= 'true' ) ) | otherlv_20= 'false' )
            	                    int alt362=2;
            	                    int LA362_0 = input.LA(1);

            	                    if ( (LA362_0==20) ) {
            	                        alt362=1;
            	                    }
            	                    else if ( (LA362_0==21) ) {
            	                        alt362=2;
            	                    }
            	                    else {
            	                        if (state.backtracking>0) {state.failed=true; return current;}
            	                        NoViableAltException nvae =
            	                            new NoViableAltException("", 362, 0, input);

            	                        throw nvae;
            	                    }
            	                    switch (alt362) {
            	                        case 1 :
            	                            // InternalMcmodel.g:11832:14: ( (lv_blocking_19_0= 'true' ) )
            	                            {
            	                            // InternalMcmodel.g:11832:14: ( (lv_blocking_19_0= 'true' ) )
            	                            // InternalMcmodel.g:11833:15: (lv_blocking_19_0= 'true' )
            	                            {
            	                            // InternalMcmodel.g:11833:15: (lv_blocking_19_0= 'true' )
            	                            // InternalMcmodel.g:11834:16: lv_blocking_19_0= 'true'
            	                            {
            	                            lv_blocking_19_0=(Token)match(input,20,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              																newLeafNode(lv_blocking_19_0, grammarAccess.getOverridePredicate_9Access().getBlockingTrueKeyword_3_1_1_1_1_1_1_0_0());
            	                              															
            	                            }
            	                            if ( state.backtracking==0 ) {

            	                              																if (current==null) {
            	                              																	current = createModelElement(grammarAccess.getOverridePredicate_9Rule());
            	                              																}
            	                              																setWithLastConsumed(current, "blocking", true, "true");
            	                              															
            	                            }

            	                            }


            	                            }


            	                            }
            	                            break;
            	                        case 2 :
            	                            // InternalMcmodel.g:11847:14: otherlv_20= 'false'
            	                            {
            	                            otherlv_20=(Token)match(input,21,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_20, grammarAccess.getOverridePredicate_9Access().getFalseKeyword_3_1_1_1_1_1_1_1());
            	                              													
            	                            }

            	                            }
            	                            break;

            	                    }


            	                    }


            	                    }
            	                    break;

            	            }


            	            }


            	            }
            	            break;

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getOverridePredicate_9Access().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 3 :
            	    // InternalMcmodel.g:11862:4: ({...}? => ( ({...}? => (otherlv_21= '&' ( ( ( (lv_brokenDefined_22_0= '!' ) ) otherlv_23= 'broken' ) | ( ( (lv_brokenDefined_24_0= 'broken' ) ) ( (otherlv_25= '!=' ( ( (lv_broken_26_0= 'false' ) ) | otherlv_27= 'true' ) ) | ( (otherlv_28= '=' | otherlv_29= '==' ) ( ( (lv_broken_30_0= 'true' ) ) | otherlv_31= 'false' ) ) ) ) ) ) ) ) )
            	    {
            	    // InternalMcmodel.g:11862:4: ({...}? => ( ({...}? => (otherlv_21= '&' ( ( ( (lv_brokenDefined_22_0= '!' ) ) otherlv_23= 'broken' ) | ( ( (lv_brokenDefined_24_0= 'broken' ) ) ( (otherlv_25= '!=' ( ( (lv_broken_26_0= 'false' ) ) | otherlv_27= 'true' ) ) | ( (otherlv_28= '=' | otherlv_29= '==' ) ( ( (lv_broken_30_0= 'true' ) ) | otherlv_31= 'false' ) ) ) ) ) ) ) ) )
            	    // InternalMcmodel.g:11863:5: {...}? => ( ({...}? => (otherlv_21= '&' ( ( ( (lv_brokenDefined_22_0= '!' ) ) otherlv_23= 'broken' ) | ( ( (lv_brokenDefined_24_0= 'broken' ) ) ( (otherlv_25= '!=' ( ( (lv_broken_26_0= 'false' ) ) | otherlv_27= 'true' ) ) | ( (otherlv_28= '=' | otherlv_29= '==' ) ( ( (lv_broken_30_0= 'true' ) ) | otherlv_31= 'false' ) ) ) ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_9Access().getUnorderedGroup_3(), 2) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_9", "getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_9Access().getUnorderedGroup_3(), 2)");
            	    }
            	    // InternalMcmodel.g:11863:116: ( ({...}? => (otherlv_21= '&' ( ( ( (lv_brokenDefined_22_0= '!' ) ) otherlv_23= 'broken' ) | ( ( (lv_brokenDefined_24_0= 'broken' ) ) ( (otherlv_25= '!=' ( ( (lv_broken_26_0= 'false' ) ) | otherlv_27= 'true' ) ) | ( (otherlv_28= '=' | otherlv_29= '==' ) ( ( (lv_broken_30_0= 'true' ) ) | otherlv_31= 'false' ) ) ) ) ) ) ) )
            	    // InternalMcmodel.g:11864:6: ({...}? => (otherlv_21= '&' ( ( ( (lv_brokenDefined_22_0= '!' ) ) otherlv_23= 'broken' ) | ( ( (lv_brokenDefined_24_0= 'broken' ) ) ( (otherlv_25= '!=' ( ( (lv_broken_26_0= 'false' ) ) | otherlv_27= 'true' ) ) | ( (otherlv_28= '=' | otherlv_29= '==' ) ( ( (lv_broken_30_0= 'true' ) ) | otherlv_31= 'false' ) ) ) ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getOverridePredicate_9Access().getUnorderedGroup_3(), 2);
            	    // InternalMcmodel.g:11867:9: ({...}? => (otherlv_21= '&' ( ( ( (lv_brokenDefined_22_0= '!' ) ) otherlv_23= 'broken' ) | ( ( (lv_brokenDefined_24_0= 'broken' ) ) ( (otherlv_25= '!=' ( ( (lv_broken_26_0= 'false' ) ) | otherlv_27= 'true' ) ) | ( (otherlv_28= '=' | otherlv_29= '==' ) ( ( (lv_broken_30_0= 'true' ) ) | otherlv_31= 'false' ) ) ) ) ) ) )
            	    // InternalMcmodel.g:11867:10: {...}? => (otherlv_21= '&' ( ( ( (lv_brokenDefined_22_0= '!' ) ) otherlv_23= 'broken' ) | ( ( (lv_brokenDefined_24_0= 'broken' ) ) ( (otherlv_25= '!=' ( ( (lv_broken_26_0= 'false' ) ) | otherlv_27= 'true' ) ) | ( (otherlv_28= '=' | otherlv_29= '==' ) ( ( (lv_broken_30_0= 'true' ) ) | otherlv_31= 'false' ) ) ) ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_9", "true");
            	    }
            	    // InternalMcmodel.g:11867:19: (otherlv_21= '&' ( ( ( (lv_brokenDefined_22_0= '!' ) ) otherlv_23= 'broken' ) | ( ( (lv_brokenDefined_24_0= 'broken' ) ) ( (otherlv_25= '!=' ( ( (lv_broken_26_0= 'false' ) ) | otherlv_27= 'true' ) ) | ( (otherlv_28= '=' | otherlv_29= '==' ) ( ( (lv_broken_30_0= 'true' ) ) | otherlv_31= 'false' ) ) ) ) ) )
            	    // InternalMcmodel.g:11867:20: otherlv_21= '&' ( ( ( (lv_brokenDefined_22_0= '!' ) ) otherlv_23= 'broken' ) | ( ( (lv_brokenDefined_24_0= 'broken' ) ) ( (otherlv_25= '!=' ( ( (lv_broken_26_0= 'false' ) ) | otherlv_27= 'true' ) ) | ( (otherlv_28= '=' | otherlv_29= '==' ) ( ( (lv_broken_30_0= 'true' ) ) | otherlv_31= 'false' ) ) ) ) )
            	    {
            	    otherlv_21=(Token)match(input,59,FOLLOW_41); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_21, grammarAccess.getOverridePredicate_9Access().getAmpersandKeyword_3_2_0());
            	      								
            	    }
            	    // InternalMcmodel.g:11871:9: ( ( ( (lv_brokenDefined_22_0= '!' ) ) otherlv_23= 'broken' ) | ( ( (lv_brokenDefined_24_0= 'broken' ) ) ( (otherlv_25= '!=' ( ( (lv_broken_26_0= 'false' ) ) | otherlv_27= 'true' ) ) | ( (otherlv_28= '=' | otherlv_29= '==' ) ( ( (lv_broken_30_0= 'true' ) ) | otherlv_31= 'false' ) ) ) ) )
            	    int alt369=2;
            	    int LA369_0 = input.LA(1);

            	    if ( (LA369_0==60) ) {
            	        alt369=1;
            	    }
            	    else if ( (LA369_0==63) ) {
            	        alt369=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 369, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt369) {
            	        case 1 :
            	            // InternalMcmodel.g:11872:10: ( ( (lv_brokenDefined_22_0= '!' ) ) otherlv_23= 'broken' )
            	            {
            	            // InternalMcmodel.g:11872:10: ( ( (lv_brokenDefined_22_0= '!' ) ) otherlv_23= 'broken' )
            	            // InternalMcmodel.g:11873:11: ( (lv_brokenDefined_22_0= '!' ) ) otherlv_23= 'broken'
            	            {
            	            // InternalMcmodel.g:11873:11: ( (lv_brokenDefined_22_0= '!' ) )
            	            // InternalMcmodel.g:11874:12: (lv_brokenDefined_22_0= '!' )
            	            {
            	            // InternalMcmodel.g:11874:12: (lv_brokenDefined_22_0= '!' )
            	            // InternalMcmodel.g:11875:13: lv_brokenDefined_22_0= '!'
            	            {
            	            lv_brokenDefined_22_0=(Token)match(input,60,FOLLOW_42); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              													newLeafNode(lv_brokenDefined_22_0, grammarAccess.getOverridePredicate_9Access().getBrokenDefinedExclamationMarkKeyword_3_2_1_0_0_0());
            	              												
            	            }
            	            if ( state.backtracking==0 ) {

            	              													if (current==null) {
            	              														current = createModelElement(grammarAccess.getOverridePredicate_9Rule());
            	              													}
            	              													setWithLastConsumed(current, "brokenDefined", true, "!");
            	              												
            	            }

            	            }


            	            }

            	            otherlv_23=(Token)match(input,63,FOLLOW_37); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              											newLeafNode(otherlv_23, grammarAccess.getOverridePredicate_9Access().getBrokenKeyword_3_2_1_0_1());
            	              										
            	            }

            	            }


            	            }
            	            break;
            	        case 2 :
            	            // InternalMcmodel.g:11893:10: ( ( (lv_brokenDefined_24_0= 'broken' ) ) ( (otherlv_25= '!=' ( ( (lv_broken_26_0= 'false' ) ) | otherlv_27= 'true' ) ) | ( (otherlv_28= '=' | otherlv_29= '==' ) ( ( (lv_broken_30_0= 'true' ) ) | otherlv_31= 'false' ) ) ) )
            	            {
            	            // InternalMcmodel.g:11893:10: ( ( (lv_brokenDefined_24_0= 'broken' ) ) ( (otherlv_25= '!=' ( ( (lv_broken_26_0= 'false' ) ) | otherlv_27= 'true' ) ) | ( (otherlv_28= '=' | otherlv_29= '==' ) ( ( (lv_broken_30_0= 'true' ) ) | otherlv_31= 'false' ) ) ) )
            	            // InternalMcmodel.g:11894:11: ( (lv_brokenDefined_24_0= 'broken' ) ) ( (otherlv_25= '!=' ( ( (lv_broken_26_0= 'false' ) ) | otherlv_27= 'true' ) ) | ( (otherlv_28= '=' | otherlv_29= '==' ) ( ( (lv_broken_30_0= 'true' ) ) | otherlv_31= 'false' ) ) )
            	            {
            	            // InternalMcmodel.g:11894:11: ( (lv_brokenDefined_24_0= 'broken' ) )
            	            // InternalMcmodel.g:11895:12: (lv_brokenDefined_24_0= 'broken' )
            	            {
            	            // InternalMcmodel.g:11895:12: (lv_brokenDefined_24_0= 'broken' )
            	            // InternalMcmodel.g:11896:13: lv_brokenDefined_24_0= 'broken'
            	            {
            	            lv_brokenDefined_24_0=(Token)match(input,63,FOLLOW_40); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              													newLeafNode(lv_brokenDefined_24_0, grammarAccess.getOverridePredicate_9Access().getBrokenDefinedBrokenKeyword_3_2_1_1_0_0());
            	              												
            	            }
            	            if ( state.backtracking==0 ) {

            	              													if (current==null) {
            	              														current = createModelElement(grammarAccess.getOverridePredicate_9Rule());
            	              													}
            	              													setWithLastConsumed(current, "brokenDefined", true, "broken");
            	              												
            	            }

            	            }


            	            }

            	            // InternalMcmodel.g:11908:11: ( (otherlv_25= '!=' ( ( (lv_broken_26_0= 'false' ) ) | otherlv_27= 'true' ) ) | ( (otherlv_28= '=' | otherlv_29= '==' ) ( ( (lv_broken_30_0= 'true' ) ) | otherlv_31= 'false' ) ) )
            	            int alt368=2;
            	            int LA368_0 = input.LA(1);

            	            if ( (LA368_0==62) ) {
            	                alt368=1;
            	            }
            	            else if ( (LA368_0==18||LA368_0==58) ) {
            	                alt368=2;
            	            }
            	            else {
            	                if (state.backtracking>0) {state.failed=true; return current;}
            	                NoViableAltException nvae =
            	                    new NoViableAltException("", 368, 0, input);

            	                throw nvae;
            	            }
            	            switch (alt368) {
            	                case 1 :
            	                    // InternalMcmodel.g:11909:12: (otherlv_25= '!=' ( ( (lv_broken_26_0= 'false' ) ) | otherlv_27= 'true' ) )
            	                    {
            	                    // InternalMcmodel.g:11909:12: (otherlv_25= '!=' ( ( (lv_broken_26_0= 'false' ) ) | otherlv_27= 'true' ) )
            	                    // InternalMcmodel.g:11910:13: otherlv_25= '!=' ( ( (lv_broken_26_0= 'false' ) ) | otherlv_27= 'true' )
            	                    {
            	                    otherlv_25=(Token)match(input,62,FOLLOW_7); if (state.failed) return current;
            	                    if ( state.backtracking==0 ) {

            	                      													newLeafNode(otherlv_25, grammarAccess.getOverridePredicate_9Access().getExclamationMarkEqualsSignKeyword_3_2_1_1_1_0_0());
            	                      												
            	                    }
            	                    // InternalMcmodel.g:11914:13: ( ( (lv_broken_26_0= 'false' ) ) | otherlv_27= 'true' )
            	                    int alt365=2;
            	                    int LA365_0 = input.LA(1);

            	                    if ( (LA365_0==21) ) {
            	                        alt365=1;
            	                    }
            	                    else if ( (LA365_0==20) ) {
            	                        alt365=2;
            	                    }
            	                    else {
            	                        if (state.backtracking>0) {state.failed=true; return current;}
            	                        NoViableAltException nvae =
            	                            new NoViableAltException("", 365, 0, input);

            	                        throw nvae;
            	                    }
            	                    switch (alt365) {
            	                        case 1 :
            	                            // InternalMcmodel.g:11915:14: ( (lv_broken_26_0= 'false' ) )
            	                            {
            	                            // InternalMcmodel.g:11915:14: ( (lv_broken_26_0= 'false' ) )
            	                            // InternalMcmodel.g:11916:15: (lv_broken_26_0= 'false' )
            	                            {
            	                            // InternalMcmodel.g:11916:15: (lv_broken_26_0= 'false' )
            	                            // InternalMcmodel.g:11917:16: lv_broken_26_0= 'false'
            	                            {
            	                            lv_broken_26_0=(Token)match(input,21,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              																newLeafNode(lv_broken_26_0, grammarAccess.getOverridePredicate_9Access().getBrokenFalseKeyword_3_2_1_1_1_0_1_0_0());
            	                              															
            	                            }
            	                            if ( state.backtracking==0 ) {

            	                              																if (current==null) {
            	                              																	current = createModelElement(grammarAccess.getOverridePredicate_9Rule());
            	                              																}
            	                              																setWithLastConsumed(current, "broken", true, "false");
            	                              															
            	                            }

            	                            }


            	                            }


            	                            }
            	                            break;
            	                        case 2 :
            	                            // InternalMcmodel.g:11930:14: otherlv_27= 'true'
            	                            {
            	                            otherlv_27=(Token)match(input,20,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_27, grammarAccess.getOverridePredicate_9Access().getTrueKeyword_3_2_1_1_1_0_1_1());
            	                              													
            	                            }

            	                            }
            	                            break;

            	                    }


            	                    }


            	                    }
            	                    break;
            	                case 2 :
            	                    // InternalMcmodel.g:11937:12: ( (otherlv_28= '=' | otherlv_29= '==' ) ( ( (lv_broken_30_0= 'true' ) ) | otherlv_31= 'false' ) )
            	                    {
            	                    // InternalMcmodel.g:11937:12: ( (otherlv_28= '=' | otherlv_29= '==' ) ( ( (lv_broken_30_0= 'true' ) ) | otherlv_31= 'false' ) )
            	                    // InternalMcmodel.g:11938:13: (otherlv_28= '=' | otherlv_29= '==' ) ( ( (lv_broken_30_0= 'true' ) ) | otherlv_31= 'false' )
            	                    {
            	                    // InternalMcmodel.g:11938:13: (otherlv_28= '=' | otherlv_29= '==' )
            	                    int alt366=2;
            	                    int LA366_0 = input.LA(1);

            	                    if ( (LA366_0==18) ) {
            	                        alt366=1;
            	                    }
            	                    else if ( (LA366_0==58) ) {
            	                        alt366=2;
            	                    }
            	                    else {
            	                        if (state.backtracking>0) {state.failed=true; return current;}
            	                        NoViableAltException nvae =
            	                            new NoViableAltException("", 366, 0, input);

            	                        throw nvae;
            	                    }
            	                    switch (alt366) {
            	                        case 1 :
            	                            // InternalMcmodel.g:11939:14: otherlv_28= '='
            	                            {
            	                            otherlv_28=(Token)match(input,18,FOLLOW_7); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_28, grammarAccess.getOverridePredicate_9Access().getEqualsSignKeyword_3_2_1_1_1_1_0_0());
            	                              													
            	                            }

            	                            }
            	                            break;
            	                        case 2 :
            	                            // InternalMcmodel.g:11944:14: otherlv_29= '=='
            	                            {
            	                            otherlv_29=(Token)match(input,58,FOLLOW_7); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_29, grammarAccess.getOverridePredicate_9Access().getEqualsSignEqualsSignKeyword_3_2_1_1_1_1_0_1());
            	                              													
            	                            }

            	                            }
            	                            break;

            	                    }

            	                    // InternalMcmodel.g:11949:13: ( ( (lv_broken_30_0= 'true' ) ) | otherlv_31= 'false' )
            	                    int alt367=2;
            	                    int LA367_0 = input.LA(1);

            	                    if ( (LA367_0==20) ) {
            	                        alt367=1;
            	                    }
            	                    else if ( (LA367_0==21) ) {
            	                        alt367=2;
            	                    }
            	                    else {
            	                        if (state.backtracking>0) {state.failed=true; return current;}
            	                        NoViableAltException nvae =
            	                            new NoViableAltException("", 367, 0, input);

            	                        throw nvae;
            	                    }
            	                    switch (alt367) {
            	                        case 1 :
            	                            // InternalMcmodel.g:11950:14: ( (lv_broken_30_0= 'true' ) )
            	                            {
            	                            // InternalMcmodel.g:11950:14: ( (lv_broken_30_0= 'true' ) )
            	                            // InternalMcmodel.g:11951:15: (lv_broken_30_0= 'true' )
            	                            {
            	                            // InternalMcmodel.g:11951:15: (lv_broken_30_0= 'true' )
            	                            // InternalMcmodel.g:11952:16: lv_broken_30_0= 'true'
            	                            {
            	                            lv_broken_30_0=(Token)match(input,20,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              																newLeafNode(lv_broken_30_0, grammarAccess.getOverridePredicate_9Access().getBrokenTrueKeyword_3_2_1_1_1_1_1_0_0());
            	                              															
            	                            }
            	                            if ( state.backtracking==0 ) {

            	                              																if (current==null) {
            	                              																	current = createModelElement(grammarAccess.getOverridePredicate_9Rule());
            	                              																}
            	                              																setWithLastConsumed(current, "broken", true, "true");
            	                              															
            	                            }

            	                            }


            	                            }


            	                            }
            	                            break;
            	                        case 2 :
            	                            // InternalMcmodel.g:11965:14: otherlv_31= 'false'
            	                            {
            	                            otherlv_31=(Token)match(input,21,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_31, grammarAccess.getOverridePredicate_9Access().getFalseKeyword_3_2_1_1_1_1_1_1());
            	                              													
            	                            }

            	                            }
            	                            break;

            	                    }


            	                    }


            	                    }
            	                    break;

            	            }


            	            }


            	            }
            	            break;

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getOverridePredicate_9Access().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 4 :
            	    // InternalMcmodel.g:11980:4: ({...}? => ( ({...}? => (otherlv_32= '&' ( ( ( (lv_castDefined_33_0= '!' ) ) otherlv_34= 'cast' ) | ( ( (lv_castDefined_35_0= 'cast' ) ) ( (otherlv_36= '!=' ( ( (lv_cast_37_0= 'false' ) ) | otherlv_38= 'true' ) ) | ( (otherlv_39= '=' | otherlv_40= '==' ) ( ( (lv_cast_41_0= 'true' ) ) | otherlv_42= 'false' ) ) ) ) ) ) ) ) )
            	    {
            	    // InternalMcmodel.g:11980:4: ({...}? => ( ({...}? => (otherlv_32= '&' ( ( ( (lv_castDefined_33_0= '!' ) ) otherlv_34= 'cast' ) | ( ( (lv_castDefined_35_0= 'cast' ) ) ( (otherlv_36= '!=' ( ( (lv_cast_37_0= 'false' ) ) | otherlv_38= 'true' ) ) | ( (otherlv_39= '=' | otherlv_40= '==' ) ( ( (lv_cast_41_0= 'true' ) ) | otherlv_42= 'false' ) ) ) ) ) ) ) ) )
            	    // InternalMcmodel.g:11981:5: {...}? => ( ({...}? => (otherlv_32= '&' ( ( ( (lv_castDefined_33_0= '!' ) ) otherlv_34= 'cast' ) | ( ( (lv_castDefined_35_0= 'cast' ) ) ( (otherlv_36= '!=' ( ( (lv_cast_37_0= 'false' ) ) | otherlv_38= 'true' ) ) | ( (otherlv_39= '=' | otherlv_40= '==' ) ( ( (lv_cast_41_0= 'true' ) ) | otherlv_42= 'false' ) ) ) ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_9Access().getUnorderedGroup_3(), 3) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_9", "getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_9Access().getUnorderedGroup_3(), 3)");
            	    }
            	    // InternalMcmodel.g:11981:116: ( ({...}? => (otherlv_32= '&' ( ( ( (lv_castDefined_33_0= '!' ) ) otherlv_34= 'cast' ) | ( ( (lv_castDefined_35_0= 'cast' ) ) ( (otherlv_36= '!=' ( ( (lv_cast_37_0= 'false' ) ) | otherlv_38= 'true' ) ) | ( (otherlv_39= '=' | otherlv_40= '==' ) ( ( (lv_cast_41_0= 'true' ) ) | otherlv_42= 'false' ) ) ) ) ) ) ) )
            	    // InternalMcmodel.g:11982:6: ({...}? => (otherlv_32= '&' ( ( ( (lv_castDefined_33_0= '!' ) ) otherlv_34= 'cast' ) | ( ( (lv_castDefined_35_0= 'cast' ) ) ( (otherlv_36= '!=' ( ( (lv_cast_37_0= 'false' ) ) | otherlv_38= 'true' ) ) | ( (otherlv_39= '=' | otherlv_40= '==' ) ( ( (lv_cast_41_0= 'true' ) ) | otherlv_42= 'false' ) ) ) ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getOverridePredicate_9Access().getUnorderedGroup_3(), 3);
            	    // InternalMcmodel.g:11985:9: ({...}? => (otherlv_32= '&' ( ( ( (lv_castDefined_33_0= '!' ) ) otherlv_34= 'cast' ) | ( ( (lv_castDefined_35_0= 'cast' ) ) ( (otherlv_36= '!=' ( ( (lv_cast_37_0= 'false' ) ) | otherlv_38= 'true' ) ) | ( (otherlv_39= '=' | otherlv_40= '==' ) ( ( (lv_cast_41_0= 'true' ) ) | otherlv_42= 'false' ) ) ) ) ) ) )
            	    // InternalMcmodel.g:11985:10: {...}? => (otherlv_32= '&' ( ( ( (lv_castDefined_33_0= '!' ) ) otherlv_34= 'cast' ) | ( ( (lv_castDefined_35_0= 'cast' ) ) ( (otherlv_36= '!=' ( ( (lv_cast_37_0= 'false' ) ) | otherlv_38= 'true' ) ) | ( (otherlv_39= '=' | otherlv_40= '==' ) ( ( (lv_cast_41_0= 'true' ) ) | otherlv_42= 'false' ) ) ) ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_9", "true");
            	    }
            	    // InternalMcmodel.g:11985:19: (otherlv_32= '&' ( ( ( (lv_castDefined_33_0= '!' ) ) otherlv_34= 'cast' ) | ( ( (lv_castDefined_35_0= 'cast' ) ) ( (otherlv_36= '!=' ( ( (lv_cast_37_0= 'false' ) ) | otherlv_38= 'true' ) ) | ( (otherlv_39= '=' | otherlv_40= '==' ) ( ( (lv_cast_41_0= 'true' ) ) | otherlv_42= 'false' ) ) ) ) ) )
            	    // InternalMcmodel.g:11985:20: otherlv_32= '&' ( ( ( (lv_castDefined_33_0= '!' ) ) otherlv_34= 'cast' ) | ( ( (lv_castDefined_35_0= 'cast' ) ) ( (otherlv_36= '!=' ( ( (lv_cast_37_0= 'false' ) ) | otherlv_38= 'true' ) ) | ( (otherlv_39= '=' | otherlv_40= '==' ) ( ( (lv_cast_41_0= 'true' ) ) | otherlv_42= 'false' ) ) ) ) )
            	    {
            	    otherlv_32=(Token)match(input,59,FOLLOW_43); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_32, grammarAccess.getOverridePredicate_9Access().getAmpersandKeyword_3_3_0());
            	      								
            	    }
            	    // InternalMcmodel.g:11989:9: ( ( ( (lv_castDefined_33_0= '!' ) ) otherlv_34= 'cast' ) | ( ( (lv_castDefined_35_0= 'cast' ) ) ( (otherlv_36= '!=' ( ( (lv_cast_37_0= 'false' ) ) | otherlv_38= 'true' ) ) | ( (otherlv_39= '=' | otherlv_40= '==' ) ( ( (lv_cast_41_0= 'true' ) ) | otherlv_42= 'false' ) ) ) ) )
            	    int alt374=2;
            	    int LA374_0 = input.LA(1);

            	    if ( (LA374_0==60) ) {
            	        alt374=1;
            	    }
            	    else if ( (LA374_0==64) ) {
            	        alt374=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 374, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt374) {
            	        case 1 :
            	            // InternalMcmodel.g:11990:10: ( ( (lv_castDefined_33_0= '!' ) ) otherlv_34= 'cast' )
            	            {
            	            // InternalMcmodel.g:11990:10: ( ( (lv_castDefined_33_0= '!' ) ) otherlv_34= 'cast' )
            	            // InternalMcmodel.g:11991:11: ( (lv_castDefined_33_0= '!' ) ) otherlv_34= 'cast'
            	            {
            	            // InternalMcmodel.g:11991:11: ( (lv_castDefined_33_0= '!' ) )
            	            // InternalMcmodel.g:11992:12: (lv_castDefined_33_0= '!' )
            	            {
            	            // InternalMcmodel.g:11992:12: (lv_castDefined_33_0= '!' )
            	            // InternalMcmodel.g:11993:13: lv_castDefined_33_0= '!'
            	            {
            	            lv_castDefined_33_0=(Token)match(input,60,FOLLOW_44); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              													newLeafNode(lv_castDefined_33_0, grammarAccess.getOverridePredicate_9Access().getCastDefinedExclamationMarkKeyword_3_3_1_0_0_0());
            	              												
            	            }
            	            if ( state.backtracking==0 ) {

            	              													if (current==null) {
            	              														current = createModelElement(grammarAccess.getOverridePredicate_9Rule());
            	              													}
            	              													setWithLastConsumed(current, "castDefined", true, "!");
            	              												
            	            }

            	            }


            	            }

            	            otherlv_34=(Token)match(input,64,FOLLOW_37); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              											newLeafNode(otherlv_34, grammarAccess.getOverridePredicate_9Access().getCastKeyword_3_3_1_0_1());
            	              										
            	            }

            	            }


            	            }
            	            break;
            	        case 2 :
            	            // InternalMcmodel.g:12011:10: ( ( (lv_castDefined_35_0= 'cast' ) ) ( (otherlv_36= '!=' ( ( (lv_cast_37_0= 'false' ) ) | otherlv_38= 'true' ) ) | ( (otherlv_39= '=' | otherlv_40= '==' ) ( ( (lv_cast_41_0= 'true' ) ) | otherlv_42= 'false' ) ) ) )
            	            {
            	            // InternalMcmodel.g:12011:10: ( ( (lv_castDefined_35_0= 'cast' ) ) ( (otherlv_36= '!=' ( ( (lv_cast_37_0= 'false' ) ) | otherlv_38= 'true' ) ) | ( (otherlv_39= '=' | otherlv_40= '==' ) ( ( (lv_cast_41_0= 'true' ) ) | otherlv_42= 'false' ) ) ) )
            	            // InternalMcmodel.g:12012:11: ( (lv_castDefined_35_0= 'cast' ) ) ( (otherlv_36= '!=' ( ( (lv_cast_37_0= 'false' ) ) | otherlv_38= 'true' ) ) | ( (otherlv_39= '=' | otherlv_40= '==' ) ( ( (lv_cast_41_0= 'true' ) ) | otherlv_42= 'false' ) ) )
            	            {
            	            // InternalMcmodel.g:12012:11: ( (lv_castDefined_35_0= 'cast' ) )
            	            // InternalMcmodel.g:12013:12: (lv_castDefined_35_0= 'cast' )
            	            {
            	            // InternalMcmodel.g:12013:12: (lv_castDefined_35_0= 'cast' )
            	            // InternalMcmodel.g:12014:13: lv_castDefined_35_0= 'cast'
            	            {
            	            lv_castDefined_35_0=(Token)match(input,64,FOLLOW_40); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              													newLeafNode(lv_castDefined_35_0, grammarAccess.getOverridePredicate_9Access().getCastDefinedCastKeyword_3_3_1_1_0_0());
            	              												
            	            }
            	            if ( state.backtracking==0 ) {

            	              													if (current==null) {
            	              														current = createModelElement(grammarAccess.getOverridePredicate_9Rule());
            	              													}
            	              													setWithLastConsumed(current, "castDefined", true, "cast");
            	              												
            	            }

            	            }


            	            }

            	            // InternalMcmodel.g:12026:11: ( (otherlv_36= '!=' ( ( (lv_cast_37_0= 'false' ) ) | otherlv_38= 'true' ) ) | ( (otherlv_39= '=' | otherlv_40= '==' ) ( ( (lv_cast_41_0= 'true' ) ) | otherlv_42= 'false' ) ) )
            	            int alt373=2;
            	            int LA373_0 = input.LA(1);

            	            if ( (LA373_0==62) ) {
            	                alt373=1;
            	            }
            	            else if ( (LA373_0==18||LA373_0==58) ) {
            	                alt373=2;
            	            }
            	            else {
            	                if (state.backtracking>0) {state.failed=true; return current;}
            	                NoViableAltException nvae =
            	                    new NoViableAltException("", 373, 0, input);

            	                throw nvae;
            	            }
            	            switch (alt373) {
            	                case 1 :
            	                    // InternalMcmodel.g:12027:12: (otherlv_36= '!=' ( ( (lv_cast_37_0= 'false' ) ) | otherlv_38= 'true' ) )
            	                    {
            	                    // InternalMcmodel.g:12027:12: (otherlv_36= '!=' ( ( (lv_cast_37_0= 'false' ) ) | otherlv_38= 'true' ) )
            	                    // InternalMcmodel.g:12028:13: otherlv_36= '!=' ( ( (lv_cast_37_0= 'false' ) ) | otherlv_38= 'true' )
            	                    {
            	                    otherlv_36=(Token)match(input,62,FOLLOW_7); if (state.failed) return current;
            	                    if ( state.backtracking==0 ) {

            	                      													newLeafNode(otherlv_36, grammarAccess.getOverridePredicate_9Access().getExclamationMarkEqualsSignKeyword_3_3_1_1_1_0_0());
            	                      												
            	                    }
            	                    // InternalMcmodel.g:12032:13: ( ( (lv_cast_37_0= 'false' ) ) | otherlv_38= 'true' )
            	                    int alt370=2;
            	                    int LA370_0 = input.LA(1);

            	                    if ( (LA370_0==21) ) {
            	                        alt370=1;
            	                    }
            	                    else if ( (LA370_0==20) ) {
            	                        alt370=2;
            	                    }
            	                    else {
            	                        if (state.backtracking>0) {state.failed=true; return current;}
            	                        NoViableAltException nvae =
            	                            new NoViableAltException("", 370, 0, input);

            	                        throw nvae;
            	                    }
            	                    switch (alt370) {
            	                        case 1 :
            	                            // InternalMcmodel.g:12033:14: ( (lv_cast_37_0= 'false' ) )
            	                            {
            	                            // InternalMcmodel.g:12033:14: ( (lv_cast_37_0= 'false' ) )
            	                            // InternalMcmodel.g:12034:15: (lv_cast_37_0= 'false' )
            	                            {
            	                            // InternalMcmodel.g:12034:15: (lv_cast_37_0= 'false' )
            	                            // InternalMcmodel.g:12035:16: lv_cast_37_0= 'false'
            	                            {
            	                            lv_cast_37_0=(Token)match(input,21,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              																newLeafNode(lv_cast_37_0, grammarAccess.getOverridePredicate_9Access().getCastFalseKeyword_3_3_1_1_1_0_1_0_0());
            	                              															
            	                            }
            	                            if ( state.backtracking==0 ) {

            	                              																if (current==null) {
            	                              																	current = createModelElement(grammarAccess.getOverridePredicate_9Rule());
            	                              																}
            	                              																setWithLastConsumed(current, "cast", true, "false");
            	                              															
            	                            }

            	                            }


            	                            }


            	                            }
            	                            break;
            	                        case 2 :
            	                            // InternalMcmodel.g:12048:14: otherlv_38= 'true'
            	                            {
            	                            otherlv_38=(Token)match(input,20,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_38, grammarAccess.getOverridePredicate_9Access().getTrueKeyword_3_3_1_1_1_0_1_1());
            	                              													
            	                            }

            	                            }
            	                            break;

            	                    }


            	                    }


            	                    }
            	                    break;
            	                case 2 :
            	                    // InternalMcmodel.g:12055:12: ( (otherlv_39= '=' | otherlv_40= '==' ) ( ( (lv_cast_41_0= 'true' ) ) | otherlv_42= 'false' ) )
            	                    {
            	                    // InternalMcmodel.g:12055:12: ( (otherlv_39= '=' | otherlv_40= '==' ) ( ( (lv_cast_41_0= 'true' ) ) | otherlv_42= 'false' ) )
            	                    // InternalMcmodel.g:12056:13: (otherlv_39= '=' | otherlv_40= '==' ) ( ( (lv_cast_41_0= 'true' ) ) | otherlv_42= 'false' )
            	                    {
            	                    // InternalMcmodel.g:12056:13: (otherlv_39= '=' | otherlv_40= '==' )
            	                    int alt371=2;
            	                    int LA371_0 = input.LA(1);

            	                    if ( (LA371_0==18) ) {
            	                        alt371=1;
            	                    }
            	                    else if ( (LA371_0==58) ) {
            	                        alt371=2;
            	                    }
            	                    else {
            	                        if (state.backtracking>0) {state.failed=true; return current;}
            	                        NoViableAltException nvae =
            	                            new NoViableAltException("", 371, 0, input);

            	                        throw nvae;
            	                    }
            	                    switch (alt371) {
            	                        case 1 :
            	                            // InternalMcmodel.g:12057:14: otherlv_39= '='
            	                            {
            	                            otherlv_39=(Token)match(input,18,FOLLOW_7); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_39, grammarAccess.getOverridePredicate_9Access().getEqualsSignKeyword_3_3_1_1_1_1_0_0());
            	                              													
            	                            }

            	                            }
            	                            break;
            	                        case 2 :
            	                            // InternalMcmodel.g:12062:14: otherlv_40= '=='
            	                            {
            	                            otherlv_40=(Token)match(input,58,FOLLOW_7); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_40, grammarAccess.getOverridePredicate_9Access().getEqualsSignEqualsSignKeyword_3_3_1_1_1_1_0_1());
            	                              													
            	                            }

            	                            }
            	                            break;

            	                    }

            	                    // InternalMcmodel.g:12067:13: ( ( (lv_cast_41_0= 'true' ) ) | otherlv_42= 'false' )
            	                    int alt372=2;
            	                    int LA372_0 = input.LA(1);

            	                    if ( (LA372_0==20) ) {
            	                        alt372=1;
            	                    }
            	                    else if ( (LA372_0==21) ) {
            	                        alt372=2;
            	                    }
            	                    else {
            	                        if (state.backtracking>0) {state.failed=true; return current;}
            	                        NoViableAltException nvae =
            	                            new NoViableAltException("", 372, 0, input);

            	                        throw nvae;
            	                    }
            	                    switch (alt372) {
            	                        case 1 :
            	                            // InternalMcmodel.g:12068:14: ( (lv_cast_41_0= 'true' ) )
            	                            {
            	                            // InternalMcmodel.g:12068:14: ( (lv_cast_41_0= 'true' ) )
            	                            // InternalMcmodel.g:12069:15: (lv_cast_41_0= 'true' )
            	                            {
            	                            // InternalMcmodel.g:12069:15: (lv_cast_41_0= 'true' )
            	                            // InternalMcmodel.g:12070:16: lv_cast_41_0= 'true'
            	                            {
            	                            lv_cast_41_0=(Token)match(input,20,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              																newLeafNode(lv_cast_41_0, grammarAccess.getOverridePredicate_9Access().getCastTrueKeyword_3_3_1_1_1_1_1_0_0());
            	                              															
            	                            }
            	                            if ( state.backtracking==0 ) {

            	                              																if (current==null) {
            	                              																	current = createModelElement(grammarAccess.getOverridePredicate_9Rule());
            	                              																}
            	                              																setWithLastConsumed(current, "cast", true, "true");
            	                              															
            	                            }

            	                            }


            	                            }


            	                            }
            	                            break;
            	                        case 2 :
            	                            // InternalMcmodel.g:12083:14: otherlv_42= 'false'
            	                            {
            	                            otherlv_42=(Token)match(input,21,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_42, grammarAccess.getOverridePredicate_9Access().getFalseKeyword_3_3_1_1_1_1_1_1());
            	                              													
            	                            }

            	                            }
            	                            break;

            	                    }


            	                    }


            	                    }
            	                    break;

            	            }


            	            }


            	            }
            	            break;

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getOverridePredicate_9Access().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 5 :
            	    // InternalMcmodel.g:12098:4: ({...}? => ( ({...}? => (otherlv_43= '&' ( (lv_cooldownDefined_44_0= 'cooldown' ) ) (otherlv_45= '=' | otherlv_46= '==' ) ( (lv_cooldown_47_0= RULE_PERCENTAGE ) ) ) ) ) )
            	    {
            	    // InternalMcmodel.g:12098:4: ({...}? => ( ({...}? => (otherlv_43= '&' ( (lv_cooldownDefined_44_0= 'cooldown' ) ) (otherlv_45= '=' | otherlv_46= '==' ) ( (lv_cooldown_47_0= RULE_PERCENTAGE ) ) ) ) ) )
            	    // InternalMcmodel.g:12099:5: {...}? => ( ({...}? => (otherlv_43= '&' ( (lv_cooldownDefined_44_0= 'cooldown' ) ) (otherlv_45= '=' | otherlv_46= '==' ) ( (lv_cooldown_47_0= RULE_PERCENTAGE ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_9Access().getUnorderedGroup_3(), 4) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_9", "getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_9Access().getUnorderedGroup_3(), 4)");
            	    }
            	    // InternalMcmodel.g:12099:116: ( ({...}? => (otherlv_43= '&' ( (lv_cooldownDefined_44_0= 'cooldown' ) ) (otherlv_45= '=' | otherlv_46= '==' ) ( (lv_cooldown_47_0= RULE_PERCENTAGE ) ) ) ) )
            	    // InternalMcmodel.g:12100:6: ({...}? => (otherlv_43= '&' ( (lv_cooldownDefined_44_0= 'cooldown' ) ) (otherlv_45= '=' | otherlv_46= '==' ) ( (lv_cooldown_47_0= RULE_PERCENTAGE ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getOverridePredicate_9Access().getUnorderedGroup_3(), 4);
            	    // InternalMcmodel.g:12103:9: ({...}? => (otherlv_43= '&' ( (lv_cooldownDefined_44_0= 'cooldown' ) ) (otherlv_45= '=' | otherlv_46= '==' ) ( (lv_cooldown_47_0= RULE_PERCENTAGE ) ) ) )
            	    // InternalMcmodel.g:12103:10: {...}? => (otherlv_43= '&' ( (lv_cooldownDefined_44_0= 'cooldown' ) ) (otherlv_45= '=' | otherlv_46= '==' ) ( (lv_cooldown_47_0= RULE_PERCENTAGE ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_9", "true");
            	    }
            	    // InternalMcmodel.g:12103:19: (otherlv_43= '&' ( (lv_cooldownDefined_44_0= 'cooldown' ) ) (otherlv_45= '=' | otherlv_46= '==' ) ( (lv_cooldown_47_0= RULE_PERCENTAGE ) ) )
            	    // InternalMcmodel.g:12103:20: otherlv_43= '&' ( (lv_cooldownDefined_44_0= 'cooldown' ) ) (otherlv_45= '=' | otherlv_46= '==' ) ( (lv_cooldown_47_0= RULE_PERCENTAGE ) )
            	    {
            	    otherlv_43=(Token)match(input,59,FOLLOW_45); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_43, grammarAccess.getOverridePredicate_9Access().getAmpersandKeyword_3_4_0());
            	      								
            	    }
            	    // InternalMcmodel.g:12107:9: ( (lv_cooldownDefined_44_0= 'cooldown' ) )
            	    // InternalMcmodel.g:12108:10: (lv_cooldownDefined_44_0= 'cooldown' )
            	    {
            	    // InternalMcmodel.g:12108:10: (lv_cooldownDefined_44_0= 'cooldown' )
            	    // InternalMcmodel.g:12109:11: lv_cooldownDefined_44_0= 'cooldown'
            	    {
            	    lv_cooldownDefined_44_0=(Token)match(input,65,FOLLOW_35); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											newLeafNode(lv_cooldownDefined_44_0, grammarAccess.getOverridePredicate_9Access().getCooldownDefinedCooldownKeyword_3_4_1_0());
            	      										
            	    }
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElement(grammarAccess.getOverridePredicate_9Rule());
            	      											}
            	      											setWithLastConsumed(current, "cooldownDefined", true, "cooldown");
            	      										
            	    }

            	    }


            	    }

            	    // InternalMcmodel.g:12121:9: (otherlv_45= '=' | otherlv_46= '==' )
            	    int alt375=2;
            	    int LA375_0 = input.LA(1);

            	    if ( (LA375_0==18) ) {
            	        alt375=1;
            	    }
            	    else if ( (LA375_0==58) ) {
            	        alt375=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 375, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt375) {
            	        case 1 :
            	            // InternalMcmodel.g:12122:10: otherlv_45= '='
            	            {
            	            otherlv_45=(Token)match(input,18,FOLLOW_36); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(otherlv_45, grammarAccess.getOverridePredicate_9Access().getEqualsSignKeyword_3_4_2_0());
            	              									
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalMcmodel.g:12127:10: otherlv_46= '=='
            	            {
            	            otherlv_46=(Token)match(input,58,FOLLOW_36); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(otherlv_46, grammarAccess.getOverridePredicate_9Access().getEqualsSignEqualsSignKeyword_3_4_2_1());
            	              									
            	            }

            	            }
            	            break;

            	    }

            	    // InternalMcmodel.g:12132:9: ( (lv_cooldown_47_0= RULE_PERCENTAGE ) )
            	    // InternalMcmodel.g:12133:10: (lv_cooldown_47_0= RULE_PERCENTAGE )
            	    {
            	    // InternalMcmodel.g:12133:10: (lv_cooldown_47_0= RULE_PERCENTAGE )
            	    // InternalMcmodel.g:12134:11: lv_cooldown_47_0= RULE_PERCENTAGE
            	    {
            	    lv_cooldown_47_0=(Token)match(input,RULE_PERCENTAGE,FOLLOW_37); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											newLeafNode(lv_cooldown_47_0, grammarAccess.getOverridePredicate_9Access().getCooldownPERCENTAGETerminalRuleCall_3_4_3_0());
            	      										
            	    }
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElement(grammarAccess.getOverridePredicate_9Rule());
            	      											}
            	      											setWithLastConsumed(
            	      												current,
            	      												"cooldown",
            	      												lv_cooldown_47_0,
            	      												"com.raptor.mcmodel.Mcmodel.PERCENTAGE");
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getOverridePredicate_9Access().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 6 :
            	    // InternalMcmodel.g:12156:4: ({...}? => ( ({...}? => (otherlv_48= '&' ( (lv_damageDefined_49_0= 'damage' ) ) (otherlv_50= '=' | otherlv_51= '==' ) ( (lv_damage_52_0= RULE_PERCENTAGE ) ) ) ) ) )
            	    {
            	    // InternalMcmodel.g:12156:4: ({...}? => ( ({...}? => (otherlv_48= '&' ( (lv_damageDefined_49_0= 'damage' ) ) (otherlv_50= '=' | otherlv_51= '==' ) ( (lv_damage_52_0= RULE_PERCENTAGE ) ) ) ) ) )
            	    // InternalMcmodel.g:12157:5: {...}? => ( ({...}? => (otherlv_48= '&' ( (lv_damageDefined_49_0= 'damage' ) ) (otherlv_50= '=' | otherlv_51= '==' ) ( (lv_damage_52_0= RULE_PERCENTAGE ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_9Access().getUnorderedGroup_3(), 5) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_9", "getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_9Access().getUnorderedGroup_3(), 5)");
            	    }
            	    // InternalMcmodel.g:12157:116: ( ({...}? => (otherlv_48= '&' ( (lv_damageDefined_49_0= 'damage' ) ) (otherlv_50= '=' | otherlv_51= '==' ) ( (lv_damage_52_0= RULE_PERCENTAGE ) ) ) ) )
            	    // InternalMcmodel.g:12158:6: ({...}? => (otherlv_48= '&' ( (lv_damageDefined_49_0= 'damage' ) ) (otherlv_50= '=' | otherlv_51= '==' ) ( (lv_damage_52_0= RULE_PERCENTAGE ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getOverridePredicate_9Access().getUnorderedGroup_3(), 5);
            	    // InternalMcmodel.g:12161:9: ({...}? => (otherlv_48= '&' ( (lv_damageDefined_49_0= 'damage' ) ) (otherlv_50= '=' | otherlv_51= '==' ) ( (lv_damage_52_0= RULE_PERCENTAGE ) ) ) )
            	    // InternalMcmodel.g:12161:10: {...}? => (otherlv_48= '&' ( (lv_damageDefined_49_0= 'damage' ) ) (otherlv_50= '=' | otherlv_51= '==' ) ( (lv_damage_52_0= RULE_PERCENTAGE ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_9", "true");
            	    }
            	    // InternalMcmodel.g:12161:19: (otherlv_48= '&' ( (lv_damageDefined_49_0= 'damage' ) ) (otherlv_50= '=' | otherlv_51= '==' ) ( (lv_damage_52_0= RULE_PERCENTAGE ) ) )
            	    // InternalMcmodel.g:12161:20: otherlv_48= '&' ( (lv_damageDefined_49_0= 'damage' ) ) (otherlv_50= '=' | otherlv_51= '==' ) ( (lv_damage_52_0= RULE_PERCENTAGE ) )
            	    {
            	    otherlv_48=(Token)match(input,59,FOLLOW_46); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_48, grammarAccess.getOverridePredicate_9Access().getAmpersandKeyword_3_5_0());
            	      								
            	    }
            	    // InternalMcmodel.g:12165:9: ( (lv_damageDefined_49_0= 'damage' ) )
            	    // InternalMcmodel.g:12166:10: (lv_damageDefined_49_0= 'damage' )
            	    {
            	    // InternalMcmodel.g:12166:10: (lv_damageDefined_49_0= 'damage' )
            	    // InternalMcmodel.g:12167:11: lv_damageDefined_49_0= 'damage'
            	    {
            	    lv_damageDefined_49_0=(Token)match(input,66,FOLLOW_35); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											newLeafNode(lv_damageDefined_49_0, grammarAccess.getOverridePredicate_9Access().getDamageDefinedDamageKeyword_3_5_1_0());
            	      										
            	    }
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElement(grammarAccess.getOverridePredicate_9Rule());
            	      											}
            	      											setWithLastConsumed(current, "damageDefined", true, "damage");
            	      										
            	    }

            	    }


            	    }

            	    // InternalMcmodel.g:12179:9: (otherlv_50= '=' | otherlv_51= '==' )
            	    int alt376=2;
            	    int LA376_0 = input.LA(1);

            	    if ( (LA376_0==18) ) {
            	        alt376=1;
            	    }
            	    else if ( (LA376_0==58) ) {
            	        alt376=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 376, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt376) {
            	        case 1 :
            	            // InternalMcmodel.g:12180:10: otherlv_50= '='
            	            {
            	            otherlv_50=(Token)match(input,18,FOLLOW_36); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(otherlv_50, grammarAccess.getOverridePredicate_9Access().getEqualsSignKeyword_3_5_2_0());
            	              									
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalMcmodel.g:12185:10: otherlv_51= '=='
            	            {
            	            otherlv_51=(Token)match(input,58,FOLLOW_36); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(otherlv_51, grammarAccess.getOverridePredicate_9Access().getEqualsSignEqualsSignKeyword_3_5_2_1());
            	              									
            	            }

            	            }
            	            break;

            	    }

            	    // InternalMcmodel.g:12190:9: ( (lv_damage_52_0= RULE_PERCENTAGE ) )
            	    // InternalMcmodel.g:12191:10: (lv_damage_52_0= RULE_PERCENTAGE )
            	    {
            	    // InternalMcmodel.g:12191:10: (lv_damage_52_0= RULE_PERCENTAGE )
            	    // InternalMcmodel.g:12192:11: lv_damage_52_0= RULE_PERCENTAGE
            	    {
            	    lv_damage_52_0=(Token)match(input,RULE_PERCENTAGE,FOLLOW_37); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											newLeafNode(lv_damage_52_0, grammarAccess.getOverridePredicate_9Access().getDamagePERCENTAGETerminalRuleCall_3_5_3_0());
            	      										
            	    }
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElement(grammarAccess.getOverridePredicate_9Rule());
            	      											}
            	      											setWithLastConsumed(
            	      												current,
            	      												"damage",
            	      												lv_damage_52_0,
            	      												"com.raptor.mcmodel.Mcmodel.PERCENTAGE");
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getOverridePredicate_9Access().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 7 :
            	    // InternalMcmodel.g:12214:4: ({...}? => ( ({...}? => (otherlv_53= '&' ( ( ( (lv_damagedDefined_54_0= '!' ) ) otherlv_55= 'damaged' ) | ( ( (lv_damagedDefined_56_0= 'damaged' ) ) ( (otherlv_57= '!=' ( ( (lv_damaged_58_0= 'false' ) ) | otherlv_59= 'true' ) ) | ( (otherlv_60= '=' | otherlv_61= '==' ) ( ( (lv_damaged_62_0= 'true' ) ) | otherlv_63= 'false' ) ) ) ) ) ) ) ) )
            	    {
            	    // InternalMcmodel.g:12214:4: ({...}? => ( ({...}? => (otherlv_53= '&' ( ( ( (lv_damagedDefined_54_0= '!' ) ) otherlv_55= 'damaged' ) | ( ( (lv_damagedDefined_56_0= 'damaged' ) ) ( (otherlv_57= '!=' ( ( (lv_damaged_58_0= 'false' ) ) | otherlv_59= 'true' ) ) | ( (otherlv_60= '=' | otherlv_61= '==' ) ( ( (lv_damaged_62_0= 'true' ) ) | otherlv_63= 'false' ) ) ) ) ) ) ) ) )
            	    // InternalMcmodel.g:12215:5: {...}? => ( ({...}? => (otherlv_53= '&' ( ( ( (lv_damagedDefined_54_0= '!' ) ) otherlv_55= 'damaged' ) | ( ( (lv_damagedDefined_56_0= 'damaged' ) ) ( (otherlv_57= '!=' ( ( (lv_damaged_58_0= 'false' ) ) | otherlv_59= 'true' ) ) | ( (otherlv_60= '=' | otherlv_61= '==' ) ( ( (lv_damaged_62_0= 'true' ) ) | otherlv_63= 'false' ) ) ) ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_9Access().getUnorderedGroup_3(), 6) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_9", "getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_9Access().getUnorderedGroup_3(), 6)");
            	    }
            	    // InternalMcmodel.g:12215:116: ( ({...}? => (otherlv_53= '&' ( ( ( (lv_damagedDefined_54_0= '!' ) ) otherlv_55= 'damaged' ) | ( ( (lv_damagedDefined_56_0= 'damaged' ) ) ( (otherlv_57= '!=' ( ( (lv_damaged_58_0= 'false' ) ) | otherlv_59= 'true' ) ) | ( (otherlv_60= '=' | otherlv_61= '==' ) ( ( (lv_damaged_62_0= 'true' ) ) | otherlv_63= 'false' ) ) ) ) ) ) ) )
            	    // InternalMcmodel.g:12216:6: ({...}? => (otherlv_53= '&' ( ( ( (lv_damagedDefined_54_0= '!' ) ) otherlv_55= 'damaged' ) | ( ( (lv_damagedDefined_56_0= 'damaged' ) ) ( (otherlv_57= '!=' ( ( (lv_damaged_58_0= 'false' ) ) | otherlv_59= 'true' ) ) | ( (otherlv_60= '=' | otherlv_61= '==' ) ( ( (lv_damaged_62_0= 'true' ) ) | otherlv_63= 'false' ) ) ) ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getOverridePredicate_9Access().getUnorderedGroup_3(), 6);
            	    // InternalMcmodel.g:12219:9: ({...}? => (otherlv_53= '&' ( ( ( (lv_damagedDefined_54_0= '!' ) ) otherlv_55= 'damaged' ) | ( ( (lv_damagedDefined_56_0= 'damaged' ) ) ( (otherlv_57= '!=' ( ( (lv_damaged_58_0= 'false' ) ) | otherlv_59= 'true' ) ) | ( (otherlv_60= '=' | otherlv_61= '==' ) ( ( (lv_damaged_62_0= 'true' ) ) | otherlv_63= 'false' ) ) ) ) ) ) )
            	    // InternalMcmodel.g:12219:10: {...}? => (otherlv_53= '&' ( ( ( (lv_damagedDefined_54_0= '!' ) ) otherlv_55= 'damaged' ) | ( ( (lv_damagedDefined_56_0= 'damaged' ) ) ( (otherlv_57= '!=' ( ( (lv_damaged_58_0= 'false' ) ) | otherlv_59= 'true' ) ) | ( (otherlv_60= '=' | otherlv_61= '==' ) ( ( (lv_damaged_62_0= 'true' ) ) | otherlv_63= 'false' ) ) ) ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_9", "true");
            	    }
            	    // InternalMcmodel.g:12219:19: (otherlv_53= '&' ( ( ( (lv_damagedDefined_54_0= '!' ) ) otherlv_55= 'damaged' ) | ( ( (lv_damagedDefined_56_0= 'damaged' ) ) ( (otherlv_57= '!=' ( ( (lv_damaged_58_0= 'false' ) ) | otherlv_59= 'true' ) ) | ( (otherlv_60= '=' | otherlv_61= '==' ) ( ( (lv_damaged_62_0= 'true' ) ) | otherlv_63= 'false' ) ) ) ) ) )
            	    // InternalMcmodel.g:12219:20: otherlv_53= '&' ( ( ( (lv_damagedDefined_54_0= '!' ) ) otherlv_55= 'damaged' ) | ( ( (lv_damagedDefined_56_0= 'damaged' ) ) ( (otherlv_57= '!=' ( ( (lv_damaged_58_0= 'false' ) ) | otherlv_59= 'true' ) ) | ( (otherlv_60= '=' | otherlv_61= '==' ) ( ( (lv_damaged_62_0= 'true' ) ) | otherlv_63= 'false' ) ) ) ) )
            	    {
            	    otherlv_53=(Token)match(input,59,FOLLOW_47); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_53, grammarAccess.getOverridePredicate_9Access().getAmpersandKeyword_3_6_0());
            	      								
            	    }
            	    // InternalMcmodel.g:12223:9: ( ( ( (lv_damagedDefined_54_0= '!' ) ) otherlv_55= 'damaged' ) | ( ( (lv_damagedDefined_56_0= 'damaged' ) ) ( (otherlv_57= '!=' ( ( (lv_damaged_58_0= 'false' ) ) | otherlv_59= 'true' ) ) | ( (otherlv_60= '=' | otherlv_61= '==' ) ( ( (lv_damaged_62_0= 'true' ) ) | otherlv_63= 'false' ) ) ) ) )
            	    int alt381=2;
            	    int LA381_0 = input.LA(1);

            	    if ( (LA381_0==60) ) {
            	        alt381=1;
            	    }
            	    else if ( (LA381_0==67) ) {
            	        alt381=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 381, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt381) {
            	        case 1 :
            	            // InternalMcmodel.g:12224:10: ( ( (lv_damagedDefined_54_0= '!' ) ) otherlv_55= 'damaged' )
            	            {
            	            // InternalMcmodel.g:12224:10: ( ( (lv_damagedDefined_54_0= '!' ) ) otherlv_55= 'damaged' )
            	            // InternalMcmodel.g:12225:11: ( (lv_damagedDefined_54_0= '!' ) ) otherlv_55= 'damaged'
            	            {
            	            // InternalMcmodel.g:12225:11: ( (lv_damagedDefined_54_0= '!' ) )
            	            // InternalMcmodel.g:12226:12: (lv_damagedDefined_54_0= '!' )
            	            {
            	            // InternalMcmodel.g:12226:12: (lv_damagedDefined_54_0= '!' )
            	            // InternalMcmodel.g:12227:13: lv_damagedDefined_54_0= '!'
            	            {
            	            lv_damagedDefined_54_0=(Token)match(input,60,FOLLOW_48); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              													newLeafNode(lv_damagedDefined_54_0, grammarAccess.getOverridePredicate_9Access().getDamagedDefinedExclamationMarkKeyword_3_6_1_0_0_0());
            	              												
            	            }
            	            if ( state.backtracking==0 ) {

            	              													if (current==null) {
            	              														current = createModelElement(grammarAccess.getOverridePredicate_9Rule());
            	              													}
            	              													setWithLastConsumed(current, "damagedDefined", true, "!");
            	              												
            	            }

            	            }


            	            }

            	            otherlv_55=(Token)match(input,67,FOLLOW_37); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              											newLeafNode(otherlv_55, grammarAccess.getOverridePredicate_9Access().getDamagedKeyword_3_6_1_0_1());
            	              										
            	            }

            	            }


            	            }
            	            break;
            	        case 2 :
            	            // InternalMcmodel.g:12245:10: ( ( (lv_damagedDefined_56_0= 'damaged' ) ) ( (otherlv_57= '!=' ( ( (lv_damaged_58_0= 'false' ) ) | otherlv_59= 'true' ) ) | ( (otherlv_60= '=' | otherlv_61= '==' ) ( ( (lv_damaged_62_0= 'true' ) ) | otherlv_63= 'false' ) ) ) )
            	            {
            	            // InternalMcmodel.g:12245:10: ( ( (lv_damagedDefined_56_0= 'damaged' ) ) ( (otherlv_57= '!=' ( ( (lv_damaged_58_0= 'false' ) ) | otherlv_59= 'true' ) ) | ( (otherlv_60= '=' | otherlv_61= '==' ) ( ( (lv_damaged_62_0= 'true' ) ) | otherlv_63= 'false' ) ) ) )
            	            // InternalMcmodel.g:12246:11: ( (lv_damagedDefined_56_0= 'damaged' ) ) ( (otherlv_57= '!=' ( ( (lv_damaged_58_0= 'false' ) ) | otherlv_59= 'true' ) ) | ( (otherlv_60= '=' | otherlv_61= '==' ) ( ( (lv_damaged_62_0= 'true' ) ) | otherlv_63= 'false' ) ) )
            	            {
            	            // InternalMcmodel.g:12246:11: ( (lv_damagedDefined_56_0= 'damaged' ) )
            	            // InternalMcmodel.g:12247:12: (lv_damagedDefined_56_0= 'damaged' )
            	            {
            	            // InternalMcmodel.g:12247:12: (lv_damagedDefined_56_0= 'damaged' )
            	            // InternalMcmodel.g:12248:13: lv_damagedDefined_56_0= 'damaged'
            	            {
            	            lv_damagedDefined_56_0=(Token)match(input,67,FOLLOW_40); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              													newLeafNode(lv_damagedDefined_56_0, grammarAccess.getOverridePredicate_9Access().getDamagedDefinedDamagedKeyword_3_6_1_1_0_0());
            	              												
            	            }
            	            if ( state.backtracking==0 ) {

            	              													if (current==null) {
            	              														current = createModelElement(grammarAccess.getOverridePredicate_9Rule());
            	              													}
            	              													setWithLastConsumed(current, "damagedDefined", true, "damaged");
            	              												
            	            }

            	            }


            	            }

            	            // InternalMcmodel.g:12260:11: ( (otherlv_57= '!=' ( ( (lv_damaged_58_0= 'false' ) ) | otherlv_59= 'true' ) ) | ( (otherlv_60= '=' | otherlv_61= '==' ) ( ( (lv_damaged_62_0= 'true' ) ) | otherlv_63= 'false' ) ) )
            	            int alt380=2;
            	            int LA380_0 = input.LA(1);

            	            if ( (LA380_0==62) ) {
            	                alt380=1;
            	            }
            	            else if ( (LA380_0==18||LA380_0==58) ) {
            	                alt380=2;
            	            }
            	            else {
            	                if (state.backtracking>0) {state.failed=true; return current;}
            	                NoViableAltException nvae =
            	                    new NoViableAltException("", 380, 0, input);

            	                throw nvae;
            	            }
            	            switch (alt380) {
            	                case 1 :
            	                    // InternalMcmodel.g:12261:12: (otherlv_57= '!=' ( ( (lv_damaged_58_0= 'false' ) ) | otherlv_59= 'true' ) )
            	                    {
            	                    // InternalMcmodel.g:12261:12: (otherlv_57= '!=' ( ( (lv_damaged_58_0= 'false' ) ) | otherlv_59= 'true' ) )
            	                    // InternalMcmodel.g:12262:13: otherlv_57= '!=' ( ( (lv_damaged_58_0= 'false' ) ) | otherlv_59= 'true' )
            	                    {
            	                    otherlv_57=(Token)match(input,62,FOLLOW_7); if (state.failed) return current;
            	                    if ( state.backtracking==0 ) {

            	                      													newLeafNode(otherlv_57, grammarAccess.getOverridePredicate_9Access().getExclamationMarkEqualsSignKeyword_3_6_1_1_1_0_0());
            	                      												
            	                    }
            	                    // InternalMcmodel.g:12266:13: ( ( (lv_damaged_58_0= 'false' ) ) | otherlv_59= 'true' )
            	                    int alt377=2;
            	                    int LA377_0 = input.LA(1);

            	                    if ( (LA377_0==21) ) {
            	                        alt377=1;
            	                    }
            	                    else if ( (LA377_0==20) ) {
            	                        alt377=2;
            	                    }
            	                    else {
            	                        if (state.backtracking>0) {state.failed=true; return current;}
            	                        NoViableAltException nvae =
            	                            new NoViableAltException("", 377, 0, input);

            	                        throw nvae;
            	                    }
            	                    switch (alt377) {
            	                        case 1 :
            	                            // InternalMcmodel.g:12267:14: ( (lv_damaged_58_0= 'false' ) )
            	                            {
            	                            // InternalMcmodel.g:12267:14: ( (lv_damaged_58_0= 'false' ) )
            	                            // InternalMcmodel.g:12268:15: (lv_damaged_58_0= 'false' )
            	                            {
            	                            // InternalMcmodel.g:12268:15: (lv_damaged_58_0= 'false' )
            	                            // InternalMcmodel.g:12269:16: lv_damaged_58_0= 'false'
            	                            {
            	                            lv_damaged_58_0=(Token)match(input,21,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              																newLeafNode(lv_damaged_58_0, grammarAccess.getOverridePredicate_9Access().getDamagedFalseKeyword_3_6_1_1_1_0_1_0_0());
            	                              															
            	                            }
            	                            if ( state.backtracking==0 ) {

            	                              																if (current==null) {
            	                              																	current = createModelElement(grammarAccess.getOverridePredicate_9Rule());
            	                              																}
            	                              																setWithLastConsumed(current, "damaged", true, "false");
            	                              															
            	                            }

            	                            }


            	                            }


            	                            }
            	                            break;
            	                        case 2 :
            	                            // InternalMcmodel.g:12282:14: otherlv_59= 'true'
            	                            {
            	                            otherlv_59=(Token)match(input,20,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_59, grammarAccess.getOverridePredicate_9Access().getTrueKeyword_3_6_1_1_1_0_1_1());
            	                              													
            	                            }

            	                            }
            	                            break;

            	                    }


            	                    }


            	                    }
            	                    break;
            	                case 2 :
            	                    // InternalMcmodel.g:12289:12: ( (otherlv_60= '=' | otherlv_61= '==' ) ( ( (lv_damaged_62_0= 'true' ) ) | otherlv_63= 'false' ) )
            	                    {
            	                    // InternalMcmodel.g:12289:12: ( (otherlv_60= '=' | otherlv_61= '==' ) ( ( (lv_damaged_62_0= 'true' ) ) | otherlv_63= 'false' ) )
            	                    // InternalMcmodel.g:12290:13: (otherlv_60= '=' | otherlv_61= '==' ) ( ( (lv_damaged_62_0= 'true' ) ) | otherlv_63= 'false' )
            	                    {
            	                    // InternalMcmodel.g:12290:13: (otherlv_60= '=' | otherlv_61= '==' )
            	                    int alt378=2;
            	                    int LA378_0 = input.LA(1);

            	                    if ( (LA378_0==18) ) {
            	                        alt378=1;
            	                    }
            	                    else if ( (LA378_0==58) ) {
            	                        alt378=2;
            	                    }
            	                    else {
            	                        if (state.backtracking>0) {state.failed=true; return current;}
            	                        NoViableAltException nvae =
            	                            new NoViableAltException("", 378, 0, input);

            	                        throw nvae;
            	                    }
            	                    switch (alt378) {
            	                        case 1 :
            	                            // InternalMcmodel.g:12291:14: otherlv_60= '='
            	                            {
            	                            otherlv_60=(Token)match(input,18,FOLLOW_7); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_60, grammarAccess.getOverridePredicate_9Access().getEqualsSignKeyword_3_6_1_1_1_1_0_0());
            	                              													
            	                            }

            	                            }
            	                            break;
            	                        case 2 :
            	                            // InternalMcmodel.g:12296:14: otherlv_61= '=='
            	                            {
            	                            otherlv_61=(Token)match(input,58,FOLLOW_7); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_61, grammarAccess.getOverridePredicate_9Access().getEqualsSignEqualsSignKeyword_3_6_1_1_1_1_0_1());
            	                              													
            	                            }

            	                            }
            	                            break;

            	                    }

            	                    // InternalMcmodel.g:12301:13: ( ( (lv_damaged_62_0= 'true' ) ) | otherlv_63= 'false' )
            	                    int alt379=2;
            	                    int LA379_0 = input.LA(1);

            	                    if ( (LA379_0==20) ) {
            	                        alt379=1;
            	                    }
            	                    else if ( (LA379_0==21) ) {
            	                        alt379=2;
            	                    }
            	                    else {
            	                        if (state.backtracking>0) {state.failed=true; return current;}
            	                        NoViableAltException nvae =
            	                            new NoViableAltException("", 379, 0, input);

            	                        throw nvae;
            	                    }
            	                    switch (alt379) {
            	                        case 1 :
            	                            // InternalMcmodel.g:12302:14: ( (lv_damaged_62_0= 'true' ) )
            	                            {
            	                            // InternalMcmodel.g:12302:14: ( (lv_damaged_62_0= 'true' ) )
            	                            // InternalMcmodel.g:12303:15: (lv_damaged_62_0= 'true' )
            	                            {
            	                            // InternalMcmodel.g:12303:15: (lv_damaged_62_0= 'true' )
            	                            // InternalMcmodel.g:12304:16: lv_damaged_62_0= 'true'
            	                            {
            	                            lv_damaged_62_0=(Token)match(input,20,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              																newLeafNode(lv_damaged_62_0, grammarAccess.getOverridePredicate_9Access().getDamagedTrueKeyword_3_6_1_1_1_1_1_0_0());
            	                              															
            	                            }
            	                            if ( state.backtracking==0 ) {

            	                              																if (current==null) {
            	                              																	current = createModelElement(grammarAccess.getOverridePredicate_9Rule());
            	                              																}
            	                              																setWithLastConsumed(current, "damaged", true, "true");
            	                              															
            	                            }

            	                            }


            	                            }


            	                            }
            	                            break;
            	                        case 2 :
            	                            // InternalMcmodel.g:12317:14: otherlv_63= 'false'
            	                            {
            	                            otherlv_63=(Token)match(input,21,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_63, grammarAccess.getOverridePredicate_9Access().getFalseKeyword_3_6_1_1_1_1_1_1());
            	                              													
            	                            }

            	                            }
            	                            break;

            	                    }


            	                    }


            	                    }
            	                    break;

            	            }


            	            }


            	            }
            	            break;

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getOverridePredicate_9Access().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 8 :
            	    // InternalMcmodel.g:12332:4: ({...}? => ( ({...}? => (otherlv_64= '&' ( ( ( (lv_lefthandedDefined_65_0= '!' ) ) otherlv_66= 'lefthanded' ) | ( ( (lv_lefthandedDefined_67_0= 'lefthanded' ) ) ( (otherlv_68= '!=' ( ( (lv_lefthanded_69_0= 'false' ) ) | otherlv_70= 'true' ) ) | ( (otherlv_71= '=' | otherlv_72= '==' ) ( ( (lv_lefthanded_73_0= 'true' ) ) | otherlv_74= 'false' ) ) ) ) ) ) ) ) )
            	    {
            	    // InternalMcmodel.g:12332:4: ({...}? => ( ({...}? => (otherlv_64= '&' ( ( ( (lv_lefthandedDefined_65_0= '!' ) ) otherlv_66= 'lefthanded' ) | ( ( (lv_lefthandedDefined_67_0= 'lefthanded' ) ) ( (otherlv_68= '!=' ( ( (lv_lefthanded_69_0= 'false' ) ) | otherlv_70= 'true' ) ) | ( (otherlv_71= '=' | otherlv_72= '==' ) ( ( (lv_lefthanded_73_0= 'true' ) ) | otherlv_74= 'false' ) ) ) ) ) ) ) ) )
            	    // InternalMcmodel.g:12333:5: {...}? => ( ({...}? => (otherlv_64= '&' ( ( ( (lv_lefthandedDefined_65_0= '!' ) ) otherlv_66= 'lefthanded' ) | ( ( (lv_lefthandedDefined_67_0= 'lefthanded' ) ) ( (otherlv_68= '!=' ( ( (lv_lefthanded_69_0= 'false' ) ) | otherlv_70= 'true' ) ) | ( (otherlv_71= '=' | otherlv_72= '==' ) ( ( (lv_lefthanded_73_0= 'true' ) ) | otherlv_74= 'false' ) ) ) ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_9Access().getUnorderedGroup_3(), 7) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_9", "getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_9Access().getUnorderedGroup_3(), 7)");
            	    }
            	    // InternalMcmodel.g:12333:116: ( ({...}? => (otherlv_64= '&' ( ( ( (lv_lefthandedDefined_65_0= '!' ) ) otherlv_66= 'lefthanded' ) | ( ( (lv_lefthandedDefined_67_0= 'lefthanded' ) ) ( (otherlv_68= '!=' ( ( (lv_lefthanded_69_0= 'false' ) ) | otherlv_70= 'true' ) ) | ( (otherlv_71= '=' | otherlv_72= '==' ) ( ( (lv_lefthanded_73_0= 'true' ) ) | otherlv_74= 'false' ) ) ) ) ) ) ) )
            	    // InternalMcmodel.g:12334:6: ({...}? => (otherlv_64= '&' ( ( ( (lv_lefthandedDefined_65_0= '!' ) ) otherlv_66= 'lefthanded' ) | ( ( (lv_lefthandedDefined_67_0= 'lefthanded' ) ) ( (otherlv_68= '!=' ( ( (lv_lefthanded_69_0= 'false' ) ) | otherlv_70= 'true' ) ) | ( (otherlv_71= '=' | otherlv_72= '==' ) ( ( (lv_lefthanded_73_0= 'true' ) ) | otherlv_74= 'false' ) ) ) ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getOverridePredicate_9Access().getUnorderedGroup_3(), 7);
            	    // InternalMcmodel.g:12337:9: ({...}? => (otherlv_64= '&' ( ( ( (lv_lefthandedDefined_65_0= '!' ) ) otherlv_66= 'lefthanded' ) | ( ( (lv_lefthandedDefined_67_0= 'lefthanded' ) ) ( (otherlv_68= '!=' ( ( (lv_lefthanded_69_0= 'false' ) ) | otherlv_70= 'true' ) ) | ( (otherlv_71= '=' | otherlv_72= '==' ) ( ( (lv_lefthanded_73_0= 'true' ) ) | otherlv_74= 'false' ) ) ) ) ) ) )
            	    // InternalMcmodel.g:12337:10: {...}? => (otherlv_64= '&' ( ( ( (lv_lefthandedDefined_65_0= '!' ) ) otherlv_66= 'lefthanded' ) | ( ( (lv_lefthandedDefined_67_0= 'lefthanded' ) ) ( (otherlv_68= '!=' ( ( (lv_lefthanded_69_0= 'false' ) ) | otherlv_70= 'true' ) ) | ( (otherlv_71= '=' | otherlv_72= '==' ) ( ( (lv_lefthanded_73_0= 'true' ) ) | otherlv_74= 'false' ) ) ) ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_9", "true");
            	    }
            	    // InternalMcmodel.g:12337:19: (otherlv_64= '&' ( ( ( (lv_lefthandedDefined_65_0= '!' ) ) otherlv_66= 'lefthanded' ) | ( ( (lv_lefthandedDefined_67_0= 'lefthanded' ) ) ( (otherlv_68= '!=' ( ( (lv_lefthanded_69_0= 'false' ) ) | otherlv_70= 'true' ) ) | ( (otherlv_71= '=' | otherlv_72= '==' ) ( ( (lv_lefthanded_73_0= 'true' ) ) | otherlv_74= 'false' ) ) ) ) ) )
            	    // InternalMcmodel.g:12337:20: otherlv_64= '&' ( ( ( (lv_lefthandedDefined_65_0= '!' ) ) otherlv_66= 'lefthanded' ) | ( ( (lv_lefthandedDefined_67_0= 'lefthanded' ) ) ( (otherlv_68= '!=' ( ( (lv_lefthanded_69_0= 'false' ) ) | otherlv_70= 'true' ) ) | ( (otherlv_71= '=' | otherlv_72= '==' ) ( ( (lv_lefthanded_73_0= 'true' ) ) | otherlv_74= 'false' ) ) ) ) )
            	    {
            	    otherlv_64=(Token)match(input,59,FOLLOW_49); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_64, grammarAccess.getOverridePredicate_9Access().getAmpersandKeyword_3_7_0());
            	      								
            	    }
            	    // InternalMcmodel.g:12341:9: ( ( ( (lv_lefthandedDefined_65_0= '!' ) ) otherlv_66= 'lefthanded' ) | ( ( (lv_lefthandedDefined_67_0= 'lefthanded' ) ) ( (otherlv_68= '!=' ( ( (lv_lefthanded_69_0= 'false' ) ) | otherlv_70= 'true' ) ) | ( (otherlv_71= '=' | otherlv_72= '==' ) ( ( (lv_lefthanded_73_0= 'true' ) ) | otherlv_74= 'false' ) ) ) ) )
            	    int alt386=2;
            	    int LA386_0 = input.LA(1);

            	    if ( (LA386_0==60) ) {
            	        alt386=1;
            	    }
            	    else if ( (LA386_0==68) ) {
            	        alt386=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 386, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt386) {
            	        case 1 :
            	            // InternalMcmodel.g:12342:10: ( ( (lv_lefthandedDefined_65_0= '!' ) ) otherlv_66= 'lefthanded' )
            	            {
            	            // InternalMcmodel.g:12342:10: ( ( (lv_lefthandedDefined_65_0= '!' ) ) otherlv_66= 'lefthanded' )
            	            // InternalMcmodel.g:12343:11: ( (lv_lefthandedDefined_65_0= '!' ) ) otherlv_66= 'lefthanded'
            	            {
            	            // InternalMcmodel.g:12343:11: ( (lv_lefthandedDefined_65_0= '!' ) )
            	            // InternalMcmodel.g:12344:12: (lv_lefthandedDefined_65_0= '!' )
            	            {
            	            // InternalMcmodel.g:12344:12: (lv_lefthandedDefined_65_0= '!' )
            	            // InternalMcmodel.g:12345:13: lv_lefthandedDefined_65_0= '!'
            	            {
            	            lv_lefthandedDefined_65_0=(Token)match(input,60,FOLLOW_50); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              													newLeafNode(lv_lefthandedDefined_65_0, grammarAccess.getOverridePredicate_9Access().getLefthandedDefinedExclamationMarkKeyword_3_7_1_0_0_0());
            	              												
            	            }
            	            if ( state.backtracking==0 ) {

            	              													if (current==null) {
            	              														current = createModelElement(grammarAccess.getOverridePredicate_9Rule());
            	              													}
            	              													setWithLastConsumed(current, "lefthandedDefined", true, "!");
            	              												
            	            }

            	            }


            	            }

            	            otherlv_66=(Token)match(input,68,FOLLOW_37); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              											newLeafNode(otherlv_66, grammarAccess.getOverridePredicate_9Access().getLefthandedKeyword_3_7_1_0_1());
            	              										
            	            }

            	            }


            	            }
            	            break;
            	        case 2 :
            	            // InternalMcmodel.g:12363:10: ( ( (lv_lefthandedDefined_67_0= 'lefthanded' ) ) ( (otherlv_68= '!=' ( ( (lv_lefthanded_69_0= 'false' ) ) | otherlv_70= 'true' ) ) | ( (otherlv_71= '=' | otherlv_72= '==' ) ( ( (lv_lefthanded_73_0= 'true' ) ) | otherlv_74= 'false' ) ) ) )
            	            {
            	            // InternalMcmodel.g:12363:10: ( ( (lv_lefthandedDefined_67_0= 'lefthanded' ) ) ( (otherlv_68= '!=' ( ( (lv_lefthanded_69_0= 'false' ) ) | otherlv_70= 'true' ) ) | ( (otherlv_71= '=' | otherlv_72= '==' ) ( ( (lv_lefthanded_73_0= 'true' ) ) | otherlv_74= 'false' ) ) ) )
            	            // InternalMcmodel.g:12364:11: ( (lv_lefthandedDefined_67_0= 'lefthanded' ) ) ( (otherlv_68= '!=' ( ( (lv_lefthanded_69_0= 'false' ) ) | otherlv_70= 'true' ) ) | ( (otherlv_71= '=' | otherlv_72= '==' ) ( ( (lv_lefthanded_73_0= 'true' ) ) | otherlv_74= 'false' ) ) )
            	            {
            	            // InternalMcmodel.g:12364:11: ( (lv_lefthandedDefined_67_0= 'lefthanded' ) )
            	            // InternalMcmodel.g:12365:12: (lv_lefthandedDefined_67_0= 'lefthanded' )
            	            {
            	            // InternalMcmodel.g:12365:12: (lv_lefthandedDefined_67_0= 'lefthanded' )
            	            // InternalMcmodel.g:12366:13: lv_lefthandedDefined_67_0= 'lefthanded'
            	            {
            	            lv_lefthandedDefined_67_0=(Token)match(input,68,FOLLOW_40); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              													newLeafNode(lv_lefthandedDefined_67_0, grammarAccess.getOverridePredicate_9Access().getLefthandedDefinedLefthandedKeyword_3_7_1_1_0_0());
            	              												
            	            }
            	            if ( state.backtracking==0 ) {

            	              													if (current==null) {
            	              														current = createModelElement(grammarAccess.getOverridePredicate_9Rule());
            	              													}
            	              													setWithLastConsumed(current, "lefthandedDefined", true, "lefthanded");
            	              												
            	            }

            	            }


            	            }

            	            // InternalMcmodel.g:12378:11: ( (otherlv_68= '!=' ( ( (lv_lefthanded_69_0= 'false' ) ) | otherlv_70= 'true' ) ) | ( (otherlv_71= '=' | otherlv_72= '==' ) ( ( (lv_lefthanded_73_0= 'true' ) ) | otherlv_74= 'false' ) ) )
            	            int alt385=2;
            	            int LA385_0 = input.LA(1);

            	            if ( (LA385_0==62) ) {
            	                alt385=1;
            	            }
            	            else if ( (LA385_0==18||LA385_0==58) ) {
            	                alt385=2;
            	            }
            	            else {
            	                if (state.backtracking>0) {state.failed=true; return current;}
            	                NoViableAltException nvae =
            	                    new NoViableAltException("", 385, 0, input);

            	                throw nvae;
            	            }
            	            switch (alt385) {
            	                case 1 :
            	                    // InternalMcmodel.g:12379:12: (otherlv_68= '!=' ( ( (lv_lefthanded_69_0= 'false' ) ) | otherlv_70= 'true' ) )
            	                    {
            	                    // InternalMcmodel.g:12379:12: (otherlv_68= '!=' ( ( (lv_lefthanded_69_0= 'false' ) ) | otherlv_70= 'true' ) )
            	                    // InternalMcmodel.g:12380:13: otherlv_68= '!=' ( ( (lv_lefthanded_69_0= 'false' ) ) | otherlv_70= 'true' )
            	                    {
            	                    otherlv_68=(Token)match(input,62,FOLLOW_7); if (state.failed) return current;
            	                    if ( state.backtracking==0 ) {

            	                      													newLeafNode(otherlv_68, grammarAccess.getOverridePredicate_9Access().getExclamationMarkEqualsSignKeyword_3_7_1_1_1_0_0());
            	                      												
            	                    }
            	                    // InternalMcmodel.g:12384:13: ( ( (lv_lefthanded_69_0= 'false' ) ) | otherlv_70= 'true' )
            	                    int alt382=2;
            	                    int LA382_0 = input.LA(1);

            	                    if ( (LA382_0==21) ) {
            	                        alt382=1;
            	                    }
            	                    else if ( (LA382_0==20) ) {
            	                        alt382=2;
            	                    }
            	                    else {
            	                        if (state.backtracking>0) {state.failed=true; return current;}
            	                        NoViableAltException nvae =
            	                            new NoViableAltException("", 382, 0, input);

            	                        throw nvae;
            	                    }
            	                    switch (alt382) {
            	                        case 1 :
            	                            // InternalMcmodel.g:12385:14: ( (lv_lefthanded_69_0= 'false' ) )
            	                            {
            	                            // InternalMcmodel.g:12385:14: ( (lv_lefthanded_69_0= 'false' ) )
            	                            // InternalMcmodel.g:12386:15: (lv_lefthanded_69_0= 'false' )
            	                            {
            	                            // InternalMcmodel.g:12386:15: (lv_lefthanded_69_0= 'false' )
            	                            // InternalMcmodel.g:12387:16: lv_lefthanded_69_0= 'false'
            	                            {
            	                            lv_lefthanded_69_0=(Token)match(input,21,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              																newLeafNode(lv_lefthanded_69_0, grammarAccess.getOverridePredicate_9Access().getLefthandedFalseKeyword_3_7_1_1_1_0_1_0_0());
            	                              															
            	                            }
            	                            if ( state.backtracking==0 ) {

            	                              																if (current==null) {
            	                              																	current = createModelElement(grammarAccess.getOverridePredicate_9Rule());
            	                              																}
            	                              																setWithLastConsumed(current, "lefthanded", true, "false");
            	                              															
            	                            }

            	                            }


            	                            }


            	                            }
            	                            break;
            	                        case 2 :
            	                            // InternalMcmodel.g:12400:14: otherlv_70= 'true'
            	                            {
            	                            otherlv_70=(Token)match(input,20,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_70, grammarAccess.getOverridePredicate_9Access().getTrueKeyword_3_7_1_1_1_0_1_1());
            	                              													
            	                            }

            	                            }
            	                            break;

            	                    }


            	                    }


            	                    }
            	                    break;
            	                case 2 :
            	                    // InternalMcmodel.g:12407:12: ( (otherlv_71= '=' | otherlv_72= '==' ) ( ( (lv_lefthanded_73_0= 'true' ) ) | otherlv_74= 'false' ) )
            	                    {
            	                    // InternalMcmodel.g:12407:12: ( (otherlv_71= '=' | otherlv_72= '==' ) ( ( (lv_lefthanded_73_0= 'true' ) ) | otherlv_74= 'false' ) )
            	                    // InternalMcmodel.g:12408:13: (otherlv_71= '=' | otherlv_72= '==' ) ( ( (lv_lefthanded_73_0= 'true' ) ) | otherlv_74= 'false' )
            	                    {
            	                    // InternalMcmodel.g:12408:13: (otherlv_71= '=' | otherlv_72= '==' )
            	                    int alt383=2;
            	                    int LA383_0 = input.LA(1);

            	                    if ( (LA383_0==18) ) {
            	                        alt383=1;
            	                    }
            	                    else if ( (LA383_0==58) ) {
            	                        alt383=2;
            	                    }
            	                    else {
            	                        if (state.backtracking>0) {state.failed=true; return current;}
            	                        NoViableAltException nvae =
            	                            new NoViableAltException("", 383, 0, input);

            	                        throw nvae;
            	                    }
            	                    switch (alt383) {
            	                        case 1 :
            	                            // InternalMcmodel.g:12409:14: otherlv_71= '='
            	                            {
            	                            otherlv_71=(Token)match(input,18,FOLLOW_7); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_71, grammarAccess.getOverridePredicate_9Access().getEqualsSignKeyword_3_7_1_1_1_1_0_0());
            	                              													
            	                            }

            	                            }
            	                            break;
            	                        case 2 :
            	                            // InternalMcmodel.g:12414:14: otherlv_72= '=='
            	                            {
            	                            otherlv_72=(Token)match(input,58,FOLLOW_7); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_72, grammarAccess.getOverridePredicate_9Access().getEqualsSignEqualsSignKeyword_3_7_1_1_1_1_0_1());
            	                              													
            	                            }

            	                            }
            	                            break;

            	                    }

            	                    // InternalMcmodel.g:12419:13: ( ( (lv_lefthanded_73_0= 'true' ) ) | otherlv_74= 'false' )
            	                    int alt384=2;
            	                    int LA384_0 = input.LA(1);

            	                    if ( (LA384_0==20) ) {
            	                        alt384=1;
            	                    }
            	                    else if ( (LA384_0==21) ) {
            	                        alt384=2;
            	                    }
            	                    else {
            	                        if (state.backtracking>0) {state.failed=true; return current;}
            	                        NoViableAltException nvae =
            	                            new NoViableAltException("", 384, 0, input);

            	                        throw nvae;
            	                    }
            	                    switch (alt384) {
            	                        case 1 :
            	                            // InternalMcmodel.g:12420:14: ( (lv_lefthanded_73_0= 'true' ) )
            	                            {
            	                            // InternalMcmodel.g:12420:14: ( (lv_lefthanded_73_0= 'true' ) )
            	                            // InternalMcmodel.g:12421:15: (lv_lefthanded_73_0= 'true' )
            	                            {
            	                            // InternalMcmodel.g:12421:15: (lv_lefthanded_73_0= 'true' )
            	                            // InternalMcmodel.g:12422:16: lv_lefthanded_73_0= 'true'
            	                            {
            	                            lv_lefthanded_73_0=(Token)match(input,20,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              																newLeafNode(lv_lefthanded_73_0, grammarAccess.getOverridePredicate_9Access().getLefthandedTrueKeyword_3_7_1_1_1_1_1_0_0());
            	                              															
            	                            }
            	                            if ( state.backtracking==0 ) {

            	                              																if (current==null) {
            	                              																	current = createModelElement(grammarAccess.getOverridePredicate_9Rule());
            	                              																}
            	                              																setWithLastConsumed(current, "lefthanded", true, "true");
            	                              															
            	                            }

            	                            }


            	                            }


            	                            }
            	                            break;
            	                        case 2 :
            	                            // InternalMcmodel.g:12435:14: otherlv_74= 'false'
            	                            {
            	                            otherlv_74=(Token)match(input,21,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_74, grammarAccess.getOverridePredicate_9Access().getFalseKeyword_3_7_1_1_1_1_1_1());
            	                              													
            	                            }

            	                            }
            	                            break;

            	                    }


            	                    }


            	                    }
            	                    break;

            	            }


            	            }


            	            }
            	            break;

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getOverridePredicate_9Access().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 9 :
            	    // InternalMcmodel.g:12450:4: ({...}? => ( ({...}? => (otherlv_75= '&' ( ( ( (lv_pullingDefined_76_0= '!' ) ) otherlv_77= 'pulling' ) | ( ( (lv_pullingDefined_78_0= 'pulling' ) ) ( (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) ) | ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) ) ) ) ) ) ) ) )
            	    {
            	    // InternalMcmodel.g:12450:4: ({...}? => ( ({...}? => (otherlv_75= '&' ( ( ( (lv_pullingDefined_76_0= '!' ) ) otherlv_77= 'pulling' ) | ( ( (lv_pullingDefined_78_0= 'pulling' ) ) ( (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) ) | ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) ) ) ) ) ) ) ) )
            	    // InternalMcmodel.g:12451:5: {...}? => ( ({...}? => (otherlv_75= '&' ( ( ( (lv_pullingDefined_76_0= '!' ) ) otherlv_77= 'pulling' ) | ( ( (lv_pullingDefined_78_0= 'pulling' ) ) ( (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) ) | ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) ) ) ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_9Access().getUnorderedGroup_3(), 8) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_9", "getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_9Access().getUnorderedGroup_3(), 8)");
            	    }
            	    // InternalMcmodel.g:12451:116: ( ({...}? => (otherlv_75= '&' ( ( ( (lv_pullingDefined_76_0= '!' ) ) otherlv_77= 'pulling' ) | ( ( (lv_pullingDefined_78_0= 'pulling' ) ) ( (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) ) | ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) ) ) ) ) ) ) )
            	    // InternalMcmodel.g:12452:6: ({...}? => (otherlv_75= '&' ( ( ( (lv_pullingDefined_76_0= '!' ) ) otherlv_77= 'pulling' ) | ( ( (lv_pullingDefined_78_0= 'pulling' ) ) ( (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) ) | ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) ) ) ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getOverridePredicate_9Access().getUnorderedGroup_3(), 8);
            	    // InternalMcmodel.g:12455:9: ({...}? => (otherlv_75= '&' ( ( ( (lv_pullingDefined_76_0= '!' ) ) otherlv_77= 'pulling' ) | ( ( (lv_pullingDefined_78_0= 'pulling' ) ) ( (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) ) | ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) ) ) ) ) ) )
            	    // InternalMcmodel.g:12455:10: {...}? => (otherlv_75= '&' ( ( ( (lv_pullingDefined_76_0= '!' ) ) otherlv_77= 'pulling' ) | ( ( (lv_pullingDefined_78_0= 'pulling' ) ) ( (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) ) | ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) ) ) ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_9", "true");
            	    }
            	    // InternalMcmodel.g:12455:19: (otherlv_75= '&' ( ( ( (lv_pullingDefined_76_0= '!' ) ) otherlv_77= 'pulling' ) | ( ( (lv_pullingDefined_78_0= 'pulling' ) ) ( (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) ) | ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) ) ) ) ) )
            	    // InternalMcmodel.g:12455:20: otherlv_75= '&' ( ( ( (lv_pullingDefined_76_0= '!' ) ) otherlv_77= 'pulling' ) | ( ( (lv_pullingDefined_78_0= 'pulling' ) ) ( (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) ) | ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) ) ) ) )
            	    {
            	    otherlv_75=(Token)match(input,59,FOLLOW_52); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_75, grammarAccess.getOverridePredicate_9Access().getAmpersandKeyword_3_8_0());
            	      								
            	    }
            	    // InternalMcmodel.g:12459:9: ( ( ( (lv_pullingDefined_76_0= '!' ) ) otherlv_77= 'pulling' ) | ( ( (lv_pullingDefined_78_0= 'pulling' ) ) ( (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) ) | ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) ) ) ) )
            	    int alt391=2;
            	    int LA391_0 = input.LA(1);

            	    if ( (LA391_0==60) ) {
            	        alt391=1;
            	    }
            	    else if ( (LA391_0==70) ) {
            	        alt391=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 391, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt391) {
            	        case 1 :
            	            // InternalMcmodel.g:12460:10: ( ( (lv_pullingDefined_76_0= '!' ) ) otherlv_77= 'pulling' )
            	            {
            	            // InternalMcmodel.g:12460:10: ( ( (lv_pullingDefined_76_0= '!' ) ) otherlv_77= 'pulling' )
            	            // InternalMcmodel.g:12461:11: ( (lv_pullingDefined_76_0= '!' ) ) otherlv_77= 'pulling'
            	            {
            	            // InternalMcmodel.g:12461:11: ( (lv_pullingDefined_76_0= '!' ) )
            	            // InternalMcmodel.g:12462:12: (lv_pullingDefined_76_0= '!' )
            	            {
            	            // InternalMcmodel.g:12462:12: (lv_pullingDefined_76_0= '!' )
            	            // InternalMcmodel.g:12463:13: lv_pullingDefined_76_0= '!'
            	            {
            	            lv_pullingDefined_76_0=(Token)match(input,60,FOLLOW_53); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              													newLeafNode(lv_pullingDefined_76_0, grammarAccess.getOverridePredicate_9Access().getPullingDefinedExclamationMarkKeyword_3_8_1_0_0_0());
            	              												
            	            }
            	            if ( state.backtracking==0 ) {

            	              													if (current==null) {
            	              														current = createModelElement(grammarAccess.getOverridePredicate_9Rule());
            	              													}
            	              													setWithLastConsumed(current, "pullingDefined", true, "!");
            	              												
            	            }

            	            }


            	            }

            	            otherlv_77=(Token)match(input,70,FOLLOW_37); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              											newLeafNode(otherlv_77, grammarAccess.getOverridePredicate_9Access().getPullingKeyword_3_8_1_0_1());
            	              										
            	            }

            	            }


            	            }
            	            break;
            	        case 2 :
            	            // InternalMcmodel.g:12481:10: ( ( (lv_pullingDefined_78_0= 'pulling' ) ) ( (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) ) | ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) ) ) )
            	            {
            	            // InternalMcmodel.g:12481:10: ( ( (lv_pullingDefined_78_0= 'pulling' ) ) ( (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) ) | ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) ) ) )
            	            // InternalMcmodel.g:12482:11: ( (lv_pullingDefined_78_0= 'pulling' ) ) ( (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) ) | ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) ) )
            	            {
            	            // InternalMcmodel.g:12482:11: ( (lv_pullingDefined_78_0= 'pulling' ) )
            	            // InternalMcmodel.g:12483:12: (lv_pullingDefined_78_0= 'pulling' )
            	            {
            	            // InternalMcmodel.g:12483:12: (lv_pullingDefined_78_0= 'pulling' )
            	            // InternalMcmodel.g:12484:13: lv_pullingDefined_78_0= 'pulling'
            	            {
            	            lv_pullingDefined_78_0=(Token)match(input,70,FOLLOW_40); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              													newLeafNode(lv_pullingDefined_78_0, grammarAccess.getOverridePredicate_9Access().getPullingDefinedPullingKeyword_3_8_1_1_0_0());
            	              												
            	            }
            	            if ( state.backtracking==0 ) {

            	              													if (current==null) {
            	              														current = createModelElement(grammarAccess.getOverridePredicate_9Rule());
            	              													}
            	              													setWithLastConsumed(current, "pullingDefined", true, "pulling");
            	              												
            	            }

            	            }


            	            }

            	            // InternalMcmodel.g:12496:11: ( (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) ) | ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) ) )
            	            int alt390=2;
            	            int LA390_0 = input.LA(1);

            	            if ( (LA390_0==62) ) {
            	                alt390=1;
            	            }
            	            else if ( (LA390_0==18||LA390_0==58) ) {
            	                alt390=2;
            	            }
            	            else {
            	                if (state.backtracking>0) {state.failed=true; return current;}
            	                NoViableAltException nvae =
            	                    new NoViableAltException("", 390, 0, input);

            	                throw nvae;
            	            }
            	            switch (alt390) {
            	                case 1 :
            	                    // InternalMcmodel.g:12497:12: (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) )
            	                    {
            	                    // InternalMcmodel.g:12497:12: (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) )
            	                    // InternalMcmodel.g:12498:13: otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' )
            	                    {
            	                    otherlv_79=(Token)match(input,62,FOLLOW_7); if (state.failed) return current;
            	                    if ( state.backtracking==0 ) {

            	                      													newLeafNode(otherlv_79, grammarAccess.getOverridePredicate_9Access().getExclamationMarkEqualsSignKeyword_3_8_1_1_1_0_0());
            	                      												
            	                    }
            	                    // InternalMcmodel.g:12502:13: ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' )
            	                    int alt387=2;
            	                    int LA387_0 = input.LA(1);

            	                    if ( (LA387_0==21) ) {
            	                        alt387=1;
            	                    }
            	                    else if ( (LA387_0==20) ) {
            	                        alt387=2;
            	                    }
            	                    else {
            	                        if (state.backtracking>0) {state.failed=true; return current;}
            	                        NoViableAltException nvae =
            	                            new NoViableAltException("", 387, 0, input);

            	                        throw nvae;
            	                    }
            	                    switch (alt387) {
            	                        case 1 :
            	                            // InternalMcmodel.g:12503:14: ( (lv_pulling_80_0= 'false' ) )
            	                            {
            	                            // InternalMcmodel.g:12503:14: ( (lv_pulling_80_0= 'false' ) )
            	                            // InternalMcmodel.g:12504:15: (lv_pulling_80_0= 'false' )
            	                            {
            	                            // InternalMcmodel.g:12504:15: (lv_pulling_80_0= 'false' )
            	                            // InternalMcmodel.g:12505:16: lv_pulling_80_0= 'false'
            	                            {
            	                            lv_pulling_80_0=(Token)match(input,21,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              																newLeafNode(lv_pulling_80_0, grammarAccess.getOverridePredicate_9Access().getPullingFalseKeyword_3_8_1_1_1_0_1_0_0());
            	                              															
            	                            }
            	                            if ( state.backtracking==0 ) {

            	                              																if (current==null) {
            	                              																	current = createModelElement(grammarAccess.getOverridePredicate_9Rule());
            	                              																}
            	                              																setWithLastConsumed(current, "pulling", true, "false");
            	                              															
            	                            }

            	                            }


            	                            }


            	                            }
            	                            break;
            	                        case 2 :
            	                            // InternalMcmodel.g:12518:14: otherlv_81= 'true'
            	                            {
            	                            otherlv_81=(Token)match(input,20,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_81, grammarAccess.getOverridePredicate_9Access().getTrueKeyword_3_8_1_1_1_0_1_1());
            	                              													
            	                            }

            	                            }
            	                            break;

            	                    }


            	                    }


            	                    }
            	                    break;
            	                case 2 :
            	                    // InternalMcmodel.g:12525:12: ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) )
            	                    {
            	                    // InternalMcmodel.g:12525:12: ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) )
            	                    // InternalMcmodel.g:12526:13: (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' )
            	                    {
            	                    // InternalMcmodel.g:12526:13: (otherlv_82= '=' | otherlv_83= '==' )
            	                    int alt388=2;
            	                    int LA388_0 = input.LA(1);

            	                    if ( (LA388_0==18) ) {
            	                        alt388=1;
            	                    }
            	                    else if ( (LA388_0==58) ) {
            	                        alt388=2;
            	                    }
            	                    else {
            	                        if (state.backtracking>0) {state.failed=true; return current;}
            	                        NoViableAltException nvae =
            	                            new NoViableAltException("", 388, 0, input);

            	                        throw nvae;
            	                    }
            	                    switch (alt388) {
            	                        case 1 :
            	                            // InternalMcmodel.g:12527:14: otherlv_82= '='
            	                            {
            	                            otherlv_82=(Token)match(input,18,FOLLOW_7); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_82, grammarAccess.getOverridePredicate_9Access().getEqualsSignKeyword_3_8_1_1_1_1_0_0());
            	                              													
            	                            }

            	                            }
            	                            break;
            	                        case 2 :
            	                            // InternalMcmodel.g:12532:14: otherlv_83= '=='
            	                            {
            	                            otherlv_83=(Token)match(input,58,FOLLOW_7); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_83, grammarAccess.getOverridePredicate_9Access().getEqualsSignEqualsSignKeyword_3_8_1_1_1_1_0_1());
            	                              													
            	                            }

            	                            }
            	                            break;

            	                    }

            	                    // InternalMcmodel.g:12537:13: ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' )
            	                    int alt389=2;
            	                    int LA389_0 = input.LA(1);

            	                    if ( (LA389_0==20) ) {
            	                        alt389=1;
            	                    }
            	                    else if ( (LA389_0==21) ) {
            	                        alt389=2;
            	                    }
            	                    else {
            	                        if (state.backtracking>0) {state.failed=true; return current;}
            	                        NoViableAltException nvae =
            	                            new NoViableAltException("", 389, 0, input);

            	                        throw nvae;
            	                    }
            	                    switch (alt389) {
            	                        case 1 :
            	                            // InternalMcmodel.g:12538:14: ( (lv_pulling_84_0= 'true' ) )
            	                            {
            	                            // InternalMcmodel.g:12538:14: ( (lv_pulling_84_0= 'true' ) )
            	                            // InternalMcmodel.g:12539:15: (lv_pulling_84_0= 'true' )
            	                            {
            	                            // InternalMcmodel.g:12539:15: (lv_pulling_84_0= 'true' )
            	                            // InternalMcmodel.g:12540:16: lv_pulling_84_0= 'true'
            	                            {
            	                            lv_pulling_84_0=(Token)match(input,20,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              																newLeafNode(lv_pulling_84_0, grammarAccess.getOverridePredicate_9Access().getPullingTrueKeyword_3_8_1_1_1_1_1_0_0());
            	                              															
            	                            }
            	                            if ( state.backtracking==0 ) {

            	                              																if (current==null) {
            	                              																	current = createModelElement(grammarAccess.getOverridePredicate_9Rule());
            	                              																}
            	                              																setWithLastConsumed(current, "pulling", true, "true");
            	                              															
            	                            }

            	                            }


            	                            }


            	                            }
            	                            break;
            	                        case 2 :
            	                            // InternalMcmodel.g:12553:14: otherlv_85= 'false'
            	                            {
            	                            otherlv_85=(Token)match(input,21,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_85, grammarAccess.getOverridePredicate_9Access().getFalseKeyword_3_8_1_1_1_1_1_1());
            	                              													
            	                            }

            	                            }
            	                            break;

            	                    }


            	                    }


            	                    }
            	                    break;

            	            }


            	            }


            	            }
            	            break;

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getOverridePredicate_9Access().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 10 :
            	    // InternalMcmodel.g:12568:4: ({...}? => ( ({...}? => (otherlv_86= '&' ( ( ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing' ) | ( ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) ) ) ) ) ) )
            	    {
            	    // InternalMcmodel.g:12568:4: ({...}? => ( ({...}? => (otherlv_86= '&' ( ( ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing' ) | ( ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) ) ) ) ) ) )
            	    // InternalMcmodel.g:12569:5: {...}? => ( ({...}? => (otherlv_86= '&' ( ( ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing' ) | ( ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_9Access().getUnorderedGroup_3(), 9) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_9", "getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_9Access().getUnorderedGroup_3(), 9)");
            	    }
            	    // InternalMcmodel.g:12569:116: ( ({...}? => (otherlv_86= '&' ( ( ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing' ) | ( ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) ) ) ) ) )
            	    // InternalMcmodel.g:12570:6: ({...}? => (otherlv_86= '&' ( ( ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing' ) | ( ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getOverridePredicate_9Access().getUnorderedGroup_3(), 9);
            	    // InternalMcmodel.g:12573:9: ({...}? => (otherlv_86= '&' ( ( ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing' ) | ( ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) ) ) ) )
            	    // InternalMcmodel.g:12573:10: {...}? => (otherlv_86= '&' ( ( ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing' ) | ( ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_9", "true");
            	    }
            	    // InternalMcmodel.g:12573:19: (otherlv_86= '&' ( ( ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing' ) | ( ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) ) ) )
            	    // InternalMcmodel.g:12573:20: otherlv_86= '&' ( ( ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing' ) | ( ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) ) )
            	    {
            	    otherlv_86=(Token)match(input,59,FOLLOW_54); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_86, grammarAccess.getOverridePredicate_9Access().getAmpersandKeyword_3_9_0());
            	      								
            	    }
            	    // InternalMcmodel.g:12577:9: ( ( ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing' ) | ( ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) ) )
            	    int alt396=2;
            	    int LA396_0 = input.LA(1);

            	    if ( (LA396_0==60) ) {
            	        alt396=1;
            	    }
            	    else if ( (LA396_0==71) ) {
            	        alt396=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 396, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt396) {
            	        case 1 :
            	            // InternalMcmodel.g:12578:10: ( ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing' )
            	            {
            	            // InternalMcmodel.g:12578:10: ( ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing' )
            	            // InternalMcmodel.g:12579:11: ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing'
            	            {
            	            // InternalMcmodel.g:12579:11: ( (lv_throwingDefined_87_0= '!' ) )
            	            // InternalMcmodel.g:12580:12: (lv_throwingDefined_87_0= '!' )
            	            {
            	            // InternalMcmodel.g:12580:12: (lv_throwingDefined_87_0= '!' )
            	            // InternalMcmodel.g:12581:13: lv_throwingDefined_87_0= '!'
            	            {
            	            lv_throwingDefined_87_0=(Token)match(input,60,FOLLOW_55); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              													newLeafNode(lv_throwingDefined_87_0, grammarAccess.getOverridePredicate_9Access().getThrowingDefinedExclamationMarkKeyword_3_9_1_0_0_0());
            	              												
            	            }
            	            if ( state.backtracking==0 ) {

            	              													if (current==null) {
            	              														current = createModelElement(grammarAccess.getOverridePredicate_9Rule());
            	              													}
            	              													setWithLastConsumed(current, "throwingDefined", true, "!");
            	              												
            	            }

            	            }


            	            }

            	            otherlv_88=(Token)match(input,71,FOLLOW_37); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              											newLeafNode(otherlv_88, grammarAccess.getOverridePredicate_9Access().getThrowingKeyword_3_9_1_0_1());
            	              										
            	            }

            	            }


            	            }
            	            break;
            	        case 2 :
            	            // InternalMcmodel.g:12599:10: ( ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) )
            	            {
            	            // InternalMcmodel.g:12599:10: ( ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) )
            	            // InternalMcmodel.g:12600:11: ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) )
            	            {
            	            // InternalMcmodel.g:12600:11: ( (lv_throwingDefined_89_0= 'throwing' ) )
            	            // InternalMcmodel.g:12601:12: (lv_throwingDefined_89_0= 'throwing' )
            	            {
            	            // InternalMcmodel.g:12601:12: (lv_throwingDefined_89_0= 'throwing' )
            	            // InternalMcmodel.g:12602:13: lv_throwingDefined_89_0= 'throwing'
            	            {
            	            lv_throwingDefined_89_0=(Token)match(input,71,FOLLOW_40); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              													newLeafNode(lv_throwingDefined_89_0, grammarAccess.getOverridePredicate_9Access().getThrowingDefinedThrowingKeyword_3_9_1_1_0_0());
            	              												
            	            }
            	            if ( state.backtracking==0 ) {

            	              													if (current==null) {
            	              														current = createModelElement(grammarAccess.getOverridePredicate_9Rule());
            	              													}
            	              													setWithLastConsumed(current, "throwingDefined", true, "throwing");
            	              												
            	            }

            	            }


            	            }

            	            // InternalMcmodel.g:12614:11: ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) )
            	            int alt395=2;
            	            int LA395_0 = input.LA(1);

            	            if ( (LA395_0==62) ) {
            	                alt395=1;
            	            }
            	            else if ( (LA395_0==18||LA395_0==58) ) {
            	                alt395=2;
            	            }
            	            else {
            	                if (state.backtracking>0) {state.failed=true; return current;}
            	                NoViableAltException nvae =
            	                    new NoViableAltException("", 395, 0, input);

            	                throw nvae;
            	            }
            	            switch (alt395) {
            	                case 1 :
            	                    // InternalMcmodel.g:12615:12: (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) )
            	                    {
            	                    // InternalMcmodel.g:12615:12: (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) )
            	                    // InternalMcmodel.g:12616:13: otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' )
            	                    {
            	                    otherlv_90=(Token)match(input,62,FOLLOW_7); if (state.failed) return current;
            	                    if ( state.backtracking==0 ) {

            	                      													newLeafNode(otherlv_90, grammarAccess.getOverridePredicate_9Access().getExclamationMarkEqualsSignKeyword_3_9_1_1_1_0_0());
            	                      												
            	                    }
            	                    // InternalMcmodel.g:12620:13: ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' )
            	                    int alt392=2;
            	                    int LA392_0 = input.LA(1);

            	                    if ( (LA392_0==21) ) {
            	                        alt392=1;
            	                    }
            	                    else if ( (LA392_0==20) ) {
            	                        alt392=2;
            	                    }
            	                    else {
            	                        if (state.backtracking>0) {state.failed=true; return current;}
            	                        NoViableAltException nvae =
            	                            new NoViableAltException("", 392, 0, input);

            	                        throw nvae;
            	                    }
            	                    switch (alt392) {
            	                        case 1 :
            	                            // InternalMcmodel.g:12621:14: ( (lv_throwing_91_0= 'false' ) )
            	                            {
            	                            // InternalMcmodel.g:12621:14: ( (lv_throwing_91_0= 'false' ) )
            	                            // InternalMcmodel.g:12622:15: (lv_throwing_91_0= 'false' )
            	                            {
            	                            // InternalMcmodel.g:12622:15: (lv_throwing_91_0= 'false' )
            	                            // InternalMcmodel.g:12623:16: lv_throwing_91_0= 'false'
            	                            {
            	                            lv_throwing_91_0=(Token)match(input,21,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              																newLeafNode(lv_throwing_91_0, grammarAccess.getOverridePredicate_9Access().getThrowingFalseKeyword_3_9_1_1_1_0_1_0_0());
            	                              															
            	                            }
            	                            if ( state.backtracking==0 ) {

            	                              																if (current==null) {
            	                              																	current = createModelElement(grammarAccess.getOverridePredicate_9Rule());
            	                              																}
            	                              																setWithLastConsumed(current, "throwing", true, "false");
            	                              															
            	                            }

            	                            }


            	                            }


            	                            }
            	                            break;
            	                        case 2 :
            	                            // InternalMcmodel.g:12636:14: otherlv_92= 'true'
            	                            {
            	                            otherlv_92=(Token)match(input,20,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_92, grammarAccess.getOverridePredicate_9Access().getTrueKeyword_3_9_1_1_1_0_1_1());
            	                              													
            	                            }

            	                            }
            	                            break;

            	                    }


            	                    }


            	                    }
            	                    break;
            	                case 2 :
            	                    // InternalMcmodel.g:12643:12: ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) )
            	                    {
            	                    // InternalMcmodel.g:12643:12: ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) )
            	                    // InternalMcmodel.g:12644:13: (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' )
            	                    {
            	                    // InternalMcmodel.g:12644:13: (otherlv_93= '=' | otherlv_94= '==' )
            	                    int alt393=2;
            	                    int LA393_0 = input.LA(1);

            	                    if ( (LA393_0==18) ) {
            	                        alt393=1;
            	                    }
            	                    else if ( (LA393_0==58) ) {
            	                        alt393=2;
            	                    }
            	                    else {
            	                        if (state.backtracking>0) {state.failed=true; return current;}
            	                        NoViableAltException nvae =
            	                            new NoViableAltException("", 393, 0, input);

            	                        throw nvae;
            	                    }
            	                    switch (alt393) {
            	                        case 1 :
            	                            // InternalMcmodel.g:12645:14: otherlv_93= '='
            	                            {
            	                            otherlv_93=(Token)match(input,18,FOLLOW_7); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_93, grammarAccess.getOverridePredicate_9Access().getEqualsSignKeyword_3_9_1_1_1_1_0_0());
            	                              													
            	                            }

            	                            }
            	                            break;
            	                        case 2 :
            	                            // InternalMcmodel.g:12650:14: otherlv_94= '=='
            	                            {
            	                            otherlv_94=(Token)match(input,58,FOLLOW_7); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_94, grammarAccess.getOverridePredicate_9Access().getEqualsSignEqualsSignKeyword_3_9_1_1_1_1_0_1());
            	                              													
            	                            }

            	                            }
            	                            break;

            	                    }

            	                    // InternalMcmodel.g:12655:13: ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' )
            	                    int alt394=2;
            	                    int LA394_0 = input.LA(1);

            	                    if ( (LA394_0==20) ) {
            	                        alt394=1;
            	                    }
            	                    else if ( (LA394_0==21) ) {
            	                        alt394=2;
            	                    }
            	                    else {
            	                        if (state.backtracking>0) {state.failed=true; return current;}
            	                        NoViableAltException nvae =
            	                            new NoViableAltException("", 394, 0, input);

            	                        throw nvae;
            	                    }
            	                    switch (alt394) {
            	                        case 1 :
            	                            // InternalMcmodel.g:12656:14: ( (lv_throwing_95_0= 'true' ) )
            	                            {
            	                            // InternalMcmodel.g:12656:14: ( (lv_throwing_95_0= 'true' ) )
            	                            // InternalMcmodel.g:12657:15: (lv_throwing_95_0= 'true' )
            	                            {
            	                            // InternalMcmodel.g:12657:15: (lv_throwing_95_0= 'true' )
            	                            // InternalMcmodel.g:12658:16: lv_throwing_95_0= 'true'
            	                            {
            	                            lv_throwing_95_0=(Token)match(input,20,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              																newLeafNode(lv_throwing_95_0, grammarAccess.getOverridePredicate_9Access().getThrowingTrueKeyword_3_9_1_1_1_1_1_0_0());
            	                              															
            	                            }
            	                            if ( state.backtracking==0 ) {

            	                              																if (current==null) {
            	                              																	current = createModelElement(grammarAccess.getOverridePredicate_9Rule());
            	                              																}
            	                              																setWithLastConsumed(current, "throwing", true, "true");
            	                              															
            	                            }

            	                            }


            	                            }


            	                            }
            	                            break;
            	                        case 2 :
            	                            // InternalMcmodel.g:12671:14: otherlv_96= 'false'
            	                            {
            	                            otherlv_96=(Token)match(input,21,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_96, grammarAccess.getOverridePredicate_9Access().getFalseKeyword_3_9_1_1_1_1_1_1());
            	                              													
            	                            }

            	                            }
            	                            break;

            	                    }


            	                    }


            	                    }
            	                    break;

            	            }


            	            }


            	            }
            	            break;

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getOverridePredicate_9Access().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 11 :
            	    // InternalMcmodel.g:12686:4: ({...}? => ( ({...}? => (otherlv_97= '&' ( (lv_timeDefined_98_0= 'time' ) ) (otherlv_99= '=' | otherlv_100= '==' ) ( (lv_time_101_0= RULE_PERCENTAGE ) ) ) ) ) )
            	    {
            	    // InternalMcmodel.g:12686:4: ({...}? => ( ({...}? => (otherlv_97= '&' ( (lv_timeDefined_98_0= 'time' ) ) (otherlv_99= '=' | otherlv_100= '==' ) ( (lv_time_101_0= RULE_PERCENTAGE ) ) ) ) ) )
            	    // InternalMcmodel.g:12687:5: {...}? => ( ({...}? => (otherlv_97= '&' ( (lv_timeDefined_98_0= 'time' ) ) (otherlv_99= '=' | otherlv_100= '==' ) ( (lv_time_101_0= RULE_PERCENTAGE ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_9Access().getUnorderedGroup_3(), 10) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_9", "getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_9Access().getUnorderedGroup_3(), 10)");
            	    }
            	    // InternalMcmodel.g:12687:117: ( ({...}? => (otherlv_97= '&' ( (lv_timeDefined_98_0= 'time' ) ) (otherlv_99= '=' | otherlv_100= '==' ) ( (lv_time_101_0= RULE_PERCENTAGE ) ) ) ) )
            	    // InternalMcmodel.g:12688:6: ({...}? => (otherlv_97= '&' ( (lv_timeDefined_98_0= 'time' ) ) (otherlv_99= '=' | otherlv_100= '==' ) ( (lv_time_101_0= RULE_PERCENTAGE ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getOverridePredicate_9Access().getUnorderedGroup_3(), 10);
            	    // InternalMcmodel.g:12691:9: ({...}? => (otherlv_97= '&' ( (lv_timeDefined_98_0= 'time' ) ) (otherlv_99= '=' | otherlv_100= '==' ) ( (lv_time_101_0= RULE_PERCENTAGE ) ) ) )
            	    // InternalMcmodel.g:12691:10: {...}? => (otherlv_97= '&' ( (lv_timeDefined_98_0= 'time' ) ) (otherlv_99= '=' | otherlv_100= '==' ) ( (lv_time_101_0= RULE_PERCENTAGE ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_9", "true");
            	    }
            	    // InternalMcmodel.g:12691:19: (otherlv_97= '&' ( (lv_timeDefined_98_0= 'time' ) ) (otherlv_99= '=' | otherlv_100= '==' ) ( (lv_time_101_0= RULE_PERCENTAGE ) ) )
            	    // InternalMcmodel.g:12691:20: otherlv_97= '&' ( (lv_timeDefined_98_0= 'time' ) ) (otherlv_99= '=' | otherlv_100= '==' ) ( (lv_time_101_0= RULE_PERCENTAGE ) )
            	    {
            	    otherlv_97=(Token)match(input,59,FOLLOW_56); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_97, grammarAccess.getOverridePredicate_9Access().getAmpersandKeyword_3_10_0());
            	      								
            	    }
            	    // InternalMcmodel.g:12695:9: ( (lv_timeDefined_98_0= 'time' ) )
            	    // InternalMcmodel.g:12696:10: (lv_timeDefined_98_0= 'time' )
            	    {
            	    // InternalMcmodel.g:12696:10: (lv_timeDefined_98_0= 'time' )
            	    // InternalMcmodel.g:12697:11: lv_timeDefined_98_0= 'time'
            	    {
            	    lv_timeDefined_98_0=(Token)match(input,72,FOLLOW_35); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											newLeafNode(lv_timeDefined_98_0, grammarAccess.getOverridePredicate_9Access().getTimeDefinedTimeKeyword_3_10_1_0());
            	      										
            	    }
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElement(grammarAccess.getOverridePredicate_9Rule());
            	      											}
            	      											setWithLastConsumed(current, "timeDefined", true, "time");
            	      										
            	    }

            	    }


            	    }

            	    // InternalMcmodel.g:12709:9: (otherlv_99= '=' | otherlv_100= '==' )
            	    int alt397=2;
            	    int LA397_0 = input.LA(1);

            	    if ( (LA397_0==18) ) {
            	        alt397=1;
            	    }
            	    else if ( (LA397_0==58) ) {
            	        alt397=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 397, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt397) {
            	        case 1 :
            	            // InternalMcmodel.g:12710:10: otherlv_99= '='
            	            {
            	            otherlv_99=(Token)match(input,18,FOLLOW_36); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(otherlv_99, grammarAccess.getOverridePredicate_9Access().getEqualsSignKeyword_3_10_2_0());
            	              									
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalMcmodel.g:12715:10: otherlv_100= '=='
            	            {
            	            otherlv_100=(Token)match(input,58,FOLLOW_36); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(otherlv_100, grammarAccess.getOverridePredicate_9Access().getEqualsSignEqualsSignKeyword_3_10_2_1());
            	              									
            	            }

            	            }
            	            break;

            	    }

            	    // InternalMcmodel.g:12720:9: ( (lv_time_101_0= RULE_PERCENTAGE ) )
            	    // InternalMcmodel.g:12721:10: (lv_time_101_0= RULE_PERCENTAGE )
            	    {
            	    // InternalMcmodel.g:12721:10: (lv_time_101_0= RULE_PERCENTAGE )
            	    // InternalMcmodel.g:12722:11: lv_time_101_0= RULE_PERCENTAGE
            	    {
            	    lv_time_101_0=(Token)match(input,RULE_PERCENTAGE,FOLLOW_37); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											newLeafNode(lv_time_101_0, grammarAccess.getOverridePredicate_9Access().getTimePERCENTAGETerminalRuleCall_3_10_3_0());
            	      										
            	    }
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElement(grammarAccess.getOverridePredicate_9Rule());
            	      											}
            	      											setWithLastConsumed(
            	      												current,
            	      												"time",
            	      												lv_time_101_0,
            	      												"com.raptor.mcmodel.Mcmodel.PERCENTAGE");
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getOverridePredicate_9Access().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 12 :
            	    // InternalMcmodel.g:12744:4: ({...}? => ( ({...}? => (otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) ) ) ) ) )
            	    {
            	    // InternalMcmodel.g:12744:4: ({...}? => ( ({...}? => (otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) ) ) ) ) )
            	    // InternalMcmodel.g:12745:5: {...}? => ( ({...}? => (otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_9Access().getUnorderedGroup_3(), 11) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_9", "getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_9Access().getUnorderedGroup_3(), 11)");
            	    }
            	    // InternalMcmodel.g:12745:117: ( ({...}? => (otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) ) ) ) )
            	    // InternalMcmodel.g:12746:6: ({...}? => (otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getOverridePredicate_9Access().getUnorderedGroup_3(), 11);
            	    // InternalMcmodel.g:12749:9: ({...}? => (otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) ) ) )
            	    // InternalMcmodel.g:12749:10: {...}? => (otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_9", "true");
            	    }
            	    // InternalMcmodel.g:12749:19: (otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) ) )
            	    // InternalMcmodel.g:12749:20: otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) )
            	    {
            	    otherlv_102=(Token)match(input,59,FOLLOW_57); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_102, grammarAccess.getOverridePredicate_9Access().getAmpersandKeyword_3_11_0());
            	      								
            	    }
            	    // InternalMcmodel.g:12753:9: ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) )
            	    // InternalMcmodel.g:12754:10: (lv_customModelDataDefined_103_0= 'custom_model_data' )
            	    {
            	    // InternalMcmodel.g:12754:10: (lv_customModelDataDefined_103_0= 'custom_model_data' )
            	    // InternalMcmodel.g:12755:11: lv_customModelDataDefined_103_0= 'custom_model_data'
            	    {
            	    lv_customModelDataDefined_103_0=(Token)match(input,73,FOLLOW_35); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											newLeafNode(lv_customModelDataDefined_103_0, grammarAccess.getOverridePredicate_9Access().getCustomModelDataDefinedCustom_model_dataKeyword_3_11_1_0());
            	      										
            	    }
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElement(grammarAccess.getOverridePredicate_9Rule());
            	      											}
            	      											setWithLastConsumed(current, "customModelDataDefined", true, "custom_model_data");
            	      										
            	    }

            	    }


            	    }

            	    // InternalMcmodel.g:12767:9: (otherlv_104= '=' | otherlv_105= '==' )
            	    int alt398=2;
            	    int LA398_0 = input.LA(1);

            	    if ( (LA398_0==18) ) {
            	        alt398=1;
            	    }
            	    else if ( (LA398_0==58) ) {
            	        alt398=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 398, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt398) {
            	        case 1 :
            	            // InternalMcmodel.g:12768:10: otherlv_104= '='
            	            {
            	            otherlv_104=(Token)match(input,18,FOLLOW_29); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(otherlv_104, grammarAccess.getOverridePredicate_9Access().getEqualsSignKeyword_3_11_2_0());
            	              									
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalMcmodel.g:12773:10: otherlv_105= '=='
            	            {
            	            otherlv_105=(Token)match(input,58,FOLLOW_29); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(otherlv_105, grammarAccess.getOverridePredicate_9Access().getEqualsSignEqualsSignKeyword_3_11_2_1());
            	              									
            	            }

            	            }
            	            break;

            	    }

            	    // InternalMcmodel.g:12778:9: ( (lv_customModelData_106_0= ruleLONG ) )
            	    // InternalMcmodel.g:12779:10: (lv_customModelData_106_0= ruleLONG )
            	    {
            	    // InternalMcmodel.g:12779:10: (lv_customModelData_106_0= ruleLONG )
            	    // InternalMcmodel.g:12780:11: lv_customModelData_106_0= ruleLONG
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getOverridePredicate_9Access().getCustomModelDataLONGParserRuleCall_3_11_3_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_37);
            	    lv_customModelData_106_0=ruleLONG();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getOverridePredicate_9Rule());
            	      											}
            	      											set(
            	      												current,
            	      												"customModelData",
            	      												lv_customModelData_106_0,
            	      												"com.raptor.mcmodel.Mcmodel.LONG");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getOverridePredicate_9Access().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop399;
                }
            } while (true);


            }


            }

            getUnorderedGroupHelper().leave(grammarAccess.getOverridePredicate_9Access().getUnorderedGroup_3());

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOverridePredicate_9"


    // $ANTLR start "entryRuleOverridePredicate_10"
    // InternalMcmodel.g:12814:1: entryRuleOverridePredicate_10 returns [EObject current=null] : iv_ruleOverridePredicate_10= ruleOverridePredicate_10 EOF ;
    public final EObject entryRuleOverridePredicate_10() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleOverridePredicate_10 = null;


        try {
            // InternalMcmodel.g:12814:61: (iv_ruleOverridePredicate_10= ruleOverridePredicate_10 EOF )
            // InternalMcmodel.g:12815:2: iv_ruleOverridePredicate_10= ruleOverridePredicate_10 EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOverridePredicate_10Rule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOverridePredicate_10=ruleOverridePredicate_10();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOverridePredicate_10; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOverridePredicate_10"


    // $ANTLR start "ruleOverridePredicate_10"
    // InternalMcmodel.g:12821:1: ruleOverridePredicate_10 returns [EObject current=null] : ( ( ( ( (lv_pullingDefined_0_0= '!' ) ) otherlv_1= 'pulling' ) | ( ( (lv_pullingDefined_2_0= 'pulling' ) ) ( (otherlv_3= '!=' ( ( (lv_pulling_4_0= 'false' ) ) | otherlv_5= 'true' ) ) | ( (otherlv_6= '=' | otherlv_7= '==' ) ( ( (lv_pulling_8_0= 'true' ) ) | otherlv_9= 'false' ) ) ) ) ) ( ( ( ( ({...}? => ( ({...}? => (otherlv_11= '&' ( (lv_angleDefined_12_0= 'angle' ) ) (otherlv_13= '=' | otherlv_14= '==' ) ( (lv_angle_15_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= '&' ( ( ( (lv_blockingDefined_17_0= '!' ) ) otherlv_18= 'blocking' ) | ( ( (lv_blockingDefined_19_0= 'blocking' ) ) ( (otherlv_20= '!=' ( ( (lv_blocking_21_0= 'false' ) ) | otherlv_22= 'true' ) ) | ( (otherlv_23= '=' | otherlv_24= '==' ) ( ( (lv_blocking_25_0= 'true' ) ) | otherlv_26= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= '&' ( ( ( (lv_brokenDefined_28_0= '!' ) ) otherlv_29= 'broken' ) | ( ( (lv_brokenDefined_30_0= 'broken' ) ) ( (otherlv_31= '!=' ( ( (lv_broken_32_0= 'false' ) ) | otherlv_33= 'true' ) ) | ( (otherlv_34= '=' | otherlv_35= '==' ) ( ( (lv_broken_36_0= 'true' ) ) | otherlv_37= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_38= '&' ( ( ( (lv_castDefined_39_0= '!' ) ) otherlv_40= 'cast' ) | ( ( (lv_castDefined_41_0= 'cast' ) ) ( (otherlv_42= '!=' ( ( (lv_cast_43_0= 'false' ) ) | otherlv_44= 'true' ) ) | ( (otherlv_45= '=' | otherlv_46= '==' ) ( ( (lv_cast_47_0= 'true' ) ) | otherlv_48= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_49= '&' ( (lv_cooldownDefined_50_0= 'cooldown' ) ) (otherlv_51= '=' | otherlv_52= '==' ) ( (lv_cooldown_53_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_54= '&' ( (lv_damageDefined_55_0= 'damage' ) ) (otherlv_56= '=' | otherlv_57= '==' ) ( (lv_damage_58_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_59= '&' ( ( ( (lv_damagedDefined_60_0= '!' ) ) otherlv_61= 'damaged' ) | ( ( (lv_damagedDefined_62_0= 'damaged' ) ) ( (otherlv_63= '!=' ( ( (lv_damaged_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_damaged_68_0= 'true' ) ) | otherlv_69= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_70= '&' ( ( ( (lv_lefthandedDefined_71_0= '!' ) ) otherlv_72= 'lefthanded' ) | ( ( (lv_lefthandedDefined_73_0= 'lefthanded' ) ) ( (otherlv_74= '!=' ( ( (lv_lefthanded_75_0= 'false' ) ) | otherlv_76= 'true' ) ) | ( (otherlv_77= '=' | otherlv_78= '==' ) ( ( (lv_lefthanded_79_0= 'true' ) ) | otherlv_80= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_81= '&' ( (lv_pullDefined_82_0= 'pull' ) ) (otherlv_83= '=' | otherlv_84= '==' ) ( (lv_pull_85_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_86= '&' ( ( ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing' ) | ( ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_97= '&' ( (lv_timeDefined_98_0= 'time' ) ) (otherlv_99= '=' | otherlv_100= '==' ) ( (lv_time_101_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) ) ) ) ) ) )* ) ) ) ) ;
    public final EObject ruleOverridePredicate_10() throws RecognitionException {
        EObject current = null;

        Token lv_pullingDefined_0_0=null;
        Token otherlv_1=null;
        Token lv_pullingDefined_2_0=null;
        Token otherlv_3=null;
        Token lv_pulling_4_0=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        Token lv_pulling_8_0=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        Token lv_angleDefined_12_0=null;
        Token otherlv_13=null;
        Token otherlv_14=null;
        Token lv_angle_15_0=null;
        Token otherlv_16=null;
        Token lv_blockingDefined_17_0=null;
        Token otherlv_18=null;
        Token lv_blockingDefined_19_0=null;
        Token otherlv_20=null;
        Token lv_blocking_21_0=null;
        Token otherlv_22=null;
        Token otherlv_23=null;
        Token otherlv_24=null;
        Token lv_blocking_25_0=null;
        Token otherlv_26=null;
        Token otherlv_27=null;
        Token lv_brokenDefined_28_0=null;
        Token otherlv_29=null;
        Token lv_brokenDefined_30_0=null;
        Token otherlv_31=null;
        Token lv_broken_32_0=null;
        Token otherlv_33=null;
        Token otherlv_34=null;
        Token otherlv_35=null;
        Token lv_broken_36_0=null;
        Token otherlv_37=null;
        Token otherlv_38=null;
        Token lv_castDefined_39_0=null;
        Token otherlv_40=null;
        Token lv_castDefined_41_0=null;
        Token otherlv_42=null;
        Token lv_cast_43_0=null;
        Token otherlv_44=null;
        Token otherlv_45=null;
        Token otherlv_46=null;
        Token lv_cast_47_0=null;
        Token otherlv_48=null;
        Token otherlv_49=null;
        Token lv_cooldownDefined_50_0=null;
        Token otherlv_51=null;
        Token otherlv_52=null;
        Token lv_cooldown_53_0=null;
        Token otherlv_54=null;
        Token lv_damageDefined_55_0=null;
        Token otherlv_56=null;
        Token otherlv_57=null;
        Token lv_damage_58_0=null;
        Token otherlv_59=null;
        Token lv_damagedDefined_60_0=null;
        Token otherlv_61=null;
        Token lv_damagedDefined_62_0=null;
        Token otherlv_63=null;
        Token lv_damaged_64_0=null;
        Token otherlv_65=null;
        Token otherlv_66=null;
        Token otherlv_67=null;
        Token lv_damaged_68_0=null;
        Token otherlv_69=null;
        Token otherlv_70=null;
        Token lv_lefthandedDefined_71_0=null;
        Token otherlv_72=null;
        Token lv_lefthandedDefined_73_0=null;
        Token otherlv_74=null;
        Token lv_lefthanded_75_0=null;
        Token otherlv_76=null;
        Token otherlv_77=null;
        Token otherlv_78=null;
        Token lv_lefthanded_79_0=null;
        Token otherlv_80=null;
        Token otherlv_81=null;
        Token lv_pullDefined_82_0=null;
        Token otherlv_83=null;
        Token otherlv_84=null;
        Token lv_pull_85_0=null;
        Token otherlv_86=null;
        Token lv_throwingDefined_87_0=null;
        Token otherlv_88=null;
        Token lv_throwingDefined_89_0=null;
        Token otherlv_90=null;
        Token lv_throwing_91_0=null;
        Token otherlv_92=null;
        Token otherlv_93=null;
        Token otherlv_94=null;
        Token lv_throwing_95_0=null;
        Token otherlv_96=null;
        Token otherlv_97=null;
        Token lv_timeDefined_98_0=null;
        Token otherlv_99=null;
        Token otherlv_100=null;
        Token lv_time_101_0=null;
        Token otherlv_102=null;
        Token lv_customModelDataDefined_103_0=null;
        Token otherlv_104=null;
        Token otherlv_105=null;
        AntlrDatatypeRuleToken lv_customModelData_106_0 = null;



        	enterRule();

        try {
            // InternalMcmodel.g:12827:2: ( ( ( ( ( (lv_pullingDefined_0_0= '!' ) ) otherlv_1= 'pulling' ) | ( ( (lv_pullingDefined_2_0= 'pulling' ) ) ( (otherlv_3= '!=' ( ( (lv_pulling_4_0= 'false' ) ) | otherlv_5= 'true' ) ) | ( (otherlv_6= '=' | otherlv_7= '==' ) ( ( (lv_pulling_8_0= 'true' ) ) | otherlv_9= 'false' ) ) ) ) ) ( ( ( ( ({...}? => ( ({...}? => (otherlv_11= '&' ( (lv_angleDefined_12_0= 'angle' ) ) (otherlv_13= '=' | otherlv_14= '==' ) ( (lv_angle_15_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= '&' ( ( ( (lv_blockingDefined_17_0= '!' ) ) otherlv_18= 'blocking' ) | ( ( (lv_blockingDefined_19_0= 'blocking' ) ) ( (otherlv_20= '!=' ( ( (lv_blocking_21_0= 'false' ) ) | otherlv_22= 'true' ) ) | ( (otherlv_23= '=' | otherlv_24= '==' ) ( ( (lv_blocking_25_0= 'true' ) ) | otherlv_26= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= '&' ( ( ( (lv_brokenDefined_28_0= '!' ) ) otherlv_29= 'broken' ) | ( ( (lv_brokenDefined_30_0= 'broken' ) ) ( (otherlv_31= '!=' ( ( (lv_broken_32_0= 'false' ) ) | otherlv_33= 'true' ) ) | ( (otherlv_34= '=' | otherlv_35= '==' ) ( ( (lv_broken_36_0= 'true' ) ) | otherlv_37= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_38= '&' ( ( ( (lv_castDefined_39_0= '!' ) ) otherlv_40= 'cast' ) | ( ( (lv_castDefined_41_0= 'cast' ) ) ( (otherlv_42= '!=' ( ( (lv_cast_43_0= 'false' ) ) | otherlv_44= 'true' ) ) | ( (otherlv_45= '=' | otherlv_46= '==' ) ( ( (lv_cast_47_0= 'true' ) ) | otherlv_48= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_49= '&' ( (lv_cooldownDefined_50_0= 'cooldown' ) ) (otherlv_51= '=' | otherlv_52= '==' ) ( (lv_cooldown_53_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_54= '&' ( (lv_damageDefined_55_0= 'damage' ) ) (otherlv_56= '=' | otherlv_57= '==' ) ( (lv_damage_58_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_59= '&' ( ( ( (lv_damagedDefined_60_0= '!' ) ) otherlv_61= 'damaged' ) | ( ( (lv_damagedDefined_62_0= 'damaged' ) ) ( (otherlv_63= '!=' ( ( (lv_damaged_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_damaged_68_0= 'true' ) ) | otherlv_69= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_70= '&' ( ( ( (lv_lefthandedDefined_71_0= '!' ) ) otherlv_72= 'lefthanded' ) | ( ( (lv_lefthandedDefined_73_0= 'lefthanded' ) ) ( (otherlv_74= '!=' ( ( (lv_lefthanded_75_0= 'false' ) ) | otherlv_76= 'true' ) ) | ( (otherlv_77= '=' | otherlv_78= '==' ) ( ( (lv_lefthanded_79_0= 'true' ) ) | otherlv_80= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_81= '&' ( (lv_pullDefined_82_0= 'pull' ) ) (otherlv_83= '=' | otherlv_84= '==' ) ( (lv_pull_85_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_86= '&' ( ( ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing' ) | ( ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_97= '&' ( (lv_timeDefined_98_0= 'time' ) ) (otherlv_99= '=' | otherlv_100= '==' ) ( (lv_time_101_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) ) ) ) ) ) )* ) ) ) ) )
            // InternalMcmodel.g:12828:2: ( ( ( ( (lv_pullingDefined_0_0= '!' ) ) otherlv_1= 'pulling' ) | ( ( (lv_pullingDefined_2_0= 'pulling' ) ) ( (otherlv_3= '!=' ( ( (lv_pulling_4_0= 'false' ) ) | otherlv_5= 'true' ) ) | ( (otherlv_6= '=' | otherlv_7= '==' ) ( ( (lv_pulling_8_0= 'true' ) ) | otherlv_9= 'false' ) ) ) ) ) ( ( ( ( ({...}? => ( ({...}? => (otherlv_11= '&' ( (lv_angleDefined_12_0= 'angle' ) ) (otherlv_13= '=' | otherlv_14= '==' ) ( (lv_angle_15_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= '&' ( ( ( (lv_blockingDefined_17_0= '!' ) ) otherlv_18= 'blocking' ) | ( ( (lv_blockingDefined_19_0= 'blocking' ) ) ( (otherlv_20= '!=' ( ( (lv_blocking_21_0= 'false' ) ) | otherlv_22= 'true' ) ) | ( (otherlv_23= '=' | otherlv_24= '==' ) ( ( (lv_blocking_25_0= 'true' ) ) | otherlv_26= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= '&' ( ( ( (lv_brokenDefined_28_0= '!' ) ) otherlv_29= 'broken' ) | ( ( (lv_brokenDefined_30_0= 'broken' ) ) ( (otherlv_31= '!=' ( ( (lv_broken_32_0= 'false' ) ) | otherlv_33= 'true' ) ) | ( (otherlv_34= '=' | otherlv_35= '==' ) ( ( (lv_broken_36_0= 'true' ) ) | otherlv_37= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_38= '&' ( ( ( (lv_castDefined_39_0= '!' ) ) otherlv_40= 'cast' ) | ( ( (lv_castDefined_41_0= 'cast' ) ) ( (otherlv_42= '!=' ( ( (lv_cast_43_0= 'false' ) ) | otherlv_44= 'true' ) ) | ( (otherlv_45= '=' | otherlv_46= '==' ) ( ( (lv_cast_47_0= 'true' ) ) | otherlv_48= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_49= '&' ( (lv_cooldownDefined_50_0= 'cooldown' ) ) (otherlv_51= '=' | otherlv_52= '==' ) ( (lv_cooldown_53_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_54= '&' ( (lv_damageDefined_55_0= 'damage' ) ) (otherlv_56= '=' | otherlv_57= '==' ) ( (lv_damage_58_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_59= '&' ( ( ( (lv_damagedDefined_60_0= '!' ) ) otherlv_61= 'damaged' ) | ( ( (lv_damagedDefined_62_0= 'damaged' ) ) ( (otherlv_63= '!=' ( ( (lv_damaged_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_damaged_68_0= 'true' ) ) | otherlv_69= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_70= '&' ( ( ( (lv_lefthandedDefined_71_0= '!' ) ) otherlv_72= 'lefthanded' ) | ( ( (lv_lefthandedDefined_73_0= 'lefthanded' ) ) ( (otherlv_74= '!=' ( ( (lv_lefthanded_75_0= 'false' ) ) | otherlv_76= 'true' ) ) | ( (otherlv_77= '=' | otherlv_78= '==' ) ( ( (lv_lefthanded_79_0= 'true' ) ) | otherlv_80= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_81= '&' ( (lv_pullDefined_82_0= 'pull' ) ) (otherlv_83= '=' | otherlv_84= '==' ) ( (lv_pull_85_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_86= '&' ( ( ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing' ) | ( ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_97= '&' ( (lv_timeDefined_98_0= 'time' ) ) (otherlv_99= '=' | otherlv_100= '==' ) ( (lv_time_101_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) ) ) ) ) ) )* ) ) ) )
            {
            // InternalMcmodel.g:12828:2: ( ( ( ( (lv_pullingDefined_0_0= '!' ) ) otherlv_1= 'pulling' ) | ( ( (lv_pullingDefined_2_0= 'pulling' ) ) ( (otherlv_3= '!=' ( ( (lv_pulling_4_0= 'false' ) ) | otherlv_5= 'true' ) ) | ( (otherlv_6= '=' | otherlv_7= '==' ) ( ( (lv_pulling_8_0= 'true' ) ) | otherlv_9= 'false' ) ) ) ) ) ( ( ( ( ({...}? => ( ({...}? => (otherlv_11= '&' ( (lv_angleDefined_12_0= 'angle' ) ) (otherlv_13= '=' | otherlv_14= '==' ) ( (lv_angle_15_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= '&' ( ( ( (lv_blockingDefined_17_0= '!' ) ) otherlv_18= 'blocking' ) | ( ( (lv_blockingDefined_19_0= 'blocking' ) ) ( (otherlv_20= '!=' ( ( (lv_blocking_21_0= 'false' ) ) | otherlv_22= 'true' ) ) | ( (otherlv_23= '=' | otherlv_24= '==' ) ( ( (lv_blocking_25_0= 'true' ) ) | otherlv_26= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= '&' ( ( ( (lv_brokenDefined_28_0= '!' ) ) otherlv_29= 'broken' ) | ( ( (lv_brokenDefined_30_0= 'broken' ) ) ( (otherlv_31= '!=' ( ( (lv_broken_32_0= 'false' ) ) | otherlv_33= 'true' ) ) | ( (otherlv_34= '=' | otherlv_35= '==' ) ( ( (lv_broken_36_0= 'true' ) ) | otherlv_37= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_38= '&' ( ( ( (lv_castDefined_39_0= '!' ) ) otherlv_40= 'cast' ) | ( ( (lv_castDefined_41_0= 'cast' ) ) ( (otherlv_42= '!=' ( ( (lv_cast_43_0= 'false' ) ) | otherlv_44= 'true' ) ) | ( (otherlv_45= '=' | otherlv_46= '==' ) ( ( (lv_cast_47_0= 'true' ) ) | otherlv_48= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_49= '&' ( (lv_cooldownDefined_50_0= 'cooldown' ) ) (otherlv_51= '=' | otherlv_52= '==' ) ( (lv_cooldown_53_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_54= '&' ( (lv_damageDefined_55_0= 'damage' ) ) (otherlv_56= '=' | otherlv_57= '==' ) ( (lv_damage_58_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_59= '&' ( ( ( (lv_damagedDefined_60_0= '!' ) ) otherlv_61= 'damaged' ) | ( ( (lv_damagedDefined_62_0= 'damaged' ) ) ( (otherlv_63= '!=' ( ( (lv_damaged_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_damaged_68_0= 'true' ) ) | otherlv_69= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_70= '&' ( ( ( (lv_lefthandedDefined_71_0= '!' ) ) otherlv_72= 'lefthanded' ) | ( ( (lv_lefthandedDefined_73_0= 'lefthanded' ) ) ( (otherlv_74= '!=' ( ( (lv_lefthanded_75_0= 'false' ) ) | otherlv_76= 'true' ) ) | ( (otherlv_77= '=' | otherlv_78= '==' ) ( ( (lv_lefthanded_79_0= 'true' ) ) | otherlv_80= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_81= '&' ( (lv_pullDefined_82_0= 'pull' ) ) (otherlv_83= '=' | otherlv_84= '==' ) ( (lv_pull_85_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_86= '&' ( ( ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing' ) | ( ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_97= '&' ( (lv_timeDefined_98_0= 'time' ) ) (otherlv_99= '=' | otherlv_100= '==' ) ( (lv_time_101_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) ) ) ) ) ) )* ) ) ) )
            // InternalMcmodel.g:12829:3: ( ( ( (lv_pullingDefined_0_0= '!' ) ) otherlv_1= 'pulling' ) | ( ( (lv_pullingDefined_2_0= 'pulling' ) ) ( (otherlv_3= '!=' ( ( (lv_pulling_4_0= 'false' ) ) | otherlv_5= 'true' ) ) | ( (otherlv_6= '=' | otherlv_7= '==' ) ( ( (lv_pulling_8_0= 'true' ) ) | otherlv_9= 'false' ) ) ) ) ) ( ( ( ( ({...}? => ( ({...}? => (otherlv_11= '&' ( (lv_angleDefined_12_0= 'angle' ) ) (otherlv_13= '=' | otherlv_14= '==' ) ( (lv_angle_15_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= '&' ( ( ( (lv_blockingDefined_17_0= '!' ) ) otherlv_18= 'blocking' ) | ( ( (lv_blockingDefined_19_0= 'blocking' ) ) ( (otherlv_20= '!=' ( ( (lv_blocking_21_0= 'false' ) ) | otherlv_22= 'true' ) ) | ( (otherlv_23= '=' | otherlv_24= '==' ) ( ( (lv_blocking_25_0= 'true' ) ) | otherlv_26= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= '&' ( ( ( (lv_brokenDefined_28_0= '!' ) ) otherlv_29= 'broken' ) | ( ( (lv_brokenDefined_30_0= 'broken' ) ) ( (otherlv_31= '!=' ( ( (lv_broken_32_0= 'false' ) ) | otherlv_33= 'true' ) ) | ( (otherlv_34= '=' | otherlv_35= '==' ) ( ( (lv_broken_36_0= 'true' ) ) | otherlv_37= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_38= '&' ( ( ( (lv_castDefined_39_0= '!' ) ) otherlv_40= 'cast' ) | ( ( (lv_castDefined_41_0= 'cast' ) ) ( (otherlv_42= '!=' ( ( (lv_cast_43_0= 'false' ) ) | otherlv_44= 'true' ) ) | ( (otherlv_45= '=' | otherlv_46= '==' ) ( ( (lv_cast_47_0= 'true' ) ) | otherlv_48= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_49= '&' ( (lv_cooldownDefined_50_0= 'cooldown' ) ) (otherlv_51= '=' | otherlv_52= '==' ) ( (lv_cooldown_53_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_54= '&' ( (lv_damageDefined_55_0= 'damage' ) ) (otherlv_56= '=' | otherlv_57= '==' ) ( (lv_damage_58_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_59= '&' ( ( ( (lv_damagedDefined_60_0= '!' ) ) otherlv_61= 'damaged' ) | ( ( (lv_damagedDefined_62_0= 'damaged' ) ) ( (otherlv_63= '!=' ( ( (lv_damaged_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_damaged_68_0= 'true' ) ) | otherlv_69= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_70= '&' ( ( ( (lv_lefthandedDefined_71_0= '!' ) ) otherlv_72= 'lefthanded' ) | ( ( (lv_lefthandedDefined_73_0= 'lefthanded' ) ) ( (otherlv_74= '!=' ( ( (lv_lefthanded_75_0= 'false' ) ) | otherlv_76= 'true' ) ) | ( (otherlv_77= '=' | otherlv_78= '==' ) ( ( (lv_lefthanded_79_0= 'true' ) ) | otherlv_80= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_81= '&' ( (lv_pullDefined_82_0= 'pull' ) ) (otherlv_83= '=' | otherlv_84= '==' ) ( (lv_pull_85_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_86= '&' ( ( ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing' ) | ( ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_97= '&' ( (lv_timeDefined_98_0= 'time' ) ) (otherlv_99= '=' | otherlv_100= '==' ) ( (lv_time_101_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) ) ) ) ) ) )* ) ) )
            {
            // InternalMcmodel.g:12829:3: ( ( ( (lv_pullingDefined_0_0= '!' ) ) otherlv_1= 'pulling' ) | ( ( (lv_pullingDefined_2_0= 'pulling' ) ) ( (otherlv_3= '!=' ( ( (lv_pulling_4_0= 'false' ) ) | otherlv_5= 'true' ) ) | ( (otherlv_6= '=' | otherlv_7= '==' ) ( ( (lv_pulling_8_0= 'true' ) ) | otherlv_9= 'false' ) ) ) ) )
            int alt404=2;
            int LA404_0 = input.LA(1);

            if ( (LA404_0==60) ) {
                alt404=1;
            }
            else if ( (LA404_0==70) ) {
                alt404=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 404, 0, input);

                throw nvae;
            }
            switch (alt404) {
                case 1 :
                    // InternalMcmodel.g:12830:4: ( ( (lv_pullingDefined_0_0= '!' ) ) otherlv_1= 'pulling' )
                    {
                    // InternalMcmodel.g:12830:4: ( ( (lv_pullingDefined_0_0= '!' ) ) otherlv_1= 'pulling' )
                    // InternalMcmodel.g:12831:5: ( (lv_pullingDefined_0_0= '!' ) ) otherlv_1= 'pulling'
                    {
                    // InternalMcmodel.g:12831:5: ( (lv_pullingDefined_0_0= '!' ) )
                    // InternalMcmodel.g:12832:6: (lv_pullingDefined_0_0= '!' )
                    {
                    // InternalMcmodel.g:12832:6: (lv_pullingDefined_0_0= '!' )
                    // InternalMcmodel.g:12833:7: lv_pullingDefined_0_0= '!'
                    {
                    lv_pullingDefined_0_0=(Token)match(input,60,FOLLOW_53); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							newLeafNode(lv_pullingDefined_0_0, grammarAccess.getOverridePredicate_10Access().getPullingDefinedExclamationMarkKeyword_0_0_0_0());
                      						
                    }
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElement(grammarAccess.getOverridePredicate_10Rule());
                      							}
                      							setWithLastConsumed(current, "pullingDefined", true, "!");
                      						
                    }

                    }


                    }

                    otherlv_1=(Token)match(input,70,FOLLOW_37); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_1, grammarAccess.getOverridePredicate_10Access().getPullingKeyword_0_0_1());
                      				
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalMcmodel.g:12851:4: ( ( (lv_pullingDefined_2_0= 'pulling' ) ) ( (otherlv_3= '!=' ( ( (lv_pulling_4_0= 'false' ) ) | otherlv_5= 'true' ) ) | ( (otherlv_6= '=' | otherlv_7= '==' ) ( ( (lv_pulling_8_0= 'true' ) ) | otherlv_9= 'false' ) ) ) )
                    {
                    // InternalMcmodel.g:12851:4: ( ( (lv_pullingDefined_2_0= 'pulling' ) ) ( (otherlv_3= '!=' ( ( (lv_pulling_4_0= 'false' ) ) | otherlv_5= 'true' ) ) | ( (otherlv_6= '=' | otherlv_7= '==' ) ( ( (lv_pulling_8_0= 'true' ) ) | otherlv_9= 'false' ) ) ) )
                    // InternalMcmodel.g:12852:5: ( (lv_pullingDefined_2_0= 'pulling' ) ) ( (otherlv_3= '!=' ( ( (lv_pulling_4_0= 'false' ) ) | otherlv_5= 'true' ) ) | ( (otherlv_6= '=' | otherlv_7= '==' ) ( ( (lv_pulling_8_0= 'true' ) ) | otherlv_9= 'false' ) ) )
                    {
                    // InternalMcmodel.g:12852:5: ( (lv_pullingDefined_2_0= 'pulling' ) )
                    // InternalMcmodel.g:12853:6: (lv_pullingDefined_2_0= 'pulling' )
                    {
                    // InternalMcmodel.g:12853:6: (lv_pullingDefined_2_0= 'pulling' )
                    // InternalMcmodel.g:12854:7: lv_pullingDefined_2_0= 'pulling'
                    {
                    lv_pullingDefined_2_0=(Token)match(input,70,FOLLOW_40); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							newLeafNode(lv_pullingDefined_2_0, grammarAccess.getOverridePredicate_10Access().getPullingDefinedPullingKeyword_0_1_0_0());
                      						
                    }
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElement(grammarAccess.getOverridePredicate_10Rule());
                      							}
                      							setWithLastConsumed(current, "pullingDefined", true, "pulling");
                      						
                    }

                    }


                    }

                    // InternalMcmodel.g:12866:5: ( (otherlv_3= '!=' ( ( (lv_pulling_4_0= 'false' ) ) | otherlv_5= 'true' ) ) | ( (otherlv_6= '=' | otherlv_7= '==' ) ( ( (lv_pulling_8_0= 'true' ) ) | otherlv_9= 'false' ) ) )
                    int alt403=2;
                    int LA403_0 = input.LA(1);

                    if ( (LA403_0==62) ) {
                        alt403=1;
                    }
                    else if ( (LA403_0==18||LA403_0==58) ) {
                        alt403=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 403, 0, input);

                        throw nvae;
                    }
                    switch (alt403) {
                        case 1 :
                            // InternalMcmodel.g:12867:6: (otherlv_3= '!=' ( ( (lv_pulling_4_0= 'false' ) ) | otherlv_5= 'true' ) )
                            {
                            // InternalMcmodel.g:12867:6: (otherlv_3= '!=' ( ( (lv_pulling_4_0= 'false' ) ) | otherlv_5= 'true' ) )
                            // InternalMcmodel.g:12868:7: otherlv_3= '!=' ( ( (lv_pulling_4_0= 'false' ) ) | otherlv_5= 'true' )
                            {
                            otherlv_3=(Token)match(input,62,FOLLOW_7); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(otherlv_3, grammarAccess.getOverridePredicate_10Access().getExclamationMarkEqualsSignKeyword_0_1_1_0_0());
                              						
                            }
                            // InternalMcmodel.g:12872:7: ( ( (lv_pulling_4_0= 'false' ) ) | otherlv_5= 'true' )
                            int alt400=2;
                            int LA400_0 = input.LA(1);

                            if ( (LA400_0==21) ) {
                                alt400=1;
                            }
                            else if ( (LA400_0==20) ) {
                                alt400=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 400, 0, input);

                                throw nvae;
                            }
                            switch (alt400) {
                                case 1 :
                                    // InternalMcmodel.g:12873:8: ( (lv_pulling_4_0= 'false' ) )
                                    {
                                    // InternalMcmodel.g:12873:8: ( (lv_pulling_4_0= 'false' ) )
                                    // InternalMcmodel.g:12874:9: (lv_pulling_4_0= 'false' )
                                    {
                                    // InternalMcmodel.g:12874:9: (lv_pulling_4_0= 'false' )
                                    // InternalMcmodel.g:12875:10: lv_pulling_4_0= 'false'
                                    {
                                    lv_pulling_4_0=(Token)match(input,21,FOLLOW_37); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      										newLeafNode(lv_pulling_4_0, grammarAccess.getOverridePredicate_10Access().getPullingFalseKeyword_0_1_1_0_1_0_0());
                                      									
                                    }
                                    if ( state.backtracking==0 ) {

                                      										if (current==null) {
                                      											current = createModelElement(grammarAccess.getOverridePredicate_10Rule());
                                      										}
                                      										setWithLastConsumed(current, "pulling", true, "false");
                                      									
                                    }

                                    }


                                    }


                                    }
                                    break;
                                case 2 :
                                    // InternalMcmodel.g:12888:8: otherlv_5= 'true'
                                    {
                                    otherlv_5=(Token)match(input,20,FOLLOW_37); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(otherlv_5, grammarAccess.getOverridePredicate_10Access().getTrueKeyword_0_1_1_0_1_1());
                                      							
                                    }

                                    }
                                    break;

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalMcmodel.g:12895:6: ( (otherlv_6= '=' | otherlv_7= '==' ) ( ( (lv_pulling_8_0= 'true' ) ) | otherlv_9= 'false' ) )
                            {
                            // InternalMcmodel.g:12895:6: ( (otherlv_6= '=' | otherlv_7= '==' ) ( ( (lv_pulling_8_0= 'true' ) ) | otherlv_9= 'false' ) )
                            // InternalMcmodel.g:12896:7: (otherlv_6= '=' | otherlv_7= '==' ) ( ( (lv_pulling_8_0= 'true' ) ) | otherlv_9= 'false' )
                            {
                            // InternalMcmodel.g:12896:7: (otherlv_6= '=' | otherlv_7= '==' )
                            int alt401=2;
                            int LA401_0 = input.LA(1);

                            if ( (LA401_0==18) ) {
                                alt401=1;
                            }
                            else if ( (LA401_0==58) ) {
                                alt401=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 401, 0, input);

                                throw nvae;
                            }
                            switch (alt401) {
                                case 1 :
                                    // InternalMcmodel.g:12897:8: otherlv_6= '='
                                    {
                                    otherlv_6=(Token)match(input,18,FOLLOW_7); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(otherlv_6, grammarAccess.getOverridePredicate_10Access().getEqualsSignKeyword_0_1_1_1_0_0());
                                      							
                                    }

                                    }
                                    break;
                                case 2 :
                                    // InternalMcmodel.g:12902:8: otherlv_7= '=='
                                    {
                                    otherlv_7=(Token)match(input,58,FOLLOW_7); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(otherlv_7, grammarAccess.getOverridePredicate_10Access().getEqualsSignEqualsSignKeyword_0_1_1_1_0_1());
                                      							
                                    }

                                    }
                                    break;

                            }

                            // InternalMcmodel.g:12907:7: ( ( (lv_pulling_8_0= 'true' ) ) | otherlv_9= 'false' )
                            int alt402=2;
                            int LA402_0 = input.LA(1);

                            if ( (LA402_0==20) ) {
                                alt402=1;
                            }
                            else if ( (LA402_0==21) ) {
                                alt402=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 402, 0, input);

                                throw nvae;
                            }
                            switch (alt402) {
                                case 1 :
                                    // InternalMcmodel.g:12908:8: ( (lv_pulling_8_0= 'true' ) )
                                    {
                                    // InternalMcmodel.g:12908:8: ( (lv_pulling_8_0= 'true' ) )
                                    // InternalMcmodel.g:12909:9: (lv_pulling_8_0= 'true' )
                                    {
                                    // InternalMcmodel.g:12909:9: (lv_pulling_8_0= 'true' )
                                    // InternalMcmodel.g:12910:10: lv_pulling_8_0= 'true'
                                    {
                                    lv_pulling_8_0=(Token)match(input,20,FOLLOW_37); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      										newLeafNode(lv_pulling_8_0, grammarAccess.getOverridePredicate_10Access().getPullingTrueKeyword_0_1_1_1_1_0_0());
                                      									
                                    }
                                    if ( state.backtracking==0 ) {

                                      										if (current==null) {
                                      											current = createModelElement(grammarAccess.getOverridePredicate_10Rule());
                                      										}
                                      										setWithLastConsumed(current, "pulling", true, "true");
                                      									
                                    }

                                    }


                                    }


                                    }
                                    break;
                                case 2 :
                                    // InternalMcmodel.g:12923:8: otherlv_9= 'false'
                                    {
                                    otherlv_9=(Token)match(input,21,FOLLOW_37); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(otherlv_9, grammarAccess.getOverridePredicate_10Access().getFalseKeyword_0_1_1_1_1_1());
                                      							
                                    }

                                    }
                                    break;

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;

            }

            // InternalMcmodel.g:12932:3: ( ( ( ( ({...}? => ( ({...}? => (otherlv_11= '&' ( (lv_angleDefined_12_0= 'angle' ) ) (otherlv_13= '=' | otherlv_14= '==' ) ( (lv_angle_15_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= '&' ( ( ( (lv_blockingDefined_17_0= '!' ) ) otherlv_18= 'blocking' ) | ( ( (lv_blockingDefined_19_0= 'blocking' ) ) ( (otherlv_20= '!=' ( ( (lv_blocking_21_0= 'false' ) ) | otherlv_22= 'true' ) ) | ( (otherlv_23= '=' | otherlv_24= '==' ) ( ( (lv_blocking_25_0= 'true' ) ) | otherlv_26= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= '&' ( ( ( (lv_brokenDefined_28_0= '!' ) ) otherlv_29= 'broken' ) | ( ( (lv_brokenDefined_30_0= 'broken' ) ) ( (otherlv_31= '!=' ( ( (lv_broken_32_0= 'false' ) ) | otherlv_33= 'true' ) ) | ( (otherlv_34= '=' | otherlv_35= '==' ) ( ( (lv_broken_36_0= 'true' ) ) | otherlv_37= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_38= '&' ( ( ( (lv_castDefined_39_0= '!' ) ) otherlv_40= 'cast' ) | ( ( (lv_castDefined_41_0= 'cast' ) ) ( (otherlv_42= '!=' ( ( (lv_cast_43_0= 'false' ) ) | otherlv_44= 'true' ) ) | ( (otherlv_45= '=' | otherlv_46= '==' ) ( ( (lv_cast_47_0= 'true' ) ) | otherlv_48= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_49= '&' ( (lv_cooldownDefined_50_0= 'cooldown' ) ) (otherlv_51= '=' | otherlv_52= '==' ) ( (lv_cooldown_53_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_54= '&' ( (lv_damageDefined_55_0= 'damage' ) ) (otherlv_56= '=' | otherlv_57= '==' ) ( (lv_damage_58_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_59= '&' ( ( ( (lv_damagedDefined_60_0= '!' ) ) otherlv_61= 'damaged' ) | ( ( (lv_damagedDefined_62_0= 'damaged' ) ) ( (otherlv_63= '!=' ( ( (lv_damaged_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_damaged_68_0= 'true' ) ) | otherlv_69= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_70= '&' ( ( ( (lv_lefthandedDefined_71_0= '!' ) ) otherlv_72= 'lefthanded' ) | ( ( (lv_lefthandedDefined_73_0= 'lefthanded' ) ) ( (otherlv_74= '!=' ( ( (lv_lefthanded_75_0= 'false' ) ) | otherlv_76= 'true' ) ) | ( (otherlv_77= '=' | otherlv_78= '==' ) ( ( (lv_lefthanded_79_0= 'true' ) ) | otherlv_80= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_81= '&' ( (lv_pullDefined_82_0= 'pull' ) ) (otherlv_83= '=' | otherlv_84= '==' ) ( (lv_pull_85_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_86= '&' ( ( ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing' ) | ( ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_97= '&' ( (lv_timeDefined_98_0= 'time' ) ) (otherlv_99= '=' | otherlv_100= '==' ) ( (lv_time_101_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) ) ) ) ) ) )* ) ) )
            // InternalMcmodel.g:12933:4: ( ( ( ({...}? => ( ({...}? => (otherlv_11= '&' ( (lv_angleDefined_12_0= 'angle' ) ) (otherlv_13= '=' | otherlv_14= '==' ) ( (lv_angle_15_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= '&' ( ( ( (lv_blockingDefined_17_0= '!' ) ) otherlv_18= 'blocking' ) | ( ( (lv_blockingDefined_19_0= 'blocking' ) ) ( (otherlv_20= '!=' ( ( (lv_blocking_21_0= 'false' ) ) | otherlv_22= 'true' ) ) | ( (otherlv_23= '=' | otherlv_24= '==' ) ( ( (lv_blocking_25_0= 'true' ) ) | otherlv_26= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= '&' ( ( ( (lv_brokenDefined_28_0= '!' ) ) otherlv_29= 'broken' ) | ( ( (lv_brokenDefined_30_0= 'broken' ) ) ( (otherlv_31= '!=' ( ( (lv_broken_32_0= 'false' ) ) | otherlv_33= 'true' ) ) | ( (otherlv_34= '=' | otherlv_35= '==' ) ( ( (lv_broken_36_0= 'true' ) ) | otherlv_37= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_38= '&' ( ( ( (lv_castDefined_39_0= '!' ) ) otherlv_40= 'cast' ) | ( ( (lv_castDefined_41_0= 'cast' ) ) ( (otherlv_42= '!=' ( ( (lv_cast_43_0= 'false' ) ) | otherlv_44= 'true' ) ) | ( (otherlv_45= '=' | otherlv_46= '==' ) ( ( (lv_cast_47_0= 'true' ) ) | otherlv_48= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_49= '&' ( (lv_cooldownDefined_50_0= 'cooldown' ) ) (otherlv_51= '=' | otherlv_52= '==' ) ( (lv_cooldown_53_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_54= '&' ( (lv_damageDefined_55_0= 'damage' ) ) (otherlv_56= '=' | otherlv_57= '==' ) ( (lv_damage_58_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_59= '&' ( ( ( (lv_damagedDefined_60_0= '!' ) ) otherlv_61= 'damaged' ) | ( ( (lv_damagedDefined_62_0= 'damaged' ) ) ( (otherlv_63= '!=' ( ( (lv_damaged_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_damaged_68_0= 'true' ) ) | otherlv_69= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_70= '&' ( ( ( (lv_lefthandedDefined_71_0= '!' ) ) otherlv_72= 'lefthanded' ) | ( ( (lv_lefthandedDefined_73_0= 'lefthanded' ) ) ( (otherlv_74= '!=' ( ( (lv_lefthanded_75_0= 'false' ) ) | otherlv_76= 'true' ) ) | ( (otherlv_77= '=' | otherlv_78= '==' ) ( ( (lv_lefthanded_79_0= 'true' ) ) | otherlv_80= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_81= '&' ( (lv_pullDefined_82_0= 'pull' ) ) (otherlv_83= '=' | otherlv_84= '==' ) ( (lv_pull_85_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_86= '&' ( ( ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing' ) | ( ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_97= '&' ( (lv_timeDefined_98_0= 'time' ) ) (otherlv_99= '=' | otherlv_100= '==' ) ( (lv_time_101_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) ) ) ) ) ) )* ) )
            {
            // InternalMcmodel.g:12933:4: ( ( ( ({...}? => ( ({...}? => (otherlv_11= '&' ( (lv_angleDefined_12_0= 'angle' ) ) (otherlv_13= '=' | otherlv_14= '==' ) ( (lv_angle_15_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= '&' ( ( ( (lv_blockingDefined_17_0= '!' ) ) otherlv_18= 'blocking' ) | ( ( (lv_blockingDefined_19_0= 'blocking' ) ) ( (otherlv_20= '!=' ( ( (lv_blocking_21_0= 'false' ) ) | otherlv_22= 'true' ) ) | ( (otherlv_23= '=' | otherlv_24= '==' ) ( ( (lv_blocking_25_0= 'true' ) ) | otherlv_26= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= '&' ( ( ( (lv_brokenDefined_28_0= '!' ) ) otherlv_29= 'broken' ) | ( ( (lv_brokenDefined_30_0= 'broken' ) ) ( (otherlv_31= '!=' ( ( (lv_broken_32_0= 'false' ) ) | otherlv_33= 'true' ) ) | ( (otherlv_34= '=' | otherlv_35= '==' ) ( ( (lv_broken_36_0= 'true' ) ) | otherlv_37= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_38= '&' ( ( ( (lv_castDefined_39_0= '!' ) ) otherlv_40= 'cast' ) | ( ( (lv_castDefined_41_0= 'cast' ) ) ( (otherlv_42= '!=' ( ( (lv_cast_43_0= 'false' ) ) | otherlv_44= 'true' ) ) | ( (otherlv_45= '=' | otherlv_46= '==' ) ( ( (lv_cast_47_0= 'true' ) ) | otherlv_48= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_49= '&' ( (lv_cooldownDefined_50_0= 'cooldown' ) ) (otherlv_51= '=' | otherlv_52= '==' ) ( (lv_cooldown_53_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_54= '&' ( (lv_damageDefined_55_0= 'damage' ) ) (otherlv_56= '=' | otherlv_57= '==' ) ( (lv_damage_58_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_59= '&' ( ( ( (lv_damagedDefined_60_0= '!' ) ) otherlv_61= 'damaged' ) | ( ( (lv_damagedDefined_62_0= 'damaged' ) ) ( (otherlv_63= '!=' ( ( (lv_damaged_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_damaged_68_0= 'true' ) ) | otherlv_69= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_70= '&' ( ( ( (lv_lefthandedDefined_71_0= '!' ) ) otherlv_72= 'lefthanded' ) | ( ( (lv_lefthandedDefined_73_0= 'lefthanded' ) ) ( (otherlv_74= '!=' ( ( (lv_lefthanded_75_0= 'false' ) ) | otherlv_76= 'true' ) ) | ( (otherlv_77= '=' | otherlv_78= '==' ) ( ( (lv_lefthanded_79_0= 'true' ) ) | otherlv_80= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_81= '&' ( (lv_pullDefined_82_0= 'pull' ) ) (otherlv_83= '=' | otherlv_84= '==' ) ( (lv_pull_85_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_86= '&' ( ( ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing' ) | ( ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_97= '&' ( (lv_timeDefined_98_0= 'time' ) ) (otherlv_99= '=' | otherlv_100= '==' ) ( (lv_time_101_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) ) ) ) ) ) )* ) )
            // InternalMcmodel.g:12934:5: ( ( ({...}? => ( ({...}? => (otherlv_11= '&' ( (lv_angleDefined_12_0= 'angle' ) ) (otherlv_13= '=' | otherlv_14= '==' ) ( (lv_angle_15_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= '&' ( ( ( (lv_blockingDefined_17_0= '!' ) ) otherlv_18= 'blocking' ) | ( ( (lv_blockingDefined_19_0= 'blocking' ) ) ( (otherlv_20= '!=' ( ( (lv_blocking_21_0= 'false' ) ) | otherlv_22= 'true' ) ) | ( (otherlv_23= '=' | otherlv_24= '==' ) ( ( (lv_blocking_25_0= 'true' ) ) | otherlv_26= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= '&' ( ( ( (lv_brokenDefined_28_0= '!' ) ) otherlv_29= 'broken' ) | ( ( (lv_brokenDefined_30_0= 'broken' ) ) ( (otherlv_31= '!=' ( ( (lv_broken_32_0= 'false' ) ) | otherlv_33= 'true' ) ) | ( (otherlv_34= '=' | otherlv_35= '==' ) ( ( (lv_broken_36_0= 'true' ) ) | otherlv_37= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_38= '&' ( ( ( (lv_castDefined_39_0= '!' ) ) otherlv_40= 'cast' ) | ( ( (lv_castDefined_41_0= 'cast' ) ) ( (otherlv_42= '!=' ( ( (lv_cast_43_0= 'false' ) ) | otherlv_44= 'true' ) ) | ( (otherlv_45= '=' | otherlv_46= '==' ) ( ( (lv_cast_47_0= 'true' ) ) | otherlv_48= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_49= '&' ( (lv_cooldownDefined_50_0= 'cooldown' ) ) (otherlv_51= '=' | otherlv_52= '==' ) ( (lv_cooldown_53_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_54= '&' ( (lv_damageDefined_55_0= 'damage' ) ) (otherlv_56= '=' | otherlv_57= '==' ) ( (lv_damage_58_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_59= '&' ( ( ( (lv_damagedDefined_60_0= '!' ) ) otherlv_61= 'damaged' ) | ( ( (lv_damagedDefined_62_0= 'damaged' ) ) ( (otherlv_63= '!=' ( ( (lv_damaged_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_damaged_68_0= 'true' ) ) | otherlv_69= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_70= '&' ( ( ( (lv_lefthandedDefined_71_0= '!' ) ) otherlv_72= 'lefthanded' ) | ( ( (lv_lefthandedDefined_73_0= 'lefthanded' ) ) ( (otherlv_74= '!=' ( ( (lv_lefthanded_75_0= 'false' ) ) | otherlv_76= 'true' ) ) | ( (otherlv_77= '=' | otherlv_78= '==' ) ( ( (lv_lefthanded_79_0= 'true' ) ) | otherlv_80= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_81= '&' ( (lv_pullDefined_82_0= 'pull' ) ) (otherlv_83= '=' | otherlv_84= '==' ) ( (lv_pull_85_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_86= '&' ( ( ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing' ) | ( ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_97= '&' ( (lv_timeDefined_98_0= 'time' ) ) (otherlv_99= '=' | otherlv_100= '==' ) ( (lv_time_101_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) ) ) ) ) ) )* )
            {
            getUnorderedGroupHelper().enter(grammarAccess.getOverridePredicate_10Access().getUnorderedGroup_1());
            // InternalMcmodel.g:12937:5: ( ( ({...}? => ( ({...}? => (otherlv_11= '&' ( (lv_angleDefined_12_0= 'angle' ) ) (otherlv_13= '=' | otherlv_14= '==' ) ( (lv_angle_15_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= '&' ( ( ( (lv_blockingDefined_17_0= '!' ) ) otherlv_18= 'blocking' ) | ( ( (lv_blockingDefined_19_0= 'blocking' ) ) ( (otherlv_20= '!=' ( ( (lv_blocking_21_0= 'false' ) ) | otherlv_22= 'true' ) ) | ( (otherlv_23= '=' | otherlv_24= '==' ) ( ( (lv_blocking_25_0= 'true' ) ) | otherlv_26= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= '&' ( ( ( (lv_brokenDefined_28_0= '!' ) ) otherlv_29= 'broken' ) | ( ( (lv_brokenDefined_30_0= 'broken' ) ) ( (otherlv_31= '!=' ( ( (lv_broken_32_0= 'false' ) ) | otherlv_33= 'true' ) ) | ( (otherlv_34= '=' | otherlv_35= '==' ) ( ( (lv_broken_36_0= 'true' ) ) | otherlv_37= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_38= '&' ( ( ( (lv_castDefined_39_0= '!' ) ) otherlv_40= 'cast' ) | ( ( (lv_castDefined_41_0= 'cast' ) ) ( (otherlv_42= '!=' ( ( (lv_cast_43_0= 'false' ) ) | otherlv_44= 'true' ) ) | ( (otherlv_45= '=' | otherlv_46= '==' ) ( ( (lv_cast_47_0= 'true' ) ) | otherlv_48= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_49= '&' ( (lv_cooldownDefined_50_0= 'cooldown' ) ) (otherlv_51= '=' | otherlv_52= '==' ) ( (lv_cooldown_53_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_54= '&' ( (lv_damageDefined_55_0= 'damage' ) ) (otherlv_56= '=' | otherlv_57= '==' ) ( (lv_damage_58_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_59= '&' ( ( ( (lv_damagedDefined_60_0= '!' ) ) otherlv_61= 'damaged' ) | ( ( (lv_damagedDefined_62_0= 'damaged' ) ) ( (otherlv_63= '!=' ( ( (lv_damaged_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_damaged_68_0= 'true' ) ) | otherlv_69= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_70= '&' ( ( ( (lv_lefthandedDefined_71_0= '!' ) ) otherlv_72= 'lefthanded' ) | ( ( (lv_lefthandedDefined_73_0= 'lefthanded' ) ) ( (otherlv_74= '!=' ( ( (lv_lefthanded_75_0= 'false' ) ) | otherlv_76= 'true' ) ) | ( (otherlv_77= '=' | otherlv_78= '==' ) ( ( (lv_lefthanded_79_0= 'true' ) ) | otherlv_80= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_81= '&' ( (lv_pullDefined_82_0= 'pull' ) ) (otherlv_83= '=' | otherlv_84= '==' ) ( (lv_pull_85_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_86= '&' ( ( ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing' ) | ( ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_97= '&' ( (lv_timeDefined_98_0= 'time' ) ) (otherlv_99= '=' | otherlv_100= '==' ) ( (lv_time_101_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) ) ) ) ) ) )* )
            // InternalMcmodel.g:12938:6: ( ({...}? => ( ({...}? => (otherlv_11= '&' ( (lv_angleDefined_12_0= 'angle' ) ) (otherlv_13= '=' | otherlv_14= '==' ) ( (lv_angle_15_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= '&' ( ( ( (lv_blockingDefined_17_0= '!' ) ) otherlv_18= 'blocking' ) | ( ( (lv_blockingDefined_19_0= 'blocking' ) ) ( (otherlv_20= '!=' ( ( (lv_blocking_21_0= 'false' ) ) | otherlv_22= 'true' ) ) | ( (otherlv_23= '=' | otherlv_24= '==' ) ( ( (lv_blocking_25_0= 'true' ) ) | otherlv_26= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= '&' ( ( ( (lv_brokenDefined_28_0= '!' ) ) otherlv_29= 'broken' ) | ( ( (lv_brokenDefined_30_0= 'broken' ) ) ( (otherlv_31= '!=' ( ( (lv_broken_32_0= 'false' ) ) | otherlv_33= 'true' ) ) | ( (otherlv_34= '=' | otherlv_35= '==' ) ( ( (lv_broken_36_0= 'true' ) ) | otherlv_37= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_38= '&' ( ( ( (lv_castDefined_39_0= '!' ) ) otherlv_40= 'cast' ) | ( ( (lv_castDefined_41_0= 'cast' ) ) ( (otherlv_42= '!=' ( ( (lv_cast_43_0= 'false' ) ) | otherlv_44= 'true' ) ) | ( (otherlv_45= '=' | otherlv_46= '==' ) ( ( (lv_cast_47_0= 'true' ) ) | otherlv_48= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_49= '&' ( (lv_cooldownDefined_50_0= 'cooldown' ) ) (otherlv_51= '=' | otherlv_52= '==' ) ( (lv_cooldown_53_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_54= '&' ( (lv_damageDefined_55_0= 'damage' ) ) (otherlv_56= '=' | otherlv_57= '==' ) ( (lv_damage_58_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_59= '&' ( ( ( (lv_damagedDefined_60_0= '!' ) ) otherlv_61= 'damaged' ) | ( ( (lv_damagedDefined_62_0= 'damaged' ) ) ( (otherlv_63= '!=' ( ( (lv_damaged_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_damaged_68_0= 'true' ) ) | otherlv_69= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_70= '&' ( ( ( (lv_lefthandedDefined_71_0= '!' ) ) otherlv_72= 'lefthanded' ) | ( ( (lv_lefthandedDefined_73_0= 'lefthanded' ) ) ( (otherlv_74= '!=' ( ( (lv_lefthanded_75_0= 'false' ) ) | otherlv_76= 'true' ) ) | ( (otherlv_77= '=' | otherlv_78= '==' ) ( ( (lv_lefthanded_79_0= 'true' ) ) | otherlv_80= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_81= '&' ( (lv_pullDefined_82_0= 'pull' ) ) (otherlv_83= '=' | otherlv_84= '==' ) ( (lv_pull_85_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_86= '&' ( ( ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing' ) | ( ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_97= '&' ( (lv_timeDefined_98_0= 'time' ) ) (otherlv_99= '=' | otherlv_100= '==' ) ( (lv_time_101_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) ) ) ) ) ) )*
            {
            // InternalMcmodel.g:12938:6: ( ({...}? => ( ({...}? => (otherlv_11= '&' ( (lv_angleDefined_12_0= 'angle' ) ) (otherlv_13= '=' | otherlv_14= '==' ) ( (lv_angle_15_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= '&' ( ( ( (lv_blockingDefined_17_0= '!' ) ) otherlv_18= 'blocking' ) | ( ( (lv_blockingDefined_19_0= 'blocking' ) ) ( (otherlv_20= '!=' ( ( (lv_blocking_21_0= 'false' ) ) | otherlv_22= 'true' ) ) | ( (otherlv_23= '=' | otherlv_24= '==' ) ( ( (lv_blocking_25_0= 'true' ) ) | otherlv_26= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= '&' ( ( ( (lv_brokenDefined_28_0= '!' ) ) otherlv_29= 'broken' ) | ( ( (lv_brokenDefined_30_0= 'broken' ) ) ( (otherlv_31= '!=' ( ( (lv_broken_32_0= 'false' ) ) | otherlv_33= 'true' ) ) | ( (otherlv_34= '=' | otherlv_35= '==' ) ( ( (lv_broken_36_0= 'true' ) ) | otherlv_37= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_38= '&' ( ( ( (lv_castDefined_39_0= '!' ) ) otherlv_40= 'cast' ) | ( ( (lv_castDefined_41_0= 'cast' ) ) ( (otherlv_42= '!=' ( ( (lv_cast_43_0= 'false' ) ) | otherlv_44= 'true' ) ) | ( (otherlv_45= '=' | otherlv_46= '==' ) ( ( (lv_cast_47_0= 'true' ) ) | otherlv_48= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_49= '&' ( (lv_cooldownDefined_50_0= 'cooldown' ) ) (otherlv_51= '=' | otherlv_52= '==' ) ( (lv_cooldown_53_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_54= '&' ( (lv_damageDefined_55_0= 'damage' ) ) (otherlv_56= '=' | otherlv_57= '==' ) ( (lv_damage_58_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_59= '&' ( ( ( (lv_damagedDefined_60_0= '!' ) ) otherlv_61= 'damaged' ) | ( ( (lv_damagedDefined_62_0= 'damaged' ) ) ( (otherlv_63= '!=' ( ( (lv_damaged_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_damaged_68_0= 'true' ) ) | otherlv_69= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_70= '&' ( ( ( (lv_lefthandedDefined_71_0= '!' ) ) otherlv_72= 'lefthanded' ) | ( ( (lv_lefthandedDefined_73_0= 'lefthanded' ) ) ( (otherlv_74= '!=' ( ( (lv_lefthanded_75_0= 'false' ) ) | otherlv_76= 'true' ) ) | ( (otherlv_77= '=' | otherlv_78= '==' ) ( ( (lv_lefthanded_79_0= 'true' ) ) | otherlv_80= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_81= '&' ( (lv_pullDefined_82_0= 'pull' ) ) (otherlv_83= '=' | otherlv_84= '==' ) ( (lv_pull_85_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_86= '&' ( ( ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing' ) | ( ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_97= '&' ( (lv_timeDefined_98_0= 'time' ) ) (otherlv_99= '=' | otherlv_100= '==' ) ( (lv_time_101_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) ) ) ) ) ) )*
            loop441:
            do {
                int alt441=13;
                alt441 = dfa441.predict(input);
                switch (alt441) {
            	case 1 :
            	    // InternalMcmodel.g:12939:4: ({...}? => ( ({...}? => (otherlv_11= '&' ( (lv_angleDefined_12_0= 'angle' ) ) (otherlv_13= '=' | otherlv_14= '==' ) ( (lv_angle_15_0= RULE_PERCENTAGE ) ) ) ) ) )
            	    {
            	    // InternalMcmodel.g:12939:4: ({...}? => ( ({...}? => (otherlv_11= '&' ( (lv_angleDefined_12_0= 'angle' ) ) (otherlv_13= '=' | otherlv_14= '==' ) ( (lv_angle_15_0= RULE_PERCENTAGE ) ) ) ) ) )
            	    // InternalMcmodel.g:12940:5: {...}? => ( ({...}? => (otherlv_11= '&' ( (lv_angleDefined_12_0= 'angle' ) ) (otherlv_13= '=' | otherlv_14= '==' ) ( (lv_angle_15_0= RULE_PERCENTAGE ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_10Access().getUnorderedGroup_1(), 0) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_10", "getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_10Access().getUnorderedGroup_1(), 0)");
            	    }
            	    // InternalMcmodel.g:12940:117: ( ({...}? => (otherlv_11= '&' ( (lv_angleDefined_12_0= 'angle' ) ) (otherlv_13= '=' | otherlv_14= '==' ) ( (lv_angle_15_0= RULE_PERCENTAGE ) ) ) ) )
            	    // InternalMcmodel.g:12941:6: ({...}? => (otherlv_11= '&' ( (lv_angleDefined_12_0= 'angle' ) ) (otherlv_13= '=' | otherlv_14= '==' ) ( (lv_angle_15_0= RULE_PERCENTAGE ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getOverridePredicate_10Access().getUnorderedGroup_1(), 0);
            	    // InternalMcmodel.g:12944:9: ({...}? => (otherlv_11= '&' ( (lv_angleDefined_12_0= 'angle' ) ) (otherlv_13= '=' | otherlv_14= '==' ) ( (lv_angle_15_0= RULE_PERCENTAGE ) ) ) )
            	    // InternalMcmodel.g:12944:10: {...}? => (otherlv_11= '&' ( (lv_angleDefined_12_0= 'angle' ) ) (otherlv_13= '=' | otherlv_14= '==' ) ( (lv_angle_15_0= RULE_PERCENTAGE ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_10", "true");
            	    }
            	    // InternalMcmodel.g:12944:19: (otherlv_11= '&' ( (lv_angleDefined_12_0= 'angle' ) ) (otherlv_13= '=' | otherlv_14= '==' ) ( (lv_angle_15_0= RULE_PERCENTAGE ) ) )
            	    // InternalMcmodel.g:12944:20: otherlv_11= '&' ( (lv_angleDefined_12_0= 'angle' ) ) (otherlv_13= '=' | otherlv_14= '==' ) ( (lv_angle_15_0= RULE_PERCENTAGE ) )
            	    {
            	    otherlv_11=(Token)match(input,59,FOLLOW_58); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_11, grammarAccess.getOverridePredicate_10Access().getAmpersandKeyword_1_0_0());
            	      								
            	    }
            	    // InternalMcmodel.g:12948:9: ( (lv_angleDefined_12_0= 'angle' ) )
            	    // InternalMcmodel.g:12949:10: (lv_angleDefined_12_0= 'angle' )
            	    {
            	    // InternalMcmodel.g:12949:10: (lv_angleDefined_12_0= 'angle' )
            	    // InternalMcmodel.g:12950:11: lv_angleDefined_12_0= 'angle'
            	    {
            	    lv_angleDefined_12_0=(Token)match(input,38,FOLLOW_35); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											newLeafNode(lv_angleDefined_12_0, grammarAccess.getOverridePredicate_10Access().getAngleDefinedAngleKeyword_1_0_1_0());
            	      										
            	    }
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElement(grammarAccess.getOverridePredicate_10Rule());
            	      											}
            	      											setWithLastConsumed(current, "angleDefined", true, "angle");
            	      										
            	    }

            	    }


            	    }

            	    // InternalMcmodel.g:12962:9: (otherlv_13= '=' | otherlv_14= '==' )
            	    int alt405=2;
            	    int LA405_0 = input.LA(1);

            	    if ( (LA405_0==18) ) {
            	        alt405=1;
            	    }
            	    else if ( (LA405_0==58) ) {
            	        alt405=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 405, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt405) {
            	        case 1 :
            	            // InternalMcmodel.g:12963:10: otherlv_13= '='
            	            {
            	            otherlv_13=(Token)match(input,18,FOLLOW_36); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(otherlv_13, grammarAccess.getOverridePredicate_10Access().getEqualsSignKeyword_1_0_2_0());
            	              									
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalMcmodel.g:12968:10: otherlv_14= '=='
            	            {
            	            otherlv_14=(Token)match(input,58,FOLLOW_36); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(otherlv_14, grammarAccess.getOverridePredicate_10Access().getEqualsSignEqualsSignKeyword_1_0_2_1());
            	              									
            	            }

            	            }
            	            break;

            	    }

            	    // InternalMcmodel.g:12973:9: ( (lv_angle_15_0= RULE_PERCENTAGE ) )
            	    // InternalMcmodel.g:12974:10: (lv_angle_15_0= RULE_PERCENTAGE )
            	    {
            	    // InternalMcmodel.g:12974:10: (lv_angle_15_0= RULE_PERCENTAGE )
            	    // InternalMcmodel.g:12975:11: lv_angle_15_0= RULE_PERCENTAGE
            	    {
            	    lv_angle_15_0=(Token)match(input,RULE_PERCENTAGE,FOLLOW_37); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											newLeafNode(lv_angle_15_0, grammarAccess.getOverridePredicate_10Access().getAnglePERCENTAGETerminalRuleCall_1_0_3_0());
            	      										
            	    }
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElement(grammarAccess.getOverridePredicate_10Rule());
            	      											}
            	      											setWithLastConsumed(
            	      												current,
            	      												"angle",
            	      												lv_angle_15_0,
            	      												"com.raptor.mcmodel.Mcmodel.PERCENTAGE");
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getOverridePredicate_10Access().getUnorderedGroup_1());

            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // InternalMcmodel.g:12997:4: ({...}? => ( ({...}? => (otherlv_16= '&' ( ( ( (lv_blockingDefined_17_0= '!' ) ) otherlv_18= 'blocking' ) | ( ( (lv_blockingDefined_19_0= 'blocking' ) ) ( (otherlv_20= '!=' ( ( (lv_blocking_21_0= 'false' ) ) | otherlv_22= 'true' ) ) | ( (otherlv_23= '=' | otherlv_24= '==' ) ( ( (lv_blocking_25_0= 'true' ) ) | otherlv_26= 'false' ) ) ) ) ) ) ) ) )
            	    {
            	    // InternalMcmodel.g:12997:4: ({...}? => ( ({...}? => (otherlv_16= '&' ( ( ( (lv_blockingDefined_17_0= '!' ) ) otherlv_18= 'blocking' ) | ( ( (lv_blockingDefined_19_0= 'blocking' ) ) ( (otherlv_20= '!=' ( ( (lv_blocking_21_0= 'false' ) ) | otherlv_22= 'true' ) ) | ( (otherlv_23= '=' | otherlv_24= '==' ) ( ( (lv_blocking_25_0= 'true' ) ) | otherlv_26= 'false' ) ) ) ) ) ) ) ) )
            	    // InternalMcmodel.g:12998:5: {...}? => ( ({...}? => (otherlv_16= '&' ( ( ( (lv_blockingDefined_17_0= '!' ) ) otherlv_18= 'blocking' ) | ( ( (lv_blockingDefined_19_0= 'blocking' ) ) ( (otherlv_20= '!=' ( ( (lv_blocking_21_0= 'false' ) ) | otherlv_22= 'true' ) ) | ( (otherlv_23= '=' | otherlv_24= '==' ) ( ( (lv_blocking_25_0= 'true' ) ) | otherlv_26= 'false' ) ) ) ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_10Access().getUnorderedGroup_1(), 1) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_10", "getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_10Access().getUnorderedGroup_1(), 1)");
            	    }
            	    // InternalMcmodel.g:12998:117: ( ({...}? => (otherlv_16= '&' ( ( ( (lv_blockingDefined_17_0= '!' ) ) otherlv_18= 'blocking' ) | ( ( (lv_blockingDefined_19_0= 'blocking' ) ) ( (otherlv_20= '!=' ( ( (lv_blocking_21_0= 'false' ) ) | otherlv_22= 'true' ) ) | ( (otherlv_23= '=' | otherlv_24= '==' ) ( ( (lv_blocking_25_0= 'true' ) ) | otherlv_26= 'false' ) ) ) ) ) ) ) )
            	    // InternalMcmodel.g:12999:6: ({...}? => (otherlv_16= '&' ( ( ( (lv_blockingDefined_17_0= '!' ) ) otherlv_18= 'blocking' ) | ( ( (lv_blockingDefined_19_0= 'blocking' ) ) ( (otherlv_20= '!=' ( ( (lv_blocking_21_0= 'false' ) ) | otherlv_22= 'true' ) ) | ( (otherlv_23= '=' | otherlv_24= '==' ) ( ( (lv_blocking_25_0= 'true' ) ) | otherlv_26= 'false' ) ) ) ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getOverridePredicate_10Access().getUnorderedGroup_1(), 1);
            	    // InternalMcmodel.g:13002:9: ({...}? => (otherlv_16= '&' ( ( ( (lv_blockingDefined_17_0= '!' ) ) otherlv_18= 'blocking' ) | ( ( (lv_blockingDefined_19_0= 'blocking' ) ) ( (otherlv_20= '!=' ( ( (lv_blocking_21_0= 'false' ) ) | otherlv_22= 'true' ) ) | ( (otherlv_23= '=' | otherlv_24= '==' ) ( ( (lv_blocking_25_0= 'true' ) ) | otherlv_26= 'false' ) ) ) ) ) ) )
            	    // InternalMcmodel.g:13002:10: {...}? => (otherlv_16= '&' ( ( ( (lv_blockingDefined_17_0= '!' ) ) otherlv_18= 'blocking' ) | ( ( (lv_blockingDefined_19_0= 'blocking' ) ) ( (otherlv_20= '!=' ( ( (lv_blocking_21_0= 'false' ) ) | otherlv_22= 'true' ) ) | ( (otherlv_23= '=' | otherlv_24= '==' ) ( ( (lv_blocking_25_0= 'true' ) ) | otherlv_26= 'false' ) ) ) ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_10", "true");
            	    }
            	    // InternalMcmodel.g:13002:19: (otherlv_16= '&' ( ( ( (lv_blockingDefined_17_0= '!' ) ) otherlv_18= 'blocking' ) | ( ( (lv_blockingDefined_19_0= 'blocking' ) ) ( (otherlv_20= '!=' ( ( (lv_blocking_21_0= 'false' ) ) | otherlv_22= 'true' ) ) | ( (otherlv_23= '=' | otherlv_24= '==' ) ( ( (lv_blocking_25_0= 'true' ) ) | otherlv_26= 'false' ) ) ) ) ) )
            	    // InternalMcmodel.g:13002:20: otherlv_16= '&' ( ( ( (lv_blockingDefined_17_0= '!' ) ) otherlv_18= 'blocking' ) | ( ( (lv_blockingDefined_19_0= 'blocking' ) ) ( (otherlv_20= '!=' ( ( (lv_blocking_21_0= 'false' ) ) | otherlv_22= 'true' ) ) | ( (otherlv_23= '=' | otherlv_24= '==' ) ( ( (lv_blocking_25_0= 'true' ) ) | otherlv_26= 'false' ) ) ) ) )
            	    {
            	    otherlv_16=(Token)match(input,59,FOLLOW_38); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_16, grammarAccess.getOverridePredicate_10Access().getAmpersandKeyword_1_1_0());
            	      								
            	    }
            	    // InternalMcmodel.g:13006:9: ( ( ( (lv_blockingDefined_17_0= '!' ) ) otherlv_18= 'blocking' ) | ( ( (lv_blockingDefined_19_0= 'blocking' ) ) ( (otherlv_20= '!=' ( ( (lv_blocking_21_0= 'false' ) ) | otherlv_22= 'true' ) ) | ( (otherlv_23= '=' | otherlv_24= '==' ) ( ( (lv_blocking_25_0= 'true' ) ) | otherlv_26= 'false' ) ) ) ) )
            	    int alt410=2;
            	    int LA410_0 = input.LA(1);

            	    if ( (LA410_0==60) ) {
            	        alt410=1;
            	    }
            	    else if ( (LA410_0==61) ) {
            	        alt410=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 410, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt410) {
            	        case 1 :
            	            // InternalMcmodel.g:13007:10: ( ( (lv_blockingDefined_17_0= '!' ) ) otherlv_18= 'blocking' )
            	            {
            	            // InternalMcmodel.g:13007:10: ( ( (lv_blockingDefined_17_0= '!' ) ) otherlv_18= 'blocking' )
            	            // InternalMcmodel.g:13008:11: ( (lv_blockingDefined_17_0= '!' ) ) otherlv_18= 'blocking'
            	            {
            	            // InternalMcmodel.g:13008:11: ( (lv_blockingDefined_17_0= '!' ) )
            	            // InternalMcmodel.g:13009:12: (lv_blockingDefined_17_0= '!' )
            	            {
            	            // InternalMcmodel.g:13009:12: (lv_blockingDefined_17_0= '!' )
            	            // InternalMcmodel.g:13010:13: lv_blockingDefined_17_0= '!'
            	            {
            	            lv_blockingDefined_17_0=(Token)match(input,60,FOLLOW_39); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              													newLeafNode(lv_blockingDefined_17_0, grammarAccess.getOverridePredicate_10Access().getBlockingDefinedExclamationMarkKeyword_1_1_1_0_0_0());
            	              												
            	            }
            	            if ( state.backtracking==0 ) {

            	              													if (current==null) {
            	              														current = createModelElement(grammarAccess.getOverridePredicate_10Rule());
            	              													}
            	              													setWithLastConsumed(current, "blockingDefined", true, "!");
            	              												
            	            }

            	            }


            	            }

            	            otherlv_18=(Token)match(input,61,FOLLOW_37); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              											newLeafNode(otherlv_18, grammarAccess.getOverridePredicate_10Access().getBlockingKeyword_1_1_1_0_1());
            	              										
            	            }

            	            }


            	            }
            	            break;
            	        case 2 :
            	            // InternalMcmodel.g:13028:10: ( ( (lv_blockingDefined_19_0= 'blocking' ) ) ( (otherlv_20= '!=' ( ( (lv_blocking_21_0= 'false' ) ) | otherlv_22= 'true' ) ) | ( (otherlv_23= '=' | otherlv_24= '==' ) ( ( (lv_blocking_25_0= 'true' ) ) | otherlv_26= 'false' ) ) ) )
            	            {
            	            // InternalMcmodel.g:13028:10: ( ( (lv_blockingDefined_19_0= 'blocking' ) ) ( (otherlv_20= '!=' ( ( (lv_blocking_21_0= 'false' ) ) | otherlv_22= 'true' ) ) | ( (otherlv_23= '=' | otherlv_24= '==' ) ( ( (lv_blocking_25_0= 'true' ) ) | otherlv_26= 'false' ) ) ) )
            	            // InternalMcmodel.g:13029:11: ( (lv_blockingDefined_19_0= 'blocking' ) ) ( (otherlv_20= '!=' ( ( (lv_blocking_21_0= 'false' ) ) | otherlv_22= 'true' ) ) | ( (otherlv_23= '=' | otherlv_24= '==' ) ( ( (lv_blocking_25_0= 'true' ) ) | otherlv_26= 'false' ) ) )
            	            {
            	            // InternalMcmodel.g:13029:11: ( (lv_blockingDefined_19_0= 'blocking' ) )
            	            // InternalMcmodel.g:13030:12: (lv_blockingDefined_19_0= 'blocking' )
            	            {
            	            // InternalMcmodel.g:13030:12: (lv_blockingDefined_19_0= 'blocking' )
            	            // InternalMcmodel.g:13031:13: lv_blockingDefined_19_0= 'blocking'
            	            {
            	            lv_blockingDefined_19_0=(Token)match(input,61,FOLLOW_40); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              													newLeafNode(lv_blockingDefined_19_0, grammarAccess.getOverridePredicate_10Access().getBlockingDefinedBlockingKeyword_1_1_1_1_0_0());
            	              												
            	            }
            	            if ( state.backtracking==0 ) {

            	              													if (current==null) {
            	              														current = createModelElement(grammarAccess.getOverridePredicate_10Rule());
            	              													}
            	              													setWithLastConsumed(current, "blockingDefined", true, "blocking");
            	              												
            	            }

            	            }


            	            }

            	            // InternalMcmodel.g:13043:11: ( (otherlv_20= '!=' ( ( (lv_blocking_21_0= 'false' ) ) | otherlv_22= 'true' ) ) | ( (otherlv_23= '=' | otherlv_24= '==' ) ( ( (lv_blocking_25_0= 'true' ) ) | otherlv_26= 'false' ) ) )
            	            int alt409=2;
            	            int LA409_0 = input.LA(1);

            	            if ( (LA409_0==62) ) {
            	                alt409=1;
            	            }
            	            else if ( (LA409_0==18||LA409_0==58) ) {
            	                alt409=2;
            	            }
            	            else {
            	                if (state.backtracking>0) {state.failed=true; return current;}
            	                NoViableAltException nvae =
            	                    new NoViableAltException("", 409, 0, input);

            	                throw nvae;
            	            }
            	            switch (alt409) {
            	                case 1 :
            	                    // InternalMcmodel.g:13044:12: (otherlv_20= '!=' ( ( (lv_blocking_21_0= 'false' ) ) | otherlv_22= 'true' ) )
            	                    {
            	                    // InternalMcmodel.g:13044:12: (otherlv_20= '!=' ( ( (lv_blocking_21_0= 'false' ) ) | otherlv_22= 'true' ) )
            	                    // InternalMcmodel.g:13045:13: otherlv_20= '!=' ( ( (lv_blocking_21_0= 'false' ) ) | otherlv_22= 'true' )
            	                    {
            	                    otherlv_20=(Token)match(input,62,FOLLOW_7); if (state.failed) return current;
            	                    if ( state.backtracking==0 ) {

            	                      													newLeafNode(otherlv_20, grammarAccess.getOverridePredicate_10Access().getExclamationMarkEqualsSignKeyword_1_1_1_1_1_0_0());
            	                      												
            	                    }
            	                    // InternalMcmodel.g:13049:13: ( ( (lv_blocking_21_0= 'false' ) ) | otherlv_22= 'true' )
            	                    int alt406=2;
            	                    int LA406_0 = input.LA(1);

            	                    if ( (LA406_0==21) ) {
            	                        alt406=1;
            	                    }
            	                    else if ( (LA406_0==20) ) {
            	                        alt406=2;
            	                    }
            	                    else {
            	                        if (state.backtracking>0) {state.failed=true; return current;}
            	                        NoViableAltException nvae =
            	                            new NoViableAltException("", 406, 0, input);

            	                        throw nvae;
            	                    }
            	                    switch (alt406) {
            	                        case 1 :
            	                            // InternalMcmodel.g:13050:14: ( (lv_blocking_21_0= 'false' ) )
            	                            {
            	                            // InternalMcmodel.g:13050:14: ( (lv_blocking_21_0= 'false' ) )
            	                            // InternalMcmodel.g:13051:15: (lv_blocking_21_0= 'false' )
            	                            {
            	                            // InternalMcmodel.g:13051:15: (lv_blocking_21_0= 'false' )
            	                            // InternalMcmodel.g:13052:16: lv_blocking_21_0= 'false'
            	                            {
            	                            lv_blocking_21_0=(Token)match(input,21,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              																newLeafNode(lv_blocking_21_0, grammarAccess.getOverridePredicate_10Access().getBlockingFalseKeyword_1_1_1_1_1_0_1_0_0());
            	                              															
            	                            }
            	                            if ( state.backtracking==0 ) {

            	                              																if (current==null) {
            	                              																	current = createModelElement(grammarAccess.getOverridePredicate_10Rule());
            	                              																}
            	                              																setWithLastConsumed(current, "blocking", true, "false");
            	                              															
            	                            }

            	                            }


            	                            }


            	                            }
            	                            break;
            	                        case 2 :
            	                            // InternalMcmodel.g:13065:14: otherlv_22= 'true'
            	                            {
            	                            otherlv_22=(Token)match(input,20,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_22, grammarAccess.getOverridePredicate_10Access().getTrueKeyword_1_1_1_1_1_0_1_1());
            	                              													
            	                            }

            	                            }
            	                            break;

            	                    }


            	                    }


            	                    }
            	                    break;
            	                case 2 :
            	                    // InternalMcmodel.g:13072:12: ( (otherlv_23= '=' | otherlv_24= '==' ) ( ( (lv_blocking_25_0= 'true' ) ) | otherlv_26= 'false' ) )
            	                    {
            	                    // InternalMcmodel.g:13072:12: ( (otherlv_23= '=' | otherlv_24= '==' ) ( ( (lv_blocking_25_0= 'true' ) ) | otherlv_26= 'false' ) )
            	                    // InternalMcmodel.g:13073:13: (otherlv_23= '=' | otherlv_24= '==' ) ( ( (lv_blocking_25_0= 'true' ) ) | otherlv_26= 'false' )
            	                    {
            	                    // InternalMcmodel.g:13073:13: (otherlv_23= '=' | otherlv_24= '==' )
            	                    int alt407=2;
            	                    int LA407_0 = input.LA(1);

            	                    if ( (LA407_0==18) ) {
            	                        alt407=1;
            	                    }
            	                    else if ( (LA407_0==58) ) {
            	                        alt407=2;
            	                    }
            	                    else {
            	                        if (state.backtracking>0) {state.failed=true; return current;}
            	                        NoViableAltException nvae =
            	                            new NoViableAltException("", 407, 0, input);

            	                        throw nvae;
            	                    }
            	                    switch (alt407) {
            	                        case 1 :
            	                            // InternalMcmodel.g:13074:14: otherlv_23= '='
            	                            {
            	                            otherlv_23=(Token)match(input,18,FOLLOW_7); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_23, grammarAccess.getOverridePredicate_10Access().getEqualsSignKeyword_1_1_1_1_1_1_0_0());
            	                              													
            	                            }

            	                            }
            	                            break;
            	                        case 2 :
            	                            // InternalMcmodel.g:13079:14: otherlv_24= '=='
            	                            {
            	                            otherlv_24=(Token)match(input,58,FOLLOW_7); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_24, grammarAccess.getOverridePredicate_10Access().getEqualsSignEqualsSignKeyword_1_1_1_1_1_1_0_1());
            	                              													
            	                            }

            	                            }
            	                            break;

            	                    }

            	                    // InternalMcmodel.g:13084:13: ( ( (lv_blocking_25_0= 'true' ) ) | otherlv_26= 'false' )
            	                    int alt408=2;
            	                    int LA408_0 = input.LA(1);

            	                    if ( (LA408_0==20) ) {
            	                        alt408=1;
            	                    }
            	                    else if ( (LA408_0==21) ) {
            	                        alt408=2;
            	                    }
            	                    else {
            	                        if (state.backtracking>0) {state.failed=true; return current;}
            	                        NoViableAltException nvae =
            	                            new NoViableAltException("", 408, 0, input);

            	                        throw nvae;
            	                    }
            	                    switch (alt408) {
            	                        case 1 :
            	                            // InternalMcmodel.g:13085:14: ( (lv_blocking_25_0= 'true' ) )
            	                            {
            	                            // InternalMcmodel.g:13085:14: ( (lv_blocking_25_0= 'true' ) )
            	                            // InternalMcmodel.g:13086:15: (lv_blocking_25_0= 'true' )
            	                            {
            	                            // InternalMcmodel.g:13086:15: (lv_blocking_25_0= 'true' )
            	                            // InternalMcmodel.g:13087:16: lv_blocking_25_0= 'true'
            	                            {
            	                            lv_blocking_25_0=(Token)match(input,20,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              																newLeafNode(lv_blocking_25_0, grammarAccess.getOverridePredicate_10Access().getBlockingTrueKeyword_1_1_1_1_1_1_1_0_0());
            	                              															
            	                            }
            	                            if ( state.backtracking==0 ) {

            	                              																if (current==null) {
            	                              																	current = createModelElement(grammarAccess.getOverridePredicate_10Rule());
            	                              																}
            	                              																setWithLastConsumed(current, "blocking", true, "true");
            	                              															
            	                            }

            	                            }


            	                            }


            	                            }
            	                            break;
            	                        case 2 :
            	                            // InternalMcmodel.g:13100:14: otherlv_26= 'false'
            	                            {
            	                            otherlv_26=(Token)match(input,21,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_26, grammarAccess.getOverridePredicate_10Access().getFalseKeyword_1_1_1_1_1_1_1_1());
            	                              													
            	                            }

            	                            }
            	                            break;

            	                    }


            	                    }


            	                    }
            	                    break;

            	            }


            	            }


            	            }
            	            break;

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getOverridePredicate_10Access().getUnorderedGroup_1());

            	    }


            	    }


            	    }
            	    break;
            	case 3 :
            	    // InternalMcmodel.g:13115:4: ({...}? => ( ({...}? => (otherlv_27= '&' ( ( ( (lv_brokenDefined_28_0= '!' ) ) otherlv_29= 'broken' ) | ( ( (lv_brokenDefined_30_0= 'broken' ) ) ( (otherlv_31= '!=' ( ( (lv_broken_32_0= 'false' ) ) | otherlv_33= 'true' ) ) | ( (otherlv_34= '=' | otherlv_35= '==' ) ( ( (lv_broken_36_0= 'true' ) ) | otherlv_37= 'false' ) ) ) ) ) ) ) ) )
            	    {
            	    // InternalMcmodel.g:13115:4: ({...}? => ( ({...}? => (otherlv_27= '&' ( ( ( (lv_brokenDefined_28_0= '!' ) ) otherlv_29= 'broken' ) | ( ( (lv_brokenDefined_30_0= 'broken' ) ) ( (otherlv_31= '!=' ( ( (lv_broken_32_0= 'false' ) ) | otherlv_33= 'true' ) ) | ( (otherlv_34= '=' | otherlv_35= '==' ) ( ( (lv_broken_36_0= 'true' ) ) | otherlv_37= 'false' ) ) ) ) ) ) ) ) )
            	    // InternalMcmodel.g:13116:5: {...}? => ( ({...}? => (otherlv_27= '&' ( ( ( (lv_brokenDefined_28_0= '!' ) ) otherlv_29= 'broken' ) | ( ( (lv_brokenDefined_30_0= 'broken' ) ) ( (otherlv_31= '!=' ( ( (lv_broken_32_0= 'false' ) ) | otherlv_33= 'true' ) ) | ( (otherlv_34= '=' | otherlv_35= '==' ) ( ( (lv_broken_36_0= 'true' ) ) | otherlv_37= 'false' ) ) ) ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_10Access().getUnorderedGroup_1(), 2) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_10", "getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_10Access().getUnorderedGroup_1(), 2)");
            	    }
            	    // InternalMcmodel.g:13116:117: ( ({...}? => (otherlv_27= '&' ( ( ( (lv_brokenDefined_28_0= '!' ) ) otherlv_29= 'broken' ) | ( ( (lv_brokenDefined_30_0= 'broken' ) ) ( (otherlv_31= '!=' ( ( (lv_broken_32_0= 'false' ) ) | otherlv_33= 'true' ) ) | ( (otherlv_34= '=' | otherlv_35= '==' ) ( ( (lv_broken_36_0= 'true' ) ) | otherlv_37= 'false' ) ) ) ) ) ) ) )
            	    // InternalMcmodel.g:13117:6: ({...}? => (otherlv_27= '&' ( ( ( (lv_brokenDefined_28_0= '!' ) ) otherlv_29= 'broken' ) | ( ( (lv_brokenDefined_30_0= 'broken' ) ) ( (otherlv_31= '!=' ( ( (lv_broken_32_0= 'false' ) ) | otherlv_33= 'true' ) ) | ( (otherlv_34= '=' | otherlv_35= '==' ) ( ( (lv_broken_36_0= 'true' ) ) | otherlv_37= 'false' ) ) ) ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getOverridePredicate_10Access().getUnorderedGroup_1(), 2);
            	    // InternalMcmodel.g:13120:9: ({...}? => (otherlv_27= '&' ( ( ( (lv_brokenDefined_28_0= '!' ) ) otherlv_29= 'broken' ) | ( ( (lv_brokenDefined_30_0= 'broken' ) ) ( (otherlv_31= '!=' ( ( (lv_broken_32_0= 'false' ) ) | otherlv_33= 'true' ) ) | ( (otherlv_34= '=' | otherlv_35= '==' ) ( ( (lv_broken_36_0= 'true' ) ) | otherlv_37= 'false' ) ) ) ) ) ) )
            	    // InternalMcmodel.g:13120:10: {...}? => (otherlv_27= '&' ( ( ( (lv_brokenDefined_28_0= '!' ) ) otherlv_29= 'broken' ) | ( ( (lv_brokenDefined_30_0= 'broken' ) ) ( (otherlv_31= '!=' ( ( (lv_broken_32_0= 'false' ) ) | otherlv_33= 'true' ) ) | ( (otherlv_34= '=' | otherlv_35= '==' ) ( ( (lv_broken_36_0= 'true' ) ) | otherlv_37= 'false' ) ) ) ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_10", "true");
            	    }
            	    // InternalMcmodel.g:13120:19: (otherlv_27= '&' ( ( ( (lv_brokenDefined_28_0= '!' ) ) otherlv_29= 'broken' ) | ( ( (lv_brokenDefined_30_0= 'broken' ) ) ( (otherlv_31= '!=' ( ( (lv_broken_32_0= 'false' ) ) | otherlv_33= 'true' ) ) | ( (otherlv_34= '=' | otherlv_35= '==' ) ( ( (lv_broken_36_0= 'true' ) ) | otherlv_37= 'false' ) ) ) ) ) )
            	    // InternalMcmodel.g:13120:20: otherlv_27= '&' ( ( ( (lv_brokenDefined_28_0= '!' ) ) otherlv_29= 'broken' ) | ( ( (lv_brokenDefined_30_0= 'broken' ) ) ( (otherlv_31= '!=' ( ( (lv_broken_32_0= 'false' ) ) | otherlv_33= 'true' ) ) | ( (otherlv_34= '=' | otherlv_35= '==' ) ( ( (lv_broken_36_0= 'true' ) ) | otherlv_37= 'false' ) ) ) ) )
            	    {
            	    otherlv_27=(Token)match(input,59,FOLLOW_41); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_27, grammarAccess.getOverridePredicate_10Access().getAmpersandKeyword_1_2_0());
            	      								
            	    }
            	    // InternalMcmodel.g:13124:9: ( ( ( (lv_brokenDefined_28_0= '!' ) ) otherlv_29= 'broken' ) | ( ( (lv_brokenDefined_30_0= 'broken' ) ) ( (otherlv_31= '!=' ( ( (lv_broken_32_0= 'false' ) ) | otherlv_33= 'true' ) ) | ( (otherlv_34= '=' | otherlv_35= '==' ) ( ( (lv_broken_36_0= 'true' ) ) | otherlv_37= 'false' ) ) ) ) )
            	    int alt415=2;
            	    int LA415_0 = input.LA(1);

            	    if ( (LA415_0==60) ) {
            	        alt415=1;
            	    }
            	    else if ( (LA415_0==63) ) {
            	        alt415=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 415, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt415) {
            	        case 1 :
            	            // InternalMcmodel.g:13125:10: ( ( (lv_brokenDefined_28_0= '!' ) ) otherlv_29= 'broken' )
            	            {
            	            // InternalMcmodel.g:13125:10: ( ( (lv_brokenDefined_28_0= '!' ) ) otherlv_29= 'broken' )
            	            // InternalMcmodel.g:13126:11: ( (lv_brokenDefined_28_0= '!' ) ) otherlv_29= 'broken'
            	            {
            	            // InternalMcmodel.g:13126:11: ( (lv_brokenDefined_28_0= '!' ) )
            	            // InternalMcmodel.g:13127:12: (lv_brokenDefined_28_0= '!' )
            	            {
            	            // InternalMcmodel.g:13127:12: (lv_brokenDefined_28_0= '!' )
            	            // InternalMcmodel.g:13128:13: lv_brokenDefined_28_0= '!'
            	            {
            	            lv_brokenDefined_28_0=(Token)match(input,60,FOLLOW_42); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              													newLeafNode(lv_brokenDefined_28_0, grammarAccess.getOverridePredicate_10Access().getBrokenDefinedExclamationMarkKeyword_1_2_1_0_0_0());
            	              												
            	            }
            	            if ( state.backtracking==0 ) {

            	              													if (current==null) {
            	              														current = createModelElement(grammarAccess.getOverridePredicate_10Rule());
            	              													}
            	              													setWithLastConsumed(current, "brokenDefined", true, "!");
            	              												
            	            }

            	            }


            	            }

            	            otherlv_29=(Token)match(input,63,FOLLOW_37); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              											newLeafNode(otherlv_29, grammarAccess.getOverridePredicate_10Access().getBrokenKeyword_1_2_1_0_1());
            	              										
            	            }

            	            }


            	            }
            	            break;
            	        case 2 :
            	            // InternalMcmodel.g:13146:10: ( ( (lv_brokenDefined_30_0= 'broken' ) ) ( (otherlv_31= '!=' ( ( (lv_broken_32_0= 'false' ) ) | otherlv_33= 'true' ) ) | ( (otherlv_34= '=' | otherlv_35= '==' ) ( ( (lv_broken_36_0= 'true' ) ) | otherlv_37= 'false' ) ) ) )
            	            {
            	            // InternalMcmodel.g:13146:10: ( ( (lv_brokenDefined_30_0= 'broken' ) ) ( (otherlv_31= '!=' ( ( (lv_broken_32_0= 'false' ) ) | otherlv_33= 'true' ) ) | ( (otherlv_34= '=' | otherlv_35= '==' ) ( ( (lv_broken_36_0= 'true' ) ) | otherlv_37= 'false' ) ) ) )
            	            // InternalMcmodel.g:13147:11: ( (lv_brokenDefined_30_0= 'broken' ) ) ( (otherlv_31= '!=' ( ( (lv_broken_32_0= 'false' ) ) | otherlv_33= 'true' ) ) | ( (otherlv_34= '=' | otherlv_35= '==' ) ( ( (lv_broken_36_0= 'true' ) ) | otherlv_37= 'false' ) ) )
            	            {
            	            // InternalMcmodel.g:13147:11: ( (lv_brokenDefined_30_0= 'broken' ) )
            	            // InternalMcmodel.g:13148:12: (lv_brokenDefined_30_0= 'broken' )
            	            {
            	            // InternalMcmodel.g:13148:12: (lv_brokenDefined_30_0= 'broken' )
            	            // InternalMcmodel.g:13149:13: lv_brokenDefined_30_0= 'broken'
            	            {
            	            lv_brokenDefined_30_0=(Token)match(input,63,FOLLOW_40); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              													newLeafNode(lv_brokenDefined_30_0, grammarAccess.getOverridePredicate_10Access().getBrokenDefinedBrokenKeyword_1_2_1_1_0_0());
            	              												
            	            }
            	            if ( state.backtracking==0 ) {

            	              													if (current==null) {
            	              														current = createModelElement(grammarAccess.getOverridePredicate_10Rule());
            	              													}
            	              													setWithLastConsumed(current, "brokenDefined", true, "broken");
            	              												
            	            }

            	            }


            	            }

            	            // InternalMcmodel.g:13161:11: ( (otherlv_31= '!=' ( ( (lv_broken_32_0= 'false' ) ) | otherlv_33= 'true' ) ) | ( (otherlv_34= '=' | otherlv_35= '==' ) ( ( (lv_broken_36_0= 'true' ) ) | otherlv_37= 'false' ) ) )
            	            int alt414=2;
            	            int LA414_0 = input.LA(1);

            	            if ( (LA414_0==62) ) {
            	                alt414=1;
            	            }
            	            else if ( (LA414_0==18||LA414_0==58) ) {
            	                alt414=2;
            	            }
            	            else {
            	                if (state.backtracking>0) {state.failed=true; return current;}
            	                NoViableAltException nvae =
            	                    new NoViableAltException("", 414, 0, input);

            	                throw nvae;
            	            }
            	            switch (alt414) {
            	                case 1 :
            	                    // InternalMcmodel.g:13162:12: (otherlv_31= '!=' ( ( (lv_broken_32_0= 'false' ) ) | otherlv_33= 'true' ) )
            	                    {
            	                    // InternalMcmodel.g:13162:12: (otherlv_31= '!=' ( ( (lv_broken_32_0= 'false' ) ) | otherlv_33= 'true' ) )
            	                    // InternalMcmodel.g:13163:13: otherlv_31= '!=' ( ( (lv_broken_32_0= 'false' ) ) | otherlv_33= 'true' )
            	                    {
            	                    otherlv_31=(Token)match(input,62,FOLLOW_7); if (state.failed) return current;
            	                    if ( state.backtracking==0 ) {

            	                      													newLeafNode(otherlv_31, grammarAccess.getOverridePredicate_10Access().getExclamationMarkEqualsSignKeyword_1_2_1_1_1_0_0());
            	                      												
            	                    }
            	                    // InternalMcmodel.g:13167:13: ( ( (lv_broken_32_0= 'false' ) ) | otherlv_33= 'true' )
            	                    int alt411=2;
            	                    int LA411_0 = input.LA(1);

            	                    if ( (LA411_0==21) ) {
            	                        alt411=1;
            	                    }
            	                    else if ( (LA411_0==20) ) {
            	                        alt411=2;
            	                    }
            	                    else {
            	                        if (state.backtracking>0) {state.failed=true; return current;}
            	                        NoViableAltException nvae =
            	                            new NoViableAltException("", 411, 0, input);

            	                        throw nvae;
            	                    }
            	                    switch (alt411) {
            	                        case 1 :
            	                            // InternalMcmodel.g:13168:14: ( (lv_broken_32_0= 'false' ) )
            	                            {
            	                            // InternalMcmodel.g:13168:14: ( (lv_broken_32_0= 'false' ) )
            	                            // InternalMcmodel.g:13169:15: (lv_broken_32_0= 'false' )
            	                            {
            	                            // InternalMcmodel.g:13169:15: (lv_broken_32_0= 'false' )
            	                            // InternalMcmodel.g:13170:16: lv_broken_32_0= 'false'
            	                            {
            	                            lv_broken_32_0=(Token)match(input,21,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              																newLeafNode(lv_broken_32_0, grammarAccess.getOverridePredicate_10Access().getBrokenFalseKeyword_1_2_1_1_1_0_1_0_0());
            	                              															
            	                            }
            	                            if ( state.backtracking==0 ) {

            	                              																if (current==null) {
            	                              																	current = createModelElement(grammarAccess.getOverridePredicate_10Rule());
            	                              																}
            	                              																setWithLastConsumed(current, "broken", true, "false");
            	                              															
            	                            }

            	                            }


            	                            }


            	                            }
            	                            break;
            	                        case 2 :
            	                            // InternalMcmodel.g:13183:14: otherlv_33= 'true'
            	                            {
            	                            otherlv_33=(Token)match(input,20,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_33, grammarAccess.getOverridePredicate_10Access().getTrueKeyword_1_2_1_1_1_0_1_1());
            	                              													
            	                            }

            	                            }
            	                            break;

            	                    }


            	                    }


            	                    }
            	                    break;
            	                case 2 :
            	                    // InternalMcmodel.g:13190:12: ( (otherlv_34= '=' | otherlv_35= '==' ) ( ( (lv_broken_36_0= 'true' ) ) | otherlv_37= 'false' ) )
            	                    {
            	                    // InternalMcmodel.g:13190:12: ( (otherlv_34= '=' | otherlv_35= '==' ) ( ( (lv_broken_36_0= 'true' ) ) | otherlv_37= 'false' ) )
            	                    // InternalMcmodel.g:13191:13: (otherlv_34= '=' | otherlv_35= '==' ) ( ( (lv_broken_36_0= 'true' ) ) | otherlv_37= 'false' )
            	                    {
            	                    // InternalMcmodel.g:13191:13: (otherlv_34= '=' | otherlv_35= '==' )
            	                    int alt412=2;
            	                    int LA412_0 = input.LA(1);

            	                    if ( (LA412_0==18) ) {
            	                        alt412=1;
            	                    }
            	                    else if ( (LA412_0==58) ) {
            	                        alt412=2;
            	                    }
            	                    else {
            	                        if (state.backtracking>0) {state.failed=true; return current;}
            	                        NoViableAltException nvae =
            	                            new NoViableAltException("", 412, 0, input);

            	                        throw nvae;
            	                    }
            	                    switch (alt412) {
            	                        case 1 :
            	                            // InternalMcmodel.g:13192:14: otherlv_34= '='
            	                            {
            	                            otherlv_34=(Token)match(input,18,FOLLOW_7); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_34, grammarAccess.getOverridePredicate_10Access().getEqualsSignKeyword_1_2_1_1_1_1_0_0());
            	                              													
            	                            }

            	                            }
            	                            break;
            	                        case 2 :
            	                            // InternalMcmodel.g:13197:14: otherlv_35= '=='
            	                            {
            	                            otherlv_35=(Token)match(input,58,FOLLOW_7); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_35, grammarAccess.getOverridePredicate_10Access().getEqualsSignEqualsSignKeyword_1_2_1_1_1_1_0_1());
            	                              													
            	                            }

            	                            }
            	                            break;

            	                    }

            	                    // InternalMcmodel.g:13202:13: ( ( (lv_broken_36_0= 'true' ) ) | otherlv_37= 'false' )
            	                    int alt413=2;
            	                    int LA413_0 = input.LA(1);

            	                    if ( (LA413_0==20) ) {
            	                        alt413=1;
            	                    }
            	                    else if ( (LA413_0==21) ) {
            	                        alt413=2;
            	                    }
            	                    else {
            	                        if (state.backtracking>0) {state.failed=true; return current;}
            	                        NoViableAltException nvae =
            	                            new NoViableAltException("", 413, 0, input);

            	                        throw nvae;
            	                    }
            	                    switch (alt413) {
            	                        case 1 :
            	                            // InternalMcmodel.g:13203:14: ( (lv_broken_36_0= 'true' ) )
            	                            {
            	                            // InternalMcmodel.g:13203:14: ( (lv_broken_36_0= 'true' ) )
            	                            // InternalMcmodel.g:13204:15: (lv_broken_36_0= 'true' )
            	                            {
            	                            // InternalMcmodel.g:13204:15: (lv_broken_36_0= 'true' )
            	                            // InternalMcmodel.g:13205:16: lv_broken_36_0= 'true'
            	                            {
            	                            lv_broken_36_0=(Token)match(input,20,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              																newLeafNode(lv_broken_36_0, grammarAccess.getOverridePredicate_10Access().getBrokenTrueKeyword_1_2_1_1_1_1_1_0_0());
            	                              															
            	                            }
            	                            if ( state.backtracking==0 ) {

            	                              																if (current==null) {
            	                              																	current = createModelElement(grammarAccess.getOverridePredicate_10Rule());
            	                              																}
            	                              																setWithLastConsumed(current, "broken", true, "true");
            	                              															
            	                            }

            	                            }


            	                            }


            	                            }
            	                            break;
            	                        case 2 :
            	                            // InternalMcmodel.g:13218:14: otherlv_37= 'false'
            	                            {
            	                            otherlv_37=(Token)match(input,21,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_37, grammarAccess.getOverridePredicate_10Access().getFalseKeyword_1_2_1_1_1_1_1_1());
            	                              													
            	                            }

            	                            }
            	                            break;

            	                    }


            	                    }


            	                    }
            	                    break;

            	            }


            	            }


            	            }
            	            break;

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getOverridePredicate_10Access().getUnorderedGroup_1());

            	    }


            	    }


            	    }
            	    break;
            	case 4 :
            	    // InternalMcmodel.g:13233:4: ({...}? => ( ({...}? => (otherlv_38= '&' ( ( ( (lv_castDefined_39_0= '!' ) ) otherlv_40= 'cast' ) | ( ( (lv_castDefined_41_0= 'cast' ) ) ( (otherlv_42= '!=' ( ( (lv_cast_43_0= 'false' ) ) | otherlv_44= 'true' ) ) | ( (otherlv_45= '=' | otherlv_46= '==' ) ( ( (lv_cast_47_0= 'true' ) ) | otherlv_48= 'false' ) ) ) ) ) ) ) ) )
            	    {
            	    // InternalMcmodel.g:13233:4: ({...}? => ( ({...}? => (otherlv_38= '&' ( ( ( (lv_castDefined_39_0= '!' ) ) otherlv_40= 'cast' ) | ( ( (lv_castDefined_41_0= 'cast' ) ) ( (otherlv_42= '!=' ( ( (lv_cast_43_0= 'false' ) ) | otherlv_44= 'true' ) ) | ( (otherlv_45= '=' | otherlv_46= '==' ) ( ( (lv_cast_47_0= 'true' ) ) | otherlv_48= 'false' ) ) ) ) ) ) ) ) )
            	    // InternalMcmodel.g:13234:5: {...}? => ( ({...}? => (otherlv_38= '&' ( ( ( (lv_castDefined_39_0= '!' ) ) otherlv_40= 'cast' ) | ( ( (lv_castDefined_41_0= 'cast' ) ) ( (otherlv_42= '!=' ( ( (lv_cast_43_0= 'false' ) ) | otherlv_44= 'true' ) ) | ( (otherlv_45= '=' | otherlv_46= '==' ) ( ( (lv_cast_47_0= 'true' ) ) | otherlv_48= 'false' ) ) ) ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_10Access().getUnorderedGroup_1(), 3) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_10", "getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_10Access().getUnorderedGroup_1(), 3)");
            	    }
            	    // InternalMcmodel.g:13234:117: ( ({...}? => (otherlv_38= '&' ( ( ( (lv_castDefined_39_0= '!' ) ) otherlv_40= 'cast' ) | ( ( (lv_castDefined_41_0= 'cast' ) ) ( (otherlv_42= '!=' ( ( (lv_cast_43_0= 'false' ) ) | otherlv_44= 'true' ) ) | ( (otherlv_45= '=' | otherlv_46= '==' ) ( ( (lv_cast_47_0= 'true' ) ) | otherlv_48= 'false' ) ) ) ) ) ) ) )
            	    // InternalMcmodel.g:13235:6: ({...}? => (otherlv_38= '&' ( ( ( (lv_castDefined_39_0= '!' ) ) otherlv_40= 'cast' ) | ( ( (lv_castDefined_41_0= 'cast' ) ) ( (otherlv_42= '!=' ( ( (lv_cast_43_0= 'false' ) ) | otherlv_44= 'true' ) ) | ( (otherlv_45= '=' | otherlv_46= '==' ) ( ( (lv_cast_47_0= 'true' ) ) | otherlv_48= 'false' ) ) ) ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getOverridePredicate_10Access().getUnorderedGroup_1(), 3);
            	    // InternalMcmodel.g:13238:9: ({...}? => (otherlv_38= '&' ( ( ( (lv_castDefined_39_0= '!' ) ) otherlv_40= 'cast' ) | ( ( (lv_castDefined_41_0= 'cast' ) ) ( (otherlv_42= '!=' ( ( (lv_cast_43_0= 'false' ) ) | otherlv_44= 'true' ) ) | ( (otherlv_45= '=' | otherlv_46= '==' ) ( ( (lv_cast_47_0= 'true' ) ) | otherlv_48= 'false' ) ) ) ) ) ) )
            	    // InternalMcmodel.g:13238:10: {...}? => (otherlv_38= '&' ( ( ( (lv_castDefined_39_0= '!' ) ) otherlv_40= 'cast' ) | ( ( (lv_castDefined_41_0= 'cast' ) ) ( (otherlv_42= '!=' ( ( (lv_cast_43_0= 'false' ) ) | otherlv_44= 'true' ) ) | ( (otherlv_45= '=' | otherlv_46= '==' ) ( ( (lv_cast_47_0= 'true' ) ) | otherlv_48= 'false' ) ) ) ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_10", "true");
            	    }
            	    // InternalMcmodel.g:13238:19: (otherlv_38= '&' ( ( ( (lv_castDefined_39_0= '!' ) ) otherlv_40= 'cast' ) | ( ( (lv_castDefined_41_0= 'cast' ) ) ( (otherlv_42= '!=' ( ( (lv_cast_43_0= 'false' ) ) | otherlv_44= 'true' ) ) | ( (otherlv_45= '=' | otherlv_46= '==' ) ( ( (lv_cast_47_0= 'true' ) ) | otherlv_48= 'false' ) ) ) ) ) )
            	    // InternalMcmodel.g:13238:20: otherlv_38= '&' ( ( ( (lv_castDefined_39_0= '!' ) ) otherlv_40= 'cast' ) | ( ( (lv_castDefined_41_0= 'cast' ) ) ( (otherlv_42= '!=' ( ( (lv_cast_43_0= 'false' ) ) | otherlv_44= 'true' ) ) | ( (otherlv_45= '=' | otherlv_46= '==' ) ( ( (lv_cast_47_0= 'true' ) ) | otherlv_48= 'false' ) ) ) ) )
            	    {
            	    otherlv_38=(Token)match(input,59,FOLLOW_43); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_38, grammarAccess.getOverridePredicate_10Access().getAmpersandKeyword_1_3_0());
            	      								
            	    }
            	    // InternalMcmodel.g:13242:9: ( ( ( (lv_castDefined_39_0= '!' ) ) otherlv_40= 'cast' ) | ( ( (lv_castDefined_41_0= 'cast' ) ) ( (otherlv_42= '!=' ( ( (lv_cast_43_0= 'false' ) ) | otherlv_44= 'true' ) ) | ( (otherlv_45= '=' | otherlv_46= '==' ) ( ( (lv_cast_47_0= 'true' ) ) | otherlv_48= 'false' ) ) ) ) )
            	    int alt420=2;
            	    int LA420_0 = input.LA(1);

            	    if ( (LA420_0==60) ) {
            	        alt420=1;
            	    }
            	    else if ( (LA420_0==64) ) {
            	        alt420=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 420, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt420) {
            	        case 1 :
            	            // InternalMcmodel.g:13243:10: ( ( (lv_castDefined_39_0= '!' ) ) otherlv_40= 'cast' )
            	            {
            	            // InternalMcmodel.g:13243:10: ( ( (lv_castDefined_39_0= '!' ) ) otherlv_40= 'cast' )
            	            // InternalMcmodel.g:13244:11: ( (lv_castDefined_39_0= '!' ) ) otherlv_40= 'cast'
            	            {
            	            // InternalMcmodel.g:13244:11: ( (lv_castDefined_39_0= '!' ) )
            	            // InternalMcmodel.g:13245:12: (lv_castDefined_39_0= '!' )
            	            {
            	            // InternalMcmodel.g:13245:12: (lv_castDefined_39_0= '!' )
            	            // InternalMcmodel.g:13246:13: lv_castDefined_39_0= '!'
            	            {
            	            lv_castDefined_39_0=(Token)match(input,60,FOLLOW_44); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              													newLeafNode(lv_castDefined_39_0, grammarAccess.getOverridePredicate_10Access().getCastDefinedExclamationMarkKeyword_1_3_1_0_0_0());
            	              												
            	            }
            	            if ( state.backtracking==0 ) {

            	              													if (current==null) {
            	              														current = createModelElement(grammarAccess.getOverridePredicate_10Rule());
            	              													}
            	              													setWithLastConsumed(current, "castDefined", true, "!");
            	              												
            	            }

            	            }


            	            }

            	            otherlv_40=(Token)match(input,64,FOLLOW_37); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              											newLeafNode(otherlv_40, grammarAccess.getOverridePredicate_10Access().getCastKeyword_1_3_1_0_1());
            	              										
            	            }

            	            }


            	            }
            	            break;
            	        case 2 :
            	            // InternalMcmodel.g:13264:10: ( ( (lv_castDefined_41_0= 'cast' ) ) ( (otherlv_42= '!=' ( ( (lv_cast_43_0= 'false' ) ) | otherlv_44= 'true' ) ) | ( (otherlv_45= '=' | otherlv_46= '==' ) ( ( (lv_cast_47_0= 'true' ) ) | otherlv_48= 'false' ) ) ) )
            	            {
            	            // InternalMcmodel.g:13264:10: ( ( (lv_castDefined_41_0= 'cast' ) ) ( (otherlv_42= '!=' ( ( (lv_cast_43_0= 'false' ) ) | otherlv_44= 'true' ) ) | ( (otherlv_45= '=' | otherlv_46= '==' ) ( ( (lv_cast_47_0= 'true' ) ) | otherlv_48= 'false' ) ) ) )
            	            // InternalMcmodel.g:13265:11: ( (lv_castDefined_41_0= 'cast' ) ) ( (otherlv_42= '!=' ( ( (lv_cast_43_0= 'false' ) ) | otherlv_44= 'true' ) ) | ( (otherlv_45= '=' | otherlv_46= '==' ) ( ( (lv_cast_47_0= 'true' ) ) | otherlv_48= 'false' ) ) )
            	            {
            	            // InternalMcmodel.g:13265:11: ( (lv_castDefined_41_0= 'cast' ) )
            	            // InternalMcmodel.g:13266:12: (lv_castDefined_41_0= 'cast' )
            	            {
            	            // InternalMcmodel.g:13266:12: (lv_castDefined_41_0= 'cast' )
            	            // InternalMcmodel.g:13267:13: lv_castDefined_41_0= 'cast'
            	            {
            	            lv_castDefined_41_0=(Token)match(input,64,FOLLOW_40); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              													newLeafNode(lv_castDefined_41_0, grammarAccess.getOverridePredicate_10Access().getCastDefinedCastKeyword_1_3_1_1_0_0());
            	              												
            	            }
            	            if ( state.backtracking==0 ) {

            	              													if (current==null) {
            	              														current = createModelElement(grammarAccess.getOverridePredicate_10Rule());
            	              													}
            	              													setWithLastConsumed(current, "castDefined", true, "cast");
            	              												
            	            }

            	            }


            	            }

            	            // InternalMcmodel.g:13279:11: ( (otherlv_42= '!=' ( ( (lv_cast_43_0= 'false' ) ) | otherlv_44= 'true' ) ) | ( (otherlv_45= '=' | otherlv_46= '==' ) ( ( (lv_cast_47_0= 'true' ) ) | otherlv_48= 'false' ) ) )
            	            int alt419=2;
            	            int LA419_0 = input.LA(1);

            	            if ( (LA419_0==62) ) {
            	                alt419=1;
            	            }
            	            else if ( (LA419_0==18||LA419_0==58) ) {
            	                alt419=2;
            	            }
            	            else {
            	                if (state.backtracking>0) {state.failed=true; return current;}
            	                NoViableAltException nvae =
            	                    new NoViableAltException("", 419, 0, input);

            	                throw nvae;
            	            }
            	            switch (alt419) {
            	                case 1 :
            	                    // InternalMcmodel.g:13280:12: (otherlv_42= '!=' ( ( (lv_cast_43_0= 'false' ) ) | otherlv_44= 'true' ) )
            	                    {
            	                    // InternalMcmodel.g:13280:12: (otherlv_42= '!=' ( ( (lv_cast_43_0= 'false' ) ) | otherlv_44= 'true' ) )
            	                    // InternalMcmodel.g:13281:13: otherlv_42= '!=' ( ( (lv_cast_43_0= 'false' ) ) | otherlv_44= 'true' )
            	                    {
            	                    otherlv_42=(Token)match(input,62,FOLLOW_7); if (state.failed) return current;
            	                    if ( state.backtracking==0 ) {

            	                      													newLeafNode(otherlv_42, grammarAccess.getOverridePredicate_10Access().getExclamationMarkEqualsSignKeyword_1_3_1_1_1_0_0());
            	                      												
            	                    }
            	                    // InternalMcmodel.g:13285:13: ( ( (lv_cast_43_0= 'false' ) ) | otherlv_44= 'true' )
            	                    int alt416=2;
            	                    int LA416_0 = input.LA(1);

            	                    if ( (LA416_0==21) ) {
            	                        alt416=1;
            	                    }
            	                    else if ( (LA416_0==20) ) {
            	                        alt416=2;
            	                    }
            	                    else {
            	                        if (state.backtracking>0) {state.failed=true; return current;}
            	                        NoViableAltException nvae =
            	                            new NoViableAltException("", 416, 0, input);

            	                        throw nvae;
            	                    }
            	                    switch (alt416) {
            	                        case 1 :
            	                            // InternalMcmodel.g:13286:14: ( (lv_cast_43_0= 'false' ) )
            	                            {
            	                            // InternalMcmodel.g:13286:14: ( (lv_cast_43_0= 'false' ) )
            	                            // InternalMcmodel.g:13287:15: (lv_cast_43_0= 'false' )
            	                            {
            	                            // InternalMcmodel.g:13287:15: (lv_cast_43_0= 'false' )
            	                            // InternalMcmodel.g:13288:16: lv_cast_43_0= 'false'
            	                            {
            	                            lv_cast_43_0=(Token)match(input,21,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              																newLeafNode(lv_cast_43_0, grammarAccess.getOverridePredicate_10Access().getCastFalseKeyword_1_3_1_1_1_0_1_0_0());
            	                              															
            	                            }
            	                            if ( state.backtracking==0 ) {

            	                              																if (current==null) {
            	                              																	current = createModelElement(grammarAccess.getOverridePredicate_10Rule());
            	                              																}
            	                              																setWithLastConsumed(current, "cast", true, "false");
            	                              															
            	                            }

            	                            }


            	                            }


            	                            }
            	                            break;
            	                        case 2 :
            	                            // InternalMcmodel.g:13301:14: otherlv_44= 'true'
            	                            {
            	                            otherlv_44=(Token)match(input,20,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_44, grammarAccess.getOverridePredicate_10Access().getTrueKeyword_1_3_1_1_1_0_1_1());
            	                              													
            	                            }

            	                            }
            	                            break;

            	                    }


            	                    }


            	                    }
            	                    break;
            	                case 2 :
            	                    // InternalMcmodel.g:13308:12: ( (otherlv_45= '=' | otherlv_46= '==' ) ( ( (lv_cast_47_0= 'true' ) ) | otherlv_48= 'false' ) )
            	                    {
            	                    // InternalMcmodel.g:13308:12: ( (otherlv_45= '=' | otherlv_46= '==' ) ( ( (lv_cast_47_0= 'true' ) ) | otherlv_48= 'false' ) )
            	                    // InternalMcmodel.g:13309:13: (otherlv_45= '=' | otherlv_46= '==' ) ( ( (lv_cast_47_0= 'true' ) ) | otherlv_48= 'false' )
            	                    {
            	                    // InternalMcmodel.g:13309:13: (otherlv_45= '=' | otherlv_46= '==' )
            	                    int alt417=2;
            	                    int LA417_0 = input.LA(1);

            	                    if ( (LA417_0==18) ) {
            	                        alt417=1;
            	                    }
            	                    else if ( (LA417_0==58) ) {
            	                        alt417=2;
            	                    }
            	                    else {
            	                        if (state.backtracking>0) {state.failed=true; return current;}
            	                        NoViableAltException nvae =
            	                            new NoViableAltException("", 417, 0, input);

            	                        throw nvae;
            	                    }
            	                    switch (alt417) {
            	                        case 1 :
            	                            // InternalMcmodel.g:13310:14: otherlv_45= '='
            	                            {
            	                            otherlv_45=(Token)match(input,18,FOLLOW_7); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_45, grammarAccess.getOverridePredicate_10Access().getEqualsSignKeyword_1_3_1_1_1_1_0_0());
            	                              													
            	                            }

            	                            }
            	                            break;
            	                        case 2 :
            	                            // InternalMcmodel.g:13315:14: otherlv_46= '=='
            	                            {
            	                            otherlv_46=(Token)match(input,58,FOLLOW_7); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_46, grammarAccess.getOverridePredicate_10Access().getEqualsSignEqualsSignKeyword_1_3_1_1_1_1_0_1());
            	                              													
            	                            }

            	                            }
            	                            break;

            	                    }

            	                    // InternalMcmodel.g:13320:13: ( ( (lv_cast_47_0= 'true' ) ) | otherlv_48= 'false' )
            	                    int alt418=2;
            	                    int LA418_0 = input.LA(1);

            	                    if ( (LA418_0==20) ) {
            	                        alt418=1;
            	                    }
            	                    else if ( (LA418_0==21) ) {
            	                        alt418=2;
            	                    }
            	                    else {
            	                        if (state.backtracking>0) {state.failed=true; return current;}
            	                        NoViableAltException nvae =
            	                            new NoViableAltException("", 418, 0, input);

            	                        throw nvae;
            	                    }
            	                    switch (alt418) {
            	                        case 1 :
            	                            // InternalMcmodel.g:13321:14: ( (lv_cast_47_0= 'true' ) )
            	                            {
            	                            // InternalMcmodel.g:13321:14: ( (lv_cast_47_0= 'true' ) )
            	                            // InternalMcmodel.g:13322:15: (lv_cast_47_0= 'true' )
            	                            {
            	                            // InternalMcmodel.g:13322:15: (lv_cast_47_0= 'true' )
            	                            // InternalMcmodel.g:13323:16: lv_cast_47_0= 'true'
            	                            {
            	                            lv_cast_47_0=(Token)match(input,20,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              																newLeafNode(lv_cast_47_0, grammarAccess.getOverridePredicate_10Access().getCastTrueKeyword_1_3_1_1_1_1_1_0_0());
            	                              															
            	                            }
            	                            if ( state.backtracking==0 ) {

            	                              																if (current==null) {
            	                              																	current = createModelElement(grammarAccess.getOverridePredicate_10Rule());
            	                              																}
            	                              																setWithLastConsumed(current, "cast", true, "true");
            	                              															
            	                            }

            	                            }


            	                            }


            	                            }
            	                            break;
            	                        case 2 :
            	                            // InternalMcmodel.g:13336:14: otherlv_48= 'false'
            	                            {
            	                            otherlv_48=(Token)match(input,21,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_48, grammarAccess.getOverridePredicate_10Access().getFalseKeyword_1_3_1_1_1_1_1_1());
            	                              													
            	                            }

            	                            }
            	                            break;

            	                    }


            	                    }


            	                    }
            	                    break;

            	            }


            	            }


            	            }
            	            break;

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getOverridePredicate_10Access().getUnorderedGroup_1());

            	    }


            	    }


            	    }
            	    break;
            	case 5 :
            	    // InternalMcmodel.g:13351:4: ({...}? => ( ({...}? => (otherlv_49= '&' ( (lv_cooldownDefined_50_0= 'cooldown' ) ) (otherlv_51= '=' | otherlv_52= '==' ) ( (lv_cooldown_53_0= RULE_PERCENTAGE ) ) ) ) ) )
            	    {
            	    // InternalMcmodel.g:13351:4: ({...}? => ( ({...}? => (otherlv_49= '&' ( (lv_cooldownDefined_50_0= 'cooldown' ) ) (otherlv_51= '=' | otherlv_52= '==' ) ( (lv_cooldown_53_0= RULE_PERCENTAGE ) ) ) ) ) )
            	    // InternalMcmodel.g:13352:5: {...}? => ( ({...}? => (otherlv_49= '&' ( (lv_cooldownDefined_50_0= 'cooldown' ) ) (otherlv_51= '=' | otherlv_52= '==' ) ( (lv_cooldown_53_0= RULE_PERCENTAGE ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_10Access().getUnorderedGroup_1(), 4) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_10", "getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_10Access().getUnorderedGroup_1(), 4)");
            	    }
            	    // InternalMcmodel.g:13352:117: ( ({...}? => (otherlv_49= '&' ( (lv_cooldownDefined_50_0= 'cooldown' ) ) (otherlv_51= '=' | otherlv_52= '==' ) ( (lv_cooldown_53_0= RULE_PERCENTAGE ) ) ) ) )
            	    // InternalMcmodel.g:13353:6: ({...}? => (otherlv_49= '&' ( (lv_cooldownDefined_50_0= 'cooldown' ) ) (otherlv_51= '=' | otherlv_52= '==' ) ( (lv_cooldown_53_0= RULE_PERCENTAGE ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getOverridePredicate_10Access().getUnorderedGroup_1(), 4);
            	    // InternalMcmodel.g:13356:9: ({...}? => (otherlv_49= '&' ( (lv_cooldownDefined_50_0= 'cooldown' ) ) (otherlv_51= '=' | otherlv_52= '==' ) ( (lv_cooldown_53_0= RULE_PERCENTAGE ) ) ) )
            	    // InternalMcmodel.g:13356:10: {...}? => (otherlv_49= '&' ( (lv_cooldownDefined_50_0= 'cooldown' ) ) (otherlv_51= '=' | otherlv_52= '==' ) ( (lv_cooldown_53_0= RULE_PERCENTAGE ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_10", "true");
            	    }
            	    // InternalMcmodel.g:13356:19: (otherlv_49= '&' ( (lv_cooldownDefined_50_0= 'cooldown' ) ) (otherlv_51= '=' | otherlv_52= '==' ) ( (lv_cooldown_53_0= RULE_PERCENTAGE ) ) )
            	    // InternalMcmodel.g:13356:20: otherlv_49= '&' ( (lv_cooldownDefined_50_0= 'cooldown' ) ) (otherlv_51= '=' | otherlv_52= '==' ) ( (lv_cooldown_53_0= RULE_PERCENTAGE ) )
            	    {
            	    otherlv_49=(Token)match(input,59,FOLLOW_45); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_49, grammarAccess.getOverridePredicate_10Access().getAmpersandKeyword_1_4_0());
            	      								
            	    }
            	    // InternalMcmodel.g:13360:9: ( (lv_cooldownDefined_50_0= 'cooldown' ) )
            	    // InternalMcmodel.g:13361:10: (lv_cooldownDefined_50_0= 'cooldown' )
            	    {
            	    // InternalMcmodel.g:13361:10: (lv_cooldownDefined_50_0= 'cooldown' )
            	    // InternalMcmodel.g:13362:11: lv_cooldownDefined_50_0= 'cooldown'
            	    {
            	    lv_cooldownDefined_50_0=(Token)match(input,65,FOLLOW_35); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											newLeafNode(lv_cooldownDefined_50_0, grammarAccess.getOverridePredicate_10Access().getCooldownDefinedCooldownKeyword_1_4_1_0());
            	      										
            	    }
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElement(grammarAccess.getOverridePredicate_10Rule());
            	      											}
            	      											setWithLastConsumed(current, "cooldownDefined", true, "cooldown");
            	      										
            	    }

            	    }


            	    }

            	    // InternalMcmodel.g:13374:9: (otherlv_51= '=' | otherlv_52= '==' )
            	    int alt421=2;
            	    int LA421_0 = input.LA(1);

            	    if ( (LA421_0==18) ) {
            	        alt421=1;
            	    }
            	    else if ( (LA421_0==58) ) {
            	        alt421=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 421, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt421) {
            	        case 1 :
            	            // InternalMcmodel.g:13375:10: otherlv_51= '='
            	            {
            	            otherlv_51=(Token)match(input,18,FOLLOW_36); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(otherlv_51, grammarAccess.getOverridePredicate_10Access().getEqualsSignKeyword_1_4_2_0());
            	              									
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalMcmodel.g:13380:10: otherlv_52= '=='
            	            {
            	            otherlv_52=(Token)match(input,58,FOLLOW_36); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(otherlv_52, grammarAccess.getOverridePredicate_10Access().getEqualsSignEqualsSignKeyword_1_4_2_1());
            	              									
            	            }

            	            }
            	            break;

            	    }

            	    // InternalMcmodel.g:13385:9: ( (lv_cooldown_53_0= RULE_PERCENTAGE ) )
            	    // InternalMcmodel.g:13386:10: (lv_cooldown_53_0= RULE_PERCENTAGE )
            	    {
            	    // InternalMcmodel.g:13386:10: (lv_cooldown_53_0= RULE_PERCENTAGE )
            	    // InternalMcmodel.g:13387:11: lv_cooldown_53_0= RULE_PERCENTAGE
            	    {
            	    lv_cooldown_53_0=(Token)match(input,RULE_PERCENTAGE,FOLLOW_37); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											newLeafNode(lv_cooldown_53_0, grammarAccess.getOverridePredicate_10Access().getCooldownPERCENTAGETerminalRuleCall_1_4_3_0());
            	      										
            	    }
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElement(grammarAccess.getOverridePredicate_10Rule());
            	      											}
            	      											setWithLastConsumed(
            	      												current,
            	      												"cooldown",
            	      												lv_cooldown_53_0,
            	      												"com.raptor.mcmodel.Mcmodel.PERCENTAGE");
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getOverridePredicate_10Access().getUnorderedGroup_1());

            	    }


            	    }


            	    }
            	    break;
            	case 6 :
            	    // InternalMcmodel.g:13409:4: ({...}? => ( ({...}? => (otherlv_54= '&' ( (lv_damageDefined_55_0= 'damage' ) ) (otherlv_56= '=' | otherlv_57= '==' ) ( (lv_damage_58_0= RULE_PERCENTAGE ) ) ) ) ) )
            	    {
            	    // InternalMcmodel.g:13409:4: ({...}? => ( ({...}? => (otherlv_54= '&' ( (lv_damageDefined_55_0= 'damage' ) ) (otherlv_56= '=' | otherlv_57= '==' ) ( (lv_damage_58_0= RULE_PERCENTAGE ) ) ) ) ) )
            	    // InternalMcmodel.g:13410:5: {...}? => ( ({...}? => (otherlv_54= '&' ( (lv_damageDefined_55_0= 'damage' ) ) (otherlv_56= '=' | otherlv_57= '==' ) ( (lv_damage_58_0= RULE_PERCENTAGE ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_10Access().getUnorderedGroup_1(), 5) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_10", "getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_10Access().getUnorderedGroup_1(), 5)");
            	    }
            	    // InternalMcmodel.g:13410:117: ( ({...}? => (otherlv_54= '&' ( (lv_damageDefined_55_0= 'damage' ) ) (otherlv_56= '=' | otherlv_57= '==' ) ( (lv_damage_58_0= RULE_PERCENTAGE ) ) ) ) )
            	    // InternalMcmodel.g:13411:6: ({...}? => (otherlv_54= '&' ( (lv_damageDefined_55_0= 'damage' ) ) (otherlv_56= '=' | otherlv_57= '==' ) ( (lv_damage_58_0= RULE_PERCENTAGE ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getOverridePredicate_10Access().getUnorderedGroup_1(), 5);
            	    // InternalMcmodel.g:13414:9: ({...}? => (otherlv_54= '&' ( (lv_damageDefined_55_0= 'damage' ) ) (otherlv_56= '=' | otherlv_57= '==' ) ( (lv_damage_58_0= RULE_PERCENTAGE ) ) ) )
            	    // InternalMcmodel.g:13414:10: {...}? => (otherlv_54= '&' ( (lv_damageDefined_55_0= 'damage' ) ) (otherlv_56= '=' | otherlv_57= '==' ) ( (lv_damage_58_0= RULE_PERCENTAGE ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_10", "true");
            	    }
            	    // InternalMcmodel.g:13414:19: (otherlv_54= '&' ( (lv_damageDefined_55_0= 'damage' ) ) (otherlv_56= '=' | otherlv_57= '==' ) ( (lv_damage_58_0= RULE_PERCENTAGE ) ) )
            	    // InternalMcmodel.g:13414:20: otherlv_54= '&' ( (lv_damageDefined_55_0= 'damage' ) ) (otherlv_56= '=' | otherlv_57= '==' ) ( (lv_damage_58_0= RULE_PERCENTAGE ) )
            	    {
            	    otherlv_54=(Token)match(input,59,FOLLOW_46); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_54, grammarAccess.getOverridePredicate_10Access().getAmpersandKeyword_1_5_0());
            	      								
            	    }
            	    // InternalMcmodel.g:13418:9: ( (lv_damageDefined_55_0= 'damage' ) )
            	    // InternalMcmodel.g:13419:10: (lv_damageDefined_55_0= 'damage' )
            	    {
            	    // InternalMcmodel.g:13419:10: (lv_damageDefined_55_0= 'damage' )
            	    // InternalMcmodel.g:13420:11: lv_damageDefined_55_0= 'damage'
            	    {
            	    lv_damageDefined_55_0=(Token)match(input,66,FOLLOW_35); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											newLeafNode(lv_damageDefined_55_0, grammarAccess.getOverridePredicate_10Access().getDamageDefinedDamageKeyword_1_5_1_0());
            	      										
            	    }
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElement(grammarAccess.getOverridePredicate_10Rule());
            	      											}
            	      											setWithLastConsumed(current, "damageDefined", true, "damage");
            	      										
            	    }

            	    }


            	    }

            	    // InternalMcmodel.g:13432:9: (otherlv_56= '=' | otherlv_57= '==' )
            	    int alt422=2;
            	    int LA422_0 = input.LA(1);

            	    if ( (LA422_0==18) ) {
            	        alt422=1;
            	    }
            	    else if ( (LA422_0==58) ) {
            	        alt422=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 422, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt422) {
            	        case 1 :
            	            // InternalMcmodel.g:13433:10: otherlv_56= '='
            	            {
            	            otherlv_56=(Token)match(input,18,FOLLOW_36); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(otherlv_56, grammarAccess.getOverridePredicate_10Access().getEqualsSignKeyword_1_5_2_0());
            	              									
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalMcmodel.g:13438:10: otherlv_57= '=='
            	            {
            	            otherlv_57=(Token)match(input,58,FOLLOW_36); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(otherlv_57, grammarAccess.getOverridePredicate_10Access().getEqualsSignEqualsSignKeyword_1_5_2_1());
            	              									
            	            }

            	            }
            	            break;

            	    }

            	    // InternalMcmodel.g:13443:9: ( (lv_damage_58_0= RULE_PERCENTAGE ) )
            	    // InternalMcmodel.g:13444:10: (lv_damage_58_0= RULE_PERCENTAGE )
            	    {
            	    // InternalMcmodel.g:13444:10: (lv_damage_58_0= RULE_PERCENTAGE )
            	    // InternalMcmodel.g:13445:11: lv_damage_58_0= RULE_PERCENTAGE
            	    {
            	    lv_damage_58_0=(Token)match(input,RULE_PERCENTAGE,FOLLOW_37); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											newLeafNode(lv_damage_58_0, grammarAccess.getOverridePredicate_10Access().getDamagePERCENTAGETerminalRuleCall_1_5_3_0());
            	      										
            	    }
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElement(grammarAccess.getOverridePredicate_10Rule());
            	      											}
            	      											setWithLastConsumed(
            	      												current,
            	      												"damage",
            	      												lv_damage_58_0,
            	      												"com.raptor.mcmodel.Mcmodel.PERCENTAGE");
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getOverridePredicate_10Access().getUnorderedGroup_1());

            	    }


            	    }


            	    }
            	    break;
            	case 7 :
            	    // InternalMcmodel.g:13467:4: ({...}? => ( ({...}? => (otherlv_59= '&' ( ( ( (lv_damagedDefined_60_0= '!' ) ) otherlv_61= 'damaged' ) | ( ( (lv_damagedDefined_62_0= 'damaged' ) ) ( (otherlv_63= '!=' ( ( (lv_damaged_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_damaged_68_0= 'true' ) ) | otherlv_69= 'false' ) ) ) ) ) ) ) ) )
            	    {
            	    // InternalMcmodel.g:13467:4: ({...}? => ( ({...}? => (otherlv_59= '&' ( ( ( (lv_damagedDefined_60_0= '!' ) ) otherlv_61= 'damaged' ) | ( ( (lv_damagedDefined_62_0= 'damaged' ) ) ( (otherlv_63= '!=' ( ( (lv_damaged_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_damaged_68_0= 'true' ) ) | otherlv_69= 'false' ) ) ) ) ) ) ) ) )
            	    // InternalMcmodel.g:13468:5: {...}? => ( ({...}? => (otherlv_59= '&' ( ( ( (lv_damagedDefined_60_0= '!' ) ) otherlv_61= 'damaged' ) | ( ( (lv_damagedDefined_62_0= 'damaged' ) ) ( (otherlv_63= '!=' ( ( (lv_damaged_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_damaged_68_0= 'true' ) ) | otherlv_69= 'false' ) ) ) ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_10Access().getUnorderedGroup_1(), 6) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_10", "getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_10Access().getUnorderedGroup_1(), 6)");
            	    }
            	    // InternalMcmodel.g:13468:117: ( ({...}? => (otherlv_59= '&' ( ( ( (lv_damagedDefined_60_0= '!' ) ) otherlv_61= 'damaged' ) | ( ( (lv_damagedDefined_62_0= 'damaged' ) ) ( (otherlv_63= '!=' ( ( (lv_damaged_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_damaged_68_0= 'true' ) ) | otherlv_69= 'false' ) ) ) ) ) ) ) )
            	    // InternalMcmodel.g:13469:6: ({...}? => (otherlv_59= '&' ( ( ( (lv_damagedDefined_60_0= '!' ) ) otherlv_61= 'damaged' ) | ( ( (lv_damagedDefined_62_0= 'damaged' ) ) ( (otherlv_63= '!=' ( ( (lv_damaged_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_damaged_68_0= 'true' ) ) | otherlv_69= 'false' ) ) ) ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getOverridePredicate_10Access().getUnorderedGroup_1(), 6);
            	    // InternalMcmodel.g:13472:9: ({...}? => (otherlv_59= '&' ( ( ( (lv_damagedDefined_60_0= '!' ) ) otherlv_61= 'damaged' ) | ( ( (lv_damagedDefined_62_0= 'damaged' ) ) ( (otherlv_63= '!=' ( ( (lv_damaged_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_damaged_68_0= 'true' ) ) | otherlv_69= 'false' ) ) ) ) ) ) )
            	    // InternalMcmodel.g:13472:10: {...}? => (otherlv_59= '&' ( ( ( (lv_damagedDefined_60_0= '!' ) ) otherlv_61= 'damaged' ) | ( ( (lv_damagedDefined_62_0= 'damaged' ) ) ( (otherlv_63= '!=' ( ( (lv_damaged_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_damaged_68_0= 'true' ) ) | otherlv_69= 'false' ) ) ) ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_10", "true");
            	    }
            	    // InternalMcmodel.g:13472:19: (otherlv_59= '&' ( ( ( (lv_damagedDefined_60_0= '!' ) ) otherlv_61= 'damaged' ) | ( ( (lv_damagedDefined_62_0= 'damaged' ) ) ( (otherlv_63= '!=' ( ( (lv_damaged_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_damaged_68_0= 'true' ) ) | otherlv_69= 'false' ) ) ) ) ) )
            	    // InternalMcmodel.g:13472:20: otherlv_59= '&' ( ( ( (lv_damagedDefined_60_0= '!' ) ) otherlv_61= 'damaged' ) | ( ( (lv_damagedDefined_62_0= 'damaged' ) ) ( (otherlv_63= '!=' ( ( (lv_damaged_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_damaged_68_0= 'true' ) ) | otherlv_69= 'false' ) ) ) ) )
            	    {
            	    otherlv_59=(Token)match(input,59,FOLLOW_47); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_59, grammarAccess.getOverridePredicate_10Access().getAmpersandKeyword_1_6_0());
            	      								
            	    }
            	    // InternalMcmodel.g:13476:9: ( ( ( (lv_damagedDefined_60_0= '!' ) ) otherlv_61= 'damaged' ) | ( ( (lv_damagedDefined_62_0= 'damaged' ) ) ( (otherlv_63= '!=' ( ( (lv_damaged_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_damaged_68_0= 'true' ) ) | otherlv_69= 'false' ) ) ) ) )
            	    int alt427=2;
            	    int LA427_0 = input.LA(1);

            	    if ( (LA427_0==60) ) {
            	        alt427=1;
            	    }
            	    else if ( (LA427_0==67) ) {
            	        alt427=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 427, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt427) {
            	        case 1 :
            	            // InternalMcmodel.g:13477:10: ( ( (lv_damagedDefined_60_0= '!' ) ) otherlv_61= 'damaged' )
            	            {
            	            // InternalMcmodel.g:13477:10: ( ( (lv_damagedDefined_60_0= '!' ) ) otherlv_61= 'damaged' )
            	            // InternalMcmodel.g:13478:11: ( (lv_damagedDefined_60_0= '!' ) ) otherlv_61= 'damaged'
            	            {
            	            // InternalMcmodel.g:13478:11: ( (lv_damagedDefined_60_0= '!' ) )
            	            // InternalMcmodel.g:13479:12: (lv_damagedDefined_60_0= '!' )
            	            {
            	            // InternalMcmodel.g:13479:12: (lv_damagedDefined_60_0= '!' )
            	            // InternalMcmodel.g:13480:13: lv_damagedDefined_60_0= '!'
            	            {
            	            lv_damagedDefined_60_0=(Token)match(input,60,FOLLOW_48); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              													newLeafNode(lv_damagedDefined_60_0, grammarAccess.getOverridePredicate_10Access().getDamagedDefinedExclamationMarkKeyword_1_6_1_0_0_0());
            	              												
            	            }
            	            if ( state.backtracking==0 ) {

            	              													if (current==null) {
            	              														current = createModelElement(grammarAccess.getOverridePredicate_10Rule());
            	              													}
            	              													setWithLastConsumed(current, "damagedDefined", true, "!");
            	              												
            	            }

            	            }


            	            }

            	            otherlv_61=(Token)match(input,67,FOLLOW_37); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              											newLeafNode(otherlv_61, grammarAccess.getOverridePredicate_10Access().getDamagedKeyword_1_6_1_0_1());
            	              										
            	            }

            	            }


            	            }
            	            break;
            	        case 2 :
            	            // InternalMcmodel.g:13498:10: ( ( (lv_damagedDefined_62_0= 'damaged' ) ) ( (otherlv_63= '!=' ( ( (lv_damaged_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_damaged_68_0= 'true' ) ) | otherlv_69= 'false' ) ) ) )
            	            {
            	            // InternalMcmodel.g:13498:10: ( ( (lv_damagedDefined_62_0= 'damaged' ) ) ( (otherlv_63= '!=' ( ( (lv_damaged_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_damaged_68_0= 'true' ) ) | otherlv_69= 'false' ) ) ) )
            	            // InternalMcmodel.g:13499:11: ( (lv_damagedDefined_62_0= 'damaged' ) ) ( (otherlv_63= '!=' ( ( (lv_damaged_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_damaged_68_0= 'true' ) ) | otherlv_69= 'false' ) ) )
            	            {
            	            // InternalMcmodel.g:13499:11: ( (lv_damagedDefined_62_0= 'damaged' ) )
            	            // InternalMcmodel.g:13500:12: (lv_damagedDefined_62_0= 'damaged' )
            	            {
            	            // InternalMcmodel.g:13500:12: (lv_damagedDefined_62_0= 'damaged' )
            	            // InternalMcmodel.g:13501:13: lv_damagedDefined_62_0= 'damaged'
            	            {
            	            lv_damagedDefined_62_0=(Token)match(input,67,FOLLOW_40); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              													newLeafNode(lv_damagedDefined_62_0, grammarAccess.getOverridePredicate_10Access().getDamagedDefinedDamagedKeyword_1_6_1_1_0_0());
            	              												
            	            }
            	            if ( state.backtracking==0 ) {

            	              													if (current==null) {
            	              														current = createModelElement(grammarAccess.getOverridePredicate_10Rule());
            	              													}
            	              													setWithLastConsumed(current, "damagedDefined", true, "damaged");
            	              												
            	            }

            	            }


            	            }

            	            // InternalMcmodel.g:13513:11: ( (otherlv_63= '!=' ( ( (lv_damaged_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_damaged_68_0= 'true' ) ) | otherlv_69= 'false' ) ) )
            	            int alt426=2;
            	            int LA426_0 = input.LA(1);

            	            if ( (LA426_0==62) ) {
            	                alt426=1;
            	            }
            	            else if ( (LA426_0==18||LA426_0==58) ) {
            	                alt426=2;
            	            }
            	            else {
            	                if (state.backtracking>0) {state.failed=true; return current;}
            	                NoViableAltException nvae =
            	                    new NoViableAltException("", 426, 0, input);

            	                throw nvae;
            	            }
            	            switch (alt426) {
            	                case 1 :
            	                    // InternalMcmodel.g:13514:12: (otherlv_63= '!=' ( ( (lv_damaged_64_0= 'false' ) ) | otherlv_65= 'true' ) )
            	                    {
            	                    // InternalMcmodel.g:13514:12: (otherlv_63= '!=' ( ( (lv_damaged_64_0= 'false' ) ) | otherlv_65= 'true' ) )
            	                    // InternalMcmodel.g:13515:13: otherlv_63= '!=' ( ( (lv_damaged_64_0= 'false' ) ) | otherlv_65= 'true' )
            	                    {
            	                    otherlv_63=(Token)match(input,62,FOLLOW_7); if (state.failed) return current;
            	                    if ( state.backtracking==0 ) {

            	                      													newLeafNode(otherlv_63, grammarAccess.getOverridePredicate_10Access().getExclamationMarkEqualsSignKeyword_1_6_1_1_1_0_0());
            	                      												
            	                    }
            	                    // InternalMcmodel.g:13519:13: ( ( (lv_damaged_64_0= 'false' ) ) | otherlv_65= 'true' )
            	                    int alt423=2;
            	                    int LA423_0 = input.LA(1);

            	                    if ( (LA423_0==21) ) {
            	                        alt423=1;
            	                    }
            	                    else if ( (LA423_0==20) ) {
            	                        alt423=2;
            	                    }
            	                    else {
            	                        if (state.backtracking>0) {state.failed=true; return current;}
            	                        NoViableAltException nvae =
            	                            new NoViableAltException("", 423, 0, input);

            	                        throw nvae;
            	                    }
            	                    switch (alt423) {
            	                        case 1 :
            	                            // InternalMcmodel.g:13520:14: ( (lv_damaged_64_0= 'false' ) )
            	                            {
            	                            // InternalMcmodel.g:13520:14: ( (lv_damaged_64_0= 'false' ) )
            	                            // InternalMcmodel.g:13521:15: (lv_damaged_64_0= 'false' )
            	                            {
            	                            // InternalMcmodel.g:13521:15: (lv_damaged_64_0= 'false' )
            	                            // InternalMcmodel.g:13522:16: lv_damaged_64_0= 'false'
            	                            {
            	                            lv_damaged_64_0=(Token)match(input,21,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              																newLeafNode(lv_damaged_64_0, grammarAccess.getOverridePredicate_10Access().getDamagedFalseKeyword_1_6_1_1_1_0_1_0_0());
            	                              															
            	                            }
            	                            if ( state.backtracking==0 ) {

            	                              																if (current==null) {
            	                              																	current = createModelElement(grammarAccess.getOverridePredicate_10Rule());
            	                              																}
            	                              																setWithLastConsumed(current, "damaged", true, "false");
            	                              															
            	                            }

            	                            }


            	                            }


            	                            }
            	                            break;
            	                        case 2 :
            	                            // InternalMcmodel.g:13535:14: otherlv_65= 'true'
            	                            {
            	                            otherlv_65=(Token)match(input,20,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_65, grammarAccess.getOverridePredicate_10Access().getTrueKeyword_1_6_1_1_1_0_1_1());
            	                              													
            	                            }

            	                            }
            	                            break;

            	                    }


            	                    }


            	                    }
            	                    break;
            	                case 2 :
            	                    // InternalMcmodel.g:13542:12: ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_damaged_68_0= 'true' ) ) | otherlv_69= 'false' ) )
            	                    {
            	                    // InternalMcmodel.g:13542:12: ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_damaged_68_0= 'true' ) ) | otherlv_69= 'false' ) )
            	                    // InternalMcmodel.g:13543:13: (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_damaged_68_0= 'true' ) ) | otherlv_69= 'false' )
            	                    {
            	                    // InternalMcmodel.g:13543:13: (otherlv_66= '=' | otherlv_67= '==' )
            	                    int alt424=2;
            	                    int LA424_0 = input.LA(1);

            	                    if ( (LA424_0==18) ) {
            	                        alt424=1;
            	                    }
            	                    else if ( (LA424_0==58) ) {
            	                        alt424=2;
            	                    }
            	                    else {
            	                        if (state.backtracking>0) {state.failed=true; return current;}
            	                        NoViableAltException nvae =
            	                            new NoViableAltException("", 424, 0, input);

            	                        throw nvae;
            	                    }
            	                    switch (alt424) {
            	                        case 1 :
            	                            // InternalMcmodel.g:13544:14: otherlv_66= '='
            	                            {
            	                            otherlv_66=(Token)match(input,18,FOLLOW_7); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_66, grammarAccess.getOverridePredicate_10Access().getEqualsSignKeyword_1_6_1_1_1_1_0_0());
            	                              													
            	                            }

            	                            }
            	                            break;
            	                        case 2 :
            	                            // InternalMcmodel.g:13549:14: otherlv_67= '=='
            	                            {
            	                            otherlv_67=(Token)match(input,58,FOLLOW_7); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_67, grammarAccess.getOverridePredicate_10Access().getEqualsSignEqualsSignKeyword_1_6_1_1_1_1_0_1());
            	                              													
            	                            }

            	                            }
            	                            break;

            	                    }

            	                    // InternalMcmodel.g:13554:13: ( ( (lv_damaged_68_0= 'true' ) ) | otherlv_69= 'false' )
            	                    int alt425=2;
            	                    int LA425_0 = input.LA(1);

            	                    if ( (LA425_0==20) ) {
            	                        alt425=1;
            	                    }
            	                    else if ( (LA425_0==21) ) {
            	                        alt425=2;
            	                    }
            	                    else {
            	                        if (state.backtracking>0) {state.failed=true; return current;}
            	                        NoViableAltException nvae =
            	                            new NoViableAltException("", 425, 0, input);

            	                        throw nvae;
            	                    }
            	                    switch (alt425) {
            	                        case 1 :
            	                            // InternalMcmodel.g:13555:14: ( (lv_damaged_68_0= 'true' ) )
            	                            {
            	                            // InternalMcmodel.g:13555:14: ( (lv_damaged_68_0= 'true' ) )
            	                            // InternalMcmodel.g:13556:15: (lv_damaged_68_0= 'true' )
            	                            {
            	                            // InternalMcmodel.g:13556:15: (lv_damaged_68_0= 'true' )
            	                            // InternalMcmodel.g:13557:16: lv_damaged_68_0= 'true'
            	                            {
            	                            lv_damaged_68_0=(Token)match(input,20,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              																newLeafNode(lv_damaged_68_0, grammarAccess.getOverridePredicate_10Access().getDamagedTrueKeyword_1_6_1_1_1_1_1_0_0());
            	                              															
            	                            }
            	                            if ( state.backtracking==0 ) {

            	                              																if (current==null) {
            	                              																	current = createModelElement(grammarAccess.getOverridePredicate_10Rule());
            	                              																}
            	                              																setWithLastConsumed(current, "damaged", true, "true");
            	                              															
            	                            }

            	                            }


            	                            }


            	                            }
            	                            break;
            	                        case 2 :
            	                            // InternalMcmodel.g:13570:14: otherlv_69= 'false'
            	                            {
            	                            otherlv_69=(Token)match(input,21,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_69, grammarAccess.getOverridePredicate_10Access().getFalseKeyword_1_6_1_1_1_1_1_1());
            	                              													
            	                            }

            	                            }
            	                            break;

            	                    }


            	                    }


            	                    }
            	                    break;

            	            }


            	            }


            	            }
            	            break;

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getOverridePredicate_10Access().getUnorderedGroup_1());

            	    }


            	    }


            	    }
            	    break;
            	case 8 :
            	    // InternalMcmodel.g:13585:4: ({...}? => ( ({...}? => (otherlv_70= '&' ( ( ( (lv_lefthandedDefined_71_0= '!' ) ) otherlv_72= 'lefthanded' ) | ( ( (lv_lefthandedDefined_73_0= 'lefthanded' ) ) ( (otherlv_74= '!=' ( ( (lv_lefthanded_75_0= 'false' ) ) | otherlv_76= 'true' ) ) | ( (otherlv_77= '=' | otherlv_78= '==' ) ( ( (lv_lefthanded_79_0= 'true' ) ) | otherlv_80= 'false' ) ) ) ) ) ) ) ) )
            	    {
            	    // InternalMcmodel.g:13585:4: ({...}? => ( ({...}? => (otherlv_70= '&' ( ( ( (lv_lefthandedDefined_71_0= '!' ) ) otherlv_72= 'lefthanded' ) | ( ( (lv_lefthandedDefined_73_0= 'lefthanded' ) ) ( (otherlv_74= '!=' ( ( (lv_lefthanded_75_0= 'false' ) ) | otherlv_76= 'true' ) ) | ( (otherlv_77= '=' | otherlv_78= '==' ) ( ( (lv_lefthanded_79_0= 'true' ) ) | otherlv_80= 'false' ) ) ) ) ) ) ) ) )
            	    // InternalMcmodel.g:13586:5: {...}? => ( ({...}? => (otherlv_70= '&' ( ( ( (lv_lefthandedDefined_71_0= '!' ) ) otherlv_72= 'lefthanded' ) | ( ( (lv_lefthandedDefined_73_0= 'lefthanded' ) ) ( (otherlv_74= '!=' ( ( (lv_lefthanded_75_0= 'false' ) ) | otherlv_76= 'true' ) ) | ( (otherlv_77= '=' | otherlv_78= '==' ) ( ( (lv_lefthanded_79_0= 'true' ) ) | otherlv_80= 'false' ) ) ) ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_10Access().getUnorderedGroup_1(), 7) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_10", "getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_10Access().getUnorderedGroup_1(), 7)");
            	    }
            	    // InternalMcmodel.g:13586:117: ( ({...}? => (otherlv_70= '&' ( ( ( (lv_lefthandedDefined_71_0= '!' ) ) otherlv_72= 'lefthanded' ) | ( ( (lv_lefthandedDefined_73_0= 'lefthanded' ) ) ( (otherlv_74= '!=' ( ( (lv_lefthanded_75_0= 'false' ) ) | otherlv_76= 'true' ) ) | ( (otherlv_77= '=' | otherlv_78= '==' ) ( ( (lv_lefthanded_79_0= 'true' ) ) | otherlv_80= 'false' ) ) ) ) ) ) ) )
            	    // InternalMcmodel.g:13587:6: ({...}? => (otherlv_70= '&' ( ( ( (lv_lefthandedDefined_71_0= '!' ) ) otherlv_72= 'lefthanded' ) | ( ( (lv_lefthandedDefined_73_0= 'lefthanded' ) ) ( (otherlv_74= '!=' ( ( (lv_lefthanded_75_0= 'false' ) ) | otherlv_76= 'true' ) ) | ( (otherlv_77= '=' | otherlv_78= '==' ) ( ( (lv_lefthanded_79_0= 'true' ) ) | otherlv_80= 'false' ) ) ) ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getOverridePredicate_10Access().getUnorderedGroup_1(), 7);
            	    // InternalMcmodel.g:13590:9: ({...}? => (otherlv_70= '&' ( ( ( (lv_lefthandedDefined_71_0= '!' ) ) otherlv_72= 'lefthanded' ) | ( ( (lv_lefthandedDefined_73_0= 'lefthanded' ) ) ( (otherlv_74= '!=' ( ( (lv_lefthanded_75_0= 'false' ) ) | otherlv_76= 'true' ) ) | ( (otherlv_77= '=' | otherlv_78= '==' ) ( ( (lv_lefthanded_79_0= 'true' ) ) | otherlv_80= 'false' ) ) ) ) ) ) )
            	    // InternalMcmodel.g:13590:10: {...}? => (otherlv_70= '&' ( ( ( (lv_lefthandedDefined_71_0= '!' ) ) otherlv_72= 'lefthanded' ) | ( ( (lv_lefthandedDefined_73_0= 'lefthanded' ) ) ( (otherlv_74= '!=' ( ( (lv_lefthanded_75_0= 'false' ) ) | otherlv_76= 'true' ) ) | ( (otherlv_77= '=' | otherlv_78= '==' ) ( ( (lv_lefthanded_79_0= 'true' ) ) | otherlv_80= 'false' ) ) ) ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_10", "true");
            	    }
            	    // InternalMcmodel.g:13590:19: (otherlv_70= '&' ( ( ( (lv_lefthandedDefined_71_0= '!' ) ) otherlv_72= 'lefthanded' ) | ( ( (lv_lefthandedDefined_73_0= 'lefthanded' ) ) ( (otherlv_74= '!=' ( ( (lv_lefthanded_75_0= 'false' ) ) | otherlv_76= 'true' ) ) | ( (otherlv_77= '=' | otherlv_78= '==' ) ( ( (lv_lefthanded_79_0= 'true' ) ) | otherlv_80= 'false' ) ) ) ) ) )
            	    // InternalMcmodel.g:13590:20: otherlv_70= '&' ( ( ( (lv_lefthandedDefined_71_0= '!' ) ) otherlv_72= 'lefthanded' ) | ( ( (lv_lefthandedDefined_73_0= 'lefthanded' ) ) ( (otherlv_74= '!=' ( ( (lv_lefthanded_75_0= 'false' ) ) | otherlv_76= 'true' ) ) | ( (otherlv_77= '=' | otherlv_78= '==' ) ( ( (lv_lefthanded_79_0= 'true' ) ) | otherlv_80= 'false' ) ) ) ) )
            	    {
            	    otherlv_70=(Token)match(input,59,FOLLOW_49); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_70, grammarAccess.getOverridePredicate_10Access().getAmpersandKeyword_1_7_0());
            	      								
            	    }
            	    // InternalMcmodel.g:13594:9: ( ( ( (lv_lefthandedDefined_71_0= '!' ) ) otherlv_72= 'lefthanded' ) | ( ( (lv_lefthandedDefined_73_0= 'lefthanded' ) ) ( (otherlv_74= '!=' ( ( (lv_lefthanded_75_0= 'false' ) ) | otherlv_76= 'true' ) ) | ( (otherlv_77= '=' | otherlv_78= '==' ) ( ( (lv_lefthanded_79_0= 'true' ) ) | otherlv_80= 'false' ) ) ) ) )
            	    int alt432=2;
            	    int LA432_0 = input.LA(1);

            	    if ( (LA432_0==60) ) {
            	        alt432=1;
            	    }
            	    else if ( (LA432_0==68) ) {
            	        alt432=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 432, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt432) {
            	        case 1 :
            	            // InternalMcmodel.g:13595:10: ( ( (lv_lefthandedDefined_71_0= '!' ) ) otherlv_72= 'lefthanded' )
            	            {
            	            // InternalMcmodel.g:13595:10: ( ( (lv_lefthandedDefined_71_0= '!' ) ) otherlv_72= 'lefthanded' )
            	            // InternalMcmodel.g:13596:11: ( (lv_lefthandedDefined_71_0= '!' ) ) otherlv_72= 'lefthanded'
            	            {
            	            // InternalMcmodel.g:13596:11: ( (lv_lefthandedDefined_71_0= '!' ) )
            	            // InternalMcmodel.g:13597:12: (lv_lefthandedDefined_71_0= '!' )
            	            {
            	            // InternalMcmodel.g:13597:12: (lv_lefthandedDefined_71_0= '!' )
            	            // InternalMcmodel.g:13598:13: lv_lefthandedDefined_71_0= '!'
            	            {
            	            lv_lefthandedDefined_71_0=(Token)match(input,60,FOLLOW_50); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              													newLeafNode(lv_lefthandedDefined_71_0, grammarAccess.getOverridePredicate_10Access().getLefthandedDefinedExclamationMarkKeyword_1_7_1_0_0_0());
            	              												
            	            }
            	            if ( state.backtracking==0 ) {

            	              													if (current==null) {
            	              														current = createModelElement(grammarAccess.getOverridePredicate_10Rule());
            	              													}
            	              													setWithLastConsumed(current, "lefthandedDefined", true, "!");
            	              												
            	            }

            	            }


            	            }

            	            otherlv_72=(Token)match(input,68,FOLLOW_37); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              											newLeafNode(otherlv_72, grammarAccess.getOverridePredicate_10Access().getLefthandedKeyword_1_7_1_0_1());
            	              										
            	            }

            	            }


            	            }
            	            break;
            	        case 2 :
            	            // InternalMcmodel.g:13616:10: ( ( (lv_lefthandedDefined_73_0= 'lefthanded' ) ) ( (otherlv_74= '!=' ( ( (lv_lefthanded_75_0= 'false' ) ) | otherlv_76= 'true' ) ) | ( (otherlv_77= '=' | otherlv_78= '==' ) ( ( (lv_lefthanded_79_0= 'true' ) ) | otherlv_80= 'false' ) ) ) )
            	            {
            	            // InternalMcmodel.g:13616:10: ( ( (lv_lefthandedDefined_73_0= 'lefthanded' ) ) ( (otherlv_74= '!=' ( ( (lv_lefthanded_75_0= 'false' ) ) | otherlv_76= 'true' ) ) | ( (otherlv_77= '=' | otherlv_78= '==' ) ( ( (lv_lefthanded_79_0= 'true' ) ) | otherlv_80= 'false' ) ) ) )
            	            // InternalMcmodel.g:13617:11: ( (lv_lefthandedDefined_73_0= 'lefthanded' ) ) ( (otherlv_74= '!=' ( ( (lv_lefthanded_75_0= 'false' ) ) | otherlv_76= 'true' ) ) | ( (otherlv_77= '=' | otherlv_78= '==' ) ( ( (lv_lefthanded_79_0= 'true' ) ) | otherlv_80= 'false' ) ) )
            	            {
            	            // InternalMcmodel.g:13617:11: ( (lv_lefthandedDefined_73_0= 'lefthanded' ) )
            	            // InternalMcmodel.g:13618:12: (lv_lefthandedDefined_73_0= 'lefthanded' )
            	            {
            	            // InternalMcmodel.g:13618:12: (lv_lefthandedDefined_73_0= 'lefthanded' )
            	            // InternalMcmodel.g:13619:13: lv_lefthandedDefined_73_0= 'lefthanded'
            	            {
            	            lv_lefthandedDefined_73_0=(Token)match(input,68,FOLLOW_40); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              													newLeafNode(lv_lefthandedDefined_73_0, grammarAccess.getOverridePredicate_10Access().getLefthandedDefinedLefthandedKeyword_1_7_1_1_0_0());
            	              												
            	            }
            	            if ( state.backtracking==0 ) {

            	              													if (current==null) {
            	              														current = createModelElement(grammarAccess.getOverridePredicate_10Rule());
            	              													}
            	              													setWithLastConsumed(current, "lefthandedDefined", true, "lefthanded");
            	              												
            	            }

            	            }


            	            }

            	            // InternalMcmodel.g:13631:11: ( (otherlv_74= '!=' ( ( (lv_lefthanded_75_0= 'false' ) ) | otherlv_76= 'true' ) ) | ( (otherlv_77= '=' | otherlv_78= '==' ) ( ( (lv_lefthanded_79_0= 'true' ) ) | otherlv_80= 'false' ) ) )
            	            int alt431=2;
            	            int LA431_0 = input.LA(1);

            	            if ( (LA431_0==62) ) {
            	                alt431=1;
            	            }
            	            else if ( (LA431_0==18||LA431_0==58) ) {
            	                alt431=2;
            	            }
            	            else {
            	                if (state.backtracking>0) {state.failed=true; return current;}
            	                NoViableAltException nvae =
            	                    new NoViableAltException("", 431, 0, input);

            	                throw nvae;
            	            }
            	            switch (alt431) {
            	                case 1 :
            	                    // InternalMcmodel.g:13632:12: (otherlv_74= '!=' ( ( (lv_lefthanded_75_0= 'false' ) ) | otherlv_76= 'true' ) )
            	                    {
            	                    // InternalMcmodel.g:13632:12: (otherlv_74= '!=' ( ( (lv_lefthanded_75_0= 'false' ) ) | otherlv_76= 'true' ) )
            	                    // InternalMcmodel.g:13633:13: otherlv_74= '!=' ( ( (lv_lefthanded_75_0= 'false' ) ) | otherlv_76= 'true' )
            	                    {
            	                    otherlv_74=(Token)match(input,62,FOLLOW_7); if (state.failed) return current;
            	                    if ( state.backtracking==0 ) {

            	                      													newLeafNode(otherlv_74, grammarAccess.getOverridePredicate_10Access().getExclamationMarkEqualsSignKeyword_1_7_1_1_1_0_0());
            	                      												
            	                    }
            	                    // InternalMcmodel.g:13637:13: ( ( (lv_lefthanded_75_0= 'false' ) ) | otherlv_76= 'true' )
            	                    int alt428=2;
            	                    int LA428_0 = input.LA(1);

            	                    if ( (LA428_0==21) ) {
            	                        alt428=1;
            	                    }
            	                    else if ( (LA428_0==20) ) {
            	                        alt428=2;
            	                    }
            	                    else {
            	                        if (state.backtracking>0) {state.failed=true; return current;}
            	                        NoViableAltException nvae =
            	                            new NoViableAltException("", 428, 0, input);

            	                        throw nvae;
            	                    }
            	                    switch (alt428) {
            	                        case 1 :
            	                            // InternalMcmodel.g:13638:14: ( (lv_lefthanded_75_0= 'false' ) )
            	                            {
            	                            // InternalMcmodel.g:13638:14: ( (lv_lefthanded_75_0= 'false' ) )
            	                            // InternalMcmodel.g:13639:15: (lv_lefthanded_75_0= 'false' )
            	                            {
            	                            // InternalMcmodel.g:13639:15: (lv_lefthanded_75_0= 'false' )
            	                            // InternalMcmodel.g:13640:16: lv_lefthanded_75_0= 'false'
            	                            {
            	                            lv_lefthanded_75_0=(Token)match(input,21,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              																newLeafNode(lv_lefthanded_75_0, grammarAccess.getOverridePredicate_10Access().getLefthandedFalseKeyword_1_7_1_1_1_0_1_0_0());
            	                              															
            	                            }
            	                            if ( state.backtracking==0 ) {

            	                              																if (current==null) {
            	                              																	current = createModelElement(grammarAccess.getOverridePredicate_10Rule());
            	                              																}
            	                              																setWithLastConsumed(current, "lefthanded", true, "false");
            	                              															
            	                            }

            	                            }


            	                            }


            	                            }
            	                            break;
            	                        case 2 :
            	                            // InternalMcmodel.g:13653:14: otherlv_76= 'true'
            	                            {
            	                            otherlv_76=(Token)match(input,20,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_76, grammarAccess.getOverridePredicate_10Access().getTrueKeyword_1_7_1_1_1_0_1_1());
            	                              													
            	                            }

            	                            }
            	                            break;

            	                    }


            	                    }


            	                    }
            	                    break;
            	                case 2 :
            	                    // InternalMcmodel.g:13660:12: ( (otherlv_77= '=' | otherlv_78= '==' ) ( ( (lv_lefthanded_79_0= 'true' ) ) | otherlv_80= 'false' ) )
            	                    {
            	                    // InternalMcmodel.g:13660:12: ( (otherlv_77= '=' | otherlv_78= '==' ) ( ( (lv_lefthanded_79_0= 'true' ) ) | otherlv_80= 'false' ) )
            	                    // InternalMcmodel.g:13661:13: (otherlv_77= '=' | otherlv_78= '==' ) ( ( (lv_lefthanded_79_0= 'true' ) ) | otherlv_80= 'false' )
            	                    {
            	                    // InternalMcmodel.g:13661:13: (otherlv_77= '=' | otherlv_78= '==' )
            	                    int alt429=2;
            	                    int LA429_0 = input.LA(1);

            	                    if ( (LA429_0==18) ) {
            	                        alt429=1;
            	                    }
            	                    else if ( (LA429_0==58) ) {
            	                        alt429=2;
            	                    }
            	                    else {
            	                        if (state.backtracking>0) {state.failed=true; return current;}
            	                        NoViableAltException nvae =
            	                            new NoViableAltException("", 429, 0, input);

            	                        throw nvae;
            	                    }
            	                    switch (alt429) {
            	                        case 1 :
            	                            // InternalMcmodel.g:13662:14: otherlv_77= '='
            	                            {
            	                            otherlv_77=(Token)match(input,18,FOLLOW_7); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_77, grammarAccess.getOverridePredicate_10Access().getEqualsSignKeyword_1_7_1_1_1_1_0_0());
            	                              													
            	                            }

            	                            }
            	                            break;
            	                        case 2 :
            	                            // InternalMcmodel.g:13667:14: otherlv_78= '=='
            	                            {
            	                            otherlv_78=(Token)match(input,58,FOLLOW_7); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_78, grammarAccess.getOverridePredicate_10Access().getEqualsSignEqualsSignKeyword_1_7_1_1_1_1_0_1());
            	                              													
            	                            }

            	                            }
            	                            break;

            	                    }

            	                    // InternalMcmodel.g:13672:13: ( ( (lv_lefthanded_79_0= 'true' ) ) | otherlv_80= 'false' )
            	                    int alt430=2;
            	                    int LA430_0 = input.LA(1);

            	                    if ( (LA430_0==20) ) {
            	                        alt430=1;
            	                    }
            	                    else if ( (LA430_0==21) ) {
            	                        alt430=2;
            	                    }
            	                    else {
            	                        if (state.backtracking>0) {state.failed=true; return current;}
            	                        NoViableAltException nvae =
            	                            new NoViableAltException("", 430, 0, input);

            	                        throw nvae;
            	                    }
            	                    switch (alt430) {
            	                        case 1 :
            	                            // InternalMcmodel.g:13673:14: ( (lv_lefthanded_79_0= 'true' ) )
            	                            {
            	                            // InternalMcmodel.g:13673:14: ( (lv_lefthanded_79_0= 'true' ) )
            	                            // InternalMcmodel.g:13674:15: (lv_lefthanded_79_0= 'true' )
            	                            {
            	                            // InternalMcmodel.g:13674:15: (lv_lefthanded_79_0= 'true' )
            	                            // InternalMcmodel.g:13675:16: lv_lefthanded_79_0= 'true'
            	                            {
            	                            lv_lefthanded_79_0=(Token)match(input,20,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              																newLeafNode(lv_lefthanded_79_0, grammarAccess.getOverridePredicate_10Access().getLefthandedTrueKeyword_1_7_1_1_1_1_1_0_0());
            	                              															
            	                            }
            	                            if ( state.backtracking==0 ) {

            	                              																if (current==null) {
            	                              																	current = createModelElement(grammarAccess.getOverridePredicate_10Rule());
            	                              																}
            	                              																setWithLastConsumed(current, "lefthanded", true, "true");
            	                              															
            	                            }

            	                            }


            	                            }


            	                            }
            	                            break;
            	                        case 2 :
            	                            // InternalMcmodel.g:13688:14: otherlv_80= 'false'
            	                            {
            	                            otherlv_80=(Token)match(input,21,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_80, grammarAccess.getOverridePredicate_10Access().getFalseKeyword_1_7_1_1_1_1_1_1());
            	                              													
            	                            }

            	                            }
            	                            break;

            	                    }


            	                    }


            	                    }
            	                    break;

            	            }


            	            }


            	            }
            	            break;

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getOverridePredicate_10Access().getUnorderedGroup_1());

            	    }


            	    }


            	    }
            	    break;
            	case 9 :
            	    // InternalMcmodel.g:13703:4: ({...}? => ( ({...}? => (otherlv_81= '&' ( (lv_pullDefined_82_0= 'pull' ) ) (otherlv_83= '=' | otherlv_84= '==' ) ( (lv_pull_85_0= RULE_PERCENTAGE ) ) ) ) ) )
            	    {
            	    // InternalMcmodel.g:13703:4: ({...}? => ( ({...}? => (otherlv_81= '&' ( (lv_pullDefined_82_0= 'pull' ) ) (otherlv_83= '=' | otherlv_84= '==' ) ( (lv_pull_85_0= RULE_PERCENTAGE ) ) ) ) ) )
            	    // InternalMcmodel.g:13704:5: {...}? => ( ({...}? => (otherlv_81= '&' ( (lv_pullDefined_82_0= 'pull' ) ) (otherlv_83= '=' | otherlv_84= '==' ) ( (lv_pull_85_0= RULE_PERCENTAGE ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_10Access().getUnorderedGroup_1(), 8) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_10", "getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_10Access().getUnorderedGroup_1(), 8)");
            	    }
            	    // InternalMcmodel.g:13704:117: ( ({...}? => (otherlv_81= '&' ( (lv_pullDefined_82_0= 'pull' ) ) (otherlv_83= '=' | otherlv_84= '==' ) ( (lv_pull_85_0= RULE_PERCENTAGE ) ) ) ) )
            	    // InternalMcmodel.g:13705:6: ({...}? => (otherlv_81= '&' ( (lv_pullDefined_82_0= 'pull' ) ) (otherlv_83= '=' | otherlv_84= '==' ) ( (lv_pull_85_0= RULE_PERCENTAGE ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getOverridePredicate_10Access().getUnorderedGroup_1(), 8);
            	    // InternalMcmodel.g:13708:9: ({...}? => (otherlv_81= '&' ( (lv_pullDefined_82_0= 'pull' ) ) (otherlv_83= '=' | otherlv_84= '==' ) ( (lv_pull_85_0= RULE_PERCENTAGE ) ) ) )
            	    // InternalMcmodel.g:13708:10: {...}? => (otherlv_81= '&' ( (lv_pullDefined_82_0= 'pull' ) ) (otherlv_83= '=' | otherlv_84= '==' ) ( (lv_pull_85_0= RULE_PERCENTAGE ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_10", "true");
            	    }
            	    // InternalMcmodel.g:13708:19: (otherlv_81= '&' ( (lv_pullDefined_82_0= 'pull' ) ) (otherlv_83= '=' | otherlv_84= '==' ) ( (lv_pull_85_0= RULE_PERCENTAGE ) ) )
            	    // InternalMcmodel.g:13708:20: otherlv_81= '&' ( (lv_pullDefined_82_0= 'pull' ) ) (otherlv_83= '=' | otherlv_84= '==' ) ( (lv_pull_85_0= RULE_PERCENTAGE ) )
            	    {
            	    otherlv_81=(Token)match(input,59,FOLLOW_51); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_81, grammarAccess.getOverridePredicate_10Access().getAmpersandKeyword_1_8_0());
            	      								
            	    }
            	    // InternalMcmodel.g:13712:9: ( (lv_pullDefined_82_0= 'pull' ) )
            	    // InternalMcmodel.g:13713:10: (lv_pullDefined_82_0= 'pull' )
            	    {
            	    // InternalMcmodel.g:13713:10: (lv_pullDefined_82_0= 'pull' )
            	    // InternalMcmodel.g:13714:11: lv_pullDefined_82_0= 'pull'
            	    {
            	    lv_pullDefined_82_0=(Token)match(input,69,FOLLOW_35); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											newLeafNode(lv_pullDefined_82_0, grammarAccess.getOverridePredicate_10Access().getPullDefinedPullKeyword_1_8_1_0());
            	      										
            	    }
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElement(grammarAccess.getOverridePredicate_10Rule());
            	      											}
            	      											setWithLastConsumed(current, "pullDefined", true, "pull");
            	      										
            	    }

            	    }


            	    }

            	    // InternalMcmodel.g:13726:9: (otherlv_83= '=' | otherlv_84= '==' )
            	    int alt433=2;
            	    int LA433_0 = input.LA(1);

            	    if ( (LA433_0==18) ) {
            	        alt433=1;
            	    }
            	    else if ( (LA433_0==58) ) {
            	        alt433=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 433, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt433) {
            	        case 1 :
            	            // InternalMcmodel.g:13727:10: otherlv_83= '='
            	            {
            	            otherlv_83=(Token)match(input,18,FOLLOW_36); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(otherlv_83, grammarAccess.getOverridePredicate_10Access().getEqualsSignKeyword_1_8_2_0());
            	              									
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalMcmodel.g:13732:10: otherlv_84= '=='
            	            {
            	            otherlv_84=(Token)match(input,58,FOLLOW_36); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(otherlv_84, grammarAccess.getOverridePredicate_10Access().getEqualsSignEqualsSignKeyword_1_8_2_1());
            	              									
            	            }

            	            }
            	            break;

            	    }

            	    // InternalMcmodel.g:13737:9: ( (lv_pull_85_0= RULE_PERCENTAGE ) )
            	    // InternalMcmodel.g:13738:10: (lv_pull_85_0= RULE_PERCENTAGE )
            	    {
            	    // InternalMcmodel.g:13738:10: (lv_pull_85_0= RULE_PERCENTAGE )
            	    // InternalMcmodel.g:13739:11: lv_pull_85_0= RULE_PERCENTAGE
            	    {
            	    lv_pull_85_0=(Token)match(input,RULE_PERCENTAGE,FOLLOW_37); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											newLeafNode(lv_pull_85_0, grammarAccess.getOverridePredicate_10Access().getPullPERCENTAGETerminalRuleCall_1_8_3_0());
            	      										
            	    }
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElement(grammarAccess.getOverridePredicate_10Rule());
            	      											}
            	      											setWithLastConsumed(
            	      												current,
            	      												"pull",
            	      												lv_pull_85_0,
            	      												"com.raptor.mcmodel.Mcmodel.PERCENTAGE");
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getOverridePredicate_10Access().getUnorderedGroup_1());

            	    }


            	    }


            	    }
            	    break;
            	case 10 :
            	    // InternalMcmodel.g:13761:4: ({...}? => ( ({...}? => (otherlv_86= '&' ( ( ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing' ) | ( ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) ) ) ) ) ) )
            	    {
            	    // InternalMcmodel.g:13761:4: ({...}? => ( ({...}? => (otherlv_86= '&' ( ( ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing' ) | ( ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) ) ) ) ) ) )
            	    // InternalMcmodel.g:13762:5: {...}? => ( ({...}? => (otherlv_86= '&' ( ( ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing' ) | ( ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_10Access().getUnorderedGroup_1(), 9) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_10", "getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_10Access().getUnorderedGroup_1(), 9)");
            	    }
            	    // InternalMcmodel.g:13762:117: ( ({...}? => (otherlv_86= '&' ( ( ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing' ) | ( ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) ) ) ) ) )
            	    // InternalMcmodel.g:13763:6: ({...}? => (otherlv_86= '&' ( ( ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing' ) | ( ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getOverridePredicate_10Access().getUnorderedGroup_1(), 9);
            	    // InternalMcmodel.g:13766:9: ({...}? => (otherlv_86= '&' ( ( ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing' ) | ( ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) ) ) ) )
            	    // InternalMcmodel.g:13766:10: {...}? => (otherlv_86= '&' ( ( ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing' ) | ( ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_10", "true");
            	    }
            	    // InternalMcmodel.g:13766:19: (otherlv_86= '&' ( ( ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing' ) | ( ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) ) ) )
            	    // InternalMcmodel.g:13766:20: otherlv_86= '&' ( ( ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing' ) | ( ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) ) )
            	    {
            	    otherlv_86=(Token)match(input,59,FOLLOW_54); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_86, grammarAccess.getOverridePredicate_10Access().getAmpersandKeyword_1_9_0());
            	      								
            	    }
            	    // InternalMcmodel.g:13770:9: ( ( ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing' ) | ( ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) ) )
            	    int alt438=2;
            	    int LA438_0 = input.LA(1);

            	    if ( (LA438_0==60) ) {
            	        alt438=1;
            	    }
            	    else if ( (LA438_0==71) ) {
            	        alt438=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 438, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt438) {
            	        case 1 :
            	            // InternalMcmodel.g:13771:10: ( ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing' )
            	            {
            	            // InternalMcmodel.g:13771:10: ( ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing' )
            	            // InternalMcmodel.g:13772:11: ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing'
            	            {
            	            // InternalMcmodel.g:13772:11: ( (lv_throwingDefined_87_0= '!' ) )
            	            // InternalMcmodel.g:13773:12: (lv_throwingDefined_87_0= '!' )
            	            {
            	            // InternalMcmodel.g:13773:12: (lv_throwingDefined_87_0= '!' )
            	            // InternalMcmodel.g:13774:13: lv_throwingDefined_87_0= '!'
            	            {
            	            lv_throwingDefined_87_0=(Token)match(input,60,FOLLOW_55); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              													newLeafNode(lv_throwingDefined_87_0, grammarAccess.getOverridePredicate_10Access().getThrowingDefinedExclamationMarkKeyword_1_9_1_0_0_0());
            	              												
            	            }
            	            if ( state.backtracking==0 ) {

            	              													if (current==null) {
            	              														current = createModelElement(grammarAccess.getOverridePredicate_10Rule());
            	              													}
            	              													setWithLastConsumed(current, "throwingDefined", true, "!");
            	              												
            	            }

            	            }


            	            }

            	            otherlv_88=(Token)match(input,71,FOLLOW_37); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              											newLeafNode(otherlv_88, grammarAccess.getOverridePredicate_10Access().getThrowingKeyword_1_9_1_0_1());
            	              										
            	            }

            	            }


            	            }
            	            break;
            	        case 2 :
            	            // InternalMcmodel.g:13792:10: ( ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) )
            	            {
            	            // InternalMcmodel.g:13792:10: ( ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) )
            	            // InternalMcmodel.g:13793:11: ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) )
            	            {
            	            // InternalMcmodel.g:13793:11: ( (lv_throwingDefined_89_0= 'throwing' ) )
            	            // InternalMcmodel.g:13794:12: (lv_throwingDefined_89_0= 'throwing' )
            	            {
            	            // InternalMcmodel.g:13794:12: (lv_throwingDefined_89_0= 'throwing' )
            	            // InternalMcmodel.g:13795:13: lv_throwingDefined_89_0= 'throwing'
            	            {
            	            lv_throwingDefined_89_0=(Token)match(input,71,FOLLOW_40); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              													newLeafNode(lv_throwingDefined_89_0, grammarAccess.getOverridePredicate_10Access().getThrowingDefinedThrowingKeyword_1_9_1_1_0_0());
            	              												
            	            }
            	            if ( state.backtracking==0 ) {

            	              													if (current==null) {
            	              														current = createModelElement(grammarAccess.getOverridePredicate_10Rule());
            	              													}
            	              													setWithLastConsumed(current, "throwingDefined", true, "throwing");
            	              												
            	            }

            	            }


            	            }

            	            // InternalMcmodel.g:13807:11: ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) )
            	            int alt437=2;
            	            int LA437_0 = input.LA(1);

            	            if ( (LA437_0==62) ) {
            	                alt437=1;
            	            }
            	            else if ( (LA437_0==18||LA437_0==58) ) {
            	                alt437=2;
            	            }
            	            else {
            	                if (state.backtracking>0) {state.failed=true; return current;}
            	                NoViableAltException nvae =
            	                    new NoViableAltException("", 437, 0, input);

            	                throw nvae;
            	            }
            	            switch (alt437) {
            	                case 1 :
            	                    // InternalMcmodel.g:13808:12: (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) )
            	                    {
            	                    // InternalMcmodel.g:13808:12: (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) )
            	                    // InternalMcmodel.g:13809:13: otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' )
            	                    {
            	                    otherlv_90=(Token)match(input,62,FOLLOW_7); if (state.failed) return current;
            	                    if ( state.backtracking==0 ) {

            	                      													newLeafNode(otherlv_90, grammarAccess.getOverridePredicate_10Access().getExclamationMarkEqualsSignKeyword_1_9_1_1_1_0_0());
            	                      												
            	                    }
            	                    // InternalMcmodel.g:13813:13: ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' )
            	                    int alt434=2;
            	                    int LA434_0 = input.LA(1);

            	                    if ( (LA434_0==21) ) {
            	                        alt434=1;
            	                    }
            	                    else if ( (LA434_0==20) ) {
            	                        alt434=2;
            	                    }
            	                    else {
            	                        if (state.backtracking>0) {state.failed=true; return current;}
            	                        NoViableAltException nvae =
            	                            new NoViableAltException("", 434, 0, input);

            	                        throw nvae;
            	                    }
            	                    switch (alt434) {
            	                        case 1 :
            	                            // InternalMcmodel.g:13814:14: ( (lv_throwing_91_0= 'false' ) )
            	                            {
            	                            // InternalMcmodel.g:13814:14: ( (lv_throwing_91_0= 'false' ) )
            	                            // InternalMcmodel.g:13815:15: (lv_throwing_91_0= 'false' )
            	                            {
            	                            // InternalMcmodel.g:13815:15: (lv_throwing_91_0= 'false' )
            	                            // InternalMcmodel.g:13816:16: lv_throwing_91_0= 'false'
            	                            {
            	                            lv_throwing_91_0=(Token)match(input,21,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              																newLeafNode(lv_throwing_91_0, grammarAccess.getOverridePredicate_10Access().getThrowingFalseKeyword_1_9_1_1_1_0_1_0_0());
            	                              															
            	                            }
            	                            if ( state.backtracking==0 ) {

            	                              																if (current==null) {
            	                              																	current = createModelElement(grammarAccess.getOverridePredicate_10Rule());
            	                              																}
            	                              																setWithLastConsumed(current, "throwing", true, "false");
            	                              															
            	                            }

            	                            }


            	                            }


            	                            }
            	                            break;
            	                        case 2 :
            	                            // InternalMcmodel.g:13829:14: otherlv_92= 'true'
            	                            {
            	                            otherlv_92=(Token)match(input,20,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_92, grammarAccess.getOverridePredicate_10Access().getTrueKeyword_1_9_1_1_1_0_1_1());
            	                              													
            	                            }

            	                            }
            	                            break;

            	                    }


            	                    }


            	                    }
            	                    break;
            	                case 2 :
            	                    // InternalMcmodel.g:13836:12: ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) )
            	                    {
            	                    // InternalMcmodel.g:13836:12: ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) )
            	                    // InternalMcmodel.g:13837:13: (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' )
            	                    {
            	                    // InternalMcmodel.g:13837:13: (otherlv_93= '=' | otherlv_94= '==' )
            	                    int alt435=2;
            	                    int LA435_0 = input.LA(1);

            	                    if ( (LA435_0==18) ) {
            	                        alt435=1;
            	                    }
            	                    else if ( (LA435_0==58) ) {
            	                        alt435=2;
            	                    }
            	                    else {
            	                        if (state.backtracking>0) {state.failed=true; return current;}
            	                        NoViableAltException nvae =
            	                            new NoViableAltException("", 435, 0, input);

            	                        throw nvae;
            	                    }
            	                    switch (alt435) {
            	                        case 1 :
            	                            // InternalMcmodel.g:13838:14: otherlv_93= '='
            	                            {
            	                            otherlv_93=(Token)match(input,18,FOLLOW_7); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_93, grammarAccess.getOverridePredicate_10Access().getEqualsSignKeyword_1_9_1_1_1_1_0_0());
            	                              													
            	                            }

            	                            }
            	                            break;
            	                        case 2 :
            	                            // InternalMcmodel.g:13843:14: otherlv_94= '=='
            	                            {
            	                            otherlv_94=(Token)match(input,58,FOLLOW_7); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_94, grammarAccess.getOverridePredicate_10Access().getEqualsSignEqualsSignKeyword_1_9_1_1_1_1_0_1());
            	                              													
            	                            }

            	                            }
            	                            break;

            	                    }

            	                    // InternalMcmodel.g:13848:13: ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' )
            	                    int alt436=2;
            	                    int LA436_0 = input.LA(1);

            	                    if ( (LA436_0==20) ) {
            	                        alt436=1;
            	                    }
            	                    else if ( (LA436_0==21) ) {
            	                        alt436=2;
            	                    }
            	                    else {
            	                        if (state.backtracking>0) {state.failed=true; return current;}
            	                        NoViableAltException nvae =
            	                            new NoViableAltException("", 436, 0, input);

            	                        throw nvae;
            	                    }
            	                    switch (alt436) {
            	                        case 1 :
            	                            // InternalMcmodel.g:13849:14: ( (lv_throwing_95_0= 'true' ) )
            	                            {
            	                            // InternalMcmodel.g:13849:14: ( (lv_throwing_95_0= 'true' ) )
            	                            // InternalMcmodel.g:13850:15: (lv_throwing_95_0= 'true' )
            	                            {
            	                            // InternalMcmodel.g:13850:15: (lv_throwing_95_0= 'true' )
            	                            // InternalMcmodel.g:13851:16: lv_throwing_95_0= 'true'
            	                            {
            	                            lv_throwing_95_0=(Token)match(input,20,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              																newLeafNode(lv_throwing_95_0, grammarAccess.getOverridePredicate_10Access().getThrowingTrueKeyword_1_9_1_1_1_1_1_0_0());
            	                              															
            	                            }
            	                            if ( state.backtracking==0 ) {

            	                              																if (current==null) {
            	                              																	current = createModelElement(grammarAccess.getOverridePredicate_10Rule());
            	                              																}
            	                              																setWithLastConsumed(current, "throwing", true, "true");
            	                              															
            	                            }

            	                            }


            	                            }


            	                            }
            	                            break;
            	                        case 2 :
            	                            // InternalMcmodel.g:13864:14: otherlv_96= 'false'
            	                            {
            	                            otherlv_96=(Token)match(input,21,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_96, grammarAccess.getOverridePredicate_10Access().getFalseKeyword_1_9_1_1_1_1_1_1());
            	                              													
            	                            }

            	                            }
            	                            break;

            	                    }


            	                    }


            	                    }
            	                    break;

            	            }


            	            }


            	            }
            	            break;

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getOverridePredicate_10Access().getUnorderedGroup_1());

            	    }


            	    }


            	    }
            	    break;
            	case 11 :
            	    // InternalMcmodel.g:13879:4: ({...}? => ( ({...}? => (otherlv_97= '&' ( (lv_timeDefined_98_0= 'time' ) ) (otherlv_99= '=' | otherlv_100= '==' ) ( (lv_time_101_0= RULE_PERCENTAGE ) ) ) ) ) )
            	    {
            	    // InternalMcmodel.g:13879:4: ({...}? => ( ({...}? => (otherlv_97= '&' ( (lv_timeDefined_98_0= 'time' ) ) (otherlv_99= '=' | otherlv_100= '==' ) ( (lv_time_101_0= RULE_PERCENTAGE ) ) ) ) ) )
            	    // InternalMcmodel.g:13880:5: {...}? => ( ({...}? => (otherlv_97= '&' ( (lv_timeDefined_98_0= 'time' ) ) (otherlv_99= '=' | otherlv_100= '==' ) ( (lv_time_101_0= RULE_PERCENTAGE ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_10Access().getUnorderedGroup_1(), 10) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_10", "getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_10Access().getUnorderedGroup_1(), 10)");
            	    }
            	    // InternalMcmodel.g:13880:118: ( ({...}? => (otherlv_97= '&' ( (lv_timeDefined_98_0= 'time' ) ) (otherlv_99= '=' | otherlv_100= '==' ) ( (lv_time_101_0= RULE_PERCENTAGE ) ) ) ) )
            	    // InternalMcmodel.g:13881:6: ({...}? => (otherlv_97= '&' ( (lv_timeDefined_98_0= 'time' ) ) (otherlv_99= '=' | otherlv_100= '==' ) ( (lv_time_101_0= RULE_PERCENTAGE ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getOverridePredicate_10Access().getUnorderedGroup_1(), 10);
            	    // InternalMcmodel.g:13884:9: ({...}? => (otherlv_97= '&' ( (lv_timeDefined_98_0= 'time' ) ) (otherlv_99= '=' | otherlv_100= '==' ) ( (lv_time_101_0= RULE_PERCENTAGE ) ) ) )
            	    // InternalMcmodel.g:13884:10: {...}? => (otherlv_97= '&' ( (lv_timeDefined_98_0= 'time' ) ) (otherlv_99= '=' | otherlv_100= '==' ) ( (lv_time_101_0= RULE_PERCENTAGE ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_10", "true");
            	    }
            	    // InternalMcmodel.g:13884:19: (otherlv_97= '&' ( (lv_timeDefined_98_0= 'time' ) ) (otherlv_99= '=' | otherlv_100= '==' ) ( (lv_time_101_0= RULE_PERCENTAGE ) ) )
            	    // InternalMcmodel.g:13884:20: otherlv_97= '&' ( (lv_timeDefined_98_0= 'time' ) ) (otherlv_99= '=' | otherlv_100= '==' ) ( (lv_time_101_0= RULE_PERCENTAGE ) )
            	    {
            	    otherlv_97=(Token)match(input,59,FOLLOW_56); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_97, grammarAccess.getOverridePredicate_10Access().getAmpersandKeyword_1_10_0());
            	      								
            	    }
            	    // InternalMcmodel.g:13888:9: ( (lv_timeDefined_98_0= 'time' ) )
            	    // InternalMcmodel.g:13889:10: (lv_timeDefined_98_0= 'time' )
            	    {
            	    // InternalMcmodel.g:13889:10: (lv_timeDefined_98_0= 'time' )
            	    // InternalMcmodel.g:13890:11: lv_timeDefined_98_0= 'time'
            	    {
            	    lv_timeDefined_98_0=(Token)match(input,72,FOLLOW_35); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											newLeafNode(lv_timeDefined_98_0, grammarAccess.getOverridePredicate_10Access().getTimeDefinedTimeKeyword_1_10_1_0());
            	      										
            	    }
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElement(grammarAccess.getOverridePredicate_10Rule());
            	      											}
            	      											setWithLastConsumed(current, "timeDefined", true, "time");
            	      										
            	    }

            	    }


            	    }

            	    // InternalMcmodel.g:13902:9: (otherlv_99= '=' | otherlv_100= '==' )
            	    int alt439=2;
            	    int LA439_0 = input.LA(1);

            	    if ( (LA439_0==18) ) {
            	        alt439=1;
            	    }
            	    else if ( (LA439_0==58) ) {
            	        alt439=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 439, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt439) {
            	        case 1 :
            	            // InternalMcmodel.g:13903:10: otherlv_99= '='
            	            {
            	            otherlv_99=(Token)match(input,18,FOLLOW_36); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(otherlv_99, grammarAccess.getOverridePredicate_10Access().getEqualsSignKeyword_1_10_2_0());
            	              									
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalMcmodel.g:13908:10: otherlv_100= '=='
            	            {
            	            otherlv_100=(Token)match(input,58,FOLLOW_36); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(otherlv_100, grammarAccess.getOverridePredicate_10Access().getEqualsSignEqualsSignKeyword_1_10_2_1());
            	              									
            	            }

            	            }
            	            break;

            	    }

            	    // InternalMcmodel.g:13913:9: ( (lv_time_101_0= RULE_PERCENTAGE ) )
            	    // InternalMcmodel.g:13914:10: (lv_time_101_0= RULE_PERCENTAGE )
            	    {
            	    // InternalMcmodel.g:13914:10: (lv_time_101_0= RULE_PERCENTAGE )
            	    // InternalMcmodel.g:13915:11: lv_time_101_0= RULE_PERCENTAGE
            	    {
            	    lv_time_101_0=(Token)match(input,RULE_PERCENTAGE,FOLLOW_37); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											newLeafNode(lv_time_101_0, grammarAccess.getOverridePredicate_10Access().getTimePERCENTAGETerminalRuleCall_1_10_3_0());
            	      										
            	    }
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElement(grammarAccess.getOverridePredicate_10Rule());
            	      											}
            	      											setWithLastConsumed(
            	      												current,
            	      												"time",
            	      												lv_time_101_0,
            	      												"com.raptor.mcmodel.Mcmodel.PERCENTAGE");
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getOverridePredicate_10Access().getUnorderedGroup_1());

            	    }


            	    }


            	    }
            	    break;
            	case 12 :
            	    // InternalMcmodel.g:13937:4: ({...}? => ( ({...}? => (otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) ) ) ) ) )
            	    {
            	    // InternalMcmodel.g:13937:4: ({...}? => ( ({...}? => (otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) ) ) ) ) )
            	    // InternalMcmodel.g:13938:5: {...}? => ( ({...}? => (otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_10Access().getUnorderedGroup_1(), 11) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_10", "getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_10Access().getUnorderedGroup_1(), 11)");
            	    }
            	    // InternalMcmodel.g:13938:118: ( ({...}? => (otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) ) ) ) )
            	    // InternalMcmodel.g:13939:6: ({...}? => (otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getOverridePredicate_10Access().getUnorderedGroup_1(), 11);
            	    // InternalMcmodel.g:13942:9: ({...}? => (otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) ) ) )
            	    // InternalMcmodel.g:13942:10: {...}? => (otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_10", "true");
            	    }
            	    // InternalMcmodel.g:13942:19: (otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) ) )
            	    // InternalMcmodel.g:13942:20: otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) )
            	    {
            	    otherlv_102=(Token)match(input,59,FOLLOW_57); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_102, grammarAccess.getOverridePredicate_10Access().getAmpersandKeyword_1_11_0());
            	      								
            	    }
            	    // InternalMcmodel.g:13946:9: ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) )
            	    // InternalMcmodel.g:13947:10: (lv_customModelDataDefined_103_0= 'custom_model_data' )
            	    {
            	    // InternalMcmodel.g:13947:10: (lv_customModelDataDefined_103_0= 'custom_model_data' )
            	    // InternalMcmodel.g:13948:11: lv_customModelDataDefined_103_0= 'custom_model_data'
            	    {
            	    lv_customModelDataDefined_103_0=(Token)match(input,73,FOLLOW_35); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											newLeafNode(lv_customModelDataDefined_103_0, grammarAccess.getOverridePredicate_10Access().getCustomModelDataDefinedCustom_model_dataKeyword_1_11_1_0());
            	      										
            	    }
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElement(grammarAccess.getOverridePredicate_10Rule());
            	      											}
            	      											setWithLastConsumed(current, "customModelDataDefined", true, "custom_model_data");
            	      										
            	    }

            	    }


            	    }

            	    // InternalMcmodel.g:13960:9: (otherlv_104= '=' | otherlv_105= '==' )
            	    int alt440=2;
            	    int LA440_0 = input.LA(1);

            	    if ( (LA440_0==18) ) {
            	        alt440=1;
            	    }
            	    else if ( (LA440_0==58) ) {
            	        alt440=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 440, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt440) {
            	        case 1 :
            	            // InternalMcmodel.g:13961:10: otherlv_104= '='
            	            {
            	            otherlv_104=(Token)match(input,18,FOLLOW_29); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(otherlv_104, grammarAccess.getOverridePredicate_10Access().getEqualsSignKeyword_1_11_2_0());
            	              									
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalMcmodel.g:13966:10: otherlv_105= '=='
            	            {
            	            otherlv_105=(Token)match(input,58,FOLLOW_29); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(otherlv_105, grammarAccess.getOverridePredicate_10Access().getEqualsSignEqualsSignKeyword_1_11_2_1());
            	              									
            	            }

            	            }
            	            break;

            	    }

            	    // InternalMcmodel.g:13971:9: ( (lv_customModelData_106_0= ruleLONG ) )
            	    // InternalMcmodel.g:13972:10: (lv_customModelData_106_0= ruleLONG )
            	    {
            	    // InternalMcmodel.g:13972:10: (lv_customModelData_106_0= ruleLONG )
            	    // InternalMcmodel.g:13973:11: lv_customModelData_106_0= ruleLONG
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getOverridePredicate_10Access().getCustomModelDataLONGParserRuleCall_1_11_3_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_37);
            	    lv_customModelData_106_0=ruleLONG();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getOverridePredicate_10Rule());
            	      											}
            	      											set(
            	      												current,
            	      												"customModelData",
            	      												lv_customModelData_106_0,
            	      												"com.raptor.mcmodel.Mcmodel.LONG");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getOverridePredicate_10Access().getUnorderedGroup_1());

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop441;
                }
            } while (true);


            }


            }

            getUnorderedGroupHelper().leave(grammarAccess.getOverridePredicate_10Access().getUnorderedGroup_1());

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOverridePredicate_10"


    // $ANTLR start "entryRuleOverridePredicate_11"
    // InternalMcmodel.g:14007:1: entryRuleOverridePredicate_11 returns [EObject current=null] : iv_ruleOverridePredicate_11= ruleOverridePredicate_11 EOF ;
    public final EObject entryRuleOverridePredicate_11() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleOverridePredicate_11 = null;


        try {
            // InternalMcmodel.g:14007:61: (iv_ruleOverridePredicate_11= ruleOverridePredicate_11 EOF )
            // InternalMcmodel.g:14008:2: iv_ruleOverridePredicate_11= ruleOverridePredicate_11 EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOverridePredicate_11Rule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOverridePredicate_11=ruleOverridePredicate_11();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOverridePredicate_11; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOverridePredicate_11"


    // $ANTLR start "ruleOverridePredicate_11"
    // InternalMcmodel.g:14014:1: ruleOverridePredicate_11 returns [EObject current=null] : ( ( ( ( (lv_throwingDefined_0_0= '!' ) ) otherlv_1= 'throwing' ) | ( ( (lv_throwingDefined_2_0= 'throwing' ) ) ( (otherlv_3= '!=' ( ( (lv_throwing_4_0= 'false' ) ) | otherlv_5= 'true' ) ) | ( (otherlv_6= '=' | otherlv_7= '==' ) ( ( (lv_throwing_8_0= 'true' ) ) | otherlv_9= 'false' ) ) ) ) ) ( ( ( ( ({...}? => ( ({...}? => (otherlv_11= '&' ( (lv_angleDefined_12_0= 'angle' ) ) (otherlv_13= '=' | otherlv_14= '==' ) ( (lv_angle_15_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= '&' ( ( ( (lv_blockingDefined_17_0= '!' ) ) otherlv_18= 'blocking' ) | ( ( (lv_blockingDefined_19_0= 'blocking' ) ) ( (otherlv_20= '!=' ( ( (lv_blocking_21_0= 'false' ) ) | otherlv_22= 'true' ) ) | ( (otherlv_23= '=' | otherlv_24= '==' ) ( ( (lv_blocking_25_0= 'true' ) ) | otherlv_26= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= '&' ( ( ( (lv_brokenDefined_28_0= '!' ) ) otherlv_29= 'broken' ) | ( ( (lv_brokenDefined_30_0= 'broken' ) ) ( (otherlv_31= '!=' ( ( (lv_broken_32_0= 'false' ) ) | otherlv_33= 'true' ) ) | ( (otherlv_34= '=' | otherlv_35= '==' ) ( ( (lv_broken_36_0= 'true' ) ) | otherlv_37= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_38= '&' ( ( ( (lv_castDefined_39_0= '!' ) ) otherlv_40= 'cast' ) | ( ( (lv_castDefined_41_0= 'cast' ) ) ( (otherlv_42= '!=' ( ( (lv_cast_43_0= 'false' ) ) | otherlv_44= 'true' ) ) | ( (otherlv_45= '=' | otherlv_46= '==' ) ( ( (lv_cast_47_0= 'true' ) ) | otherlv_48= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_49= '&' ( (lv_cooldownDefined_50_0= 'cooldown' ) ) (otherlv_51= '=' | otherlv_52= '==' ) ( (lv_cooldown_53_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_54= '&' ( (lv_damageDefined_55_0= 'damage' ) ) (otherlv_56= '=' | otherlv_57= '==' ) ( (lv_damage_58_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_59= '&' ( ( ( (lv_damagedDefined_60_0= '!' ) ) otherlv_61= 'damaged' ) | ( ( (lv_damagedDefined_62_0= 'damaged' ) ) ( (otherlv_63= '!=' ( ( (lv_damaged_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_damaged_68_0= 'true' ) ) | otherlv_69= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_70= '&' ( ( ( (lv_lefthandedDefined_71_0= '!' ) ) otherlv_72= 'lefthanded' ) | ( ( (lv_lefthandedDefined_73_0= 'lefthanded' ) ) ( (otherlv_74= '!=' ( ( (lv_lefthanded_75_0= 'false' ) ) | otherlv_76= 'true' ) ) | ( (otherlv_77= '=' | otherlv_78= '==' ) ( ( (lv_lefthanded_79_0= 'true' ) ) | otherlv_80= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_81= '&' ( (lv_pullDefined_82_0= 'pull' ) ) (otherlv_83= '=' | otherlv_84= '==' ) ( (lv_pull_85_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_86= '&' ( ( ( (lv_pullingDefined_87_0= '!' ) ) otherlv_88= 'pulling' ) | ( ( (lv_pullingDefined_89_0= 'pulling' ) ) ( (otherlv_90= '!=' ( ( (lv_pulling_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_pulling_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_97= '&' ( (lv_timeDefined_98_0= 'time' ) ) (otherlv_99= '=' | otherlv_100= '==' ) ( (lv_time_101_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) ) ) ) ) ) )* ) ) ) ) ;
    public final EObject ruleOverridePredicate_11() throws RecognitionException {
        EObject current = null;

        Token lv_throwingDefined_0_0=null;
        Token otherlv_1=null;
        Token lv_throwingDefined_2_0=null;
        Token otherlv_3=null;
        Token lv_throwing_4_0=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        Token lv_throwing_8_0=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        Token lv_angleDefined_12_0=null;
        Token otherlv_13=null;
        Token otherlv_14=null;
        Token lv_angle_15_0=null;
        Token otherlv_16=null;
        Token lv_blockingDefined_17_0=null;
        Token otherlv_18=null;
        Token lv_blockingDefined_19_0=null;
        Token otherlv_20=null;
        Token lv_blocking_21_0=null;
        Token otherlv_22=null;
        Token otherlv_23=null;
        Token otherlv_24=null;
        Token lv_blocking_25_0=null;
        Token otherlv_26=null;
        Token otherlv_27=null;
        Token lv_brokenDefined_28_0=null;
        Token otherlv_29=null;
        Token lv_brokenDefined_30_0=null;
        Token otherlv_31=null;
        Token lv_broken_32_0=null;
        Token otherlv_33=null;
        Token otherlv_34=null;
        Token otherlv_35=null;
        Token lv_broken_36_0=null;
        Token otherlv_37=null;
        Token otherlv_38=null;
        Token lv_castDefined_39_0=null;
        Token otherlv_40=null;
        Token lv_castDefined_41_0=null;
        Token otherlv_42=null;
        Token lv_cast_43_0=null;
        Token otherlv_44=null;
        Token otherlv_45=null;
        Token otherlv_46=null;
        Token lv_cast_47_0=null;
        Token otherlv_48=null;
        Token otherlv_49=null;
        Token lv_cooldownDefined_50_0=null;
        Token otherlv_51=null;
        Token otherlv_52=null;
        Token lv_cooldown_53_0=null;
        Token otherlv_54=null;
        Token lv_damageDefined_55_0=null;
        Token otherlv_56=null;
        Token otherlv_57=null;
        Token lv_damage_58_0=null;
        Token otherlv_59=null;
        Token lv_damagedDefined_60_0=null;
        Token otherlv_61=null;
        Token lv_damagedDefined_62_0=null;
        Token otherlv_63=null;
        Token lv_damaged_64_0=null;
        Token otherlv_65=null;
        Token otherlv_66=null;
        Token otherlv_67=null;
        Token lv_damaged_68_0=null;
        Token otherlv_69=null;
        Token otherlv_70=null;
        Token lv_lefthandedDefined_71_0=null;
        Token otherlv_72=null;
        Token lv_lefthandedDefined_73_0=null;
        Token otherlv_74=null;
        Token lv_lefthanded_75_0=null;
        Token otherlv_76=null;
        Token otherlv_77=null;
        Token otherlv_78=null;
        Token lv_lefthanded_79_0=null;
        Token otherlv_80=null;
        Token otherlv_81=null;
        Token lv_pullDefined_82_0=null;
        Token otherlv_83=null;
        Token otherlv_84=null;
        Token lv_pull_85_0=null;
        Token otherlv_86=null;
        Token lv_pullingDefined_87_0=null;
        Token otherlv_88=null;
        Token lv_pullingDefined_89_0=null;
        Token otherlv_90=null;
        Token lv_pulling_91_0=null;
        Token otherlv_92=null;
        Token otherlv_93=null;
        Token otherlv_94=null;
        Token lv_pulling_95_0=null;
        Token otherlv_96=null;
        Token otherlv_97=null;
        Token lv_timeDefined_98_0=null;
        Token otherlv_99=null;
        Token otherlv_100=null;
        Token lv_time_101_0=null;
        Token otherlv_102=null;
        Token lv_customModelDataDefined_103_0=null;
        Token otherlv_104=null;
        Token otherlv_105=null;
        AntlrDatatypeRuleToken lv_customModelData_106_0 = null;



        	enterRule();

        try {
            // InternalMcmodel.g:14020:2: ( ( ( ( ( (lv_throwingDefined_0_0= '!' ) ) otherlv_1= 'throwing' ) | ( ( (lv_throwingDefined_2_0= 'throwing' ) ) ( (otherlv_3= '!=' ( ( (lv_throwing_4_0= 'false' ) ) | otherlv_5= 'true' ) ) | ( (otherlv_6= '=' | otherlv_7= '==' ) ( ( (lv_throwing_8_0= 'true' ) ) | otherlv_9= 'false' ) ) ) ) ) ( ( ( ( ({...}? => ( ({...}? => (otherlv_11= '&' ( (lv_angleDefined_12_0= 'angle' ) ) (otherlv_13= '=' | otherlv_14= '==' ) ( (lv_angle_15_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= '&' ( ( ( (lv_blockingDefined_17_0= '!' ) ) otherlv_18= 'blocking' ) | ( ( (lv_blockingDefined_19_0= 'blocking' ) ) ( (otherlv_20= '!=' ( ( (lv_blocking_21_0= 'false' ) ) | otherlv_22= 'true' ) ) | ( (otherlv_23= '=' | otherlv_24= '==' ) ( ( (lv_blocking_25_0= 'true' ) ) | otherlv_26= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= '&' ( ( ( (lv_brokenDefined_28_0= '!' ) ) otherlv_29= 'broken' ) | ( ( (lv_brokenDefined_30_0= 'broken' ) ) ( (otherlv_31= '!=' ( ( (lv_broken_32_0= 'false' ) ) | otherlv_33= 'true' ) ) | ( (otherlv_34= '=' | otherlv_35= '==' ) ( ( (lv_broken_36_0= 'true' ) ) | otherlv_37= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_38= '&' ( ( ( (lv_castDefined_39_0= '!' ) ) otherlv_40= 'cast' ) | ( ( (lv_castDefined_41_0= 'cast' ) ) ( (otherlv_42= '!=' ( ( (lv_cast_43_0= 'false' ) ) | otherlv_44= 'true' ) ) | ( (otherlv_45= '=' | otherlv_46= '==' ) ( ( (lv_cast_47_0= 'true' ) ) | otherlv_48= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_49= '&' ( (lv_cooldownDefined_50_0= 'cooldown' ) ) (otherlv_51= '=' | otherlv_52= '==' ) ( (lv_cooldown_53_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_54= '&' ( (lv_damageDefined_55_0= 'damage' ) ) (otherlv_56= '=' | otherlv_57= '==' ) ( (lv_damage_58_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_59= '&' ( ( ( (lv_damagedDefined_60_0= '!' ) ) otherlv_61= 'damaged' ) | ( ( (lv_damagedDefined_62_0= 'damaged' ) ) ( (otherlv_63= '!=' ( ( (lv_damaged_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_damaged_68_0= 'true' ) ) | otherlv_69= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_70= '&' ( ( ( (lv_lefthandedDefined_71_0= '!' ) ) otherlv_72= 'lefthanded' ) | ( ( (lv_lefthandedDefined_73_0= 'lefthanded' ) ) ( (otherlv_74= '!=' ( ( (lv_lefthanded_75_0= 'false' ) ) | otherlv_76= 'true' ) ) | ( (otherlv_77= '=' | otherlv_78= '==' ) ( ( (lv_lefthanded_79_0= 'true' ) ) | otherlv_80= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_81= '&' ( (lv_pullDefined_82_0= 'pull' ) ) (otherlv_83= '=' | otherlv_84= '==' ) ( (lv_pull_85_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_86= '&' ( ( ( (lv_pullingDefined_87_0= '!' ) ) otherlv_88= 'pulling' ) | ( ( (lv_pullingDefined_89_0= 'pulling' ) ) ( (otherlv_90= '!=' ( ( (lv_pulling_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_pulling_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_97= '&' ( (lv_timeDefined_98_0= 'time' ) ) (otherlv_99= '=' | otherlv_100= '==' ) ( (lv_time_101_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) ) ) ) ) ) )* ) ) ) ) )
            // InternalMcmodel.g:14021:2: ( ( ( ( (lv_throwingDefined_0_0= '!' ) ) otherlv_1= 'throwing' ) | ( ( (lv_throwingDefined_2_0= 'throwing' ) ) ( (otherlv_3= '!=' ( ( (lv_throwing_4_0= 'false' ) ) | otherlv_5= 'true' ) ) | ( (otherlv_6= '=' | otherlv_7= '==' ) ( ( (lv_throwing_8_0= 'true' ) ) | otherlv_9= 'false' ) ) ) ) ) ( ( ( ( ({...}? => ( ({...}? => (otherlv_11= '&' ( (lv_angleDefined_12_0= 'angle' ) ) (otherlv_13= '=' | otherlv_14= '==' ) ( (lv_angle_15_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= '&' ( ( ( (lv_blockingDefined_17_0= '!' ) ) otherlv_18= 'blocking' ) | ( ( (lv_blockingDefined_19_0= 'blocking' ) ) ( (otherlv_20= '!=' ( ( (lv_blocking_21_0= 'false' ) ) | otherlv_22= 'true' ) ) | ( (otherlv_23= '=' | otherlv_24= '==' ) ( ( (lv_blocking_25_0= 'true' ) ) | otherlv_26= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= '&' ( ( ( (lv_brokenDefined_28_0= '!' ) ) otherlv_29= 'broken' ) | ( ( (lv_brokenDefined_30_0= 'broken' ) ) ( (otherlv_31= '!=' ( ( (lv_broken_32_0= 'false' ) ) | otherlv_33= 'true' ) ) | ( (otherlv_34= '=' | otherlv_35= '==' ) ( ( (lv_broken_36_0= 'true' ) ) | otherlv_37= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_38= '&' ( ( ( (lv_castDefined_39_0= '!' ) ) otherlv_40= 'cast' ) | ( ( (lv_castDefined_41_0= 'cast' ) ) ( (otherlv_42= '!=' ( ( (lv_cast_43_0= 'false' ) ) | otherlv_44= 'true' ) ) | ( (otherlv_45= '=' | otherlv_46= '==' ) ( ( (lv_cast_47_0= 'true' ) ) | otherlv_48= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_49= '&' ( (lv_cooldownDefined_50_0= 'cooldown' ) ) (otherlv_51= '=' | otherlv_52= '==' ) ( (lv_cooldown_53_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_54= '&' ( (lv_damageDefined_55_0= 'damage' ) ) (otherlv_56= '=' | otherlv_57= '==' ) ( (lv_damage_58_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_59= '&' ( ( ( (lv_damagedDefined_60_0= '!' ) ) otherlv_61= 'damaged' ) | ( ( (lv_damagedDefined_62_0= 'damaged' ) ) ( (otherlv_63= '!=' ( ( (lv_damaged_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_damaged_68_0= 'true' ) ) | otherlv_69= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_70= '&' ( ( ( (lv_lefthandedDefined_71_0= '!' ) ) otherlv_72= 'lefthanded' ) | ( ( (lv_lefthandedDefined_73_0= 'lefthanded' ) ) ( (otherlv_74= '!=' ( ( (lv_lefthanded_75_0= 'false' ) ) | otherlv_76= 'true' ) ) | ( (otherlv_77= '=' | otherlv_78= '==' ) ( ( (lv_lefthanded_79_0= 'true' ) ) | otherlv_80= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_81= '&' ( (lv_pullDefined_82_0= 'pull' ) ) (otherlv_83= '=' | otherlv_84= '==' ) ( (lv_pull_85_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_86= '&' ( ( ( (lv_pullingDefined_87_0= '!' ) ) otherlv_88= 'pulling' ) | ( ( (lv_pullingDefined_89_0= 'pulling' ) ) ( (otherlv_90= '!=' ( ( (lv_pulling_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_pulling_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_97= '&' ( (lv_timeDefined_98_0= 'time' ) ) (otherlv_99= '=' | otherlv_100= '==' ) ( (lv_time_101_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) ) ) ) ) ) )* ) ) ) )
            {
            // InternalMcmodel.g:14021:2: ( ( ( ( (lv_throwingDefined_0_0= '!' ) ) otherlv_1= 'throwing' ) | ( ( (lv_throwingDefined_2_0= 'throwing' ) ) ( (otherlv_3= '!=' ( ( (lv_throwing_4_0= 'false' ) ) | otherlv_5= 'true' ) ) | ( (otherlv_6= '=' | otherlv_7= '==' ) ( ( (lv_throwing_8_0= 'true' ) ) | otherlv_9= 'false' ) ) ) ) ) ( ( ( ( ({...}? => ( ({...}? => (otherlv_11= '&' ( (lv_angleDefined_12_0= 'angle' ) ) (otherlv_13= '=' | otherlv_14= '==' ) ( (lv_angle_15_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= '&' ( ( ( (lv_blockingDefined_17_0= '!' ) ) otherlv_18= 'blocking' ) | ( ( (lv_blockingDefined_19_0= 'blocking' ) ) ( (otherlv_20= '!=' ( ( (lv_blocking_21_0= 'false' ) ) | otherlv_22= 'true' ) ) | ( (otherlv_23= '=' | otherlv_24= '==' ) ( ( (lv_blocking_25_0= 'true' ) ) | otherlv_26= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= '&' ( ( ( (lv_brokenDefined_28_0= '!' ) ) otherlv_29= 'broken' ) | ( ( (lv_brokenDefined_30_0= 'broken' ) ) ( (otherlv_31= '!=' ( ( (lv_broken_32_0= 'false' ) ) | otherlv_33= 'true' ) ) | ( (otherlv_34= '=' | otherlv_35= '==' ) ( ( (lv_broken_36_0= 'true' ) ) | otherlv_37= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_38= '&' ( ( ( (lv_castDefined_39_0= '!' ) ) otherlv_40= 'cast' ) | ( ( (lv_castDefined_41_0= 'cast' ) ) ( (otherlv_42= '!=' ( ( (lv_cast_43_0= 'false' ) ) | otherlv_44= 'true' ) ) | ( (otherlv_45= '=' | otherlv_46= '==' ) ( ( (lv_cast_47_0= 'true' ) ) | otherlv_48= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_49= '&' ( (lv_cooldownDefined_50_0= 'cooldown' ) ) (otherlv_51= '=' | otherlv_52= '==' ) ( (lv_cooldown_53_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_54= '&' ( (lv_damageDefined_55_0= 'damage' ) ) (otherlv_56= '=' | otherlv_57= '==' ) ( (lv_damage_58_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_59= '&' ( ( ( (lv_damagedDefined_60_0= '!' ) ) otherlv_61= 'damaged' ) | ( ( (lv_damagedDefined_62_0= 'damaged' ) ) ( (otherlv_63= '!=' ( ( (lv_damaged_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_damaged_68_0= 'true' ) ) | otherlv_69= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_70= '&' ( ( ( (lv_lefthandedDefined_71_0= '!' ) ) otherlv_72= 'lefthanded' ) | ( ( (lv_lefthandedDefined_73_0= 'lefthanded' ) ) ( (otherlv_74= '!=' ( ( (lv_lefthanded_75_0= 'false' ) ) | otherlv_76= 'true' ) ) | ( (otherlv_77= '=' | otherlv_78= '==' ) ( ( (lv_lefthanded_79_0= 'true' ) ) | otherlv_80= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_81= '&' ( (lv_pullDefined_82_0= 'pull' ) ) (otherlv_83= '=' | otherlv_84= '==' ) ( (lv_pull_85_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_86= '&' ( ( ( (lv_pullingDefined_87_0= '!' ) ) otherlv_88= 'pulling' ) | ( ( (lv_pullingDefined_89_0= 'pulling' ) ) ( (otherlv_90= '!=' ( ( (lv_pulling_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_pulling_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_97= '&' ( (lv_timeDefined_98_0= 'time' ) ) (otherlv_99= '=' | otherlv_100= '==' ) ( (lv_time_101_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) ) ) ) ) ) )* ) ) ) )
            // InternalMcmodel.g:14022:3: ( ( ( (lv_throwingDefined_0_0= '!' ) ) otherlv_1= 'throwing' ) | ( ( (lv_throwingDefined_2_0= 'throwing' ) ) ( (otherlv_3= '!=' ( ( (lv_throwing_4_0= 'false' ) ) | otherlv_5= 'true' ) ) | ( (otherlv_6= '=' | otherlv_7= '==' ) ( ( (lv_throwing_8_0= 'true' ) ) | otherlv_9= 'false' ) ) ) ) ) ( ( ( ( ({...}? => ( ({...}? => (otherlv_11= '&' ( (lv_angleDefined_12_0= 'angle' ) ) (otherlv_13= '=' | otherlv_14= '==' ) ( (lv_angle_15_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= '&' ( ( ( (lv_blockingDefined_17_0= '!' ) ) otherlv_18= 'blocking' ) | ( ( (lv_blockingDefined_19_0= 'blocking' ) ) ( (otherlv_20= '!=' ( ( (lv_blocking_21_0= 'false' ) ) | otherlv_22= 'true' ) ) | ( (otherlv_23= '=' | otherlv_24= '==' ) ( ( (lv_blocking_25_0= 'true' ) ) | otherlv_26= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= '&' ( ( ( (lv_brokenDefined_28_0= '!' ) ) otherlv_29= 'broken' ) | ( ( (lv_brokenDefined_30_0= 'broken' ) ) ( (otherlv_31= '!=' ( ( (lv_broken_32_0= 'false' ) ) | otherlv_33= 'true' ) ) | ( (otherlv_34= '=' | otherlv_35= '==' ) ( ( (lv_broken_36_0= 'true' ) ) | otherlv_37= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_38= '&' ( ( ( (lv_castDefined_39_0= '!' ) ) otherlv_40= 'cast' ) | ( ( (lv_castDefined_41_0= 'cast' ) ) ( (otherlv_42= '!=' ( ( (lv_cast_43_0= 'false' ) ) | otherlv_44= 'true' ) ) | ( (otherlv_45= '=' | otherlv_46= '==' ) ( ( (lv_cast_47_0= 'true' ) ) | otherlv_48= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_49= '&' ( (lv_cooldownDefined_50_0= 'cooldown' ) ) (otherlv_51= '=' | otherlv_52= '==' ) ( (lv_cooldown_53_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_54= '&' ( (lv_damageDefined_55_0= 'damage' ) ) (otherlv_56= '=' | otherlv_57= '==' ) ( (lv_damage_58_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_59= '&' ( ( ( (lv_damagedDefined_60_0= '!' ) ) otherlv_61= 'damaged' ) | ( ( (lv_damagedDefined_62_0= 'damaged' ) ) ( (otherlv_63= '!=' ( ( (lv_damaged_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_damaged_68_0= 'true' ) ) | otherlv_69= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_70= '&' ( ( ( (lv_lefthandedDefined_71_0= '!' ) ) otherlv_72= 'lefthanded' ) | ( ( (lv_lefthandedDefined_73_0= 'lefthanded' ) ) ( (otherlv_74= '!=' ( ( (lv_lefthanded_75_0= 'false' ) ) | otherlv_76= 'true' ) ) | ( (otherlv_77= '=' | otherlv_78= '==' ) ( ( (lv_lefthanded_79_0= 'true' ) ) | otherlv_80= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_81= '&' ( (lv_pullDefined_82_0= 'pull' ) ) (otherlv_83= '=' | otherlv_84= '==' ) ( (lv_pull_85_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_86= '&' ( ( ( (lv_pullingDefined_87_0= '!' ) ) otherlv_88= 'pulling' ) | ( ( (lv_pullingDefined_89_0= 'pulling' ) ) ( (otherlv_90= '!=' ( ( (lv_pulling_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_pulling_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_97= '&' ( (lv_timeDefined_98_0= 'time' ) ) (otherlv_99= '=' | otherlv_100= '==' ) ( (lv_time_101_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) ) ) ) ) ) )* ) ) )
            {
            // InternalMcmodel.g:14022:3: ( ( ( (lv_throwingDefined_0_0= '!' ) ) otherlv_1= 'throwing' ) | ( ( (lv_throwingDefined_2_0= 'throwing' ) ) ( (otherlv_3= '!=' ( ( (lv_throwing_4_0= 'false' ) ) | otherlv_5= 'true' ) ) | ( (otherlv_6= '=' | otherlv_7= '==' ) ( ( (lv_throwing_8_0= 'true' ) ) | otherlv_9= 'false' ) ) ) ) )
            int alt446=2;
            int LA446_0 = input.LA(1);

            if ( (LA446_0==60) ) {
                alt446=1;
            }
            else if ( (LA446_0==71) ) {
                alt446=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 446, 0, input);

                throw nvae;
            }
            switch (alt446) {
                case 1 :
                    // InternalMcmodel.g:14023:4: ( ( (lv_throwingDefined_0_0= '!' ) ) otherlv_1= 'throwing' )
                    {
                    // InternalMcmodel.g:14023:4: ( ( (lv_throwingDefined_0_0= '!' ) ) otherlv_1= 'throwing' )
                    // InternalMcmodel.g:14024:5: ( (lv_throwingDefined_0_0= '!' ) ) otherlv_1= 'throwing'
                    {
                    // InternalMcmodel.g:14024:5: ( (lv_throwingDefined_0_0= '!' ) )
                    // InternalMcmodel.g:14025:6: (lv_throwingDefined_0_0= '!' )
                    {
                    // InternalMcmodel.g:14025:6: (lv_throwingDefined_0_0= '!' )
                    // InternalMcmodel.g:14026:7: lv_throwingDefined_0_0= '!'
                    {
                    lv_throwingDefined_0_0=(Token)match(input,60,FOLLOW_55); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							newLeafNode(lv_throwingDefined_0_0, grammarAccess.getOverridePredicate_11Access().getThrowingDefinedExclamationMarkKeyword_0_0_0_0());
                      						
                    }
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElement(grammarAccess.getOverridePredicate_11Rule());
                      							}
                      							setWithLastConsumed(current, "throwingDefined", true, "!");
                      						
                    }

                    }


                    }

                    otherlv_1=(Token)match(input,71,FOLLOW_37); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_1, grammarAccess.getOverridePredicate_11Access().getThrowingKeyword_0_0_1());
                      				
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalMcmodel.g:14044:4: ( ( (lv_throwingDefined_2_0= 'throwing' ) ) ( (otherlv_3= '!=' ( ( (lv_throwing_4_0= 'false' ) ) | otherlv_5= 'true' ) ) | ( (otherlv_6= '=' | otherlv_7= '==' ) ( ( (lv_throwing_8_0= 'true' ) ) | otherlv_9= 'false' ) ) ) )
                    {
                    // InternalMcmodel.g:14044:4: ( ( (lv_throwingDefined_2_0= 'throwing' ) ) ( (otherlv_3= '!=' ( ( (lv_throwing_4_0= 'false' ) ) | otherlv_5= 'true' ) ) | ( (otherlv_6= '=' | otherlv_7= '==' ) ( ( (lv_throwing_8_0= 'true' ) ) | otherlv_9= 'false' ) ) ) )
                    // InternalMcmodel.g:14045:5: ( (lv_throwingDefined_2_0= 'throwing' ) ) ( (otherlv_3= '!=' ( ( (lv_throwing_4_0= 'false' ) ) | otherlv_5= 'true' ) ) | ( (otherlv_6= '=' | otherlv_7= '==' ) ( ( (lv_throwing_8_0= 'true' ) ) | otherlv_9= 'false' ) ) )
                    {
                    // InternalMcmodel.g:14045:5: ( (lv_throwingDefined_2_0= 'throwing' ) )
                    // InternalMcmodel.g:14046:6: (lv_throwingDefined_2_0= 'throwing' )
                    {
                    // InternalMcmodel.g:14046:6: (lv_throwingDefined_2_0= 'throwing' )
                    // InternalMcmodel.g:14047:7: lv_throwingDefined_2_0= 'throwing'
                    {
                    lv_throwingDefined_2_0=(Token)match(input,71,FOLLOW_40); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							newLeafNode(lv_throwingDefined_2_0, grammarAccess.getOverridePredicate_11Access().getThrowingDefinedThrowingKeyword_0_1_0_0());
                      						
                    }
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElement(grammarAccess.getOverridePredicate_11Rule());
                      							}
                      							setWithLastConsumed(current, "throwingDefined", true, "throwing");
                      						
                    }

                    }


                    }

                    // InternalMcmodel.g:14059:5: ( (otherlv_3= '!=' ( ( (lv_throwing_4_0= 'false' ) ) | otherlv_5= 'true' ) ) | ( (otherlv_6= '=' | otherlv_7= '==' ) ( ( (lv_throwing_8_0= 'true' ) ) | otherlv_9= 'false' ) ) )
                    int alt445=2;
                    int LA445_0 = input.LA(1);

                    if ( (LA445_0==62) ) {
                        alt445=1;
                    }
                    else if ( (LA445_0==18||LA445_0==58) ) {
                        alt445=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 445, 0, input);

                        throw nvae;
                    }
                    switch (alt445) {
                        case 1 :
                            // InternalMcmodel.g:14060:6: (otherlv_3= '!=' ( ( (lv_throwing_4_0= 'false' ) ) | otherlv_5= 'true' ) )
                            {
                            // InternalMcmodel.g:14060:6: (otherlv_3= '!=' ( ( (lv_throwing_4_0= 'false' ) ) | otherlv_5= 'true' ) )
                            // InternalMcmodel.g:14061:7: otherlv_3= '!=' ( ( (lv_throwing_4_0= 'false' ) ) | otherlv_5= 'true' )
                            {
                            otherlv_3=(Token)match(input,62,FOLLOW_7); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(otherlv_3, grammarAccess.getOverridePredicate_11Access().getExclamationMarkEqualsSignKeyword_0_1_1_0_0());
                              						
                            }
                            // InternalMcmodel.g:14065:7: ( ( (lv_throwing_4_0= 'false' ) ) | otherlv_5= 'true' )
                            int alt442=2;
                            int LA442_0 = input.LA(1);

                            if ( (LA442_0==21) ) {
                                alt442=1;
                            }
                            else if ( (LA442_0==20) ) {
                                alt442=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 442, 0, input);

                                throw nvae;
                            }
                            switch (alt442) {
                                case 1 :
                                    // InternalMcmodel.g:14066:8: ( (lv_throwing_4_0= 'false' ) )
                                    {
                                    // InternalMcmodel.g:14066:8: ( (lv_throwing_4_0= 'false' ) )
                                    // InternalMcmodel.g:14067:9: (lv_throwing_4_0= 'false' )
                                    {
                                    // InternalMcmodel.g:14067:9: (lv_throwing_4_0= 'false' )
                                    // InternalMcmodel.g:14068:10: lv_throwing_4_0= 'false'
                                    {
                                    lv_throwing_4_0=(Token)match(input,21,FOLLOW_37); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      										newLeafNode(lv_throwing_4_0, grammarAccess.getOverridePredicate_11Access().getThrowingFalseKeyword_0_1_1_0_1_0_0());
                                      									
                                    }
                                    if ( state.backtracking==0 ) {

                                      										if (current==null) {
                                      											current = createModelElement(grammarAccess.getOverridePredicate_11Rule());
                                      										}
                                      										setWithLastConsumed(current, "throwing", true, "false");
                                      									
                                    }

                                    }


                                    }


                                    }
                                    break;
                                case 2 :
                                    // InternalMcmodel.g:14081:8: otherlv_5= 'true'
                                    {
                                    otherlv_5=(Token)match(input,20,FOLLOW_37); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(otherlv_5, grammarAccess.getOverridePredicate_11Access().getTrueKeyword_0_1_1_0_1_1());
                                      							
                                    }

                                    }
                                    break;

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalMcmodel.g:14088:6: ( (otherlv_6= '=' | otherlv_7= '==' ) ( ( (lv_throwing_8_0= 'true' ) ) | otherlv_9= 'false' ) )
                            {
                            // InternalMcmodel.g:14088:6: ( (otherlv_6= '=' | otherlv_7= '==' ) ( ( (lv_throwing_8_0= 'true' ) ) | otherlv_9= 'false' ) )
                            // InternalMcmodel.g:14089:7: (otherlv_6= '=' | otherlv_7= '==' ) ( ( (lv_throwing_8_0= 'true' ) ) | otherlv_9= 'false' )
                            {
                            // InternalMcmodel.g:14089:7: (otherlv_6= '=' | otherlv_7= '==' )
                            int alt443=2;
                            int LA443_0 = input.LA(1);

                            if ( (LA443_0==18) ) {
                                alt443=1;
                            }
                            else if ( (LA443_0==58) ) {
                                alt443=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 443, 0, input);

                                throw nvae;
                            }
                            switch (alt443) {
                                case 1 :
                                    // InternalMcmodel.g:14090:8: otherlv_6= '='
                                    {
                                    otherlv_6=(Token)match(input,18,FOLLOW_7); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(otherlv_6, grammarAccess.getOverridePredicate_11Access().getEqualsSignKeyword_0_1_1_1_0_0());
                                      							
                                    }

                                    }
                                    break;
                                case 2 :
                                    // InternalMcmodel.g:14095:8: otherlv_7= '=='
                                    {
                                    otherlv_7=(Token)match(input,58,FOLLOW_7); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(otherlv_7, grammarAccess.getOverridePredicate_11Access().getEqualsSignEqualsSignKeyword_0_1_1_1_0_1());
                                      							
                                    }

                                    }
                                    break;

                            }

                            // InternalMcmodel.g:14100:7: ( ( (lv_throwing_8_0= 'true' ) ) | otherlv_9= 'false' )
                            int alt444=2;
                            int LA444_0 = input.LA(1);

                            if ( (LA444_0==20) ) {
                                alt444=1;
                            }
                            else if ( (LA444_0==21) ) {
                                alt444=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 444, 0, input);

                                throw nvae;
                            }
                            switch (alt444) {
                                case 1 :
                                    // InternalMcmodel.g:14101:8: ( (lv_throwing_8_0= 'true' ) )
                                    {
                                    // InternalMcmodel.g:14101:8: ( (lv_throwing_8_0= 'true' ) )
                                    // InternalMcmodel.g:14102:9: (lv_throwing_8_0= 'true' )
                                    {
                                    // InternalMcmodel.g:14102:9: (lv_throwing_8_0= 'true' )
                                    // InternalMcmodel.g:14103:10: lv_throwing_8_0= 'true'
                                    {
                                    lv_throwing_8_0=(Token)match(input,20,FOLLOW_37); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      										newLeafNode(lv_throwing_8_0, grammarAccess.getOverridePredicate_11Access().getThrowingTrueKeyword_0_1_1_1_1_0_0());
                                      									
                                    }
                                    if ( state.backtracking==0 ) {

                                      										if (current==null) {
                                      											current = createModelElement(grammarAccess.getOverridePredicate_11Rule());
                                      										}
                                      										setWithLastConsumed(current, "throwing", true, "true");
                                      									
                                    }

                                    }


                                    }


                                    }
                                    break;
                                case 2 :
                                    // InternalMcmodel.g:14116:8: otherlv_9= 'false'
                                    {
                                    otherlv_9=(Token)match(input,21,FOLLOW_37); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(otherlv_9, grammarAccess.getOverridePredicate_11Access().getFalseKeyword_0_1_1_1_1_1());
                                      							
                                    }

                                    }
                                    break;

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;

            }

            // InternalMcmodel.g:14125:3: ( ( ( ( ({...}? => ( ({...}? => (otherlv_11= '&' ( (lv_angleDefined_12_0= 'angle' ) ) (otherlv_13= '=' | otherlv_14= '==' ) ( (lv_angle_15_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= '&' ( ( ( (lv_blockingDefined_17_0= '!' ) ) otherlv_18= 'blocking' ) | ( ( (lv_blockingDefined_19_0= 'blocking' ) ) ( (otherlv_20= '!=' ( ( (lv_blocking_21_0= 'false' ) ) | otherlv_22= 'true' ) ) | ( (otherlv_23= '=' | otherlv_24= '==' ) ( ( (lv_blocking_25_0= 'true' ) ) | otherlv_26= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= '&' ( ( ( (lv_brokenDefined_28_0= '!' ) ) otherlv_29= 'broken' ) | ( ( (lv_brokenDefined_30_0= 'broken' ) ) ( (otherlv_31= '!=' ( ( (lv_broken_32_0= 'false' ) ) | otherlv_33= 'true' ) ) | ( (otherlv_34= '=' | otherlv_35= '==' ) ( ( (lv_broken_36_0= 'true' ) ) | otherlv_37= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_38= '&' ( ( ( (lv_castDefined_39_0= '!' ) ) otherlv_40= 'cast' ) | ( ( (lv_castDefined_41_0= 'cast' ) ) ( (otherlv_42= '!=' ( ( (lv_cast_43_0= 'false' ) ) | otherlv_44= 'true' ) ) | ( (otherlv_45= '=' | otherlv_46= '==' ) ( ( (lv_cast_47_0= 'true' ) ) | otherlv_48= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_49= '&' ( (lv_cooldownDefined_50_0= 'cooldown' ) ) (otherlv_51= '=' | otherlv_52= '==' ) ( (lv_cooldown_53_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_54= '&' ( (lv_damageDefined_55_0= 'damage' ) ) (otherlv_56= '=' | otherlv_57= '==' ) ( (lv_damage_58_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_59= '&' ( ( ( (lv_damagedDefined_60_0= '!' ) ) otherlv_61= 'damaged' ) | ( ( (lv_damagedDefined_62_0= 'damaged' ) ) ( (otherlv_63= '!=' ( ( (lv_damaged_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_damaged_68_0= 'true' ) ) | otherlv_69= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_70= '&' ( ( ( (lv_lefthandedDefined_71_0= '!' ) ) otherlv_72= 'lefthanded' ) | ( ( (lv_lefthandedDefined_73_0= 'lefthanded' ) ) ( (otherlv_74= '!=' ( ( (lv_lefthanded_75_0= 'false' ) ) | otherlv_76= 'true' ) ) | ( (otherlv_77= '=' | otherlv_78= '==' ) ( ( (lv_lefthanded_79_0= 'true' ) ) | otherlv_80= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_81= '&' ( (lv_pullDefined_82_0= 'pull' ) ) (otherlv_83= '=' | otherlv_84= '==' ) ( (lv_pull_85_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_86= '&' ( ( ( (lv_pullingDefined_87_0= '!' ) ) otherlv_88= 'pulling' ) | ( ( (lv_pullingDefined_89_0= 'pulling' ) ) ( (otherlv_90= '!=' ( ( (lv_pulling_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_pulling_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_97= '&' ( (lv_timeDefined_98_0= 'time' ) ) (otherlv_99= '=' | otherlv_100= '==' ) ( (lv_time_101_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) ) ) ) ) ) )* ) ) )
            // InternalMcmodel.g:14126:4: ( ( ( ({...}? => ( ({...}? => (otherlv_11= '&' ( (lv_angleDefined_12_0= 'angle' ) ) (otherlv_13= '=' | otherlv_14= '==' ) ( (lv_angle_15_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= '&' ( ( ( (lv_blockingDefined_17_0= '!' ) ) otherlv_18= 'blocking' ) | ( ( (lv_blockingDefined_19_0= 'blocking' ) ) ( (otherlv_20= '!=' ( ( (lv_blocking_21_0= 'false' ) ) | otherlv_22= 'true' ) ) | ( (otherlv_23= '=' | otherlv_24= '==' ) ( ( (lv_blocking_25_0= 'true' ) ) | otherlv_26= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= '&' ( ( ( (lv_brokenDefined_28_0= '!' ) ) otherlv_29= 'broken' ) | ( ( (lv_brokenDefined_30_0= 'broken' ) ) ( (otherlv_31= '!=' ( ( (lv_broken_32_0= 'false' ) ) | otherlv_33= 'true' ) ) | ( (otherlv_34= '=' | otherlv_35= '==' ) ( ( (lv_broken_36_0= 'true' ) ) | otherlv_37= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_38= '&' ( ( ( (lv_castDefined_39_0= '!' ) ) otherlv_40= 'cast' ) | ( ( (lv_castDefined_41_0= 'cast' ) ) ( (otherlv_42= '!=' ( ( (lv_cast_43_0= 'false' ) ) | otherlv_44= 'true' ) ) | ( (otherlv_45= '=' | otherlv_46= '==' ) ( ( (lv_cast_47_0= 'true' ) ) | otherlv_48= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_49= '&' ( (lv_cooldownDefined_50_0= 'cooldown' ) ) (otherlv_51= '=' | otherlv_52= '==' ) ( (lv_cooldown_53_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_54= '&' ( (lv_damageDefined_55_0= 'damage' ) ) (otherlv_56= '=' | otherlv_57= '==' ) ( (lv_damage_58_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_59= '&' ( ( ( (lv_damagedDefined_60_0= '!' ) ) otherlv_61= 'damaged' ) | ( ( (lv_damagedDefined_62_0= 'damaged' ) ) ( (otherlv_63= '!=' ( ( (lv_damaged_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_damaged_68_0= 'true' ) ) | otherlv_69= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_70= '&' ( ( ( (lv_lefthandedDefined_71_0= '!' ) ) otherlv_72= 'lefthanded' ) | ( ( (lv_lefthandedDefined_73_0= 'lefthanded' ) ) ( (otherlv_74= '!=' ( ( (lv_lefthanded_75_0= 'false' ) ) | otherlv_76= 'true' ) ) | ( (otherlv_77= '=' | otherlv_78= '==' ) ( ( (lv_lefthanded_79_0= 'true' ) ) | otherlv_80= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_81= '&' ( (lv_pullDefined_82_0= 'pull' ) ) (otherlv_83= '=' | otherlv_84= '==' ) ( (lv_pull_85_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_86= '&' ( ( ( (lv_pullingDefined_87_0= '!' ) ) otherlv_88= 'pulling' ) | ( ( (lv_pullingDefined_89_0= 'pulling' ) ) ( (otherlv_90= '!=' ( ( (lv_pulling_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_pulling_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_97= '&' ( (lv_timeDefined_98_0= 'time' ) ) (otherlv_99= '=' | otherlv_100= '==' ) ( (lv_time_101_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) ) ) ) ) ) )* ) )
            {
            // InternalMcmodel.g:14126:4: ( ( ( ({...}? => ( ({...}? => (otherlv_11= '&' ( (lv_angleDefined_12_0= 'angle' ) ) (otherlv_13= '=' | otherlv_14= '==' ) ( (lv_angle_15_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= '&' ( ( ( (lv_blockingDefined_17_0= '!' ) ) otherlv_18= 'blocking' ) | ( ( (lv_blockingDefined_19_0= 'blocking' ) ) ( (otherlv_20= '!=' ( ( (lv_blocking_21_0= 'false' ) ) | otherlv_22= 'true' ) ) | ( (otherlv_23= '=' | otherlv_24= '==' ) ( ( (lv_blocking_25_0= 'true' ) ) | otherlv_26= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= '&' ( ( ( (lv_brokenDefined_28_0= '!' ) ) otherlv_29= 'broken' ) | ( ( (lv_brokenDefined_30_0= 'broken' ) ) ( (otherlv_31= '!=' ( ( (lv_broken_32_0= 'false' ) ) | otherlv_33= 'true' ) ) | ( (otherlv_34= '=' | otherlv_35= '==' ) ( ( (lv_broken_36_0= 'true' ) ) | otherlv_37= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_38= '&' ( ( ( (lv_castDefined_39_0= '!' ) ) otherlv_40= 'cast' ) | ( ( (lv_castDefined_41_0= 'cast' ) ) ( (otherlv_42= '!=' ( ( (lv_cast_43_0= 'false' ) ) | otherlv_44= 'true' ) ) | ( (otherlv_45= '=' | otherlv_46= '==' ) ( ( (lv_cast_47_0= 'true' ) ) | otherlv_48= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_49= '&' ( (lv_cooldownDefined_50_0= 'cooldown' ) ) (otherlv_51= '=' | otherlv_52= '==' ) ( (lv_cooldown_53_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_54= '&' ( (lv_damageDefined_55_0= 'damage' ) ) (otherlv_56= '=' | otherlv_57= '==' ) ( (lv_damage_58_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_59= '&' ( ( ( (lv_damagedDefined_60_0= '!' ) ) otherlv_61= 'damaged' ) | ( ( (lv_damagedDefined_62_0= 'damaged' ) ) ( (otherlv_63= '!=' ( ( (lv_damaged_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_damaged_68_0= 'true' ) ) | otherlv_69= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_70= '&' ( ( ( (lv_lefthandedDefined_71_0= '!' ) ) otherlv_72= 'lefthanded' ) | ( ( (lv_lefthandedDefined_73_0= 'lefthanded' ) ) ( (otherlv_74= '!=' ( ( (lv_lefthanded_75_0= 'false' ) ) | otherlv_76= 'true' ) ) | ( (otherlv_77= '=' | otherlv_78= '==' ) ( ( (lv_lefthanded_79_0= 'true' ) ) | otherlv_80= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_81= '&' ( (lv_pullDefined_82_0= 'pull' ) ) (otherlv_83= '=' | otherlv_84= '==' ) ( (lv_pull_85_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_86= '&' ( ( ( (lv_pullingDefined_87_0= '!' ) ) otherlv_88= 'pulling' ) | ( ( (lv_pullingDefined_89_0= 'pulling' ) ) ( (otherlv_90= '!=' ( ( (lv_pulling_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_pulling_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_97= '&' ( (lv_timeDefined_98_0= 'time' ) ) (otherlv_99= '=' | otherlv_100= '==' ) ( (lv_time_101_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) ) ) ) ) ) )* ) )
            // InternalMcmodel.g:14127:5: ( ( ({...}? => ( ({...}? => (otherlv_11= '&' ( (lv_angleDefined_12_0= 'angle' ) ) (otherlv_13= '=' | otherlv_14= '==' ) ( (lv_angle_15_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= '&' ( ( ( (lv_blockingDefined_17_0= '!' ) ) otherlv_18= 'blocking' ) | ( ( (lv_blockingDefined_19_0= 'blocking' ) ) ( (otherlv_20= '!=' ( ( (lv_blocking_21_0= 'false' ) ) | otherlv_22= 'true' ) ) | ( (otherlv_23= '=' | otherlv_24= '==' ) ( ( (lv_blocking_25_0= 'true' ) ) | otherlv_26= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= '&' ( ( ( (lv_brokenDefined_28_0= '!' ) ) otherlv_29= 'broken' ) | ( ( (lv_brokenDefined_30_0= 'broken' ) ) ( (otherlv_31= '!=' ( ( (lv_broken_32_0= 'false' ) ) | otherlv_33= 'true' ) ) | ( (otherlv_34= '=' | otherlv_35= '==' ) ( ( (lv_broken_36_0= 'true' ) ) | otherlv_37= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_38= '&' ( ( ( (lv_castDefined_39_0= '!' ) ) otherlv_40= 'cast' ) | ( ( (lv_castDefined_41_0= 'cast' ) ) ( (otherlv_42= '!=' ( ( (lv_cast_43_0= 'false' ) ) | otherlv_44= 'true' ) ) | ( (otherlv_45= '=' | otherlv_46= '==' ) ( ( (lv_cast_47_0= 'true' ) ) | otherlv_48= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_49= '&' ( (lv_cooldownDefined_50_0= 'cooldown' ) ) (otherlv_51= '=' | otherlv_52= '==' ) ( (lv_cooldown_53_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_54= '&' ( (lv_damageDefined_55_0= 'damage' ) ) (otherlv_56= '=' | otherlv_57= '==' ) ( (lv_damage_58_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_59= '&' ( ( ( (lv_damagedDefined_60_0= '!' ) ) otherlv_61= 'damaged' ) | ( ( (lv_damagedDefined_62_0= 'damaged' ) ) ( (otherlv_63= '!=' ( ( (lv_damaged_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_damaged_68_0= 'true' ) ) | otherlv_69= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_70= '&' ( ( ( (lv_lefthandedDefined_71_0= '!' ) ) otherlv_72= 'lefthanded' ) | ( ( (lv_lefthandedDefined_73_0= 'lefthanded' ) ) ( (otherlv_74= '!=' ( ( (lv_lefthanded_75_0= 'false' ) ) | otherlv_76= 'true' ) ) | ( (otherlv_77= '=' | otherlv_78= '==' ) ( ( (lv_lefthanded_79_0= 'true' ) ) | otherlv_80= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_81= '&' ( (lv_pullDefined_82_0= 'pull' ) ) (otherlv_83= '=' | otherlv_84= '==' ) ( (lv_pull_85_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_86= '&' ( ( ( (lv_pullingDefined_87_0= '!' ) ) otherlv_88= 'pulling' ) | ( ( (lv_pullingDefined_89_0= 'pulling' ) ) ( (otherlv_90= '!=' ( ( (lv_pulling_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_pulling_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_97= '&' ( (lv_timeDefined_98_0= 'time' ) ) (otherlv_99= '=' | otherlv_100= '==' ) ( (lv_time_101_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) ) ) ) ) ) )* )
            {
            getUnorderedGroupHelper().enter(grammarAccess.getOverridePredicate_11Access().getUnorderedGroup_1());
            // InternalMcmodel.g:14130:5: ( ( ({...}? => ( ({...}? => (otherlv_11= '&' ( (lv_angleDefined_12_0= 'angle' ) ) (otherlv_13= '=' | otherlv_14= '==' ) ( (lv_angle_15_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= '&' ( ( ( (lv_blockingDefined_17_0= '!' ) ) otherlv_18= 'blocking' ) | ( ( (lv_blockingDefined_19_0= 'blocking' ) ) ( (otherlv_20= '!=' ( ( (lv_blocking_21_0= 'false' ) ) | otherlv_22= 'true' ) ) | ( (otherlv_23= '=' | otherlv_24= '==' ) ( ( (lv_blocking_25_0= 'true' ) ) | otherlv_26= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= '&' ( ( ( (lv_brokenDefined_28_0= '!' ) ) otherlv_29= 'broken' ) | ( ( (lv_brokenDefined_30_0= 'broken' ) ) ( (otherlv_31= '!=' ( ( (lv_broken_32_0= 'false' ) ) | otherlv_33= 'true' ) ) | ( (otherlv_34= '=' | otherlv_35= '==' ) ( ( (lv_broken_36_0= 'true' ) ) | otherlv_37= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_38= '&' ( ( ( (lv_castDefined_39_0= '!' ) ) otherlv_40= 'cast' ) | ( ( (lv_castDefined_41_0= 'cast' ) ) ( (otherlv_42= '!=' ( ( (lv_cast_43_0= 'false' ) ) | otherlv_44= 'true' ) ) | ( (otherlv_45= '=' | otherlv_46= '==' ) ( ( (lv_cast_47_0= 'true' ) ) | otherlv_48= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_49= '&' ( (lv_cooldownDefined_50_0= 'cooldown' ) ) (otherlv_51= '=' | otherlv_52= '==' ) ( (lv_cooldown_53_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_54= '&' ( (lv_damageDefined_55_0= 'damage' ) ) (otherlv_56= '=' | otherlv_57= '==' ) ( (lv_damage_58_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_59= '&' ( ( ( (lv_damagedDefined_60_0= '!' ) ) otherlv_61= 'damaged' ) | ( ( (lv_damagedDefined_62_0= 'damaged' ) ) ( (otherlv_63= '!=' ( ( (lv_damaged_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_damaged_68_0= 'true' ) ) | otherlv_69= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_70= '&' ( ( ( (lv_lefthandedDefined_71_0= '!' ) ) otherlv_72= 'lefthanded' ) | ( ( (lv_lefthandedDefined_73_0= 'lefthanded' ) ) ( (otherlv_74= '!=' ( ( (lv_lefthanded_75_0= 'false' ) ) | otherlv_76= 'true' ) ) | ( (otherlv_77= '=' | otherlv_78= '==' ) ( ( (lv_lefthanded_79_0= 'true' ) ) | otherlv_80= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_81= '&' ( (lv_pullDefined_82_0= 'pull' ) ) (otherlv_83= '=' | otherlv_84= '==' ) ( (lv_pull_85_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_86= '&' ( ( ( (lv_pullingDefined_87_0= '!' ) ) otherlv_88= 'pulling' ) | ( ( (lv_pullingDefined_89_0= 'pulling' ) ) ( (otherlv_90= '!=' ( ( (lv_pulling_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_pulling_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_97= '&' ( (lv_timeDefined_98_0= 'time' ) ) (otherlv_99= '=' | otherlv_100= '==' ) ( (lv_time_101_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) ) ) ) ) ) )* )
            // InternalMcmodel.g:14131:6: ( ({...}? => ( ({...}? => (otherlv_11= '&' ( (lv_angleDefined_12_0= 'angle' ) ) (otherlv_13= '=' | otherlv_14= '==' ) ( (lv_angle_15_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= '&' ( ( ( (lv_blockingDefined_17_0= '!' ) ) otherlv_18= 'blocking' ) | ( ( (lv_blockingDefined_19_0= 'blocking' ) ) ( (otherlv_20= '!=' ( ( (lv_blocking_21_0= 'false' ) ) | otherlv_22= 'true' ) ) | ( (otherlv_23= '=' | otherlv_24= '==' ) ( ( (lv_blocking_25_0= 'true' ) ) | otherlv_26= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= '&' ( ( ( (lv_brokenDefined_28_0= '!' ) ) otherlv_29= 'broken' ) | ( ( (lv_brokenDefined_30_0= 'broken' ) ) ( (otherlv_31= '!=' ( ( (lv_broken_32_0= 'false' ) ) | otherlv_33= 'true' ) ) | ( (otherlv_34= '=' | otherlv_35= '==' ) ( ( (lv_broken_36_0= 'true' ) ) | otherlv_37= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_38= '&' ( ( ( (lv_castDefined_39_0= '!' ) ) otherlv_40= 'cast' ) | ( ( (lv_castDefined_41_0= 'cast' ) ) ( (otherlv_42= '!=' ( ( (lv_cast_43_0= 'false' ) ) | otherlv_44= 'true' ) ) | ( (otherlv_45= '=' | otherlv_46= '==' ) ( ( (lv_cast_47_0= 'true' ) ) | otherlv_48= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_49= '&' ( (lv_cooldownDefined_50_0= 'cooldown' ) ) (otherlv_51= '=' | otherlv_52= '==' ) ( (lv_cooldown_53_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_54= '&' ( (lv_damageDefined_55_0= 'damage' ) ) (otherlv_56= '=' | otherlv_57= '==' ) ( (lv_damage_58_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_59= '&' ( ( ( (lv_damagedDefined_60_0= '!' ) ) otherlv_61= 'damaged' ) | ( ( (lv_damagedDefined_62_0= 'damaged' ) ) ( (otherlv_63= '!=' ( ( (lv_damaged_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_damaged_68_0= 'true' ) ) | otherlv_69= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_70= '&' ( ( ( (lv_lefthandedDefined_71_0= '!' ) ) otherlv_72= 'lefthanded' ) | ( ( (lv_lefthandedDefined_73_0= 'lefthanded' ) ) ( (otherlv_74= '!=' ( ( (lv_lefthanded_75_0= 'false' ) ) | otherlv_76= 'true' ) ) | ( (otherlv_77= '=' | otherlv_78= '==' ) ( ( (lv_lefthanded_79_0= 'true' ) ) | otherlv_80= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_81= '&' ( (lv_pullDefined_82_0= 'pull' ) ) (otherlv_83= '=' | otherlv_84= '==' ) ( (lv_pull_85_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_86= '&' ( ( ( (lv_pullingDefined_87_0= '!' ) ) otherlv_88= 'pulling' ) | ( ( (lv_pullingDefined_89_0= 'pulling' ) ) ( (otherlv_90= '!=' ( ( (lv_pulling_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_pulling_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_97= '&' ( (lv_timeDefined_98_0= 'time' ) ) (otherlv_99= '=' | otherlv_100= '==' ) ( (lv_time_101_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) ) ) ) ) ) )*
            {
            // InternalMcmodel.g:14131:6: ( ({...}? => ( ({...}? => (otherlv_11= '&' ( (lv_angleDefined_12_0= 'angle' ) ) (otherlv_13= '=' | otherlv_14= '==' ) ( (lv_angle_15_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= '&' ( ( ( (lv_blockingDefined_17_0= '!' ) ) otherlv_18= 'blocking' ) | ( ( (lv_blockingDefined_19_0= 'blocking' ) ) ( (otherlv_20= '!=' ( ( (lv_blocking_21_0= 'false' ) ) | otherlv_22= 'true' ) ) | ( (otherlv_23= '=' | otherlv_24= '==' ) ( ( (lv_blocking_25_0= 'true' ) ) | otherlv_26= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= '&' ( ( ( (lv_brokenDefined_28_0= '!' ) ) otherlv_29= 'broken' ) | ( ( (lv_brokenDefined_30_0= 'broken' ) ) ( (otherlv_31= '!=' ( ( (lv_broken_32_0= 'false' ) ) | otherlv_33= 'true' ) ) | ( (otherlv_34= '=' | otherlv_35= '==' ) ( ( (lv_broken_36_0= 'true' ) ) | otherlv_37= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_38= '&' ( ( ( (lv_castDefined_39_0= '!' ) ) otherlv_40= 'cast' ) | ( ( (lv_castDefined_41_0= 'cast' ) ) ( (otherlv_42= '!=' ( ( (lv_cast_43_0= 'false' ) ) | otherlv_44= 'true' ) ) | ( (otherlv_45= '=' | otherlv_46= '==' ) ( ( (lv_cast_47_0= 'true' ) ) | otherlv_48= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_49= '&' ( (lv_cooldownDefined_50_0= 'cooldown' ) ) (otherlv_51= '=' | otherlv_52= '==' ) ( (lv_cooldown_53_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_54= '&' ( (lv_damageDefined_55_0= 'damage' ) ) (otherlv_56= '=' | otherlv_57= '==' ) ( (lv_damage_58_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_59= '&' ( ( ( (lv_damagedDefined_60_0= '!' ) ) otherlv_61= 'damaged' ) | ( ( (lv_damagedDefined_62_0= 'damaged' ) ) ( (otherlv_63= '!=' ( ( (lv_damaged_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_damaged_68_0= 'true' ) ) | otherlv_69= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_70= '&' ( ( ( (lv_lefthandedDefined_71_0= '!' ) ) otherlv_72= 'lefthanded' ) | ( ( (lv_lefthandedDefined_73_0= 'lefthanded' ) ) ( (otherlv_74= '!=' ( ( (lv_lefthanded_75_0= 'false' ) ) | otherlv_76= 'true' ) ) | ( (otherlv_77= '=' | otherlv_78= '==' ) ( ( (lv_lefthanded_79_0= 'true' ) ) | otherlv_80= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_81= '&' ( (lv_pullDefined_82_0= 'pull' ) ) (otherlv_83= '=' | otherlv_84= '==' ) ( (lv_pull_85_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_86= '&' ( ( ( (lv_pullingDefined_87_0= '!' ) ) otherlv_88= 'pulling' ) | ( ( (lv_pullingDefined_89_0= 'pulling' ) ) ( (otherlv_90= '!=' ( ( (lv_pulling_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_pulling_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_97= '&' ( (lv_timeDefined_98_0= 'time' ) ) (otherlv_99= '=' | otherlv_100= '==' ) ( (lv_time_101_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) ) ) ) ) ) )*
            loop483:
            do {
                int alt483=13;
                alt483 = dfa483.predict(input);
                switch (alt483) {
            	case 1 :
            	    // InternalMcmodel.g:14132:4: ({...}? => ( ({...}? => (otherlv_11= '&' ( (lv_angleDefined_12_0= 'angle' ) ) (otherlv_13= '=' | otherlv_14= '==' ) ( (lv_angle_15_0= RULE_PERCENTAGE ) ) ) ) ) )
            	    {
            	    // InternalMcmodel.g:14132:4: ({...}? => ( ({...}? => (otherlv_11= '&' ( (lv_angleDefined_12_0= 'angle' ) ) (otherlv_13= '=' | otherlv_14= '==' ) ( (lv_angle_15_0= RULE_PERCENTAGE ) ) ) ) ) )
            	    // InternalMcmodel.g:14133:5: {...}? => ( ({...}? => (otherlv_11= '&' ( (lv_angleDefined_12_0= 'angle' ) ) (otherlv_13= '=' | otherlv_14= '==' ) ( (lv_angle_15_0= RULE_PERCENTAGE ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_11Access().getUnorderedGroup_1(), 0) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_11", "getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_11Access().getUnorderedGroup_1(), 0)");
            	    }
            	    // InternalMcmodel.g:14133:117: ( ({...}? => (otherlv_11= '&' ( (lv_angleDefined_12_0= 'angle' ) ) (otherlv_13= '=' | otherlv_14= '==' ) ( (lv_angle_15_0= RULE_PERCENTAGE ) ) ) ) )
            	    // InternalMcmodel.g:14134:6: ({...}? => (otherlv_11= '&' ( (lv_angleDefined_12_0= 'angle' ) ) (otherlv_13= '=' | otherlv_14= '==' ) ( (lv_angle_15_0= RULE_PERCENTAGE ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getOverridePredicate_11Access().getUnorderedGroup_1(), 0);
            	    // InternalMcmodel.g:14137:9: ({...}? => (otherlv_11= '&' ( (lv_angleDefined_12_0= 'angle' ) ) (otherlv_13= '=' | otherlv_14= '==' ) ( (lv_angle_15_0= RULE_PERCENTAGE ) ) ) )
            	    // InternalMcmodel.g:14137:10: {...}? => (otherlv_11= '&' ( (lv_angleDefined_12_0= 'angle' ) ) (otherlv_13= '=' | otherlv_14= '==' ) ( (lv_angle_15_0= RULE_PERCENTAGE ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_11", "true");
            	    }
            	    // InternalMcmodel.g:14137:19: (otherlv_11= '&' ( (lv_angleDefined_12_0= 'angle' ) ) (otherlv_13= '=' | otherlv_14= '==' ) ( (lv_angle_15_0= RULE_PERCENTAGE ) ) )
            	    // InternalMcmodel.g:14137:20: otherlv_11= '&' ( (lv_angleDefined_12_0= 'angle' ) ) (otherlv_13= '=' | otherlv_14= '==' ) ( (lv_angle_15_0= RULE_PERCENTAGE ) )
            	    {
            	    otherlv_11=(Token)match(input,59,FOLLOW_58); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_11, grammarAccess.getOverridePredicate_11Access().getAmpersandKeyword_1_0_0());
            	      								
            	    }
            	    // InternalMcmodel.g:14141:9: ( (lv_angleDefined_12_0= 'angle' ) )
            	    // InternalMcmodel.g:14142:10: (lv_angleDefined_12_0= 'angle' )
            	    {
            	    // InternalMcmodel.g:14142:10: (lv_angleDefined_12_0= 'angle' )
            	    // InternalMcmodel.g:14143:11: lv_angleDefined_12_0= 'angle'
            	    {
            	    lv_angleDefined_12_0=(Token)match(input,38,FOLLOW_35); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											newLeafNode(lv_angleDefined_12_0, grammarAccess.getOverridePredicate_11Access().getAngleDefinedAngleKeyword_1_0_1_0());
            	      										
            	    }
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElement(grammarAccess.getOverridePredicate_11Rule());
            	      											}
            	      											setWithLastConsumed(current, "angleDefined", true, "angle");
            	      										
            	    }

            	    }


            	    }

            	    // InternalMcmodel.g:14155:9: (otherlv_13= '=' | otherlv_14= '==' )
            	    int alt447=2;
            	    int LA447_0 = input.LA(1);

            	    if ( (LA447_0==18) ) {
            	        alt447=1;
            	    }
            	    else if ( (LA447_0==58) ) {
            	        alt447=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 447, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt447) {
            	        case 1 :
            	            // InternalMcmodel.g:14156:10: otherlv_13= '='
            	            {
            	            otherlv_13=(Token)match(input,18,FOLLOW_36); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(otherlv_13, grammarAccess.getOverridePredicate_11Access().getEqualsSignKeyword_1_0_2_0());
            	              									
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalMcmodel.g:14161:10: otherlv_14= '=='
            	            {
            	            otherlv_14=(Token)match(input,58,FOLLOW_36); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(otherlv_14, grammarAccess.getOverridePredicate_11Access().getEqualsSignEqualsSignKeyword_1_0_2_1());
            	              									
            	            }

            	            }
            	            break;

            	    }

            	    // InternalMcmodel.g:14166:9: ( (lv_angle_15_0= RULE_PERCENTAGE ) )
            	    // InternalMcmodel.g:14167:10: (lv_angle_15_0= RULE_PERCENTAGE )
            	    {
            	    // InternalMcmodel.g:14167:10: (lv_angle_15_0= RULE_PERCENTAGE )
            	    // InternalMcmodel.g:14168:11: lv_angle_15_0= RULE_PERCENTAGE
            	    {
            	    lv_angle_15_0=(Token)match(input,RULE_PERCENTAGE,FOLLOW_37); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											newLeafNode(lv_angle_15_0, grammarAccess.getOverridePredicate_11Access().getAnglePERCENTAGETerminalRuleCall_1_0_3_0());
            	      										
            	    }
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElement(grammarAccess.getOverridePredicate_11Rule());
            	      											}
            	      											setWithLastConsumed(
            	      												current,
            	      												"angle",
            	      												lv_angle_15_0,
            	      												"com.raptor.mcmodel.Mcmodel.PERCENTAGE");
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getOverridePredicate_11Access().getUnorderedGroup_1());

            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // InternalMcmodel.g:14190:4: ({...}? => ( ({...}? => (otherlv_16= '&' ( ( ( (lv_blockingDefined_17_0= '!' ) ) otherlv_18= 'blocking' ) | ( ( (lv_blockingDefined_19_0= 'blocking' ) ) ( (otherlv_20= '!=' ( ( (lv_blocking_21_0= 'false' ) ) | otherlv_22= 'true' ) ) | ( (otherlv_23= '=' | otherlv_24= '==' ) ( ( (lv_blocking_25_0= 'true' ) ) | otherlv_26= 'false' ) ) ) ) ) ) ) ) )
            	    {
            	    // InternalMcmodel.g:14190:4: ({...}? => ( ({...}? => (otherlv_16= '&' ( ( ( (lv_blockingDefined_17_0= '!' ) ) otherlv_18= 'blocking' ) | ( ( (lv_blockingDefined_19_0= 'blocking' ) ) ( (otherlv_20= '!=' ( ( (lv_blocking_21_0= 'false' ) ) | otherlv_22= 'true' ) ) | ( (otherlv_23= '=' | otherlv_24= '==' ) ( ( (lv_blocking_25_0= 'true' ) ) | otherlv_26= 'false' ) ) ) ) ) ) ) ) )
            	    // InternalMcmodel.g:14191:5: {...}? => ( ({...}? => (otherlv_16= '&' ( ( ( (lv_blockingDefined_17_0= '!' ) ) otherlv_18= 'blocking' ) | ( ( (lv_blockingDefined_19_0= 'blocking' ) ) ( (otherlv_20= '!=' ( ( (lv_blocking_21_0= 'false' ) ) | otherlv_22= 'true' ) ) | ( (otherlv_23= '=' | otherlv_24= '==' ) ( ( (lv_blocking_25_0= 'true' ) ) | otherlv_26= 'false' ) ) ) ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_11Access().getUnorderedGroup_1(), 1) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_11", "getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_11Access().getUnorderedGroup_1(), 1)");
            	    }
            	    // InternalMcmodel.g:14191:117: ( ({...}? => (otherlv_16= '&' ( ( ( (lv_blockingDefined_17_0= '!' ) ) otherlv_18= 'blocking' ) | ( ( (lv_blockingDefined_19_0= 'blocking' ) ) ( (otherlv_20= '!=' ( ( (lv_blocking_21_0= 'false' ) ) | otherlv_22= 'true' ) ) | ( (otherlv_23= '=' | otherlv_24= '==' ) ( ( (lv_blocking_25_0= 'true' ) ) | otherlv_26= 'false' ) ) ) ) ) ) ) )
            	    // InternalMcmodel.g:14192:6: ({...}? => (otherlv_16= '&' ( ( ( (lv_blockingDefined_17_0= '!' ) ) otherlv_18= 'blocking' ) | ( ( (lv_blockingDefined_19_0= 'blocking' ) ) ( (otherlv_20= '!=' ( ( (lv_blocking_21_0= 'false' ) ) | otherlv_22= 'true' ) ) | ( (otherlv_23= '=' | otherlv_24= '==' ) ( ( (lv_blocking_25_0= 'true' ) ) | otherlv_26= 'false' ) ) ) ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getOverridePredicate_11Access().getUnorderedGroup_1(), 1);
            	    // InternalMcmodel.g:14195:9: ({...}? => (otherlv_16= '&' ( ( ( (lv_blockingDefined_17_0= '!' ) ) otherlv_18= 'blocking' ) | ( ( (lv_blockingDefined_19_0= 'blocking' ) ) ( (otherlv_20= '!=' ( ( (lv_blocking_21_0= 'false' ) ) | otherlv_22= 'true' ) ) | ( (otherlv_23= '=' | otherlv_24= '==' ) ( ( (lv_blocking_25_0= 'true' ) ) | otherlv_26= 'false' ) ) ) ) ) ) )
            	    // InternalMcmodel.g:14195:10: {...}? => (otherlv_16= '&' ( ( ( (lv_blockingDefined_17_0= '!' ) ) otherlv_18= 'blocking' ) | ( ( (lv_blockingDefined_19_0= 'blocking' ) ) ( (otherlv_20= '!=' ( ( (lv_blocking_21_0= 'false' ) ) | otherlv_22= 'true' ) ) | ( (otherlv_23= '=' | otherlv_24= '==' ) ( ( (lv_blocking_25_0= 'true' ) ) | otherlv_26= 'false' ) ) ) ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_11", "true");
            	    }
            	    // InternalMcmodel.g:14195:19: (otherlv_16= '&' ( ( ( (lv_blockingDefined_17_0= '!' ) ) otherlv_18= 'blocking' ) | ( ( (lv_blockingDefined_19_0= 'blocking' ) ) ( (otherlv_20= '!=' ( ( (lv_blocking_21_0= 'false' ) ) | otherlv_22= 'true' ) ) | ( (otherlv_23= '=' | otherlv_24= '==' ) ( ( (lv_blocking_25_0= 'true' ) ) | otherlv_26= 'false' ) ) ) ) ) )
            	    // InternalMcmodel.g:14195:20: otherlv_16= '&' ( ( ( (lv_blockingDefined_17_0= '!' ) ) otherlv_18= 'blocking' ) | ( ( (lv_blockingDefined_19_0= 'blocking' ) ) ( (otherlv_20= '!=' ( ( (lv_blocking_21_0= 'false' ) ) | otherlv_22= 'true' ) ) | ( (otherlv_23= '=' | otherlv_24= '==' ) ( ( (lv_blocking_25_0= 'true' ) ) | otherlv_26= 'false' ) ) ) ) )
            	    {
            	    otherlv_16=(Token)match(input,59,FOLLOW_38); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_16, grammarAccess.getOverridePredicate_11Access().getAmpersandKeyword_1_1_0());
            	      								
            	    }
            	    // InternalMcmodel.g:14199:9: ( ( ( (lv_blockingDefined_17_0= '!' ) ) otherlv_18= 'blocking' ) | ( ( (lv_blockingDefined_19_0= 'blocking' ) ) ( (otherlv_20= '!=' ( ( (lv_blocking_21_0= 'false' ) ) | otherlv_22= 'true' ) ) | ( (otherlv_23= '=' | otherlv_24= '==' ) ( ( (lv_blocking_25_0= 'true' ) ) | otherlv_26= 'false' ) ) ) ) )
            	    int alt452=2;
            	    int LA452_0 = input.LA(1);

            	    if ( (LA452_0==60) ) {
            	        alt452=1;
            	    }
            	    else if ( (LA452_0==61) ) {
            	        alt452=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 452, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt452) {
            	        case 1 :
            	            // InternalMcmodel.g:14200:10: ( ( (lv_blockingDefined_17_0= '!' ) ) otherlv_18= 'blocking' )
            	            {
            	            // InternalMcmodel.g:14200:10: ( ( (lv_blockingDefined_17_0= '!' ) ) otherlv_18= 'blocking' )
            	            // InternalMcmodel.g:14201:11: ( (lv_blockingDefined_17_0= '!' ) ) otherlv_18= 'blocking'
            	            {
            	            // InternalMcmodel.g:14201:11: ( (lv_blockingDefined_17_0= '!' ) )
            	            // InternalMcmodel.g:14202:12: (lv_blockingDefined_17_0= '!' )
            	            {
            	            // InternalMcmodel.g:14202:12: (lv_blockingDefined_17_0= '!' )
            	            // InternalMcmodel.g:14203:13: lv_blockingDefined_17_0= '!'
            	            {
            	            lv_blockingDefined_17_0=(Token)match(input,60,FOLLOW_39); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              													newLeafNode(lv_blockingDefined_17_0, grammarAccess.getOverridePredicate_11Access().getBlockingDefinedExclamationMarkKeyword_1_1_1_0_0_0());
            	              												
            	            }
            	            if ( state.backtracking==0 ) {

            	              													if (current==null) {
            	              														current = createModelElement(grammarAccess.getOverridePredicate_11Rule());
            	              													}
            	              													setWithLastConsumed(current, "blockingDefined", true, "!");
            	              												
            	            }

            	            }


            	            }

            	            otherlv_18=(Token)match(input,61,FOLLOW_37); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              											newLeafNode(otherlv_18, grammarAccess.getOverridePredicate_11Access().getBlockingKeyword_1_1_1_0_1());
            	              										
            	            }

            	            }


            	            }
            	            break;
            	        case 2 :
            	            // InternalMcmodel.g:14221:10: ( ( (lv_blockingDefined_19_0= 'blocking' ) ) ( (otherlv_20= '!=' ( ( (lv_blocking_21_0= 'false' ) ) | otherlv_22= 'true' ) ) | ( (otherlv_23= '=' | otherlv_24= '==' ) ( ( (lv_blocking_25_0= 'true' ) ) | otherlv_26= 'false' ) ) ) )
            	            {
            	            // InternalMcmodel.g:14221:10: ( ( (lv_blockingDefined_19_0= 'blocking' ) ) ( (otherlv_20= '!=' ( ( (lv_blocking_21_0= 'false' ) ) | otherlv_22= 'true' ) ) | ( (otherlv_23= '=' | otherlv_24= '==' ) ( ( (lv_blocking_25_0= 'true' ) ) | otherlv_26= 'false' ) ) ) )
            	            // InternalMcmodel.g:14222:11: ( (lv_blockingDefined_19_0= 'blocking' ) ) ( (otherlv_20= '!=' ( ( (lv_blocking_21_0= 'false' ) ) | otherlv_22= 'true' ) ) | ( (otherlv_23= '=' | otherlv_24= '==' ) ( ( (lv_blocking_25_0= 'true' ) ) | otherlv_26= 'false' ) ) )
            	            {
            	            // InternalMcmodel.g:14222:11: ( (lv_blockingDefined_19_0= 'blocking' ) )
            	            // InternalMcmodel.g:14223:12: (lv_blockingDefined_19_0= 'blocking' )
            	            {
            	            // InternalMcmodel.g:14223:12: (lv_blockingDefined_19_0= 'blocking' )
            	            // InternalMcmodel.g:14224:13: lv_blockingDefined_19_0= 'blocking'
            	            {
            	            lv_blockingDefined_19_0=(Token)match(input,61,FOLLOW_40); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              													newLeafNode(lv_blockingDefined_19_0, grammarAccess.getOverridePredicate_11Access().getBlockingDefinedBlockingKeyword_1_1_1_1_0_0());
            	              												
            	            }
            	            if ( state.backtracking==0 ) {

            	              													if (current==null) {
            	              														current = createModelElement(grammarAccess.getOverridePredicate_11Rule());
            	              													}
            	              													setWithLastConsumed(current, "blockingDefined", true, "blocking");
            	              												
            	            }

            	            }


            	            }

            	            // InternalMcmodel.g:14236:11: ( (otherlv_20= '!=' ( ( (lv_blocking_21_0= 'false' ) ) | otherlv_22= 'true' ) ) | ( (otherlv_23= '=' | otherlv_24= '==' ) ( ( (lv_blocking_25_0= 'true' ) ) | otherlv_26= 'false' ) ) )
            	            int alt451=2;
            	            int LA451_0 = input.LA(1);

            	            if ( (LA451_0==62) ) {
            	                alt451=1;
            	            }
            	            else if ( (LA451_0==18||LA451_0==58) ) {
            	                alt451=2;
            	            }
            	            else {
            	                if (state.backtracking>0) {state.failed=true; return current;}
            	                NoViableAltException nvae =
            	                    new NoViableAltException("", 451, 0, input);

            	                throw nvae;
            	            }
            	            switch (alt451) {
            	                case 1 :
            	                    // InternalMcmodel.g:14237:12: (otherlv_20= '!=' ( ( (lv_blocking_21_0= 'false' ) ) | otherlv_22= 'true' ) )
            	                    {
            	                    // InternalMcmodel.g:14237:12: (otherlv_20= '!=' ( ( (lv_blocking_21_0= 'false' ) ) | otherlv_22= 'true' ) )
            	                    // InternalMcmodel.g:14238:13: otherlv_20= '!=' ( ( (lv_blocking_21_0= 'false' ) ) | otherlv_22= 'true' )
            	                    {
            	                    otherlv_20=(Token)match(input,62,FOLLOW_7); if (state.failed) return current;
            	                    if ( state.backtracking==0 ) {

            	                      													newLeafNode(otherlv_20, grammarAccess.getOverridePredicate_11Access().getExclamationMarkEqualsSignKeyword_1_1_1_1_1_0_0());
            	                      												
            	                    }
            	                    // InternalMcmodel.g:14242:13: ( ( (lv_blocking_21_0= 'false' ) ) | otherlv_22= 'true' )
            	                    int alt448=2;
            	                    int LA448_0 = input.LA(1);

            	                    if ( (LA448_0==21) ) {
            	                        alt448=1;
            	                    }
            	                    else if ( (LA448_0==20) ) {
            	                        alt448=2;
            	                    }
            	                    else {
            	                        if (state.backtracking>0) {state.failed=true; return current;}
            	                        NoViableAltException nvae =
            	                            new NoViableAltException("", 448, 0, input);

            	                        throw nvae;
            	                    }
            	                    switch (alt448) {
            	                        case 1 :
            	                            // InternalMcmodel.g:14243:14: ( (lv_blocking_21_0= 'false' ) )
            	                            {
            	                            // InternalMcmodel.g:14243:14: ( (lv_blocking_21_0= 'false' ) )
            	                            // InternalMcmodel.g:14244:15: (lv_blocking_21_0= 'false' )
            	                            {
            	                            // InternalMcmodel.g:14244:15: (lv_blocking_21_0= 'false' )
            	                            // InternalMcmodel.g:14245:16: lv_blocking_21_0= 'false'
            	                            {
            	                            lv_blocking_21_0=(Token)match(input,21,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              																newLeafNode(lv_blocking_21_0, grammarAccess.getOverridePredicate_11Access().getBlockingFalseKeyword_1_1_1_1_1_0_1_0_0());
            	                              															
            	                            }
            	                            if ( state.backtracking==0 ) {

            	                              																if (current==null) {
            	                              																	current = createModelElement(grammarAccess.getOverridePredicate_11Rule());
            	                              																}
            	                              																setWithLastConsumed(current, "blocking", true, "false");
            	                              															
            	                            }

            	                            }


            	                            }


            	                            }
            	                            break;
            	                        case 2 :
            	                            // InternalMcmodel.g:14258:14: otherlv_22= 'true'
            	                            {
            	                            otherlv_22=(Token)match(input,20,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_22, grammarAccess.getOverridePredicate_11Access().getTrueKeyword_1_1_1_1_1_0_1_1());
            	                              													
            	                            }

            	                            }
            	                            break;

            	                    }


            	                    }


            	                    }
            	                    break;
            	                case 2 :
            	                    // InternalMcmodel.g:14265:12: ( (otherlv_23= '=' | otherlv_24= '==' ) ( ( (lv_blocking_25_0= 'true' ) ) | otherlv_26= 'false' ) )
            	                    {
            	                    // InternalMcmodel.g:14265:12: ( (otherlv_23= '=' | otherlv_24= '==' ) ( ( (lv_blocking_25_0= 'true' ) ) | otherlv_26= 'false' ) )
            	                    // InternalMcmodel.g:14266:13: (otherlv_23= '=' | otherlv_24= '==' ) ( ( (lv_blocking_25_0= 'true' ) ) | otherlv_26= 'false' )
            	                    {
            	                    // InternalMcmodel.g:14266:13: (otherlv_23= '=' | otherlv_24= '==' )
            	                    int alt449=2;
            	                    int LA449_0 = input.LA(1);

            	                    if ( (LA449_0==18) ) {
            	                        alt449=1;
            	                    }
            	                    else if ( (LA449_0==58) ) {
            	                        alt449=2;
            	                    }
            	                    else {
            	                        if (state.backtracking>0) {state.failed=true; return current;}
            	                        NoViableAltException nvae =
            	                            new NoViableAltException("", 449, 0, input);

            	                        throw nvae;
            	                    }
            	                    switch (alt449) {
            	                        case 1 :
            	                            // InternalMcmodel.g:14267:14: otherlv_23= '='
            	                            {
            	                            otherlv_23=(Token)match(input,18,FOLLOW_7); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_23, grammarAccess.getOverridePredicate_11Access().getEqualsSignKeyword_1_1_1_1_1_1_0_0());
            	                              													
            	                            }

            	                            }
            	                            break;
            	                        case 2 :
            	                            // InternalMcmodel.g:14272:14: otherlv_24= '=='
            	                            {
            	                            otherlv_24=(Token)match(input,58,FOLLOW_7); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_24, grammarAccess.getOverridePredicate_11Access().getEqualsSignEqualsSignKeyword_1_1_1_1_1_1_0_1());
            	                              													
            	                            }

            	                            }
            	                            break;

            	                    }

            	                    // InternalMcmodel.g:14277:13: ( ( (lv_blocking_25_0= 'true' ) ) | otherlv_26= 'false' )
            	                    int alt450=2;
            	                    int LA450_0 = input.LA(1);

            	                    if ( (LA450_0==20) ) {
            	                        alt450=1;
            	                    }
            	                    else if ( (LA450_0==21) ) {
            	                        alt450=2;
            	                    }
            	                    else {
            	                        if (state.backtracking>0) {state.failed=true; return current;}
            	                        NoViableAltException nvae =
            	                            new NoViableAltException("", 450, 0, input);

            	                        throw nvae;
            	                    }
            	                    switch (alt450) {
            	                        case 1 :
            	                            // InternalMcmodel.g:14278:14: ( (lv_blocking_25_0= 'true' ) )
            	                            {
            	                            // InternalMcmodel.g:14278:14: ( (lv_blocking_25_0= 'true' ) )
            	                            // InternalMcmodel.g:14279:15: (lv_blocking_25_0= 'true' )
            	                            {
            	                            // InternalMcmodel.g:14279:15: (lv_blocking_25_0= 'true' )
            	                            // InternalMcmodel.g:14280:16: lv_blocking_25_0= 'true'
            	                            {
            	                            lv_blocking_25_0=(Token)match(input,20,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              																newLeafNode(lv_blocking_25_0, grammarAccess.getOverridePredicate_11Access().getBlockingTrueKeyword_1_1_1_1_1_1_1_0_0());
            	                              															
            	                            }
            	                            if ( state.backtracking==0 ) {

            	                              																if (current==null) {
            	                              																	current = createModelElement(grammarAccess.getOverridePredicate_11Rule());
            	                              																}
            	                              																setWithLastConsumed(current, "blocking", true, "true");
            	                              															
            	                            }

            	                            }


            	                            }


            	                            }
            	                            break;
            	                        case 2 :
            	                            // InternalMcmodel.g:14293:14: otherlv_26= 'false'
            	                            {
            	                            otherlv_26=(Token)match(input,21,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_26, grammarAccess.getOverridePredicate_11Access().getFalseKeyword_1_1_1_1_1_1_1_1());
            	                              													
            	                            }

            	                            }
            	                            break;

            	                    }


            	                    }


            	                    }
            	                    break;

            	            }


            	            }


            	            }
            	            break;

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getOverridePredicate_11Access().getUnorderedGroup_1());

            	    }


            	    }


            	    }
            	    break;
            	case 3 :
            	    // InternalMcmodel.g:14308:4: ({...}? => ( ({...}? => (otherlv_27= '&' ( ( ( (lv_brokenDefined_28_0= '!' ) ) otherlv_29= 'broken' ) | ( ( (lv_brokenDefined_30_0= 'broken' ) ) ( (otherlv_31= '!=' ( ( (lv_broken_32_0= 'false' ) ) | otherlv_33= 'true' ) ) | ( (otherlv_34= '=' | otherlv_35= '==' ) ( ( (lv_broken_36_0= 'true' ) ) | otherlv_37= 'false' ) ) ) ) ) ) ) ) )
            	    {
            	    // InternalMcmodel.g:14308:4: ({...}? => ( ({...}? => (otherlv_27= '&' ( ( ( (lv_brokenDefined_28_0= '!' ) ) otherlv_29= 'broken' ) | ( ( (lv_brokenDefined_30_0= 'broken' ) ) ( (otherlv_31= '!=' ( ( (lv_broken_32_0= 'false' ) ) | otherlv_33= 'true' ) ) | ( (otherlv_34= '=' | otherlv_35= '==' ) ( ( (lv_broken_36_0= 'true' ) ) | otherlv_37= 'false' ) ) ) ) ) ) ) ) )
            	    // InternalMcmodel.g:14309:5: {...}? => ( ({...}? => (otherlv_27= '&' ( ( ( (lv_brokenDefined_28_0= '!' ) ) otherlv_29= 'broken' ) | ( ( (lv_brokenDefined_30_0= 'broken' ) ) ( (otherlv_31= '!=' ( ( (lv_broken_32_0= 'false' ) ) | otherlv_33= 'true' ) ) | ( (otherlv_34= '=' | otherlv_35= '==' ) ( ( (lv_broken_36_0= 'true' ) ) | otherlv_37= 'false' ) ) ) ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_11Access().getUnorderedGroup_1(), 2) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_11", "getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_11Access().getUnorderedGroup_1(), 2)");
            	    }
            	    // InternalMcmodel.g:14309:117: ( ({...}? => (otherlv_27= '&' ( ( ( (lv_brokenDefined_28_0= '!' ) ) otherlv_29= 'broken' ) | ( ( (lv_brokenDefined_30_0= 'broken' ) ) ( (otherlv_31= '!=' ( ( (lv_broken_32_0= 'false' ) ) | otherlv_33= 'true' ) ) | ( (otherlv_34= '=' | otherlv_35= '==' ) ( ( (lv_broken_36_0= 'true' ) ) | otherlv_37= 'false' ) ) ) ) ) ) ) )
            	    // InternalMcmodel.g:14310:6: ({...}? => (otherlv_27= '&' ( ( ( (lv_brokenDefined_28_0= '!' ) ) otherlv_29= 'broken' ) | ( ( (lv_brokenDefined_30_0= 'broken' ) ) ( (otherlv_31= '!=' ( ( (lv_broken_32_0= 'false' ) ) | otherlv_33= 'true' ) ) | ( (otherlv_34= '=' | otherlv_35= '==' ) ( ( (lv_broken_36_0= 'true' ) ) | otherlv_37= 'false' ) ) ) ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getOverridePredicate_11Access().getUnorderedGroup_1(), 2);
            	    // InternalMcmodel.g:14313:9: ({...}? => (otherlv_27= '&' ( ( ( (lv_brokenDefined_28_0= '!' ) ) otherlv_29= 'broken' ) | ( ( (lv_brokenDefined_30_0= 'broken' ) ) ( (otherlv_31= '!=' ( ( (lv_broken_32_0= 'false' ) ) | otherlv_33= 'true' ) ) | ( (otherlv_34= '=' | otherlv_35= '==' ) ( ( (lv_broken_36_0= 'true' ) ) | otherlv_37= 'false' ) ) ) ) ) ) )
            	    // InternalMcmodel.g:14313:10: {...}? => (otherlv_27= '&' ( ( ( (lv_brokenDefined_28_0= '!' ) ) otherlv_29= 'broken' ) | ( ( (lv_brokenDefined_30_0= 'broken' ) ) ( (otherlv_31= '!=' ( ( (lv_broken_32_0= 'false' ) ) | otherlv_33= 'true' ) ) | ( (otherlv_34= '=' | otherlv_35= '==' ) ( ( (lv_broken_36_0= 'true' ) ) | otherlv_37= 'false' ) ) ) ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_11", "true");
            	    }
            	    // InternalMcmodel.g:14313:19: (otherlv_27= '&' ( ( ( (lv_brokenDefined_28_0= '!' ) ) otherlv_29= 'broken' ) | ( ( (lv_brokenDefined_30_0= 'broken' ) ) ( (otherlv_31= '!=' ( ( (lv_broken_32_0= 'false' ) ) | otherlv_33= 'true' ) ) | ( (otherlv_34= '=' | otherlv_35= '==' ) ( ( (lv_broken_36_0= 'true' ) ) | otherlv_37= 'false' ) ) ) ) ) )
            	    // InternalMcmodel.g:14313:20: otherlv_27= '&' ( ( ( (lv_brokenDefined_28_0= '!' ) ) otherlv_29= 'broken' ) | ( ( (lv_brokenDefined_30_0= 'broken' ) ) ( (otherlv_31= '!=' ( ( (lv_broken_32_0= 'false' ) ) | otherlv_33= 'true' ) ) | ( (otherlv_34= '=' | otherlv_35= '==' ) ( ( (lv_broken_36_0= 'true' ) ) | otherlv_37= 'false' ) ) ) ) )
            	    {
            	    otherlv_27=(Token)match(input,59,FOLLOW_41); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_27, grammarAccess.getOverridePredicate_11Access().getAmpersandKeyword_1_2_0());
            	      								
            	    }
            	    // InternalMcmodel.g:14317:9: ( ( ( (lv_brokenDefined_28_0= '!' ) ) otherlv_29= 'broken' ) | ( ( (lv_brokenDefined_30_0= 'broken' ) ) ( (otherlv_31= '!=' ( ( (lv_broken_32_0= 'false' ) ) | otherlv_33= 'true' ) ) | ( (otherlv_34= '=' | otherlv_35= '==' ) ( ( (lv_broken_36_0= 'true' ) ) | otherlv_37= 'false' ) ) ) ) )
            	    int alt457=2;
            	    int LA457_0 = input.LA(1);

            	    if ( (LA457_0==60) ) {
            	        alt457=1;
            	    }
            	    else if ( (LA457_0==63) ) {
            	        alt457=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 457, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt457) {
            	        case 1 :
            	            // InternalMcmodel.g:14318:10: ( ( (lv_brokenDefined_28_0= '!' ) ) otherlv_29= 'broken' )
            	            {
            	            // InternalMcmodel.g:14318:10: ( ( (lv_brokenDefined_28_0= '!' ) ) otherlv_29= 'broken' )
            	            // InternalMcmodel.g:14319:11: ( (lv_brokenDefined_28_0= '!' ) ) otherlv_29= 'broken'
            	            {
            	            // InternalMcmodel.g:14319:11: ( (lv_brokenDefined_28_0= '!' ) )
            	            // InternalMcmodel.g:14320:12: (lv_brokenDefined_28_0= '!' )
            	            {
            	            // InternalMcmodel.g:14320:12: (lv_brokenDefined_28_0= '!' )
            	            // InternalMcmodel.g:14321:13: lv_brokenDefined_28_0= '!'
            	            {
            	            lv_brokenDefined_28_0=(Token)match(input,60,FOLLOW_42); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              													newLeafNode(lv_brokenDefined_28_0, grammarAccess.getOverridePredicate_11Access().getBrokenDefinedExclamationMarkKeyword_1_2_1_0_0_0());
            	              												
            	            }
            	            if ( state.backtracking==0 ) {

            	              													if (current==null) {
            	              														current = createModelElement(grammarAccess.getOverridePredicate_11Rule());
            	              													}
            	              													setWithLastConsumed(current, "brokenDefined", true, "!");
            	              												
            	            }

            	            }


            	            }

            	            otherlv_29=(Token)match(input,63,FOLLOW_37); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              											newLeafNode(otherlv_29, grammarAccess.getOverridePredicate_11Access().getBrokenKeyword_1_2_1_0_1());
            	              										
            	            }

            	            }


            	            }
            	            break;
            	        case 2 :
            	            // InternalMcmodel.g:14339:10: ( ( (lv_brokenDefined_30_0= 'broken' ) ) ( (otherlv_31= '!=' ( ( (lv_broken_32_0= 'false' ) ) | otherlv_33= 'true' ) ) | ( (otherlv_34= '=' | otherlv_35= '==' ) ( ( (lv_broken_36_0= 'true' ) ) | otherlv_37= 'false' ) ) ) )
            	            {
            	            // InternalMcmodel.g:14339:10: ( ( (lv_brokenDefined_30_0= 'broken' ) ) ( (otherlv_31= '!=' ( ( (lv_broken_32_0= 'false' ) ) | otherlv_33= 'true' ) ) | ( (otherlv_34= '=' | otherlv_35= '==' ) ( ( (lv_broken_36_0= 'true' ) ) | otherlv_37= 'false' ) ) ) )
            	            // InternalMcmodel.g:14340:11: ( (lv_brokenDefined_30_0= 'broken' ) ) ( (otherlv_31= '!=' ( ( (lv_broken_32_0= 'false' ) ) | otherlv_33= 'true' ) ) | ( (otherlv_34= '=' | otherlv_35= '==' ) ( ( (lv_broken_36_0= 'true' ) ) | otherlv_37= 'false' ) ) )
            	            {
            	            // InternalMcmodel.g:14340:11: ( (lv_brokenDefined_30_0= 'broken' ) )
            	            // InternalMcmodel.g:14341:12: (lv_brokenDefined_30_0= 'broken' )
            	            {
            	            // InternalMcmodel.g:14341:12: (lv_brokenDefined_30_0= 'broken' )
            	            // InternalMcmodel.g:14342:13: lv_brokenDefined_30_0= 'broken'
            	            {
            	            lv_brokenDefined_30_0=(Token)match(input,63,FOLLOW_40); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              													newLeafNode(lv_brokenDefined_30_0, grammarAccess.getOverridePredicate_11Access().getBrokenDefinedBrokenKeyword_1_2_1_1_0_0());
            	              												
            	            }
            	            if ( state.backtracking==0 ) {

            	              													if (current==null) {
            	              														current = createModelElement(grammarAccess.getOverridePredicate_11Rule());
            	              													}
            	              													setWithLastConsumed(current, "brokenDefined", true, "broken");
            	              												
            	            }

            	            }


            	            }

            	            // InternalMcmodel.g:14354:11: ( (otherlv_31= '!=' ( ( (lv_broken_32_0= 'false' ) ) | otherlv_33= 'true' ) ) | ( (otherlv_34= '=' | otherlv_35= '==' ) ( ( (lv_broken_36_0= 'true' ) ) | otherlv_37= 'false' ) ) )
            	            int alt456=2;
            	            int LA456_0 = input.LA(1);

            	            if ( (LA456_0==62) ) {
            	                alt456=1;
            	            }
            	            else if ( (LA456_0==18||LA456_0==58) ) {
            	                alt456=2;
            	            }
            	            else {
            	                if (state.backtracking>0) {state.failed=true; return current;}
            	                NoViableAltException nvae =
            	                    new NoViableAltException("", 456, 0, input);

            	                throw nvae;
            	            }
            	            switch (alt456) {
            	                case 1 :
            	                    // InternalMcmodel.g:14355:12: (otherlv_31= '!=' ( ( (lv_broken_32_0= 'false' ) ) | otherlv_33= 'true' ) )
            	                    {
            	                    // InternalMcmodel.g:14355:12: (otherlv_31= '!=' ( ( (lv_broken_32_0= 'false' ) ) | otherlv_33= 'true' ) )
            	                    // InternalMcmodel.g:14356:13: otherlv_31= '!=' ( ( (lv_broken_32_0= 'false' ) ) | otherlv_33= 'true' )
            	                    {
            	                    otherlv_31=(Token)match(input,62,FOLLOW_7); if (state.failed) return current;
            	                    if ( state.backtracking==0 ) {

            	                      													newLeafNode(otherlv_31, grammarAccess.getOverridePredicate_11Access().getExclamationMarkEqualsSignKeyword_1_2_1_1_1_0_0());
            	                      												
            	                    }
            	                    // InternalMcmodel.g:14360:13: ( ( (lv_broken_32_0= 'false' ) ) | otherlv_33= 'true' )
            	                    int alt453=2;
            	                    int LA453_0 = input.LA(1);

            	                    if ( (LA453_0==21) ) {
            	                        alt453=1;
            	                    }
            	                    else if ( (LA453_0==20) ) {
            	                        alt453=2;
            	                    }
            	                    else {
            	                        if (state.backtracking>0) {state.failed=true; return current;}
            	                        NoViableAltException nvae =
            	                            new NoViableAltException("", 453, 0, input);

            	                        throw nvae;
            	                    }
            	                    switch (alt453) {
            	                        case 1 :
            	                            // InternalMcmodel.g:14361:14: ( (lv_broken_32_0= 'false' ) )
            	                            {
            	                            // InternalMcmodel.g:14361:14: ( (lv_broken_32_0= 'false' ) )
            	                            // InternalMcmodel.g:14362:15: (lv_broken_32_0= 'false' )
            	                            {
            	                            // InternalMcmodel.g:14362:15: (lv_broken_32_0= 'false' )
            	                            // InternalMcmodel.g:14363:16: lv_broken_32_0= 'false'
            	                            {
            	                            lv_broken_32_0=(Token)match(input,21,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              																newLeafNode(lv_broken_32_0, grammarAccess.getOverridePredicate_11Access().getBrokenFalseKeyword_1_2_1_1_1_0_1_0_0());
            	                              															
            	                            }
            	                            if ( state.backtracking==0 ) {

            	                              																if (current==null) {
            	                              																	current = createModelElement(grammarAccess.getOverridePredicate_11Rule());
            	                              																}
            	                              																setWithLastConsumed(current, "broken", true, "false");
            	                              															
            	                            }

            	                            }


            	                            }


            	                            }
            	                            break;
            	                        case 2 :
            	                            // InternalMcmodel.g:14376:14: otherlv_33= 'true'
            	                            {
            	                            otherlv_33=(Token)match(input,20,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_33, grammarAccess.getOverridePredicate_11Access().getTrueKeyword_1_2_1_1_1_0_1_1());
            	                              													
            	                            }

            	                            }
            	                            break;

            	                    }


            	                    }


            	                    }
            	                    break;
            	                case 2 :
            	                    // InternalMcmodel.g:14383:12: ( (otherlv_34= '=' | otherlv_35= '==' ) ( ( (lv_broken_36_0= 'true' ) ) | otherlv_37= 'false' ) )
            	                    {
            	                    // InternalMcmodel.g:14383:12: ( (otherlv_34= '=' | otherlv_35= '==' ) ( ( (lv_broken_36_0= 'true' ) ) | otherlv_37= 'false' ) )
            	                    // InternalMcmodel.g:14384:13: (otherlv_34= '=' | otherlv_35= '==' ) ( ( (lv_broken_36_0= 'true' ) ) | otherlv_37= 'false' )
            	                    {
            	                    // InternalMcmodel.g:14384:13: (otherlv_34= '=' | otherlv_35= '==' )
            	                    int alt454=2;
            	                    int LA454_0 = input.LA(1);

            	                    if ( (LA454_0==18) ) {
            	                        alt454=1;
            	                    }
            	                    else if ( (LA454_0==58) ) {
            	                        alt454=2;
            	                    }
            	                    else {
            	                        if (state.backtracking>0) {state.failed=true; return current;}
            	                        NoViableAltException nvae =
            	                            new NoViableAltException("", 454, 0, input);

            	                        throw nvae;
            	                    }
            	                    switch (alt454) {
            	                        case 1 :
            	                            // InternalMcmodel.g:14385:14: otherlv_34= '='
            	                            {
            	                            otherlv_34=(Token)match(input,18,FOLLOW_7); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_34, grammarAccess.getOverridePredicate_11Access().getEqualsSignKeyword_1_2_1_1_1_1_0_0());
            	                              													
            	                            }

            	                            }
            	                            break;
            	                        case 2 :
            	                            // InternalMcmodel.g:14390:14: otherlv_35= '=='
            	                            {
            	                            otherlv_35=(Token)match(input,58,FOLLOW_7); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_35, grammarAccess.getOverridePredicate_11Access().getEqualsSignEqualsSignKeyword_1_2_1_1_1_1_0_1());
            	                              													
            	                            }

            	                            }
            	                            break;

            	                    }

            	                    // InternalMcmodel.g:14395:13: ( ( (lv_broken_36_0= 'true' ) ) | otherlv_37= 'false' )
            	                    int alt455=2;
            	                    int LA455_0 = input.LA(1);

            	                    if ( (LA455_0==20) ) {
            	                        alt455=1;
            	                    }
            	                    else if ( (LA455_0==21) ) {
            	                        alt455=2;
            	                    }
            	                    else {
            	                        if (state.backtracking>0) {state.failed=true; return current;}
            	                        NoViableAltException nvae =
            	                            new NoViableAltException("", 455, 0, input);

            	                        throw nvae;
            	                    }
            	                    switch (alt455) {
            	                        case 1 :
            	                            // InternalMcmodel.g:14396:14: ( (lv_broken_36_0= 'true' ) )
            	                            {
            	                            // InternalMcmodel.g:14396:14: ( (lv_broken_36_0= 'true' ) )
            	                            // InternalMcmodel.g:14397:15: (lv_broken_36_0= 'true' )
            	                            {
            	                            // InternalMcmodel.g:14397:15: (lv_broken_36_0= 'true' )
            	                            // InternalMcmodel.g:14398:16: lv_broken_36_0= 'true'
            	                            {
            	                            lv_broken_36_0=(Token)match(input,20,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              																newLeafNode(lv_broken_36_0, grammarAccess.getOverridePredicate_11Access().getBrokenTrueKeyword_1_2_1_1_1_1_1_0_0());
            	                              															
            	                            }
            	                            if ( state.backtracking==0 ) {

            	                              																if (current==null) {
            	                              																	current = createModelElement(grammarAccess.getOverridePredicate_11Rule());
            	                              																}
            	                              																setWithLastConsumed(current, "broken", true, "true");
            	                              															
            	                            }

            	                            }


            	                            }


            	                            }
            	                            break;
            	                        case 2 :
            	                            // InternalMcmodel.g:14411:14: otherlv_37= 'false'
            	                            {
            	                            otherlv_37=(Token)match(input,21,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_37, grammarAccess.getOverridePredicate_11Access().getFalseKeyword_1_2_1_1_1_1_1_1());
            	                              													
            	                            }

            	                            }
            	                            break;

            	                    }


            	                    }


            	                    }
            	                    break;

            	            }


            	            }


            	            }
            	            break;

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getOverridePredicate_11Access().getUnorderedGroup_1());

            	    }


            	    }


            	    }
            	    break;
            	case 4 :
            	    // InternalMcmodel.g:14426:4: ({...}? => ( ({...}? => (otherlv_38= '&' ( ( ( (lv_castDefined_39_0= '!' ) ) otherlv_40= 'cast' ) | ( ( (lv_castDefined_41_0= 'cast' ) ) ( (otherlv_42= '!=' ( ( (lv_cast_43_0= 'false' ) ) | otherlv_44= 'true' ) ) | ( (otherlv_45= '=' | otherlv_46= '==' ) ( ( (lv_cast_47_0= 'true' ) ) | otherlv_48= 'false' ) ) ) ) ) ) ) ) )
            	    {
            	    // InternalMcmodel.g:14426:4: ({...}? => ( ({...}? => (otherlv_38= '&' ( ( ( (lv_castDefined_39_0= '!' ) ) otherlv_40= 'cast' ) | ( ( (lv_castDefined_41_0= 'cast' ) ) ( (otherlv_42= '!=' ( ( (lv_cast_43_0= 'false' ) ) | otherlv_44= 'true' ) ) | ( (otherlv_45= '=' | otherlv_46= '==' ) ( ( (lv_cast_47_0= 'true' ) ) | otherlv_48= 'false' ) ) ) ) ) ) ) ) )
            	    // InternalMcmodel.g:14427:5: {...}? => ( ({...}? => (otherlv_38= '&' ( ( ( (lv_castDefined_39_0= '!' ) ) otherlv_40= 'cast' ) | ( ( (lv_castDefined_41_0= 'cast' ) ) ( (otherlv_42= '!=' ( ( (lv_cast_43_0= 'false' ) ) | otherlv_44= 'true' ) ) | ( (otherlv_45= '=' | otherlv_46= '==' ) ( ( (lv_cast_47_0= 'true' ) ) | otherlv_48= 'false' ) ) ) ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_11Access().getUnorderedGroup_1(), 3) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_11", "getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_11Access().getUnorderedGroup_1(), 3)");
            	    }
            	    // InternalMcmodel.g:14427:117: ( ({...}? => (otherlv_38= '&' ( ( ( (lv_castDefined_39_0= '!' ) ) otherlv_40= 'cast' ) | ( ( (lv_castDefined_41_0= 'cast' ) ) ( (otherlv_42= '!=' ( ( (lv_cast_43_0= 'false' ) ) | otherlv_44= 'true' ) ) | ( (otherlv_45= '=' | otherlv_46= '==' ) ( ( (lv_cast_47_0= 'true' ) ) | otherlv_48= 'false' ) ) ) ) ) ) ) )
            	    // InternalMcmodel.g:14428:6: ({...}? => (otherlv_38= '&' ( ( ( (lv_castDefined_39_0= '!' ) ) otherlv_40= 'cast' ) | ( ( (lv_castDefined_41_0= 'cast' ) ) ( (otherlv_42= '!=' ( ( (lv_cast_43_0= 'false' ) ) | otherlv_44= 'true' ) ) | ( (otherlv_45= '=' | otherlv_46= '==' ) ( ( (lv_cast_47_0= 'true' ) ) | otherlv_48= 'false' ) ) ) ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getOverridePredicate_11Access().getUnorderedGroup_1(), 3);
            	    // InternalMcmodel.g:14431:9: ({...}? => (otherlv_38= '&' ( ( ( (lv_castDefined_39_0= '!' ) ) otherlv_40= 'cast' ) | ( ( (lv_castDefined_41_0= 'cast' ) ) ( (otherlv_42= '!=' ( ( (lv_cast_43_0= 'false' ) ) | otherlv_44= 'true' ) ) | ( (otherlv_45= '=' | otherlv_46= '==' ) ( ( (lv_cast_47_0= 'true' ) ) | otherlv_48= 'false' ) ) ) ) ) ) )
            	    // InternalMcmodel.g:14431:10: {...}? => (otherlv_38= '&' ( ( ( (lv_castDefined_39_0= '!' ) ) otherlv_40= 'cast' ) | ( ( (lv_castDefined_41_0= 'cast' ) ) ( (otherlv_42= '!=' ( ( (lv_cast_43_0= 'false' ) ) | otherlv_44= 'true' ) ) | ( (otherlv_45= '=' | otherlv_46= '==' ) ( ( (lv_cast_47_0= 'true' ) ) | otherlv_48= 'false' ) ) ) ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_11", "true");
            	    }
            	    // InternalMcmodel.g:14431:19: (otherlv_38= '&' ( ( ( (lv_castDefined_39_0= '!' ) ) otherlv_40= 'cast' ) | ( ( (lv_castDefined_41_0= 'cast' ) ) ( (otherlv_42= '!=' ( ( (lv_cast_43_0= 'false' ) ) | otherlv_44= 'true' ) ) | ( (otherlv_45= '=' | otherlv_46= '==' ) ( ( (lv_cast_47_0= 'true' ) ) | otherlv_48= 'false' ) ) ) ) ) )
            	    // InternalMcmodel.g:14431:20: otherlv_38= '&' ( ( ( (lv_castDefined_39_0= '!' ) ) otherlv_40= 'cast' ) | ( ( (lv_castDefined_41_0= 'cast' ) ) ( (otherlv_42= '!=' ( ( (lv_cast_43_0= 'false' ) ) | otherlv_44= 'true' ) ) | ( (otherlv_45= '=' | otherlv_46= '==' ) ( ( (lv_cast_47_0= 'true' ) ) | otherlv_48= 'false' ) ) ) ) )
            	    {
            	    otherlv_38=(Token)match(input,59,FOLLOW_43); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_38, grammarAccess.getOverridePredicate_11Access().getAmpersandKeyword_1_3_0());
            	      								
            	    }
            	    // InternalMcmodel.g:14435:9: ( ( ( (lv_castDefined_39_0= '!' ) ) otherlv_40= 'cast' ) | ( ( (lv_castDefined_41_0= 'cast' ) ) ( (otherlv_42= '!=' ( ( (lv_cast_43_0= 'false' ) ) | otherlv_44= 'true' ) ) | ( (otherlv_45= '=' | otherlv_46= '==' ) ( ( (lv_cast_47_0= 'true' ) ) | otherlv_48= 'false' ) ) ) ) )
            	    int alt462=2;
            	    int LA462_0 = input.LA(1);

            	    if ( (LA462_0==60) ) {
            	        alt462=1;
            	    }
            	    else if ( (LA462_0==64) ) {
            	        alt462=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 462, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt462) {
            	        case 1 :
            	            // InternalMcmodel.g:14436:10: ( ( (lv_castDefined_39_0= '!' ) ) otherlv_40= 'cast' )
            	            {
            	            // InternalMcmodel.g:14436:10: ( ( (lv_castDefined_39_0= '!' ) ) otherlv_40= 'cast' )
            	            // InternalMcmodel.g:14437:11: ( (lv_castDefined_39_0= '!' ) ) otherlv_40= 'cast'
            	            {
            	            // InternalMcmodel.g:14437:11: ( (lv_castDefined_39_0= '!' ) )
            	            // InternalMcmodel.g:14438:12: (lv_castDefined_39_0= '!' )
            	            {
            	            // InternalMcmodel.g:14438:12: (lv_castDefined_39_0= '!' )
            	            // InternalMcmodel.g:14439:13: lv_castDefined_39_0= '!'
            	            {
            	            lv_castDefined_39_0=(Token)match(input,60,FOLLOW_44); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              													newLeafNode(lv_castDefined_39_0, grammarAccess.getOverridePredicate_11Access().getCastDefinedExclamationMarkKeyword_1_3_1_0_0_0());
            	              												
            	            }
            	            if ( state.backtracking==0 ) {

            	              													if (current==null) {
            	              														current = createModelElement(grammarAccess.getOverridePredicate_11Rule());
            	              													}
            	              													setWithLastConsumed(current, "castDefined", true, "!");
            	              												
            	            }

            	            }


            	            }

            	            otherlv_40=(Token)match(input,64,FOLLOW_37); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              											newLeafNode(otherlv_40, grammarAccess.getOverridePredicate_11Access().getCastKeyword_1_3_1_0_1());
            	              										
            	            }

            	            }


            	            }
            	            break;
            	        case 2 :
            	            // InternalMcmodel.g:14457:10: ( ( (lv_castDefined_41_0= 'cast' ) ) ( (otherlv_42= '!=' ( ( (lv_cast_43_0= 'false' ) ) | otherlv_44= 'true' ) ) | ( (otherlv_45= '=' | otherlv_46= '==' ) ( ( (lv_cast_47_0= 'true' ) ) | otherlv_48= 'false' ) ) ) )
            	            {
            	            // InternalMcmodel.g:14457:10: ( ( (lv_castDefined_41_0= 'cast' ) ) ( (otherlv_42= '!=' ( ( (lv_cast_43_0= 'false' ) ) | otherlv_44= 'true' ) ) | ( (otherlv_45= '=' | otherlv_46= '==' ) ( ( (lv_cast_47_0= 'true' ) ) | otherlv_48= 'false' ) ) ) )
            	            // InternalMcmodel.g:14458:11: ( (lv_castDefined_41_0= 'cast' ) ) ( (otherlv_42= '!=' ( ( (lv_cast_43_0= 'false' ) ) | otherlv_44= 'true' ) ) | ( (otherlv_45= '=' | otherlv_46= '==' ) ( ( (lv_cast_47_0= 'true' ) ) | otherlv_48= 'false' ) ) )
            	            {
            	            // InternalMcmodel.g:14458:11: ( (lv_castDefined_41_0= 'cast' ) )
            	            // InternalMcmodel.g:14459:12: (lv_castDefined_41_0= 'cast' )
            	            {
            	            // InternalMcmodel.g:14459:12: (lv_castDefined_41_0= 'cast' )
            	            // InternalMcmodel.g:14460:13: lv_castDefined_41_0= 'cast'
            	            {
            	            lv_castDefined_41_0=(Token)match(input,64,FOLLOW_40); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              													newLeafNode(lv_castDefined_41_0, grammarAccess.getOverridePredicate_11Access().getCastDefinedCastKeyword_1_3_1_1_0_0());
            	              												
            	            }
            	            if ( state.backtracking==0 ) {

            	              													if (current==null) {
            	              														current = createModelElement(grammarAccess.getOverridePredicate_11Rule());
            	              													}
            	              													setWithLastConsumed(current, "castDefined", true, "cast");
            	              												
            	            }

            	            }


            	            }

            	            // InternalMcmodel.g:14472:11: ( (otherlv_42= '!=' ( ( (lv_cast_43_0= 'false' ) ) | otherlv_44= 'true' ) ) | ( (otherlv_45= '=' | otherlv_46= '==' ) ( ( (lv_cast_47_0= 'true' ) ) | otherlv_48= 'false' ) ) )
            	            int alt461=2;
            	            int LA461_0 = input.LA(1);

            	            if ( (LA461_0==62) ) {
            	                alt461=1;
            	            }
            	            else if ( (LA461_0==18||LA461_0==58) ) {
            	                alt461=2;
            	            }
            	            else {
            	                if (state.backtracking>0) {state.failed=true; return current;}
            	                NoViableAltException nvae =
            	                    new NoViableAltException("", 461, 0, input);

            	                throw nvae;
            	            }
            	            switch (alt461) {
            	                case 1 :
            	                    // InternalMcmodel.g:14473:12: (otherlv_42= '!=' ( ( (lv_cast_43_0= 'false' ) ) | otherlv_44= 'true' ) )
            	                    {
            	                    // InternalMcmodel.g:14473:12: (otherlv_42= '!=' ( ( (lv_cast_43_0= 'false' ) ) | otherlv_44= 'true' ) )
            	                    // InternalMcmodel.g:14474:13: otherlv_42= '!=' ( ( (lv_cast_43_0= 'false' ) ) | otherlv_44= 'true' )
            	                    {
            	                    otherlv_42=(Token)match(input,62,FOLLOW_7); if (state.failed) return current;
            	                    if ( state.backtracking==0 ) {

            	                      													newLeafNode(otherlv_42, grammarAccess.getOverridePredicate_11Access().getExclamationMarkEqualsSignKeyword_1_3_1_1_1_0_0());
            	                      												
            	                    }
            	                    // InternalMcmodel.g:14478:13: ( ( (lv_cast_43_0= 'false' ) ) | otherlv_44= 'true' )
            	                    int alt458=2;
            	                    int LA458_0 = input.LA(1);

            	                    if ( (LA458_0==21) ) {
            	                        alt458=1;
            	                    }
            	                    else if ( (LA458_0==20) ) {
            	                        alt458=2;
            	                    }
            	                    else {
            	                        if (state.backtracking>0) {state.failed=true; return current;}
            	                        NoViableAltException nvae =
            	                            new NoViableAltException("", 458, 0, input);

            	                        throw nvae;
            	                    }
            	                    switch (alt458) {
            	                        case 1 :
            	                            // InternalMcmodel.g:14479:14: ( (lv_cast_43_0= 'false' ) )
            	                            {
            	                            // InternalMcmodel.g:14479:14: ( (lv_cast_43_0= 'false' ) )
            	                            // InternalMcmodel.g:14480:15: (lv_cast_43_0= 'false' )
            	                            {
            	                            // InternalMcmodel.g:14480:15: (lv_cast_43_0= 'false' )
            	                            // InternalMcmodel.g:14481:16: lv_cast_43_0= 'false'
            	                            {
            	                            lv_cast_43_0=(Token)match(input,21,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              																newLeafNode(lv_cast_43_0, grammarAccess.getOverridePredicate_11Access().getCastFalseKeyword_1_3_1_1_1_0_1_0_0());
            	                              															
            	                            }
            	                            if ( state.backtracking==0 ) {

            	                              																if (current==null) {
            	                              																	current = createModelElement(grammarAccess.getOverridePredicate_11Rule());
            	                              																}
            	                              																setWithLastConsumed(current, "cast", true, "false");
            	                              															
            	                            }

            	                            }


            	                            }


            	                            }
            	                            break;
            	                        case 2 :
            	                            // InternalMcmodel.g:14494:14: otherlv_44= 'true'
            	                            {
            	                            otherlv_44=(Token)match(input,20,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_44, grammarAccess.getOverridePredicate_11Access().getTrueKeyword_1_3_1_1_1_0_1_1());
            	                              													
            	                            }

            	                            }
            	                            break;

            	                    }


            	                    }


            	                    }
            	                    break;
            	                case 2 :
            	                    // InternalMcmodel.g:14501:12: ( (otherlv_45= '=' | otherlv_46= '==' ) ( ( (lv_cast_47_0= 'true' ) ) | otherlv_48= 'false' ) )
            	                    {
            	                    // InternalMcmodel.g:14501:12: ( (otherlv_45= '=' | otherlv_46= '==' ) ( ( (lv_cast_47_0= 'true' ) ) | otherlv_48= 'false' ) )
            	                    // InternalMcmodel.g:14502:13: (otherlv_45= '=' | otherlv_46= '==' ) ( ( (lv_cast_47_0= 'true' ) ) | otherlv_48= 'false' )
            	                    {
            	                    // InternalMcmodel.g:14502:13: (otherlv_45= '=' | otherlv_46= '==' )
            	                    int alt459=2;
            	                    int LA459_0 = input.LA(1);

            	                    if ( (LA459_0==18) ) {
            	                        alt459=1;
            	                    }
            	                    else if ( (LA459_0==58) ) {
            	                        alt459=2;
            	                    }
            	                    else {
            	                        if (state.backtracking>0) {state.failed=true; return current;}
            	                        NoViableAltException nvae =
            	                            new NoViableAltException("", 459, 0, input);

            	                        throw nvae;
            	                    }
            	                    switch (alt459) {
            	                        case 1 :
            	                            // InternalMcmodel.g:14503:14: otherlv_45= '='
            	                            {
            	                            otherlv_45=(Token)match(input,18,FOLLOW_7); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_45, grammarAccess.getOverridePredicate_11Access().getEqualsSignKeyword_1_3_1_1_1_1_0_0());
            	                              													
            	                            }

            	                            }
            	                            break;
            	                        case 2 :
            	                            // InternalMcmodel.g:14508:14: otherlv_46= '=='
            	                            {
            	                            otherlv_46=(Token)match(input,58,FOLLOW_7); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_46, grammarAccess.getOverridePredicate_11Access().getEqualsSignEqualsSignKeyword_1_3_1_1_1_1_0_1());
            	                              													
            	                            }

            	                            }
            	                            break;

            	                    }

            	                    // InternalMcmodel.g:14513:13: ( ( (lv_cast_47_0= 'true' ) ) | otherlv_48= 'false' )
            	                    int alt460=2;
            	                    int LA460_0 = input.LA(1);

            	                    if ( (LA460_0==20) ) {
            	                        alt460=1;
            	                    }
            	                    else if ( (LA460_0==21) ) {
            	                        alt460=2;
            	                    }
            	                    else {
            	                        if (state.backtracking>0) {state.failed=true; return current;}
            	                        NoViableAltException nvae =
            	                            new NoViableAltException("", 460, 0, input);

            	                        throw nvae;
            	                    }
            	                    switch (alt460) {
            	                        case 1 :
            	                            // InternalMcmodel.g:14514:14: ( (lv_cast_47_0= 'true' ) )
            	                            {
            	                            // InternalMcmodel.g:14514:14: ( (lv_cast_47_0= 'true' ) )
            	                            // InternalMcmodel.g:14515:15: (lv_cast_47_0= 'true' )
            	                            {
            	                            // InternalMcmodel.g:14515:15: (lv_cast_47_0= 'true' )
            	                            // InternalMcmodel.g:14516:16: lv_cast_47_0= 'true'
            	                            {
            	                            lv_cast_47_0=(Token)match(input,20,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              																newLeafNode(lv_cast_47_0, grammarAccess.getOverridePredicate_11Access().getCastTrueKeyword_1_3_1_1_1_1_1_0_0());
            	                              															
            	                            }
            	                            if ( state.backtracking==0 ) {

            	                              																if (current==null) {
            	                              																	current = createModelElement(grammarAccess.getOverridePredicate_11Rule());
            	                              																}
            	                              																setWithLastConsumed(current, "cast", true, "true");
            	                              															
            	                            }

            	                            }


            	                            }


            	                            }
            	                            break;
            	                        case 2 :
            	                            // InternalMcmodel.g:14529:14: otherlv_48= 'false'
            	                            {
            	                            otherlv_48=(Token)match(input,21,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_48, grammarAccess.getOverridePredicate_11Access().getFalseKeyword_1_3_1_1_1_1_1_1());
            	                              													
            	                            }

            	                            }
            	                            break;

            	                    }


            	                    }


            	                    }
            	                    break;

            	            }


            	            }


            	            }
            	            break;

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getOverridePredicate_11Access().getUnorderedGroup_1());

            	    }


            	    }


            	    }
            	    break;
            	case 5 :
            	    // InternalMcmodel.g:14544:4: ({...}? => ( ({...}? => (otherlv_49= '&' ( (lv_cooldownDefined_50_0= 'cooldown' ) ) (otherlv_51= '=' | otherlv_52= '==' ) ( (lv_cooldown_53_0= RULE_PERCENTAGE ) ) ) ) ) )
            	    {
            	    // InternalMcmodel.g:14544:4: ({...}? => ( ({...}? => (otherlv_49= '&' ( (lv_cooldownDefined_50_0= 'cooldown' ) ) (otherlv_51= '=' | otherlv_52= '==' ) ( (lv_cooldown_53_0= RULE_PERCENTAGE ) ) ) ) ) )
            	    // InternalMcmodel.g:14545:5: {...}? => ( ({...}? => (otherlv_49= '&' ( (lv_cooldownDefined_50_0= 'cooldown' ) ) (otherlv_51= '=' | otherlv_52= '==' ) ( (lv_cooldown_53_0= RULE_PERCENTAGE ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_11Access().getUnorderedGroup_1(), 4) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_11", "getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_11Access().getUnorderedGroup_1(), 4)");
            	    }
            	    // InternalMcmodel.g:14545:117: ( ({...}? => (otherlv_49= '&' ( (lv_cooldownDefined_50_0= 'cooldown' ) ) (otherlv_51= '=' | otherlv_52= '==' ) ( (lv_cooldown_53_0= RULE_PERCENTAGE ) ) ) ) )
            	    // InternalMcmodel.g:14546:6: ({...}? => (otherlv_49= '&' ( (lv_cooldownDefined_50_0= 'cooldown' ) ) (otherlv_51= '=' | otherlv_52= '==' ) ( (lv_cooldown_53_0= RULE_PERCENTAGE ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getOverridePredicate_11Access().getUnorderedGroup_1(), 4);
            	    // InternalMcmodel.g:14549:9: ({...}? => (otherlv_49= '&' ( (lv_cooldownDefined_50_0= 'cooldown' ) ) (otherlv_51= '=' | otherlv_52= '==' ) ( (lv_cooldown_53_0= RULE_PERCENTAGE ) ) ) )
            	    // InternalMcmodel.g:14549:10: {...}? => (otherlv_49= '&' ( (lv_cooldownDefined_50_0= 'cooldown' ) ) (otherlv_51= '=' | otherlv_52= '==' ) ( (lv_cooldown_53_0= RULE_PERCENTAGE ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_11", "true");
            	    }
            	    // InternalMcmodel.g:14549:19: (otherlv_49= '&' ( (lv_cooldownDefined_50_0= 'cooldown' ) ) (otherlv_51= '=' | otherlv_52= '==' ) ( (lv_cooldown_53_0= RULE_PERCENTAGE ) ) )
            	    // InternalMcmodel.g:14549:20: otherlv_49= '&' ( (lv_cooldownDefined_50_0= 'cooldown' ) ) (otherlv_51= '=' | otherlv_52= '==' ) ( (lv_cooldown_53_0= RULE_PERCENTAGE ) )
            	    {
            	    otherlv_49=(Token)match(input,59,FOLLOW_45); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_49, grammarAccess.getOverridePredicate_11Access().getAmpersandKeyword_1_4_0());
            	      								
            	    }
            	    // InternalMcmodel.g:14553:9: ( (lv_cooldownDefined_50_0= 'cooldown' ) )
            	    // InternalMcmodel.g:14554:10: (lv_cooldownDefined_50_0= 'cooldown' )
            	    {
            	    // InternalMcmodel.g:14554:10: (lv_cooldownDefined_50_0= 'cooldown' )
            	    // InternalMcmodel.g:14555:11: lv_cooldownDefined_50_0= 'cooldown'
            	    {
            	    lv_cooldownDefined_50_0=(Token)match(input,65,FOLLOW_35); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											newLeafNode(lv_cooldownDefined_50_0, grammarAccess.getOverridePredicate_11Access().getCooldownDefinedCooldownKeyword_1_4_1_0());
            	      										
            	    }
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElement(grammarAccess.getOverridePredicate_11Rule());
            	      											}
            	      											setWithLastConsumed(current, "cooldownDefined", true, "cooldown");
            	      										
            	    }

            	    }


            	    }

            	    // InternalMcmodel.g:14567:9: (otherlv_51= '=' | otherlv_52= '==' )
            	    int alt463=2;
            	    int LA463_0 = input.LA(1);

            	    if ( (LA463_0==18) ) {
            	        alt463=1;
            	    }
            	    else if ( (LA463_0==58) ) {
            	        alt463=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 463, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt463) {
            	        case 1 :
            	            // InternalMcmodel.g:14568:10: otherlv_51= '='
            	            {
            	            otherlv_51=(Token)match(input,18,FOLLOW_36); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(otherlv_51, grammarAccess.getOverridePredicate_11Access().getEqualsSignKeyword_1_4_2_0());
            	              									
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalMcmodel.g:14573:10: otherlv_52= '=='
            	            {
            	            otherlv_52=(Token)match(input,58,FOLLOW_36); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(otherlv_52, grammarAccess.getOverridePredicate_11Access().getEqualsSignEqualsSignKeyword_1_4_2_1());
            	              									
            	            }

            	            }
            	            break;

            	    }

            	    // InternalMcmodel.g:14578:9: ( (lv_cooldown_53_0= RULE_PERCENTAGE ) )
            	    // InternalMcmodel.g:14579:10: (lv_cooldown_53_0= RULE_PERCENTAGE )
            	    {
            	    // InternalMcmodel.g:14579:10: (lv_cooldown_53_0= RULE_PERCENTAGE )
            	    // InternalMcmodel.g:14580:11: lv_cooldown_53_0= RULE_PERCENTAGE
            	    {
            	    lv_cooldown_53_0=(Token)match(input,RULE_PERCENTAGE,FOLLOW_37); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											newLeafNode(lv_cooldown_53_0, grammarAccess.getOverridePredicate_11Access().getCooldownPERCENTAGETerminalRuleCall_1_4_3_0());
            	      										
            	    }
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElement(grammarAccess.getOverridePredicate_11Rule());
            	      											}
            	      											setWithLastConsumed(
            	      												current,
            	      												"cooldown",
            	      												lv_cooldown_53_0,
            	      												"com.raptor.mcmodel.Mcmodel.PERCENTAGE");
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getOverridePredicate_11Access().getUnorderedGroup_1());

            	    }


            	    }


            	    }
            	    break;
            	case 6 :
            	    // InternalMcmodel.g:14602:4: ({...}? => ( ({...}? => (otherlv_54= '&' ( (lv_damageDefined_55_0= 'damage' ) ) (otherlv_56= '=' | otherlv_57= '==' ) ( (lv_damage_58_0= RULE_PERCENTAGE ) ) ) ) ) )
            	    {
            	    // InternalMcmodel.g:14602:4: ({...}? => ( ({...}? => (otherlv_54= '&' ( (lv_damageDefined_55_0= 'damage' ) ) (otherlv_56= '=' | otherlv_57= '==' ) ( (lv_damage_58_0= RULE_PERCENTAGE ) ) ) ) ) )
            	    // InternalMcmodel.g:14603:5: {...}? => ( ({...}? => (otherlv_54= '&' ( (lv_damageDefined_55_0= 'damage' ) ) (otherlv_56= '=' | otherlv_57= '==' ) ( (lv_damage_58_0= RULE_PERCENTAGE ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_11Access().getUnorderedGroup_1(), 5) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_11", "getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_11Access().getUnorderedGroup_1(), 5)");
            	    }
            	    // InternalMcmodel.g:14603:117: ( ({...}? => (otherlv_54= '&' ( (lv_damageDefined_55_0= 'damage' ) ) (otherlv_56= '=' | otherlv_57= '==' ) ( (lv_damage_58_0= RULE_PERCENTAGE ) ) ) ) )
            	    // InternalMcmodel.g:14604:6: ({...}? => (otherlv_54= '&' ( (lv_damageDefined_55_0= 'damage' ) ) (otherlv_56= '=' | otherlv_57= '==' ) ( (lv_damage_58_0= RULE_PERCENTAGE ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getOverridePredicate_11Access().getUnorderedGroup_1(), 5);
            	    // InternalMcmodel.g:14607:9: ({...}? => (otherlv_54= '&' ( (lv_damageDefined_55_0= 'damage' ) ) (otherlv_56= '=' | otherlv_57= '==' ) ( (lv_damage_58_0= RULE_PERCENTAGE ) ) ) )
            	    // InternalMcmodel.g:14607:10: {...}? => (otherlv_54= '&' ( (lv_damageDefined_55_0= 'damage' ) ) (otherlv_56= '=' | otherlv_57= '==' ) ( (lv_damage_58_0= RULE_PERCENTAGE ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_11", "true");
            	    }
            	    // InternalMcmodel.g:14607:19: (otherlv_54= '&' ( (lv_damageDefined_55_0= 'damage' ) ) (otherlv_56= '=' | otherlv_57= '==' ) ( (lv_damage_58_0= RULE_PERCENTAGE ) ) )
            	    // InternalMcmodel.g:14607:20: otherlv_54= '&' ( (lv_damageDefined_55_0= 'damage' ) ) (otherlv_56= '=' | otherlv_57= '==' ) ( (lv_damage_58_0= RULE_PERCENTAGE ) )
            	    {
            	    otherlv_54=(Token)match(input,59,FOLLOW_46); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_54, grammarAccess.getOverridePredicate_11Access().getAmpersandKeyword_1_5_0());
            	      								
            	    }
            	    // InternalMcmodel.g:14611:9: ( (lv_damageDefined_55_0= 'damage' ) )
            	    // InternalMcmodel.g:14612:10: (lv_damageDefined_55_0= 'damage' )
            	    {
            	    // InternalMcmodel.g:14612:10: (lv_damageDefined_55_0= 'damage' )
            	    // InternalMcmodel.g:14613:11: lv_damageDefined_55_0= 'damage'
            	    {
            	    lv_damageDefined_55_0=(Token)match(input,66,FOLLOW_35); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											newLeafNode(lv_damageDefined_55_0, grammarAccess.getOverridePredicate_11Access().getDamageDefinedDamageKeyword_1_5_1_0());
            	      										
            	    }
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElement(grammarAccess.getOverridePredicate_11Rule());
            	      											}
            	      											setWithLastConsumed(current, "damageDefined", true, "damage");
            	      										
            	    }

            	    }


            	    }

            	    // InternalMcmodel.g:14625:9: (otherlv_56= '=' | otherlv_57= '==' )
            	    int alt464=2;
            	    int LA464_0 = input.LA(1);

            	    if ( (LA464_0==18) ) {
            	        alt464=1;
            	    }
            	    else if ( (LA464_0==58) ) {
            	        alt464=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 464, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt464) {
            	        case 1 :
            	            // InternalMcmodel.g:14626:10: otherlv_56= '='
            	            {
            	            otherlv_56=(Token)match(input,18,FOLLOW_36); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(otherlv_56, grammarAccess.getOverridePredicate_11Access().getEqualsSignKeyword_1_5_2_0());
            	              									
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalMcmodel.g:14631:10: otherlv_57= '=='
            	            {
            	            otherlv_57=(Token)match(input,58,FOLLOW_36); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(otherlv_57, grammarAccess.getOverridePredicate_11Access().getEqualsSignEqualsSignKeyword_1_5_2_1());
            	              									
            	            }

            	            }
            	            break;

            	    }

            	    // InternalMcmodel.g:14636:9: ( (lv_damage_58_0= RULE_PERCENTAGE ) )
            	    // InternalMcmodel.g:14637:10: (lv_damage_58_0= RULE_PERCENTAGE )
            	    {
            	    // InternalMcmodel.g:14637:10: (lv_damage_58_0= RULE_PERCENTAGE )
            	    // InternalMcmodel.g:14638:11: lv_damage_58_0= RULE_PERCENTAGE
            	    {
            	    lv_damage_58_0=(Token)match(input,RULE_PERCENTAGE,FOLLOW_37); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											newLeafNode(lv_damage_58_0, grammarAccess.getOverridePredicate_11Access().getDamagePERCENTAGETerminalRuleCall_1_5_3_0());
            	      										
            	    }
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElement(grammarAccess.getOverridePredicate_11Rule());
            	      											}
            	      											setWithLastConsumed(
            	      												current,
            	      												"damage",
            	      												lv_damage_58_0,
            	      												"com.raptor.mcmodel.Mcmodel.PERCENTAGE");
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getOverridePredicate_11Access().getUnorderedGroup_1());

            	    }


            	    }


            	    }
            	    break;
            	case 7 :
            	    // InternalMcmodel.g:14660:4: ({...}? => ( ({...}? => (otherlv_59= '&' ( ( ( (lv_damagedDefined_60_0= '!' ) ) otherlv_61= 'damaged' ) | ( ( (lv_damagedDefined_62_0= 'damaged' ) ) ( (otherlv_63= '!=' ( ( (lv_damaged_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_damaged_68_0= 'true' ) ) | otherlv_69= 'false' ) ) ) ) ) ) ) ) )
            	    {
            	    // InternalMcmodel.g:14660:4: ({...}? => ( ({...}? => (otherlv_59= '&' ( ( ( (lv_damagedDefined_60_0= '!' ) ) otherlv_61= 'damaged' ) | ( ( (lv_damagedDefined_62_0= 'damaged' ) ) ( (otherlv_63= '!=' ( ( (lv_damaged_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_damaged_68_0= 'true' ) ) | otherlv_69= 'false' ) ) ) ) ) ) ) ) )
            	    // InternalMcmodel.g:14661:5: {...}? => ( ({...}? => (otherlv_59= '&' ( ( ( (lv_damagedDefined_60_0= '!' ) ) otherlv_61= 'damaged' ) | ( ( (lv_damagedDefined_62_0= 'damaged' ) ) ( (otherlv_63= '!=' ( ( (lv_damaged_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_damaged_68_0= 'true' ) ) | otherlv_69= 'false' ) ) ) ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_11Access().getUnorderedGroup_1(), 6) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_11", "getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_11Access().getUnorderedGroup_1(), 6)");
            	    }
            	    // InternalMcmodel.g:14661:117: ( ({...}? => (otherlv_59= '&' ( ( ( (lv_damagedDefined_60_0= '!' ) ) otherlv_61= 'damaged' ) | ( ( (lv_damagedDefined_62_0= 'damaged' ) ) ( (otherlv_63= '!=' ( ( (lv_damaged_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_damaged_68_0= 'true' ) ) | otherlv_69= 'false' ) ) ) ) ) ) ) )
            	    // InternalMcmodel.g:14662:6: ({...}? => (otherlv_59= '&' ( ( ( (lv_damagedDefined_60_0= '!' ) ) otherlv_61= 'damaged' ) | ( ( (lv_damagedDefined_62_0= 'damaged' ) ) ( (otherlv_63= '!=' ( ( (lv_damaged_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_damaged_68_0= 'true' ) ) | otherlv_69= 'false' ) ) ) ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getOverridePredicate_11Access().getUnorderedGroup_1(), 6);
            	    // InternalMcmodel.g:14665:9: ({...}? => (otherlv_59= '&' ( ( ( (lv_damagedDefined_60_0= '!' ) ) otherlv_61= 'damaged' ) | ( ( (lv_damagedDefined_62_0= 'damaged' ) ) ( (otherlv_63= '!=' ( ( (lv_damaged_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_damaged_68_0= 'true' ) ) | otherlv_69= 'false' ) ) ) ) ) ) )
            	    // InternalMcmodel.g:14665:10: {...}? => (otherlv_59= '&' ( ( ( (lv_damagedDefined_60_0= '!' ) ) otherlv_61= 'damaged' ) | ( ( (lv_damagedDefined_62_0= 'damaged' ) ) ( (otherlv_63= '!=' ( ( (lv_damaged_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_damaged_68_0= 'true' ) ) | otherlv_69= 'false' ) ) ) ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_11", "true");
            	    }
            	    // InternalMcmodel.g:14665:19: (otherlv_59= '&' ( ( ( (lv_damagedDefined_60_0= '!' ) ) otherlv_61= 'damaged' ) | ( ( (lv_damagedDefined_62_0= 'damaged' ) ) ( (otherlv_63= '!=' ( ( (lv_damaged_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_damaged_68_0= 'true' ) ) | otherlv_69= 'false' ) ) ) ) ) )
            	    // InternalMcmodel.g:14665:20: otherlv_59= '&' ( ( ( (lv_damagedDefined_60_0= '!' ) ) otherlv_61= 'damaged' ) | ( ( (lv_damagedDefined_62_0= 'damaged' ) ) ( (otherlv_63= '!=' ( ( (lv_damaged_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_damaged_68_0= 'true' ) ) | otherlv_69= 'false' ) ) ) ) )
            	    {
            	    otherlv_59=(Token)match(input,59,FOLLOW_47); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_59, grammarAccess.getOverridePredicate_11Access().getAmpersandKeyword_1_6_0());
            	      								
            	    }
            	    // InternalMcmodel.g:14669:9: ( ( ( (lv_damagedDefined_60_0= '!' ) ) otherlv_61= 'damaged' ) | ( ( (lv_damagedDefined_62_0= 'damaged' ) ) ( (otherlv_63= '!=' ( ( (lv_damaged_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_damaged_68_0= 'true' ) ) | otherlv_69= 'false' ) ) ) ) )
            	    int alt469=2;
            	    int LA469_0 = input.LA(1);

            	    if ( (LA469_0==60) ) {
            	        alt469=1;
            	    }
            	    else if ( (LA469_0==67) ) {
            	        alt469=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 469, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt469) {
            	        case 1 :
            	            // InternalMcmodel.g:14670:10: ( ( (lv_damagedDefined_60_0= '!' ) ) otherlv_61= 'damaged' )
            	            {
            	            // InternalMcmodel.g:14670:10: ( ( (lv_damagedDefined_60_0= '!' ) ) otherlv_61= 'damaged' )
            	            // InternalMcmodel.g:14671:11: ( (lv_damagedDefined_60_0= '!' ) ) otherlv_61= 'damaged'
            	            {
            	            // InternalMcmodel.g:14671:11: ( (lv_damagedDefined_60_0= '!' ) )
            	            // InternalMcmodel.g:14672:12: (lv_damagedDefined_60_0= '!' )
            	            {
            	            // InternalMcmodel.g:14672:12: (lv_damagedDefined_60_0= '!' )
            	            // InternalMcmodel.g:14673:13: lv_damagedDefined_60_0= '!'
            	            {
            	            lv_damagedDefined_60_0=(Token)match(input,60,FOLLOW_48); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              													newLeafNode(lv_damagedDefined_60_0, grammarAccess.getOverridePredicate_11Access().getDamagedDefinedExclamationMarkKeyword_1_6_1_0_0_0());
            	              												
            	            }
            	            if ( state.backtracking==0 ) {

            	              													if (current==null) {
            	              														current = createModelElement(grammarAccess.getOverridePredicate_11Rule());
            	              													}
            	              													setWithLastConsumed(current, "damagedDefined", true, "!");
            	              												
            	            }

            	            }


            	            }

            	            otherlv_61=(Token)match(input,67,FOLLOW_37); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              											newLeafNode(otherlv_61, grammarAccess.getOverridePredicate_11Access().getDamagedKeyword_1_6_1_0_1());
            	              										
            	            }

            	            }


            	            }
            	            break;
            	        case 2 :
            	            // InternalMcmodel.g:14691:10: ( ( (lv_damagedDefined_62_0= 'damaged' ) ) ( (otherlv_63= '!=' ( ( (lv_damaged_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_damaged_68_0= 'true' ) ) | otherlv_69= 'false' ) ) ) )
            	            {
            	            // InternalMcmodel.g:14691:10: ( ( (lv_damagedDefined_62_0= 'damaged' ) ) ( (otherlv_63= '!=' ( ( (lv_damaged_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_damaged_68_0= 'true' ) ) | otherlv_69= 'false' ) ) ) )
            	            // InternalMcmodel.g:14692:11: ( (lv_damagedDefined_62_0= 'damaged' ) ) ( (otherlv_63= '!=' ( ( (lv_damaged_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_damaged_68_0= 'true' ) ) | otherlv_69= 'false' ) ) )
            	            {
            	            // InternalMcmodel.g:14692:11: ( (lv_damagedDefined_62_0= 'damaged' ) )
            	            // InternalMcmodel.g:14693:12: (lv_damagedDefined_62_0= 'damaged' )
            	            {
            	            // InternalMcmodel.g:14693:12: (lv_damagedDefined_62_0= 'damaged' )
            	            // InternalMcmodel.g:14694:13: lv_damagedDefined_62_0= 'damaged'
            	            {
            	            lv_damagedDefined_62_0=(Token)match(input,67,FOLLOW_40); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              													newLeafNode(lv_damagedDefined_62_0, grammarAccess.getOverridePredicate_11Access().getDamagedDefinedDamagedKeyword_1_6_1_1_0_0());
            	              												
            	            }
            	            if ( state.backtracking==0 ) {

            	              													if (current==null) {
            	              														current = createModelElement(grammarAccess.getOverridePredicate_11Rule());
            	              													}
            	              													setWithLastConsumed(current, "damagedDefined", true, "damaged");
            	              												
            	            }

            	            }


            	            }

            	            // InternalMcmodel.g:14706:11: ( (otherlv_63= '!=' ( ( (lv_damaged_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_damaged_68_0= 'true' ) ) | otherlv_69= 'false' ) ) )
            	            int alt468=2;
            	            int LA468_0 = input.LA(1);

            	            if ( (LA468_0==62) ) {
            	                alt468=1;
            	            }
            	            else if ( (LA468_0==18||LA468_0==58) ) {
            	                alt468=2;
            	            }
            	            else {
            	                if (state.backtracking>0) {state.failed=true; return current;}
            	                NoViableAltException nvae =
            	                    new NoViableAltException("", 468, 0, input);

            	                throw nvae;
            	            }
            	            switch (alt468) {
            	                case 1 :
            	                    // InternalMcmodel.g:14707:12: (otherlv_63= '!=' ( ( (lv_damaged_64_0= 'false' ) ) | otherlv_65= 'true' ) )
            	                    {
            	                    // InternalMcmodel.g:14707:12: (otherlv_63= '!=' ( ( (lv_damaged_64_0= 'false' ) ) | otherlv_65= 'true' ) )
            	                    // InternalMcmodel.g:14708:13: otherlv_63= '!=' ( ( (lv_damaged_64_0= 'false' ) ) | otherlv_65= 'true' )
            	                    {
            	                    otherlv_63=(Token)match(input,62,FOLLOW_7); if (state.failed) return current;
            	                    if ( state.backtracking==0 ) {

            	                      													newLeafNode(otherlv_63, grammarAccess.getOverridePredicate_11Access().getExclamationMarkEqualsSignKeyword_1_6_1_1_1_0_0());
            	                      												
            	                    }
            	                    // InternalMcmodel.g:14712:13: ( ( (lv_damaged_64_0= 'false' ) ) | otherlv_65= 'true' )
            	                    int alt465=2;
            	                    int LA465_0 = input.LA(1);

            	                    if ( (LA465_0==21) ) {
            	                        alt465=1;
            	                    }
            	                    else if ( (LA465_0==20) ) {
            	                        alt465=2;
            	                    }
            	                    else {
            	                        if (state.backtracking>0) {state.failed=true; return current;}
            	                        NoViableAltException nvae =
            	                            new NoViableAltException("", 465, 0, input);

            	                        throw nvae;
            	                    }
            	                    switch (alt465) {
            	                        case 1 :
            	                            // InternalMcmodel.g:14713:14: ( (lv_damaged_64_0= 'false' ) )
            	                            {
            	                            // InternalMcmodel.g:14713:14: ( (lv_damaged_64_0= 'false' ) )
            	                            // InternalMcmodel.g:14714:15: (lv_damaged_64_0= 'false' )
            	                            {
            	                            // InternalMcmodel.g:14714:15: (lv_damaged_64_0= 'false' )
            	                            // InternalMcmodel.g:14715:16: lv_damaged_64_0= 'false'
            	                            {
            	                            lv_damaged_64_0=(Token)match(input,21,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              																newLeafNode(lv_damaged_64_0, grammarAccess.getOverridePredicate_11Access().getDamagedFalseKeyword_1_6_1_1_1_0_1_0_0());
            	                              															
            	                            }
            	                            if ( state.backtracking==0 ) {

            	                              																if (current==null) {
            	                              																	current = createModelElement(grammarAccess.getOverridePredicate_11Rule());
            	                              																}
            	                              																setWithLastConsumed(current, "damaged", true, "false");
            	                              															
            	                            }

            	                            }


            	                            }


            	                            }
            	                            break;
            	                        case 2 :
            	                            // InternalMcmodel.g:14728:14: otherlv_65= 'true'
            	                            {
            	                            otherlv_65=(Token)match(input,20,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_65, grammarAccess.getOverridePredicate_11Access().getTrueKeyword_1_6_1_1_1_0_1_1());
            	                              													
            	                            }

            	                            }
            	                            break;

            	                    }


            	                    }


            	                    }
            	                    break;
            	                case 2 :
            	                    // InternalMcmodel.g:14735:12: ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_damaged_68_0= 'true' ) ) | otherlv_69= 'false' ) )
            	                    {
            	                    // InternalMcmodel.g:14735:12: ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_damaged_68_0= 'true' ) ) | otherlv_69= 'false' ) )
            	                    // InternalMcmodel.g:14736:13: (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_damaged_68_0= 'true' ) ) | otherlv_69= 'false' )
            	                    {
            	                    // InternalMcmodel.g:14736:13: (otherlv_66= '=' | otherlv_67= '==' )
            	                    int alt466=2;
            	                    int LA466_0 = input.LA(1);

            	                    if ( (LA466_0==18) ) {
            	                        alt466=1;
            	                    }
            	                    else if ( (LA466_0==58) ) {
            	                        alt466=2;
            	                    }
            	                    else {
            	                        if (state.backtracking>0) {state.failed=true; return current;}
            	                        NoViableAltException nvae =
            	                            new NoViableAltException("", 466, 0, input);

            	                        throw nvae;
            	                    }
            	                    switch (alt466) {
            	                        case 1 :
            	                            // InternalMcmodel.g:14737:14: otherlv_66= '='
            	                            {
            	                            otherlv_66=(Token)match(input,18,FOLLOW_7); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_66, grammarAccess.getOverridePredicate_11Access().getEqualsSignKeyword_1_6_1_1_1_1_0_0());
            	                              													
            	                            }

            	                            }
            	                            break;
            	                        case 2 :
            	                            // InternalMcmodel.g:14742:14: otherlv_67= '=='
            	                            {
            	                            otherlv_67=(Token)match(input,58,FOLLOW_7); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_67, grammarAccess.getOverridePredicate_11Access().getEqualsSignEqualsSignKeyword_1_6_1_1_1_1_0_1());
            	                              													
            	                            }

            	                            }
            	                            break;

            	                    }

            	                    // InternalMcmodel.g:14747:13: ( ( (lv_damaged_68_0= 'true' ) ) | otherlv_69= 'false' )
            	                    int alt467=2;
            	                    int LA467_0 = input.LA(1);

            	                    if ( (LA467_0==20) ) {
            	                        alt467=1;
            	                    }
            	                    else if ( (LA467_0==21) ) {
            	                        alt467=2;
            	                    }
            	                    else {
            	                        if (state.backtracking>0) {state.failed=true; return current;}
            	                        NoViableAltException nvae =
            	                            new NoViableAltException("", 467, 0, input);

            	                        throw nvae;
            	                    }
            	                    switch (alt467) {
            	                        case 1 :
            	                            // InternalMcmodel.g:14748:14: ( (lv_damaged_68_0= 'true' ) )
            	                            {
            	                            // InternalMcmodel.g:14748:14: ( (lv_damaged_68_0= 'true' ) )
            	                            // InternalMcmodel.g:14749:15: (lv_damaged_68_0= 'true' )
            	                            {
            	                            // InternalMcmodel.g:14749:15: (lv_damaged_68_0= 'true' )
            	                            // InternalMcmodel.g:14750:16: lv_damaged_68_0= 'true'
            	                            {
            	                            lv_damaged_68_0=(Token)match(input,20,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              																newLeafNode(lv_damaged_68_0, grammarAccess.getOverridePredicate_11Access().getDamagedTrueKeyword_1_6_1_1_1_1_1_0_0());
            	                              															
            	                            }
            	                            if ( state.backtracking==0 ) {

            	                              																if (current==null) {
            	                              																	current = createModelElement(grammarAccess.getOverridePredicate_11Rule());
            	                              																}
            	                              																setWithLastConsumed(current, "damaged", true, "true");
            	                              															
            	                            }

            	                            }


            	                            }


            	                            }
            	                            break;
            	                        case 2 :
            	                            // InternalMcmodel.g:14763:14: otherlv_69= 'false'
            	                            {
            	                            otherlv_69=(Token)match(input,21,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_69, grammarAccess.getOverridePredicate_11Access().getFalseKeyword_1_6_1_1_1_1_1_1());
            	                              													
            	                            }

            	                            }
            	                            break;

            	                    }


            	                    }


            	                    }
            	                    break;

            	            }


            	            }


            	            }
            	            break;

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getOverridePredicate_11Access().getUnorderedGroup_1());

            	    }


            	    }


            	    }
            	    break;
            	case 8 :
            	    // InternalMcmodel.g:14778:4: ({...}? => ( ({...}? => (otherlv_70= '&' ( ( ( (lv_lefthandedDefined_71_0= '!' ) ) otherlv_72= 'lefthanded' ) | ( ( (lv_lefthandedDefined_73_0= 'lefthanded' ) ) ( (otherlv_74= '!=' ( ( (lv_lefthanded_75_0= 'false' ) ) | otherlv_76= 'true' ) ) | ( (otherlv_77= '=' | otherlv_78= '==' ) ( ( (lv_lefthanded_79_0= 'true' ) ) | otherlv_80= 'false' ) ) ) ) ) ) ) ) )
            	    {
            	    // InternalMcmodel.g:14778:4: ({...}? => ( ({...}? => (otherlv_70= '&' ( ( ( (lv_lefthandedDefined_71_0= '!' ) ) otherlv_72= 'lefthanded' ) | ( ( (lv_lefthandedDefined_73_0= 'lefthanded' ) ) ( (otherlv_74= '!=' ( ( (lv_lefthanded_75_0= 'false' ) ) | otherlv_76= 'true' ) ) | ( (otherlv_77= '=' | otherlv_78= '==' ) ( ( (lv_lefthanded_79_0= 'true' ) ) | otherlv_80= 'false' ) ) ) ) ) ) ) ) )
            	    // InternalMcmodel.g:14779:5: {...}? => ( ({...}? => (otherlv_70= '&' ( ( ( (lv_lefthandedDefined_71_0= '!' ) ) otherlv_72= 'lefthanded' ) | ( ( (lv_lefthandedDefined_73_0= 'lefthanded' ) ) ( (otherlv_74= '!=' ( ( (lv_lefthanded_75_0= 'false' ) ) | otherlv_76= 'true' ) ) | ( (otherlv_77= '=' | otherlv_78= '==' ) ( ( (lv_lefthanded_79_0= 'true' ) ) | otherlv_80= 'false' ) ) ) ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_11Access().getUnorderedGroup_1(), 7) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_11", "getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_11Access().getUnorderedGroup_1(), 7)");
            	    }
            	    // InternalMcmodel.g:14779:117: ( ({...}? => (otherlv_70= '&' ( ( ( (lv_lefthandedDefined_71_0= '!' ) ) otherlv_72= 'lefthanded' ) | ( ( (lv_lefthandedDefined_73_0= 'lefthanded' ) ) ( (otherlv_74= '!=' ( ( (lv_lefthanded_75_0= 'false' ) ) | otherlv_76= 'true' ) ) | ( (otherlv_77= '=' | otherlv_78= '==' ) ( ( (lv_lefthanded_79_0= 'true' ) ) | otherlv_80= 'false' ) ) ) ) ) ) ) )
            	    // InternalMcmodel.g:14780:6: ({...}? => (otherlv_70= '&' ( ( ( (lv_lefthandedDefined_71_0= '!' ) ) otherlv_72= 'lefthanded' ) | ( ( (lv_lefthandedDefined_73_0= 'lefthanded' ) ) ( (otherlv_74= '!=' ( ( (lv_lefthanded_75_0= 'false' ) ) | otherlv_76= 'true' ) ) | ( (otherlv_77= '=' | otherlv_78= '==' ) ( ( (lv_lefthanded_79_0= 'true' ) ) | otherlv_80= 'false' ) ) ) ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getOverridePredicate_11Access().getUnorderedGroup_1(), 7);
            	    // InternalMcmodel.g:14783:9: ({...}? => (otherlv_70= '&' ( ( ( (lv_lefthandedDefined_71_0= '!' ) ) otherlv_72= 'lefthanded' ) | ( ( (lv_lefthandedDefined_73_0= 'lefthanded' ) ) ( (otherlv_74= '!=' ( ( (lv_lefthanded_75_0= 'false' ) ) | otherlv_76= 'true' ) ) | ( (otherlv_77= '=' | otherlv_78= '==' ) ( ( (lv_lefthanded_79_0= 'true' ) ) | otherlv_80= 'false' ) ) ) ) ) ) )
            	    // InternalMcmodel.g:14783:10: {...}? => (otherlv_70= '&' ( ( ( (lv_lefthandedDefined_71_0= '!' ) ) otherlv_72= 'lefthanded' ) | ( ( (lv_lefthandedDefined_73_0= 'lefthanded' ) ) ( (otherlv_74= '!=' ( ( (lv_lefthanded_75_0= 'false' ) ) | otherlv_76= 'true' ) ) | ( (otherlv_77= '=' | otherlv_78= '==' ) ( ( (lv_lefthanded_79_0= 'true' ) ) | otherlv_80= 'false' ) ) ) ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_11", "true");
            	    }
            	    // InternalMcmodel.g:14783:19: (otherlv_70= '&' ( ( ( (lv_lefthandedDefined_71_0= '!' ) ) otherlv_72= 'lefthanded' ) | ( ( (lv_lefthandedDefined_73_0= 'lefthanded' ) ) ( (otherlv_74= '!=' ( ( (lv_lefthanded_75_0= 'false' ) ) | otherlv_76= 'true' ) ) | ( (otherlv_77= '=' | otherlv_78= '==' ) ( ( (lv_lefthanded_79_0= 'true' ) ) | otherlv_80= 'false' ) ) ) ) ) )
            	    // InternalMcmodel.g:14783:20: otherlv_70= '&' ( ( ( (lv_lefthandedDefined_71_0= '!' ) ) otherlv_72= 'lefthanded' ) | ( ( (lv_lefthandedDefined_73_0= 'lefthanded' ) ) ( (otherlv_74= '!=' ( ( (lv_lefthanded_75_0= 'false' ) ) | otherlv_76= 'true' ) ) | ( (otherlv_77= '=' | otherlv_78= '==' ) ( ( (lv_lefthanded_79_0= 'true' ) ) | otherlv_80= 'false' ) ) ) ) )
            	    {
            	    otherlv_70=(Token)match(input,59,FOLLOW_49); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_70, grammarAccess.getOverridePredicate_11Access().getAmpersandKeyword_1_7_0());
            	      								
            	    }
            	    // InternalMcmodel.g:14787:9: ( ( ( (lv_lefthandedDefined_71_0= '!' ) ) otherlv_72= 'lefthanded' ) | ( ( (lv_lefthandedDefined_73_0= 'lefthanded' ) ) ( (otherlv_74= '!=' ( ( (lv_lefthanded_75_0= 'false' ) ) | otherlv_76= 'true' ) ) | ( (otherlv_77= '=' | otherlv_78= '==' ) ( ( (lv_lefthanded_79_0= 'true' ) ) | otherlv_80= 'false' ) ) ) ) )
            	    int alt474=2;
            	    int LA474_0 = input.LA(1);

            	    if ( (LA474_0==60) ) {
            	        alt474=1;
            	    }
            	    else if ( (LA474_0==68) ) {
            	        alt474=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 474, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt474) {
            	        case 1 :
            	            // InternalMcmodel.g:14788:10: ( ( (lv_lefthandedDefined_71_0= '!' ) ) otherlv_72= 'lefthanded' )
            	            {
            	            // InternalMcmodel.g:14788:10: ( ( (lv_lefthandedDefined_71_0= '!' ) ) otherlv_72= 'lefthanded' )
            	            // InternalMcmodel.g:14789:11: ( (lv_lefthandedDefined_71_0= '!' ) ) otherlv_72= 'lefthanded'
            	            {
            	            // InternalMcmodel.g:14789:11: ( (lv_lefthandedDefined_71_0= '!' ) )
            	            // InternalMcmodel.g:14790:12: (lv_lefthandedDefined_71_0= '!' )
            	            {
            	            // InternalMcmodel.g:14790:12: (lv_lefthandedDefined_71_0= '!' )
            	            // InternalMcmodel.g:14791:13: lv_lefthandedDefined_71_0= '!'
            	            {
            	            lv_lefthandedDefined_71_0=(Token)match(input,60,FOLLOW_50); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              													newLeafNode(lv_lefthandedDefined_71_0, grammarAccess.getOverridePredicate_11Access().getLefthandedDefinedExclamationMarkKeyword_1_7_1_0_0_0());
            	              												
            	            }
            	            if ( state.backtracking==0 ) {

            	              													if (current==null) {
            	              														current = createModelElement(grammarAccess.getOverridePredicate_11Rule());
            	              													}
            	              													setWithLastConsumed(current, "lefthandedDefined", true, "!");
            	              												
            	            }

            	            }


            	            }

            	            otherlv_72=(Token)match(input,68,FOLLOW_37); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              											newLeafNode(otherlv_72, grammarAccess.getOverridePredicate_11Access().getLefthandedKeyword_1_7_1_0_1());
            	              										
            	            }

            	            }


            	            }
            	            break;
            	        case 2 :
            	            // InternalMcmodel.g:14809:10: ( ( (lv_lefthandedDefined_73_0= 'lefthanded' ) ) ( (otherlv_74= '!=' ( ( (lv_lefthanded_75_0= 'false' ) ) | otherlv_76= 'true' ) ) | ( (otherlv_77= '=' | otherlv_78= '==' ) ( ( (lv_lefthanded_79_0= 'true' ) ) | otherlv_80= 'false' ) ) ) )
            	            {
            	            // InternalMcmodel.g:14809:10: ( ( (lv_lefthandedDefined_73_0= 'lefthanded' ) ) ( (otherlv_74= '!=' ( ( (lv_lefthanded_75_0= 'false' ) ) | otherlv_76= 'true' ) ) | ( (otherlv_77= '=' | otherlv_78= '==' ) ( ( (lv_lefthanded_79_0= 'true' ) ) | otherlv_80= 'false' ) ) ) )
            	            // InternalMcmodel.g:14810:11: ( (lv_lefthandedDefined_73_0= 'lefthanded' ) ) ( (otherlv_74= '!=' ( ( (lv_lefthanded_75_0= 'false' ) ) | otherlv_76= 'true' ) ) | ( (otherlv_77= '=' | otherlv_78= '==' ) ( ( (lv_lefthanded_79_0= 'true' ) ) | otherlv_80= 'false' ) ) )
            	            {
            	            // InternalMcmodel.g:14810:11: ( (lv_lefthandedDefined_73_0= 'lefthanded' ) )
            	            // InternalMcmodel.g:14811:12: (lv_lefthandedDefined_73_0= 'lefthanded' )
            	            {
            	            // InternalMcmodel.g:14811:12: (lv_lefthandedDefined_73_0= 'lefthanded' )
            	            // InternalMcmodel.g:14812:13: lv_lefthandedDefined_73_0= 'lefthanded'
            	            {
            	            lv_lefthandedDefined_73_0=(Token)match(input,68,FOLLOW_40); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              													newLeafNode(lv_lefthandedDefined_73_0, grammarAccess.getOverridePredicate_11Access().getLefthandedDefinedLefthandedKeyword_1_7_1_1_0_0());
            	              												
            	            }
            	            if ( state.backtracking==0 ) {

            	              													if (current==null) {
            	              														current = createModelElement(grammarAccess.getOverridePredicate_11Rule());
            	              													}
            	              													setWithLastConsumed(current, "lefthandedDefined", true, "lefthanded");
            	              												
            	            }

            	            }


            	            }

            	            // InternalMcmodel.g:14824:11: ( (otherlv_74= '!=' ( ( (lv_lefthanded_75_0= 'false' ) ) | otherlv_76= 'true' ) ) | ( (otherlv_77= '=' | otherlv_78= '==' ) ( ( (lv_lefthanded_79_0= 'true' ) ) | otherlv_80= 'false' ) ) )
            	            int alt473=2;
            	            int LA473_0 = input.LA(1);

            	            if ( (LA473_0==62) ) {
            	                alt473=1;
            	            }
            	            else if ( (LA473_0==18||LA473_0==58) ) {
            	                alt473=2;
            	            }
            	            else {
            	                if (state.backtracking>0) {state.failed=true; return current;}
            	                NoViableAltException nvae =
            	                    new NoViableAltException("", 473, 0, input);

            	                throw nvae;
            	            }
            	            switch (alt473) {
            	                case 1 :
            	                    // InternalMcmodel.g:14825:12: (otherlv_74= '!=' ( ( (lv_lefthanded_75_0= 'false' ) ) | otherlv_76= 'true' ) )
            	                    {
            	                    // InternalMcmodel.g:14825:12: (otherlv_74= '!=' ( ( (lv_lefthanded_75_0= 'false' ) ) | otherlv_76= 'true' ) )
            	                    // InternalMcmodel.g:14826:13: otherlv_74= '!=' ( ( (lv_lefthanded_75_0= 'false' ) ) | otherlv_76= 'true' )
            	                    {
            	                    otherlv_74=(Token)match(input,62,FOLLOW_7); if (state.failed) return current;
            	                    if ( state.backtracking==0 ) {

            	                      													newLeafNode(otherlv_74, grammarAccess.getOverridePredicate_11Access().getExclamationMarkEqualsSignKeyword_1_7_1_1_1_0_0());
            	                      												
            	                    }
            	                    // InternalMcmodel.g:14830:13: ( ( (lv_lefthanded_75_0= 'false' ) ) | otherlv_76= 'true' )
            	                    int alt470=2;
            	                    int LA470_0 = input.LA(1);

            	                    if ( (LA470_0==21) ) {
            	                        alt470=1;
            	                    }
            	                    else if ( (LA470_0==20) ) {
            	                        alt470=2;
            	                    }
            	                    else {
            	                        if (state.backtracking>0) {state.failed=true; return current;}
            	                        NoViableAltException nvae =
            	                            new NoViableAltException("", 470, 0, input);

            	                        throw nvae;
            	                    }
            	                    switch (alt470) {
            	                        case 1 :
            	                            // InternalMcmodel.g:14831:14: ( (lv_lefthanded_75_0= 'false' ) )
            	                            {
            	                            // InternalMcmodel.g:14831:14: ( (lv_lefthanded_75_0= 'false' ) )
            	                            // InternalMcmodel.g:14832:15: (lv_lefthanded_75_0= 'false' )
            	                            {
            	                            // InternalMcmodel.g:14832:15: (lv_lefthanded_75_0= 'false' )
            	                            // InternalMcmodel.g:14833:16: lv_lefthanded_75_0= 'false'
            	                            {
            	                            lv_lefthanded_75_0=(Token)match(input,21,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              																newLeafNode(lv_lefthanded_75_0, grammarAccess.getOverridePredicate_11Access().getLefthandedFalseKeyword_1_7_1_1_1_0_1_0_0());
            	                              															
            	                            }
            	                            if ( state.backtracking==0 ) {

            	                              																if (current==null) {
            	                              																	current = createModelElement(grammarAccess.getOverridePredicate_11Rule());
            	                              																}
            	                              																setWithLastConsumed(current, "lefthanded", true, "false");
            	                              															
            	                            }

            	                            }


            	                            }


            	                            }
            	                            break;
            	                        case 2 :
            	                            // InternalMcmodel.g:14846:14: otherlv_76= 'true'
            	                            {
            	                            otherlv_76=(Token)match(input,20,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_76, grammarAccess.getOverridePredicate_11Access().getTrueKeyword_1_7_1_1_1_0_1_1());
            	                              													
            	                            }

            	                            }
            	                            break;

            	                    }


            	                    }


            	                    }
            	                    break;
            	                case 2 :
            	                    // InternalMcmodel.g:14853:12: ( (otherlv_77= '=' | otherlv_78= '==' ) ( ( (lv_lefthanded_79_0= 'true' ) ) | otherlv_80= 'false' ) )
            	                    {
            	                    // InternalMcmodel.g:14853:12: ( (otherlv_77= '=' | otherlv_78= '==' ) ( ( (lv_lefthanded_79_0= 'true' ) ) | otherlv_80= 'false' ) )
            	                    // InternalMcmodel.g:14854:13: (otherlv_77= '=' | otherlv_78= '==' ) ( ( (lv_lefthanded_79_0= 'true' ) ) | otherlv_80= 'false' )
            	                    {
            	                    // InternalMcmodel.g:14854:13: (otherlv_77= '=' | otherlv_78= '==' )
            	                    int alt471=2;
            	                    int LA471_0 = input.LA(1);

            	                    if ( (LA471_0==18) ) {
            	                        alt471=1;
            	                    }
            	                    else if ( (LA471_0==58) ) {
            	                        alt471=2;
            	                    }
            	                    else {
            	                        if (state.backtracking>0) {state.failed=true; return current;}
            	                        NoViableAltException nvae =
            	                            new NoViableAltException("", 471, 0, input);

            	                        throw nvae;
            	                    }
            	                    switch (alt471) {
            	                        case 1 :
            	                            // InternalMcmodel.g:14855:14: otherlv_77= '='
            	                            {
            	                            otherlv_77=(Token)match(input,18,FOLLOW_7); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_77, grammarAccess.getOverridePredicate_11Access().getEqualsSignKeyword_1_7_1_1_1_1_0_0());
            	                              													
            	                            }

            	                            }
            	                            break;
            	                        case 2 :
            	                            // InternalMcmodel.g:14860:14: otherlv_78= '=='
            	                            {
            	                            otherlv_78=(Token)match(input,58,FOLLOW_7); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_78, grammarAccess.getOverridePredicate_11Access().getEqualsSignEqualsSignKeyword_1_7_1_1_1_1_0_1());
            	                              													
            	                            }

            	                            }
            	                            break;

            	                    }

            	                    // InternalMcmodel.g:14865:13: ( ( (lv_lefthanded_79_0= 'true' ) ) | otherlv_80= 'false' )
            	                    int alt472=2;
            	                    int LA472_0 = input.LA(1);

            	                    if ( (LA472_0==20) ) {
            	                        alt472=1;
            	                    }
            	                    else if ( (LA472_0==21) ) {
            	                        alt472=2;
            	                    }
            	                    else {
            	                        if (state.backtracking>0) {state.failed=true; return current;}
            	                        NoViableAltException nvae =
            	                            new NoViableAltException("", 472, 0, input);

            	                        throw nvae;
            	                    }
            	                    switch (alt472) {
            	                        case 1 :
            	                            // InternalMcmodel.g:14866:14: ( (lv_lefthanded_79_0= 'true' ) )
            	                            {
            	                            // InternalMcmodel.g:14866:14: ( (lv_lefthanded_79_0= 'true' ) )
            	                            // InternalMcmodel.g:14867:15: (lv_lefthanded_79_0= 'true' )
            	                            {
            	                            // InternalMcmodel.g:14867:15: (lv_lefthanded_79_0= 'true' )
            	                            // InternalMcmodel.g:14868:16: lv_lefthanded_79_0= 'true'
            	                            {
            	                            lv_lefthanded_79_0=(Token)match(input,20,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              																newLeafNode(lv_lefthanded_79_0, grammarAccess.getOverridePredicate_11Access().getLefthandedTrueKeyword_1_7_1_1_1_1_1_0_0());
            	                              															
            	                            }
            	                            if ( state.backtracking==0 ) {

            	                              																if (current==null) {
            	                              																	current = createModelElement(grammarAccess.getOverridePredicate_11Rule());
            	                              																}
            	                              																setWithLastConsumed(current, "lefthanded", true, "true");
            	                              															
            	                            }

            	                            }


            	                            }


            	                            }
            	                            break;
            	                        case 2 :
            	                            // InternalMcmodel.g:14881:14: otherlv_80= 'false'
            	                            {
            	                            otherlv_80=(Token)match(input,21,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_80, grammarAccess.getOverridePredicate_11Access().getFalseKeyword_1_7_1_1_1_1_1_1());
            	                              													
            	                            }

            	                            }
            	                            break;

            	                    }


            	                    }


            	                    }
            	                    break;

            	            }


            	            }


            	            }
            	            break;

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getOverridePredicate_11Access().getUnorderedGroup_1());

            	    }


            	    }


            	    }
            	    break;
            	case 9 :
            	    // InternalMcmodel.g:14896:4: ({...}? => ( ({...}? => (otherlv_81= '&' ( (lv_pullDefined_82_0= 'pull' ) ) (otherlv_83= '=' | otherlv_84= '==' ) ( (lv_pull_85_0= RULE_PERCENTAGE ) ) ) ) ) )
            	    {
            	    // InternalMcmodel.g:14896:4: ({...}? => ( ({...}? => (otherlv_81= '&' ( (lv_pullDefined_82_0= 'pull' ) ) (otherlv_83= '=' | otherlv_84= '==' ) ( (lv_pull_85_0= RULE_PERCENTAGE ) ) ) ) ) )
            	    // InternalMcmodel.g:14897:5: {...}? => ( ({...}? => (otherlv_81= '&' ( (lv_pullDefined_82_0= 'pull' ) ) (otherlv_83= '=' | otherlv_84= '==' ) ( (lv_pull_85_0= RULE_PERCENTAGE ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_11Access().getUnorderedGroup_1(), 8) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_11", "getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_11Access().getUnorderedGroup_1(), 8)");
            	    }
            	    // InternalMcmodel.g:14897:117: ( ({...}? => (otherlv_81= '&' ( (lv_pullDefined_82_0= 'pull' ) ) (otherlv_83= '=' | otherlv_84= '==' ) ( (lv_pull_85_0= RULE_PERCENTAGE ) ) ) ) )
            	    // InternalMcmodel.g:14898:6: ({...}? => (otherlv_81= '&' ( (lv_pullDefined_82_0= 'pull' ) ) (otherlv_83= '=' | otherlv_84= '==' ) ( (lv_pull_85_0= RULE_PERCENTAGE ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getOverridePredicate_11Access().getUnorderedGroup_1(), 8);
            	    // InternalMcmodel.g:14901:9: ({...}? => (otherlv_81= '&' ( (lv_pullDefined_82_0= 'pull' ) ) (otherlv_83= '=' | otherlv_84= '==' ) ( (lv_pull_85_0= RULE_PERCENTAGE ) ) ) )
            	    // InternalMcmodel.g:14901:10: {...}? => (otherlv_81= '&' ( (lv_pullDefined_82_0= 'pull' ) ) (otherlv_83= '=' | otherlv_84= '==' ) ( (lv_pull_85_0= RULE_PERCENTAGE ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_11", "true");
            	    }
            	    // InternalMcmodel.g:14901:19: (otherlv_81= '&' ( (lv_pullDefined_82_0= 'pull' ) ) (otherlv_83= '=' | otherlv_84= '==' ) ( (lv_pull_85_0= RULE_PERCENTAGE ) ) )
            	    // InternalMcmodel.g:14901:20: otherlv_81= '&' ( (lv_pullDefined_82_0= 'pull' ) ) (otherlv_83= '=' | otherlv_84= '==' ) ( (lv_pull_85_0= RULE_PERCENTAGE ) )
            	    {
            	    otherlv_81=(Token)match(input,59,FOLLOW_51); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_81, grammarAccess.getOverridePredicate_11Access().getAmpersandKeyword_1_8_0());
            	      								
            	    }
            	    // InternalMcmodel.g:14905:9: ( (lv_pullDefined_82_0= 'pull' ) )
            	    // InternalMcmodel.g:14906:10: (lv_pullDefined_82_0= 'pull' )
            	    {
            	    // InternalMcmodel.g:14906:10: (lv_pullDefined_82_0= 'pull' )
            	    // InternalMcmodel.g:14907:11: lv_pullDefined_82_0= 'pull'
            	    {
            	    lv_pullDefined_82_0=(Token)match(input,69,FOLLOW_35); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											newLeafNode(lv_pullDefined_82_0, grammarAccess.getOverridePredicate_11Access().getPullDefinedPullKeyword_1_8_1_0());
            	      										
            	    }
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElement(grammarAccess.getOverridePredicate_11Rule());
            	      											}
            	      											setWithLastConsumed(current, "pullDefined", true, "pull");
            	      										
            	    }

            	    }


            	    }

            	    // InternalMcmodel.g:14919:9: (otherlv_83= '=' | otherlv_84= '==' )
            	    int alt475=2;
            	    int LA475_0 = input.LA(1);

            	    if ( (LA475_0==18) ) {
            	        alt475=1;
            	    }
            	    else if ( (LA475_0==58) ) {
            	        alt475=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 475, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt475) {
            	        case 1 :
            	            // InternalMcmodel.g:14920:10: otherlv_83= '='
            	            {
            	            otherlv_83=(Token)match(input,18,FOLLOW_36); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(otherlv_83, grammarAccess.getOverridePredicate_11Access().getEqualsSignKeyword_1_8_2_0());
            	              									
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalMcmodel.g:14925:10: otherlv_84= '=='
            	            {
            	            otherlv_84=(Token)match(input,58,FOLLOW_36); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(otherlv_84, grammarAccess.getOverridePredicate_11Access().getEqualsSignEqualsSignKeyword_1_8_2_1());
            	              									
            	            }

            	            }
            	            break;

            	    }

            	    // InternalMcmodel.g:14930:9: ( (lv_pull_85_0= RULE_PERCENTAGE ) )
            	    // InternalMcmodel.g:14931:10: (lv_pull_85_0= RULE_PERCENTAGE )
            	    {
            	    // InternalMcmodel.g:14931:10: (lv_pull_85_0= RULE_PERCENTAGE )
            	    // InternalMcmodel.g:14932:11: lv_pull_85_0= RULE_PERCENTAGE
            	    {
            	    lv_pull_85_0=(Token)match(input,RULE_PERCENTAGE,FOLLOW_37); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											newLeafNode(lv_pull_85_0, grammarAccess.getOverridePredicate_11Access().getPullPERCENTAGETerminalRuleCall_1_8_3_0());
            	      										
            	    }
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElement(grammarAccess.getOverridePredicate_11Rule());
            	      											}
            	      											setWithLastConsumed(
            	      												current,
            	      												"pull",
            	      												lv_pull_85_0,
            	      												"com.raptor.mcmodel.Mcmodel.PERCENTAGE");
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getOverridePredicate_11Access().getUnorderedGroup_1());

            	    }


            	    }


            	    }
            	    break;
            	case 10 :
            	    // InternalMcmodel.g:14954:4: ({...}? => ( ({...}? => (otherlv_86= '&' ( ( ( (lv_pullingDefined_87_0= '!' ) ) otherlv_88= 'pulling' ) | ( ( (lv_pullingDefined_89_0= 'pulling' ) ) ( (otherlv_90= '!=' ( ( (lv_pulling_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_pulling_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) ) ) ) ) ) )
            	    {
            	    // InternalMcmodel.g:14954:4: ({...}? => ( ({...}? => (otherlv_86= '&' ( ( ( (lv_pullingDefined_87_0= '!' ) ) otherlv_88= 'pulling' ) | ( ( (lv_pullingDefined_89_0= 'pulling' ) ) ( (otherlv_90= '!=' ( ( (lv_pulling_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_pulling_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) ) ) ) ) ) )
            	    // InternalMcmodel.g:14955:5: {...}? => ( ({...}? => (otherlv_86= '&' ( ( ( (lv_pullingDefined_87_0= '!' ) ) otherlv_88= 'pulling' ) | ( ( (lv_pullingDefined_89_0= 'pulling' ) ) ( (otherlv_90= '!=' ( ( (lv_pulling_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_pulling_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_11Access().getUnorderedGroup_1(), 9) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_11", "getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_11Access().getUnorderedGroup_1(), 9)");
            	    }
            	    // InternalMcmodel.g:14955:117: ( ({...}? => (otherlv_86= '&' ( ( ( (lv_pullingDefined_87_0= '!' ) ) otherlv_88= 'pulling' ) | ( ( (lv_pullingDefined_89_0= 'pulling' ) ) ( (otherlv_90= '!=' ( ( (lv_pulling_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_pulling_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) ) ) ) ) )
            	    // InternalMcmodel.g:14956:6: ({...}? => (otherlv_86= '&' ( ( ( (lv_pullingDefined_87_0= '!' ) ) otherlv_88= 'pulling' ) | ( ( (lv_pullingDefined_89_0= 'pulling' ) ) ( (otherlv_90= '!=' ( ( (lv_pulling_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_pulling_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getOverridePredicate_11Access().getUnorderedGroup_1(), 9);
            	    // InternalMcmodel.g:14959:9: ({...}? => (otherlv_86= '&' ( ( ( (lv_pullingDefined_87_0= '!' ) ) otherlv_88= 'pulling' ) | ( ( (lv_pullingDefined_89_0= 'pulling' ) ) ( (otherlv_90= '!=' ( ( (lv_pulling_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_pulling_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) ) ) ) )
            	    // InternalMcmodel.g:14959:10: {...}? => (otherlv_86= '&' ( ( ( (lv_pullingDefined_87_0= '!' ) ) otherlv_88= 'pulling' ) | ( ( (lv_pullingDefined_89_0= 'pulling' ) ) ( (otherlv_90= '!=' ( ( (lv_pulling_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_pulling_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_11", "true");
            	    }
            	    // InternalMcmodel.g:14959:19: (otherlv_86= '&' ( ( ( (lv_pullingDefined_87_0= '!' ) ) otherlv_88= 'pulling' ) | ( ( (lv_pullingDefined_89_0= 'pulling' ) ) ( (otherlv_90= '!=' ( ( (lv_pulling_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_pulling_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) ) ) )
            	    // InternalMcmodel.g:14959:20: otherlv_86= '&' ( ( ( (lv_pullingDefined_87_0= '!' ) ) otherlv_88= 'pulling' ) | ( ( (lv_pullingDefined_89_0= 'pulling' ) ) ( (otherlv_90= '!=' ( ( (lv_pulling_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_pulling_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) ) )
            	    {
            	    otherlv_86=(Token)match(input,59,FOLLOW_52); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_86, grammarAccess.getOverridePredicate_11Access().getAmpersandKeyword_1_9_0());
            	      								
            	    }
            	    // InternalMcmodel.g:14963:9: ( ( ( (lv_pullingDefined_87_0= '!' ) ) otherlv_88= 'pulling' ) | ( ( (lv_pullingDefined_89_0= 'pulling' ) ) ( (otherlv_90= '!=' ( ( (lv_pulling_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_pulling_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) ) )
            	    int alt480=2;
            	    int LA480_0 = input.LA(1);

            	    if ( (LA480_0==60) ) {
            	        alt480=1;
            	    }
            	    else if ( (LA480_0==70) ) {
            	        alt480=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 480, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt480) {
            	        case 1 :
            	            // InternalMcmodel.g:14964:10: ( ( (lv_pullingDefined_87_0= '!' ) ) otherlv_88= 'pulling' )
            	            {
            	            // InternalMcmodel.g:14964:10: ( ( (lv_pullingDefined_87_0= '!' ) ) otherlv_88= 'pulling' )
            	            // InternalMcmodel.g:14965:11: ( (lv_pullingDefined_87_0= '!' ) ) otherlv_88= 'pulling'
            	            {
            	            // InternalMcmodel.g:14965:11: ( (lv_pullingDefined_87_0= '!' ) )
            	            // InternalMcmodel.g:14966:12: (lv_pullingDefined_87_0= '!' )
            	            {
            	            // InternalMcmodel.g:14966:12: (lv_pullingDefined_87_0= '!' )
            	            // InternalMcmodel.g:14967:13: lv_pullingDefined_87_0= '!'
            	            {
            	            lv_pullingDefined_87_0=(Token)match(input,60,FOLLOW_53); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              													newLeafNode(lv_pullingDefined_87_0, grammarAccess.getOverridePredicate_11Access().getPullingDefinedExclamationMarkKeyword_1_9_1_0_0_0());
            	              												
            	            }
            	            if ( state.backtracking==0 ) {

            	              													if (current==null) {
            	              														current = createModelElement(grammarAccess.getOverridePredicate_11Rule());
            	              													}
            	              													setWithLastConsumed(current, "pullingDefined", true, "!");
            	              												
            	            }

            	            }


            	            }

            	            otherlv_88=(Token)match(input,70,FOLLOW_37); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              											newLeafNode(otherlv_88, grammarAccess.getOverridePredicate_11Access().getPullingKeyword_1_9_1_0_1());
            	              										
            	            }

            	            }


            	            }
            	            break;
            	        case 2 :
            	            // InternalMcmodel.g:14985:10: ( ( (lv_pullingDefined_89_0= 'pulling' ) ) ( (otherlv_90= '!=' ( ( (lv_pulling_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_pulling_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) )
            	            {
            	            // InternalMcmodel.g:14985:10: ( ( (lv_pullingDefined_89_0= 'pulling' ) ) ( (otherlv_90= '!=' ( ( (lv_pulling_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_pulling_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) )
            	            // InternalMcmodel.g:14986:11: ( (lv_pullingDefined_89_0= 'pulling' ) ) ( (otherlv_90= '!=' ( ( (lv_pulling_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_pulling_95_0= 'true' ) ) | otherlv_96= 'false' ) ) )
            	            {
            	            // InternalMcmodel.g:14986:11: ( (lv_pullingDefined_89_0= 'pulling' ) )
            	            // InternalMcmodel.g:14987:12: (lv_pullingDefined_89_0= 'pulling' )
            	            {
            	            // InternalMcmodel.g:14987:12: (lv_pullingDefined_89_0= 'pulling' )
            	            // InternalMcmodel.g:14988:13: lv_pullingDefined_89_0= 'pulling'
            	            {
            	            lv_pullingDefined_89_0=(Token)match(input,70,FOLLOW_40); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              													newLeafNode(lv_pullingDefined_89_0, grammarAccess.getOverridePredicate_11Access().getPullingDefinedPullingKeyword_1_9_1_1_0_0());
            	              												
            	            }
            	            if ( state.backtracking==0 ) {

            	              													if (current==null) {
            	              														current = createModelElement(grammarAccess.getOverridePredicate_11Rule());
            	              													}
            	              													setWithLastConsumed(current, "pullingDefined", true, "pulling");
            	              												
            	            }

            	            }


            	            }

            	            // InternalMcmodel.g:15000:11: ( (otherlv_90= '!=' ( ( (lv_pulling_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_pulling_95_0= 'true' ) ) | otherlv_96= 'false' ) ) )
            	            int alt479=2;
            	            int LA479_0 = input.LA(1);

            	            if ( (LA479_0==62) ) {
            	                alt479=1;
            	            }
            	            else if ( (LA479_0==18||LA479_0==58) ) {
            	                alt479=2;
            	            }
            	            else {
            	                if (state.backtracking>0) {state.failed=true; return current;}
            	                NoViableAltException nvae =
            	                    new NoViableAltException("", 479, 0, input);

            	                throw nvae;
            	            }
            	            switch (alt479) {
            	                case 1 :
            	                    // InternalMcmodel.g:15001:12: (otherlv_90= '!=' ( ( (lv_pulling_91_0= 'false' ) ) | otherlv_92= 'true' ) )
            	                    {
            	                    // InternalMcmodel.g:15001:12: (otherlv_90= '!=' ( ( (lv_pulling_91_0= 'false' ) ) | otherlv_92= 'true' ) )
            	                    // InternalMcmodel.g:15002:13: otherlv_90= '!=' ( ( (lv_pulling_91_0= 'false' ) ) | otherlv_92= 'true' )
            	                    {
            	                    otherlv_90=(Token)match(input,62,FOLLOW_7); if (state.failed) return current;
            	                    if ( state.backtracking==0 ) {

            	                      													newLeafNode(otherlv_90, grammarAccess.getOverridePredicate_11Access().getExclamationMarkEqualsSignKeyword_1_9_1_1_1_0_0());
            	                      												
            	                    }
            	                    // InternalMcmodel.g:15006:13: ( ( (lv_pulling_91_0= 'false' ) ) | otherlv_92= 'true' )
            	                    int alt476=2;
            	                    int LA476_0 = input.LA(1);

            	                    if ( (LA476_0==21) ) {
            	                        alt476=1;
            	                    }
            	                    else if ( (LA476_0==20) ) {
            	                        alt476=2;
            	                    }
            	                    else {
            	                        if (state.backtracking>0) {state.failed=true; return current;}
            	                        NoViableAltException nvae =
            	                            new NoViableAltException("", 476, 0, input);

            	                        throw nvae;
            	                    }
            	                    switch (alt476) {
            	                        case 1 :
            	                            // InternalMcmodel.g:15007:14: ( (lv_pulling_91_0= 'false' ) )
            	                            {
            	                            // InternalMcmodel.g:15007:14: ( (lv_pulling_91_0= 'false' ) )
            	                            // InternalMcmodel.g:15008:15: (lv_pulling_91_0= 'false' )
            	                            {
            	                            // InternalMcmodel.g:15008:15: (lv_pulling_91_0= 'false' )
            	                            // InternalMcmodel.g:15009:16: lv_pulling_91_0= 'false'
            	                            {
            	                            lv_pulling_91_0=(Token)match(input,21,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              																newLeafNode(lv_pulling_91_0, grammarAccess.getOverridePredicate_11Access().getPullingFalseKeyword_1_9_1_1_1_0_1_0_0());
            	                              															
            	                            }
            	                            if ( state.backtracking==0 ) {

            	                              																if (current==null) {
            	                              																	current = createModelElement(grammarAccess.getOverridePredicate_11Rule());
            	                              																}
            	                              																setWithLastConsumed(current, "pulling", true, "false");
            	                              															
            	                            }

            	                            }


            	                            }


            	                            }
            	                            break;
            	                        case 2 :
            	                            // InternalMcmodel.g:15022:14: otherlv_92= 'true'
            	                            {
            	                            otherlv_92=(Token)match(input,20,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_92, grammarAccess.getOverridePredicate_11Access().getTrueKeyword_1_9_1_1_1_0_1_1());
            	                              													
            	                            }

            	                            }
            	                            break;

            	                    }


            	                    }


            	                    }
            	                    break;
            	                case 2 :
            	                    // InternalMcmodel.g:15029:12: ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_pulling_95_0= 'true' ) ) | otherlv_96= 'false' ) )
            	                    {
            	                    // InternalMcmodel.g:15029:12: ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_pulling_95_0= 'true' ) ) | otherlv_96= 'false' ) )
            	                    // InternalMcmodel.g:15030:13: (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_pulling_95_0= 'true' ) ) | otherlv_96= 'false' )
            	                    {
            	                    // InternalMcmodel.g:15030:13: (otherlv_93= '=' | otherlv_94= '==' )
            	                    int alt477=2;
            	                    int LA477_0 = input.LA(1);

            	                    if ( (LA477_0==18) ) {
            	                        alt477=1;
            	                    }
            	                    else if ( (LA477_0==58) ) {
            	                        alt477=2;
            	                    }
            	                    else {
            	                        if (state.backtracking>0) {state.failed=true; return current;}
            	                        NoViableAltException nvae =
            	                            new NoViableAltException("", 477, 0, input);

            	                        throw nvae;
            	                    }
            	                    switch (alt477) {
            	                        case 1 :
            	                            // InternalMcmodel.g:15031:14: otherlv_93= '='
            	                            {
            	                            otherlv_93=(Token)match(input,18,FOLLOW_7); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_93, grammarAccess.getOverridePredicate_11Access().getEqualsSignKeyword_1_9_1_1_1_1_0_0());
            	                              													
            	                            }

            	                            }
            	                            break;
            	                        case 2 :
            	                            // InternalMcmodel.g:15036:14: otherlv_94= '=='
            	                            {
            	                            otherlv_94=(Token)match(input,58,FOLLOW_7); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_94, grammarAccess.getOverridePredicate_11Access().getEqualsSignEqualsSignKeyword_1_9_1_1_1_1_0_1());
            	                              													
            	                            }

            	                            }
            	                            break;

            	                    }

            	                    // InternalMcmodel.g:15041:13: ( ( (lv_pulling_95_0= 'true' ) ) | otherlv_96= 'false' )
            	                    int alt478=2;
            	                    int LA478_0 = input.LA(1);

            	                    if ( (LA478_0==20) ) {
            	                        alt478=1;
            	                    }
            	                    else if ( (LA478_0==21) ) {
            	                        alt478=2;
            	                    }
            	                    else {
            	                        if (state.backtracking>0) {state.failed=true; return current;}
            	                        NoViableAltException nvae =
            	                            new NoViableAltException("", 478, 0, input);

            	                        throw nvae;
            	                    }
            	                    switch (alt478) {
            	                        case 1 :
            	                            // InternalMcmodel.g:15042:14: ( (lv_pulling_95_0= 'true' ) )
            	                            {
            	                            // InternalMcmodel.g:15042:14: ( (lv_pulling_95_0= 'true' ) )
            	                            // InternalMcmodel.g:15043:15: (lv_pulling_95_0= 'true' )
            	                            {
            	                            // InternalMcmodel.g:15043:15: (lv_pulling_95_0= 'true' )
            	                            // InternalMcmodel.g:15044:16: lv_pulling_95_0= 'true'
            	                            {
            	                            lv_pulling_95_0=(Token)match(input,20,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              																newLeafNode(lv_pulling_95_0, grammarAccess.getOverridePredicate_11Access().getPullingTrueKeyword_1_9_1_1_1_1_1_0_0());
            	                              															
            	                            }
            	                            if ( state.backtracking==0 ) {

            	                              																if (current==null) {
            	                              																	current = createModelElement(grammarAccess.getOverridePredicate_11Rule());
            	                              																}
            	                              																setWithLastConsumed(current, "pulling", true, "true");
            	                              															
            	                            }

            	                            }


            	                            }


            	                            }
            	                            break;
            	                        case 2 :
            	                            // InternalMcmodel.g:15057:14: otherlv_96= 'false'
            	                            {
            	                            otherlv_96=(Token)match(input,21,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_96, grammarAccess.getOverridePredicate_11Access().getFalseKeyword_1_9_1_1_1_1_1_1());
            	                              													
            	                            }

            	                            }
            	                            break;

            	                    }


            	                    }


            	                    }
            	                    break;

            	            }


            	            }


            	            }
            	            break;

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getOverridePredicate_11Access().getUnorderedGroup_1());

            	    }


            	    }


            	    }
            	    break;
            	case 11 :
            	    // InternalMcmodel.g:15072:4: ({...}? => ( ({...}? => (otherlv_97= '&' ( (lv_timeDefined_98_0= 'time' ) ) (otherlv_99= '=' | otherlv_100= '==' ) ( (lv_time_101_0= RULE_PERCENTAGE ) ) ) ) ) )
            	    {
            	    // InternalMcmodel.g:15072:4: ({...}? => ( ({...}? => (otherlv_97= '&' ( (lv_timeDefined_98_0= 'time' ) ) (otherlv_99= '=' | otherlv_100= '==' ) ( (lv_time_101_0= RULE_PERCENTAGE ) ) ) ) ) )
            	    // InternalMcmodel.g:15073:5: {...}? => ( ({...}? => (otherlv_97= '&' ( (lv_timeDefined_98_0= 'time' ) ) (otherlv_99= '=' | otherlv_100= '==' ) ( (lv_time_101_0= RULE_PERCENTAGE ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_11Access().getUnorderedGroup_1(), 10) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_11", "getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_11Access().getUnorderedGroup_1(), 10)");
            	    }
            	    // InternalMcmodel.g:15073:118: ( ({...}? => (otherlv_97= '&' ( (lv_timeDefined_98_0= 'time' ) ) (otherlv_99= '=' | otherlv_100= '==' ) ( (lv_time_101_0= RULE_PERCENTAGE ) ) ) ) )
            	    // InternalMcmodel.g:15074:6: ({...}? => (otherlv_97= '&' ( (lv_timeDefined_98_0= 'time' ) ) (otherlv_99= '=' | otherlv_100= '==' ) ( (lv_time_101_0= RULE_PERCENTAGE ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getOverridePredicate_11Access().getUnorderedGroup_1(), 10);
            	    // InternalMcmodel.g:15077:9: ({...}? => (otherlv_97= '&' ( (lv_timeDefined_98_0= 'time' ) ) (otherlv_99= '=' | otherlv_100= '==' ) ( (lv_time_101_0= RULE_PERCENTAGE ) ) ) )
            	    // InternalMcmodel.g:15077:10: {...}? => (otherlv_97= '&' ( (lv_timeDefined_98_0= 'time' ) ) (otherlv_99= '=' | otherlv_100= '==' ) ( (lv_time_101_0= RULE_PERCENTAGE ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_11", "true");
            	    }
            	    // InternalMcmodel.g:15077:19: (otherlv_97= '&' ( (lv_timeDefined_98_0= 'time' ) ) (otherlv_99= '=' | otherlv_100= '==' ) ( (lv_time_101_0= RULE_PERCENTAGE ) ) )
            	    // InternalMcmodel.g:15077:20: otherlv_97= '&' ( (lv_timeDefined_98_0= 'time' ) ) (otherlv_99= '=' | otherlv_100= '==' ) ( (lv_time_101_0= RULE_PERCENTAGE ) )
            	    {
            	    otherlv_97=(Token)match(input,59,FOLLOW_56); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_97, grammarAccess.getOverridePredicate_11Access().getAmpersandKeyword_1_10_0());
            	      								
            	    }
            	    // InternalMcmodel.g:15081:9: ( (lv_timeDefined_98_0= 'time' ) )
            	    // InternalMcmodel.g:15082:10: (lv_timeDefined_98_0= 'time' )
            	    {
            	    // InternalMcmodel.g:15082:10: (lv_timeDefined_98_0= 'time' )
            	    // InternalMcmodel.g:15083:11: lv_timeDefined_98_0= 'time'
            	    {
            	    lv_timeDefined_98_0=(Token)match(input,72,FOLLOW_35); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											newLeafNode(lv_timeDefined_98_0, grammarAccess.getOverridePredicate_11Access().getTimeDefinedTimeKeyword_1_10_1_0());
            	      										
            	    }
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElement(grammarAccess.getOverridePredicate_11Rule());
            	      											}
            	      											setWithLastConsumed(current, "timeDefined", true, "time");
            	      										
            	    }

            	    }


            	    }

            	    // InternalMcmodel.g:15095:9: (otherlv_99= '=' | otherlv_100= '==' )
            	    int alt481=2;
            	    int LA481_0 = input.LA(1);

            	    if ( (LA481_0==18) ) {
            	        alt481=1;
            	    }
            	    else if ( (LA481_0==58) ) {
            	        alt481=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 481, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt481) {
            	        case 1 :
            	            // InternalMcmodel.g:15096:10: otherlv_99= '='
            	            {
            	            otherlv_99=(Token)match(input,18,FOLLOW_36); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(otherlv_99, grammarAccess.getOverridePredicate_11Access().getEqualsSignKeyword_1_10_2_0());
            	              									
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalMcmodel.g:15101:10: otherlv_100= '=='
            	            {
            	            otherlv_100=(Token)match(input,58,FOLLOW_36); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(otherlv_100, grammarAccess.getOverridePredicate_11Access().getEqualsSignEqualsSignKeyword_1_10_2_1());
            	              									
            	            }

            	            }
            	            break;

            	    }

            	    // InternalMcmodel.g:15106:9: ( (lv_time_101_0= RULE_PERCENTAGE ) )
            	    // InternalMcmodel.g:15107:10: (lv_time_101_0= RULE_PERCENTAGE )
            	    {
            	    // InternalMcmodel.g:15107:10: (lv_time_101_0= RULE_PERCENTAGE )
            	    // InternalMcmodel.g:15108:11: lv_time_101_0= RULE_PERCENTAGE
            	    {
            	    lv_time_101_0=(Token)match(input,RULE_PERCENTAGE,FOLLOW_37); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											newLeafNode(lv_time_101_0, grammarAccess.getOverridePredicate_11Access().getTimePERCENTAGETerminalRuleCall_1_10_3_0());
            	      										
            	    }
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElement(grammarAccess.getOverridePredicate_11Rule());
            	      											}
            	      											setWithLastConsumed(
            	      												current,
            	      												"time",
            	      												lv_time_101_0,
            	      												"com.raptor.mcmodel.Mcmodel.PERCENTAGE");
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getOverridePredicate_11Access().getUnorderedGroup_1());

            	    }


            	    }


            	    }
            	    break;
            	case 12 :
            	    // InternalMcmodel.g:15130:4: ({...}? => ( ({...}? => (otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) ) ) ) ) )
            	    {
            	    // InternalMcmodel.g:15130:4: ({...}? => ( ({...}? => (otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) ) ) ) ) )
            	    // InternalMcmodel.g:15131:5: {...}? => ( ({...}? => (otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_11Access().getUnorderedGroup_1(), 11) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_11", "getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_11Access().getUnorderedGroup_1(), 11)");
            	    }
            	    // InternalMcmodel.g:15131:118: ( ({...}? => (otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) ) ) ) )
            	    // InternalMcmodel.g:15132:6: ({...}? => (otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getOverridePredicate_11Access().getUnorderedGroup_1(), 11);
            	    // InternalMcmodel.g:15135:9: ({...}? => (otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) ) ) )
            	    // InternalMcmodel.g:15135:10: {...}? => (otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_11", "true");
            	    }
            	    // InternalMcmodel.g:15135:19: (otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) ) )
            	    // InternalMcmodel.g:15135:20: otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) )
            	    {
            	    otherlv_102=(Token)match(input,59,FOLLOW_57); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_102, grammarAccess.getOverridePredicate_11Access().getAmpersandKeyword_1_11_0());
            	      								
            	    }
            	    // InternalMcmodel.g:15139:9: ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) )
            	    // InternalMcmodel.g:15140:10: (lv_customModelDataDefined_103_0= 'custom_model_data' )
            	    {
            	    // InternalMcmodel.g:15140:10: (lv_customModelDataDefined_103_0= 'custom_model_data' )
            	    // InternalMcmodel.g:15141:11: lv_customModelDataDefined_103_0= 'custom_model_data'
            	    {
            	    lv_customModelDataDefined_103_0=(Token)match(input,73,FOLLOW_35); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											newLeafNode(lv_customModelDataDefined_103_0, grammarAccess.getOverridePredicate_11Access().getCustomModelDataDefinedCustom_model_dataKeyword_1_11_1_0());
            	      										
            	    }
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElement(grammarAccess.getOverridePredicate_11Rule());
            	      											}
            	      											setWithLastConsumed(current, "customModelDataDefined", true, "custom_model_data");
            	      										
            	    }

            	    }


            	    }

            	    // InternalMcmodel.g:15153:9: (otherlv_104= '=' | otherlv_105= '==' )
            	    int alt482=2;
            	    int LA482_0 = input.LA(1);

            	    if ( (LA482_0==18) ) {
            	        alt482=1;
            	    }
            	    else if ( (LA482_0==58) ) {
            	        alt482=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 482, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt482) {
            	        case 1 :
            	            // InternalMcmodel.g:15154:10: otherlv_104= '='
            	            {
            	            otherlv_104=(Token)match(input,18,FOLLOW_29); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(otherlv_104, grammarAccess.getOverridePredicate_11Access().getEqualsSignKeyword_1_11_2_0());
            	              									
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalMcmodel.g:15159:10: otherlv_105= '=='
            	            {
            	            otherlv_105=(Token)match(input,58,FOLLOW_29); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(otherlv_105, grammarAccess.getOverridePredicate_11Access().getEqualsSignEqualsSignKeyword_1_11_2_1());
            	              									
            	            }

            	            }
            	            break;

            	    }

            	    // InternalMcmodel.g:15164:9: ( (lv_customModelData_106_0= ruleLONG ) )
            	    // InternalMcmodel.g:15165:10: (lv_customModelData_106_0= ruleLONG )
            	    {
            	    // InternalMcmodel.g:15165:10: (lv_customModelData_106_0= ruleLONG )
            	    // InternalMcmodel.g:15166:11: lv_customModelData_106_0= ruleLONG
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getOverridePredicate_11Access().getCustomModelDataLONGParserRuleCall_1_11_3_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_37);
            	    lv_customModelData_106_0=ruleLONG();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getOverridePredicate_11Rule());
            	      											}
            	      											set(
            	      												current,
            	      												"customModelData",
            	      												lv_customModelData_106_0,
            	      												"com.raptor.mcmodel.Mcmodel.LONG");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getOverridePredicate_11Access().getUnorderedGroup_1());

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop483;
                }
            } while (true);


            }


            }

            getUnorderedGroupHelper().leave(grammarAccess.getOverridePredicate_11Access().getUnorderedGroup_1());

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOverridePredicate_11"


    // $ANTLR start "entryRuleOverridePredicate_12"
    // InternalMcmodel.g:15200:1: entryRuleOverridePredicate_12 returns [EObject current=null] : iv_ruleOverridePredicate_12= ruleOverridePredicate_12 EOF ;
    public final EObject entryRuleOverridePredicate_12() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleOverridePredicate_12 = null;


        try {
            // InternalMcmodel.g:15200:61: (iv_ruleOverridePredicate_12= ruleOverridePredicate_12 EOF )
            // InternalMcmodel.g:15201:2: iv_ruleOverridePredicate_12= ruleOverridePredicate_12 EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOverridePredicate_12Rule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOverridePredicate_12=ruleOverridePredicate_12();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOverridePredicate_12; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOverridePredicate_12"


    // $ANTLR start "ruleOverridePredicate_12"
    // InternalMcmodel.g:15207:1: ruleOverridePredicate_12 returns [EObject current=null] : ( ( (lv_timeDefined_0_0= 'time' ) ) (otherlv_1= '=' | otherlv_2= '==' ) ( (lv_time_3_0= RULE_PERCENTAGE ) ) ( ( ( ( ({...}? => ( ({...}? => (otherlv_5= '&' ( (lv_angleDefined_6_0= 'angle' ) ) (otherlv_7= '=' | otherlv_8= '==' ) ( (lv_angle_9_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= '&' ( ( ( (lv_blockingDefined_11_0= '!' ) ) otherlv_12= 'blocking' ) | ( ( (lv_blockingDefined_13_0= 'blocking' ) ) ( (otherlv_14= '!=' ( ( (lv_blocking_15_0= 'false' ) ) | otherlv_16= 'true' ) ) | ( (otherlv_17= '=' | otherlv_18= '==' ) ( ( (lv_blocking_19_0= 'true' ) ) | otherlv_20= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= '&' ( ( ( (lv_brokenDefined_22_0= '!' ) ) otherlv_23= 'broken' ) | ( ( (lv_brokenDefined_24_0= 'broken' ) ) ( (otherlv_25= '!=' ( ( (lv_broken_26_0= 'false' ) ) | otherlv_27= 'true' ) ) | ( (otherlv_28= '=' | otherlv_29= '==' ) ( ( (lv_broken_30_0= 'true' ) ) | otherlv_31= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_32= '&' ( ( ( (lv_castDefined_33_0= '!' ) ) otherlv_34= 'cast' ) | ( ( (lv_castDefined_35_0= 'cast' ) ) ( (otherlv_36= '!=' ( ( (lv_cast_37_0= 'false' ) ) | otherlv_38= 'true' ) ) | ( (otherlv_39= '=' | otherlv_40= '==' ) ( ( (lv_cast_41_0= 'true' ) ) | otherlv_42= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= '&' ( (lv_cooldownDefined_44_0= 'cooldown' ) ) (otherlv_45= '=' | otherlv_46= '==' ) ( (lv_cooldown_47_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_48= '&' ( (lv_damageDefined_49_0= 'damage' ) ) (otherlv_50= '=' | otherlv_51= '==' ) ( (lv_damage_52_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_53= '&' ( ( ( (lv_damagedDefined_54_0= '!' ) ) otherlv_55= 'damaged' ) | ( ( (lv_damagedDefined_56_0= 'damaged' ) ) ( (otherlv_57= '!=' ( ( (lv_damaged_58_0= 'false' ) ) | otherlv_59= 'true' ) ) | ( (otherlv_60= '=' | otherlv_61= '==' ) ( ( (lv_damaged_62_0= 'true' ) ) | otherlv_63= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_64= '&' ( ( ( (lv_lefthandedDefined_65_0= '!' ) ) otherlv_66= 'lefthanded' ) | ( ( (lv_lefthandedDefined_67_0= 'lefthanded' ) ) ( (otherlv_68= '!=' ( ( (lv_lefthanded_69_0= 'false' ) ) | otherlv_70= 'true' ) ) | ( (otherlv_71= '=' | otherlv_72= '==' ) ( ( (lv_lefthanded_73_0= 'true' ) ) | otherlv_74= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_75= '&' ( (lv_pullDefined_76_0= 'pull' ) ) (otherlv_77= '=' | otherlv_78= '==' ) ( (lv_pull_79_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_80= '&' ( ( ( (lv_pullingDefined_81_0= '!' ) ) otherlv_82= 'pulling' ) | ( ( (lv_pullingDefined_83_0= 'pulling' ) ) ( (otherlv_84= '!=' ( ( (lv_pulling_85_0= 'false' ) ) | otherlv_86= 'true' ) ) | ( (otherlv_87= '=' | otherlv_88= '==' ) ( ( (lv_pulling_89_0= 'true' ) ) | otherlv_90= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_91= '&' ( ( ( (lv_throwingDefined_92_0= '!' ) ) otherlv_93= 'throwing' ) | ( ( (lv_throwingDefined_94_0= 'throwing' ) ) ( (otherlv_95= '!=' ( ( (lv_throwing_96_0= 'false' ) ) | otherlv_97= 'true' ) ) | ( (otherlv_98= '=' | otherlv_99= '==' ) ( ( (lv_throwing_100_0= 'true' ) ) | otherlv_101= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) ) ) ) ) ) )* ) ) ) ) ;
    public final EObject ruleOverridePredicate_12() throws RecognitionException {
        EObject current = null;

        Token lv_timeDefined_0_0=null;
        Token otherlv_1=null;
        Token otherlv_2=null;
        Token lv_time_3_0=null;
        Token otherlv_5=null;
        Token lv_angleDefined_6_0=null;
        Token otherlv_7=null;
        Token otherlv_8=null;
        Token lv_angle_9_0=null;
        Token otherlv_10=null;
        Token lv_blockingDefined_11_0=null;
        Token otherlv_12=null;
        Token lv_blockingDefined_13_0=null;
        Token otherlv_14=null;
        Token lv_blocking_15_0=null;
        Token otherlv_16=null;
        Token otherlv_17=null;
        Token otherlv_18=null;
        Token lv_blocking_19_0=null;
        Token otherlv_20=null;
        Token otherlv_21=null;
        Token lv_brokenDefined_22_0=null;
        Token otherlv_23=null;
        Token lv_brokenDefined_24_0=null;
        Token otherlv_25=null;
        Token lv_broken_26_0=null;
        Token otherlv_27=null;
        Token otherlv_28=null;
        Token otherlv_29=null;
        Token lv_broken_30_0=null;
        Token otherlv_31=null;
        Token otherlv_32=null;
        Token lv_castDefined_33_0=null;
        Token otherlv_34=null;
        Token lv_castDefined_35_0=null;
        Token otherlv_36=null;
        Token lv_cast_37_0=null;
        Token otherlv_38=null;
        Token otherlv_39=null;
        Token otherlv_40=null;
        Token lv_cast_41_0=null;
        Token otherlv_42=null;
        Token otherlv_43=null;
        Token lv_cooldownDefined_44_0=null;
        Token otherlv_45=null;
        Token otherlv_46=null;
        Token lv_cooldown_47_0=null;
        Token otherlv_48=null;
        Token lv_damageDefined_49_0=null;
        Token otherlv_50=null;
        Token otherlv_51=null;
        Token lv_damage_52_0=null;
        Token otherlv_53=null;
        Token lv_damagedDefined_54_0=null;
        Token otherlv_55=null;
        Token lv_damagedDefined_56_0=null;
        Token otherlv_57=null;
        Token lv_damaged_58_0=null;
        Token otherlv_59=null;
        Token otherlv_60=null;
        Token otherlv_61=null;
        Token lv_damaged_62_0=null;
        Token otherlv_63=null;
        Token otherlv_64=null;
        Token lv_lefthandedDefined_65_0=null;
        Token otherlv_66=null;
        Token lv_lefthandedDefined_67_0=null;
        Token otherlv_68=null;
        Token lv_lefthanded_69_0=null;
        Token otherlv_70=null;
        Token otherlv_71=null;
        Token otherlv_72=null;
        Token lv_lefthanded_73_0=null;
        Token otherlv_74=null;
        Token otherlv_75=null;
        Token lv_pullDefined_76_0=null;
        Token otherlv_77=null;
        Token otherlv_78=null;
        Token lv_pull_79_0=null;
        Token otherlv_80=null;
        Token lv_pullingDefined_81_0=null;
        Token otherlv_82=null;
        Token lv_pullingDefined_83_0=null;
        Token otherlv_84=null;
        Token lv_pulling_85_0=null;
        Token otherlv_86=null;
        Token otherlv_87=null;
        Token otherlv_88=null;
        Token lv_pulling_89_0=null;
        Token otherlv_90=null;
        Token otherlv_91=null;
        Token lv_throwingDefined_92_0=null;
        Token otherlv_93=null;
        Token lv_throwingDefined_94_0=null;
        Token otherlv_95=null;
        Token lv_throwing_96_0=null;
        Token otherlv_97=null;
        Token otherlv_98=null;
        Token otherlv_99=null;
        Token lv_throwing_100_0=null;
        Token otherlv_101=null;
        Token otherlv_102=null;
        Token lv_customModelDataDefined_103_0=null;
        Token otherlv_104=null;
        Token otherlv_105=null;
        AntlrDatatypeRuleToken lv_customModelData_106_0 = null;



        	enterRule();

        try {
            // InternalMcmodel.g:15213:2: ( ( ( (lv_timeDefined_0_0= 'time' ) ) (otherlv_1= '=' | otherlv_2= '==' ) ( (lv_time_3_0= RULE_PERCENTAGE ) ) ( ( ( ( ({...}? => ( ({...}? => (otherlv_5= '&' ( (lv_angleDefined_6_0= 'angle' ) ) (otherlv_7= '=' | otherlv_8= '==' ) ( (lv_angle_9_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= '&' ( ( ( (lv_blockingDefined_11_0= '!' ) ) otherlv_12= 'blocking' ) | ( ( (lv_blockingDefined_13_0= 'blocking' ) ) ( (otherlv_14= '!=' ( ( (lv_blocking_15_0= 'false' ) ) | otherlv_16= 'true' ) ) | ( (otherlv_17= '=' | otherlv_18= '==' ) ( ( (lv_blocking_19_0= 'true' ) ) | otherlv_20= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= '&' ( ( ( (lv_brokenDefined_22_0= '!' ) ) otherlv_23= 'broken' ) | ( ( (lv_brokenDefined_24_0= 'broken' ) ) ( (otherlv_25= '!=' ( ( (lv_broken_26_0= 'false' ) ) | otherlv_27= 'true' ) ) | ( (otherlv_28= '=' | otherlv_29= '==' ) ( ( (lv_broken_30_0= 'true' ) ) | otherlv_31= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_32= '&' ( ( ( (lv_castDefined_33_0= '!' ) ) otherlv_34= 'cast' ) | ( ( (lv_castDefined_35_0= 'cast' ) ) ( (otherlv_36= '!=' ( ( (lv_cast_37_0= 'false' ) ) | otherlv_38= 'true' ) ) | ( (otherlv_39= '=' | otherlv_40= '==' ) ( ( (lv_cast_41_0= 'true' ) ) | otherlv_42= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= '&' ( (lv_cooldownDefined_44_0= 'cooldown' ) ) (otherlv_45= '=' | otherlv_46= '==' ) ( (lv_cooldown_47_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_48= '&' ( (lv_damageDefined_49_0= 'damage' ) ) (otherlv_50= '=' | otherlv_51= '==' ) ( (lv_damage_52_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_53= '&' ( ( ( (lv_damagedDefined_54_0= '!' ) ) otherlv_55= 'damaged' ) | ( ( (lv_damagedDefined_56_0= 'damaged' ) ) ( (otherlv_57= '!=' ( ( (lv_damaged_58_0= 'false' ) ) | otherlv_59= 'true' ) ) | ( (otherlv_60= '=' | otherlv_61= '==' ) ( ( (lv_damaged_62_0= 'true' ) ) | otherlv_63= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_64= '&' ( ( ( (lv_lefthandedDefined_65_0= '!' ) ) otherlv_66= 'lefthanded' ) | ( ( (lv_lefthandedDefined_67_0= 'lefthanded' ) ) ( (otherlv_68= '!=' ( ( (lv_lefthanded_69_0= 'false' ) ) | otherlv_70= 'true' ) ) | ( (otherlv_71= '=' | otherlv_72= '==' ) ( ( (lv_lefthanded_73_0= 'true' ) ) | otherlv_74= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_75= '&' ( (lv_pullDefined_76_0= 'pull' ) ) (otherlv_77= '=' | otherlv_78= '==' ) ( (lv_pull_79_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_80= '&' ( ( ( (lv_pullingDefined_81_0= '!' ) ) otherlv_82= 'pulling' ) | ( ( (lv_pullingDefined_83_0= 'pulling' ) ) ( (otherlv_84= '!=' ( ( (lv_pulling_85_0= 'false' ) ) | otherlv_86= 'true' ) ) | ( (otherlv_87= '=' | otherlv_88= '==' ) ( ( (lv_pulling_89_0= 'true' ) ) | otherlv_90= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_91= '&' ( ( ( (lv_throwingDefined_92_0= '!' ) ) otherlv_93= 'throwing' ) | ( ( (lv_throwingDefined_94_0= 'throwing' ) ) ( (otherlv_95= '!=' ( ( (lv_throwing_96_0= 'false' ) ) | otherlv_97= 'true' ) ) | ( (otherlv_98= '=' | otherlv_99= '==' ) ( ( (lv_throwing_100_0= 'true' ) ) | otherlv_101= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) ) ) ) ) ) )* ) ) ) ) )
            // InternalMcmodel.g:15214:2: ( ( (lv_timeDefined_0_0= 'time' ) ) (otherlv_1= '=' | otherlv_2= '==' ) ( (lv_time_3_0= RULE_PERCENTAGE ) ) ( ( ( ( ({...}? => ( ({...}? => (otherlv_5= '&' ( (lv_angleDefined_6_0= 'angle' ) ) (otherlv_7= '=' | otherlv_8= '==' ) ( (lv_angle_9_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= '&' ( ( ( (lv_blockingDefined_11_0= '!' ) ) otherlv_12= 'blocking' ) | ( ( (lv_blockingDefined_13_0= 'blocking' ) ) ( (otherlv_14= '!=' ( ( (lv_blocking_15_0= 'false' ) ) | otherlv_16= 'true' ) ) | ( (otherlv_17= '=' | otherlv_18= '==' ) ( ( (lv_blocking_19_0= 'true' ) ) | otherlv_20= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= '&' ( ( ( (lv_brokenDefined_22_0= '!' ) ) otherlv_23= 'broken' ) | ( ( (lv_brokenDefined_24_0= 'broken' ) ) ( (otherlv_25= '!=' ( ( (lv_broken_26_0= 'false' ) ) | otherlv_27= 'true' ) ) | ( (otherlv_28= '=' | otherlv_29= '==' ) ( ( (lv_broken_30_0= 'true' ) ) | otherlv_31= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_32= '&' ( ( ( (lv_castDefined_33_0= '!' ) ) otherlv_34= 'cast' ) | ( ( (lv_castDefined_35_0= 'cast' ) ) ( (otherlv_36= '!=' ( ( (lv_cast_37_0= 'false' ) ) | otherlv_38= 'true' ) ) | ( (otherlv_39= '=' | otherlv_40= '==' ) ( ( (lv_cast_41_0= 'true' ) ) | otherlv_42= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= '&' ( (lv_cooldownDefined_44_0= 'cooldown' ) ) (otherlv_45= '=' | otherlv_46= '==' ) ( (lv_cooldown_47_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_48= '&' ( (lv_damageDefined_49_0= 'damage' ) ) (otherlv_50= '=' | otherlv_51= '==' ) ( (lv_damage_52_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_53= '&' ( ( ( (lv_damagedDefined_54_0= '!' ) ) otherlv_55= 'damaged' ) | ( ( (lv_damagedDefined_56_0= 'damaged' ) ) ( (otherlv_57= '!=' ( ( (lv_damaged_58_0= 'false' ) ) | otherlv_59= 'true' ) ) | ( (otherlv_60= '=' | otherlv_61= '==' ) ( ( (lv_damaged_62_0= 'true' ) ) | otherlv_63= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_64= '&' ( ( ( (lv_lefthandedDefined_65_0= '!' ) ) otherlv_66= 'lefthanded' ) | ( ( (lv_lefthandedDefined_67_0= 'lefthanded' ) ) ( (otherlv_68= '!=' ( ( (lv_lefthanded_69_0= 'false' ) ) | otherlv_70= 'true' ) ) | ( (otherlv_71= '=' | otherlv_72= '==' ) ( ( (lv_lefthanded_73_0= 'true' ) ) | otherlv_74= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_75= '&' ( (lv_pullDefined_76_0= 'pull' ) ) (otherlv_77= '=' | otherlv_78= '==' ) ( (lv_pull_79_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_80= '&' ( ( ( (lv_pullingDefined_81_0= '!' ) ) otherlv_82= 'pulling' ) | ( ( (lv_pullingDefined_83_0= 'pulling' ) ) ( (otherlv_84= '!=' ( ( (lv_pulling_85_0= 'false' ) ) | otherlv_86= 'true' ) ) | ( (otherlv_87= '=' | otherlv_88= '==' ) ( ( (lv_pulling_89_0= 'true' ) ) | otherlv_90= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_91= '&' ( ( ( (lv_throwingDefined_92_0= '!' ) ) otherlv_93= 'throwing' ) | ( ( (lv_throwingDefined_94_0= 'throwing' ) ) ( (otherlv_95= '!=' ( ( (lv_throwing_96_0= 'false' ) ) | otherlv_97= 'true' ) ) | ( (otherlv_98= '=' | otherlv_99= '==' ) ( ( (lv_throwing_100_0= 'true' ) ) | otherlv_101= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) ) ) ) ) ) )* ) ) ) )
            {
            // InternalMcmodel.g:15214:2: ( ( (lv_timeDefined_0_0= 'time' ) ) (otherlv_1= '=' | otherlv_2= '==' ) ( (lv_time_3_0= RULE_PERCENTAGE ) ) ( ( ( ( ({...}? => ( ({...}? => (otherlv_5= '&' ( (lv_angleDefined_6_0= 'angle' ) ) (otherlv_7= '=' | otherlv_8= '==' ) ( (lv_angle_9_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= '&' ( ( ( (lv_blockingDefined_11_0= '!' ) ) otherlv_12= 'blocking' ) | ( ( (lv_blockingDefined_13_0= 'blocking' ) ) ( (otherlv_14= '!=' ( ( (lv_blocking_15_0= 'false' ) ) | otherlv_16= 'true' ) ) | ( (otherlv_17= '=' | otherlv_18= '==' ) ( ( (lv_blocking_19_0= 'true' ) ) | otherlv_20= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= '&' ( ( ( (lv_brokenDefined_22_0= '!' ) ) otherlv_23= 'broken' ) | ( ( (lv_brokenDefined_24_0= 'broken' ) ) ( (otherlv_25= '!=' ( ( (lv_broken_26_0= 'false' ) ) | otherlv_27= 'true' ) ) | ( (otherlv_28= '=' | otherlv_29= '==' ) ( ( (lv_broken_30_0= 'true' ) ) | otherlv_31= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_32= '&' ( ( ( (lv_castDefined_33_0= '!' ) ) otherlv_34= 'cast' ) | ( ( (lv_castDefined_35_0= 'cast' ) ) ( (otherlv_36= '!=' ( ( (lv_cast_37_0= 'false' ) ) | otherlv_38= 'true' ) ) | ( (otherlv_39= '=' | otherlv_40= '==' ) ( ( (lv_cast_41_0= 'true' ) ) | otherlv_42= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= '&' ( (lv_cooldownDefined_44_0= 'cooldown' ) ) (otherlv_45= '=' | otherlv_46= '==' ) ( (lv_cooldown_47_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_48= '&' ( (lv_damageDefined_49_0= 'damage' ) ) (otherlv_50= '=' | otherlv_51= '==' ) ( (lv_damage_52_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_53= '&' ( ( ( (lv_damagedDefined_54_0= '!' ) ) otherlv_55= 'damaged' ) | ( ( (lv_damagedDefined_56_0= 'damaged' ) ) ( (otherlv_57= '!=' ( ( (lv_damaged_58_0= 'false' ) ) | otherlv_59= 'true' ) ) | ( (otherlv_60= '=' | otherlv_61= '==' ) ( ( (lv_damaged_62_0= 'true' ) ) | otherlv_63= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_64= '&' ( ( ( (lv_lefthandedDefined_65_0= '!' ) ) otherlv_66= 'lefthanded' ) | ( ( (lv_lefthandedDefined_67_0= 'lefthanded' ) ) ( (otherlv_68= '!=' ( ( (lv_lefthanded_69_0= 'false' ) ) | otherlv_70= 'true' ) ) | ( (otherlv_71= '=' | otherlv_72= '==' ) ( ( (lv_lefthanded_73_0= 'true' ) ) | otherlv_74= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_75= '&' ( (lv_pullDefined_76_0= 'pull' ) ) (otherlv_77= '=' | otherlv_78= '==' ) ( (lv_pull_79_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_80= '&' ( ( ( (lv_pullingDefined_81_0= '!' ) ) otherlv_82= 'pulling' ) | ( ( (lv_pullingDefined_83_0= 'pulling' ) ) ( (otherlv_84= '!=' ( ( (lv_pulling_85_0= 'false' ) ) | otherlv_86= 'true' ) ) | ( (otherlv_87= '=' | otherlv_88= '==' ) ( ( (lv_pulling_89_0= 'true' ) ) | otherlv_90= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_91= '&' ( ( ( (lv_throwingDefined_92_0= '!' ) ) otherlv_93= 'throwing' ) | ( ( (lv_throwingDefined_94_0= 'throwing' ) ) ( (otherlv_95= '!=' ( ( (lv_throwing_96_0= 'false' ) ) | otherlv_97= 'true' ) ) | ( (otherlv_98= '=' | otherlv_99= '==' ) ( ( (lv_throwing_100_0= 'true' ) ) | otherlv_101= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) ) ) ) ) ) )* ) ) ) )
            // InternalMcmodel.g:15215:3: ( (lv_timeDefined_0_0= 'time' ) ) (otherlv_1= '=' | otherlv_2= '==' ) ( (lv_time_3_0= RULE_PERCENTAGE ) ) ( ( ( ( ({...}? => ( ({...}? => (otherlv_5= '&' ( (lv_angleDefined_6_0= 'angle' ) ) (otherlv_7= '=' | otherlv_8= '==' ) ( (lv_angle_9_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= '&' ( ( ( (lv_blockingDefined_11_0= '!' ) ) otherlv_12= 'blocking' ) | ( ( (lv_blockingDefined_13_0= 'blocking' ) ) ( (otherlv_14= '!=' ( ( (lv_blocking_15_0= 'false' ) ) | otherlv_16= 'true' ) ) | ( (otherlv_17= '=' | otherlv_18= '==' ) ( ( (lv_blocking_19_0= 'true' ) ) | otherlv_20= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= '&' ( ( ( (lv_brokenDefined_22_0= '!' ) ) otherlv_23= 'broken' ) | ( ( (lv_brokenDefined_24_0= 'broken' ) ) ( (otherlv_25= '!=' ( ( (lv_broken_26_0= 'false' ) ) | otherlv_27= 'true' ) ) | ( (otherlv_28= '=' | otherlv_29= '==' ) ( ( (lv_broken_30_0= 'true' ) ) | otherlv_31= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_32= '&' ( ( ( (lv_castDefined_33_0= '!' ) ) otherlv_34= 'cast' ) | ( ( (lv_castDefined_35_0= 'cast' ) ) ( (otherlv_36= '!=' ( ( (lv_cast_37_0= 'false' ) ) | otherlv_38= 'true' ) ) | ( (otherlv_39= '=' | otherlv_40= '==' ) ( ( (lv_cast_41_0= 'true' ) ) | otherlv_42= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= '&' ( (lv_cooldownDefined_44_0= 'cooldown' ) ) (otherlv_45= '=' | otherlv_46= '==' ) ( (lv_cooldown_47_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_48= '&' ( (lv_damageDefined_49_0= 'damage' ) ) (otherlv_50= '=' | otherlv_51= '==' ) ( (lv_damage_52_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_53= '&' ( ( ( (lv_damagedDefined_54_0= '!' ) ) otherlv_55= 'damaged' ) | ( ( (lv_damagedDefined_56_0= 'damaged' ) ) ( (otherlv_57= '!=' ( ( (lv_damaged_58_0= 'false' ) ) | otherlv_59= 'true' ) ) | ( (otherlv_60= '=' | otherlv_61= '==' ) ( ( (lv_damaged_62_0= 'true' ) ) | otherlv_63= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_64= '&' ( ( ( (lv_lefthandedDefined_65_0= '!' ) ) otherlv_66= 'lefthanded' ) | ( ( (lv_lefthandedDefined_67_0= 'lefthanded' ) ) ( (otherlv_68= '!=' ( ( (lv_lefthanded_69_0= 'false' ) ) | otherlv_70= 'true' ) ) | ( (otherlv_71= '=' | otherlv_72= '==' ) ( ( (lv_lefthanded_73_0= 'true' ) ) | otherlv_74= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_75= '&' ( (lv_pullDefined_76_0= 'pull' ) ) (otherlv_77= '=' | otherlv_78= '==' ) ( (lv_pull_79_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_80= '&' ( ( ( (lv_pullingDefined_81_0= '!' ) ) otherlv_82= 'pulling' ) | ( ( (lv_pullingDefined_83_0= 'pulling' ) ) ( (otherlv_84= '!=' ( ( (lv_pulling_85_0= 'false' ) ) | otherlv_86= 'true' ) ) | ( (otherlv_87= '=' | otherlv_88= '==' ) ( ( (lv_pulling_89_0= 'true' ) ) | otherlv_90= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_91= '&' ( ( ( (lv_throwingDefined_92_0= '!' ) ) otherlv_93= 'throwing' ) | ( ( (lv_throwingDefined_94_0= 'throwing' ) ) ( (otherlv_95= '!=' ( ( (lv_throwing_96_0= 'false' ) ) | otherlv_97= 'true' ) ) | ( (otherlv_98= '=' | otherlv_99= '==' ) ( ( (lv_throwing_100_0= 'true' ) ) | otherlv_101= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) ) ) ) ) ) )* ) ) )
            {
            // InternalMcmodel.g:15215:3: ( (lv_timeDefined_0_0= 'time' ) )
            // InternalMcmodel.g:15216:4: (lv_timeDefined_0_0= 'time' )
            {
            // InternalMcmodel.g:15216:4: (lv_timeDefined_0_0= 'time' )
            // InternalMcmodel.g:15217:5: lv_timeDefined_0_0= 'time'
            {
            lv_timeDefined_0_0=(Token)match(input,72,FOLLOW_35); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_timeDefined_0_0, grammarAccess.getOverridePredicate_12Access().getTimeDefinedTimeKeyword_0_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getOverridePredicate_12Rule());
              					}
              					setWithLastConsumed(current, "timeDefined", true, "time");
              				
            }

            }


            }

            // InternalMcmodel.g:15229:3: (otherlv_1= '=' | otherlv_2= '==' )
            int alt484=2;
            int LA484_0 = input.LA(1);

            if ( (LA484_0==18) ) {
                alt484=1;
            }
            else if ( (LA484_0==58) ) {
                alt484=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 484, 0, input);

                throw nvae;
            }
            switch (alt484) {
                case 1 :
                    // InternalMcmodel.g:15230:4: otherlv_1= '='
                    {
                    otherlv_1=(Token)match(input,18,FOLLOW_36); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getOverridePredicate_12Access().getEqualsSignKeyword_1_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalMcmodel.g:15235:4: otherlv_2= '=='
                    {
                    otherlv_2=(Token)match(input,58,FOLLOW_36); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getOverridePredicate_12Access().getEqualsSignEqualsSignKeyword_1_1());
                      			
                    }

                    }
                    break;

            }

            // InternalMcmodel.g:15240:3: ( (lv_time_3_0= RULE_PERCENTAGE ) )
            // InternalMcmodel.g:15241:4: (lv_time_3_0= RULE_PERCENTAGE )
            {
            // InternalMcmodel.g:15241:4: (lv_time_3_0= RULE_PERCENTAGE )
            // InternalMcmodel.g:15242:5: lv_time_3_0= RULE_PERCENTAGE
            {
            lv_time_3_0=(Token)match(input,RULE_PERCENTAGE,FOLLOW_37); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_time_3_0, grammarAccess.getOverridePredicate_12Access().getTimePERCENTAGETerminalRuleCall_2_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getOverridePredicate_12Rule());
              					}
              					setWithLastConsumed(
              						current,
              						"time",
              						lv_time_3_0,
              						"com.raptor.mcmodel.Mcmodel.PERCENTAGE");
              				
            }

            }


            }

            // InternalMcmodel.g:15258:3: ( ( ( ( ({...}? => ( ({...}? => (otherlv_5= '&' ( (lv_angleDefined_6_0= 'angle' ) ) (otherlv_7= '=' | otherlv_8= '==' ) ( (lv_angle_9_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= '&' ( ( ( (lv_blockingDefined_11_0= '!' ) ) otherlv_12= 'blocking' ) | ( ( (lv_blockingDefined_13_0= 'blocking' ) ) ( (otherlv_14= '!=' ( ( (lv_blocking_15_0= 'false' ) ) | otherlv_16= 'true' ) ) | ( (otherlv_17= '=' | otherlv_18= '==' ) ( ( (lv_blocking_19_0= 'true' ) ) | otherlv_20= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= '&' ( ( ( (lv_brokenDefined_22_0= '!' ) ) otherlv_23= 'broken' ) | ( ( (lv_brokenDefined_24_0= 'broken' ) ) ( (otherlv_25= '!=' ( ( (lv_broken_26_0= 'false' ) ) | otherlv_27= 'true' ) ) | ( (otherlv_28= '=' | otherlv_29= '==' ) ( ( (lv_broken_30_0= 'true' ) ) | otherlv_31= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_32= '&' ( ( ( (lv_castDefined_33_0= '!' ) ) otherlv_34= 'cast' ) | ( ( (lv_castDefined_35_0= 'cast' ) ) ( (otherlv_36= '!=' ( ( (lv_cast_37_0= 'false' ) ) | otherlv_38= 'true' ) ) | ( (otherlv_39= '=' | otherlv_40= '==' ) ( ( (lv_cast_41_0= 'true' ) ) | otherlv_42= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= '&' ( (lv_cooldownDefined_44_0= 'cooldown' ) ) (otherlv_45= '=' | otherlv_46= '==' ) ( (lv_cooldown_47_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_48= '&' ( (lv_damageDefined_49_0= 'damage' ) ) (otherlv_50= '=' | otherlv_51= '==' ) ( (lv_damage_52_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_53= '&' ( ( ( (lv_damagedDefined_54_0= '!' ) ) otherlv_55= 'damaged' ) | ( ( (lv_damagedDefined_56_0= 'damaged' ) ) ( (otherlv_57= '!=' ( ( (lv_damaged_58_0= 'false' ) ) | otherlv_59= 'true' ) ) | ( (otherlv_60= '=' | otherlv_61= '==' ) ( ( (lv_damaged_62_0= 'true' ) ) | otherlv_63= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_64= '&' ( ( ( (lv_lefthandedDefined_65_0= '!' ) ) otherlv_66= 'lefthanded' ) | ( ( (lv_lefthandedDefined_67_0= 'lefthanded' ) ) ( (otherlv_68= '!=' ( ( (lv_lefthanded_69_0= 'false' ) ) | otherlv_70= 'true' ) ) | ( (otherlv_71= '=' | otherlv_72= '==' ) ( ( (lv_lefthanded_73_0= 'true' ) ) | otherlv_74= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_75= '&' ( (lv_pullDefined_76_0= 'pull' ) ) (otherlv_77= '=' | otherlv_78= '==' ) ( (lv_pull_79_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_80= '&' ( ( ( (lv_pullingDefined_81_0= '!' ) ) otherlv_82= 'pulling' ) | ( ( (lv_pullingDefined_83_0= 'pulling' ) ) ( (otherlv_84= '!=' ( ( (lv_pulling_85_0= 'false' ) ) | otherlv_86= 'true' ) ) | ( (otherlv_87= '=' | otherlv_88= '==' ) ( ( (lv_pulling_89_0= 'true' ) ) | otherlv_90= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_91= '&' ( ( ( (lv_throwingDefined_92_0= '!' ) ) otherlv_93= 'throwing' ) | ( ( (lv_throwingDefined_94_0= 'throwing' ) ) ( (otherlv_95= '!=' ( ( (lv_throwing_96_0= 'false' ) ) | otherlv_97= 'true' ) ) | ( (otherlv_98= '=' | otherlv_99= '==' ) ( ( (lv_throwing_100_0= 'true' ) ) | otherlv_101= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) ) ) ) ) ) )* ) ) )
            // InternalMcmodel.g:15259:4: ( ( ( ({...}? => ( ({...}? => (otherlv_5= '&' ( (lv_angleDefined_6_0= 'angle' ) ) (otherlv_7= '=' | otherlv_8= '==' ) ( (lv_angle_9_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= '&' ( ( ( (lv_blockingDefined_11_0= '!' ) ) otherlv_12= 'blocking' ) | ( ( (lv_blockingDefined_13_0= 'blocking' ) ) ( (otherlv_14= '!=' ( ( (lv_blocking_15_0= 'false' ) ) | otherlv_16= 'true' ) ) | ( (otherlv_17= '=' | otherlv_18= '==' ) ( ( (lv_blocking_19_0= 'true' ) ) | otherlv_20= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= '&' ( ( ( (lv_brokenDefined_22_0= '!' ) ) otherlv_23= 'broken' ) | ( ( (lv_brokenDefined_24_0= 'broken' ) ) ( (otherlv_25= '!=' ( ( (lv_broken_26_0= 'false' ) ) | otherlv_27= 'true' ) ) | ( (otherlv_28= '=' | otherlv_29= '==' ) ( ( (lv_broken_30_0= 'true' ) ) | otherlv_31= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_32= '&' ( ( ( (lv_castDefined_33_0= '!' ) ) otherlv_34= 'cast' ) | ( ( (lv_castDefined_35_0= 'cast' ) ) ( (otherlv_36= '!=' ( ( (lv_cast_37_0= 'false' ) ) | otherlv_38= 'true' ) ) | ( (otherlv_39= '=' | otherlv_40= '==' ) ( ( (lv_cast_41_0= 'true' ) ) | otherlv_42= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= '&' ( (lv_cooldownDefined_44_0= 'cooldown' ) ) (otherlv_45= '=' | otherlv_46= '==' ) ( (lv_cooldown_47_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_48= '&' ( (lv_damageDefined_49_0= 'damage' ) ) (otherlv_50= '=' | otherlv_51= '==' ) ( (lv_damage_52_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_53= '&' ( ( ( (lv_damagedDefined_54_0= '!' ) ) otherlv_55= 'damaged' ) | ( ( (lv_damagedDefined_56_0= 'damaged' ) ) ( (otherlv_57= '!=' ( ( (lv_damaged_58_0= 'false' ) ) | otherlv_59= 'true' ) ) | ( (otherlv_60= '=' | otherlv_61= '==' ) ( ( (lv_damaged_62_0= 'true' ) ) | otherlv_63= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_64= '&' ( ( ( (lv_lefthandedDefined_65_0= '!' ) ) otherlv_66= 'lefthanded' ) | ( ( (lv_lefthandedDefined_67_0= 'lefthanded' ) ) ( (otherlv_68= '!=' ( ( (lv_lefthanded_69_0= 'false' ) ) | otherlv_70= 'true' ) ) | ( (otherlv_71= '=' | otherlv_72= '==' ) ( ( (lv_lefthanded_73_0= 'true' ) ) | otherlv_74= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_75= '&' ( (lv_pullDefined_76_0= 'pull' ) ) (otherlv_77= '=' | otherlv_78= '==' ) ( (lv_pull_79_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_80= '&' ( ( ( (lv_pullingDefined_81_0= '!' ) ) otherlv_82= 'pulling' ) | ( ( (lv_pullingDefined_83_0= 'pulling' ) ) ( (otherlv_84= '!=' ( ( (lv_pulling_85_0= 'false' ) ) | otherlv_86= 'true' ) ) | ( (otherlv_87= '=' | otherlv_88= '==' ) ( ( (lv_pulling_89_0= 'true' ) ) | otherlv_90= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_91= '&' ( ( ( (lv_throwingDefined_92_0= '!' ) ) otherlv_93= 'throwing' ) | ( ( (lv_throwingDefined_94_0= 'throwing' ) ) ( (otherlv_95= '!=' ( ( (lv_throwing_96_0= 'false' ) ) | otherlv_97= 'true' ) ) | ( (otherlv_98= '=' | otherlv_99= '==' ) ( ( (lv_throwing_100_0= 'true' ) ) | otherlv_101= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) ) ) ) ) ) )* ) )
            {
            // InternalMcmodel.g:15259:4: ( ( ( ({...}? => ( ({...}? => (otherlv_5= '&' ( (lv_angleDefined_6_0= 'angle' ) ) (otherlv_7= '=' | otherlv_8= '==' ) ( (lv_angle_9_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= '&' ( ( ( (lv_blockingDefined_11_0= '!' ) ) otherlv_12= 'blocking' ) | ( ( (lv_blockingDefined_13_0= 'blocking' ) ) ( (otherlv_14= '!=' ( ( (lv_blocking_15_0= 'false' ) ) | otherlv_16= 'true' ) ) | ( (otherlv_17= '=' | otherlv_18= '==' ) ( ( (lv_blocking_19_0= 'true' ) ) | otherlv_20= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= '&' ( ( ( (lv_brokenDefined_22_0= '!' ) ) otherlv_23= 'broken' ) | ( ( (lv_brokenDefined_24_0= 'broken' ) ) ( (otherlv_25= '!=' ( ( (lv_broken_26_0= 'false' ) ) | otherlv_27= 'true' ) ) | ( (otherlv_28= '=' | otherlv_29= '==' ) ( ( (lv_broken_30_0= 'true' ) ) | otherlv_31= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_32= '&' ( ( ( (lv_castDefined_33_0= '!' ) ) otherlv_34= 'cast' ) | ( ( (lv_castDefined_35_0= 'cast' ) ) ( (otherlv_36= '!=' ( ( (lv_cast_37_0= 'false' ) ) | otherlv_38= 'true' ) ) | ( (otherlv_39= '=' | otherlv_40= '==' ) ( ( (lv_cast_41_0= 'true' ) ) | otherlv_42= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= '&' ( (lv_cooldownDefined_44_0= 'cooldown' ) ) (otherlv_45= '=' | otherlv_46= '==' ) ( (lv_cooldown_47_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_48= '&' ( (lv_damageDefined_49_0= 'damage' ) ) (otherlv_50= '=' | otherlv_51= '==' ) ( (lv_damage_52_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_53= '&' ( ( ( (lv_damagedDefined_54_0= '!' ) ) otherlv_55= 'damaged' ) | ( ( (lv_damagedDefined_56_0= 'damaged' ) ) ( (otherlv_57= '!=' ( ( (lv_damaged_58_0= 'false' ) ) | otherlv_59= 'true' ) ) | ( (otherlv_60= '=' | otherlv_61= '==' ) ( ( (lv_damaged_62_0= 'true' ) ) | otherlv_63= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_64= '&' ( ( ( (lv_lefthandedDefined_65_0= '!' ) ) otherlv_66= 'lefthanded' ) | ( ( (lv_lefthandedDefined_67_0= 'lefthanded' ) ) ( (otherlv_68= '!=' ( ( (lv_lefthanded_69_0= 'false' ) ) | otherlv_70= 'true' ) ) | ( (otherlv_71= '=' | otherlv_72= '==' ) ( ( (lv_lefthanded_73_0= 'true' ) ) | otherlv_74= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_75= '&' ( (lv_pullDefined_76_0= 'pull' ) ) (otherlv_77= '=' | otherlv_78= '==' ) ( (lv_pull_79_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_80= '&' ( ( ( (lv_pullingDefined_81_0= '!' ) ) otherlv_82= 'pulling' ) | ( ( (lv_pullingDefined_83_0= 'pulling' ) ) ( (otherlv_84= '!=' ( ( (lv_pulling_85_0= 'false' ) ) | otherlv_86= 'true' ) ) | ( (otherlv_87= '=' | otherlv_88= '==' ) ( ( (lv_pulling_89_0= 'true' ) ) | otherlv_90= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_91= '&' ( ( ( (lv_throwingDefined_92_0= '!' ) ) otherlv_93= 'throwing' ) | ( ( (lv_throwingDefined_94_0= 'throwing' ) ) ( (otherlv_95= '!=' ( ( (lv_throwing_96_0= 'false' ) ) | otherlv_97= 'true' ) ) | ( (otherlv_98= '=' | otherlv_99= '==' ) ( ( (lv_throwing_100_0= 'true' ) ) | otherlv_101= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) ) ) ) ) ) )* ) )
            // InternalMcmodel.g:15260:5: ( ( ({...}? => ( ({...}? => (otherlv_5= '&' ( (lv_angleDefined_6_0= 'angle' ) ) (otherlv_7= '=' | otherlv_8= '==' ) ( (lv_angle_9_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= '&' ( ( ( (lv_blockingDefined_11_0= '!' ) ) otherlv_12= 'blocking' ) | ( ( (lv_blockingDefined_13_0= 'blocking' ) ) ( (otherlv_14= '!=' ( ( (lv_blocking_15_0= 'false' ) ) | otherlv_16= 'true' ) ) | ( (otherlv_17= '=' | otherlv_18= '==' ) ( ( (lv_blocking_19_0= 'true' ) ) | otherlv_20= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= '&' ( ( ( (lv_brokenDefined_22_0= '!' ) ) otherlv_23= 'broken' ) | ( ( (lv_brokenDefined_24_0= 'broken' ) ) ( (otherlv_25= '!=' ( ( (lv_broken_26_0= 'false' ) ) | otherlv_27= 'true' ) ) | ( (otherlv_28= '=' | otherlv_29= '==' ) ( ( (lv_broken_30_0= 'true' ) ) | otherlv_31= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_32= '&' ( ( ( (lv_castDefined_33_0= '!' ) ) otherlv_34= 'cast' ) | ( ( (lv_castDefined_35_0= 'cast' ) ) ( (otherlv_36= '!=' ( ( (lv_cast_37_0= 'false' ) ) | otherlv_38= 'true' ) ) | ( (otherlv_39= '=' | otherlv_40= '==' ) ( ( (lv_cast_41_0= 'true' ) ) | otherlv_42= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= '&' ( (lv_cooldownDefined_44_0= 'cooldown' ) ) (otherlv_45= '=' | otherlv_46= '==' ) ( (lv_cooldown_47_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_48= '&' ( (lv_damageDefined_49_0= 'damage' ) ) (otherlv_50= '=' | otherlv_51= '==' ) ( (lv_damage_52_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_53= '&' ( ( ( (lv_damagedDefined_54_0= '!' ) ) otherlv_55= 'damaged' ) | ( ( (lv_damagedDefined_56_0= 'damaged' ) ) ( (otherlv_57= '!=' ( ( (lv_damaged_58_0= 'false' ) ) | otherlv_59= 'true' ) ) | ( (otherlv_60= '=' | otherlv_61= '==' ) ( ( (lv_damaged_62_0= 'true' ) ) | otherlv_63= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_64= '&' ( ( ( (lv_lefthandedDefined_65_0= '!' ) ) otherlv_66= 'lefthanded' ) | ( ( (lv_lefthandedDefined_67_0= 'lefthanded' ) ) ( (otherlv_68= '!=' ( ( (lv_lefthanded_69_0= 'false' ) ) | otherlv_70= 'true' ) ) | ( (otherlv_71= '=' | otherlv_72= '==' ) ( ( (lv_lefthanded_73_0= 'true' ) ) | otherlv_74= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_75= '&' ( (lv_pullDefined_76_0= 'pull' ) ) (otherlv_77= '=' | otherlv_78= '==' ) ( (lv_pull_79_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_80= '&' ( ( ( (lv_pullingDefined_81_0= '!' ) ) otherlv_82= 'pulling' ) | ( ( (lv_pullingDefined_83_0= 'pulling' ) ) ( (otherlv_84= '!=' ( ( (lv_pulling_85_0= 'false' ) ) | otherlv_86= 'true' ) ) | ( (otherlv_87= '=' | otherlv_88= '==' ) ( ( (lv_pulling_89_0= 'true' ) ) | otherlv_90= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_91= '&' ( ( ( (lv_throwingDefined_92_0= '!' ) ) otherlv_93= 'throwing' ) | ( ( (lv_throwingDefined_94_0= 'throwing' ) ) ( (otherlv_95= '!=' ( ( (lv_throwing_96_0= 'false' ) ) | otherlv_97= 'true' ) ) | ( (otherlv_98= '=' | otherlv_99= '==' ) ( ( (lv_throwing_100_0= 'true' ) ) | otherlv_101= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) ) ) ) ) ) )* )
            {
            getUnorderedGroupHelper().enter(grammarAccess.getOverridePredicate_12Access().getUnorderedGroup_3());
            // InternalMcmodel.g:15263:5: ( ( ({...}? => ( ({...}? => (otherlv_5= '&' ( (lv_angleDefined_6_0= 'angle' ) ) (otherlv_7= '=' | otherlv_8= '==' ) ( (lv_angle_9_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= '&' ( ( ( (lv_blockingDefined_11_0= '!' ) ) otherlv_12= 'blocking' ) | ( ( (lv_blockingDefined_13_0= 'blocking' ) ) ( (otherlv_14= '!=' ( ( (lv_blocking_15_0= 'false' ) ) | otherlv_16= 'true' ) ) | ( (otherlv_17= '=' | otherlv_18= '==' ) ( ( (lv_blocking_19_0= 'true' ) ) | otherlv_20= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= '&' ( ( ( (lv_brokenDefined_22_0= '!' ) ) otherlv_23= 'broken' ) | ( ( (lv_brokenDefined_24_0= 'broken' ) ) ( (otherlv_25= '!=' ( ( (lv_broken_26_0= 'false' ) ) | otherlv_27= 'true' ) ) | ( (otherlv_28= '=' | otherlv_29= '==' ) ( ( (lv_broken_30_0= 'true' ) ) | otherlv_31= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_32= '&' ( ( ( (lv_castDefined_33_0= '!' ) ) otherlv_34= 'cast' ) | ( ( (lv_castDefined_35_0= 'cast' ) ) ( (otherlv_36= '!=' ( ( (lv_cast_37_0= 'false' ) ) | otherlv_38= 'true' ) ) | ( (otherlv_39= '=' | otherlv_40= '==' ) ( ( (lv_cast_41_0= 'true' ) ) | otherlv_42= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= '&' ( (lv_cooldownDefined_44_0= 'cooldown' ) ) (otherlv_45= '=' | otherlv_46= '==' ) ( (lv_cooldown_47_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_48= '&' ( (lv_damageDefined_49_0= 'damage' ) ) (otherlv_50= '=' | otherlv_51= '==' ) ( (lv_damage_52_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_53= '&' ( ( ( (lv_damagedDefined_54_0= '!' ) ) otherlv_55= 'damaged' ) | ( ( (lv_damagedDefined_56_0= 'damaged' ) ) ( (otherlv_57= '!=' ( ( (lv_damaged_58_0= 'false' ) ) | otherlv_59= 'true' ) ) | ( (otherlv_60= '=' | otherlv_61= '==' ) ( ( (lv_damaged_62_0= 'true' ) ) | otherlv_63= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_64= '&' ( ( ( (lv_lefthandedDefined_65_0= '!' ) ) otherlv_66= 'lefthanded' ) | ( ( (lv_lefthandedDefined_67_0= 'lefthanded' ) ) ( (otherlv_68= '!=' ( ( (lv_lefthanded_69_0= 'false' ) ) | otherlv_70= 'true' ) ) | ( (otherlv_71= '=' | otherlv_72= '==' ) ( ( (lv_lefthanded_73_0= 'true' ) ) | otherlv_74= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_75= '&' ( (lv_pullDefined_76_0= 'pull' ) ) (otherlv_77= '=' | otherlv_78= '==' ) ( (lv_pull_79_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_80= '&' ( ( ( (lv_pullingDefined_81_0= '!' ) ) otherlv_82= 'pulling' ) | ( ( (lv_pullingDefined_83_0= 'pulling' ) ) ( (otherlv_84= '!=' ( ( (lv_pulling_85_0= 'false' ) ) | otherlv_86= 'true' ) ) | ( (otherlv_87= '=' | otherlv_88= '==' ) ( ( (lv_pulling_89_0= 'true' ) ) | otherlv_90= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_91= '&' ( ( ( (lv_throwingDefined_92_0= '!' ) ) otherlv_93= 'throwing' ) | ( ( (lv_throwingDefined_94_0= 'throwing' ) ) ( (otherlv_95= '!=' ( ( (lv_throwing_96_0= 'false' ) ) | otherlv_97= 'true' ) ) | ( (otherlv_98= '=' | otherlv_99= '==' ) ( ( (lv_throwing_100_0= 'true' ) ) | otherlv_101= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) ) ) ) ) ) )* )
            // InternalMcmodel.g:15264:6: ( ({...}? => ( ({...}? => (otherlv_5= '&' ( (lv_angleDefined_6_0= 'angle' ) ) (otherlv_7= '=' | otherlv_8= '==' ) ( (lv_angle_9_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= '&' ( ( ( (lv_blockingDefined_11_0= '!' ) ) otherlv_12= 'blocking' ) | ( ( (lv_blockingDefined_13_0= 'blocking' ) ) ( (otherlv_14= '!=' ( ( (lv_blocking_15_0= 'false' ) ) | otherlv_16= 'true' ) ) | ( (otherlv_17= '=' | otherlv_18= '==' ) ( ( (lv_blocking_19_0= 'true' ) ) | otherlv_20= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= '&' ( ( ( (lv_brokenDefined_22_0= '!' ) ) otherlv_23= 'broken' ) | ( ( (lv_brokenDefined_24_0= 'broken' ) ) ( (otherlv_25= '!=' ( ( (lv_broken_26_0= 'false' ) ) | otherlv_27= 'true' ) ) | ( (otherlv_28= '=' | otherlv_29= '==' ) ( ( (lv_broken_30_0= 'true' ) ) | otherlv_31= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_32= '&' ( ( ( (lv_castDefined_33_0= '!' ) ) otherlv_34= 'cast' ) | ( ( (lv_castDefined_35_0= 'cast' ) ) ( (otherlv_36= '!=' ( ( (lv_cast_37_0= 'false' ) ) | otherlv_38= 'true' ) ) | ( (otherlv_39= '=' | otherlv_40= '==' ) ( ( (lv_cast_41_0= 'true' ) ) | otherlv_42= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= '&' ( (lv_cooldownDefined_44_0= 'cooldown' ) ) (otherlv_45= '=' | otherlv_46= '==' ) ( (lv_cooldown_47_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_48= '&' ( (lv_damageDefined_49_0= 'damage' ) ) (otherlv_50= '=' | otherlv_51= '==' ) ( (lv_damage_52_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_53= '&' ( ( ( (lv_damagedDefined_54_0= '!' ) ) otherlv_55= 'damaged' ) | ( ( (lv_damagedDefined_56_0= 'damaged' ) ) ( (otherlv_57= '!=' ( ( (lv_damaged_58_0= 'false' ) ) | otherlv_59= 'true' ) ) | ( (otherlv_60= '=' | otherlv_61= '==' ) ( ( (lv_damaged_62_0= 'true' ) ) | otherlv_63= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_64= '&' ( ( ( (lv_lefthandedDefined_65_0= '!' ) ) otherlv_66= 'lefthanded' ) | ( ( (lv_lefthandedDefined_67_0= 'lefthanded' ) ) ( (otherlv_68= '!=' ( ( (lv_lefthanded_69_0= 'false' ) ) | otherlv_70= 'true' ) ) | ( (otherlv_71= '=' | otherlv_72= '==' ) ( ( (lv_lefthanded_73_0= 'true' ) ) | otherlv_74= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_75= '&' ( (lv_pullDefined_76_0= 'pull' ) ) (otherlv_77= '=' | otherlv_78= '==' ) ( (lv_pull_79_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_80= '&' ( ( ( (lv_pullingDefined_81_0= '!' ) ) otherlv_82= 'pulling' ) | ( ( (lv_pullingDefined_83_0= 'pulling' ) ) ( (otherlv_84= '!=' ( ( (lv_pulling_85_0= 'false' ) ) | otherlv_86= 'true' ) ) | ( (otherlv_87= '=' | otherlv_88= '==' ) ( ( (lv_pulling_89_0= 'true' ) ) | otherlv_90= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_91= '&' ( ( ( (lv_throwingDefined_92_0= '!' ) ) otherlv_93= 'throwing' ) | ( ( (lv_throwingDefined_94_0= 'throwing' ) ) ( (otherlv_95= '!=' ( ( (lv_throwing_96_0= 'false' ) ) | otherlv_97= 'true' ) ) | ( (otherlv_98= '=' | otherlv_99= '==' ) ( ( (lv_throwing_100_0= 'true' ) ) | otherlv_101= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) ) ) ) ) ) )*
            {
            // InternalMcmodel.g:15264:6: ( ({...}? => ( ({...}? => (otherlv_5= '&' ( (lv_angleDefined_6_0= 'angle' ) ) (otherlv_7= '=' | otherlv_8= '==' ) ( (lv_angle_9_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= '&' ( ( ( (lv_blockingDefined_11_0= '!' ) ) otherlv_12= 'blocking' ) | ( ( (lv_blockingDefined_13_0= 'blocking' ) ) ( (otherlv_14= '!=' ( ( (lv_blocking_15_0= 'false' ) ) | otherlv_16= 'true' ) ) | ( (otherlv_17= '=' | otherlv_18= '==' ) ( ( (lv_blocking_19_0= 'true' ) ) | otherlv_20= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= '&' ( ( ( (lv_brokenDefined_22_0= '!' ) ) otherlv_23= 'broken' ) | ( ( (lv_brokenDefined_24_0= 'broken' ) ) ( (otherlv_25= '!=' ( ( (lv_broken_26_0= 'false' ) ) | otherlv_27= 'true' ) ) | ( (otherlv_28= '=' | otherlv_29= '==' ) ( ( (lv_broken_30_0= 'true' ) ) | otherlv_31= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_32= '&' ( ( ( (lv_castDefined_33_0= '!' ) ) otherlv_34= 'cast' ) | ( ( (lv_castDefined_35_0= 'cast' ) ) ( (otherlv_36= '!=' ( ( (lv_cast_37_0= 'false' ) ) | otherlv_38= 'true' ) ) | ( (otherlv_39= '=' | otherlv_40= '==' ) ( ( (lv_cast_41_0= 'true' ) ) | otherlv_42= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= '&' ( (lv_cooldownDefined_44_0= 'cooldown' ) ) (otherlv_45= '=' | otherlv_46= '==' ) ( (lv_cooldown_47_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_48= '&' ( (lv_damageDefined_49_0= 'damage' ) ) (otherlv_50= '=' | otherlv_51= '==' ) ( (lv_damage_52_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_53= '&' ( ( ( (lv_damagedDefined_54_0= '!' ) ) otherlv_55= 'damaged' ) | ( ( (lv_damagedDefined_56_0= 'damaged' ) ) ( (otherlv_57= '!=' ( ( (lv_damaged_58_0= 'false' ) ) | otherlv_59= 'true' ) ) | ( (otherlv_60= '=' | otherlv_61= '==' ) ( ( (lv_damaged_62_0= 'true' ) ) | otherlv_63= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_64= '&' ( ( ( (lv_lefthandedDefined_65_0= '!' ) ) otherlv_66= 'lefthanded' ) | ( ( (lv_lefthandedDefined_67_0= 'lefthanded' ) ) ( (otherlv_68= '!=' ( ( (lv_lefthanded_69_0= 'false' ) ) | otherlv_70= 'true' ) ) | ( (otherlv_71= '=' | otherlv_72= '==' ) ( ( (lv_lefthanded_73_0= 'true' ) ) | otherlv_74= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_75= '&' ( (lv_pullDefined_76_0= 'pull' ) ) (otherlv_77= '=' | otherlv_78= '==' ) ( (lv_pull_79_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_80= '&' ( ( ( (lv_pullingDefined_81_0= '!' ) ) otherlv_82= 'pulling' ) | ( ( (lv_pullingDefined_83_0= 'pulling' ) ) ( (otherlv_84= '!=' ( ( (lv_pulling_85_0= 'false' ) ) | otherlv_86= 'true' ) ) | ( (otherlv_87= '=' | otherlv_88= '==' ) ( ( (lv_pulling_89_0= 'true' ) ) | otherlv_90= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_91= '&' ( ( ( (lv_throwingDefined_92_0= '!' ) ) otherlv_93= 'throwing' ) | ( ( (lv_throwingDefined_94_0= 'throwing' ) ) ( (otherlv_95= '!=' ( ( (lv_throwing_96_0= 'false' ) ) | otherlv_97= 'true' ) ) | ( (otherlv_98= '=' | otherlv_99= '==' ) ( ( (lv_throwing_100_0= 'true' ) ) | otherlv_101= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) ) ) ) ) ) )*
            loop525:
            do {
                int alt525=13;
                alt525 = dfa525.predict(input);
                switch (alt525) {
            	case 1 :
            	    // InternalMcmodel.g:15265:4: ({...}? => ( ({...}? => (otherlv_5= '&' ( (lv_angleDefined_6_0= 'angle' ) ) (otherlv_7= '=' | otherlv_8= '==' ) ( (lv_angle_9_0= RULE_PERCENTAGE ) ) ) ) ) )
            	    {
            	    // InternalMcmodel.g:15265:4: ({...}? => ( ({...}? => (otherlv_5= '&' ( (lv_angleDefined_6_0= 'angle' ) ) (otherlv_7= '=' | otherlv_8= '==' ) ( (lv_angle_9_0= RULE_PERCENTAGE ) ) ) ) ) )
            	    // InternalMcmodel.g:15266:5: {...}? => ( ({...}? => (otherlv_5= '&' ( (lv_angleDefined_6_0= 'angle' ) ) (otherlv_7= '=' | otherlv_8= '==' ) ( (lv_angle_9_0= RULE_PERCENTAGE ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_12Access().getUnorderedGroup_3(), 0) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_12", "getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_12Access().getUnorderedGroup_3(), 0)");
            	    }
            	    // InternalMcmodel.g:15266:117: ( ({...}? => (otherlv_5= '&' ( (lv_angleDefined_6_0= 'angle' ) ) (otherlv_7= '=' | otherlv_8= '==' ) ( (lv_angle_9_0= RULE_PERCENTAGE ) ) ) ) )
            	    // InternalMcmodel.g:15267:6: ({...}? => (otherlv_5= '&' ( (lv_angleDefined_6_0= 'angle' ) ) (otherlv_7= '=' | otherlv_8= '==' ) ( (lv_angle_9_0= RULE_PERCENTAGE ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getOverridePredicate_12Access().getUnorderedGroup_3(), 0);
            	    // InternalMcmodel.g:15270:9: ({...}? => (otherlv_5= '&' ( (lv_angleDefined_6_0= 'angle' ) ) (otherlv_7= '=' | otherlv_8= '==' ) ( (lv_angle_9_0= RULE_PERCENTAGE ) ) ) )
            	    // InternalMcmodel.g:15270:10: {...}? => (otherlv_5= '&' ( (lv_angleDefined_6_0= 'angle' ) ) (otherlv_7= '=' | otherlv_8= '==' ) ( (lv_angle_9_0= RULE_PERCENTAGE ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_12", "true");
            	    }
            	    // InternalMcmodel.g:15270:19: (otherlv_5= '&' ( (lv_angleDefined_6_0= 'angle' ) ) (otherlv_7= '=' | otherlv_8= '==' ) ( (lv_angle_9_0= RULE_PERCENTAGE ) ) )
            	    // InternalMcmodel.g:15270:20: otherlv_5= '&' ( (lv_angleDefined_6_0= 'angle' ) ) (otherlv_7= '=' | otherlv_8= '==' ) ( (lv_angle_9_0= RULE_PERCENTAGE ) )
            	    {
            	    otherlv_5=(Token)match(input,59,FOLLOW_58); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_5, grammarAccess.getOverridePredicate_12Access().getAmpersandKeyword_3_0_0());
            	      								
            	    }
            	    // InternalMcmodel.g:15274:9: ( (lv_angleDefined_6_0= 'angle' ) )
            	    // InternalMcmodel.g:15275:10: (lv_angleDefined_6_0= 'angle' )
            	    {
            	    // InternalMcmodel.g:15275:10: (lv_angleDefined_6_0= 'angle' )
            	    // InternalMcmodel.g:15276:11: lv_angleDefined_6_0= 'angle'
            	    {
            	    lv_angleDefined_6_0=(Token)match(input,38,FOLLOW_35); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											newLeafNode(lv_angleDefined_6_0, grammarAccess.getOverridePredicate_12Access().getAngleDefinedAngleKeyword_3_0_1_0());
            	      										
            	    }
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElement(grammarAccess.getOverridePredicate_12Rule());
            	      											}
            	      											setWithLastConsumed(current, "angleDefined", true, "angle");
            	      										
            	    }

            	    }


            	    }

            	    // InternalMcmodel.g:15288:9: (otherlv_7= '=' | otherlv_8= '==' )
            	    int alt485=2;
            	    int LA485_0 = input.LA(1);

            	    if ( (LA485_0==18) ) {
            	        alt485=1;
            	    }
            	    else if ( (LA485_0==58) ) {
            	        alt485=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 485, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt485) {
            	        case 1 :
            	            // InternalMcmodel.g:15289:10: otherlv_7= '='
            	            {
            	            otherlv_7=(Token)match(input,18,FOLLOW_36); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(otherlv_7, grammarAccess.getOverridePredicate_12Access().getEqualsSignKeyword_3_0_2_0());
            	              									
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalMcmodel.g:15294:10: otherlv_8= '=='
            	            {
            	            otherlv_8=(Token)match(input,58,FOLLOW_36); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(otherlv_8, grammarAccess.getOverridePredicate_12Access().getEqualsSignEqualsSignKeyword_3_0_2_1());
            	              									
            	            }

            	            }
            	            break;

            	    }

            	    // InternalMcmodel.g:15299:9: ( (lv_angle_9_0= RULE_PERCENTAGE ) )
            	    // InternalMcmodel.g:15300:10: (lv_angle_9_0= RULE_PERCENTAGE )
            	    {
            	    // InternalMcmodel.g:15300:10: (lv_angle_9_0= RULE_PERCENTAGE )
            	    // InternalMcmodel.g:15301:11: lv_angle_9_0= RULE_PERCENTAGE
            	    {
            	    lv_angle_9_0=(Token)match(input,RULE_PERCENTAGE,FOLLOW_37); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											newLeafNode(lv_angle_9_0, grammarAccess.getOverridePredicate_12Access().getAnglePERCENTAGETerminalRuleCall_3_0_3_0());
            	      										
            	    }
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElement(grammarAccess.getOverridePredicate_12Rule());
            	      											}
            	      											setWithLastConsumed(
            	      												current,
            	      												"angle",
            	      												lv_angle_9_0,
            	      												"com.raptor.mcmodel.Mcmodel.PERCENTAGE");
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getOverridePredicate_12Access().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // InternalMcmodel.g:15323:4: ({...}? => ( ({...}? => (otherlv_10= '&' ( ( ( (lv_blockingDefined_11_0= '!' ) ) otherlv_12= 'blocking' ) | ( ( (lv_blockingDefined_13_0= 'blocking' ) ) ( (otherlv_14= '!=' ( ( (lv_blocking_15_0= 'false' ) ) | otherlv_16= 'true' ) ) | ( (otherlv_17= '=' | otherlv_18= '==' ) ( ( (lv_blocking_19_0= 'true' ) ) | otherlv_20= 'false' ) ) ) ) ) ) ) ) )
            	    {
            	    // InternalMcmodel.g:15323:4: ({...}? => ( ({...}? => (otherlv_10= '&' ( ( ( (lv_blockingDefined_11_0= '!' ) ) otherlv_12= 'blocking' ) | ( ( (lv_blockingDefined_13_0= 'blocking' ) ) ( (otherlv_14= '!=' ( ( (lv_blocking_15_0= 'false' ) ) | otherlv_16= 'true' ) ) | ( (otherlv_17= '=' | otherlv_18= '==' ) ( ( (lv_blocking_19_0= 'true' ) ) | otherlv_20= 'false' ) ) ) ) ) ) ) ) )
            	    // InternalMcmodel.g:15324:5: {...}? => ( ({...}? => (otherlv_10= '&' ( ( ( (lv_blockingDefined_11_0= '!' ) ) otherlv_12= 'blocking' ) | ( ( (lv_blockingDefined_13_0= 'blocking' ) ) ( (otherlv_14= '!=' ( ( (lv_blocking_15_0= 'false' ) ) | otherlv_16= 'true' ) ) | ( (otherlv_17= '=' | otherlv_18= '==' ) ( ( (lv_blocking_19_0= 'true' ) ) | otherlv_20= 'false' ) ) ) ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_12Access().getUnorderedGroup_3(), 1) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_12", "getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_12Access().getUnorderedGroup_3(), 1)");
            	    }
            	    // InternalMcmodel.g:15324:117: ( ({...}? => (otherlv_10= '&' ( ( ( (lv_blockingDefined_11_0= '!' ) ) otherlv_12= 'blocking' ) | ( ( (lv_blockingDefined_13_0= 'blocking' ) ) ( (otherlv_14= '!=' ( ( (lv_blocking_15_0= 'false' ) ) | otherlv_16= 'true' ) ) | ( (otherlv_17= '=' | otherlv_18= '==' ) ( ( (lv_blocking_19_0= 'true' ) ) | otherlv_20= 'false' ) ) ) ) ) ) ) )
            	    // InternalMcmodel.g:15325:6: ({...}? => (otherlv_10= '&' ( ( ( (lv_blockingDefined_11_0= '!' ) ) otherlv_12= 'blocking' ) | ( ( (lv_blockingDefined_13_0= 'blocking' ) ) ( (otherlv_14= '!=' ( ( (lv_blocking_15_0= 'false' ) ) | otherlv_16= 'true' ) ) | ( (otherlv_17= '=' | otherlv_18= '==' ) ( ( (lv_blocking_19_0= 'true' ) ) | otherlv_20= 'false' ) ) ) ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getOverridePredicate_12Access().getUnorderedGroup_3(), 1);
            	    // InternalMcmodel.g:15328:9: ({...}? => (otherlv_10= '&' ( ( ( (lv_blockingDefined_11_0= '!' ) ) otherlv_12= 'blocking' ) | ( ( (lv_blockingDefined_13_0= 'blocking' ) ) ( (otherlv_14= '!=' ( ( (lv_blocking_15_0= 'false' ) ) | otherlv_16= 'true' ) ) | ( (otherlv_17= '=' | otherlv_18= '==' ) ( ( (lv_blocking_19_0= 'true' ) ) | otherlv_20= 'false' ) ) ) ) ) ) )
            	    // InternalMcmodel.g:15328:10: {...}? => (otherlv_10= '&' ( ( ( (lv_blockingDefined_11_0= '!' ) ) otherlv_12= 'blocking' ) | ( ( (lv_blockingDefined_13_0= 'blocking' ) ) ( (otherlv_14= '!=' ( ( (lv_blocking_15_0= 'false' ) ) | otherlv_16= 'true' ) ) | ( (otherlv_17= '=' | otherlv_18= '==' ) ( ( (lv_blocking_19_0= 'true' ) ) | otherlv_20= 'false' ) ) ) ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_12", "true");
            	    }
            	    // InternalMcmodel.g:15328:19: (otherlv_10= '&' ( ( ( (lv_blockingDefined_11_0= '!' ) ) otherlv_12= 'blocking' ) | ( ( (lv_blockingDefined_13_0= 'blocking' ) ) ( (otherlv_14= '!=' ( ( (lv_blocking_15_0= 'false' ) ) | otherlv_16= 'true' ) ) | ( (otherlv_17= '=' | otherlv_18= '==' ) ( ( (lv_blocking_19_0= 'true' ) ) | otherlv_20= 'false' ) ) ) ) ) )
            	    // InternalMcmodel.g:15328:20: otherlv_10= '&' ( ( ( (lv_blockingDefined_11_0= '!' ) ) otherlv_12= 'blocking' ) | ( ( (lv_blockingDefined_13_0= 'blocking' ) ) ( (otherlv_14= '!=' ( ( (lv_blocking_15_0= 'false' ) ) | otherlv_16= 'true' ) ) | ( (otherlv_17= '=' | otherlv_18= '==' ) ( ( (lv_blocking_19_0= 'true' ) ) | otherlv_20= 'false' ) ) ) ) )
            	    {
            	    otherlv_10=(Token)match(input,59,FOLLOW_38); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_10, grammarAccess.getOverridePredicate_12Access().getAmpersandKeyword_3_1_0());
            	      								
            	    }
            	    // InternalMcmodel.g:15332:9: ( ( ( (lv_blockingDefined_11_0= '!' ) ) otherlv_12= 'blocking' ) | ( ( (lv_blockingDefined_13_0= 'blocking' ) ) ( (otherlv_14= '!=' ( ( (lv_blocking_15_0= 'false' ) ) | otherlv_16= 'true' ) ) | ( (otherlv_17= '=' | otherlv_18= '==' ) ( ( (lv_blocking_19_0= 'true' ) ) | otherlv_20= 'false' ) ) ) ) )
            	    int alt490=2;
            	    int LA490_0 = input.LA(1);

            	    if ( (LA490_0==60) ) {
            	        alt490=1;
            	    }
            	    else if ( (LA490_0==61) ) {
            	        alt490=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 490, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt490) {
            	        case 1 :
            	            // InternalMcmodel.g:15333:10: ( ( (lv_blockingDefined_11_0= '!' ) ) otherlv_12= 'blocking' )
            	            {
            	            // InternalMcmodel.g:15333:10: ( ( (lv_blockingDefined_11_0= '!' ) ) otherlv_12= 'blocking' )
            	            // InternalMcmodel.g:15334:11: ( (lv_blockingDefined_11_0= '!' ) ) otherlv_12= 'blocking'
            	            {
            	            // InternalMcmodel.g:15334:11: ( (lv_blockingDefined_11_0= '!' ) )
            	            // InternalMcmodel.g:15335:12: (lv_blockingDefined_11_0= '!' )
            	            {
            	            // InternalMcmodel.g:15335:12: (lv_blockingDefined_11_0= '!' )
            	            // InternalMcmodel.g:15336:13: lv_blockingDefined_11_0= '!'
            	            {
            	            lv_blockingDefined_11_0=(Token)match(input,60,FOLLOW_39); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              													newLeafNode(lv_blockingDefined_11_0, grammarAccess.getOverridePredicate_12Access().getBlockingDefinedExclamationMarkKeyword_3_1_1_0_0_0());
            	              												
            	            }
            	            if ( state.backtracking==0 ) {

            	              													if (current==null) {
            	              														current = createModelElement(grammarAccess.getOverridePredicate_12Rule());
            	              													}
            	              													setWithLastConsumed(current, "blockingDefined", true, "!");
            	              												
            	            }

            	            }


            	            }

            	            otherlv_12=(Token)match(input,61,FOLLOW_37); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              											newLeafNode(otherlv_12, grammarAccess.getOverridePredicate_12Access().getBlockingKeyword_3_1_1_0_1());
            	              										
            	            }

            	            }


            	            }
            	            break;
            	        case 2 :
            	            // InternalMcmodel.g:15354:10: ( ( (lv_blockingDefined_13_0= 'blocking' ) ) ( (otherlv_14= '!=' ( ( (lv_blocking_15_0= 'false' ) ) | otherlv_16= 'true' ) ) | ( (otherlv_17= '=' | otherlv_18= '==' ) ( ( (lv_blocking_19_0= 'true' ) ) | otherlv_20= 'false' ) ) ) )
            	            {
            	            // InternalMcmodel.g:15354:10: ( ( (lv_blockingDefined_13_0= 'blocking' ) ) ( (otherlv_14= '!=' ( ( (lv_blocking_15_0= 'false' ) ) | otherlv_16= 'true' ) ) | ( (otherlv_17= '=' | otherlv_18= '==' ) ( ( (lv_blocking_19_0= 'true' ) ) | otherlv_20= 'false' ) ) ) )
            	            // InternalMcmodel.g:15355:11: ( (lv_blockingDefined_13_0= 'blocking' ) ) ( (otherlv_14= '!=' ( ( (lv_blocking_15_0= 'false' ) ) | otherlv_16= 'true' ) ) | ( (otherlv_17= '=' | otherlv_18= '==' ) ( ( (lv_blocking_19_0= 'true' ) ) | otherlv_20= 'false' ) ) )
            	            {
            	            // InternalMcmodel.g:15355:11: ( (lv_blockingDefined_13_0= 'blocking' ) )
            	            // InternalMcmodel.g:15356:12: (lv_blockingDefined_13_0= 'blocking' )
            	            {
            	            // InternalMcmodel.g:15356:12: (lv_blockingDefined_13_0= 'blocking' )
            	            // InternalMcmodel.g:15357:13: lv_blockingDefined_13_0= 'blocking'
            	            {
            	            lv_blockingDefined_13_0=(Token)match(input,61,FOLLOW_40); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              													newLeafNode(lv_blockingDefined_13_0, grammarAccess.getOverridePredicate_12Access().getBlockingDefinedBlockingKeyword_3_1_1_1_0_0());
            	              												
            	            }
            	            if ( state.backtracking==0 ) {

            	              													if (current==null) {
            	              														current = createModelElement(grammarAccess.getOverridePredicate_12Rule());
            	              													}
            	              													setWithLastConsumed(current, "blockingDefined", true, "blocking");
            	              												
            	            }

            	            }


            	            }

            	            // InternalMcmodel.g:15369:11: ( (otherlv_14= '!=' ( ( (lv_blocking_15_0= 'false' ) ) | otherlv_16= 'true' ) ) | ( (otherlv_17= '=' | otherlv_18= '==' ) ( ( (lv_blocking_19_0= 'true' ) ) | otherlv_20= 'false' ) ) )
            	            int alt489=2;
            	            int LA489_0 = input.LA(1);

            	            if ( (LA489_0==62) ) {
            	                alt489=1;
            	            }
            	            else if ( (LA489_0==18||LA489_0==58) ) {
            	                alt489=2;
            	            }
            	            else {
            	                if (state.backtracking>0) {state.failed=true; return current;}
            	                NoViableAltException nvae =
            	                    new NoViableAltException("", 489, 0, input);

            	                throw nvae;
            	            }
            	            switch (alt489) {
            	                case 1 :
            	                    // InternalMcmodel.g:15370:12: (otherlv_14= '!=' ( ( (lv_blocking_15_0= 'false' ) ) | otherlv_16= 'true' ) )
            	                    {
            	                    // InternalMcmodel.g:15370:12: (otherlv_14= '!=' ( ( (lv_blocking_15_0= 'false' ) ) | otherlv_16= 'true' ) )
            	                    // InternalMcmodel.g:15371:13: otherlv_14= '!=' ( ( (lv_blocking_15_0= 'false' ) ) | otherlv_16= 'true' )
            	                    {
            	                    otherlv_14=(Token)match(input,62,FOLLOW_7); if (state.failed) return current;
            	                    if ( state.backtracking==0 ) {

            	                      													newLeafNode(otherlv_14, grammarAccess.getOverridePredicate_12Access().getExclamationMarkEqualsSignKeyword_3_1_1_1_1_0_0());
            	                      												
            	                    }
            	                    // InternalMcmodel.g:15375:13: ( ( (lv_blocking_15_0= 'false' ) ) | otherlv_16= 'true' )
            	                    int alt486=2;
            	                    int LA486_0 = input.LA(1);

            	                    if ( (LA486_0==21) ) {
            	                        alt486=1;
            	                    }
            	                    else if ( (LA486_0==20) ) {
            	                        alt486=2;
            	                    }
            	                    else {
            	                        if (state.backtracking>0) {state.failed=true; return current;}
            	                        NoViableAltException nvae =
            	                            new NoViableAltException("", 486, 0, input);

            	                        throw nvae;
            	                    }
            	                    switch (alt486) {
            	                        case 1 :
            	                            // InternalMcmodel.g:15376:14: ( (lv_blocking_15_0= 'false' ) )
            	                            {
            	                            // InternalMcmodel.g:15376:14: ( (lv_blocking_15_0= 'false' ) )
            	                            // InternalMcmodel.g:15377:15: (lv_blocking_15_0= 'false' )
            	                            {
            	                            // InternalMcmodel.g:15377:15: (lv_blocking_15_0= 'false' )
            	                            // InternalMcmodel.g:15378:16: lv_blocking_15_0= 'false'
            	                            {
            	                            lv_blocking_15_0=(Token)match(input,21,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              																newLeafNode(lv_blocking_15_0, grammarAccess.getOverridePredicate_12Access().getBlockingFalseKeyword_3_1_1_1_1_0_1_0_0());
            	                              															
            	                            }
            	                            if ( state.backtracking==0 ) {

            	                              																if (current==null) {
            	                              																	current = createModelElement(grammarAccess.getOverridePredicate_12Rule());
            	                              																}
            	                              																setWithLastConsumed(current, "blocking", true, "false");
            	                              															
            	                            }

            	                            }


            	                            }


            	                            }
            	                            break;
            	                        case 2 :
            	                            // InternalMcmodel.g:15391:14: otherlv_16= 'true'
            	                            {
            	                            otherlv_16=(Token)match(input,20,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_16, grammarAccess.getOverridePredicate_12Access().getTrueKeyword_3_1_1_1_1_0_1_1());
            	                              													
            	                            }

            	                            }
            	                            break;

            	                    }


            	                    }


            	                    }
            	                    break;
            	                case 2 :
            	                    // InternalMcmodel.g:15398:12: ( (otherlv_17= '=' | otherlv_18= '==' ) ( ( (lv_blocking_19_0= 'true' ) ) | otherlv_20= 'false' ) )
            	                    {
            	                    // InternalMcmodel.g:15398:12: ( (otherlv_17= '=' | otherlv_18= '==' ) ( ( (lv_blocking_19_0= 'true' ) ) | otherlv_20= 'false' ) )
            	                    // InternalMcmodel.g:15399:13: (otherlv_17= '=' | otherlv_18= '==' ) ( ( (lv_blocking_19_0= 'true' ) ) | otherlv_20= 'false' )
            	                    {
            	                    // InternalMcmodel.g:15399:13: (otherlv_17= '=' | otherlv_18= '==' )
            	                    int alt487=2;
            	                    int LA487_0 = input.LA(1);

            	                    if ( (LA487_0==18) ) {
            	                        alt487=1;
            	                    }
            	                    else if ( (LA487_0==58) ) {
            	                        alt487=2;
            	                    }
            	                    else {
            	                        if (state.backtracking>0) {state.failed=true; return current;}
            	                        NoViableAltException nvae =
            	                            new NoViableAltException("", 487, 0, input);

            	                        throw nvae;
            	                    }
            	                    switch (alt487) {
            	                        case 1 :
            	                            // InternalMcmodel.g:15400:14: otherlv_17= '='
            	                            {
            	                            otherlv_17=(Token)match(input,18,FOLLOW_7); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_17, grammarAccess.getOverridePredicate_12Access().getEqualsSignKeyword_3_1_1_1_1_1_0_0());
            	                              													
            	                            }

            	                            }
            	                            break;
            	                        case 2 :
            	                            // InternalMcmodel.g:15405:14: otherlv_18= '=='
            	                            {
            	                            otherlv_18=(Token)match(input,58,FOLLOW_7); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_18, grammarAccess.getOverridePredicate_12Access().getEqualsSignEqualsSignKeyword_3_1_1_1_1_1_0_1());
            	                              													
            	                            }

            	                            }
            	                            break;

            	                    }

            	                    // InternalMcmodel.g:15410:13: ( ( (lv_blocking_19_0= 'true' ) ) | otherlv_20= 'false' )
            	                    int alt488=2;
            	                    int LA488_0 = input.LA(1);

            	                    if ( (LA488_0==20) ) {
            	                        alt488=1;
            	                    }
            	                    else if ( (LA488_0==21) ) {
            	                        alt488=2;
            	                    }
            	                    else {
            	                        if (state.backtracking>0) {state.failed=true; return current;}
            	                        NoViableAltException nvae =
            	                            new NoViableAltException("", 488, 0, input);

            	                        throw nvae;
            	                    }
            	                    switch (alt488) {
            	                        case 1 :
            	                            // InternalMcmodel.g:15411:14: ( (lv_blocking_19_0= 'true' ) )
            	                            {
            	                            // InternalMcmodel.g:15411:14: ( (lv_blocking_19_0= 'true' ) )
            	                            // InternalMcmodel.g:15412:15: (lv_blocking_19_0= 'true' )
            	                            {
            	                            // InternalMcmodel.g:15412:15: (lv_blocking_19_0= 'true' )
            	                            // InternalMcmodel.g:15413:16: lv_blocking_19_0= 'true'
            	                            {
            	                            lv_blocking_19_0=(Token)match(input,20,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              																newLeafNode(lv_blocking_19_0, grammarAccess.getOverridePredicate_12Access().getBlockingTrueKeyword_3_1_1_1_1_1_1_0_0());
            	                              															
            	                            }
            	                            if ( state.backtracking==0 ) {

            	                              																if (current==null) {
            	                              																	current = createModelElement(grammarAccess.getOverridePredicate_12Rule());
            	                              																}
            	                              																setWithLastConsumed(current, "blocking", true, "true");
            	                              															
            	                            }

            	                            }


            	                            }


            	                            }
            	                            break;
            	                        case 2 :
            	                            // InternalMcmodel.g:15426:14: otherlv_20= 'false'
            	                            {
            	                            otherlv_20=(Token)match(input,21,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_20, grammarAccess.getOverridePredicate_12Access().getFalseKeyword_3_1_1_1_1_1_1_1());
            	                              													
            	                            }

            	                            }
            	                            break;

            	                    }


            	                    }


            	                    }
            	                    break;

            	            }


            	            }


            	            }
            	            break;

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getOverridePredicate_12Access().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 3 :
            	    // InternalMcmodel.g:15441:4: ({...}? => ( ({...}? => (otherlv_21= '&' ( ( ( (lv_brokenDefined_22_0= '!' ) ) otherlv_23= 'broken' ) | ( ( (lv_brokenDefined_24_0= 'broken' ) ) ( (otherlv_25= '!=' ( ( (lv_broken_26_0= 'false' ) ) | otherlv_27= 'true' ) ) | ( (otherlv_28= '=' | otherlv_29= '==' ) ( ( (lv_broken_30_0= 'true' ) ) | otherlv_31= 'false' ) ) ) ) ) ) ) ) )
            	    {
            	    // InternalMcmodel.g:15441:4: ({...}? => ( ({...}? => (otherlv_21= '&' ( ( ( (lv_brokenDefined_22_0= '!' ) ) otherlv_23= 'broken' ) | ( ( (lv_brokenDefined_24_0= 'broken' ) ) ( (otherlv_25= '!=' ( ( (lv_broken_26_0= 'false' ) ) | otherlv_27= 'true' ) ) | ( (otherlv_28= '=' | otherlv_29= '==' ) ( ( (lv_broken_30_0= 'true' ) ) | otherlv_31= 'false' ) ) ) ) ) ) ) ) )
            	    // InternalMcmodel.g:15442:5: {...}? => ( ({...}? => (otherlv_21= '&' ( ( ( (lv_brokenDefined_22_0= '!' ) ) otherlv_23= 'broken' ) | ( ( (lv_brokenDefined_24_0= 'broken' ) ) ( (otherlv_25= '!=' ( ( (lv_broken_26_0= 'false' ) ) | otherlv_27= 'true' ) ) | ( (otherlv_28= '=' | otherlv_29= '==' ) ( ( (lv_broken_30_0= 'true' ) ) | otherlv_31= 'false' ) ) ) ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_12Access().getUnorderedGroup_3(), 2) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_12", "getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_12Access().getUnorderedGroup_3(), 2)");
            	    }
            	    // InternalMcmodel.g:15442:117: ( ({...}? => (otherlv_21= '&' ( ( ( (lv_brokenDefined_22_0= '!' ) ) otherlv_23= 'broken' ) | ( ( (lv_brokenDefined_24_0= 'broken' ) ) ( (otherlv_25= '!=' ( ( (lv_broken_26_0= 'false' ) ) | otherlv_27= 'true' ) ) | ( (otherlv_28= '=' | otherlv_29= '==' ) ( ( (lv_broken_30_0= 'true' ) ) | otherlv_31= 'false' ) ) ) ) ) ) ) )
            	    // InternalMcmodel.g:15443:6: ({...}? => (otherlv_21= '&' ( ( ( (lv_brokenDefined_22_0= '!' ) ) otherlv_23= 'broken' ) | ( ( (lv_brokenDefined_24_0= 'broken' ) ) ( (otherlv_25= '!=' ( ( (lv_broken_26_0= 'false' ) ) | otherlv_27= 'true' ) ) | ( (otherlv_28= '=' | otherlv_29= '==' ) ( ( (lv_broken_30_0= 'true' ) ) | otherlv_31= 'false' ) ) ) ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getOverridePredicate_12Access().getUnorderedGroup_3(), 2);
            	    // InternalMcmodel.g:15446:9: ({...}? => (otherlv_21= '&' ( ( ( (lv_brokenDefined_22_0= '!' ) ) otherlv_23= 'broken' ) | ( ( (lv_brokenDefined_24_0= 'broken' ) ) ( (otherlv_25= '!=' ( ( (lv_broken_26_0= 'false' ) ) | otherlv_27= 'true' ) ) | ( (otherlv_28= '=' | otherlv_29= '==' ) ( ( (lv_broken_30_0= 'true' ) ) | otherlv_31= 'false' ) ) ) ) ) ) )
            	    // InternalMcmodel.g:15446:10: {...}? => (otherlv_21= '&' ( ( ( (lv_brokenDefined_22_0= '!' ) ) otherlv_23= 'broken' ) | ( ( (lv_brokenDefined_24_0= 'broken' ) ) ( (otherlv_25= '!=' ( ( (lv_broken_26_0= 'false' ) ) | otherlv_27= 'true' ) ) | ( (otherlv_28= '=' | otherlv_29= '==' ) ( ( (lv_broken_30_0= 'true' ) ) | otherlv_31= 'false' ) ) ) ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_12", "true");
            	    }
            	    // InternalMcmodel.g:15446:19: (otherlv_21= '&' ( ( ( (lv_brokenDefined_22_0= '!' ) ) otherlv_23= 'broken' ) | ( ( (lv_brokenDefined_24_0= 'broken' ) ) ( (otherlv_25= '!=' ( ( (lv_broken_26_0= 'false' ) ) | otherlv_27= 'true' ) ) | ( (otherlv_28= '=' | otherlv_29= '==' ) ( ( (lv_broken_30_0= 'true' ) ) | otherlv_31= 'false' ) ) ) ) ) )
            	    // InternalMcmodel.g:15446:20: otherlv_21= '&' ( ( ( (lv_brokenDefined_22_0= '!' ) ) otherlv_23= 'broken' ) | ( ( (lv_brokenDefined_24_0= 'broken' ) ) ( (otherlv_25= '!=' ( ( (lv_broken_26_0= 'false' ) ) | otherlv_27= 'true' ) ) | ( (otherlv_28= '=' | otherlv_29= '==' ) ( ( (lv_broken_30_0= 'true' ) ) | otherlv_31= 'false' ) ) ) ) )
            	    {
            	    otherlv_21=(Token)match(input,59,FOLLOW_41); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_21, grammarAccess.getOverridePredicate_12Access().getAmpersandKeyword_3_2_0());
            	      								
            	    }
            	    // InternalMcmodel.g:15450:9: ( ( ( (lv_brokenDefined_22_0= '!' ) ) otherlv_23= 'broken' ) | ( ( (lv_brokenDefined_24_0= 'broken' ) ) ( (otherlv_25= '!=' ( ( (lv_broken_26_0= 'false' ) ) | otherlv_27= 'true' ) ) | ( (otherlv_28= '=' | otherlv_29= '==' ) ( ( (lv_broken_30_0= 'true' ) ) | otherlv_31= 'false' ) ) ) ) )
            	    int alt495=2;
            	    int LA495_0 = input.LA(1);

            	    if ( (LA495_0==60) ) {
            	        alt495=1;
            	    }
            	    else if ( (LA495_0==63) ) {
            	        alt495=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 495, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt495) {
            	        case 1 :
            	            // InternalMcmodel.g:15451:10: ( ( (lv_brokenDefined_22_0= '!' ) ) otherlv_23= 'broken' )
            	            {
            	            // InternalMcmodel.g:15451:10: ( ( (lv_brokenDefined_22_0= '!' ) ) otherlv_23= 'broken' )
            	            // InternalMcmodel.g:15452:11: ( (lv_brokenDefined_22_0= '!' ) ) otherlv_23= 'broken'
            	            {
            	            // InternalMcmodel.g:15452:11: ( (lv_brokenDefined_22_0= '!' ) )
            	            // InternalMcmodel.g:15453:12: (lv_brokenDefined_22_0= '!' )
            	            {
            	            // InternalMcmodel.g:15453:12: (lv_brokenDefined_22_0= '!' )
            	            // InternalMcmodel.g:15454:13: lv_brokenDefined_22_0= '!'
            	            {
            	            lv_brokenDefined_22_0=(Token)match(input,60,FOLLOW_42); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              													newLeafNode(lv_brokenDefined_22_0, grammarAccess.getOverridePredicate_12Access().getBrokenDefinedExclamationMarkKeyword_3_2_1_0_0_0());
            	              												
            	            }
            	            if ( state.backtracking==0 ) {

            	              													if (current==null) {
            	              														current = createModelElement(grammarAccess.getOverridePredicate_12Rule());
            	              													}
            	              													setWithLastConsumed(current, "brokenDefined", true, "!");
            	              												
            	            }

            	            }


            	            }

            	            otherlv_23=(Token)match(input,63,FOLLOW_37); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              											newLeafNode(otherlv_23, grammarAccess.getOverridePredicate_12Access().getBrokenKeyword_3_2_1_0_1());
            	              										
            	            }

            	            }


            	            }
            	            break;
            	        case 2 :
            	            // InternalMcmodel.g:15472:10: ( ( (lv_brokenDefined_24_0= 'broken' ) ) ( (otherlv_25= '!=' ( ( (lv_broken_26_0= 'false' ) ) | otherlv_27= 'true' ) ) | ( (otherlv_28= '=' | otherlv_29= '==' ) ( ( (lv_broken_30_0= 'true' ) ) | otherlv_31= 'false' ) ) ) )
            	            {
            	            // InternalMcmodel.g:15472:10: ( ( (lv_brokenDefined_24_0= 'broken' ) ) ( (otherlv_25= '!=' ( ( (lv_broken_26_0= 'false' ) ) | otherlv_27= 'true' ) ) | ( (otherlv_28= '=' | otherlv_29= '==' ) ( ( (lv_broken_30_0= 'true' ) ) | otherlv_31= 'false' ) ) ) )
            	            // InternalMcmodel.g:15473:11: ( (lv_brokenDefined_24_0= 'broken' ) ) ( (otherlv_25= '!=' ( ( (lv_broken_26_0= 'false' ) ) | otherlv_27= 'true' ) ) | ( (otherlv_28= '=' | otherlv_29= '==' ) ( ( (lv_broken_30_0= 'true' ) ) | otherlv_31= 'false' ) ) )
            	            {
            	            // InternalMcmodel.g:15473:11: ( (lv_brokenDefined_24_0= 'broken' ) )
            	            // InternalMcmodel.g:15474:12: (lv_brokenDefined_24_0= 'broken' )
            	            {
            	            // InternalMcmodel.g:15474:12: (lv_brokenDefined_24_0= 'broken' )
            	            // InternalMcmodel.g:15475:13: lv_brokenDefined_24_0= 'broken'
            	            {
            	            lv_brokenDefined_24_0=(Token)match(input,63,FOLLOW_40); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              													newLeafNode(lv_brokenDefined_24_0, grammarAccess.getOverridePredicate_12Access().getBrokenDefinedBrokenKeyword_3_2_1_1_0_0());
            	              												
            	            }
            	            if ( state.backtracking==0 ) {

            	              													if (current==null) {
            	              														current = createModelElement(grammarAccess.getOverridePredicate_12Rule());
            	              													}
            	              													setWithLastConsumed(current, "brokenDefined", true, "broken");
            	              												
            	            }

            	            }


            	            }

            	            // InternalMcmodel.g:15487:11: ( (otherlv_25= '!=' ( ( (lv_broken_26_0= 'false' ) ) | otherlv_27= 'true' ) ) | ( (otherlv_28= '=' | otherlv_29= '==' ) ( ( (lv_broken_30_0= 'true' ) ) | otherlv_31= 'false' ) ) )
            	            int alt494=2;
            	            int LA494_0 = input.LA(1);

            	            if ( (LA494_0==62) ) {
            	                alt494=1;
            	            }
            	            else if ( (LA494_0==18||LA494_0==58) ) {
            	                alt494=2;
            	            }
            	            else {
            	                if (state.backtracking>0) {state.failed=true; return current;}
            	                NoViableAltException nvae =
            	                    new NoViableAltException("", 494, 0, input);

            	                throw nvae;
            	            }
            	            switch (alt494) {
            	                case 1 :
            	                    // InternalMcmodel.g:15488:12: (otherlv_25= '!=' ( ( (lv_broken_26_0= 'false' ) ) | otherlv_27= 'true' ) )
            	                    {
            	                    // InternalMcmodel.g:15488:12: (otherlv_25= '!=' ( ( (lv_broken_26_0= 'false' ) ) | otherlv_27= 'true' ) )
            	                    // InternalMcmodel.g:15489:13: otherlv_25= '!=' ( ( (lv_broken_26_0= 'false' ) ) | otherlv_27= 'true' )
            	                    {
            	                    otherlv_25=(Token)match(input,62,FOLLOW_7); if (state.failed) return current;
            	                    if ( state.backtracking==0 ) {

            	                      													newLeafNode(otherlv_25, grammarAccess.getOverridePredicate_12Access().getExclamationMarkEqualsSignKeyword_3_2_1_1_1_0_0());
            	                      												
            	                    }
            	                    // InternalMcmodel.g:15493:13: ( ( (lv_broken_26_0= 'false' ) ) | otherlv_27= 'true' )
            	                    int alt491=2;
            	                    int LA491_0 = input.LA(1);

            	                    if ( (LA491_0==21) ) {
            	                        alt491=1;
            	                    }
            	                    else if ( (LA491_0==20) ) {
            	                        alt491=2;
            	                    }
            	                    else {
            	                        if (state.backtracking>0) {state.failed=true; return current;}
            	                        NoViableAltException nvae =
            	                            new NoViableAltException("", 491, 0, input);

            	                        throw nvae;
            	                    }
            	                    switch (alt491) {
            	                        case 1 :
            	                            // InternalMcmodel.g:15494:14: ( (lv_broken_26_0= 'false' ) )
            	                            {
            	                            // InternalMcmodel.g:15494:14: ( (lv_broken_26_0= 'false' ) )
            	                            // InternalMcmodel.g:15495:15: (lv_broken_26_0= 'false' )
            	                            {
            	                            // InternalMcmodel.g:15495:15: (lv_broken_26_0= 'false' )
            	                            // InternalMcmodel.g:15496:16: lv_broken_26_0= 'false'
            	                            {
            	                            lv_broken_26_0=(Token)match(input,21,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              																newLeafNode(lv_broken_26_0, grammarAccess.getOverridePredicate_12Access().getBrokenFalseKeyword_3_2_1_1_1_0_1_0_0());
            	                              															
            	                            }
            	                            if ( state.backtracking==0 ) {

            	                              																if (current==null) {
            	                              																	current = createModelElement(grammarAccess.getOverridePredicate_12Rule());
            	                              																}
            	                              																setWithLastConsumed(current, "broken", true, "false");
            	                              															
            	                            }

            	                            }


            	                            }


            	                            }
            	                            break;
            	                        case 2 :
            	                            // InternalMcmodel.g:15509:14: otherlv_27= 'true'
            	                            {
            	                            otherlv_27=(Token)match(input,20,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_27, grammarAccess.getOverridePredicate_12Access().getTrueKeyword_3_2_1_1_1_0_1_1());
            	                              													
            	                            }

            	                            }
            	                            break;

            	                    }


            	                    }


            	                    }
            	                    break;
            	                case 2 :
            	                    // InternalMcmodel.g:15516:12: ( (otherlv_28= '=' | otherlv_29= '==' ) ( ( (lv_broken_30_0= 'true' ) ) | otherlv_31= 'false' ) )
            	                    {
            	                    // InternalMcmodel.g:15516:12: ( (otherlv_28= '=' | otherlv_29= '==' ) ( ( (lv_broken_30_0= 'true' ) ) | otherlv_31= 'false' ) )
            	                    // InternalMcmodel.g:15517:13: (otherlv_28= '=' | otherlv_29= '==' ) ( ( (lv_broken_30_0= 'true' ) ) | otherlv_31= 'false' )
            	                    {
            	                    // InternalMcmodel.g:15517:13: (otherlv_28= '=' | otherlv_29= '==' )
            	                    int alt492=2;
            	                    int LA492_0 = input.LA(1);

            	                    if ( (LA492_0==18) ) {
            	                        alt492=1;
            	                    }
            	                    else if ( (LA492_0==58) ) {
            	                        alt492=2;
            	                    }
            	                    else {
            	                        if (state.backtracking>0) {state.failed=true; return current;}
            	                        NoViableAltException nvae =
            	                            new NoViableAltException("", 492, 0, input);

            	                        throw nvae;
            	                    }
            	                    switch (alt492) {
            	                        case 1 :
            	                            // InternalMcmodel.g:15518:14: otherlv_28= '='
            	                            {
            	                            otherlv_28=(Token)match(input,18,FOLLOW_7); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_28, grammarAccess.getOverridePredicate_12Access().getEqualsSignKeyword_3_2_1_1_1_1_0_0());
            	                              													
            	                            }

            	                            }
            	                            break;
            	                        case 2 :
            	                            // InternalMcmodel.g:15523:14: otherlv_29= '=='
            	                            {
            	                            otherlv_29=(Token)match(input,58,FOLLOW_7); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_29, grammarAccess.getOverridePredicate_12Access().getEqualsSignEqualsSignKeyword_3_2_1_1_1_1_0_1());
            	                              													
            	                            }

            	                            }
            	                            break;

            	                    }

            	                    // InternalMcmodel.g:15528:13: ( ( (lv_broken_30_0= 'true' ) ) | otherlv_31= 'false' )
            	                    int alt493=2;
            	                    int LA493_0 = input.LA(1);

            	                    if ( (LA493_0==20) ) {
            	                        alt493=1;
            	                    }
            	                    else if ( (LA493_0==21) ) {
            	                        alt493=2;
            	                    }
            	                    else {
            	                        if (state.backtracking>0) {state.failed=true; return current;}
            	                        NoViableAltException nvae =
            	                            new NoViableAltException("", 493, 0, input);

            	                        throw nvae;
            	                    }
            	                    switch (alt493) {
            	                        case 1 :
            	                            // InternalMcmodel.g:15529:14: ( (lv_broken_30_0= 'true' ) )
            	                            {
            	                            // InternalMcmodel.g:15529:14: ( (lv_broken_30_0= 'true' ) )
            	                            // InternalMcmodel.g:15530:15: (lv_broken_30_0= 'true' )
            	                            {
            	                            // InternalMcmodel.g:15530:15: (lv_broken_30_0= 'true' )
            	                            // InternalMcmodel.g:15531:16: lv_broken_30_0= 'true'
            	                            {
            	                            lv_broken_30_0=(Token)match(input,20,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              																newLeafNode(lv_broken_30_0, grammarAccess.getOverridePredicate_12Access().getBrokenTrueKeyword_3_2_1_1_1_1_1_0_0());
            	                              															
            	                            }
            	                            if ( state.backtracking==0 ) {

            	                              																if (current==null) {
            	                              																	current = createModelElement(grammarAccess.getOverridePredicate_12Rule());
            	                              																}
            	                              																setWithLastConsumed(current, "broken", true, "true");
            	                              															
            	                            }

            	                            }


            	                            }


            	                            }
            	                            break;
            	                        case 2 :
            	                            // InternalMcmodel.g:15544:14: otherlv_31= 'false'
            	                            {
            	                            otherlv_31=(Token)match(input,21,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_31, grammarAccess.getOverridePredicate_12Access().getFalseKeyword_3_2_1_1_1_1_1_1());
            	                              													
            	                            }

            	                            }
            	                            break;

            	                    }


            	                    }


            	                    }
            	                    break;

            	            }


            	            }


            	            }
            	            break;

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getOverridePredicate_12Access().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 4 :
            	    // InternalMcmodel.g:15559:4: ({...}? => ( ({...}? => (otherlv_32= '&' ( ( ( (lv_castDefined_33_0= '!' ) ) otherlv_34= 'cast' ) | ( ( (lv_castDefined_35_0= 'cast' ) ) ( (otherlv_36= '!=' ( ( (lv_cast_37_0= 'false' ) ) | otherlv_38= 'true' ) ) | ( (otherlv_39= '=' | otherlv_40= '==' ) ( ( (lv_cast_41_0= 'true' ) ) | otherlv_42= 'false' ) ) ) ) ) ) ) ) )
            	    {
            	    // InternalMcmodel.g:15559:4: ({...}? => ( ({...}? => (otherlv_32= '&' ( ( ( (lv_castDefined_33_0= '!' ) ) otherlv_34= 'cast' ) | ( ( (lv_castDefined_35_0= 'cast' ) ) ( (otherlv_36= '!=' ( ( (lv_cast_37_0= 'false' ) ) | otherlv_38= 'true' ) ) | ( (otherlv_39= '=' | otherlv_40= '==' ) ( ( (lv_cast_41_0= 'true' ) ) | otherlv_42= 'false' ) ) ) ) ) ) ) ) )
            	    // InternalMcmodel.g:15560:5: {...}? => ( ({...}? => (otherlv_32= '&' ( ( ( (lv_castDefined_33_0= '!' ) ) otherlv_34= 'cast' ) | ( ( (lv_castDefined_35_0= 'cast' ) ) ( (otherlv_36= '!=' ( ( (lv_cast_37_0= 'false' ) ) | otherlv_38= 'true' ) ) | ( (otherlv_39= '=' | otherlv_40= '==' ) ( ( (lv_cast_41_0= 'true' ) ) | otherlv_42= 'false' ) ) ) ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_12Access().getUnorderedGroup_3(), 3) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_12", "getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_12Access().getUnorderedGroup_3(), 3)");
            	    }
            	    // InternalMcmodel.g:15560:117: ( ({...}? => (otherlv_32= '&' ( ( ( (lv_castDefined_33_0= '!' ) ) otherlv_34= 'cast' ) | ( ( (lv_castDefined_35_0= 'cast' ) ) ( (otherlv_36= '!=' ( ( (lv_cast_37_0= 'false' ) ) | otherlv_38= 'true' ) ) | ( (otherlv_39= '=' | otherlv_40= '==' ) ( ( (lv_cast_41_0= 'true' ) ) | otherlv_42= 'false' ) ) ) ) ) ) ) )
            	    // InternalMcmodel.g:15561:6: ({...}? => (otherlv_32= '&' ( ( ( (lv_castDefined_33_0= '!' ) ) otherlv_34= 'cast' ) | ( ( (lv_castDefined_35_0= 'cast' ) ) ( (otherlv_36= '!=' ( ( (lv_cast_37_0= 'false' ) ) | otherlv_38= 'true' ) ) | ( (otherlv_39= '=' | otherlv_40= '==' ) ( ( (lv_cast_41_0= 'true' ) ) | otherlv_42= 'false' ) ) ) ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getOverridePredicate_12Access().getUnorderedGroup_3(), 3);
            	    // InternalMcmodel.g:15564:9: ({...}? => (otherlv_32= '&' ( ( ( (lv_castDefined_33_0= '!' ) ) otherlv_34= 'cast' ) | ( ( (lv_castDefined_35_0= 'cast' ) ) ( (otherlv_36= '!=' ( ( (lv_cast_37_0= 'false' ) ) | otherlv_38= 'true' ) ) | ( (otherlv_39= '=' | otherlv_40= '==' ) ( ( (lv_cast_41_0= 'true' ) ) | otherlv_42= 'false' ) ) ) ) ) ) )
            	    // InternalMcmodel.g:15564:10: {...}? => (otherlv_32= '&' ( ( ( (lv_castDefined_33_0= '!' ) ) otherlv_34= 'cast' ) | ( ( (lv_castDefined_35_0= 'cast' ) ) ( (otherlv_36= '!=' ( ( (lv_cast_37_0= 'false' ) ) | otherlv_38= 'true' ) ) | ( (otherlv_39= '=' | otherlv_40= '==' ) ( ( (lv_cast_41_0= 'true' ) ) | otherlv_42= 'false' ) ) ) ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_12", "true");
            	    }
            	    // InternalMcmodel.g:15564:19: (otherlv_32= '&' ( ( ( (lv_castDefined_33_0= '!' ) ) otherlv_34= 'cast' ) | ( ( (lv_castDefined_35_0= 'cast' ) ) ( (otherlv_36= '!=' ( ( (lv_cast_37_0= 'false' ) ) | otherlv_38= 'true' ) ) | ( (otherlv_39= '=' | otherlv_40= '==' ) ( ( (lv_cast_41_0= 'true' ) ) | otherlv_42= 'false' ) ) ) ) ) )
            	    // InternalMcmodel.g:15564:20: otherlv_32= '&' ( ( ( (lv_castDefined_33_0= '!' ) ) otherlv_34= 'cast' ) | ( ( (lv_castDefined_35_0= 'cast' ) ) ( (otherlv_36= '!=' ( ( (lv_cast_37_0= 'false' ) ) | otherlv_38= 'true' ) ) | ( (otherlv_39= '=' | otherlv_40= '==' ) ( ( (lv_cast_41_0= 'true' ) ) | otherlv_42= 'false' ) ) ) ) )
            	    {
            	    otherlv_32=(Token)match(input,59,FOLLOW_43); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_32, grammarAccess.getOverridePredicate_12Access().getAmpersandKeyword_3_3_0());
            	      								
            	    }
            	    // InternalMcmodel.g:15568:9: ( ( ( (lv_castDefined_33_0= '!' ) ) otherlv_34= 'cast' ) | ( ( (lv_castDefined_35_0= 'cast' ) ) ( (otherlv_36= '!=' ( ( (lv_cast_37_0= 'false' ) ) | otherlv_38= 'true' ) ) | ( (otherlv_39= '=' | otherlv_40= '==' ) ( ( (lv_cast_41_0= 'true' ) ) | otherlv_42= 'false' ) ) ) ) )
            	    int alt500=2;
            	    int LA500_0 = input.LA(1);

            	    if ( (LA500_0==60) ) {
            	        alt500=1;
            	    }
            	    else if ( (LA500_0==64) ) {
            	        alt500=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 500, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt500) {
            	        case 1 :
            	            // InternalMcmodel.g:15569:10: ( ( (lv_castDefined_33_0= '!' ) ) otherlv_34= 'cast' )
            	            {
            	            // InternalMcmodel.g:15569:10: ( ( (lv_castDefined_33_0= '!' ) ) otherlv_34= 'cast' )
            	            // InternalMcmodel.g:15570:11: ( (lv_castDefined_33_0= '!' ) ) otherlv_34= 'cast'
            	            {
            	            // InternalMcmodel.g:15570:11: ( (lv_castDefined_33_0= '!' ) )
            	            // InternalMcmodel.g:15571:12: (lv_castDefined_33_0= '!' )
            	            {
            	            // InternalMcmodel.g:15571:12: (lv_castDefined_33_0= '!' )
            	            // InternalMcmodel.g:15572:13: lv_castDefined_33_0= '!'
            	            {
            	            lv_castDefined_33_0=(Token)match(input,60,FOLLOW_44); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              													newLeafNode(lv_castDefined_33_0, grammarAccess.getOverridePredicate_12Access().getCastDefinedExclamationMarkKeyword_3_3_1_0_0_0());
            	              												
            	            }
            	            if ( state.backtracking==0 ) {

            	              													if (current==null) {
            	              														current = createModelElement(grammarAccess.getOverridePredicate_12Rule());
            	              													}
            	              													setWithLastConsumed(current, "castDefined", true, "!");
            	              												
            	            }

            	            }


            	            }

            	            otherlv_34=(Token)match(input,64,FOLLOW_37); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              											newLeafNode(otherlv_34, grammarAccess.getOverridePredicate_12Access().getCastKeyword_3_3_1_0_1());
            	              										
            	            }

            	            }


            	            }
            	            break;
            	        case 2 :
            	            // InternalMcmodel.g:15590:10: ( ( (lv_castDefined_35_0= 'cast' ) ) ( (otherlv_36= '!=' ( ( (lv_cast_37_0= 'false' ) ) | otherlv_38= 'true' ) ) | ( (otherlv_39= '=' | otherlv_40= '==' ) ( ( (lv_cast_41_0= 'true' ) ) | otherlv_42= 'false' ) ) ) )
            	            {
            	            // InternalMcmodel.g:15590:10: ( ( (lv_castDefined_35_0= 'cast' ) ) ( (otherlv_36= '!=' ( ( (lv_cast_37_0= 'false' ) ) | otherlv_38= 'true' ) ) | ( (otherlv_39= '=' | otherlv_40= '==' ) ( ( (lv_cast_41_0= 'true' ) ) | otherlv_42= 'false' ) ) ) )
            	            // InternalMcmodel.g:15591:11: ( (lv_castDefined_35_0= 'cast' ) ) ( (otherlv_36= '!=' ( ( (lv_cast_37_0= 'false' ) ) | otherlv_38= 'true' ) ) | ( (otherlv_39= '=' | otherlv_40= '==' ) ( ( (lv_cast_41_0= 'true' ) ) | otherlv_42= 'false' ) ) )
            	            {
            	            // InternalMcmodel.g:15591:11: ( (lv_castDefined_35_0= 'cast' ) )
            	            // InternalMcmodel.g:15592:12: (lv_castDefined_35_0= 'cast' )
            	            {
            	            // InternalMcmodel.g:15592:12: (lv_castDefined_35_0= 'cast' )
            	            // InternalMcmodel.g:15593:13: lv_castDefined_35_0= 'cast'
            	            {
            	            lv_castDefined_35_0=(Token)match(input,64,FOLLOW_40); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              													newLeafNode(lv_castDefined_35_0, grammarAccess.getOverridePredicate_12Access().getCastDefinedCastKeyword_3_3_1_1_0_0());
            	              												
            	            }
            	            if ( state.backtracking==0 ) {

            	              													if (current==null) {
            	              														current = createModelElement(grammarAccess.getOverridePredicate_12Rule());
            	              													}
            	              													setWithLastConsumed(current, "castDefined", true, "cast");
            	              												
            	            }

            	            }


            	            }

            	            // InternalMcmodel.g:15605:11: ( (otherlv_36= '!=' ( ( (lv_cast_37_0= 'false' ) ) | otherlv_38= 'true' ) ) | ( (otherlv_39= '=' | otherlv_40= '==' ) ( ( (lv_cast_41_0= 'true' ) ) | otherlv_42= 'false' ) ) )
            	            int alt499=2;
            	            int LA499_0 = input.LA(1);

            	            if ( (LA499_0==62) ) {
            	                alt499=1;
            	            }
            	            else if ( (LA499_0==18||LA499_0==58) ) {
            	                alt499=2;
            	            }
            	            else {
            	                if (state.backtracking>0) {state.failed=true; return current;}
            	                NoViableAltException nvae =
            	                    new NoViableAltException("", 499, 0, input);

            	                throw nvae;
            	            }
            	            switch (alt499) {
            	                case 1 :
            	                    // InternalMcmodel.g:15606:12: (otherlv_36= '!=' ( ( (lv_cast_37_0= 'false' ) ) | otherlv_38= 'true' ) )
            	                    {
            	                    // InternalMcmodel.g:15606:12: (otherlv_36= '!=' ( ( (lv_cast_37_0= 'false' ) ) | otherlv_38= 'true' ) )
            	                    // InternalMcmodel.g:15607:13: otherlv_36= '!=' ( ( (lv_cast_37_0= 'false' ) ) | otherlv_38= 'true' )
            	                    {
            	                    otherlv_36=(Token)match(input,62,FOLLOW_7); if (state.failed) return current;
            	                    if ( state.backtracking==0 ) {

            	                      													newLeafNode(otherlv_36, grammarAccess.getOverridePredicate_12Access().getExclamationMarkEqualsSignKeyword_3_3_1_1_1_0_0());
            	                      												
            	                    }
            	                    // InternalMcmodel.g:15611:13: ( ( (lv_cast_37_0= 'false' ) ) | otherlv_38= 'true' )
            	                    int alt496=2;
            	                    int LA496_0 = input.LA(1);

            	                    if ( (LA496_0==21) ) {
            	                        alt496=1;
            	                    }
            	                    else if ( (LA496_0==20) ) {
            	                        alt496=2;
            	                    }
            	                    else {
            	                        if (state.backtracking>0) {state.failed=true; return current;}
            	                        NoViableAltException nvae =
            	                            new NoViableAltException("", 496, 0, input);

            	                        throw nvae;
            	                    }
            	                    switch (alt496) {
            	                        case 1 :
            	                            // InternalMcmodel.g:15612:14: ( (lv_cast_37_0= 'false' ) )
            	                            {
            	                            // InternalMcmodel.g:15612:14: ( (lv_cast_37_0= 'false' ) )
            	                            // InternalMcmodel.g:15613:15: (lv_cast_37_0= 'false' )
            	                            {
            	                            // InternalMcmodel.g:15613:15: (lv_cast_37_0= 'false' )
            	                            // InternalMcmodel.g:15614:16: lv_cast_37_0= 'false'
            	                            {
            	                            lv_cast_37_0=(Token)match(input,21,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              																newLeafNode(lv_cast_37_0, grammarAccess.getOverridePredicate_12Access().getCastFalseKeyword_3_3_1_1_1_0_1_0_0());
            	                              															
            	                            }
            	                            if ( state.backtracking==0 ) {

            	                              																if (current==null) {
            	                              																	current = createModelElement(grammarAccess.getOverridePredicate_12Rule());
            	                              																}
            	                              																setWithLastConsumed(current, "cast", true, "false");
            	                              															
            	                            }

            	                            }


            	                            }


            	                            }
            	                            break;
            	                        case 2 :
            	                            // InternalMcmodel.g:15627:14: otherlv_38= 'true'
            	                            {
            	                            otherlv_38=(Token)match(input,20,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_38, grammarAccess.getOverridePredicate_12Access().getTrueKeyword_3_3_1_1_1_0_1_1());
            	                              													
            	                            }

            	                            }
            	                            break;

            	                    }


            	                    }


            	                    }
            	                    break;
            	                case 2 :
            	                    // InternalMcmodel.g:15634:12: ( (otherlv_39= '=' | otherlv_40= '==' ) ( ( (lv_cast_41_0= 'true' ) ) | otherlv_42= 'false' ) )
            	                    {
            	                    // InternalMcmodel.g:15634:12: ( (otherlv_39= '=' | otherlv_40= '==' ) ( ( (lv_cast_41_0= 'true' ) ) | otherlv_42= 'false' ) )
            	                    // InternalMcmodel.g:15635:13: (otherlv_39= '=' | otherlv_40= '==' ) ( ( (lv_cast_41_0= 'true' ) ) | otherlv_42= 'false' )
            	                    {
            	                    // InternalMcmodel.g:15635:13: (otherlv_39= '=' | otherlv_40= '==' )
            	                    int alt497=2;
            	                    int LA497_0 = input.LA(1);

            	                    if ( (LA497_0==18) ) {
            	                        alt497=1;
            	                    }
            	                    else if ( (LA497_0==58) ) {
            	                        alt497=2;
            	                    }
            	                    else {
            	                        if (state.backtracking>0) {state.failed=true; return current;}
            	                        NoViableAltException nvae =
            	                            new NoViableAltException("", 497, 0, input);

            	                        throw nvae;
            	                    }
            	                    switch (alt497) {
            	                        case 1 :
            	                            // InternalMcmodel.g:15636:14: otherlv_39= '='
            	                            {
            	                            otherlv_39=(Token)match(input,18,FOLLOW_7); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_39, grammarAccess.getOverridePredicate_12Access().getEqualsSignKeyword_3_3_1_1_1_1_0_0());
            	                              													
            	                            }

            	                            }
            	                            break;
            	                        case 2 :
            	                            // InternalMcmodel.g:15641:14: otherlv_40= '=='
            	                            {
            	                            otherlv_40=(Token)match(input,58,FOLLOW_7); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_40, grammarAccess.getOverridePredicate_12Access().getEqualsSignEqualsSignKeyword_3_3_1_1_1_1_0_1());
            	                              													
            	                            }

            	                            }
            	                            break;

            	                    }

            	                    // InternalMcmodel.g:15646:13: ( ( (lv_cast_41_0= 'true' ) ) | otherlv_42= 'false' )
            	                    int alt498=2;
            	                    int LA498_0 = input.LA(1);

            	                    if ( (LA498_0==20) ) {
            	                        alt498=1;
            	                    }
            	                    else if ( (LA498_0==21) ) {
            	                        alt498=2;
            	                    }
            	                    else {
            	                        if (state.backtracking>0) {state.failed=true; return current;}
            	                        NoViableAltException nvae =
            	                            new NoViableAltException("", 498, 0, input);

            	                        throw nvae;
            	                    }
            	                    switch (alt498) {
            	                        case 1 :
            	                            // InternalMcmodel.g:15647:14: ( (lv_cast_41_0= 'true' ) )
            	                            {
            	                            // InternalMcmodel.g:15647:14: ( (lv_cast_41_0= 'true' ) )
            	                            // InternalMcmodel.g:15648:15: (lv_cast_41_0= 'true' )
            	                            {
            	                            // InternalMcmodel.g:15648:15: (lv_cast_41_0= 'true' )
            	                            // InternalMcmodel.g:15649:16: lv_cast_41_0= 'true'
            	                            {
            	                            lv_cast_41_0=(Token)match(input,20,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              																newLeafNode(lv_cast_41_0, grammarAccess.getOverridePredicate_12Access().getCastTrueKeyword_3_3_1_1_1_1_1_0_0());
            	                              															
            	                            }
            	                            if ( state.backtracking==0 ) {

            	                              																if (current==null) {
            	                              																	current = createModelElement(grammarAccess.getOverridePredicate_12Rule());
            	                              																}
            	                              																setWithLastConsumed(current, "cast", true, "true");
            	                              															
            	                            }

            	                            }


            	                            }


            	                            }
            	                            break;
            	                        case 2 :
            	                            // InternalMcmodel.g:15662:14: otherlv_42= 'false'
            	                            {
            	                            otherlv_42=(Token)match(input,21,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_42, grammarAccess.getOverridePredicate_12Access().getFalseKeyword_3_3_1_1_1_1_1_1());
            	                              													
            	                            }

            	                            }
            	                            break;

            	                    }


            	                    }


            	                    }
            	                    break;

            	            }


            	            }


            	            }
            	            break;

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getOverridePredicate_12Access().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 5 :
            	    // InternalMcmodel.g:15677:4: ({...}? => ( ({...}? => (otherlv_43= '&' ( (lv_cooldownDefined_44_0= 'cooldown' ) ) (otherlv_45= '=' | otherlv_46= '==' ) ( (lv_cooldown_47_0= RULE_PERCENTAGE ) ) ) ) ) )
            	    {
            	    // InternalMcmodel.g:15677:4: ({...}? => ( ({...}? => (otherlv_43= '&' ( (lv_cooldownDefined_44_0= 'cooldown' ) ) (otherlv_45= '=' | otherlv_46= '==' ) ( (lv_cooldown_47_0= RULE_PERCENTAGE ) ) ) ) ) )
            	    // InternalMcmodel.g:15678:5: {...}? => ( ({...}? => (otherlv_43= '&' ( (lv_cooldownDefined_44_0= 'cooldown' ) ) (otherlv_45= '=' | otherlv_46= '==' ) ( (lv_cooldown_47_0= RULE_PERCENTAGE ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_12Access().getUnorderedGroup_3(), 4) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_12", "getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_12Access().getUnorderedGroup_3(), 4)");
            	    }
            	    // InternalMcmodel.g:15678:117: ( ({...}? => (otherlv_43= '&' ( (lv_cooldownDefined_44_0= 'cooldown' ) ) (otherlv_45= '=' | otherlv_46= '==' ) ( (lv_cooldown_47_0= RULE_PERCENTAGE ) ) ) ) )
            	    // InternalMcmodel.g:15679:6: ({...}? => (otherlv_43= '&' ( (lv_cooldownDefined_44_0= 'cooldown' ) ) (otherlv_45= '=' | otherlv_46= '==' ) ( (lv_cooldown_47_0= RULE_PERCENTAGE ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getOverridePredicate_12Access().getUnorderedGroup_3(), 4);
            	    // InternalMcmodel.g:15682:9: ({...}? => (otherlv_43= '&' ( (lv_cooldownDefined_44_0= 'cooldown' ) ) (otherlv_45= '=' | otherlv_46= '==' ) ( (lv_cooldown_47_0= RULE_PERCENTAGE ) ) ) )
            	    // InternalMcmodel.g:15682:10: {...}? => (otherlv_43= '&' ( (lv_cooldownDefined_44_0= 'cooldown' ) ) (otherlv_45= '=' | otherlv_46= '==' ) ( (lv_cooldown_47_0= RULE_PERCENTAGE ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_12", "true");
            	    }
            	    // InternalMcmodel.g:15682:19: (otherlv_43= '&' ( (lv_cooldownDefined_44_0= 'cooldown' ) ) (otherlv_45= '=' | otherlv_46= '==' ) ( (lv_cooldown_47_0= RULE_PERCENTAGE ) ) )
            	    // InternalMcmodel.g:15682:20: otherlv_43= '&' ( (lv_cooldownDefined_44_0= 'cooldown' ) ) (otherlv_45= '=' | otherlv_46= '==' ) ( (lv_cooldown_47_0= RULE_PERCENTAGE ) )
            	    {
            	    otherlv_43=(Token)match(input,59,FOLLOW_45); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_43, grammarAccess.getOverridePredicate_12Access().getAmpersandKeyword_3_4_0());
            	      								
            	    }
            	    // InternalMcmodel.g:15686:9: ( (lv_cooldownDefined_44_0= 'cooldown' ) )
            	    // InternalMcmodel.g:15687:10: (lv_cooldownDefined_44_0= 'cooldown' )
            	    {
            	    // InternalMcmodel.g:15687:10: (lv_cooldownDefined_44_0= 'cooldown' )
            	    // InternalMcmodel.g:15688:11: lv_cooldownDefined_44_0= 'cooldown'
            	    {
            	    lv_cooldownDefined_44_0=(Token)match(input,65,FOLLOW_35); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											newLeafNode(lv_cooldownDefined_44_0, grammarAccess.getOverridePredicate_12Access().getCooldownDefinedCooldownKeyword_3_4_1_0());
            	      										
            	    }
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElement(grammarAccess.getOverridePredicate_12Rule());
            	      											}
            	      											setWithLastConsumed(current, "cooldownDefined", true, "cooldown");
            	      										
            	    }

            	    }


            	    }

            	    // InternalMcmodel.g:15700:9: (otherlv_45= '=' | otherlv_46= '==' )
            	    int alt501=2;
            	    int LA501_0 = input.LA(1);

            	    if ( (LA501_0==18) ) {
            	        alt501=1;
            	    }
            	    else if ( (LA501_0==58) ) {
            	        alt501=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 501, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt501) {
            	        case 1 :
            	            // InternalMcmodel.g:15701:10: otherlv_45= '='
            	            {
            	            otherlv_45=(Token)match(input,18,FOLLOW_36); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(otherlv_45, grammarAccess.getOverridePredicate_12Access().getEqualsSignKeyword_3_4_2_0());
            	              									
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalMcmodel.g:15706:10: otherlv_46= '=='
            	            {
            	            otherlv_46=(Token)match(input,58,FOLLOW_36); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(otherlv_46, grammarAccess.getOverridePredicate_12Access().getEqualsSignEqualsSignKeyword_3_4_2_1());
            	              									
            	            }

            	            }
            	            break;

            	    }

            	    // InternalMcmodel.g:15711:9: ( (lv_cooldown_47_0= RULE_PERCENTAGE ) )
            	    // InternalMcmodel.g:15712:10: (lv_cooldown_47_0= RULE_PERCENTAGE )
            	    {
            	    // InternalMcmodel.g:15712:10: (lv_cooldown_47_0= RULE_PERCENTAGE )
            	    // InternalMcmodel.g:15713:11: lv_cooldown_47_0= RULE_PERCENTAGE
            	    {
            	    lv_cooldown_47_0=(Token)match(input,RULE_PERCENTAGE,FOLLOW_37); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											newLeafNode(lv_cooldown_47_0, grammarAccess.getOverridePredicate_12Access().getCooldownPERCENTAGETerminalRuleCall_3_4_3_0());
            	      										
            	    }
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElement(grammarAccess.getOverridePredicate_12Rule());
            	      											}
            	      											setWithLastConsumed(
            	      												current,
            	      												"cooldown",
            	      												lv_cooldown_47_0,
            	      												"com.raptor.mcmodel.Mcmodel.PERCENTAGE");
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getOverridePredicate_12Access().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 6 :
            	    // InternalMcmodel.g:15735:4: ({...}? => ( ({...}? => (otherlv_48= '&' ( (lv_damageDefined_49_0= 'damage' ) ) (otherlv_50= '=' | otherlv_51= '==' ) ( (lv_damage_52_0= RULE_PERCENTAGE ) ) ) ) ) )
            	    {
            	    // InternalMcmodel.g:15735:4: ({...}? => ( ({...}? => (otherlv_48= '&' ( (lv_damageDefined_49_0= 'damage' ) ) (otherlv_50= '=' | otherlv_51= '==' ) ( (lv_damage_52_0= RULE_PERCENTAGE ) ) ) ) ) )
            	    // InternalMcmodel.g:15736:5: {...}? => ( ({...}? => (otherlv_48= '&' ( (lv_damageDefined_49_0= 'damage' ) ) (otherlv_50= '=' | otherlv_51= '==' ) ( (lv_damage_52_0= RULE_PERCENTAGE ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_12Access().getUnorderedGroup_3(), 5) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_12", "getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_12Access().getUnorderedGroup_3(), 5)");
            	    }
            	    // InternalMcmodel.g:15736:117: ( ({...}? => (otherlv_48= '&' ( (lv_damageDefined_49_0= 'damage' ) ) (otherlv_50= '=' | otherlv_51= '==' ) ( (lv_damage_52_0= RULE_PERCENTAGE ) ) ) ) )
            	    // InternalMcmodel.g:15737:6: ({...}? => (otherlv_48= '&' ( (lv_damageDefined_49_0= 'damage' ) ) (otherlv_50= '=' | otherlv_51= '==' ) ( (lv_damage_52_0= RULE_PERCENTAGE ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getOverridePredicate_12Access().getUnorderedGroup_3(), 5);
            	    // InternalMcmodel.g:15740:9: ({...}? => (otherlv_48= '&' ( (lv_damageDefined_49_0= 'damage' ) ) (otherlv_50= '=' | otherlv_51= '==' ) ( (lv_damage_52_0= RULE_PERCENTAGE ) ) ) )
            	    // InternalMcmodel.g:15740:10: {...}? => (otherlv_48= '&' ( (lv_damageDefined_49_0= 'damage' ) ) (otherlv_50= '=' | otherlv_51= '==' ) ( (lv_damage_52_0= RULE_PERCENTAGE ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_12", "true");
            	    }
            	    // InternalMcmodel.g:15740:19: (otherlv_48= '&' ( (lv_damageDefined_49_0= 'damage' ) ) (otherlv_50= '=' | otherlv_51= '==' ) ( (lv_damage_52_0= RULE_PERCENTAGE ) ) )
            	    // InternalMcmodel.g:15740:20: otherlv_48= '&' ( (lv_damageDefined_49_0= 'damage' ) ) (otherlv_50= '=' | otherlv_51= '==' ) ( (lv_damage_52_0= RULE_PERCENTAGE ) )
            	    {
            	    otherlv_48=(Token)match(input,59,FOLLOW_46); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_48, grammarAccess.getOverridePredicate_12Access().getAmpersandKeyword_3_5_0());
            	      								
            	    }
            	    // InternalMcmodel.g:15744:9: ( (lv_damageDefined_49_0= 'damage' ) )
            	    // InternalMcmodel.g:15745:10: (lv_damageDefined_49_0= 'damage' )
            	    {
            	    // InternalMcmodel.g:15745:10: (lv_damageDefined_49_0= 'damage' )
            	    // InternalMcmodel.g:15746:11: lv_damageDefined_49_0= 'damage'
            	    {
            	    lv_damageDefined_49_0=(Token)match(input,66,FOLLOW_35); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											newLeafNode(lv_damageDefined_49_0, grammarAccess.getOverridePredicate_12Access().getDamageDefinedDamageKeyword_3_5_1_0());
            	      										
            	    }
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElement(grammarAccess.getOverridePredicate_12Rule());
            	      											}
            	      											setWithLastConsumed(current, "damageDefined", true, "damage");
            	      										
            	    }

            	    }


            	    }

            	    // InternalMcmodel.g:15758:9: (otherlv_50= '=' | otherlv_51= '==' )
            	    int alt502=2;
            	    int LA502_0 = input.LA(1);

            	    if ( (LA502_0==18) ) {
            	        alt502=1;
            	    }
            	    else if ( (LA502_0==58) ) {
            	        alt502=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 502, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt502) {
            	        case 1 :
            	            // InternalMcmodel.g:15759:10: otherlv_50= '='
            	            {
            	            otherlv_50=(Token)match(input,18,FOLLOW_36); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(otherlv_50, grammarAccess.getOverridePredicate_12Access().getEqualsSignKeyword_3_5_2_0());
            	              									
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalMcmodel.g:15764:10: otherlv_51= '=='
            	            {
            	            otherlv_51=(Token)match(input,58,FOLLOW_36); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(otherlv_51, grammarAccess.getOverridePredicate_12Access().getEqualsSignEqualsSignKeyword_3_5_2_1());
            	              									
            	            }

            	            }
            	            break;

            	    }

            	    // InternalMcmodel.g:15769:9: ( (lv_damage_52_0= RULE_PERCENTAGE ) )
            	    // InternalMcmodel.g:15770:10: (lv_damage_52_0= RULE_PERCENTAGE )
            	    {
            	    // InternalMcmodel.g:15770:10: (lv_damage_52_0= RULE_PERCENTAGE )
            	    // InternalMcmodel.g:15771:11: lv_damage_52_0= RULE_PERCENTAGE
            	    {
            	    lv_damage_52_0=(Token)match(input,RULE_PERCENTAGE,FOLLOW_37); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											newLeafNode(lv_damage_52_0, grammarAccess.getOverridePredicate_12Access().getDamagePERCENTAGETerminalRuleCall_3_5_3_0());
            	      										
            	    }
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElement(grammarAccess.getOverridePredicate_12Rule());
            	      											}
            	      											setWithLastConsumed(
            	      												current,
            	      												"damage",
            	      												lv_damage_52_0,
            	      												"com.raptor.mcmodel.Mcmodel.PERCENTAGE");
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getOverridePredicate_12Access().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 7 :
            	    // InternalMcmodel.g:15793:4: ({...}? => ( ({...}? => (otherlv_53= '&' ( ( ( (lv_damagedDefined_54_0= '!' ) ) otherlv_55= 'damaged' ) | ( ( (lv_damagedDefined_56_0= 'damaged' ) ) ( (otherlv_57= '!=' ( ( (lv_damaged_58_0= 'false' ) ) | otherlv_59= 'true' ) ) | ( (otherlv_60= '=' | otherlv_61= '==' ) ( ( (lv_damaged_62_0= 'true' ) ) | otherlv_63= 'false' ) ) ) ) ) ) ) ) )
            	    {
            	    // InternalMcmodel.g:15793:4: ({...}? => ( ({...}? => (otherlv_53= '&' ( ( ( (lv_damagedDefined_54_0= '!' ) ) otherlv_55= 'damaged' ) | ( ( (lv_damagedDefined_56_0= 'damaged' ) ) ( (otherlv_57= '!=' ( ( (lv_damaged_58_0= 'false' ) ) | otherlv_59= 'true' ) ) | ( (otherlv_60= '=' | otherlv_61= '==' ) ( ( (lv_damaged_62_0= 'true' ) ) | otherlv_63= 'false' ) ) ) ) ) ) ) ) )
            	    // InternalMcmodel.g:15794:5: {...}? => ( ({...}? => (otherlv_53= '&' ( ( ( (lv_damagedDefined_54_0= '!' ) ) otherlv_55= 'damaged' ) | ( ( (lv_damagedDefined_56_0= 'damaged' ) ) ( (otherlv_57= '!=' ( ( (lv_damaged_58_0= 'false' ) ) | otherlv_59= 'true' ) ) | ( (otherlv_60= '=' | otherlv_61= '==' ) ( ( (lv_damaged_62_0= 'true' ) ) | otherlv_63= 'false' ) ) ) ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_12Access().getUnorderedGroup_3(), 6) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_12", "getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_12Access().getUnorderedGroup_3(), 6)");
            	    }
            	    // InternalMcmodel.g:15794:117: ( ({...}? => (otherlv_53= '&' ( ( ( (lv_damagedDefined_54_0= '!' ) ) otherlv_55= 'damaged' ) | ( ( (lv_damagedDefined_56_0= 'damaged' ) ) ( (otherlv_57= '!=' ( ( (lv_damaged_58_0= 'false' ) ) | otherlv_59= 'true' ) ) | ( (otherlv_60= '=' | otherlv_61= '==' ) ( ( (lv_damaged_62_0= 'true' ) ) | otherlv_63= 'false' ) ) ) ) ) ) ) )
            	    // InternalMcmodel.g:15795:6: ({...}? => (otherlv_53= '&' ( ( ( (lv_damagedDefined_54_0= '!' ) ) otherlv_55= 'damaged' ) | ( ( (lv_damagedDefined_56_0= 'damaged' ) ) ( (otherlv_57= '!=' ( ( (lv_damaged_58_0= 'false' ) ) | otherlv_59= 'true' ) ) | ( (otherlv_60= '=' | otherlv_61= '==' ) ( ( (lv_damaged_62_0= 'true' ) ) | otherlv_63= 'false' ) ) ) ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getOverridePredicate_12Access().getUnorderedGroup_3(), 6);
            	    // InternalMcmodel.g:15798:9: ({...}? => (otherlv_53= '&' ( ( ( (lv_damagedDefined_54_0= '!' ) ) otherlv_55= 'damaged' ) | ( ( (lv_damagedDefined_56_0= 'damaged' ) ) ( (otherlv_57= '!=' ( ( (lv_damaged_58_0= 'false' ) ) | otherlv_59= 'true' ) ) | ( (otherlv_60= '=' | otherlv_61= '==' ) ( ( (lv_damaged_62_0= 'true' ) ) | otherlv_63= 'false' ) ) ) ) ) ) )
            	    // InternalMcmodel.g:15798:10: {...}? => (otherlv_53= '&' ( ( ( (lv_damagedDefined_54_0= '!' ) ) otherlv_55= 'damaged' ) | ( ( (lv_damagedDefined_56_0= 'damaged' ) ) ( (otherlv_57= '!=' ( ( (lv_damaged_58_0= 'false' ) ) | otherlv_59= 'true' ) ) | ( (otherlv_60= '=' | otherlv_61= '==' ) ( ( (lv_damaged_62_0= 'true' ) ) | otherlv_63= 'false' ) ) ) ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_12", "true");
            	    }
            	    // InternalMcmodel.g:15798:19: (otherlv_53= '&' ( ( ( (lv_damagedDefined_54_0= '!' ) ) otherlv_55= 'damaged' ) | ( ( (lv_damagedDefined_56_0= 'damaged' ) ) ( (otherlv_57= '!=' ( ( (lv_damaged_58_0= 'false' ) ) | otherlv_59= 'true' ) ) | ( (otherlv_60= '=' | otherlv_61= '==' ) ( ( (lv_damaged_62_0= 'true' ) ) | otherlv_63= 'false' ) ) ) ) ) )
            	    // InternalMcmodel.g:15798:20: otherlv_53= '&' ( ( ( (lv_damagedDefined_54_0= '!' ) ) otherlv_55= 'damaged' ) | ( ( (lv_damagedDefined_56_0= 'damaged' ) ) ( (otherlv_57= '!=' ( ( (lv_damaged_58_0= 'false' ) ) | otherlv_59= 'true' ) ) | ( (otherlv_60= '=' | otherlv_61= '==' ) ( ( (lv_damaged_62_0= 'true' ) ) | otherlv_63= 'false' ) ) ) ) )
            	    {
            	    otherlv_53=(Token)match(input,59,FOLLOW_47); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_53, grammarAccess.getOverridePredicate_12Access().getAmpersandKeyword_3_6_0());
            	      								
            	    }
            	    // InternalMcmodel.g:15802:9: ( ( ( (lv_damagedDefined_54_0= '!' ) ) otherlv_55= 'damaged' ) | ( ( (lv_damagedDefined_56_0= 'damaged' ) ) ( (otherlv_57= '!=' ( ( (lv_damaged_58_0= 'false' ) ) | otherlv_59= 'true' ) ) | ( (otherlv_60= '=' | otherlv_61= '==' ) ( ( (lv_damaged_62_0= 'true' ) ) | otherlv_63= 'false' ) ) ) ) )
            	    int alt507=2;
            	    int LA507_0 = input.LA(1);

            	    if ( (LA507_0==60) ) {
            	        alt507=1;
            	    }
            	    else if ( (LA507_0==67) ) {
            	        alt507=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 507, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt507) {
            	        case 1 :
            	            // InternalMcmodel.g:15803:10: ( ( (lv_damagedDefined_54_0= '!' ) ) otherlv_55= 'damaged' )
            	            {
            	            // InternalMcmodel.g:15803:10: ( ( (lv_damagedDefined_54_0= '!' ) ) otherlv_55= 'damaged' )
            	            // InternalMcmodel.g:15804:11: ( (lv_damagedDefined_54_0= '!' ) ) otherlv_55= 'damaged'
            	            {
            	            // InternalMcmodel.g:15804:11: ( (lv_damagedDefined_54_0= '!' ) )
            	            // InternalMcmodel.g:15805:12: (lv_damagedDefined_54_0= '!' )
            	            {
            	            // InternalMcmodel.g:15805:12: (lv_damagedDefined_54_0= '!' )
            	            // InternalMcmodel.g:15806:13: lv_damagedDefined_54_0= '!'
            	            {
            	            lv_damagedDefined_54_0=(Token)match(input,60,FOLLOW_48); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              													newLeafNode(lv_damagedDefined_54_0, grammarAccess.getOverridePredicate_12Access().getDamagedDefinedExclamationMarkKeyword_3_6_1_0_0_0());
            	              												
            	            }
            	            if ( state.backtracking==0 ) {

            	              													if (current==null) {
            	              														current = createModelElement(grammarAccess.getOverridePredicate_12Rule());
            	              													}
            	              													setWithLastConsumed(current, "damagedDefined", true, "!");
            	              												
            	            }

            	            }


            	            }

            	            otherlv_55=(Token)match(input,67,FOLLOW_37); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              											newLeafNode(otherlv_55, grammarAccess.getOverridePredicate_12Access().getDamagedKeyword_3_6_1_0_1());
            	              										
            	            }

            	            }


            	            }
            	            break;
            	        case 2 :
            	            // InternalMcmodel.g:15824:10: ( ( (lv_damagedDefined_56_0= 'damaged' ) ) ( (otherlv_57= '!=' ( ( (lv_damaged_58_0= 'false' ) ) | otherlv_59= 'true' ) ) | ( (otherlv_60= '=' | otherlv_61= '==' ) ( ( (lv_damaged_62_0= 'true' ) ) | otherlv_63= 'false' ) ) ) )
            	            {
            	            // InternalMcmodel.g:15824:10: ( ( (lv_damagedDefined_56_0= 'damaged' ) ) ( (otherlv_57= '!=' ( ( (lv_damaged_58_0= 'false' ) ) | otherlv_59= 'true' ) ) | ( (otherlv_60= '=' | otherlv_61= '==' ) ( ( (lv_damaged_62_0= 'true' ) ) | otherlv_63= 'false' ) ) ) )
            	            // InternalMcmodel.g:15825:11: ( (lv_damagedDefined_56_0= 'damaged' ) ) ( (otherlv_57= '!=' ( ( (lv_damaged_58_0= 'false' ) ) | otherlv_59= 'true' ) ) | ( (otherlv_60= '=' | otherlv_61= '==' ) ( ( (lv_damaged_62_0= 'true' ) ) | otherlv_63= 'false' ) ) )
            	            {
            	            // InternalMcmodel.g:15825:11: ( (lv_damagedDefined_56_0= 'damaged' ) )
            	            // InternalMcmodel.g:15826:12: (lv_damagedDefined_56_0= 'damaged' )
            	            {
            	            // InternalMcmodel.g:15826:12: (lv_damagedDefined_56_0= 'damaged' )
            	            // InternalMcmodel.g:15827:13: lv_damagedDefined_56_0= 'damaged'
            	            {
            	            lv_damagedDefined_56_0=(Token)match(input,67,FOLLOW_40); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              													newLeafNode(lv_damagedDefined_56_0, grammarAccess.getOverridePredicate_12Access().getDamagedDefinedDamagedKeyword_3_6_1_1_0_0());
            	              												
            	            }
            	            if ( state.backtracking==0 ) {

            	              													if (current==null) {
            	              														current = createModelElement(grammarAccess.getOverridePredicate_12Rule());
            	              													}
            	              													setWithLastConsumed(current, "damagedDefined", true, "damaged");
            	              												
            	            }

            	            }


            	            }

            	            // InternalMcmodel.g:15839:11: ( (otherlv_57= '!=' ( ( (lv_damaged_58_0= 'false' ) ) | otherlv_59= 'true' ) ) | ( (otherlv_60= '=' | otherlv_61= '==' ) ( ( (lv_damaged_62_0= 'true' ) ) | otherlv_63= 'false' ) ) )
            	            int alt506=2;
            	            int LA506_0 = input.LA(1);

            	            if ( (LA506_0==62) ) {
            	                alt506=1;
            	            }
            	            else if ( (LA506_0==18||LA506_0==58) ) {
            	                alt506=2;
            	            }
            	            else {
            	                if (state.backtracking>0) {state.failed=true; return current;}
            	                NoViableAltException nvae =
            	                    new NoViableAltException("", 506, 0, input);

            	                throw nvae;
            	            }
            	            switch (alt506) {
            	                case 1 :
            	                    // InternalMcmodel.g:15840:12: (otherlv_57= '!=' ( ( (lv_damaged_58_0= 'false' ) ) | otherlv_59= 'true' ) )
            	                    {
            	                    // InternalMcmodel.g:15840:12: (otherlv_57= '!=' ( ( (lv_damaged_58_0= 'false' ) ) | otherlv_59= 'true' ) )
            	                    // InternalMcmodel.g:15841:13: otherlv_57= '!=' ( ( (lv_damaged_58_0= 'false' ) ) | otherlv_59= 'true' )
            	                    {
            	                    otherlv_57=(Token)match(input,62,FOLLOW_7); if (state.failed) return current;
            	                    if ( state.backtracking==0 ) {

            	                      													newLeafNode(otherlv_57, grammarAccess.getOverridePredicate_12Access().getExclamationMarkEqualsSignKeyword_3_6_1_1_1_0_0());
            	                      												
            	                    }
            	                    // InternalMcmodel.g:15845:13: ( ( (lv_damaged_58_0= 'false' ) ) | otherlv_59= 'true' )
            	                    int alt503=2;
            	                    int LA503_0 = input.LA(1);

            	                    if ( (LA503_0==21) ) {
            	                        alt503=1;
            	                    }
            	                    else if ( (LA503_0==20) ) {
            	                        alt503=2;
            	                    }
            	                    else {
            	                        if (state.backtracking>0) {state.failed=true; return current;}
            	                        NoViableAltException nvae =
            	                            new NoViableAltException("", 503, 0, input);

            	                        throw nvae;
            	                    }
            	                    switch (alt503) {
            	                        case 1 :
            	                            // InternalMcmodel.g:15846:14: ( (lv_damaged_58_0= 'false' ) )
            	                            {
            	                            // InternalMcmodel.g:15846:14: ( (lv_damaged_58_0= 'false' ) )
            	                            // InternalMcmodel.g:15847:15: (lv_damaged_58_0= 'false' )
            	                            {
            	                            // InternalMcmodel.g:15847:15: (lv_damaged_58_0= 'false' )
            	                            // InternalMcmodel.g:15848:16: lv_damaged_58_0= 'false'
            	                            {
            	                            lv_damaged_58_0=(Token)match(input,21,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              																newLeafNode(lv_damaged_58_0, grammarAccess.getOverridePredicate_12Access().getDamagedFalseKeyword_3_6_1_1_1_0_1_0_0());
            	                              															
            	                            }
            	                            if ( state.backtracking==0 ) {

            	                              																if (current==null) {
            	                              																	current = createModelElement(grammarAccess.getOverridePredicate_12Rule());
            	                              																}
            	                              																setWithLastConsumed(current, "damaged", true, "false");
            	                              															
            	                            }

            	                            }


            	                            }


            	                            }
            	                            break;
            	                        case 2 :
            	                            // InternalMcmodel.g:15861:14: otherlv_59= 'true'
            	                            {
            	                            otherlv_59=(Token)match(input,20,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_59, grammarAccess.getOverridePredicate_12Access().getTrueKeyword_3_6_1_1_1_0_1_1());
            	                              													
            	                            }

            	                            }
            	                            break;

            	                    }


            	                    }


            	                    }
            	                    break;
            	                case 2 :
            	                    // InternalMcmodel.g:15868:12: ( (otherlv_60= '=' | otherlv_61= '==' ) ( ( (lv_damaged_62_0= 'true' ) ) | otherlv_63= 'false' ) )
            	                    {
            	                    // InternalMcmodel.g:15868:12: ( (otherlv_60= '=' | otherlv_61= '==' ) ( ( (lv_damaged_62_0= 'true' ) ) | otherlv_63= 'false' ) )
            	                    // InternalMcmodel.g:15869:13: (otherlv_60= '=' | otherlv_61= '==' ) ( ( (lv_damaged_62_0= 'true' ) ) | otherlv_63= 'false' )
            	                    {
            	                    // InternalMcmodel.g:15869:13: (otherlv_60= '=' | otherlv_61= '==' )
            	                    int alt504=2;
            	                    int LA504_0 = input.LA(1);

            	                    if ( (LA504_0==18) ) {
            	                        alt504=1;
            	                    }
            	                    else if ( (LA504_0==58) ) {
            	                        alt504=2;
            	                    }
            	                    else {
            	                        if (state.backtracking>0) {state.failed=true; return current;}
            	                        NoViableAltException nvae =
            	                            new NoViableAltException("", 504, 0, input);

            	                        throw nvae;
            	                    }
            	                    switch (alt504) {
            	                        case 1 :
            	                            // InternalMcmodel.g:15870:14: otherlv_60= '='
            	                            {
            	                            otherlv_60=(Token)match(input,18,FOLLOW_7); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_60, grammarAccess.getOverridePredicate_12Access().getEqualsSignKeyword_3_6_1_1_1_1_0_0());
            	                              													
            	                            }

            	                            }
            	                            break;
            	                        case 2 :
            	                            // InternalMcmodel.g:15875:14: otherlv_61= '=='
            	                            {
            	                            otherlv_61=(Token)match(input,58,FOLLOW_7); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_61, grammarAccess.getOverridePredicate_12Access().getEqualsSignEqualsSignKeyword_3_6_1_1_1_1_0_1());
            	                              													
            	                            }

            	                            }
            	                            break;

            	                    }

            	                    // InternalMcmodel.g:15880:13: ( ( (lv_damaged_62_0= 'true' ) ) | otherlv_63= 'false' )
            	                    int alt505=2;
            	                    int LA505_0 = input.LA(1);

            	                    if ( (LA505_0==20) ) {
            	                        alt505=1;
            	                    }
            	                    else if ( (LA505_0==21) ) {
            	                        alt505=2;
            	                    }
            	                    else {
            	                        if (state.backtracking>0) {state.failed=true; return current;}
            	                        NoViableAltException nvae =
            	                            new NoViableAltException("", 505, 0, input);

            	                        throw nvae;
            	                    }
            	                    switch (alt505) {
            	                        case 1 :
            	                            // InternalMcmodel.g:15881:14: ( (lv_damaged_62_0= 'true' ) )
            	                            {
            	                            // InternalMcmodel.g:15881:14: ( (lv_damaged_62_0= 'true' ) )
            	                            // InternalMcmodel.g:15882:15: (lv_damaged_62_0= 'true' )
            	                            {
            	                            // InternalMcmodel.g:15882:15: (lv_damaged_62_0= 'true' )
            	                            // InternalMcmodel.g:15883:16: lv_damaged_62_0= 'true'
            	                            {
            	                            lv_damaged_62_0=(Token)match(input,20,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              																newLeafNode(lv_damaged_62_0, grammarAccess.getOverridePredicate_12Access().getDamagedTrueKeyword_3_6_1_1_1_1_1_0_0());
            	                              															
            	                            }
            	                            if ( state.backtracking==0 ) {

            	                              																if (current==null) {
            	                              																	current = createModelElement(grammarAccess.getOverridePredicate_12Rule());
            	                              																}
            	                              																setWithLastConsumed(current, "damaged", true, "true");
            	                              															
            	                            }

            	                            }


            	                            }


            	                            }
            	                            break;
            	                        case 2 :
            	                            // InternalMcmodel.g:15896:14: otherlv_63= 'false'
            	                            {
            	                            otherlv_63=(Token)match(input,21,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_63, grammarAccess.getOverridePredicate_12Access().getFalseKeyword_3_6_1_1_1_1_1_1());
            	                              													
            	                            }

            	                            }
            	                            break;

            	                    }


            	                    }


            	                    }
            	                    break;

            	            }


            	            }


            	            }
            	            break;

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getOverridePredicate_12Access().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 8 :
            	    // InternalMcmodel.g:15911:4: ({...}? => ( ({...}? => (otherlv_64= '&' ( ( ( (lv_lefthandedDefined_65_0= '!' ) ) otherlv_66= 'lefthanded' ) | ( ( (lv_lefthandedDefined_67_0= 'lefthanded' ) ) ( (otherlv_68= '!=' ( ( (lv_lefthanded_69_0= 'false' ) ) | otherlv_70= 'true' ) ) | ( (otherlv_71= '=' | otherlv_72= '==' ) ( ( (lv_lefthanded_73_0= 'true' ) ) | otherlv_74= 'false' ) ) ) ) ) ) ) ) )
            	    {
            	    // InternalMcmodel.g:15911:4: ({...}? => ( ({...}? => (otherlv_64= '&' ( ( ( (lv_lefthandedDefined_65_0= '!' ) ) otherlv_66= 'lefthanded' ) | ( ( (lv_lefthandedDefined_67_0= 'lefthanded' ) ) ( (otherlv_68= '!=' ( ( (lv_lefthanded_69_0= 'false' ) ) | otherlv_70= 'true' ) ) | ( (otherlv_71= '=' | otherlv_72= '==' ) ( ( (lv_lefthanded_73_0= 'true' ) ) | otherlv_74= 'false' ) ) ) ) ) ) ) ) )
            	    // InternalMcmodel.g:15912:5: {...}? => ( ({...}? => (otherlv_64= '&' ( ( ( (lv_lefthandedDefined_65_0= '!' ) ) otherlv_66= 'lefthanded' ) | ( ( (lv_lefthandedDefined_67_0= 'lefthanded' ) ) ( (otherlv_68= '!=' ( ( (lv_lefthanded_69_0= 'false' ) ) | otherlv_70= 'true' ) ) | ( (otherlv_71= '=' | otherlv_72= '==' ) ( ( (lv_lefthanded_73_0= 'true' ) ) | otherlv_74= 'false' ) ) ) ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_12Access().getUnorderedGroup_3(), 7) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_12", "getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_12Access().getUnorderedGroup_3(), 7)");
            	    }
            	    // InternalMcmodel.g:15912:117: ( ({...}? => (otherlv_64= '&' ( ( ( (lv_lefthandedDefined_65_0= '!' ) ) otherlv_66= 'lefthanded' ) | ( ( (lv_lefthandedDefined_67_0= 'lefthanded' ) ) ( (otherlv_68= '!=' ( ( (lv_lefthanded_69_0= 'false' ) ) | otherlv_70= 'true' ) ) | ( (otherlv_71= '=' | otherlv_72= '==' ) ( ( (lv_lefthanded_73_0= 'true' ) ) | otherlv_74= 'false' ) ) ) ) ) ) ) )
            	    // InternalMcmodel.g:15913:6: ({...}? => (otherlv_64= '&' ( ( ( (lv_lefthandedDefined_65_0= '!' ) ) otherlv_66= 'lefthanded' ) | ( ( (lv_lefthandedDefined_67_0= 'lefthanded' ) ) ( (otherlv_68= '!=' ( ( (lv_lefthanded_69_0= 'false' ) ) | otherlv_70= 'true' ) ) | ( (otherlv_71= '=' | otherlv_72= '==' ) ( ( (lv_lefthanded_73_0= 'true' ) ) | otherlv_74= 'false' ) ) ) ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getOverridePredicate_12Access().getUnorderedGroup_3(), 7);
            	    // InternalMcmodel.g:15916:9: ({...}? => (otherlv_64= '&' ( ( ( (lv_lefthandedDefined_65_0= '!' ) ) otherlv_66= 'lefthanded' ) | ( ( (lv_lefthandedDefined_67_0= 'lefthanded' ) ) ( (otherlv_68= '!=' ( ( (lv_lefthanded_69_0= 'false' ) ) | otherlv_70= 'true' ) ) | ( (otherlv_71= '=' | otherlv_72= '==' ) ( ( (lv_lefthanded_73_0= 'true' ) ) | otherlv_74= 'false' ) ) ) ) ) ) )
            	    // InternalMcmodel.g:15916:10: {...}? => (otherlv_64= '&' ( ( ( (lv_lefthandedDefined_65_0= '!' ) ) otherlv_66= 'lefthanded' ) | ( ( (lv_lefthandedDefined_67_0= 'lefthanded' ) ) ( (otherlv_68= '!=' ( ( (lv_lefthanded_69_0= 'false' ) ) | otherlv_70= 'true' ) ) | ( (otherlv_71= '=' | otherlv_72= '==' ) ( ( (lv_lefthanded_73_0= 'true' ) ) | otherlv_74= 'false' ) ) ) ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_12", "true");
            	    }
            	    // InternalMcmodel.g:15916:19: (otherlv_64= '&' ( ( ( (lv_lefthandedDefined_65_0= '!' ) ) otherlv_66= 'lefthanded' ) | ( ( (lv_lefthandedDefined_67_0= 'lefthanded' ) ) ( (otherlv_68= '!=' ( ( (lv_lefthanded_69_0= 'false' ) ) | otherlv_70= 'true' ) ) | ( (otherlv_71= '=' | otherlv_72= '==' ) ( ( (lv_lefthanded_73_0= 'true' ) ) | otherlv_74= 'false' ) ) ) ) ) )
            	    // InternalMcmodel.g:15916:20: otherlv_64= '&' ( ( ( (lv_lefthandedDefined_65_0= '!' ) ) otherlv_66= 'lefthanded' ) | ( ( (lv_lefthandedDefined_67_0= 'lefthanded' ) ) ( (otherlv_68= '!=' ( ( (lv_lefthanded_69_0= 'false' ) ) | otherlv_70= 'true' ) ) | ( (otherlv_71= '=' | otherlv_72= '==' ) ( ( (lv_lefthanded_73_0= 'true' ) ) | otherlv_74= 'false' ) ) ) ) )
            	    {
            	    otherlv_64=(Token)match(input,59,FOLLOW_49); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_64, grammarAccess.getOverridePredicate_12Access().getAmpersandKeyword_3_7_0());
            	      								
            	    }
            	    // InternalMcmodel.g:15920:9: ( ( ( (lv_lefthandedDefined_65_0= '!' ) ) otherlv_66= 'lefthanded' ) | ( ( (lv_lefthandedDefined_67_0= 'lefthanded' ) ) ( (otherlv_68= '!=' ( ( (lv_lefthanded_69_0= 'false' ) ) | otherlv_70= 'true' ) ) | ( (otherlv_71= '=' | otherlv_72= '==' ) ( ( (lv_lefthanded_73_0= 'true' ) ) | otherlv_74= 'false' ) ) ) ) )
            	    int alt512=2;
            	    int LA512_0 = input.LA(1);

            	    if ( (LA512_0==60) ) {
            	        alt512=1;
            	    }
            	    else if ( (LA512_0==68) ) {
            	        alt512=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 512, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt512) {
            	        case 1 :
            	            // InternalMcmodel.g:15921:10: ( ( (lv_lefthandedDefined_65_0= '!' ) ) otherlv_66= 'lefthanded' )
            	            {
            	            // InternalMcmodel.g:15921:10: ( ( (lv_lefthandedDefined_65_0= '!' ) ) otherlv_66= 'lefthanded' )
            	            // InternalMcmodel.g:15922:11: ( (lv_lefthandedDefined_65_0= '!' ) ) otherlv_66= 'lefthanded'
            	            {
            	            // InternalMcmodel.g:15922:11: ( (lv_lefthandedDefined_65_0= '!' ) )
            	            // InternalMcmodel.g:15923:12: (lv_lefthandedDefined_65_0= '!' )
            	            {
            	            // InternalMcmodel.g:15923:12: (lv_lefthandedDefined_65_0= '!' )
            	            // InternalMcmodel.g:15924:13: lv_lefthandedDefined_65_0= '!'
            	            {
            	            lv_lefthandedDefined_65_0=(Token)match(input,60,FOLLOW_50); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              													newLeafNode(lv_lefthandedDefined_65_0, grammarAccess.getOverridePredicate_12Access().getLefthandedDefinedExclamationMarkKeyword_3_7_1_0_0_0());
            	              												
            	            }
            	            if ( state.backtracking==0 ) {

            	              													if (current==null) {
            	              														current = createModelElement(grammarAccess.getOverridePredicate_12Rule());
            	              													}
            	              													setWithLastConsumed(current, "lefthandedDefined", true, "!");
            	              												
            	            }

            	            }


            	            }

            	            otherlv_66=(Token)match(input,68,FOLLOW_37); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              											newLeafNode(otherlv_66, grammarAccess.getOverridePredicate_12Access().getLefthandedKeyword_3_7_1_0_1());
            	              										
            	            }

            	            }


            	            }
            	            break;
            	        case 2 :
            	            // InternalMcmodel.g:15942:10: ( ( (lv_lefthandedDefined_67_0= 'lefthanded' ) ) ( (otherlv_68= '!=' ( ( (lv_lefthanded_69_0= 'false' ) ) | otherlv_70= 'true' ) ) | ( (otherlv_71= '=' | otherlv_72= '==' ) ( ( (lv_lefthanded_73_0= 'true' ) ) | otherlv_74= 'false' ) ) ) )
            	            {
            	            // InternalMcmodel.g:15942:10: ( ( (lv_lefthandedDefined_67_0= 'lefthanded' ) ) ( (otherlv_68= '!=' ( ( (lv_lefthanded_69_0= 'false' ) ) | otherlv_70= 'true' ) ) | ( (otherlv_71= '=' | otherlv_72= '==' ) ( ( (lv_lefthanded_73_0= 'true' ) ) | otherlv_74= 'false' ) ) ) )
            	            // InternalMcmodel.g:15943:11: ( (lv_lefthandedDefined_67_0= 'lefthanded' ) ) ( (otherlv_68= '!=' ( ( (lv_lefthanded_69_0= 'false' ) ) | otherlv_70= 'true' ) ) | ( (otherlv_71= '=' | otherlv_72= '==' ) ( ( (lv_lefthanded_73_0= 'true' ) ) | otherlv_74= 'false' ) ) )
            	            {
            	            // InternalMcmodel.g:15943:11: ( (lv_lefthandedDefined_67_0= 'lefthanded' ) )
            	            // InternalMcmodel.g:15944:12: (lv_lefthandedDefined_67_0= 'lefthanded' )
            	            {
            	            // InternalMcmodel.g:15944:12: (lv_lefthandedDefined_67_0= 'lefthanded' )
            	            // InternalMcmodel.g:15945:13: lv_lefthandedDefined_67_0= 'lefthanded'
            	            {
            	            lv_lefthandedDefined_67_0=(Token)match(input,68,FOLLOW_40); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              													newLeafNode(lv_lefthandedDefined_67_0, grammarAccess.getOverridePredicate_12Access().getLefthandedDefinedLefthandedKeyword_3_7_1_1_0_0());
            	              												
            	            }
            	            if ( state.backtracking==0 ) {

            	              													if (current==null) {
            	              														current = createModelElement(grammarAccess.getOverridePredicate_12Rule());
            	              													}
            	              													setWithLastConsumed(current, "lefthandedDefined", true, "lefthanded");
            	              												
            	            }

            	            }


            	            }

            	            // InternalMcmodel.g:15957:11: ( (otherlv_68= '!=' ( ( (lv_lefthanded_69_0= 'false' ) ) | otherlv_70= 'true' ) ) | ( (otherlv_71= '=' | otherlv_72= '==' ) ( ( (lv_lefthanded_73_0= 'true' ) ) | otherlv_74= 'false' ) ) )
            	            int alt511=2;
            	            int LA511_0 = input.LA(1);

            	            if ( (LA511_0==62) ) {
            	                alt511=1;
            	            }
            	            else if ( (LA511_0==18||LA511_0==58) ) {
            	                alt511=2;
            	            }
            	            else {
            	                if (state.backtracking>0) {state.failed=true; return current;}
            	                NoViableAltException nvae =
            	                    new NoViableAltException("", 511, 0, input);

            	                throw nvae;
            	            }
            	            switch (alt511) {
            	                case 1 :
            	                    // InternalMcmodel.g:15958:12: (otherlv_68= '!=' ( ( (lv_lefthanded_69_0= 'false' ) ) | otherlv_70= 'true' ) )
            	                    {
            	                    // InternalMcmodel.g:15958:12: (otherlv_68= '!=' ( ( (lv_lefthanded_69_0= 'false' ) ) | otherlv_70= 'true' ) )
            	                    // InternalMcmodel.g:15959:13: otherlv_68= '!=' ( ( (lv_lefthanded_69_0= 'false' ) ) | otherlv_70= 'true' )
            	                    {
            	                    otherlv_68=(Token)match(input,62,FOLLOW_7); if (state.failed) return current;
            	                    if ( state.backtracking==0 ) {

            	                      													newLeafNode(otherlv_68, grammarAccess.getOverridePredicate_12Access().getExclamationMarkEqualsSignKeyword_3_7_1_1_1_0_0());
            	                      												
            	                    }
            	                    // InternalMcmodel.g:15963:13: ( ( (lv_lefthanded_69_0= 'false' ) ) | otherlv_70= 'true' )
            	                    int alt508=2;
            	                    int LA508_0 = input.LA(1);

            	                    if ( (LA508_0==21) ) {
            	                        alt508=1;
            	                    }
            	                    else if ( (LA508_0==20) ) {
            	                        alt508=2;
            	                    }
            	                    else {
            	                        if (state.backtracking>0) {state.failed=true; return current;}
            	                        NoViableAltException nvae =
            	                            new NoViableAltException("", 508, 0, input);

            	                        throw nvae;
            	                    }
            	                    switch (alt508) {
            	                        case 1 :
            	                            // InternalMcmodel.g:15964:14: ( (lv_lefthanded_69_0= 'false' ) )
            	                            {
            	                            // InternalMcmodel.g:15964:14: ( (lv_lefthanded_69_0= 'false' ) )
            	                            // InternalMcmodel.g:15965:15: (lv_lefthanded_69_0= 'false' )
            	                            {
            	                            // InternalMcmodel.g:15965:15: (lv_lefthanded_69_0= 'false' )
            	                            // InternalMcmodel.g:15966:16: lv_lefthanded_69_0= 'false'
            	                            {
            	                            lv_lefthanded_69_0=(Token)match(input,21,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              																newLeafNode(lv_lefthanded_69_0, grammarAccess.getOverridePredicate_12Access().getLefthandedFalseKeyword_3_7_1_1_1_0_1_0_0());
            	                              															
            	                            }
            	                            if ( state.backtracking==0 ) {

            	                              																if (current==null) {
            	                              																	current = createModelElement(grammarAccess.getOverridePredicate_12Rule());
            	                              																}
            	                              																setWithLastConsumed(current, "lefthanded", true, "false");
            	                              															
            	                            }

            	                            }


            	                            }


            	                            }
            	                            break;
            	                        case 2 :
            	                            // InternalMcmodel.g:15979:14: otherlv_70= 'true'
            	                            {
            	                            otherlv_70=(Token)match(input,20,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_70, grammarAccess.getOverridePredicate_12Access().getTrueKeyword_3_7_1_1_1_0_1_1());
            	                              													
            	                            }

            	                            }
            	                            break;

            	                    }


            	                    }


            	                    }
            	                    break;
            	                case 2 :
            	                    // InternalMcmodel.g:15986:12: ( (otherlv_71= '=' | otherlv_72= '==' ) ( ( (lv_lefthanded_73_0= 'true' ) ) | otherlv_74= 'false' ) )
            	                    {
            	                    // InternalMcmodel.g:15986:12: ( (otherlv_71= '=' | otherlv_72= '==' ) ( ( (lv_lefthanded_73_0= 'true' ) ) | otherlv_74= 'false' ) )
            	                    // InternalMcmodel.g:15987:13: (otherlv_71= '=' | otherlv_72= '==' ) ( ( (lv_lefthanded_73_0= 'true' ) ) | otherlv_74= 'false' )
            	                    {
            	                    // InternalMcmodel.g:15987:13: (otherlv_71= '=' | otherlv_72= '==' )
            	                    int alt509=2;
            	                    int LA509_0 = input.LA(1);

            	                    if ( (LA509_0==18) ) {
            	                        alt509=1;
            	                    }
            	                    else if ( (LA509_0==58) ) {
            	                        alt509=2;
            	                    }
            	                    else {
            	                        if (state.backtracking>0) {state.failed=true; return current;}
            	                        NoViableAltException nvae =
            	                            new NoViableAltException("", 509, 0, input);

            	                        throw nvae;
            	                    }
            	                    switch (alt509) {
            	                        case 1 :
            	                            // InternalMcmodel.g:15988:14: otherlv_71= '='
            	                            {
            	                            otherlv_71=(Token)match(input,18,FOLLOW_7); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_71, grammarAccess.getOverridePredicate_12Access().getEqualsSignKeyword_3_7_1_1_1_1_0_0());
            	                              													
            	                            }

            	                            }
            	                            break;
            	                        case 2 :
            	                            // InternalMcmodel.g:15993:14: otherlv_72= '=='
            	                            {
            	                            otherlv_72=(Token)match(input,58,FOLLOW_7); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_72, grammarAccess.getOverridePredicate_12Access().getEqualsSignEqualsSignKeyword_3_7_1_1_1_1_0_1());
            	                              													
            	                            }

            	                            }
            	                            break;

            	                    }

            	                    // InternalMcmodel.g:15998:13: ( ( (lv_lefthanded_73_0= 'true' ) ) | otherlv_74= 'false' )
            	                    int alt510=2;
            	                    int LA510_0 = input.LA(1);

            	                    if ( (LA510_0==20) ) {
            	                        alt510=1;
            	                    }
            	                    else if ( (LA510_0==21) ) {
            	                        alt510=2;
            	                    }
            	                    else {
            	                        if (state.backtracking>0) {state.failed=true; return current;}
            	                        NoViableAltException nvae =
            	                            new NoViableAltException("", 510, 0, input);

            	                        throw nvae;
            	                    }
            	                    switch (alt510) {
            	                        case 1 :
            	                            // InternalMcmodel.g:15999:14: ( (lv_lefthanded_73_0= 'true' ) )
            	                            {
            	                            // InternalMcmodel.g:15999:14: ( (lv_lefthanded_73_0= 'true' ) )
            	                            // InternalMcmodel.g:16000:15: (lv_lefthanded_73_0= 'true' )
            	                            {
            	                            // InternalMcmodel.g:16000:15: (lv_lefthanded_73_0= 'true' )
            	                            // InternalMcmodel.g:16001:16: lv_lefthanded_73_0= 'true'
            	                            {
            	                            lv_lefthanded_73_0=(Token)match(input,20,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              																newLeafNode(lv_lefthanded_73_0, grammarAccess.getOverridePredicate_12Access().getLefthandedTrueKeyword_3_7_1_1_1_1_1_0_0());
            	                              															
            	                            }
            	                            if ( state.backtracking==0 ) {

            	                              																if (current==null) {
            	                              																	current = createModelElement(grammarAccess.getOverridePredicate_12Rule());
            	                              																}
            	                              																setWithLastConsumed(current, "lefthanded", true, "true");
            	                              															
            	                            }

            	                            }


            	                            }


            	                            }
            	                            break;
            	                        case 2 :
            	                            // InternalMcmodel.g:16014:14: otherlv_74= 'false'
            	                            {
            	                            otherlv_74=(Token)match(input,21,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_74, grammarAccess.getOverridePredicate_12Access().getFalseKeyword_3_7_1_1_1_1_1_1());
            	                              													
            	                            }

            	                            }
            	                            break;

            	                    }


            	                    }


            	                    }
            	                    break;

            	            }


            	            }


            	            }
            	            break;

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getOverridePredicate_12Access().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 9 :
            	    // InternalMcmodel.g:16029:4: ({...}? => ( ({...}? => (otherlv_75= '&' ( (lv_pullDefined_76_0= 'pull' ) ) (otherlv_77= '=' | otherlv_78= '==' ) ( (lv_pull_79_0= RULE_PERCENTAGE ) ) ) ) ) )
            	    {
            	    // InternalMcmodel.g:16029:4: ({...}? => ( ({...}? => (otherlv_75= '&' ( (lv_pullDefined_76_0= 'pull' ) ) (otherlv_77= '=' | otherlv_78= '==' ) ( (lv_pull_79_0= RULE_PERCENTAGE ) ) ) ) ) )
            	    // InternalMcmodel.g:16030:5: {...}? => ( ({...}? => (otherlv_75= '&' ( (lv_pullDefined_76_0= 'pull' ) ) (otherlv_77= '=' | otherlv_78= '==' ) ( (lv_pull_79_0= RULE_PERCENTAGE ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_12Access().getUnorderedGroup_3(), 8) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_12", "getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_12Access().getUnorderedGroup_3(), 8)");
            	    }
            	    // InternalMcmodel.g:16030:117: ( ({...}? => (otherlv_75= '&' ( (lv_pullDefined_76_0= 'pull' ) ) (otherlv_77= '=' | otherlv_78= '==' ) ( (lv_pull_79_0= RULE_PERCENTAGE ) ) ) ) )
            	    // InternalMcmodel.g:16031:6: ({...}? => (otherlv_75= '&' ( (lv_pullDefined_76_0= 'pull' ) ) (otherlv_77= '=' | otherlv_78= '==' ) ( (lv_pull_79_0= RULE_PERCENTAGE ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getOverridePredicate_12Access().getUnorderedGroup_3(), 8);
            	    // InternalMcmodel.g:16034:9: ({...}? => (otherlv_75= '&' ( (lv_pullDefined_76_0= 'pull' ) ) (otherlv_77= '=' | otherlv_78= '==' ) ( (lv_pull_79_0= RULE_PERCENTAGE ) ) ) )
            	    // InternalMcmodel.g:16034:10: {...}? => (otherlv_75= '&' ( (lv_pullDefined_76_0= 'pull' ) ) (otherlv_77= '=' | otherlv_78= '==' ) ( (lv_pull_79_0= RULE_PERCENTAGE ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_12", "true");
            	    }
            	    // InternalMcmodel.g:16034:19: (otherlv_75= '&' ( (lv_pullDefined_76_0= 'pull' ) ) (otherlv_77= '=' | otherlv_78= '==' ) ( (lv_pull_79_0= RULE_PERCENTAGE ) ) )
            	    // InternalMcmodel.g:16034:20: otherlv_75= '&' ( (lv_pullDefined_76_0= 'pull' ) ) (otherlv_77= '=' | otherlv_78= '==' ) ( (lv_pull_79_0= RULE_PERCENTAGE ) )
            	    {
            	    otherlv_75=(Token)match(input,59,FOLLOW_51); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_75, grammarAccess.getOverridePredicate_12Access().getAmpersandKeyword_3_8_0());
            	      								
            	    }
            	    // InternalMcmodel.g:16038:9: ( (lv_pullDefined_76_0= 'pull' ) )
            	    // InternalMcmodel.g:16039:10: (lv_pullDefined_76_0= 'pull' )
            	    {
            	    // InternalMcmodel.g:16039:10: (lv_pullDefined_76_0= 'pull' )
            	    // InternalMcmodel.g:16040:11: lv_pullDefined_76_0= 'pull'
            	    {
            	    lv_pullDefined_76_0=(Token)match(input,69,FOLLOW_35); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											newLeafNode(lv_pullDefined_76_0, grammarAccess.getOverridePredicate_12Access().getPullDefinedPullKeyword_3_8_1_0());
            	      										
            	    }
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElement(grammarAccess.getOverridePredicate_12Rule());
            	      											}
            	      											setWithLastConsumed(current, "pullDefined", true, "pull");
            	      										
            	    }

            	    }


            	    }

            	    // InternalMcmodel.g:16052:9: (otherlv_77= '=' | otherlv_78= '==' )
            	    int alt513=2;
            	    int LA513_0 = input.LA(1);

            	    if ( (LA513_0==18) ) {
            	        alt513=1;
            	    }
            	    else if ( (LA513_0==58) ) {
            	        alt513=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 513, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt513) {
            	        case 1 :
            	            // InternalMcmodel.g:16053:10: otherlv_77= '='
            	            {
            	            otherlv_77=(Token)match(input,18,FOLLOW_36); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(otherlv_77, grammarAccess.getOverridePredicate_12Access().getEqualsSignKeyword_3_8_2_0());
            	              									
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalMcmodel.g:16058:10: otherlv_78= '=='
            	            {
            	            otherlv_78=(Token)match(input,58,FOLLOW_36); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(otherlv_78, grammarAccess.getOverridePredicate_12Access().getEqualsSignEqualsSignKeyword_3_8_2_1());
            	              									
            	            }

            	            }
            	            break;

            	    }

            	    // InternalMcmodel.g:16063:9: ( (lv_pull_79_0= RULE_PERCENTAGE ) )
            	    // InternalMcmodel.g:16064:10: (lv_pull_79_0= RULE_PERCENTAGE )
            	    {
            	    // InternalMcmodel.g:16064:10: (lv_pull_79_0= RULE_PERCENTAGE )
            	    // InternalMcmodel.g:16065:11: lv_pull_79_0= RULE_PERCENTAGE
            	    {
            	    lv_pull_79_0=(Token)match(input,RULE_PERCENTAGE,FOLLOW_37); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											newLeafNode(lv_pull_79_0, grammarAccess.getOverridePredicate_12Access().getPullPERCENTAGETerminalRuleCall_3_8_3_0());
            	      										
            	    }
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElement(grammarAccess.getOverridePredicate_12Rule());
            	      											}
            	      											setWithLastConsumed(
            	      												current,
            	      												"pull",
            	      												lv_pull_79_0,
            	      												"com.raptor.mcmodel.Mcmodel.PERCENTAGE");
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getOverridePredicate_12Access().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 10 :
            	    // InternalMcmodel.g:16087:4: ({...}? => ( ({...}? => (otherlv_80= '&' ( ( ( (lv_pullingDefined_81_0= '!' ) ) otherlv_82= 'pulling' ) | ( ( (lv_pullingDefined_83_0= 'pulling' ) ) ( (otherlv_84= '!=' ( ( (lv_pulling_85_0= 'false' ) ) | otherlv_86= 'true' ) ) | ( (otherlv_87= '=' | otherlv_88= '==' ) ( ( (lv_pulling_89_0= 'true' ) ) | otherlv_90= 'false' ) ) ) ) ) ) ) ) )
            	    {
            	    // InternalMcmodel.g:16087:4: ({...}? => ( ({...}? => (otherlv_80= '&' ( ( ( (lv_pullingDefined_81_0= '!' ) ) otherlv_82= 'pulling' ) | ( ( (lv_pullingDefined_83_0= 'pulling' ) ) ( (otherlv_84= '!=' ( ( (lv_pulling_85_0= 'false' ) ) | otherlv_86= 'true' ) ) | ( (otherlv_87= '=' | otherlv_88= '==' ) ( ( (lv_pulling_89_0= 'true' ) ) | otherlv_90= 'false' ) ) ) ) ) ) ) ) )
            	    // InternalMcmodel.g:16088:5: {...}? => ( ({...}? => (otherlv_80= '&' ( ( ( (lv_pullingDefined_81_0= '!' ) ) otherlv_82= 'pulling' ) | ( ( (lv_pullingDefined_83_0= 'pulling' ) ) ( (otherlv_84= '!=' ( ( (lv_pulling_85_0= 'false' ) ) | otherlv_86= 'true' ) ) | ( (otherlv_87= '=' | otherlv_88= '==' ) ( ( (lv_pulling_89_0= 'true' ) ) | otherlv_90= 'false' ) ) ) ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_12Access().getUnorderedGroup_3(), 9) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_12", "getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_12Access().getUnorderedGroup_3(), 9)");
            	    }
            	    // InternalMcmodel.g:16088:117: ( ({...}? => (otherlv_80= '&' ( ( ( (lv_pullingDefined_81_0= '!' ) ) otherlv_82= 'pulling' ) | ( ( (lv_pullingDefined_83_0= 'pulling' ) ) ( (otherlv_84= '!=' ( ( (lv_pulling_85_0= 'false' ) ) | otherlv_86= 'true' ) ) | ( (otherlv_87= '=' | otherlv_88= '==' ) ( ( (lv_pulling_89_0= 'true' ) ) | otherlv_90= 'false' ) ) ) ) ) ) ) )
            	    // InternalMcmodel.g:16089:6: ({...}? => (otherlv_80= '&' ( ( ( (lv_pullingDefined_81_0= '!' ) ) otherlv_82= 'pulling' ) | ( ( (lv_pullingDefined_83_0= 'pulling' ) ) ( (otherlv_84= '!=' ( ( (lv_pulling_85_0= 'false' ) ) | otherlv_86= 'true' ) ) | ( (otherlv_87= '=' | otherlv_88= '==' ) ( ( (lv_pulling_89_0= 'true' ) ) | otherlv_90= 'false' ) ) ) ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getOverridePredicate_12Access().getUnorderedGroup_3(), 9);
            	    // InternalMcmodel.g:16092:9: ({...}? => (otherlv_80= '&' ( ( ( (lv_pullingDefined_81_0= '!' ) ) otherlv_82= 'pulling' ) | ( ( (lv_pullingDefined_83_0= 'pulling' ) ) ( (otherlv_84= '!=' ( ( (lv_pulling_85_0= 'false' ) ) | otherlv_86= 'true' ) ) | ( (otherlv_87= '=' | otherlv_88= '==' ) ( ( (lv_pulling_89_0= 'true' ) ) | otherlv_90= 'false' ) ) ) ) ) ) )
            	    // InternalMcmodel.g:16092:10: {...}? => (otherlv_80= '&' ( ( ( (lv_pullingDefined_81_0= '!' ) ) otherlv_82= 'pulling' ) | ( ( (lv_pullingDefined_83_0= 'pulling' ) ) ( (otherlv_84= '!=' ( ( (lv_pulling_85_0= 'false' ) ) | otherlv_86= 'true' ) ) | ( (otherlv_87= '=' | otherlv_88= '==' ) ( ( (lv_pulling_89_0= 'true' ) ) | otherlv_90= 'false' ) ) ) ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_12", "true");
            	    }
            	    // InternalMcmodel.g:16092:19: (otherlv_80= '&' ( ( ( (lv_pullingDefined_81_0= '!' ) ) otherlv_82= 'pulling' ) | ( ( (lv_pullingDefined_83_0= 'pulling' ) ) ( (otherlv_84= '!=' ( ( (lv_pulling_85_0= 'false' ) ) | otherlv_86= 'true' ) ) | ( (otherlv_87= '=' | otherlv_88= '==' ) ( ( (lv_pulling_89_0= 'true' ) ) | otherlv_90= 'false' ) ) ) ) ) )
            	    // InternalMcmodel.g:16092:20: otherlv_80= '&' ( ( ( (lv_pullingDefined_81_0= '!' ) ) otherlv_82= 'pulling' ) | ( ( (lv_pullingDefined_83_0= 'pulling' ) ) ( (otherlv_84= '!=' ( ( (lv_pulling_85_0= 'false' ) ) | otherlv_86= 'true' ) ) | ( (otherlv_87= '=' | otherlv_88= '==' ) ( ( (lv_pulling_89_0= 'true' ) ) | otherlv_90= 'false' ) ) ) ) )
            	    {
            	    otherlv_80=(Token)match(input,59,FOLLOW_52); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_80, grammarAccess.getOverridePredicate_12Access().getAmpersandKeyword_3_9_0());
            	      								
            	    }
            	    // InternalMcmodel.g:16096:9: ( ( ( (lv_pullingDefined_81_0= '!' ) ) otherlv_82= 'pulling' ) | ( ( (lv_pullingDefined_83_0= 'pulling' ) ) ( (otherlv_84= '!=' ( ( (lv_pulling_85_0= 'false' ) ) | otherlv_86= 'true' ) ) | ( (otherlv_87= '=' | otherlv_88= '==' ) ( ( (lv_pulling_89_0= 'true' ) ) | otherlv_90= 'false' ) ) ) ) )
            	    int alt518=2;
            	    int LA518_0 = input.LA(1);

            	    if ( (LA518_0==60) ) {
            	        alt518=1;
            	    }
            	    else if ( (LA518_0==70) ) {
            	        alt518=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 518, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt518) {
            	        case 1 :
            	            // InternalMcmodel.g:16097:10: ( ( (lv_pullingDefined_81_0= '!' ) ) otherlv_82= 'pulling' )
            	            {
            	            // InternalMcmodel.g:16097:10: ( ( (lv_pullingDefined_81_0= '!' ) ) otherlv_82= 'pulling' )
            	            // InternalMcmodel.g:16098:11: ( (lv_pullingDefined_81_0= '!' ) ) otherlv_82= 'pulling'
            	            {
            	            // InternalMcmodel.g:16098:11: ( (lv_pullingDefined_81_0= '!' ) )
            	            // InternalMcmodel.g:16099:12: (lv_pullingDefined_81_0= '!' )
            	            {
            	            // InternalMcmodel.g:16099:12: (lv_pullingDefined_81_0= '!' )
            	            // InternalMcmodel.g:16100:13: lv_pullingDefined_81_0= '!'
            	            {
            	            lv_pullingDefined_81_0=(Token)match(input,60,FOLLOW_53); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              													newLeafNode(lv_pullingDefined_81_0, grammarAccess.getOverridePredicate_12Access().getPullingDefinedExclamationMarkKeyword_3_9_1_0_0_0());
            	              												
            	            }
            	            if ( state.backtracking==0 ) {

            	              													if (current==null) {
            	              														current = createModelElement(grammarAccess.getOverridePredicate_12Rule());
            	              													}
            	              													setWithLastConsumed(current, "pullingDefined", true, "!");
            	              												
            	            }

            	            }


            	            }

            	            otherlv_82=(Token)match(input,70,FOLLOW_37); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              											newLeafNode(otherlv_82, grammarAccess.getOverridePredicate_12Access().getPullingKeyword_3_9_1_0_1());
            	              										
            	            }

            	            }


            	            }
            	            break;
            	        case 2 :
            	            // InternalMcmodel.g:16118:10: ( ( (lv_pullingDefined_83_0= 'pulling' ) ) ( (otherlv_84= '!=' ( ( (lv_pulling_85_0= 'false' ) ) | otherlv_86= 'true' ) ) | ( (otherlv_87= '=' | otherlv_88= '==' ) ( ( (lv_pulling_89_0= 'true' ) ) | otherlv_90= 'false' ) ) ) )
            	            {
            	            // InternalMcmodel.g:16118:10: ( ( (lv_pullingDefined_83_0= 'pulling' ) ) ( (otherlv_84= '!=' ( ( (lv_pulling_85_0= 'false' ) ) | otherlv_86= 'true' ) ) | ( (otherlv_87= '=' | otherlv_88= '==' ) ( ( (lv_pulling_89_0= 'true' ) ) | otherlv_90= 'false' ) ) ) )
            	            // InternalMcmodel.g:16119:11: ( (lv_pullingDefined_83_0= 'pulling' ) ) ( (otherlv_84= '!=' ( ( (lv_pulling_85_0= 'false' ) ) | otherlv_86= 'true' ) ) | ( (otherlv_87= '=' | otherlv_88= '==' ) ( ( (lv_pulling_89_0= 'true' ) ) | otherlv_90= 'false' ) ) )
            	            {
            	            // InternalMcmodel.g:16119:11: ( (lv_pullingDefined_83_0= 'pulling' ) )
            	            // InternalMcmodel.g:16120:12: (lv_pullingDefined_83_0= 'pulling' )
            	            {
            	            // InternalMcmodel.g:16120:12: (lv_pullingDefined_83_0= 'pulling' )
            	            // InternalMcmodel.g:16121:13: lv_pullingDefined_83_0= 'pulling'
            	            {
            	            lv_pullingDefined_83_0=(Token)match(input,70,FOLLOW_40); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              													newLeafNode(lv_pullingDefined_83_0, grammarAccess.getOverridePredicate_12Access().getPullingDefinedPullingKeyword_3_9_1_1_0_0());
            	              												
            	            }
            	            if ( state.backtracking==0 ) {

            	              													if (current==null) {
            	              														current = createModelElement(grammarAccess.getOverridePredicate_12Rule());
            	              													}
            	              													setWithLastConsumed(current, "pullingDefined", true, "pulling");
            	              												
            	            }

            	            }


            	            }

            	            // InternalMcmodel.g:16133:11: ( (otherlv_84= '!=' ( ( (lv_pulling_85_0= 'false' ) ) | otherlv_86= 'true' ) ) | ( (otherlv_87= '=' | otherlv_88= '==' ) ( ( (lv_pulling_89_0= 'true' ) ) | otherlv_90= 'false' ) ) )
            	            int alt517=2;
            	            int LA517_0 = input.LA(1);

            	            if ( (LA517_0==62) ) {
            	                alt517=1;
            	            }
            	            else if ( (LA517_0==18||LA517_0==58) ) {
            	                alt517=2;
            	            }
            	            else {
            	                if (state.backtracking>0) {state.failed=true; return current;}
            	                NoViableAltException nvae =
            	                    new NoViableAltException("", 517, 0, input);

            	                throw nvae;
            	            }
            	            switch (alt517) {
            	                case 1 :
            	                    // InternalMcmodel.g:16134:12: (otherlv_84= '!=' ( ( (lv_pulling_85_0= 'false' ) ) | otherlv_86= 'true' ) )
            	                    {
            	                    // InternalMcmodel.g:16134:12: (otherlv_84= '!=' ( ( (lv_pulling_85_0= 'false' ) ) | otherlv_86= 'true' ) )
            	                    // InternalMcmodel.g:16135:13: otherlv_84= '!=' ( ( (lv_pulling_85_0= 'false' ) ) | otherlv_86= 'true' )
            	                    {
            	                    otherlv_84=(Token)match(input,62,FOLLOW_7); if (state.failed) return current;
            	                    if ( state.backtracking==0 ) {

            	                      													newLeafNode(otherlv_84, grammarAccess.getOverridePredicate_12Access().getExclamationMarkEqualsSignKeyword_3_9_1_1_1_0_0());
            	                      												
            	                    }
            	                    // InternalMcmodel.g:16139:13: ( ( (lv_pulling_85_0= 'false' ) ) | otherlv_86= 'true' )
            	                    int alt514=2;
            	                    int LA514_0 = input.LA(1);

            	                    if ( (LA514_0==21) ) {
            	                        alt514=1;
            	                    }
            	                    else if ( (LA514_0==20) ) {
            	                        alt514=2;
            	                    }
            	                    else {
            	                        if (state.backtracking>0) {state.failed=true; return current;}
            	                        NoViableAltException nvae =
            	                            new NoViableAltException("", 514, 0, input);

            	                        throw nvae;
            	                    }
            	                    switch (alt514) {
            	                        case 1 :
            	                            // InternalMcmodel.g:16140:14: ( (lv_pulling_85_0= 'false' ) )
            	                            {
            	                            // InternalMcmodel.g:16140:14: ( (lv_pulling_85_0= 'false' ) )
            	                            // InternalMcmodel.g:16141:15: (lv_pulling_85_0= 'false' )
            	                            {
            	                            // InternalMcmodel.g:16141:15: (lv_pulling_85_0= 'false' )
            	                            // InternalMcmodel.g:16142:16: lv_pulling_85_0= 'false'
            	                            {
            	                            lv_pulling_85_0=(Token)match(input,21,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              																newLeafNode(lv_pulling_85_0, grammarAccess.getOverridePredicate_12Access().getPullingFalseKeyword_3_9_1_1_1_0_1_0_0());
            	                              															
            	                            }
            	                            if ( state.backtracking==0 ) {

            	                              																if (current==null) {
            	                              																	current = createModelElement(grammarAccess.getOverridePredicate_12Rule());
            	                              																}
            	                              																setWithLastConsumed(current, "pulling", true, "false");
            	                              															
            	                            }

            	                            }


            	                            }


            	                            }
            	                            break;
            	                        case 2 :
            	                            // InternalMcmodel.g:16155:14: otherlv_86= 'true'
            	                            {
            	                            otherlv_86=(Token)match(input,20,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_86, grammarAccess.getOverridePredicate_12Access().getTrueKeyword_3_9_1_1_1_0_1_1());
            	                              													
            	                            }

            	                            }
            	                            break;

            	                    }


            	                    }


            	                    }
            	                    break;
            	                case 2 :
            	                    // InternalMcmodel.g:16162:12: ( (otherlv_87= '=' | otherlv_88= '==' ) ( ( (lv_pulling_89_0= 'true' ) ) | otherlv_90= 'false' ) )
            	                    {
            	                    // InternalMcmodel.g:16162:12: ( (otherlv_87= '=' | otherlv_88= '==' ) ( ( (lv_pulling_89_0= 'true' ) ) | otherlv_90= 'false' ) )
            	                    // InternalMcmodel.g:16163:13: (otherlv_87= '=' | otherlv_88= '==' ) ( ( (lv_pulling_89_0= 'true' ) ) | otherlv_90= 'false' )
            	                    {
            	                    // InternalMcmodel.g:16163:13: (otherlv_87= '=' | otherlv_88= '==' )
            	                    int alt515=2;
            	                    int LA515_0 = input.LA(1);

            	                    if ( (LA515_0==18) ) {
            	                        alt515=1;
            	                    }
            	                    else if ( (LA515_0==58) ) {
            	                        alt515=2;
            	                    }
            	                    else {
            	                        if (state.backtracking>0) {state.failed=true; return current;}
            	                        NoViableAltException nvae =
            	                            new NoViableAltException("", 515, 0, input);

            	                        throw nvae;
            	                    }
            	                    switch (alt515) {
            	                        case 1 :
            	                            // InternalMcmodel.g:16164:14: otherlv_87= '='
            	                            {
            	                            otherlv_87=(Token)match(input,18,FOLLOW_7); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_87, grammarAccess.getOverridePredicate_12Access().getEqualsSignKeyword_3_9_1_1_1_1_0_0());
            	                              													
            	                            }

            	                            }
            	                            break;
            	                        case 2 :
            	                            // InternalMcmodel.g:16169:14: otherlv_88= '=='
            	                            {
            	                            otherlv_88=(Token)match(input,58,FOLLOW_7); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_88, grammarAccess.getOverridePredicate_12Access().getEqualsSignEqualsSignKeyword_3_9_1_1_1_1_0_1());
            	                              													
            	                            }

            	                            }
            	                            break;

            	                    }

            	                    // InternalMcmodel.g:16174:13: ( ( (lv_pulling_89_0= 'true' ) ) | otherlv_90= 'false' )
            	                    int alt516=2;
            	                    int LA516_0 = input.LA(1);

            	                    if ( (LA516_0==20) ) {
            	                        alt516=1;
            	                    }
            	                    else if ( (LA516_0==21) ) {
            	                        alt516=2;
            	                    }
            	                    else {
            	                        if (state.backtracking>0) {state.failed=true; return current;}
            	                        NoViableAltException nvae =
            	                            new NoViableAltException("", 516, 0, input);

            	                        throw nvae;
            	                    }
            	                    switch (alt516) {
            	                        case 1 :
            	                            // InternalMcmodel.g:16175:14: ( (lv_pulling_89_0= 'true' ) )
            	                            {
            	                            // InternalMcmodel.g:16175:14: ( (lv_pulling_89_0= 'true' ) )
            	                            // InternalMcmodel.g:16176:15: (lv_pulling_89_0= 'true' )
            	                            {
            	                            // InternalMcmodel.g:16176:15: (lv_pulling_89_0= 'true' )
            	                            // InternalMcmodel.g:16177:16: lv_pulling_89_0= 'true'
            	                            {
            	                            lv_pulling_89_0=(Token)match(input,20,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              																newLeafNode(lv_pulling_89_0, grammarAccess.getOverridePredicate_12Access().getPullingTrueKeyword_3_9_1_1_1_1_1_0_0());
            	                              															
            	                            }
            	                            if ( state.backtracking==0 ) {

            	                              																if (current==null) {
            	                              																	current = createModelElement(grammarAccess.getOverridePredicate_12Rule());
            	                              																}
            	                              																setWithLastConsumed(current, "pulling", true, "true");
            	                              															
            	                            }

            	                            }


            	                            }


            	                            }
            	                            break;
            	                        case 2 :
            	                            // InternalMcmodel.g:16190:14: otherlv_90= 'false'
            	                            {
            	                            otherlv_90=(Token)match(input,21,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_90, grammarAccess.getOverridePredicate_12Access().getFalseKeyword_3_9_1_1_1_1_1_1());
            	                              													
            	                            }

            	                            }
            	                            break;

            	                    }


            	                    }


            	                    }
            	                    break;

            	            }


            	            }


            	            }
            	            break;

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getOverridePredicate_12Access().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 11 :
            	    // InternalMcmodel.g:16205:4: ({...}? => ( ({...}? => (otherlv_91= '&' ( ( ( (lv_throwingDefined_92_0= '!' ) ) otherlv_93= 'throwing' ) | ( ( (lv_throwingDefined_94_0= 'throwing' ) ) ( (otherlv_95= '!=' ( ( (lv_throwing_96_0= 'false' ) ) | otherlv_97= 'true' ) ) | ( (otherlv_98= '=' | otherlv_99= '==' ) ( ( (lv_throwing_100_0= 'true' ) ) | otherlv_101= 'false' ) ) ) ) ) ) ) ) )
            	    {
            	    // InternalMcmodel.g:16205:4: ({...}? => ( ({...}? => (otherlv_91= '&' ( ( ( (lv_throwingDefined_92_0= '!' ) ) otherlv_93= 'throwing' ) | ( ( (lv_throwingDefined_94_0= 'throwing' ) ) ( (otherlv_95= '!=' ( ( (lv_throwing_96_0= 'false' ) ) | otherlv_97= 'true' ) ) | ( (otherlv_98= '=' | otherlv_99= '==' ) ( ( (lv_throwing_100_0= 'true' ) ) | otherlv_101= 'false' ) ) ) ) ) ) ) ) )
            	    // InternalMcmodel.g:16206:5: {...}? => ( ({...}? => (otherlv_91= '&' ( ( ( (lv_throwingDefined_92_0= '!' ) ) otherlv_93= 'throwing' ) | ( ( (lv_throwingDefined_94_0= 'throwing' ) ) ( (otherlv_95= '!=' ( ( (lv_throwing_96_0= 'false' ) ) | otherlv_97= 'true' ) ) | ( (otherlv_98= '=' | otherlv_99= '==' ) ( ( (lv_throwing_100_0= 'true' ) ) | otherlv_101= 'false' ) ) ) ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_12Access().getUnorderedGroup_3(), 10) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_12", "getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_12Access().getUnorderedGroup_3(), 10)");
            	    }
            	    // InternalMcmodel.g:16206:118: ( ({...}? => (otherlv_91= '&' ( ( ( (lv_throwingDefined_92_0= '!' ) ) otherlv_93= 'throwing' ) | ( ( (lv_throwingDefined_94_0= 'throwing' ) ) ( (otherlv_95= '!=' ( ( (lv_throwing_96_0= 'false' ) ) | otherlv_97= 'true' ) ) | ( (otherlv_98= '=' | otherlv_99= '==' ) ( ( (lv_throwing_100_0= 'true' ) ) | otherlv_101= 'false' ) ) ) ) ) ) ) )
            	    // InternalMcmodel.g:16207:6: ({...}? => (otherlv_91= '&' ( ( ( (lv_throwingDefined_92_0= '!' ) ) otherlv_93= 'throwing' ) | ( ( (lv_throwingDefined_94_0= 'throwing' ) ) ( (otherlv_95= '!=' ( ( (lv_throwing_96_0= 'false' ) ) | otherlv_97= 'true' ) ) | ( (otherlv_98= '=' | otherlv_99= '==' ) ( ( (lv_throwing_100_0= 'true' ) ) | otherlv_101= 'false' ) ) ) ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getOverridePredicate_12Access().getUnorderedGroup_3(), 10);
            	    // InternalMcmodel.g:16210:9: ({...}? => (otherlv_91= '&' ( ( ( (lv_throwingDefined_92_0= '!' ) ) otherlv_93= 'throwing' ) | ( ( (lv_throwingDefined_94_0= 'throwing' ) ) ( (otherlv_95= '!=' ( ( (lv_throwing_96_0= 'false' ) ) | otherlv_97= 'true' ) ) | ( (otherlv_98= '=' | otherlv_99= '==' ) ( ( (lv_throwing_100_0= 'true' ) ) | otherlv_101= 'false' ) ) ) ) ) ) )
            	    // InternalMcmodel.g:16210:10: {...}? => (otherlv_91= '&' ( ( ( (lv_throwingDefined_92_0= '!' ) ) otherlv_93= 'throwing' ) | ( ( (lv_throwingDefined_94_0= 'throwing' ) ) ( (otherlv_95= '!=' ( ( (lv_throwing_96_0= 'false' ) ) | otherlv_97= 'true' ) ) | ( (otherlv_98= '=' | otherlv_99= '==' ) ( ( (lv_throwing_100_0= 'true' ) ) | otherlv_101= 'false' ) ) ) ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_12", "true");
            	    }
            	    // InternalMcmodel.g:16210:19: (otherlv_91= '&' ( ( ( (lv_throwingDefined_92_0= '!' ) ) otherlv_93= 'throwing' ) | ( ( (lv_throwingDefined_94_0= 'throwing' ) ) ( (otherlv_95= '!=' ( ( (lv_throwing_96_0= 'false' ) ) | otherlv_97= 'true' ) ) | ( (otherlv_98= '=' | otherlv_99= '==' ) ( ( (lv_throwing_100_0= 'true' ) ) | otherlv_101= 'false' ) ) ) ) ) )
            	    // InternalMcmodel.g:16210:20: otherlv_91= '&' ( ( ( (lv_throwingDefined_92_0= '!' ) ) otherlv_93= 'throwing' ) | ( ( (lv_throwingDefined_94_0= 'throwing' ) ) ( (otherlv_95= '!=' ( ( (lv_throwing_96_0= 'false' ) ) | otherlv_97= 'true' ) ) | ( (otherlv_98= '=' | otherlv_99= '==' ) ( ( (lv_throwing_100_0= 'true' ) ) | otherlv_101= 'false' ) ) ) ) )
            	    {
            	    otherlv_91=(Token)match(input,59,FOLLOW_54); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_91, grammarAccess.getOverridePredicate_12Access().getAmpersandKeyword_3_10_0());
            	      								
            	    }
            	    // InternalMcmodel.g:16214:9: ( ( ( (lv_throwingDefined_92_0= '!' ) ) otherlv_93= 'throwing' ) | ( ( (lv_throwingDefined_94_0= 'throwing' ) ) ( (otherlv_95= '!=' ( ( (lv_throwing_96_0= 'false' ) ) | otherlv_97= 'true' ) ) | ( (otherlv_98= '=' | otherlv_99= '==' ) ( ( (lv_throwing_100_0= 'true' ) ) | otherlv_101= 'false' ) ) ) ) )
            	    int alt523=2;
            	    int LA523_0 = input.LA(1);

            	    if ( (LA523_0==60) ) {
            	        alt523=1;
            	    }
            	    else if ( (LA523_0==71) ) {
            	        alt523=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 523, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt523) {
            	        case 1 :
            	            // InternalMcmodel.g:16215:10: ( ( (lv_throwingDefined_92_0= '!' ) ) otherlv_93= 'throwing' )
            	            {
            	            // InternalMcmodel.g:16215:10: ( ( (lv_throwingDefined_92_0= '!' ) ) otherlv_93= 'throwing' )
            	            // InternalMcmodel.g:16216:11: ( (lv_throwingDefined_92_0= '!' ) ) otherlv_93= 'throwing'
            	            {
            	            // InternalMcmodel.g:16216:11: ( (lv_throwingDefined_92_0= '!' ) )
            	            // InternalMcmodel.g:16217:12: (lv_throwingDefined_92_0= '!' )
            	            {
            	            // InternalMcmodel.g:16217:12: (lv_throwingDefined_92_0= '!' )
            	            // InternalMcmodel.g:16218:13: lv_throwingDefined_92_0= '!'
            	            {
            	            lv_throwingDefined_92_0=(Token)match(input,60,FOLLOW_55); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              													newLeafNode(lv_throwingDefined_92_0, grammarAccess.getOverridePredicate_12Access().getThrowingDefinedExclamationMarkKeyword_3_10_1_0_0_0());
            	              												
            	            }
            	            if ( state.backtracking==0 ) {

            	              													if (current==null) {
            	              														current = createModelElement(grammarAccess.getOverridePredicate_12Rule());
            	              													}
            	              													setWithLastConsumed(current, "throwingDefined", true, "!");
            	              												
            	            }

            	            }


            	            }

            	            otherlv_93=(Token)match(input,71,FOLLOW_37); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              											newLeafNode(otherlv_93, grammarAccess.getOverridePredicate_12Access().getThrowingKeyword_3_10_1_0_1());
            	              										
            	            }

            	            }


            	            }
            	            break;
            	        case 2 :
            	            // InternalMcmodel.g:16236:10: ( ( (lv_throwingDefined_94_0= 'throwing' ) ) ( (otherlv_95= '!=' ( ( (lv_throwing_96_0= 'false' ) ) | otherlv_97= 'true' ) ) | ( (otherlv_98= '=' | otherlv_99= '==' ) ( ( (lv_throwing_100_0= 'true' ) ) | otherlv_101= 'false' ) ) ) )
            	            {
            	            // InternalMcmodel.g:16236:10: ( ( (lv_throwingDefined_94_0= 'throwing' ) ) ( (otherlv_95= '!=' ( ( (lv_throwing_96_0= 'false' ) ) | otherlv_97= 'true' ) ) | ( (otherlv_98= '=' | otherlv_99= '==' ) ( ( (lv_throwing_100_0= 'true' ) ) | otherlv_101= 'false' ) ) ) )
            	            // InternalMcmodel.g:16237:11: ( (lv_throwingDefined_94_0= 'throwing' ) ) ( (otherlv_95= '!=' ( ( (lv_throwing_96_0= 'false' ) ) | otherlv_97= 'true' ) ) | ( (otherlv_98= '=' | otherlv_99= '==' ) ( ( (lv_throwing_100_0= 'true' ) ) | otherlv_101= 'false' ) ) )
            	            {
            	            // InternalMcmodel.g:16237:11: ( (lv_throwingDefined_94_0= 'throwing' ) )
            	            // InternalMcmodel.g:16238:12: (lv_throwingDefined_94_0= 'throwing' )
            	            {
            	            // InternalMcmodel.g:16238:12: (lv_throwingDefined_94_0= 'throwing' )
            	            // InternalMcmodel.g:16239:13: lv_throwingDefined_94_0= 'throwing'
            	            {
            	            lv_throwingDefined_94_0=(Token)match(input,71,FOLLOW_40); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              													newLeafNode(lv_throwingDefined_94_0, grammarAccess.getOverridePredicate_12Access().getThrowingDefinedThrowingKeyword_3_10_1_1_0_0());
            	              												
            	            }
            	            if ( state.backtracking==0 ) {

            	              													if (current==null) {
            	              														current = createModelElement(grammarAccess.getOverridePredicate_12Rule());
            	              													}
            	              													setWithLastConsumed(current, "throwingDefined", true, "throwing");
            	              												
            	            }

            	            }


            	            }

            	            // InternalMcmodel.g:16251:11: ( (otherlv_95= '!=' ( ( (lv_throwing_96_0= 'false' ) ) | otherlv_97= 'true' ) ) | ( (otherlv_98= '=' | otherlv_99= '==' ) ( ( (lv_throwing_100_0= 'true' ) ) | otherlv_101= 'false' ) ) )
            	            int alt522=2;
            	            int LA522_0 = input.LA(1);

            	            if ( (LA522_0==62) ) {
            	                alt522=1;
            	            }
            	            else if ( (LA522_0==18||LA522_0==58) ) {
            	                alt522=2;
            	            }
            	            else {
            	                if (state.backtracking>0) {state.failed=true; return current;}
            	                NoViableAltException nvae =
            	                    new NoViableAltException("", 522, 0, input);

            	                throw nvae;
            	            }
            	            switch (alt522) {
            	                case 1 :
            	                    // InternalMcmodel.g:16252:12: (otherlv_95= '!=' ( ( (lv_throwing_96_0= 'false' ) ) | otherlv_97= 'true' ) )
            	                    {
            	                    // InternalMcmodel.g:16252:12: (otherlv_95= '!=' ( ( (lv_throwing_96_0= 'false' ) ) | otherlv_97= 'true' ) )
            	                    // InternalMcmodel.g:16253:13: otherlv_95= '!=' ( ( (lv_throwing_96_0= 'false' ) ) | otherlv_97= 'true' )
            	                    {
            	                    otherlv_95=(Token)match(input,62,FOLLOW_7); if (state.failed) return current;
            	                    if ( state.backtracking==0 ) {

            	                      													newLeafNode(otherlv_95, grammarAccess.getOverridePredicate_12Access().getExclamationMarkEqualsSignKeyword_3_10_1_1_1_0_0());
            	                      												
            	                    }
            	                    // InternalMcmodel.g:16257:13: ( ( (lv_throwing_96_0= 'false' ) ) | otherlv_97= 'true' )
            	                    int alt519=2;
            	                    int LA519_0 = input.LA(1);

            	                    if ( (LA519_0==21) ) {
            	                        alt519=1;
            	                    }
            	                    else if ( (LA519_0==20) ) {
            	                        alt519=2;
            	                    }
            	                    else {
            	                        if (state.backtracking>0) {state.failed=true; return current;}
            	                        NoViableAltException nvae =
            	                            new NoViableAltException("", 519, 0, input);

            	                        throw nvae;
            	                    }
            	                    switch (alt519) {
            	                        case 1 :
            	                            // InternalMcmodel.g:16258:14: ( (lv_throwing_96_0= 'false' ) )
            	                            {
            	                            // InternalMcmodel.g:16258:14: ( (lv_throwing_96_0= 'false' ) )
            	                            // InternalMcmodel.g:16259:15: (lv_throwing_96_0= 'false' )
            	                            {
            	                            // InternalMcmodel.g:16259:15: (lv_throwing_96_0= 'false' )
            	                            // InternalMcmodel.g:16260:16: lv_throwing_96_0= 'false'
            	                            {
            	                            lv_throwing_96_0=(Token)match(input,21,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              																newLeafNode(lv_throwing_96_0, grammarAccess.getOverridePredicate_12Access().getThrowingFalseKeyword_3_10_1_1_1_0_1_0_0());
            	                              															
            	                            }
            	                            if ( state.backtracking==0 ) {

            	                              																if (current==null) {
            	                              																	current = createModelElement(grammarAccess.getOverridePredicate_12Rule());
            	                              																}
            	                              																setWithLastConsumed(current, "throwing", true, "false");
            	                              															
            	                            }

            	                            }


            	                            }


            	                            }
            	                            break;
            	                        case 2 :
            	                            // InternalMcmodel.g:16273:14: otherlv_97= 'true'
            	                            {
            	                            otherlv_97=(Token)match(input,20,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_97, grammarAccess.getOverridePredicate_12Access().getTrueKeyword_3_10_1_1_1_0_1_1());
            	                              													
            	                            }

            	                            }
            	                            break;

            	                    }


            	                    }


            	                    }
            	                    break;
            	                case 2 :
            	                    // InternalMcmodel.g:16280:12: ( (otherlv_98= '=' | otherlv_99= '==' ) ( ( (lv_throwing_100_0= 'true' ) ) | otherlv_101= 'false' ) )
            	                    {
            	                    // InternalMcmodel.g:16280:12: ( (otherlv_98= '=' | otherlv_99= '==' ) ( ( (lv_throwing_100_0= 'true' ) ) | otherlv_101= 'false' ) )
            	                    // InternalMcmodel.g:16281:13: (otherlv_98= '=' | otherlv_99= '==' ) ( ( (lv_throwing_100_0= 'true' ) ) | otherlv_101= 'false' )
            	                    {
            	                    // InternalMcmodel.g:16281:13: (otherlv_98= '=' | otherlv_99= '==' )
            	                    int alt520=2;
            	                    int LA520_0 = input.LA(1);

            	                    if ( (LA520_0==18) ) {
            	                        alt520=1;
            	                    }
            	                    else if ( (LA520_0==58) ) {
            	                        alt520=2;
            	                    }
            	                    else {
            	                        if (state.backtracking>0) {state.failed=true; return current;}
            	                        NoViableAltException nvae =
            	                            new NoViableAltException("", 520, 0, input);

            	                        throw nvae;
            	                    }
            	                    switch (alt520) {
            	                        case 1 :
            	                            // InternalMcmodel.g:16282:14: otherlv_98= '='
            	                            {
            	                            otherlv_98=(Token)match(input,18,FOLLOW_7); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_98, grammarAccess.getOverridePredicate_12Access().getEqualsSignKeyword_3_10_1_1_1_1_0_0());
            	                              													
            	                            }

            	                            }
            	                            break;
            	                        case 2 :
            	                            // InternalMcmodel.g:16287:14: otherlv_99= '=='
            	                            {
            	                            otherlv_99=(Token)match(input,58,FOLLOW_7); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_99, grammarAccess.getOverridePredicate_12Access().getEqualsSignEqualsSignKeyword_3_10_1_1_1_1_0_1());
            	                              													
            	                            }

            	                            }
            	                            break;

            	                    }

            	                    // InternalMcmodel.g:16292:13: ( ( (lv_throwing_100_0= 'true' ) ) | otherlv_101= 'false' )
            	                    int alt521=2;
            	                    int LA521_0 = input.LA(1);

            	                    if ( (LA521_0==20) ) {
            	                        alt521=1;
            	                    }
            	                    else if ( (LA521_0==21) ) {
            	                        alt521=2;
            	                    }
            	                    else {
            	                        if (state.backtracking>0) {state.failed=true; return current;}
            	                        NoViableAltException nvae =
            	                            new NoViableAltException("", 521, 0, input);

            	                        throw nvae;
            	                    }
            	                    switch (alt521) {
            	                        case 1 :
            	                            // InternalMcmodel.g:16293:14: ( (lv_throwing_100_0= 'true' ) )
            	                            {
            	                            // InternalMcmodel.g:16293:14: ( (lv_throwing_100_0= 'true' ) )
            	                            // InternalMcmodel.g:16294:15: (lv_throwing_100_0= 'true' )
            	                            {
            	                            // InternalMcmodel.g:16294:15: (lv_throwing_100_0= 'true' )
            	                            // InternalMcmodel.g:16295:16: lv_throwing_100_0= 'true'
            	                            {
            	                            lv_throwing_100_0=(Token)match(input,20,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              																newLeafNode(lv_throwing_100_0, grammarAccess.getOverridePredicate_12Access().getThrowingTrueKeyword_3_10_1_1_1_1_1_0_0());
            	                              															
            	                            }
            	                            if ( state.backtracking==0 ) {

            	                              																if (current==null) {
            	                              																	current = createModelElement(grammarAccess.getOverridePredicate_12Rule());
            	                              																}
            	                              																setWithLastConsumed(current, "throwing", true, "true");
            	                              															
            	                            }

            	                            }


            	                            }


            	                            }
            	                            break;
            	                        case 2 :
            	                            // InternalMcmodel.g:16308:14: otherlv_101= 'false'
            	                            {
            	                            otherlv_101=(Token)match(input,21,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_101, grammarAccess.getOverridePredicate_12Access().getFalseKeyword_3_10_1_1_1_1_1_1());
            	                              													
            	                            }

            	                            }
            	                            break;

            	                    }


            	                    }


            	                    }
            	                    break;

            	            }


            	            }


            	            }
            	            break;

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getOverridePredicate_12Access().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 12 :
            	    // InternalMcmodel.g:16323:4: ({...}? => ( ({...}? => (otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) ) ) ) ) )
            	    {
            	    // InternalMcmodel.g:16323:4: ({...}? => ( ({...}? => (otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) ) ) ) ) )
            	    // InternalMcmodel.g:16324:5: {...}? => ( ({...}? => (otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_12Access().getUnorderedGroup_3(), 11) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_12", "getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_12Access().getUnorderedGroup_3(), 11)");
            	    }
            	    // InternalMcmodel.g:16324:118: ( ({...}? => (otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) ) ) ) )
            	    // InternalMcmodel.g:16325:6: ({...}? => (otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getOverridePredicate_12Access().getUnorderedGroup_3(), 11);
            	    // InternalMcmodel.g:16328:9: ({...}? => (otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) ) ) )
            	    // InternalMcmodel.g:16328:10: {...}? => (otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_12", "true");
            	    }
            	    // InternalMcmodel.g:16328:19: (otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) ) )
            	    // InternalMcmodel.g:16328:20: otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) )
            	    {
            	    otherlv_102=(Token)match(input,59,FOLLOW_57); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_102, grammarAccess.getOverridePredicate_12Access().getAmpersandKeyword_3_11_0());
            	      								
            	    }
            	    // InternalMcmodel.g:16332:9: ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) )
            	    // InternalMcmodel.g:16333:10: (lv_customModelDataDefined_103_0= 'custom_model_data' )
            	    {
            	    // InternalMcmodel.g:16333:10: (lv_customModelDataDefined_103_0= 'custom_model_data' )
            	    // InternalMcmodel.g:16334:11: lv_customModelDataDefined_103_0= 'custom_model_data'
            	    {
            	    lv_customModelDataDefined_103_0=(Token)match(input,73,FOLLOW_35); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											newLeafNode(lv_customModelDataDefined_103_0, grammarAccess.getOverridePredicate_12Access().getCustomModelDataDefinedCustom_model_dataKeyword_3_11_1_0());
            	      										
            	    }
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElement(grammarAccess.getOverridePredicate_12Rule());
            	      											}
            	      											setWithLastConsumed(current, "customModelDataDefined", true, "custom_model_data");
            	      										
            	    }

            	    }


            	    }

            	    // InternalMcmodel.g:16346:9: (otherlv_104= '=' | otherlv_105= '==' )
            	    int alt524=2;
            	    int LA524_0 = input.LA(1);

            	    if ( (LA524_0==18) ) {
            	        alt524=1;
            	    }
            	    else if ( (LA524_0==58) ) {
            	        alt524=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 524, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt524) {
            	        case 1 :
            	            // InternalMcmodel.g:16347:10: otherlv_104= '='
            	            {
            	            otherlv_104=(Token)match(input,18,FOLLOW_29); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(otherlv_104, grammarAccess.getOverridePredicate_12Access().getEqualsSignKeyword_3_11_2_0());
            	              									
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalMcmodel.g:16352:10: otherlv_105= '=='
            	            {
            	            otherlv_105=(Token)match(input,58,FOLLOW_29); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(otherlv_105, grammarAccess.getOverridePredicate_12Access().getEqualsSignEqualsSignKeyword_3_11_2_1());
            	              									
            	            }

            	            }
            	            break;

            	    }

            	    // InternalMcmodel.g:16357:9: ( (lv_customModelData_106_0= ruleLONG ) )
            	    // InternalMcmodel.g:16358:10: (lv_customModelData_106_0= ruleLONG )
            	    {
            	    // InternalMcmodel.g:16358:10: (lv_customModelData_106_0= ruleLONG )
            	    // InternalMcmodel.g:16359:11: lv_customModelData_106_0= ruleLONG
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getOverridePredicate_12Access().getCustomModelDataLONGParserRuleCall_3_11_3_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_37);
            	    lv_customModelData_106_0=ruleLONG();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getOverridePredicate_12Rule());
            	      											}
            	      											set(
            	      												current,
            	      												"customModelData",
            	      												lv_customModelData_106_0,
            	      												"com.raptor.mcmodel.Mcmodel.LONG");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getOverridePredicate_12Access().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop525;
                }
            } while (true);


            }


            }

            getUnorderedGroupHelper().leave(grammarAccess.getOverridePredicate_12Access().getUnorderedGroup_3());

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOverridePredicate_12"


    // $ANTLR start "entryRuleOverridePredicate_13"
    // InternalMcmodel.g:16393:1: entryRuleOverridePredicate_13 returns [EObject current=null] : iv_ruleOverridePredicate_13= ruleOverridePredicate_13 EOF ;
    public final EObject entryRuleOverridePredicate_13() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleOverridePredicate_13 = null;


        try {
            // InternalMcmodel.g:16393:61: (iv_ruleOverridePredicate_13= ruleOverridePredicate_13 EOF )
            // InternalMcmodel.g:16394:2: iv_ruleOverridePredicate_13= ruleOverridePredicate_13 EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOverridePredicate_13Rule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOverridePredicate_13=ruleOverridePredicate_13();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOverridePredicate_13; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOverridePredicate_13"


    // $ANTLR start "ruleOverridePredicate_13"
    // InternalMcmodel.g:16400:1: ruleOverridePredicate_13 returns [EObject current=null] : ( ( (lv_customModelDataDefined_0_0= 'custom_model_data' ) ) (otherlv_1= '=' | otherlv_2= '==' ) ( (lv_customModelData_3_0= ruleLONG ) ) ( ( ( ( ({...}? => ( ({...}? => (otherlv_5= '&' ( (lv_angleDefined_6_0= 'angle' ) ) (otherlv_7= '=' | otherlv_8= '==' ) ( (lv_angle_9_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= '&' ( ( ( (lv_blockingDefined_11_0= '!' ) ) otherlv_12= 'blocking' ) | ( ( (lv_blockingDefined_13_0= 'blocking' ) ) ( (otherlv_14= '!=' ( ( (lv_blocking_15_0= 'false' ) ) | otherlv_16= 'true' ) ) | ( (otherlv_17= '=' | otherlv_18= '==' ) ( ( (lv_blocking_19_0= 'true' ) ) | otherlv_20= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= '&' ( ( ( (lv_brokenDefined_22_0= '!' ) ) otherlv_23= 'broken' ) | ( ( (lv_brokenDefined_24_0= 'broken' ) ) ( (otherlv_25= '!=' ( ( (lv_broken_26_0= 'false' ) ) | otherlv_27= 'true' ) ) | ( (otherlv_28= '=' | otherlv_29= '==' ) ( ( (lv_broken_30_0= 'true' ) ) | otherlv_31= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_32= '&' ( ( ( (lv_castDefined_33_0= '!' ) ) otherlv_34= 'cast' ) | ( ( (lv_castDefined_35_0= 'cast' ) ) ( (otherlv_36= '!=' ( ( (lv_cast_37_0= 'false' ) ) | otherlv_38= 'true' ) ) | ( (otherlv_39= '=' | otherlv_40= '==' ) ( ( (lv_cast_41_0= 'true' ) ) | otherlv_42= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= '&' ( (lv_cooldownDefined_44_0= 'cooldown' ) ) (otherlv_45= '=' | otherlv_46= '==' ) ( (lv_cooldown_47_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_48= '&' ( (lv_damageDefined_49_0= 'damage' ) ) (otherlv_50= '=' | otherlv_51= '==' ) ( (lv_damage_52_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_53= '&' ( ( ( (lv_damagedDefined_54_0= '!' ) ) otherlv_55= 'damaged' ) | ( ( (lv_damagedDefined_56_0= 'damaged' ) ) ( (otherlv_57= '!=' ( ( (lv_damaged_58_0= 'false' ) ) | otherlv_59= 'true' ) ) | ( (otherlv_60= '=' | otherlv_61= '==' ) ( ( (lv_damaged_62_0= 'true' ) ) | otherlv_63= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_64= '&' ( ( ( (lv_lefthandedDefined_65_0= '!' ) ) otherlv_66= 'lefthanded' ) | ( ( (lv_lefthandedDefined_67_0= 'lefthanded' ) ) ( (otherlv_68= '!=' ( ( (lv_lefthanded_69_0= 'false' ) ) | otherlv_70= 'true' ) ) | ( (otherlv_71= '=' | otherlv_72= '==' ) ( ( (lv_lefthanded_73_0= 'true' ) ) | otherlv_74= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_75= '&' ( (lv_pullDefined_76_0= 'pull' ) ) (otherlv_77= '=' | otherlv_78= '==' ) ( (lv_pull_79_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_80= '&' ( ( ( (lv_pullingDefined_81_0= '!' ) ) otherlv_82= 'pulling' ) | ( ( (lv_pullingDefined_83_0= 'pulling' ) ) ( (otherlv_84= '!=' ( ( (lv_pulling_85_0= 'false' ) ) | otherlv_86= 'true' ) ) | ( (otherlv_87= '=' | otherlv_88= '==' ) ( ( (lv_pulling_89_0= 'true' ) ) | otherlv_90= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_91= '&' ( ( ( (lv_throwingDefined_92_0= '!' ) ) otherlv_93= 'throwing' ) | ( ( (lv_throwingDefined_94_0= 'throwing' ) ) ( (otherlv_95= '!=' ( ( (lv_throwing_96_0= 'false' ) ) | otherlv_97= 'true' ) ) | ( (otherlv_98= '=' | otherlv_99= '==' ) ( ( (lv_throwing_100_0= 'true' ) ) | otherlv_101= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_102= '&' ( (lv_timeDefined_103_0= 'time' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_time_106_0= RULE_PERCENTAGE ) ) ) ) ) ) )* ) ) ) ) ;
    public final EObject ruleOverridePredicate_13() throws RecognitionException {
        EObject current = null;

        Token lv_customModelDataDefined_0_0=null;
        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_5=null;
        Token lv_angleDefined_6_0=null;
        Token otherlv_7=null;
        Token otherlv_8=null;
        Token lv_angle_9_0=null;
        Token otherlv_10=null;
        Token lv_blockingDefined_11_0=null;
        Token otherlv_12=null;
        Token lv_blockingDefined_13_0=null;
        Token otherlv_14=null;
        Token lv_blocking_15_0=null;
        Token otherlv_16=null;
        Token otherlv_17=null;
        Token otherlv_18=null;
        Token lv_blocking_19_0=null;
        Token otherlv_20=null;
        Token otherlv_21=null;
        Token lv_brokenDefined_22_0=null;
        Token otherlv_23=null;
        Token lv_brokenDefined_24_0=null;
        Token otherlv_25=null;
        Token lv_broken_26_0=null;
        Token otherlv_27=null;
        Token otherlv_28=null;
        Token otherlv_29=null;
        Token lv_broken_30_0=null;
        Token otherlv_31=null;
        Token otherlv_32=null;
        Token lv_castDefined_33_0=null;
        Token otherlv_34=null;
        Token lv_castDefined_35_0=null;
        Token otherlv_36=null;
        Token lv_cast_37_0=null;
        Token otherlv_38=null;
        Token otherlv_39=null;
        Token otherlv_40=null;
        Token lv_cast_41_0=null;
        Token otherlv_42=null;
        Token otherlv_43=null;
        Token lv_cooldownDefined_44_0=null;
        Token otherlv_45=null;
        Token otherlv_46=null;
        Token lv_cooldown_47_0=null;
        Token otherlv_48=null;
        Token lv_damageDefined_49_0=null;
        Token otherlv_50=null;
        Token otherlv_51=null;
        Token lv_damage_52_0=null;
        Token otherlv_53=null;
        Token lv_damagedDefined_54_0=null;
        Token otherlv_55=null;
        Token lv_damagedDefined_56_0=null;
        Token otherlv_57=null;
        Token lv_damaged_58_0=null;
        Token otherlv_59=null;
        Token otherlv_60=null;
        Token otherlv_61=null;
        Token lv_damaged_62_0=null;
        Token otherlv_63=null;
        Token otherlv_64=null;
        Token lv_lefthandedDefined_65_0=null;
        Token otherlv_66=null;
        Token lv_lefthandedDefined_67_0=null;
        Token otherlv_68=null;
        Token lv_lefthanded_69_0=null;
        Token otherlv_70=null;
        Token otherlv_71=null;
        Token otherlv_72=null;
        Token lv_lefthanded_73_0=null;
        Token otherlv_74=null;
        Token otherlv_75=null;
        Token lv_pullDefined_76_0=null;
        Token otherlv_77=null;
        Token otherlv_78=null;
        Token lv_pull_79_0=null;
        Token otherlv_80=null;
        Token lv_pullingDefined_81_0=null;
        Token otherlv_82=null;
        Token lv_pullingDefined_83_0=null;
        Token otherlv_84=null;
        Token lv_pulling_85_0=null;
        Token otherlv_86=null;
        Token otherlv_87=null;
        Token otherlv_88=null;
        Token lv_pulling_89_0=null;
        Token otherlv_90=null;
        Token otherlv_91=null;
        Token lv_throwingDefined_92_0=null;
        Token otherlv_93=null;
        Token lv_throwingDefined_94_0=null;
        Token otherlv_95=null;
        Token lv_throwing_96_0=null;
        Token otherlv_97=null;
        Token otherlv_98=null;
        Token otherlv_99=null;
        Token lv_throwing_100_0=null;
        Token otherlv_101=null;
        Token otherlv_102=null;
        Token lv_timeDefined_103_0=null;
        Token otherlv_104=null;
        Token otherlv_105=null;
        Token lv_time_106_0=null;
        AntlrDatatypeRuleToken lv_customModelData_3_0 = null;



        	enterRule();

        try {
            // InternalMcmodel.g:16406:2: ( ( ( (lv_customModelDataDefined_0_0= 'custom_model_data' ) ) (otherlv_1= '=' | otherlv_2= '==' ) ( (lv_customModelData_3_0= ruleLONG ) ) ( ( ( ( ({...}? => ( ({...}? => (otherlv_5= '&' ( (lv_angleDefined_6_0= 'angle' ) ) (otherlv_7= '=' | otherlv_8= '==' ) ( (lv_angle_9_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= '&' ( ( ( (lv_blockingDefined_11_0= '!' ) ) otherlv_12= 'blocking' ) | ( ( (lv_blockingDefined_13_0= 'blocking' ) ) ( (otherlv_14= '!=' ( ( (lv_blocking_15_0= 'false' ) ) | otherlv_16= 'true' ) ) | ( (otherlv_17= '=' | otherlv_18= '==' ) ( ( (lv_blocking_19_0= 'true' ) ) | otherlv_20= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= '&' ( ( ( (lv_brokenDefined_22_0= '!' ) ) otherlv_23= 'broken' ) | ( ( (lv_brokenDefined_24_0= 'broken' ) ) ( (otherlv_25= '!=' ( ( (lv_broken_26_0= 'false' ) ) | otherlv_27= 'true' ) ) | ( (otherlv_28= '=' | otherlv_29= '==' ) ( ( (lv_broken_30_0= 'true' ) ) | otherlv_31= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_32= '&' ( ( ( (lv_castDefined_33_0= '!' ) ) otherlv_34= 'cast' ) | ( ( (lv_castDefined_35_0= 'cast' ) ) ( (otherlv_36= '!=' ( ( (lv_cast_37_0= 'false' ) ) | otherlv_38= 'true' ) ) | ( (otherlv_39= '=' | otherlv_40= '==' ) ( ( (lv_cast_41_0= 'true' ) ) | otherlv_42= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= '&' ( (lv_cooldownDefined_44_0= 'cooldown' ) ) (otherlv_45= '=' | otherlv_46= '==' ) ( (lv_cooldown_47_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_48= '&' ( (lv_damageDefined_49_0= 'damage' ) ) (otherlv_50= '=' | otherlv_51= '==' ) ( (lv_damage_52_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_53= '&' ( ( ( (lv_damagedDefined_54_0= '!' ) ) otherlv_55= 'damaged' ) | ( ( (lv_damagedDefined_56_0= 'damaged' ) ) ( (otherlv_57= '!=' ( ( (lv_damaged_58_0= 'false' ) ) | otherlv_59= 'true' ) ) | ( (otherlv_60= '=' | otherlv_61= '==' ) ( ( (lv_damaged_62_0= 'true' ) ) | otherlv_63= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_64= '&' ( ( ( (lv_lefthandedDefined_65_0= '!' ) ) otherlv_66= 'lefthanded' ) | ( ( (lv_lefthandedDefined_67_0= 'lefthanded' ) ) ( (otherlv_68= '!=' ( ( (lv_lefthanded_69_0= 'false' ) ) | otherlv_70= 'true' ) ) | ( (otherlv_71= '=' | otherlv_72= '==' ) ( ( (lv_lefthanded_73_0= 'true' ) ) | otherlv_74= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_75= '&' ( (lv_pullDefined_76_0= 'pull' ) ) (otherlv_77= '=' | otherlv_78= '==' ) ( (lv_pull_79_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_80= '&' ( ( ( (lv_pullingDefined_81_0= '!' ) ) otherlv_82= 'pulling' ) | ( ( (lv_pullingDefined_83_0= 'pulling' ) ) ( (otherlv_84= '!=' ( ( (lv_pulling_85_0= 'false' ) ) | otherlv_86= 'true' ) ) | ( (otherlv_87= '=' | otherlv_88= '==' ) ( ( (lv_pulling_89_0= 'true' ) ) | otherlv_90= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_91= '&' ( ( ( (lv_throwingDefined_92_0= '!' ) ) otherlv_93= 'throwing' ) | ( ( (lv_throwingDefined_94_0= 'throwing' ) ) ( (otherlv_95= '!=' ( ( (lv_throwing_96_0= 'false' ) ) | otherlv_97= 'true' ) ) | ( (otherlv_98= '=' | otherlv_99= '==' ) ( ( (lv_throwing_100_0= 'true' ) ) | otherlv_101= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_102= '&' ( (lv_timeDefined_103_0= 'time' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_time_106_0= RULE_PERCENTAGE ) ) ) ) ) ) )* ) ) ) ) )
            // InternalMcmodel.g:16407:2: ( ( (lv_customModelDataDefined_0_0= 'custom_model_data' ) ) (otherlv_1= '=' | otherlv_2= '==' ) ( (lv_customModelData_3_0= ruleLONG ) ) ( ( ( ( ({...}? => ( ({...}? => (otherlv_5= '&' ( (lv_angleDefined_6_0= 'angle' ) ) (otherlv_7= '=' | otherlv_8= '==' ) ( (lv_angle_9_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= '&' ( ( ( (lv_blockingDefined_11_0= '!' ) ) otherlv_12= 'blocking' ) | ( ( (lv_blockingDefined_13_0= 'blocking' ) ) ( (otherlv_14= '!=' ( ( (lv_blocking_15_0= 'false' ) ) | otherlv_16= 'true' ) ) | ( (otherlv_17= '=' | otherlv_18= '==' ) ( ( (lv_blocking_19_0= 'true' ) ) | otherlv_20= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= '&' ( ( ( (lv_brokenDefined_22_0= '!' ) ) otherlv_23= 'broken' ) | ( ( (lv_brokenDefined_24_0= 'broken' ) ) ( (otherlv_25= '!=' ( ( (lv_broken_26_0= 'false' ) ) | otherlv_27= 'true' ) ) | ( (otherlv_28= '=' | otherlv_29= '==' ) ( ( (lv_broken_30_0= 'true' ) ) | otherlv_31= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_32= '&' ( ( ( (lv_castDefined_33_0= '!' ) ) otherlv_34= 'cast' ) | ( ( (lv_castDefined_35_0= 'cast' ) ) ( (otherlv_36= '!=' ( ( (lv_cast_37_0= 'false' ) ) | otherlv_38= 'true' ) ) | ( (otherlv_39= '=' | otherlv_40= '==' ) ( ( (lv_cast_41_0= 'true' ) ) | otherlv_42= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= '&' ( (lv_cooldownDefined_44_0= 'cooldown' ) ) (otherlv_45= '=' | otherlv_46= '==' ) ( (lv_cooldown_47_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_48= '&' ( (lv_damageDefined_49_0= 'damage' ) ) (otherlv_50= '=' | otherlv_51= '==' ) ( (lv_damage_52_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_53= '&' ( ( ( (lv_damagedDefined_54_0= '!' ) ) otherlv_55= 'damaged' ) | ( ( (lv_damagedDefined_56_0= 'damaged' ) ) ( (otherlv_57= '!=' ( ( (lv_damaged_58_0= 'false' ) ) | otherlv_59= 'true' ) ) | ( (otherlv_60= '=' | otherlv_61= '==' ) ( ( (lv_damaged_62_0= 'true' ) ) | otherlv_63= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_64= '&' ( ( ( (lv_lefthandedDefined_65_0= '!' ) ) otherlv_66= 'lefthanded' ) | ( ( (lv_lefthandedDefined_67_0= 'lefthanded' ) ) ( (otherlv_68= '!=' ( ( (lv_lefthanded_69_0= 'false' ) ) | otherlv_70= 'true' ) ) | ( (otherlv_71= '=' | otherlv_72= '==' ) ( ( (lv_lefthanded_73_0= 'true' ) ) | otherlv_74= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_75= '&' ( (lv_pullDefined_76_0= 'pull' ) ) (otherlv_77= '=' | otherlv_78= '==' ) ( (lv_pull_79_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_80= '&' ( ( ( (lv_pullingDefined_81_0= '!' ) ) otherlv_82= 'pulling' ) | ( ( (lv_pullingDefined_83_0= 'pulling' ) ) ( (otherlv_84= '!=' ( ( (lv_pulling_85_0= 'false' ) ) | otherlv_86= 'true' ) ) | ( (otherlv_87= '=' | otherlv_88= '==' ) ( ( (lv_pulling_89_0= 'true' ) ) | otherlv_90= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_91= '&' ( ( ( (lv_throwingDefined_92_0= '!' ) ) otherlv_93= 'throwing' ) | ( ( (lv_throwingDefined_94_0= 'throwing' ) ) ( (otherlv_95= '!=' ( ( (lv_throwing_96_0= 'false' ) ) | otherlv_97= 'true' ) ) | ( (otherlv_98= '=' | otherlv_99= '==' ) ( ( (lv_throwing_100_0= 'true' ) ) | otherlv_101= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_102= '&' ( (lv_timeDefined_103_0= 'time' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_time_106_0= RULE_PERCENTAGE ) ) ) ) ) ) )* ) ) ) )
            {
            // InternalMcmodel.g:16407:2: ( ( (lv_customModelDataDefined_0_0= 'custom_model_data' ) ) (otherlv_1= '=' | otherlv_2= '==' ) ( (lv_customModelData_3_0= ruleLONG ) ) ( ( ( ( ({...}? => ( ({...}? => (otherlv_5= '&' ( (lv_angleDefined_6_0= 'angle' ) ) (otherlv_7= '=' | otherlv_8= '==' ) ( (lv_angle_9_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= '&' ( ( ( (lv_blockingDefined_11_0= '!' ) ) otherlv_12= 'blocking' ) | ( ( (lv_blockingDefined_13_0= 'blocking' ) ) ( (otherlv_14= '!=' ( ( (lv_blocking_15_0= 'false' ) ) | otherlv_16= 'true' ) ) | ( (otherlv_17= '=' | otherlv_18= '==' ) ( ( (lv_blocking_19_0= 'true' ) ) | otherlv_20= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= '&' ( ( ( (lv_brokenDefined_22_0= '!' ) ) otherlv_23= 'broken' ) | ( ( (lv_brokenDefined_24_0= 'broken' ) ) ( (otherlv_25= '!=' ( ( (lv_broken_26_0= 'false' ) ) | otherlv_27= 'true' ) ) | ( (otherlv_28= '=' | otherlv_29= '==' ) ( ( (lv_broken_30_0= 'true' ) ) | otherlv_31= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_32= '&' ( ( ( (lv_castDefined_33_0= '!' ) ) otherlv_34= 'cast' ) | ( ( (lv_castDefined_35_0= 'cast' ) ) ( (otherlv_36= '!=' ( ( (lv_cast_37_0= 'false' ) ) | otherlv_38= 'true' ) ) | ( (otherlv_39= '=' | otherlv_40= '==' ) ( ( (lv_cast_41_0= 'true' ) ) | otherlv_42= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= '&' ( (lv_cooldownDefined_44_0= 'cooldown' ) ) (otherlv_45= '=' | otherlv_46= '==' ) ( (lv_cooldown_47_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_48= '&' ( (lv_damageDefined_49_0= 'damage' ) ) (otherlv_50= '=' | otherlv_51= '==' ) ( (lv_damage_52_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_53= '&' ( ( ( (lv_damagedDefined_54_0= '!' ) ) otherlv_55= 'damaged' ) | ( ( (lv_damagedDefined_56_0= 'damaged' ) ) ( (otherlv_57= '!=' ( ( (lv_damaged_58_0= 'false' ) ) | otherlv_59= 'true' ) ) | ( (otherlv_60= '=' | otherlv_61= '==' ) ( ( (lv_damaged_62_0= 'true' ) ) | otherlv_63= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_64= '&' ( ( ( (lv_lefthandedDefined_65_0= '!' ) ) otherlv_66= 'lefthanded' ) | ( ( (lv_lefthandedDefined_67_0= 'lefthanded' ) ) ( (otherlv_68= '!=' ( ( (lv_lefthanded_69_0= 'false' ) ) | otherlv_70= 'true' ) ) | ( (otherlv_71= '=' | otherlv_72= '==' ) ( ( (lv_lefthanded_73_0= 'true' ) ) | otherlv_74= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_75= '&' ( (lv_pullDefined_76_0= 'pull' ) ) (otherlv_77= '=' | otherlv_78= '==' ) ( (lv_pull_79_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_80= '&' ( ( ( (lv_pullingDefined_81_0= '!' ) ) otherlv_82= 'pulling' ) | ( ( (lv_pullingDefined_83_0= 'pulling' ) ) ( (otherlv_84= '!=' ( ( (lv_pulling_85_0= 'false' ) ) | otherlv_86= 'true' ) ) | ( (otherlv_87= '=' | otherlv_88= '==' ) ( ( (lv_pulling_89_0= 'true' ) ) | otherlv_90= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_91= '&' ( ( ( (lv_throwingDefined_92_0= '!' ) ) otherlv_93= 'throwing' ) | ( ( (lv_throwingDefined_94_0= 'throwing' ) ) ( (otherlv_95= '!=' ( ( (lv_throwing_96_0= 'false' ) ) | otherlv_97= 'true' ) ) | ( (otherlv_98= '=' | otherlv_99= '==' ) ( ( (lv_throwing_100_0= 'true' ) ) | otherlv_101= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_102= '&' ( (lv_timeDefined_103_0= 'time' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_time_106_0= RULE_PERCENTAGE ) ) ) ) ) ) )* ) ) ) )
            // InternalMcmodel.g:16408:3: ( (lv_customModelDataDefined_0_0= 'custom_model_data' ) ) (otherlv_1= '=' | otherlv_2= '==' ) ( (lv_customModelData_3_0= ruleLONG ) ) ( ( ( ( ({...}? => ( ({...}? => (otherlv_5= '&' ( (lv_angleDefined_6_0= 'angle' ) ) (otherlv_7= '=' | otherlv_8= '==' ) ( (lv_angle_9_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= '&' ( ( ( (lv_blockingDefined_11_0= '!' ) ) otherlv_12= 'blocking' ) | ( ( (lv_blockingDefined_13_0= 'blocking' ) ) ( (otherlv_14= '!=' ( ( (lv_blocking_15_0= 'false' ) ) | otherlv_16= 'true' ) ) | ( (otherlv_17= '=' | otherlv_18= '==' ) ( ( (lv_blocking_19_0= 'true' ) ) | otherlv_20= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= '&' ( ( ( (lv_brokenDefined_22_0= '!' ) ) otherlv_23= 'broken' ) | ( ( (lv_brokenDefined_24_0= 'broken' ) ) ( (otherlv_25= '!=' ( ( (lv_broken_26_0= 'false' ) ) | otherlv_27= 'true' ) ) | ( (otherlv_28= '=' | otherlv_29= '==' ) ( ( (lv_broken_30_0= 'true' ) ) | otherlv_31= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_32= '&' ( ( ( (lv_castDefined_33_0= '!' ) ) otherlv_34= 'cast' ) | ( ( (lv_castDefined_35_0= 'cast' ) ) ( (otherlv_36= '!=' ( ( (lv_cast_37_0= 'false' ) ) | otherlv_38= 'true' ) ) | ( (otherlv_39= '=' | otherlv_40= '==' ) ( ( (lv_cast_41_0= 'true' ) ) | otherlv_42= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= '&' ( (lv_cooldownDefined_44_0= 'cooldown' ) ) (otherlv_45= '=' | otherlv_46= '==' ) ( (lv_cooldown_47_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_48= '&' ( (lv_damageDefined_49_0= 'damage' ) ) (otherlv_50= '=' | otherlv_51= '==' ) ( (lv_damage_52_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_53= '&' ( ( ( (lv_damagedDefined_54_0= '!' ) ) otherlv_55= 'damaged' ) | ( ( (lv_damagedDefined_56_0= 'damaged' ) ) ( (otherlv_57= '!=' ( ( (lv_damaged_58_0= 'false' ) ) | otherlv_59= 'true' ) ) | ( (otherlv_60= '=' | otherlv_61= '==' ) ( ( (lv_damaged_62_0= 'true' ) ) | otherlv_63= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_64= '&' ( ( ( (lv_lefthandedDefined_65_0= '!' ) ) otherlv_66= 'lefthanded' ) | ( ( (lv_lefthandedDefined_67_0= 'lefthanded' ) ) ( (otherlv_68= '!=' ( ( (lv_lefthanded_69_0= 'false' ) ) | otherlv_70= 'true' ) ) | ( (otherlv_71= '=' | otherlv_72= '==' ) ( ( (lv_lefthanded_73_0= 'true' ) ) | otherlv_74= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_75= '&' ( (lv_pullDefined_76_0= 'pull' ) ) (otherlv_77= '=' | otherlv_78= '==' ) ( (lv_pull_79_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_80= '&' ( ( ( (lv_pullingDefined_81_0= '!' ) ) otherlv_82= 'pulling' ) | ( ( (lv_pullingDefined_83_0= 'pulling' ) ) ( (otherlv_84= '!=' ( ( (lv_pulling_85_0= 'false' ) ) | otherlv_86= 'true' ) ) | ( (otherlv_87= '=' | otherlv_88= '==' ) ( ( (lv_pulling_89_0= 'true' ) ) | otherlv_90= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_91= '&' ( ( ( (lv_throwingDefined_92_0= '!' ) ) otherlv_93= 'throwing' ) | ( ( (lv_throwingDefined_94_0= 'throwing' ) ) ( (otherlv_95= '!=' ( ( (lv_throwing_96_0= 'false' ) ) | otherlv_97= 'true' ) ) | ( (otherlv_98= '=' | otherlv_99= '==' ) ( ( (lv_throwing_100_0= 'true' ) ) | otherlv_101= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_102= '&' ( (lv_timeDefined_103_0= 'time' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_time_106_0= RULE_PERCENTAGE ) ) ) ) ) ) )* ) ) )
            {
            // InternalMcmodel.g:16408:3: ( (lv_customModelDataDefined_0_0= 'custom_model_data' ) )
            // InternalMcmodel.g:16409:4: (lv_customModelDataDefined_0_0= 'custom_model_data' )
            {
            // InternalMcmodel.g:16409:4: (lv_customModelDataDefined_0_0= 'custom_model_data' )
            // InternalMcmodel.g:16410:5: lv_customModelDataDefined_0_0= 'custom_model_data'
            {
            lv_customModelDataDefined_0_0=(Token)match(input,73,FOLLOW_35); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_customModelDataDefined_0_0, grammarAccess.getOverridePredicate_13Access().getCustomModelDataDefinedCustom_model_dataKeyword_0_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getOverridePredicate_13Rule());
              					}
              					setWithLastConsumed(current, "customModelDataDefined", true, "custom_model_data");
              				
            }

            }


            }

            // InternalMcmodel.g:16422:3: (otherlv_1= '=' | otherlv_2= '==' )
            int alt526=2;
            int LA526_0 = input.LA(1);

            if ( (LA526_0==18) ) {
                alt526=1;
            }
            else if ( (LA526_0==58) ) {
                alt526=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 526, 0, input);

                throw nvae;
            }
            switch (alt526) {
                case 1 :
                    // InternalMcmodel.g:16423:4: otherlv_1= '='
                    {
                    otherlv_1=(Token)match(input,18,FOLLOW_29); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getOverridePredicate_13Access().getEqualsSignKeyword_1_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalMcmodel.g:16428:4: otherlv_2= '=='
                    {
                    otherlv_2=(Token)match(input,58,FOLLOW_29); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getOverridePredicate_13Access().getEqualsSignEqualsSignKeyword_1_1());
                      			
                    }

                    }
                    break;

            }

            // InternalMcmodel.g:16433:3: ( (lv_customModelData_3_0= ruleLONG ) )
            // InternalMcmodel.g:16434:4: (lv_customModelData_3_0= ruleLONG )
            {
            // InternalMcmodel.g:16434:4: (lv_customModelData_3_0= ruleLONG )
            // InternalMcmodel.g:16435:5: lv_customModelData_3_0= ruleLONG
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getOverridePredicate_13Access().getCustomModelDataLONGParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_37);
            lv_customModelData_3_0=ruleLONG();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getOverridePredicate_13Rule());
              					}
              					set(
              						current,
              						"customModelData",
              						lv_customModelData_3_0,
              						"com.raptor.mcmodel.Mcmodel.LONG");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalMcmodel.g:16452:3: ( ( ( ( ({...}? => ( ({...}? => (otherlv_5= '&' ( (lv_angleDefined_6_0= 'angle' ) ) (otherlv_7= '=' | otherlv_8= '==' ) ( (lv_angle_9_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= '&' ( ( ( (lv_blockingDefined_11_0= '!' ) ) otherlv_12= 'blocking' ) | ( ( (lv_blockingDefined_13_0= 'blocking' ) ) ( (otherlv_14= '!=' ( ( (lv_blocking_15_0= 'false' ) ) | otherlv_16= 'true' ) ) | ( (otherlv_17= '=' | otherlv_18= '==' ) ( ( (lv_blocking_19_0= 'true' ) ) | otherlv_20= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= '&' ( ( ( (lv_brokenDefined_22_0= '!' ) ) otherlv_23= 'broken' ) | ( ( (lv_brokenDefined_24_0= 'broken' ) ) ( (otherlv_25= '!=' ( ( (lv_broken_26_0= 'false' ) ) | otherlv_27= 'true' ) ) | ( (otherlv_28= '=' | otherlv_29= '==' ) ( ( (lv_broken_30_0= 'true' ) ) | otherlv_31= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_32= '&' ( ( ( (lv_castDefined_33_0= '!' ) ) otherlv_34= 'cast' ) | ( ( (lv_castDefined_35_0= 'cast' ) ) ( (otherlv_36= '!=' ( ( (lv_cast_37_0= 'false' ) ) | otherlv_38= 'true' ) ) | ( (otherlv_39= '=' | otherlv_40= '==' ) ( ( (lv_cast_41_0= 'true' ) ) | otherlv_42= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= '&' ( (lv_cooldownDefined_44_0= 'cooldown' ) ) (otherlv_45= '=' | otherlv_46= '==' ) ( (lv_cooldown_47_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_48= '&' ( (lv_damageDefined_49_0= 'damage' ) ) (otherlv_50= '=' | otherlv_51= '==' ) ( (lv_damage_52_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_53= '&' ( ( ( (lv_damagedDefined_54_0= '!' ) ) otherlv_55= 'damaged' ) | ( ( (lv_damagedDefined_56_0= 'damaged' ) ) ( (otherlv_57= '!=' ( ( (lv_damaged_58_0= 'false' ) ) | otherlv_59= 'true' ) ) | ( (otherlv_60= '=' | otherlv_61= '==' ) ( ( (lv_damaged_62_0= 'true' ) ) | otherlv_63= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_64= '&' ( ( ( (lv_lefthandedDefined_65_0= '!' ) ) otherlv_66= 'lefthanded' ) | ( ( (lv_lefthandedDefined_67_0= 'lefthanded' ) ) ( (otherlv_68= '!=' ( ( (lv_lefthanded_69_0= 'false' ) ) | otherlv_70= 'true' ) ) | ( (otherlv_71= '=' | otherlv_72= '==' ) ( ( (lv_lefthanded_73_0= 'true' ) ) | otherlv_74= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_75= '&' ( (lv_pullDefined_76_0= 'pull' ) ) (otherlv_77= '=' | otherlv_78= '==' ) ( (lv_pull_79_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_80= '&' ( ( ( (lv_pullingDefined_81_0= '!' ) ) otherlv_82= 'pulling' ) | ( ( (lv_pullingDefined_83_0= 'pulling' ) ) ( (otherlv_84= '!=' ( ( (lv_pulling_85_0= 'false' ) ) | otherlv_86= 'true' ) ) | ( (otherlv_87= '=' | otherlv_88= '==' ) ( ( (lv_pulling_89_0= 'true' ) ) | otherlv_90= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_91= '&' ( ( ( (lv_throwingDefined_92_0= '!' ) ) otherlv_93= 'throwing' ) | ( ( (lv_throwingDefined_94_0= 'throwing' ) ) ( (otherlv_95= '!=' ( ( (lv_throwing_96_0= 'false' ) ) | otherlv_97= 'true' ) ) | ( (otherlv_98= '=' | otherlv_99= '==' ) ( ( (lv_throwing_100_0= 'true' ) ) | otherlv_101= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_102= '&' ( (lv_timeDefined_103_0= 'time' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_time_106_0= RULE_PERCENTAGE ) ) ) ) ) ) )* ) ) )
            // InternalMcmodel.g:16453:4: ( ( ( ({...}? => ( ({...}? => (otherlv_5= '&' ( (lv_angleDefined_6_0= 'angle' ) ) (otherlv_7= '=' | otherlv_8= '==' ) ( (lv_angle_9_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= '&' ( ( ( (lv_blockingDefined_11_0= '!' ) ) otherlv_12= 'blocking' ) | ( ( (lv_blockingDefined_13_0= 'blocking' ) ) ( (otherlv_14= '!=' ( ( (lv_blocking_15_0= 'false' ) ) | otherlv_16= 'true' ) ) | ( (otherlv_17= '=' | otherlv_18= '==' ) ( ( (lv_blocking_19_0= 'true' ) ) | otherlv_20= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= '&' ( ( ( (lv_brokenDefined_22_0= '!' ) ) otherlv_23= 'broken' ) | ( ( (lv_brokenDefined_24_0= 'broken' ) ) ( (otherlv_25= '!=' ( ( (lv_broken_26_0= 'false' ) ) | otherlv_27= 'true' ) ) | ( (otherlv_28= '=' | otherlv_29= '==' ) ( ( (lv_broken_30_0= 'true' ) ) | otherlv_31= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_32= '&' ( ( ( (lv_castDefined_33_0= '!' ) ) otherlv_34= 'cast' ) | ( ( (lv_castDefined_35_0= 'cast' ) ) ( (otherlv_36= '!=' ( ( (lv_cast_37_0= 'false' ) ) | otherlv_38= 'true' ) ) | ( (otherlv_39= '=' | otherlv_40= '==' ) ( ( (lv_cast_41_0= 'true' ) ) | otherlv_42= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= '&' ( (lv_cooldownDefined_44_0= 'cooldown' ) ) (otherlv_45= '=' | otherlv_46= '==' ) ( (lv_cooldown_47_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_48= '&' ( (lv_damageDefined_49_0= 'damage' ) ) (otherlv_50= '=' | otherlv_51= '==' ) ( (lv_damage_52_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_53= '&' ( ( ( (lv_damagedDefined_54_0= '!' ) ) otherlv_55= 'damaged' ) | ( ( (lv_damagedDefined_56_0= 'damaged' ) ) ( (otherlv_57= '!=' ( ( (lv_damaged_58_0= 'false' ) ) | otherlv_59= 'true' ) ) | ( (otherlv_60= '=' | otherlv_61= '==' ) ( ( (lv_damaged_62_0= 'true' ) ) | otherlv_63= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_64= '&' ( ( ( (lv_lefthandedDefined_65_0= '!' ) ) otherlv_66= 'lefthanded' ) | ( ( (lv_lefthandedDefined_67_0= 'lefthanded' ) ) ( (otherlv_68= '!=' ( ( (lv_lefthanded_69_0= 'false' ) ) | otherlv_70= 'true' ) ) | ( (otherlv_71= '=' | otherlv_72= '==' ) ( ( (lv_lefthanded_73_0= 'true' ) ) | otherlv_74= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_75= '&' ( (lv_pullDefined_76_0= 'pull' ) ) (otherlv_77= '=' | otherlv_78= '==' ) ( (lv_pull_79_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_80= '&' ( ( ( (lv_pullingDefined_81_0= '!' ) ) otherlv_82= 'pulling' ) | ( ( (lv_pullingDefined_83_0= 'pulling' ) ) ( (otherlv_84= '!=' ( ( (lv_pulling_85_0= 'false' ) ) | otherlv_86= 'true' ) ) | ( (otherlv_87= '=' | otherlv_88= '==' ) ( ( (lv_pulling_89_0= 'true' ) ) | otherlv_90= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_91= '&' ( ( ( (lv_throwingDefined_92_0= '!' ) ) otherlv_93= 'throwing' ) | ( ( (lv_throwingDefined_94_0= 'throwing' ) ) ( (otherlv_95= '!=' ( ( (lv_throwing_96_0= 'false' ) ) | otherlv_97= 'true' ) ) | ( (otherlv_98= '=' | otherlv_99= '==' ) ( ( (lv_throwing_100_0= 'true' ) ) | otherlv_101= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_102= '&' ( (lv_timeDefined_103_0= 'time' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_time_106_0= RULE_PERCENTAGE ) ) ) ) ) ) )* ) )
            {
            // InternalMcmodel.g:16453:4: ( ( ( ({...}? => ( ({...}? => (otherlv_5= '&' ( (lv_angleDefined_6_0= 'angle' ) ) (otherlv_7= '=' | otherlv_8= '==' ) ( (lv_angle_9_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= '&' ( ( ( (lv_blockingDefined_11_0= '!' ) ) otherlv_12= 'blocking' ) | ( ( (lv_blockingDefined_13_0= 'blocking' ) ) ( (otherlv_14= '!=' ( ( (lv_blocking_15_0= 'false' ) ) | otherlv_16= 'true' ) ) | ( (otherlv_17= '=' | otherlv_18= '==' ) ( ( (lv_blocking_19_0= 'true' ) ) | otherlv_20= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= '&' ( ( ( (lv_brokenDefined_22_0= '!' ) ) otherlv_23= 'broken' ) | ( ( (lv_brokenDefined_24_0= 'broken' ) ) ( (otherlv_25= '!=' ( ( (lv_broken_26_0= 'false' ) ) | otherlv_27= 'true' ) ) | ( (otherlv_28= '=' | otherlv_29= '==' ) ( ( (lv_broken_30_0= 'true' ) ) | otherlv_31= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_32= '&' ( ( ( (lv_castDefined_33_0= '!' ) ) otherlv_34= 'cast' ) | ( ( (lv_castDefined_35_0= 'cast' ) ) ( (otherlv_36= '!=' ( ( (lv_cast_37_0= 'false' ) ) | otherlv_38= 'true' ) ) | ( (otherlv_39= '=' | otherlv_40= '==' ) ( ( (lv_cast_41_0= 'true' ) ) | otherlv_42= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= '&' ( (lv_cooldownDefined_44_0= 'cooldown' ) ) (otherlv_45= '=' | otherlv_46= '==' ) ( (lv_cooldown_47_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_48= '&' ( (lv_damageDefined_49_0= 'damage' ) ) (otherlv_50= '=' | otherlv_51= '==' ) ( (lv_damage_52_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_53= '&' ( ( ( (lv_damagedDefined_54_0= '!' ) ) otherlv_55= 'damaged' ) | ( ( (lv_damagedDefined_56_0= 'damaged' ) ) ( (otherlv_57= '!=' ( ( (lv_damaged_58_0= 'false' ) ) | otherlv_59= 'true' ) ) | ( (otherlv_60= '=' | otherlv_61= '==' ) ( ( (lv_damaged_62_0= 'true' ) ) | otherlv_63= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_64= '&' ( ( ( (lv_lefthandedDefined_65_0= '!' ) ) otherlv_66= 'lefthanded' ) | ( ( (lv_lefthandedDefined_67_0= 'lefthanded' ) ) ( (otherlv_68= '!=' ( ( (lv_lefthanded_69_0= 'false' ) ) | otherlv_70= 'true' ) ) | ( (otherlv_71= '=' | otherlv_72= '==' ) ( ( (lv_lefthanded_73_0= 'true' ) ) | otherlv_74= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_75= '&' ( (lv_pullDefined_76_0= 'pull' ) ) (otherlv_77= '=' | otherlv_78= '==' ) ( (lv_pull_79_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_80= '&' ( ( ( (lv_pullingDefined_81_0= '!' ) ) otherlv_82= 'pulling' ) | ( ( (lv_pullingDefined_83_0= 'pulling' ) ) ( (otherlv_84= '!=' ( ( (lv_pulling_85_0= 'false' ) ) | otherlv_86= 'true' ) ) | ( (otherlv_87= '=' | otherlv_88= '==' ) ( ( (lv_pulling_89_0= 'true' ) ) | otherlv_90= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_91= '&' ( ( ( (lv_throwingDefined_92_0= '!' ) ) otherlv_93= 'throwing' ) | ( ( (lv_throwingDefined_94_0= 'throwing' ) ) ( (otherlv_95= '!=' ( ( (lv_throwing_96_0= 'false' ) ) | otherlv_97= 'true' ) ) | ( (otherlv_98= '=' | otherlv_99= '==' ) ( ( (lv_throwing_100_0= 'true' ) ) | otherlv_101= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_102= '&' ( (lv_timeDefined_103_0= 'time' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_time_106_0= RULE_PERCENTAGE ) ) ) ) ) ) )* ) )
            // InternalMcmodel.g:16454:5: ( ( ({...}? => ( ({...}? => (otherlv_5= '&' ( (lv_angleDefined_6_0= 'angle' ) ) (otherlv_7= '=' | otherlv_8= '==' ) ( (lv_angle_9_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= '&' ( ( ( (lv_blockingDefined_11_0= '!' ) ) otherlv_12= 'blocking' ) | ( ( (lv_blockingDefined_13_0= 'blocking' ) ) ( (otherlv_14= '!=' ( ( (lv_blocking_15_0= 'false' ) ) | otherlv_16= 'true' ) ) | ( (otherlv_17= '=' | otherlv_18= '==' ) ( ( (lv_blocking_19_0= 'true' ) ) | otherlv_20= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= '&' ( ( ( (lv_brokenDefined_22_0= '!' ) ) otherlv_23= 'broken' ) | ( ( (lv_brokenDefined_24_0= 'broken' ) ) ( (otherlv_25= '!=' ( ( (lv_broken_26_0= 'false' ) ) | otherlv_27= 'true' ) ) | ( (otherlv_28= '=' | otherlv_29= '==' ) ( ( (lv_broken_30_0= 'true' ) ) | otherlv_31= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_32= '&' ( ( ( (lv_castDefined_33_0= '!' ) ) otherlv_34= 'cast' ) | ( ( (lv_castDefined_35_0= 'cast' ) ) ( (otherlv_36= '!=' ( ( (lv_cast_37_0= 'false' ) ) | otherlv_38= 'true' ) ) | ( (otherlv_39= '=' | otherlv_40= '==' ) ( ( (lv_cast_41_0= 'true' ) ) | otherlv_42= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= '&' ( (lv_cooldownDefined_44_0= 'cooldown' ) ) (otherlv_45= '=' | otherlv_46= '==' ) ( (lv_cooldown_47_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_48= '&' ( (lv_damageDefined_49_0= 'damage' ) ) (otherlv_50= '=' | otherlv_51= '==' ) ( (lv_damage_52_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_53= '&' ( ( ( (lv_damagedDefined_54_0= '!' ) ) otherlv_55= 'damaged' ) | ( ( (lv_damagedDefined_56_0= 'damaged' ) ) ( (otherlv_57= '!=' ( ( (lv_damaged_58_0= 'false' ) ) | otherlv_59= 'true' ) ) | ( (otherlv_60= '=' | otherlv_61= '==' ) ( ( (lv_damaged_62_0= 'true' ) ) | otherlv_63= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_64= '&' ( ( ( (lv_lefthandedDefined_65_0= '!' ) ) otherlv_66= 'lefthanded' ) | ( ( (lv_lefthandedDefined_67_0= 'lefthanded' ) ) ( (otherlv_68= '!=' ( ( (lv_lefthanded_69_0= 'false' ) ) | otherlv_70= 'true' ) ) | ( (otherlv_71= '=' | otherlv_72= '==' ) ( ( (lv_lefthanded_73_0= 'true' ) ) | otherlv_74= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_75= '&' ( (lv_pullDefined_76_0= 'pull' ) ) (otherlv_77= '=' | otherlv_78= '==' ) ( (lv_pull_79_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_80= '&' ( ( ( (lv_pullingDefined_81_0= '!' ) ) otherlv_82= 'pulling' ) | ( ( (lv_pullingDefined_83_0= 'pulling' ) ) ( (otherlv_84= '!=' ( ( (lv_pulling_85_0= 'false' ) ) | otherlv_86= 'true' ) ) | ( (otherlv_87= '=' | otherlv_88= '==' ) ( ( (lv_pulling_89_0= 'true' ) ) | otherlv_90= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_91= '&' ( ( ( (lv_throwingDefined_92_0= '!' ) ) otherlv_93= 'throwing' ) | ( ( (lv_throwingDefined_94_0= 'throwing' ) ) ( (otherlv_95= '!=' ( ( (lv_throwing_96_0= 'false' ) ) | otherlv_97= 'true' ) ) | ( (otherlv_98= '=' | otherlv_99= '==' ) ( ( (lv_throwing_100_0= 'true' ) ) | otherlv_101= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_102= '&' ( (lv_timeDefined_103_0= 'time' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_time_106_0= RULE_PERCENTAGE ) ) ) ) ) ) )* )
            {
            getUnorderedGroupHelper().enter(grammarAccess.getOverridePredicate_13Access().getUnorderedGroup_3());
            // InternalMcmodel.g:16457:5: ( ( ({...}? => ( ({...}? => (otherlv_5= '&' ( (lv_angleDefined_6_0= 'angle' ) ) (otherlv_7= '=' | otherlv_8= '==' ) ( (lv_angle_9_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= '&' ( ( ( (lv_blockingDefined_11_0= '!' ) ) otherlv_12= 'blocking' ) | ( ( (lv_blockingDefined_13_0= 'blocking' ) ) ( (otherlv_14= '!=' ( ( (lv_blocking_15_0= 'false' ) ) | otherlv_16= 'true' ) ) | ( (otherlv_17= '=' | otherlv_18= '==' ) ( ( (lv_blocking_19_0= 'true' ) ) | otherlv_20= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= '&' ( ( ( (lv_brokenDefined_22_0= '!' ) ) otherlv_23= 'broken' ) | ( ( (lv_brokenDefined_24_0= 'broken' ) ) ( (otherlv_25= '!=' ( ( (lv_broken_26_0= 'false' ) ) | otherlv_27= 'true' ) ) | ( (otherlv_28= '=' | otherlv_29= '==' ) ( ( (lv_broken_30_0= 'true' ) ) | otherlv_31= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_32= '&' ( ( ( (lv_castDefined_33_0= '!' ) ) otherlv_34= 'cast' ) | ( ( (lv_castDefined_35_0= 'cast' ) ) ( (otherlv_36= '!=' ( ( (lv_cast_37_0= 'false' ) ) | otherlv_38= 'true' ) ) | ( (otherlv_39= '=' | otherlv_40= '==' ) ( ( (lv_cast_41_0= 'true' ) ) | otherlv_42= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= '&' ( (lv_cooldownDefined_44_0= 'cooldown' ) ) (otherlv_45= '=' | otherlv_46= '==' ) ( (lv_cooldown_47_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_48= '&' ( (lv_damageDefined_49_0= 'damage' ) ) (otherlv_50= '=' | otherlv_51= '==' ) ( (lv_damage_52_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_53= '&' ( ( ( (lv_damagedDefined_54_0= '!' ) ) otherlv_55= 'damaged' ) | ( ( (lv_damagedDefined_56_0= 'damaged' ) ) ( (otherlv_57= '!=' ( ( (lv_damaged_58_0= 'false' ) ) | otherlv_59= 'true' ) ) | ( (otherlv_60= '=' | otherlv_61= '==' ) ( ( (lv_damaged_62_0= 'true' ) ) | otherlv_63= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_64= '&' ( ( ( (lv_lefthandedDefined_65_0= '!' ) ) otherlv_66= 'lefthanded' ) | ( ( (lv_lefthandedDefined_67_0= 'lefthanded' ) ) ( (otherlv_68= '!=' ( ( (lv_lefthanded_69_0= 'false' ) ) | otherlv_70= 'true' ) ) | ( (otherlv_71= '=' | otherlv_72= '==' ) ( ( (lv_lefthanded_73_0= 'true' ) ) | otherlv_74= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_75= '&' ( (lv_pullDefined_76_0= 'pull' ) ) (otherlv_77= '=' | otherlv_78= '==' ) ( (lv_pull_79_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_80= '&' ( ( ( (lv_pullingDefined_81_0= '!' ) ) otherlv_82= 'pulling' ) | ( ( (lv_pullingDefined_83_0= 'pulling' ) ) ( (otherlv_84= '!=' ( ( (lv_pulling_85_0= 'false' ) ) | otherlv_86= 'true' ) ) | ( (otherlv_87= '=' | otherlv_88= '==' ) ( ( (lv_pulling_89_0= 'true' ) ) | otherlv_90= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_91= '&' ( ( ( (lv_throwingDefined_92_0= '!' ) ) otherlv_93= 'throwing' ) | ( ( (lv_throwingDefined_94_0= 'throwing' ) ) ( (otherlv_95= '!=' ( ( (lv_throwing_96_0= 'false' ) ) | otherlv_97= 'true' ) ) | ( (otherlv_98= '=' | otherlv_99= '==' ) ( ( (lv_throwing_100_0= 'true' ) ) | otherlv_101= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_102= '&' ( (lv_timeDefined_103_0= 'time' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_time_106_0= RULE_PERCENTAGE ) ) ) ) ) ) )* )
            // InternalMcmodel.g:16458:6: ( ({...}? => ( ({...}? => (otherlv_5= '&' ( (lv_angleDefined_6_0= 'angle' ) ) (otherlv_7= '=' | otherlv_8= '==' ) ( (lv_angle_9_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= '&' ( ( ( (lv_blockingDefined_11_0= '!' ) ) otherlv_12= 'blocking' ) | ( ( (lv_blockingDefined_13_0= 'blocking' ) ) ( (otherlv_14= '!=' ( ( (lv_blocking_15_0= 'false' ) ) | otherlv_16= 'true' ) ) | ( (otherlv_17= '=' | otherlv_18= '==' ) ( ( (lv_blocking_19_0= 'true' ) ) | otherlv_20= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= '&' ( ( ( (lv_brokenDefined_22_0= '!' ) ) otherlv_23= 'broken' ) | ( ( (lv_brokenDefined_24_0= 'broken' ) ) ( (otherlv_25= '!=' ( ( (lv_broken_26_0= 'false' ) ) | otherlv_27= 'true' ) ) | ( (otherlv_28= '=' | otherlv_29= '==' ) ( ( (lv_broken_30_0= 'true' ) ) | otherlv_31= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_32= '&' ( ( ( (lv_castDefined_33_0= '!' ) ) otherlv_34= 'cast' ) | ( ( (lv_castDefined_35_0= 'cast' ) ) ( (otherlv_36= '!=' ( ( (lv_cast_37_0= 'false' ) ) | otherlv_38= 'true' ) ) | ( (otherlv_39= '=' | otherlv_40= '==' ) ( ( (lv_cast_41_0= 'true' ) ) | otherlv_42= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= '&' ( (lv_cooldownDefined_44_0= 'cooldown' ) ) (otherlv_45= '=' | otherlv_46= '==' ) ( (lv_cooldown_47_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_48= '&' ( (lv_damageDefined_49_0= 'damage' ) ) (otherlv_50= '=' | otherlv_51= '==' ) ( (lv_damage_52_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_53= '&' ( ( ( (lv_damagedDefined_54_0= '!' ) ) otherlv_55= 'damaged' ) | ( ( (lv_damagedDefined_56_0= 'damaged' ) ) ( (otherlv_57= '!=' ( ( (lv_damaged_58_0= 'false' ) ) | otherlv_59= 'true' ) ) | ( (otherlv_60= '=' | otherlv_61= '==' ) ( ( (lv_damaged_62_0= 'true' ) ) | otherlv_63= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_64= '&' ( ( ( (lv_lefthandedDefined_65_0= '!' ) ) otherlv_66= 'lefthanded' ) | ( ( (lv_lefthandedDefined_67_0= 'lefthanded' ) ) ( (otherlv_68= '!=' ( ( (lv_lefthanded_69_0= 'false' ) ) | otherlv_70= 'true' ) ) | ( (otherlv_71= '=' | otherlv_72= '==' ) ( ( (lv_lefthanded_73_0= 'true' ) ) | otherlv_74= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_75= '&' ( (lv_pullDefined_76_0= 'pull' ) ) (otherlv_77= '=' | otherlv_78= '==' ) ( (lv_pull_79_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_80= '&' ( ( ( (lv_pullingDefined_81_0= '!' ) ) otherlv_82= 'pulling' ) | ( ( (lv_pullingDefined_83_0= 'pulling' ) ) ( (otherlv_84= '!=' ( ( (lv_pulling_85_0= 'false' ) ) | otherlv_86= 'true' ) ) | ( (otherlv_87= '=' | otherlv_88= '==' ) ( ( (lv_pulling_89_0= 'true' ) ) | otherlv_90= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_91= '&' ( ( ( (lv_throwingDefined_92_0= '!' ) ) otherlv_93= 'throwing' ) | ( ( (lv_throwingDefined_94_0= 'throwing' ) ) ( (otherlv_95= '!=' ( ( (lv_throwing_96_0= 'false' ) ) | otherlv_97= 'true' ) ) | ( (otherlv_98= '=' | otherlv_99= '==' ) ( ( (lv_throwing_100_0= 'true' ) ) | otherlv_101= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_102= '&' ( (lv_timeDefined_103_0= 'time' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_time_106_0= RULE_PERCENTAGE ) ) ) ) ) ) )*
            {
            // InternalMcmodel.g:16458:6: ( ({...}? => ( ({...}? => (otherlv_5= '&' ( (lv_angleDefined_6_0= 'angle' ) ) (otherlv_7= '=' | otherlv_8= '==' ) ( (lv_angle_9_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= '&' ( ( ( (lv_blockingDefined_11_0= '!' ) ) otherlv_12= 'blocking' ) | ( ( (lv_blockingDefined_13_0= 'blocking' ) ) ( (otherlv_14= '!=' ( ( (lv_blocking_15_0= 'false' ) ) | otherlv_16= 'true' ) ) | ( (otherlv_17= '=' | otherlv_18= '==' ) ( ( (lv_blocking_19_0= 'true' ) ) | otherlv_20= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= '&' ( ( ( (lv_brokenDefined_22_0= '!' ) ) otherlv_23= 'broken' ) | ( ( (lv_brokenDefined_24_0= 'broken' ) ) ( (otherlv_25= '!=' ( ( (lv_broken_26_0= 'false' ) ) | otherlv_27= 'true' ) ) | ( (otherlv_28= '=' | otherlv_29= '==' ) ( ( (lv_broken_30_0= 'true' ) ) | otherlv_31= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_32= '&' ( ( ( (lv_castDefined_33_0= '!' ) ) otherlv_34= 'cast' ) | ( ( (lv_castDefined_35_0= 'cast' ) ) ( (otherlv_36= '!=' ( ( (lv_cast_37_0= 'false' ) ) | otherlv_38= 'true' ) ) | ( (otherlv_39= '=' | otherlv_40= '==' ) ( ( (lv_cast_41_0= 'true' ) ) | otherlv_42= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= '&' ( (lv_cooldownDefined_44_0= 'cooldown' ) ) (otherlv_45= '=' | otherlv_46= '==' ) ( (lv_cooldown_47_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_48= '&' ( (lv_damageDefined_49_0= 'damage' ) ) (otherlv_50= '=' | otherlv_51= '==' ) ( (lv_damage_52_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_53= '&' ( ( ( (lv_damagedDefined_54_0= '!' ) ) otherlv_55= 'damaged' ) | ( ( (lv_damagedDefined_56_0= 'damaged' ) ) ( (otherlv_57= '!=' ( ( (lv_damaged_58_0= 'false' ) ) | otherlv_59= 'true' ) ) | ( (otherlv_60= '=' | otherlv_61= '==' ) ( ( (lv_damaged_62_0= 'true' ) ) | otherlv_63= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_64= '&' ( ( ( (lv_lefthandedDefined_65_0= '!' ) ) otherlv_66= 'lefthanded' ) | ( ( (lv_lefthandedDefined_67_0= 'lefthanded' ) ) ( (otherlv_68= '!=' ( ( (lv_lefthanded_69_0= 'false' ) ) | otherlv_70= 'true' ) ) | ( (otherlv_71= '=' | otherlv_72= '==' ) ( ( (lv_lefthanded_73_0= 'true' ) ) | otherlv_74= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_75= '&' ( (lv_pullDefined_76_0= 'pull' ) ) (otherlv_77= '=' | otherlv_78= '==' ) ( (lv_pull_79_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_80= '&' ( ( ( (lv_pullingDefined_81_0= '!' ) ) otherlv_82= 'pulling' ) | ( ( (lv_pullingDefined_83_0= 'pulling' ) ) ( (otherlv_84= '!=' ( ( (lv_pulling_85_0= 'false' ) ) | otherlv_86= 'true' ) ) | ( (otherlv_87= '=' | otherlv_88= '==' ) ( ( (lv_pulling_89_0= 'true' ) ) | otherlv_90= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_91= '&' ( ( ( (lv_throwingDefined_92_0= '!' ) ) otherlv_93= 'throwing' ) | ( ( (lv_throwingDefined_94_0= 'throwing' ) ) ( (otherlv_95= '!=' ( ( (lv_throwing_96_0= 'false' ) ) | otherlv_97= 'true' ) ) | ( (otherlv_98= '=' | otherlv_99= '==' ) ( ( (lv_throwing_100_0= 'true' ) ) | otherlv_101= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_102= '&' ( (lv_timeDefined_103_0= 'time' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_time_106_0= RULE_PERCENTAGE ) ) ) ) ) ) )*
            loop567:
            do {
                int alt567=13;
                alt567 = dfa567.predict(input);
                switch (alt567) {
            	case 1 :
            	    // InternalMcmodel.g:16459:4: ({...}? => ( ({...}? => (otherlv_5= '&' ( (lv_angleDefined_6_0= 'angle' ) ) (otherlv_7= '=' | otherlv_8= '==' ) ( (lv_angle_9_0= RULE_PERCENTAGE ) ) ) ) ) )
            	    {
            	    // InternalMcmodel.g:16459:4: ({...}? => ( ({...}? => (otherlv_5= '&' ( (lv_angleDefined_6_0= 'angle' ) ) (otherlv_7= '=' | otherlv_8= '==' ) ( (lv_angle_9_0= RULE_PERCENTAGE ) ) ) ) ) )
            	    // InternalMcmodel.g:16460:5: {...}? => ( ({...}? => (otherlv_5= '&' ( (lv_angleDefined_6_0= 'angle' ) ) (otherlv_7= '=' | otherlv_8= '==' ) ( (lv_angle_9_0= RULE_PERCENTAGE ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_13Access().getUnorderedGroup_3(), 0) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_13", "getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_13Access().getUnorderedGroup_3(), 0)");
            	    }
            	    // InternalMcmodel.g:16460:117: ( ({...}? => (otherlv_5= '&' ( (lv_angleDefined_6_0= 'angle' ) ) (otherlv_7= '=' | otherlv_8= '==' ) ( (lv_angle_9_0= RULE_PERCENTAGE ) ) ) ) )
            	    // InternalMcmodel.g:16461:6: ({...}? => (otherlv_5= '&' ( (lv_angleDefined_6_0= 'angle' ) ) (otherlv_7= '=' | otherlv_8= '==' ) ( (lv_angle_9_0= RULE_PERCENTAGE ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getOverridePredicate_13Access().getUnorderedGroup_3(), 0);
            	    // InternalMcmodel.g:16464:9: ({...}? => (otherlv_5= '&' ( (lv_angleDefined_6_0= 'angle' ) ) (otherlv_7= '=' | otherlv_8= '==' ) ( (lv_angle_9_0= RULE_PERCENTAGE ) ) ) )
            	    // InternalMcmodel.g:16464:10: {...}? => (otherlv_5= '&' ( (lv_angleDefined_6_0= 'angle' ) ) (otherlv_7= '=' | otherlv_8= '==' ) ( (lv_angle_9_0= RULE_PERCENTAGE ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_13", "true");
            	    }
            	    // InternalMcmodel.g:16464:19: (otherlv_5= '&' ( (lv_angleDefined_6_0= 'angle' ) ) (otherlv_7= '=' | otherlv_8= '==' ) ( (lv_angle_9_0= RULE_PERCENTAGE ) ) )
            	    // InternalMcmodel.g:16464:20: otherlv_5= '&' ( (lv_angleDefined_6_0= 'angle' ) ) (otherlv_7= '=' | otherlv_8= '==' ) ( (lv_angle_9_0= RULE_PERCENTAGE ) )
            	    {
            	    otherlv_5=(Token)match(input,59,FOLLOW_58); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_5, grammarAccess.getOverridePredicate_13Access().getAmpersandKeyword_3_0_0());
            	      								
            	    }
            	    // InternalMcmodel.g:16468:9: ( (lv_angleDefined_6_0= 'angle' ) )
            	    // InternalMcmodel.g:16469:10: (lv_angleDefined_6_0= 'angle' )
            	    {
            	    // InternalMcmodel.g:16469:10: (lv_angleDefined_6_0= 'angle' )
            	    // InternalMcmodel.g:16470:11: lv_angleDefined_6_0= 'angle'
            	    {
            	    lv_angleDefined_6_0=(Token)match(input,38,FOLLOW_35); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											newLeafNode(lv_angleDefined_6_0, grammarAccess.getOverridePredicate_13Access().getAngleDefinedAngleKeyword_3_0_1_0());
            	      										
            	    }
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElement(grammarAccess.getOverridePredicate_13Rule());
            	      											}
            	      											setWithLastConsumed(current, "angleDefined", true, "angle");
            	      										
            	    }

            	    }


            	    }

            	    // InternalMcmodel.g:16482:9: (otherlv_7= '=' | otherlv_8= '==' )
            	    int alt527=2;
            	    int LA527_0 = input.LA(1);

            	    if ( (LA527_0==18) ) {
            	        alt527=1;
            	    }
            	    else if ( (LA527_0==58) ) {
            	        alt527=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 527, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt527) {
            	        case 1 :
            	            // InternalMcmodel.g:16483:10: otherlv_7= '='
            	            {
            	            otherlv_7=(Token)match(input,18,FOLLOW_36); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(otherlv_7, grammarAccess.getOverridePredicate_13Access().getEqualsSignKeyword_3_0_2_0());
            	              									
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalMcmodel.g:16488:10: otherlv_8= '=='
            	            {
            	            otherlv_8=(Token)match(input,58,FOLLOW_36); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(otherlv_8, grammarAccess.getOverridePredicate_13Access().getEqualsSignEqualsSignKeyword_3_0_2_1());
            	              									
            	            }

            	            }
            	            break;

            	    }

            	    // InternalMcmodel.g:16493:9: ( (lv_angle_9_0= RULE_PERCENTAGE ) )
            	    // InternalMcmodel.g:16494:10: (lv_angle_9_0= RULE_PERCENTAGE )
            	    {
            	    // InternalMcmodel.g:16494:10: (lv_angle_9_0= RULE_PERCENTAGE )
            	    // InternalMcmodel.g:16495:11: lv_angle_9_0= RULE_PERCENTAGE
            	    {
            	    lv_angle_9_0=(Token)match(input,RULE_PERCENTAGE,FOLLOW_37); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											newLeafNode(lv_angle_9_0, grammarAccess.getOverridePredicate_13Access().getAnglePERCENTAGETerminalRuleCall_3_0_3_0());
            	      										
            	    }
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElement(grammarAccess.getOverridePredicate_13Rule());
            	      											}
            	      											setWithLastConsumed(
            	      												current,
            	      												"angle",
            	      												lv_angle_9_0,
            	      												"com.raptor.mcmodel.Mcmodel.PERCENTAGE");
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getOverridePredicate_13Access().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // InternalMcmodel.g:16517:4: ({...}? => ( ({...}? => (otherlv_10= '&' ( ( ( (lv_blockingDefined_11_0= '!' ) ) otherlv_12= 'blocking' ) | ( ( (lv_blockingDefined_13_0= 'blocking' ) ) ( (otherlv_14= '!=' ( ( (lv_blocking_15_0= 'false' ) ) | otherlv_16= 'true' ) ) | ( (otherlv_17= '=' | otherlv_18= '==' ) ( ( (lv_blocking_19_0= 'true' ) ) | otherlv_20= 'false' ) ) ) ) ) ) ) ) )
            	    {
            	    // InternalMcmodel.g:16517:4: ({...}? => ( ({...}? => (otherlv_10= '&' ( ( ( (lv_blockingDefined_11_0= '!' ) ) otherlv_12= 'blocking' ) | ( ( (lv_blockingDefined_13_0= 'blocking' ) ) ( (otherlv_14= '!=' ( ( (lv_blocking_15_0= 'false' ) ) | otherlv_16= 'true' ) ) | ( (otherlv_17= '=' | otherlv_18= '==' ) ( ( (lv_blocking_19_0= 'true' ) ) | otherlv_20= 'false' ) ) ) ) ) ) ) ) )
            	    // InternalMcmodel.g:16518:5: {...}? => ( ({...}? => (otherlv_10= '&' ( ( ( (lv_blockingDefined_11_0= '!' ) ) otherlv_12= 'blocking' ) | ( ( (lv_blockingDefined_13_0= 'blocking' ) ) ( (otherlv_14= '!=' ( ( (lv_blocking_15_0= 'false' ) ) | otherlv_16= 'true' ) ) | ( (otherlv_17= '=' | otherlv_18= '==' ) ( ( (lv_blocking_19_0= 'true' ) ) | otherlv_20= 'false' ) ) ) ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_13Access().getUnorderedGroup_3(), 1) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_13", "getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_13Access().getUnorderedGroup_3(), 1)");
            	    }
            	    // InternalMcmodel.g:16518:117: ( ({...}? => (otherlv_10= '&' ( ( ( (lv_blockingDefined_11_0= '!' ) ) otherlv_12= 'blocking' ) | ( ( (lv_blockingDefined_13_0= 'blocking' ) ) ( (otherlv_14= '!=' ( ( (lv_blocking_15_0= 'false' ) ) | otherlv_16= 'true' ) ) | ( (otherlv_17= '=' | otherlv_18= '==' ) ( ( (lv_blocking_19_0= 'true' ) ) | otherlv_20= 'false' ) ) ) ) ) ) ) )
            	    // InternalMcmodel.g:16519:6: ({...}? => (otherlv_10= '&' ( ( ( (lv_blockingDefined_11_0= '!' ) ) otherlv_12= 'blocking' ) | ( ( (lv_blockingDefined_13_0= 'blocking' ) ) ( (otherlv_14= '!=' ( ( (lv_blocking_15_0= 'false' ) ) | otherlv_16= 'true' ) ) | ( (otherlv_17= '=' | otherlv_18= '==' ) ( ( (lv_blocking_19_0= 'true' ) ) | otherlv_20= 'false' ) ) ) ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getOverridePredicate_13Access().getUnorderedGroup_3(), 1);
            	    // InternalMcmodel.g:16522:9: ({...}? => (otherlv_10= '&' ( ( ( (lv_blockingDefined_11_0= '!' ) ) otherlv_12= 'blocking' ) | ( ( (lv_blockingDefined_13_0= 'blocking' ) ) ( (otherlv_14= '!=' ( ( (lv_blocking_15_0= 'false' ) ) | otherlv_16= 'true' ) ) | ( (otherlv_17= '=' | otherlv_18= '==' ) ( ( (lv_blocking_19_0= 'true' ) ) | otherlv_20= 'false' ) ) ) ) ) ) )
            	    // InternalMcmodel.g:16522:10: {...}? => (otherlv_10= '&' ( ( ( (lv_blockingDefined_11_0= '!' ) ) otherlv_12= 'blocking' ) | ( ( (lv_blockingDefined_13_0= 'blocking' ) ) ( (otherlv_14= '!=' ( ( (lv_blocking_15_0= 'false' ) ) | otherlv_16= 'true' ) ) | ( (otherlv_17= '=' | otherlv_18= '==' ) ( ( (lv_blocking_19_0= 'true' ) ) | otherlv_20= 'false' ) ) ) ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_13", "true");
            	    }
            	    // InternalMcmodel.g:16522:19: (otherlv_10= '&' ( ( ( (lv_blockingDefined_11_0= '!' ) ) otherlv_12= 'blocking' ) | ( ( (lv_blockingDefined_13_0= 'blocking' ) ) ( (otherlv_14= '!=' ( ( (lv_blocking_15_0= 'false' ) ) | otherlv_16= 'true' ) ) | ( (otherlv_17= '=' | otherlv_18= '==' ) ( ( (lv_blocking_19_0= 'true' ) ) | otherlv_20= 'false' ) ) ) ) ) )
            	    // InternalMcmodel.g:16522:20: otherlv_10= '&' ( ( ( (lv_blockingDefined_11_0= '!' ) ) otherlv_12= 'blocking' ) | ( ( (lv_blockingDefined_13_0= 'blocking' ) ) ( (otherlv_14= '!=' ( ( (lv_blocking_15_0= 'false' ) ) | otherlv_16= 'true' ) ) | ( (otherlv_17= '=' | otherlv_18= '==' ) ( ( (lv_blocking_19_0= 'true' ) ) | otherlv_20= 'false' ) ) ) ) )
            	    {
            	    otherlv_10=(Token)match(input,59,FOLLOW_38); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_10, grammarAccess.getOverridePredicate_13Access().getAmpersandKeyword_3_1_0());
            	      								
            	    }
            	    // InternalMcmodel.g:16526:9: ( ( ( (lv_blockingDefined_11_0= '!' ) ) otherlv_12= 'blocking' ) | ( ( (lv_blockingDefined_13_0= 'blocking' ) ) ( (otherlv_14= '!=' ( ( (lv_blocking_15_0= 'false' ) ) | otherlv_16= 'true' ) ) | ( (otherlv_17= '=' | otherlv_18= '==' ) ( ( (lv_blocking_19_0= 'true' ) ) | otherlv_20= 'false' ) ) ) ) )
            	    int alt532=2;
            	    int LA532_0 = input.LA(1);

            	    if ( (LA532_0==60) ) {
            	        alt532=1;
            	    }
            	    else if ( (LA532_0==61) ) {
            	        alt532=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 532, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt532) {
            	        case 1 :
            	            // InternalMcmodel.g:16527:10: ( ( (lv_blockingDefined_11_0= '!' ) ) otherlv_12= 'blocking' )
            	            {
            	            // InternalMcmodel.g:16527:10: ( ( (lv_blockingDefined_11_0= '!' ) ) otherlv_12= 'blocking' )
            	            // InternalMcmodel.g:16528:11: ( (lv_blockingDefined_11_0= '!' ) ) otherlv_12= 'blocking'
            	            {
            	            // InternalMcmodel.g:16528:11: ( (lv_blockingDefined_11_0= '!' ) )
            	            // InternalMcmodel.g:16529:12: (lv_blockingDefined_11_0= '!' )
            	            {
            	            // InternalMcmodel.g:16529:12: (lv_blockingDefined_11_0= '!' )
            	            // InternalMcmodel.g:16530:13: lv_blockingDefined_11_0= '!'
            	            {
            	            lv_blockingDefined_11_0=(Token)match(input,60,FOLLOW_39); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              													newLeafNode(lv_blockingDefined_11_0, grammarAccess.getOverridePredicate_13Access().getBlockingDefinedExclamationMarkKeyword_3_1_1_0_0_0());
            	              												
            	            }
            	            if ( state.backtracking==0 ) {

            	              													if (current==null) {
            	              														current = createModelElement(grammarAccess.getOverridePredicate_13Rule());
            	              													}
            	              													setWithLastConsumed(current, "blockingDefined", true, "!");
            	              												
            	            }

            	            }


            	            }

            	            otherlv_12=(Token)match(input,61,FOLLOW_37); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              											newLeafNode(otherlv_12, grammarAccess.getOverridePredicate_13Access().getBlockingKeyword_3_1_1_0_1());
            	              										
            	            }

            	            }


            	            }
            	            break;
            	        case 2 :
            	            // InternalMcmodel.g:16548:10: ( ( (lv_blockingDefined_13_0= 'blocking' ) ) ( (otherlv_14= '!=' ( ( (lv_blocking_15_0= 'false' ) ) | otherlv_16= 'true' ) ) | ( (otherlv_17= '=' | otherlv_18= '==' ) ( ( (lv_blocking_19_0= 'true' ) ) | otherlv_20= 'false' ) ) ) )
            	            {
            	            // InternalMcmodel.g:16548:10: ( ( (lv_blockingDefined_13_0= 'blocking' ) ) ( (otherlv_14= '!=' ( ( (lv_blocking_15_0= 'false' ) ) | otherlv_16= 'true' ) ) | ( (otherlv_17= '=' | otherlv_18= '==' ) ( ( (lv_blocking_19_0= 'true' ) ) | otherlv_20= 'false' ) ) ) )
            	            // InternalMcmodel.g:16549:11: ( (lv_blockingDefined_13_0= 'blocking' ) ) ( (otherlv_14= '!=' ( ( (lv_blocking_15_0= 'false' ) ) | otherlv_16= 'true' ) ) | ( (otherlv_17= '=' | otherlv_18= '==' ) ( ( (lv_blocking_19_0= 'true' ) ) | otherlv_20= 'false' ) ) )
            	            {
            	            // InternalMcmodel.g:16549:11: ( (lv_blockingDefined_13_0= 'blocking' ) )
            	            // InternalMcmodel.g:16550:12: (lv_blockingDefined_13_0= 'blocking' )
            	            {
            	            // InternalMcmodel.g:16550:12: (lv_blockingDefined_13_0= 'blocking' )
            	            // InternalMcmodel.g:16551:13: lv_blockingDefined_13_0= 'blocking'
            	            {
            	            lv_blockingDefined_13_0=(Token)match(input,61,FOLLOW_40); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              													newLeafNode(lv_blockingDefined_13_0, grammarAccess.getOverridePredicate_13Access().getBlockingDefinedBlockingKeyword_3_1_1_1_0_0());
            	              												
            	            }
            	            if ( state.backtracking==0 ) {

            	              													if (current==null) {
            	              														current = createModelElement(grammarAccess.getOverridePredicate_13Rule());
            	              													}
            	              													setWithLastConsumed(current, "blockingDefined", true, "blocking");
            	              												
            	            }

            	            }


            	            }

            	            // InternalMcmodel.g:16563:11: ( (otherlv_14= '!=' ( ( (lv_blocking_15_0= 'false' ) ) | otherlv_16= 'true' ) ) | ( (otherlv_17= '=' | otherlv_18= '==' ) ( ( (lv_blocking_19_0= 'true' ) ) | otherlv_20= 'false' ) ) )
            	            int alt531=2;
            	            int LA531_0 = input.LA(1);

            	            if ( (LA531_0==62) ) {
            	                alt531=1;
            	            }
            	            else if ( (LA531_0==18||LA531_0==58) ) {
            	                alt531=2;
            	            }
            	            else {
            	                if (state.backtracking>0) {state.failed=true; return current;}
            	                NoViableAltException nvae =
            	                    new NoViableAltException("", 531, 0, input);

            	                throw nvae;
            	            }
            	            switch (alt531) {
            	                case 1 :
            	                    // InternalMcmodel.g:16564:12: (otherlv_14= '!=' ( ( (lv_blocking_15_0= 'false' ) ) | otherlv_16= 'true' ) )
            	                    {
            	                    // InternalMcmodel.g:16564:12: (otherlv_14= '!=' ( ( (lv_blocking_15_0= 'false' ) ) | otherlv_16= 'true' ) )
            	                    // InternalMcmodel.g:16565:13: otherlv_14= '!=' ( ( (lv_blocking_15_0= 'false' ) ) | otherlv_16= 'true' )
            	                    {
            	                    otherlv_14=(Token)match(input,62,FOLLOW_7); if (state.failed) return current;
            	                    if ( state.backtracking==0 ) {

            	                      													newLeafNode(otherlv_14, grammarAccess.getOverridePredicate_13Access().getExclamationMarkEqualsSignKeyword_3_1_1_1_1_0_0());
            	                      												
            	                    }
            	                    // InternalMcmodel.g:16569:13: ( ( (lv_blocking_15_0= 'false' ) ) | otherlv_16= 'true' )
            	                    int alt528=2;
            	                    int LA528_0 = input.LA(1);

            	                    if ( (LA528_0==21) ) {
            	                        alt528=1;
            	                    }
            	                    else if ( (LA528_0==20) ) {
            	                        alt528=2;
            	                    }
            	                    else {
            	                        if (state.backtracking>0) {state.failed=true; return current;}
            	                        NoViableAltException nvae =
            	                            new NoViableAltException("", 528, 0, input);

            	                        throw nvae;
            	                    }
            	                    switch (alt528) {
            	                        case 1 :
            	                            // InternalMcmodel.g:16570:14: ( (lv_blocking_15_0= 'false' ) )
            	                            {
            	                            // InternalMcmodel.g:16570:14: ( (lv_blocking_15_0= 'false' ) )
            	                            // InternalMcmodel.g:16571:15: (lv_blocking_15_0= 'false' )
            	                            {
            	                            // InternalMcmodel.g:16571:15: (lv_blocking_15_0= 'false' )
            	                            // InternalMcmodel.g:16572:16: lv_blocking_15_0= 'false'
            	                            {
            	                            lv_blocking_15_0=(Token)match(input,21,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              																newLeafNode(lv_blocking_15_0, grammarAccess.getOverridePredicate_13Access().getBlockingFalseKeyword_3_1_1_1_1_0_1_0_0());
            	                              															
            	                            }
            	                            if ( state.backtracking==0 ) {

            	                              																if (current==null) {
            	                              																	current = createModelElement(grammarAccess.getOverridePredicate_13Rule());
            	                              																}
            	                              																setWithLastConsumed(current, "blocking", true, "false");
            	                              															
            	                            }

            	                            }


            	                            }


            	                            }
            	                            break;
            	                        case 2 :
            	                            // InternalMcmodel.g:16585:14: otherlv_16= 'true'
            	                            {
            	                            otherlv_16=(Token)match(input,20,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_16, grammarAccess.getOverridePredicate_13Access().getTrueKeyword_3_1_1_1_1_0_1_1());
            	                              													
            	                            }

            	                            }
            	                            break;

            	                    }


            	                    }


            	                    }
            	                    break;
            	                case 2 :
            	                    // InternalMcmodel.g:16592:12: ( (otherlv_17= '=' | otherlv_18= '==' ) ( ( (lv_blocking_19_0= 'true' ) ) | otherlv_20= 'false' ) )
            	                    {
            	                    // InternalMcmodel.g:16592:12: ( (otherlv_17= '=' | otherlv_18= '==' ) ( ( (lv_blocking_19_0= 'true' ) ) | otherlv_20= 'false' ) )
            	                    // InternalMcmodel.g:16593:13: (otherlv_17= '=' | otherlv_18= '==' ) ( ( (lv_blocking_19_0= 'true' ) ) | otherlv_20= 'false' )
            	                    {
            	                    // InternalMcmodel.g:16593:13: (otherlv_17= '=' | otherlv_18= '==' )
            	                    int alt529=2;
            	                    int LA529_0 = input.LA(1);

            	                    if ( (LA529_0==18) ) {
            	                        alt529=1;
            	                    }
            	                    else if ( (LA529_0==58) ) {
            	                        alt529=2;
            	                    }
            	                    else {
            	                        if (state.backtracking>0) {state.failed=true; return current;}
            	                        NoViableAltException nvae =
            	                            new NoViableAltException("", 529, 0, input);

            	                        throw nvae;
            	                    }
            	                    switch (alt529) {
            	                        case 1 :
            	                            // InternalMcmodel.g:16594:14: otherlv_17= '='
            	                            {
            	                            otherlv_17=(Token)match(input,18,FOLLOW_7); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_17, grammarAccess.getOverridePredicate_13Access().getEqualsSignKeyword_3_1_1_1_1_1_0_0());
            	                              													
            	                            }

            	                            }
            	                            break;
            	                        case 2 :
            	                            // InternalMcmodel.g:16599:14: otherlv_18= '=='
            	                            {
            	                            otherlv_18=(Token)match(input,58,FOLLOW_7); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_18, grammarAccess.getOverridePredicate_13Access().getEqualsSignEqualsSignKeyword_3_1_1_1_1_1_0_1());
            	                              													
            	                            }

            	                            }
            	                            break;

            	                    }

            	                    // InternalMcmodel.g:16604:13: ( ( (lv_blocking_19_0= 'true' ) ) | otherlv_20= 'false' )
            	                    int alt530=2;
            	                    int LA530_0 = input.LA(1);

            	                    if ( (LA530_0==20) ) {
            	                        alt530=1;
            	                    }
            	                    else if ( (LA530_0==21) ) {
            	                        alt530=2;
            	                    }
            	                    else {
            	                        if (state.backtracking>0) {state.failed=true; return current;}
            	                        NoViableAltException nvae =
            	                            new NoViableAltException("", 530, 0, input);

            	                        throw nvae;
            	                    }
            	                    switch (alt530) {
            	                        case 1 :
            	                            // InternalMcmodel.g:16605:14: ( (lv_blocking_19_0= 'true' ) )
            	                            {
            	                            // InternalMcmodel.g:16605:14: ( (lv_blocking_19_0= 'true' ) )
            	                            // InternalMcmodel.g:16606:15: (lv_blocking_19_0= 'true' )
            	                            {
            	                            // InternalMcmodel.g:16606:15: (lv_blocking_19_0= 'true' )
            	                            // InternalMcmodel.g:16607:16: lv_blocking_19_0= 'true'
            	                            {
            	                            lv_blocking_19_0=(Token)match(input,20,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              																newLeafNode(lv_blocking_19_0, grammarAccess.getOverridePredicate_13Access().getBlockingTrueKeyword_3_1_1_1_1_1_1_0_0());
            	                              															
            	                            }
            	                            if ( state.backtracking==0 ) {

            	                              																if (current==null) {
            	                              																	current = createModelElement(grammarAccess.getOverridePredicate_13Rule());
            	                              																}
            	                              																setWithLastConsumed(current, "blocking", true, "true");
            	                              															
            	                            }

            	                            }


            	                            }


            	                            }
            	                            break;
            	                        case 2 :
            	                            // InternalMcmodel.g:16620:14: otherlv_20= 'false'
            	                            {
            	                            otherlv_20=(Token)match(input,21,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_20, grammarAccess.getOverridePredicate_13Access().getFalseKeyword_3_1_1_1_1_1_1_1());
            	                              													
            	                            }

            	                            }
            	                            break;

            	                    }


            	                    }


            	                    }
            	                    break;

            	            }


            	            }


            	            }
            	            break;

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getOverridePredicate_13Access().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 3 :
            	    // InternalMcmodel.g:16635:4: ({...}? => ( ({...}? => (otherlv_21= '&' ( ( ( (lv_brokenDefined_22_0= '!' ) ) otherlv_23= 'broken' ) | ( ( (lv_brokenDefined_24_0= 'broken' ) ) ( (otherlv_25= '!=' ( ( (lv_broken_26_0= 'false' ) ) | otherlv_27= 'true' ) ) | ( (otherlv_28= '=' | otherlv_29= '==' ) ( ( (lv_broken_30_0= 'true' ) ) | otherlv_31= 'false' ) ) ) ) ) ) ) ) )
            	    {
            	    // InternalMcmodel.g:16635:4: ({...}? => ( ({...}? => (otherlv_21= '&' ( ( ( (lv_brokenDefined_22_0= '!' ) ) otherlv_23= 'broken' ) | ( ( (lv_brokenDefined_24_0= 'broken' ) ) ( (otherlv_25= '!=' ( ( (lv_broken_26_0= 'false' ) ) | otherlv_27= 'true' ) ) | ( (otherlv_28= '=' | otherlv_29= '==' ) ( ( (lv_broken_30_0= 'true' ) ) | otherlv_31= 'false' ) ) ) ) ) ) ) ) )
            	    // InternalMcmodel.g:16636:5: {...}? => ( ({...}? => (otherlv_21= '&' ( ( ( (lv_brokenDefined_22_0= '!' ) ) otherlv_23= 'broken' ) | ( ( (lv_brokenDefined_24_0= 'broken' ) ) ( (otherlv_25= '!=' ( ( (lv_broken_26_0= 'false' ) ) | otherlv_27= 'true' ) ) | ( (otherlv_28= '=' | otherlv_29= '==' ) ( ( (lv_broken_30_0= 'true' ) ) | otherlv_31= 'false' ) ) ) ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_13Access().getUnorderedGroup_3(), 2) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_13", "getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_13Access().getUnorderedGroup_3(), 2)");
            	    }
            	    // InternalMcmodel.g:16636:117: ( ({...}? => (otherlv_21= '&' ( ( ( (lv_brokenDefined_22_0= '!' ) ) otherlv_23= 'broken' ) | ( ( (lv_brokenDefined_24_0= 'broken' ) ) ( (otherlv_25= '!=' ( ( (lv_broken_26_0= 'false' ) ) | otherlv_27= 'true' ) ) | ( (otherlv_28= '=' | otherlv_29= '==' ) ( ( (lv_broken_30_0= 'true' ) ) | otherlv_31= 'false' ) ) ) ) ) ) ) )
            	    // InternalMcmodel.g:16637:6: ({...}? => (otherlv_21= '&' ( ( ( (lv_brokenDefined_22_0= '!' ) ) otherlv_23= 'broken' ) | ( ( (lv_brokenDefined_24_0= 'broken' ) ) ( (otherlv_25= '!=' ( ( (lv_broken_26_0= 'false' ) ) | otherlv_27= 'true' ) ) | ( (otherlv_28= '=' | otherlv_29= '==' ) ( ( (lv_broken_30_0= 'true' ) ) | otherlv_31= 'false' ) ) ) ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getOverridePredicate_13Access().getUnorderedGroup_3(), 2);
            	    // InternalMcmodel.g:16640:9: ({...}? => (otherlv_21= '&' ( ( ( (lv_brokenDefined_22_0= '!' ) ) otherlv_23= 'broken' ) | ( ( (lv_brokenDefined_24_0= 'broken' ) ) ( (otherlv_25= '!=' ( ( (lv_broken_26_0= 'false' ) ) | otherlv_27= 'true' ) ) | ( (otherlv_28= '=' | otherlv_29= '==' ) ( ( (lv_broken_30_0= 'true' ) ) | otherlv_31= 'false' ) ) ) ) ) ) )
            	    // InternalMcmodel.g:16640:10: {...}? => (otherlv_21= '&' ( ( ( (lv_brokenDefined_22_0= '!' ) ) otherlv_23= 'broken' ) | ( ( (lv_brokenDefined_24_0= 'broken' ) ) ( (otherlv_25= '!=' ( ( (lv_broken_26_0= 'false' ) ) | otherlv_27= 'true' ) ) | ( (otherlv_28= '=' | otherlv_29= '==' ) ( ( (lv_broken_30_0= 'true' ) ) | otherlv_31= 'false' ) ) ) ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_13", "true");
            	    }
            	    // InternalMcmodel.g:16640:19: (otherlv_21= '&' ( ( ( (lv_brokenDefined_22_0= '!' ) ) otherlv_23= 'broken' ) | ( ( (lv_brokenDefined_24_0= 'broken' ) ) ( (otherlv_25= '!=' ( ( (lv_broken_26_0= 'false' ) ) | otherlv_27= 'true' ) ) | ( (otherlv_28= '=' | otherlv_29= '==' ) ( ( (lv_broken_30_0= 'true' ) ) | otherlv_31= 'false' ) ) ) ) ) )
            	    // InternalMcmodel.g:16640:20: otherlv_21= '&' ( ( ( (lv_brokenDefined_22_0= '!' ) ) otherlv_23= 'broken' ) | ( ( (lv_brokenDefined_24_0= 'broken' ) ) ( (otherlv_25= '!=' ( ( (lv_broken_26_0= 'false' ) ) | otherlv_27= 'true' ) ) | ( (otherlv_28= '=' | otherlv_29= '==' ) ( ( (lv_broken_30_0= 'true' ) ) | otherlv_31= 'false' ) ) ) ) )
            	    {
            	    otherlv_21=(Token)match(input,59,FOLLOW_41); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_21, grammarAccess.getOverridePredicate_13Access().getAmpersandKeyword_3_2_0());
            	      								
            	    }
            	    // InternalMcmodel.g:16644:9: ( ( ( (lv_brokenDefined_22_0= '!' ) ) otherlv_23= 'broken' ) | ( ( (lv_brokenDefined_24_0= 'broken' ) ) ( (otherlv_25= '!=' ( ( (lv_broken_26_0= 'false' ) ) | otherlv_27= 'true' ) ) | ( (otherlv_28= '=' | otherlv_29= '==' ) ( ( (lv_broken_30_0= 'true' ) ) | otherlv_31= 'false' ) ) ) ) )
            	    int alt537=2;
            	    int LA537_0 = input.LA(1);

            	    if ( (LA537_0==60) ) {
            	        alt537=1;
            	    }
            	    else if ( (LA537_0==63) ) {
            	        alt537=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 537, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt537) {
            	        case 1 :
            	            // InternalMcmodel.g:16645:10: ( ( (lv_brokenDefined_22_0= '!' ) ) otherlv_23= 'broken' )
            	            {
            	            // InternalMcmodel.g:16645:10: ( ( (lv_brokenDefined_22_0= '!' ) ) otherlv_23= 'broken' )
            	            // InternalMcmodel.g:16646:11: ( (lv_brokenDefined_22_0= '!' ) ) otherlv_23= 'broken'
            	            {
            	            // InternalMcmodel.g:16646:11: ( (lv_brokenDefined_22_0= '!' ) )
            	            // InternalMcmodel.g:16647:12: (lv_brokenDefined_22_0= '!' )
            	            {
            	            // InternalMcmodel.g:16647:12: (lv_brokenDefined_22_0= '!' )
            	            // InternalMcmodel.g:16648:13: lv_brokenDefined_22_0= '!'
            	            {
            	            lv_brokenDefined_22_0=(Token)match(input,60,FOLLOW_42); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              													newLeafNode(lv_brokenDefined_22_0, grammarAccess.getOverridePredicate_13Access().getBrokenDefinedExclamationMarkKeyword_3_2_1_0_0_0());
            	              												
            	            }
            	            if ( state.backtracking==0 ) {

            	              													if (current==null) {
            	              														current = createModelElement(grammarAccess.getOverridePredicate_13Rule());
            	              													}
            	              													setWithLastConsumed(current, "brokenDefined", true, "!");
            	              												
            	            }

            	            }


            	            }

            	            otherlv_23=(Token)match(input,63,FOLLOW_37); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              											newLeafNode(otherlv_23, grammarAccess.getOverridePredicate_13Access().getBrokenKeyword_3_2_1_0_1());
            	              										
            	            }

            	            }


            	            }
            	            break;
            	        case 2 :
            	            // InternalMcmodel.g:16666:10: ( ( (lv_brokenDefined_24_0= 'broken' ) ) ( (otherlv_25= '!=' ( ( (lv_broken_26_0= 'false' ) ) | otherlv_27= 'true' ) ) | ( (otherlv_28= '=' | otherlv_29= '==' ) ( ( (lv_broken_30_0= 'true' ) ) | otherlv_31= 'false' ) ) ) )
            	            {
            	            // InternalMcmodel.g:16666:10: ( ( (lv_brokenDefined_24_0= 'broken' ) ) ( (otherlv_25= '!=' ( ( (lv_broken_26_0= 'false' ) ) | otherlv_27= 'true' ) ) | ( (otherlv_28= '=' | otherlv_29= '==' ) ( ( (lv_broken_30_0= 'true' ) ) | otherlv_31= 'false' ) ) ) )
            	            // InternalMcmodel.g:16667:11: ( (lv_brokenDefined_24_0= 'broken' ) ) ( (otherlv_25= '!=' ( ( (lv_broken_26_0= 'false' ) ) | otherlv_27= 'true' ) ) | ( (otherlv_28= '=' | otherlv_29= '==' ) ( ( (lv_broken_30_0= 'true' ) ) | otherlv_31= 'false' ) ) )
            	            {
            	            // InternalMcmodel.g:16667:11: ( (lv_brokenDefined_24_0= 'broken' ) )
            	            // InternalMcmodel.g:16668:12: (lv_brokenDefined_24_0= 'broken' )
            	            {
            	            // InternalMcmodel.g:16668:12: (lv_brokenDefined_24_0= 'broken' )
            	            // InternalMcmodel.g:16669:13: lv_brokenDefined_24_0= 'broken'
            	            {
            	            lv_brokenDefined_24_0=(Token)match(input,63,FOLLOW_40); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              													newLeafNode(lv_brokenDefined_24_0, grammarAccess.getOverridePredicate_13Access().getBrokenDefinedBrokenKeyword_3_2_1_1_0_0());
            	              												
            	            }
            	            if ( state.backtracking==0 ) {

            	              													if (current==null) {
            	              														current = createModelElement(grammarAccess.getOverridePredicate_13Rule());
            	              													}
            	              													setWithLastConsumed(current, "brokenDefined", true, "broken");
            	              												
            	            }

            	            }


            	            }

            	            // InternalMcmodel.g:16681:11: ( (otherlv_25= '!=' ( ( (lv_broken_26_0= 'false' ) ) | otherlv_27= 'true' ) ) | ( (otherlv_28= '=' | otherlv_29= '==' ) ( ( (lv_broken_30_0= 'true' ) ) | otherlv_31= 'false' ) ) )
            	            int alt536=2;
            	            int LA536_0 = input.LA(1);

            	            if ( (LA536_0==62) ) {
            	                alt536=1;
            	            }
            	            else if ( (LA536_0==18||LA536_0==58) ) {
            	                alt536=2;
            	            }
            	            else {
            	                if (state.backtracking>0) {state.failed=true; return current;}
            	                NoViableAltException nvae =
            	                    new NoViableAltException("", 536, 0, input);

            	                throw nvae;
            	            }
            	            switch (alt536) {
            	                case 1 :
            	                    // InternalMcmodel.g:16682:12: (otherlv_25= '!=' ( ( (lv_broken_26_0= 'false' ) ) | otherlv_27= 'true' ) )
            	                    {
            	                    // InternalMcmodel.g:16682:12: (otherlv_25= '!=' ( ( (lv_broken_26_0= 'false' ) ) | otherlv_27= 'true' ) )
            	                    // InternalMcmodel.g:16683:13: otherlv_25= '!=' ( ( (lv_broken_26_0= 'false' ) ) | otherlv_27= 'true' )
            	                    {
            	                    otherlv_25=(Token)match(input,62,FOLLOW_7); if (state.failed) return current;
            	                    if ( state.backtracking==0 ) {

            	                      													newLeafNode(otherlv_25, grammarAccess.getOverridePredicate_13Access().getExclamationMarkEqualsSignKeyword_3_2_1_1_1_0_0());
            	                      												
            	                    }
            	                    // InternalMcmodel.g:16687:13: ( ( (lv_broken_26_0= 'false' ) ) | otherlv_27= 'true' )
            	                    int alt533=2;
            	                    int LA533_0 = input.LA(1);

            	                    if ( (LA533_0==21) ) {
            	                        alt533=1;
            	                    }
            	                    else if ( (LA533_0==20) ) {
            	                        alt533=2;
            	                    }
            	                    else {
            	                        if (state.backtracking>0) {state.failed=true; return current;}
            	                        NoViableAltException nvae =
            	                            new NoViableAltException("", 533, 0, input);

            	                        throw nvae;
            	                    }
            	                    switch (alt533) {
            	                        case 1 :
            	                            // InternalMcmodel.g:16688:14: ( (lv_broken_26_0= 'false' ) )
            	                            {
            	                            // InternalMcmodel.g:16688:14: ( (lv_broken_26_0= 'false' ) )
            	                            // InternalMcmodel.g:16689:15: (lv_broken_26_0= 'false' )
            	                            {
            	                            // InternalMcmodel.g:16689:15: (lv_broken_26_0= 'false' )
            	                            // InternalMcmodel.g:16690:16: lv_broken_26_0= 'false'
            	                            {
            	                            lv_broken_26_0=(Token)match(input,21,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              																newLeafNode(lv_broken_26_0, grammarAccess.getOverridePredicate_13Access().getBrokenFalseKeyword_3_2_1_1_1_0_1_0_0());
            	                              															
            	                            }
            	                            if ( state.backtracking==0 ) {

            	                              																if (current==null) {
            	                              																	current = createModelElement(grammarAccess.getOverridePredicate_13Rule());
            	                              																}
            	                              																setWithLastConsumed(current, "broken", true, "false");
            	                              															
            	                            }

            	                            }


            	                            }


            	                            }
            	                            break;
            	                        case 2 :
            	                            // InternalMcmodel.g:16703:14: otherlv_27= 'true'
            	                            {
            	                            otherlv_27=(Token)match(input,20,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_27, grammarAccess.getOverridePredicate_13Access().getTrueKeyword_3_2_1_1_1_0_1_1());
            	                              													
            	                            }

            	                            }
            	                            break;

            	                    }


            	                    }


            	                    }
            	                    break;
            	                case 2 :
            	                    // InternalMcmodel.g:16710:12: ( (otherlv_28= '=' | otherlv_29= '==' ) ( ( (lv_broken_30_0= 'true' ) ) | otherlv_31= 'false' ) )
            	                    {
            	                    // InternalMcmodel.g:16710:12: ( (otherlv_28= '=' | otherlv_29= '==' ) ( ( (lv_broken_30_0= 'true' ) ) | otherlv_31= 'false' ) )
            	                    // InternalMcmodel.g:16711:13: (otherlv_28= '=' | otherlv_29= '==' ) ( ( (lv_broken_30_0= 'true' ) ) | otherlv_31= 'false' )
            	                    {
            	                    // InternalMcmodel.g:16711:13: (otherlv_28= '=' | otherlv_29= '==' )
            	                    int alt534=2;
            	                    int LA534_0 = input.LA(1);

            	                    if ( (LA534_0==18) ) {
            	                        alt534=1;
            	                    }
            	                    else if ( (LA534_0==58) ) {
            	                        alt534=2;
            	                    }
            	                    else {
            	                        if (state.backtracking>0) {state.failed=true; return current;}
            	                        NoViableAltException nvae =
            	                            new NoViableAltException("", 534, 0, input);

            	                        throw nvae;
            	                    }
            	                    switch (alt534) {
            	                        case 1 :
            	                            // InternalMcmodel.g:16712:14: otherlv_28= '='
            	                            {
            	                            otherlv_28=(Token)match(input,18,FOLLOW_7); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_28, grammarAccess.getOverridePredicate_13Access().getEqualsSignKeyword_3_2_1_1_1_1_0_0());
            	                              													
            	                            }

            	                            }
            	                            break;
            	                        case 2 :
            	                            // InternalMcmodel.g:16717:14: otherlv_29= '=='
            	                            {
            	                            otherlv_29=(Token)match(input,58,FOLLOW_7); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_29, grammarAccess.getOverridePredicate_13Access().getEqualsSignEqualsSignKeyword_3_2_1_1_1_1_0_1());
            	                              													
            	                            }

            	                            }
            	                            break;

            	                    }

            	                    // InternalMcmodel.g:16722:13: ( ( (lv_broken_30_0= 'true' ) ) | otherlv_31= 'false' )
            	                    int alt535=2;
            	                    int LA535_0 = input.LA(1);

            	                    if ( (LA535_0==20) ) {
            	                        alt535=1;
            	                    }
            	                    else if ( (LA535_0==21) ) {
            	                        alt535=2;
            	                    }
            	                    else {
            	                        if (state.backtracking>0) {state.failed=true; return current;}
            	                        NoViableAltException nvae =
            	                            new NoViableAltException("", 535, 0, input);

            	                        throw nvae;
            	                    }
            	                    switch (alt535) {
            	                        case 1 :
            	                            // InternalMcmodel.g:16723:14: ( (lv_broken_30_0= 'true' ) )
            	                            {
            	                            // InternalMcmodel.g:16723:14: ( (lv_broken_30_0= 'true' ) )
            	                            // InternalMcmodel.g:16724:15: (lv_broken_30_0= 'true' )
            	                            {
            	                            // InternalMcmodel.g:16724:15: (lv_broken_30_0= 'true' )
            	                            // InternalMcmodel.g:16725:16: lv_broken_30_0= 'true'
            	                            {
            	                            lv_broken_30_0=(Token)match(input,20,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              																newLeafNode(lv_broken_30_0, grammarAccess.getOverridePredicate_13Access().getBrokenTrueKeyword_3_2_1_1_1_1_1_0_0());
            	                              															
            	                            }
            	                            if ( state.backtracking==0 ) {

            	                              																if (current==null) {
            	                              																	current = createModelElement(grammarAccess.getOverridePredicate_13Rule());
            	                              																}
            	                              																setWithLastConsumed(current, "broken", true, "true");
            	                              															
            	                            }

            	                            }


            	                            }


            	                            }
            	                            break;
            	                        case 2 :
            	                            // InternalMcmodel.g:16738:14: otherlv_31= 'false'
            	                            {
            	                            otherlv_31=(Token)match(input,21,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_31, grammarAccess.getOverridePredicate_13Access().getFalseKeyword_3_2_1_1_1_1_1_1());
            	                              													
            	                            }

            	                            }
            	                            break;

            	                    }


            	                    }


            	                    }
            	                    break;

            	            }


            	            }


            	            }
            	            break;

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getOverridePredicate_13Access().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 4 :
            	    // InternalMcmodel.g:16753:4: ({...}? => ( ({...}? => (otherlv_32= '&' ( ( ( (lv_castDefined_33_0= '!' ) ) otherlv_34= 'cast' ) | ( ( (lv_castDefined_35_0= 'cast' ) ) ( (otherlv_36= '!=' ( ( (lv_cast_37_0= 'false' ) ) | otherlv_38= 'true' ) ) | ( (otherlv_39= '=' | otherlv_40= '==' ) ( ( (lv_cast_41_0= 'true' ) ) | otherlv_42= 'false' ) ) ) ) ) ) ) ) )
            	    {
            	    // InternalMcmodel.g:16753:4: ({...}? => ( ({...}? => (otherlv_32= '&' ( ( ( (lv_castDefined_33_0= '!' ) ) otherlv_34= 'cast' ) | ( ( (lv_castDefined_35_0= 'cast' ) ) ( (otherlv_36= '!=' ( ( (lv_cast_37_0= 'false' ) ) | otherlv_38= 'true' ) ) | ( (otherlv_39= '=' | otherlv_40= '==' ) ( ( (lv_cast_41_0= 'true' ) ) | otherlv_42= 'false' ) ) ) ) ) ) ) ) )
            	    // InternalMcmodel.g:16754:5: {...}? => ( ({...}? => (otherlv_32= '&' ( ( ( (lv_castDefined_33_0= '!' ) ) otherlv_34= 'cast' ) | ( ( (lv_castDefined_35_0= 'cast' ) ) ( (otherlv_36= '!=' ( ( (lv_cast_37_0= 'false' ) ) | otherlv_38= 'true' ) ) | ( (otherlv_39= '=' | otherlv_40= '==' ) ( ( (lv_cast_41_0= 'true' ) ) | otherlv_42= 'false' ) ) ) ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_13Access().getUnorderedGroup_3(), 3) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_13", "getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_13Access().getUnorderedGroup_3(), 3)");
            	    }
            	    // InternalMcmodel.g:16754:117: ( ({...}? => (otherlv_32= '&' ( ( ( (lv_castDefined_33_0= '!' ) ) otherlv_34= 'cast' ) | ( ( (lv_castDefined_35_0= 'cast' ) ) ( (otherlv_36= '!=' ( ( (lv_cast_37_0= 'false' ) ) | otherlv_38= 'true' ) ) | ( (otherlv_39= '=' | otherlv_40= '==' ) ( ( (lv_cast_41_0= 'true' ) ) | otherlv_42= 'false' ) ) ) ) ) ) ) )
            	    // InternalMcmodel.g:16755:6: ({...}? => (otherlv_32= '&' ( ( ( (lv_castDefined_33_0= '!' ) ) otherlv_34= 'cast' ) | ( ( (lv_castDefined_35_0= 'cast' ) ) ( (otherlv_36= '!=' ( ( (lv_cast_37_0= 'false' ) ) | otherlv_38= 'true' ) ) | ( (otherlv_39= '=' | otherlv_40= '==' ) ( ( (lv_cast_41_0= 'true' ) ) | otherlv_42= 'false' ) ) ) ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getOverridePredicate_13Access().getUnorderedGroup_3(), 3);
            	    // InternalMcmodel.g:16758:9: ({...}? => (otherlv_32= '&' ( ( ( (lv_castDefined_33_0= '!' ) ) otherlv_34= 'cast' ) | ( ( (lv_castDefined_35_0= 'cast' ) ) ( (otherlv_36= '!=' ( ( (lv_cast_37_0= 'false' ) ) | otherlv_38= 'true' ) ) | ( (otherlv_39= '=' | otherlv_40= '==' ) ( ( (lv_cast_41_0= 'true' ) ) | otherlv_42= 'false' ) ) ) ) ) ) )
            	    // InternalMcmodel.g:16758:10: {...}? => (otherlv_32= '&' ( ( ( (lv_castDefined_33_0= '!' ) ) otherlv_34= 'cast' ) | ( ( (lv_castDefined_35_0= 'cast' ) ) ( (otherlv_36= '!=' ( ( (lv_cast_37_0= 'false' ) ) | otherlv_38= 'true' ) ) | ( (otherlv_39= '=' | otherlv_40= '==' ) ( ( (lv_cast_41_0= 'true' ) ) | otherlv_42= 'false' ) ) ) ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_13", "true");
            	    }
            	    // InternalMcmodel.g:16758:19: (otherlv_32= '&' ( ( ( (lv_castDefined_33_0= '!' ) ) otherlv_34= 'cast' ) | ( ( (lv_castDefined_35_0= 'cast' ) ) ( (otherlv_36= '!=' ( ( (lv_cast_37_0= 'false' ) ) | otherlv_38= 'true' ) ) | ( (otherlv_39= '=' | otherlv_40= '==' ) ( ( (lv_cast_41_0= 'true' ) ) | otherlv_42= 'false' ) ) ) ) ) )
            	    // InternalMcmodel.g:16758:20: otherlv_32= '&' ( ( ( (lv_castDefined_33_0= '!' ) ) otherlv_34= 'cast' ) | ( ( (lv_castDefined_35_0= 'cast' ) ) ( (otherlv_36= '!=' ( ( (lv_cast_37_0= 'false' ) ) | otherlv_38= 'true' ) ) | ( (otherlv_39= '=' | otherlv_40= '==' ) ( ( (lv_cast_41_0= 'true' ) ) | otherlv_42= 'false' ) ) ) ) )
            	    {
            	    otherlv_32=(Token)match(input,59,FOLLOW_43); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_32, grammarAccess.getOverridePredicate_13Access().getAmpersandKeyword_3_3_0());
            	      								
            	    }
            	    // InternalMcmodel.g:16762:9: ( ( ( (lv_castDefined_33_0= '!' ) ) otherlv_34= 'cast' ) | ( ( (lv_castDefined_35_0= 'cast' ) ) ( (otherlv_36= '!=' ( ( (lv_cast_37_0= 'false' ) ) | otherlv_38= 'true' ) ) | ( (otherlv_39= '=' | otherlv_40= '==' ) ( ( (lv_cast_41_0= 'true' ) ) | otherlv_42= 'false' ) ) ) ) )
            	    int alt542=2;
            	    int LA542_0 = input.LA(1);

            	    if ( (LA542_0==60) ) {
            	        alt542=1;
            	    }
            	    else if ( (LA542_0==64) ) {
            	        alt542=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 542, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt542) {
            	        case 1 :
            	            // InternalMcmodel.g:16763:10: ( ( (lv_castDefined_33_0= '!' ) ) otherlv_34= 'cast' )
            	            {
            	            // InternalMcmodel.g:16763:10: ( ( (lv_castDefined_33_0= '!' ) ) otherlv_34= 'cast' )
            	            // InternalMcmodel.g:16764:11: ( (lv_castDefined_33_0= '!' ) ) otherlv_34= 'cast'
            	            {
            	            // InternalMcmodel.g:16764:11: ( (lv_castDefined_33_0= '!' ) )
            	            // InternalMcmodel.g:16765:12: (lv_castDefined_33_0= '!' )
            	            {
            	            // InternalMcmodel.g:16765:12: (lv_castDefined_33_0= '!' )
            	            // InternalMcmodel.g:16766:13: lv_castDefined_33_0= '!'
            	            {
            	            lv_castDefined_33_0=(Token)match(input,60,FOLLOW_44); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              													newLeafNode(lv_castDefined_33_0, grammarAccess.getOverridePredicate_13Access().getCastDefinedExclamationMarkKeyword_3_3_1_0_0_0());
            	              												
            	            }
            	            if ( state.backtracking==0 ) {

            	              													if (current==null) {
            	              														current = createModelElement(grammarAccess.getOverridePredicate_13Rule());
            	              													}
            	              													setWithLastConsumed(current, "castDefined", true, "!");
            	              												
            	            }

            	            }


            	            }

            	            otherlv_34=(Token)match(input,64,FOLLOW_37); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              											newLeafNode(otherlv_34, grammarAccess.getOverridePredicate_13Access().getCastKeyword_3_3_1_0_1());
            	              										
            	            }

            	            }


            	            }
            	            break;
            	        case 2 :
            	            // InternalMcmodel.g:16784:10: ( ( (lv_castDefined_35_0= 'cast' ) ) ( (otherlv_36= '!=' ( ( (lv_cast_37_0= 'false' ) ) | otherlv_38= 'true' ) ) | ( (otherlv_39= '=' | otherlv_40= '==' ) ( ( (lv_cast_41_0= 'true' ) ) | otherlv_42= 'false' ) ) ) )
            	            {
            	            // InternalMcmodel.g:16784:10: ( ( (lv_castDefined_35_0= 'cast' ) ) ( (otherlv_36= '!=' ( ( (lv_cast_37_0= 'false' ) ) | otherlv_38= 'true' ) ) | ( (otherlv_39= '=' | otherlv_40= '==' ) ( ( (lv_cast_41_0= 'true' ) ) | otherlv_42= 'false' ) ) ) )
            	            // InternalMcmodel.g:16785:11: ( (lv_castDefined_35_0= 'cast' ) ) ( (otherlv_36= '!=' ( ( (lv_cast_37_0= 'false' ) ) | otherlv_38= 'true' ) ) | ( (otherlv_39= '=' | otherlv_40= '==' ) ( ( (lv_cast_41_0= 'true' ) ) | otherlv_42= 'false' ) ) )
            	            {
            	            // InternalMcmodel.g:16785:11: ( (lv_castDefined_35_0= 'cast' ) )
            	            // InternalMcmodel.g:16786:12: (lv_castDefined_35_0= 'cast' )
            	            {
            	            // InternalMcmodel.g:16786:12: (lv_castDefined_35_0= 'cast' )
            	            // InternalMcmodel.g:16787:13: lv_castDefined_35_0= 'cast'
            	            {
            	            lv_castDefined_35_0=(Token)match(input,64,FOLLOW_40); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              													newLeafNode(lv_castDefined_35_0, grammarAccess.getOverridePredicate_13Access().getCastDefinedCastKeyword_3_3_1_1_0_0());
            	              												
            	            }
            	            if ( state.backtracking==0 ) {

            	              													if (current==null) {
            	              														current = createModelElement(grammarAccess.getOverridePredicate_13Rule());
            	              													}
            	              													setWithLastConsumed(current, "castDefined", true, "cast");
            	              												
            	            }

            	            }


            	            }

            	            // InternalMcmodel.g:16799:11: ( (otherlv_36= '!=' ( ( (lv_cast_37_0= 'false' ) ) | otherlv_38= 'true' ) ) | ( (otherlv_39= '=' | otherlv_40= '==' ) ( ( (lv_cast_41_0= 'true' ) ) | otherlv_42= 'false' ) ) )
            	            int alt541=2;
            	            int LA541_0 = input.LA(1);

            	            if ( (LA541_0==62) ) {
            	                alt541=1;
            	            }
            	            else if ( (LA541_0==18||LA541_0==58) ) {
            	                alt541=2;
            	            }
            	            else {
            	                if (state.backtracking>0) {state.failed=true; return current;}
            	                NoViableAltException nvae =
            	                    new NoViableAltException("", 541, 0, input);

            	                throw nvae;
            	            }
            	            switch (alt541) {
            	                case 1 :
            	                    // InternalMcmodel.g:16800:12: (otherlv_36= '!=' ( ( (lv_cast_37_0= 'false' ) ) | otherlv_38= 'true' ) )
            	                    {
            	                    // InternalMcmodel.g:16800:12: (otherlv_36= '!=' ( ( (lv_cast_37_0= 'false' ) ) | otherlv_38= 'true' ) )
            	                    // InternalMcmodel.g:16801:13: otherlv_36= '!=' ( ( (lv_cast_37_0= 'false' ) ) | otherlv_38= 'true' )
            	                    {
            	                    otherlv_36=(Token)match(input,62,FOLLOW_7); if (state.failed) return current;
            	                    if ( state.backtracking==0 ) {

            	                      													newLeafNode(otherlv_36, grammarAccess.getOverridePredicate_13Access().getExclamationMarkEqualsSignKeyword_3_3_1_1_1_0_0());
            	                      												
            	                    }
            	                    // InternalMcmodel.g:16805:13: ( ( (lv_cast_37_0= 'false' ) ) | otherlv_38= 'true' )
            	                    int alt538=2;
            	                    int LA538_0 = input.LA(1);

            	                    if ( (LA538_0==21) ) {
            	                        alt538=1;
            	                    }
            	                    else if ( (LA538_0==20) ) {
            	                        alt538=2;
            	                    }
            	                    else {
            	                        if (state.backtracking>0) {state.failed=true; return current;}
            	                        NoViableAltException nvae =
            	                            new NoViableAltException("", 538, 0, input);

            	                        throw nvae;
            	                    }
            	                    switch (alt538) {
            	                        case 1 :
            	                            // InternalMcmodel.g:16806:14: ( (lv_cast_37_0= 'false' ) )
            	                            {
            	                            // InternalMcmodel.g:16806:14: ( (lv_cast_37_0= 'false' ) )
            	                            // InternalMcmodel.g:16807:15: (lv_cast_37_0= 'false' )
            	                            {
            	                            // InternalMcmodel.g:16807:15: (lv_cast_37_0= 'false' )
            	                            // InternalMcmodel.g:16808:16: lv_cast_37_0= 'false'
            	                            {
            	                            lv_cast_37_0=(Token)match(input,21,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              																newLeafNode(lv_cast_37_0, grammarAccess.getOverridePredicate_13Access().getCastFalseKeyword_3_3_1_1_1_0_1_0_0());
            	                              															
            	                            }
            	                            if ( state.backtracking==0 ) {

            	                              																if (current==null) {
            	                              																	current = createModelElement(grammarAccess.getOverridePredicate_13Rule());
            	                              																}
            	                              																setWithLastConsumed(current, "cast", true, "false");
            	                              															
            	                            }

            	                            }


            	                            }


            	                            }
            	                            break;
            	                        case 2 :
            	                            // InternalMcmodel.g:16821:14: otherlv_38= 'true'
            	                            {
            	                            otherlv_38=(Token)match(input,20,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_38, grammarAccess.getOverridePredicate_13Access().getTrueKeyword_3_3_1_1_1_0_1_1());
            	                              													
            	                            }

            	                            }
            	                            break;

            	                    }


            	                    }


            	                    }
            	                    break;
            	                case 2 :
            	                    // InternalMcmodel.g:16828:12: ( (otherlv_39= '=' | otherlv_40= '==' ) ( ( (lv_cast_41_0= 'true' ) ) | otherlv_42= 'false' ) )
            	                    {
            	                    // InternalMcmodel.g:16828:12: ( (otherlv_39= '=' | otherlv_40= '==' ) ( ( (lv_cast_41_0= 'true' ) ) | otherlv_42= 'false' ) )
            	                    // InternalMcmodel.g:16829:13: (otherlv_39= '=' | otherlv_40= '==' ) ( ( (lv_cast_41_0= 'true' ) ) | otherlv_42= 'false' )
            	                    {
            	                    // InternalMcmodel.g:16829:13: (otherlv_39= '=' | otherlv_40= '==' )
            	                    int alt539=2;
            	                    int LA539_0 = input.LA(1);

            	                    if ( (LA539_0==18) ) {
            	                        alt539=1;
            	                    }
            	                    else if ( (LA539_0==58) ) {
            	                        alt539=2;
            	                    }
            	                    else {
            	                        if (state.backtracking>0) {state.failed=true; return current;}
            	                        NoViableAltException nvae =
            	                            new NoViableAltException("", 539, 0, input);

            	                        throw nvae;
            	                    }
            	                    switch (alt539) {
            	                        case 1 :
            	                            // InternalMcmodel.g:16830:14: otherlv_39= '='
            	                            {
            	                            otherlv_39=(Token)match(input,18,FOLLOW_7); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_39, grammarAccess.getOverridePredicate_13Access().getEqualsSignKeyword_3_3_1_1_1_1_0_0());
            	                              													
            	                            }

            	                            }
            	                            break;
            	                        case 2 :
            	                            // InternalMcmodel.g:16835:14: otherlv_40= '=='
            	                            {
            	                            otherlv_40=(Token)match(input,58,FOLLOW_7); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_40, grammarAccess.getOverridePredicate_13Access().getEqualsSignEqualsSignKeyword_3_3_1_1_1_1_0_1());
            	                              													
            	                            }

            	                            }
            	                            break;

            	                    }

            	                    // InternalMcmodel.g:16840:13: ( ( (lv_cast_41_0= 'true' ) ) | otherlv_42= 'false' )
            	                    int alt540=2;
            	                    int LA540_0 = input.LA(1);

            	                    if ( (LA540_0==20) ) {
            	                        alt540=1;
            	                    }
            	                    else if ( (LA540_0==21) ) {
            	                        alt540=2;
            	                    }
            	                    else {
            	                        if (state.backtracking>0) {state.failed=true; return current;}
            	                        NoViableAltException nvae =
            	                            new NoViableAltException("", 540, 0, input);

            	                        throw nvae;
            	                    }
            	                    switch (alt540) {
            	                        case 1 :
            	                            // InternalMcmodel.g:16841:14: ( (lv_cast_41_0= 'true' ) )
            	                            {
            	                            // InternalMcmodel.g:16841:14: ( (lv_cast_41_0= 'true' ) )
            	                            // InternalMcmodel.g:16842:15: (lv_cast_41_0= 'true' )
            	                            {
            	                            // InternalMcmodel.g:16842:15: (lv_cast_41_0= 'true' )
            	                            // InternalMcmodel.g:16843:16: lv_cast_41_0= 'true'
            	                            {
            	                            lv_cast_41_0=(Token)match(input,20,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              																newLeafNode(lv_cast_41_0, grammarAccess.getOverridePredicate_13Access().getCastTrueKeyword_3_3_1_1_1_1_1_0_0());
            	                              															
            	                            }
            	                            if ( state.backtracking==0 ) {

            	                              																if (current==null) {
            	                              																	current = createModelElement(grammarAccess.getOverridePredicate_13Rule());
            	                              																}
            	                              																setWithLastConsumed(current, "cast", true, "true");
            	                              															
            	                            }

            	                            }


            	                            }


            	                            }
            	                            break;
            	                        case 2 :
            	                            // InternalMcmodel.g:16856:14: otherlv_42= 'false'
            	                            {
            	                            otherlv_42=(Token)match(input,21,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_42, grammarAccess.getOverridePredicate_13Access().getFalseKeyword_3_3_1_1_1_1_1_1());
            	                              													
            	                            }

            	                            }
            	                            break;

            	                    }


            	                    }


            	                    }
            	                    break;

            	            }


            	            }


            	            }
            	            break;

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getOverridePredicate_13Access().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 5 :
            	    // InternalMcmodel.g:16871:4: ({...}? => ( ({...}? => (otherlv_43= '&' ( (lv_cooldownDefined_44_0= 'cooldown' ) ) (otherlv_45= '=' | otherlv_46= '==' ) ( (lv_cooldown_47_0= RULE_PERCENTAGE ) ) ) ) ) )
            	    {
            	    // InternalMcmodel.g:16871:4: ({...}? => ( ({...}? => (otherlv_43= '&' ( (lv_cooldownDefined_44_0= 'cooldown' ) ) (otherlv_45= '=' | otherlv_46= '==' ) ( (lv_cooldown_47_0= RULE_PERCENTAGE ) ) ) ) ) )
            	    // InternalMcmodel.g:16872:5: {...}? => ( ({...}? => (otherlv_43= '&' ( (lv_cooldownDefined_44_0= 'cooldown' ) ) (otherlv_45= '=' | otherlv_46= '==' ) ( (lv_cooldown_47_0= RULE_PERCENTAGE ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_13Access().getUnorderedGroup_3(), 4) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_13", "getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_13Access().getUnorderedGroup_3(), 4)");
            	    }
            	    // InternalMcmodel.g:16872:117: ( ({...}? => (otherlv_43= '&' ( (lv_cooldownDefined_44_0= 'cooldown' ) ) (otherlv_45= '=' | otherlv_46= '==' ) ( (lv_cooldown_47_0= RULE_PERCENTAGE ) ) ) ) )
            	    // InternalMcmodel.g:16873:6: ({...}? => (otherlv_43= '&' ( (lv_cooldownDefined_44_0= 'cooldown' ) ) (otherlv_45= '=' | otherlv_46= '==' ) ( (lv_cooldown_47_0= RULE_PERCENTAGE ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getOverridePredicate_13Access().getUnorderedGroup_3(), 4);
            	    // InternalMcmodel.g:16876:9: ({...}? => (otherlv_43= '&' ( (lv_cooldownDefined_44_0= 'cooldown' ) ) (otherlv_45= '=' | otherlv_46= '==' ) ( (lv_cooldown_47_0= RULE_PERCENTAGE ) ) ) )
            	    // InternalMcmodel.g:16876:10: {...}? => (otherlv_43= '&' ( (lv_cooldownDefined_44_0= 'cooldown' ) ) (otherlv_45= '=' | otherlv_46= '==' ) ( (lv_cooldown_47_0= RULE_PERCENTAGE ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_13", "true");
            	    }
            	    // InternalMcmodel.g:16876:19: (otherlv_43= '&' ( (lv_cooldownDefined_44_0= 'cooldown' ) ) (otherlv_45= '=' | otherlv_46= '==' ) ( (lv_cooldown_47_0= RULE_PERCENTAGE ) ) )
            	    // InternalMcmodel.g:16876:20: otherlv_43= '&' ( (lv_cooldownDefined_44_0= 'cooldown' ) ) (otherlv_45= '=' | otherlv_46= '==' ) ( (lv_cooldown_47_0= RULE_PERCENTAGE ) )
            	    {
            	    otherlv_43=(Token)match(input,59,FOLLOW_45); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_43, grammarAccess.getOverridePredicate_13Access().getAmpersandKeyword_3_4_0());
            	      								
            	    }
            	    // InternalMcmodel.g:16880:9: ( (lv_cooldownDefined_44_0= 'cooldown' ) )
            	    // InternalMcmodel.g:16881:10: (lv_cooldownDefined_44_0= 'cooldown' )
            	    {
            	    // InternalMcmodel.g:16881:10: (lv_cooldownDefined_44_0= 'cooldown' )
            	    // InternalMcmodel.g:16882:11: lv_cooldownDefined_44_0= 'cooldown'
            	    {
            	    lv_cooldownDefined_44_0=(Token)match(input,65,FOLLOW_35); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											newLeafNode(lv_cooldownDefined_44_0, grammarAccess.getOverridePredicate_13Access().getCooldownDefinedCooldownKeyword_3_4_1_0());
            	      										
            	    }
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElement(grammarAccess.getOverridePredicate_13Rule());
            	      											}
            	      											setWithLastConsumed(current, "cooldownDefined", true, "cooldown");
            	      										
            	    }

            	    }


            	    }

            	    // InternalMcmodel.g:16894:9: (otherlv_45= '=' | otherlv_46= '==' )
            	    int alt543=2;
            	    int LA543_0 = input.LA(1);

            	    if ( (LA543_0==18) ) {
            	        alt543=1;
            	    }
            	    else if ( (LA543_0==58) ) {
            	        alt543=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 543, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt543) {
            	        case 1 :
            	            // InternalMcmodel.g:16895:10: otherlv_45= '='
            	            {
            	            otherlv_45=(Token)match(input,18,FOLLOW_36); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(otherlv_45, grammarAccess.getOverridePredicate_13Access().getEqualsSignKeyword_3_4_2_0());
            	              									
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalMcmodel.g:16900:10: otherlv_46= '=='
            	            {
            	            otherlv_46=(Token)match(input,58,FOLLOW_36); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(otherlv_46, grammarAccess.getOverridePredicate_13Access().getEqualsSignEqualsSignKeyword_3_4_2_1());
            	              									
            	            }

            	            }
            	            break;

            	    }

            	    // InternalMcmodel.g:16905:9: ( (lv_cooldown_47_0= RULE_PERCENTAGE ) )
            	    // InternalMcmodel.g:16906:10: (lv_cooldown_47_0= RULE_PERCENTAGE )
            	    {
            	    // InternalMcmodel.g:16906:10: (lv_cooldown_47_0= RULE_PERCENTAGE )
            	    // InternalMcmodel.g:16907:11: lv_cooldown_47_0= RULE_PERCENTAGE
            	    {
            	    lv_cooldown_47_0=(Token)match(input,RULE_PERCENTAGE,FOLLOW_37); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											newLeafNode(lv_cooldown_47_0, grammarAccess.getOverridePredicate_13Access().getCooldownPERCENTAGETerminalRuleCall_3_4_3_0());
            	      										
            	    }
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElement(grammarAccess.getOverridePredicate_13Rule());
            	      											}
            	      											setWithLastConsumed(
            	      												current,
            	      												"cooldown",
            	      												lv_cooldown_47_0,
            	      												"com.raptor.mcmodel.Mcmodel.PERCENTAGE");
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getOverridePredicate_13Access().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 6 :
            	    // InternalMcmodel.g:16929:4: ({...}? => ( ({...}? => (otherlv_48= '&' ( (lv_damageDefined_49_0= 'damage' ) ) (otherlv_50= '=' | otherlv_51= '==' ) ( (lv_damage_52_0= RULE_PERCENTAGE ) ) ) ) ) )
            	    {
            	    // InternalMcmodel.g:16929:4: ({...}? => ( ({...}? => (otherlv_48= '&' ( (lv_damageDefined_49_0= 'damage' ) ) (otherlv_50= '=' | otherlv_51= '==' ) ( (lv_damage_52_0= RULE_PERCENTAGE ) ) ) ) ) )
            	    // InternalMcmodel.g:16930:5: {...}? => ( ({...}? => (otherlv_48= '&' ( (lv_damageDefined_49_0= 'damage' ) ) (otherlv_50= '=' | otherlv_51= '==' ) ( (lv_damage_52_0= RULE_PERCENTAGE ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_13Access().getUnorderedGroup_3(), 5) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_13", "getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_13Access().getUnorderedGroup_3(), 5)");
            	    }
            	    // InternalMcmodel.g:16930:117: ( ({...}? => (otherlv_48= '&' ( (lv_damageDefined_49_0= 'damage' ) ) (otherlv_50= '=' | otherlv_51= '==' ) ( (lv_damage_52_0= RULE_PERCENTAGE ) ) ) ) )
            	    // InternalMcmodel.g:16931:6: ({...}? => (otherlv_48= '&' ( (lv_damageDefined_49_0= 'damage' ) ) (otherlv_50= '=' | otherlv_51= '==' ) ( (lv_damage_52_0= RULE_PERCENTAGE ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getOverridePredicate_13Access().getUnorderedGroup_3(), 5);
            	    // InternalMcmodel.g:16934:9: ({...}? => (otherlv_48= '&' ( (lv_damageDefined_49_0= 'damage' ) ) (otherlv_50= '=' | otherlv_51= '==' ) ( (lv_damage_52_0= RULE_PERCENTAGE ) ) ) )
            	    // InternalMcmodel.g:16934:10: {...}? => (otherlv_48= '&' ( (lv_damageDefined_49_0= 'damage' ) ) (otherlv_50= '=' | otherlv_51= '==' ) ( (lv_damage_52_0= RULE_PERCENTAGE ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_13", "true");
            	    }
            	    // InternalMcmodel.g:16934:19: (otherlv_48= '&' ( (lv_damageDefined_49_0= 'damage' ) ) (otherlv_50= '=' | otherlv_51= '==' ) ( (lv_damage_52_0= RULE_PERCENTAGE ) ) )
            	    // InternalMcmodel.g:16934:20: otherlv_48= '&' ( (lv_damageDefined_49_0= 'damage' ) ) (otherlv_50= '=' | otherlv_51= '==' ) ( (lv_damage_52_0= RULE_PERCENTAGE ) )
            	    {
            	    otherlv_48=(Token)match(input,59,FOLLOW_46); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_48, grammarAccess.getOverridePredicate_13Access().getAmpersandKeyword_3_5_0());
            	      								
            	    }
            	    // InternalMcmodel.g:16938:9: ( (lv_damageDefined_49_0= 'damage' ) )
            	    // InternalMcmodel.g:16939:10: (lv_damageDefined_49_0= 'damage' )
            	    {
            	    // InternalMcmodel.g:16939:10: (lv_damageDefined_49_0= 'damage' )
            	    // InternalMcmodel.g:16940:11: lv_damageDefined_49_0= 'damage'
            	    {
            	    lv_damageDefined_49_0=(Token)match(input,66,FOLLOW_35); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											newLeafNode(lv_damageDefined_49_0, grammarAccess.getOverridePredicate_13Access().getDamageDefinedDamageKeyword_3_5_1_0());
            	      										
            	    }
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElement(grammarAccess.getOverridePredicate_13Rule());
            	      											}
            	      											setWithLastConsumed(current, "damageDefined", true, "damage");
            	      										
            	    }

            	    }


            	    }

            	    // InternalMcmodel.g:16952:9: (otherlv_50= '=' | otherlv_51= '==' )
            	    int alt544=2;
            	    int LA544_0 = input.LA(1);

            	    if ( (LA544_0==18) ) {
            	        alt544=1;
            	    }
            	    else if ( (LA544_0==58) ) {
            	        alt544=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 544, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt544) {
            	        case 1 :
            	            // InternalMcmodel.g:16953:10: otherlv_50= '='
            	            {
            	            otherlv_50=(Token)match(input,18,FOLLOW_36); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(otherlv_50, grammarAccess.getOverridePredicate_13Access().getEqualsSignKeyword_3_5_2_0());
            	              									
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalMcmodel.g:16958:10: otherlv_51= '=='
            	            {
            	            otherlv_51=(Token)match(input,58,FOLLOW_36); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(otherlv_51, grammarAccess.getOverridePredicate_13Access().getEqualsSignEqualsSignKeyword_3_5_2_1());
            	              									
            	            }

            	            }
            	            break;

            	    }

            	    // InternalMcmodel.g:16963:9: ( (lv_damage_52_0= RULE_PERCENTAGE ) )
            	    // InternalMcmodel.g:16964:10: (lv_damage_52_0= RULE_PERCENTAGE )
            	    {
            	    // InternalMcmodel.g:16964:10: (lv_damage_52_0= RULE_PERCENTAGE )
            	    // InternalMcmodel.g:16965:11: lv_damage_52_0= RULE_PERCENTAGE
            	    {
            	    lv_damage_52_0=(Token)match(input,RULE_PERCENTAGE,FOLLOW_37); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											newLeafNode(lv_damage_52_0, grammarAccess.getOverridePredicate_13Access().getDamagePERCENTAGETerminalRuleCall_3_5_3_0());
            	      										
            	    }
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElement(grammarAccess.getOverridePredicate_13Rule());
            	      											}
            	      											setWithLastConsumed(
            	      												current,
            	      												"damage",
            	      												lv_damage_52_0,
            	      												"com.raptor.mcmodel.Mcmodel.PERCENTAGE");
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getOverridePredicate_13Access().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 7 :
            	    // InternalMcmodel.g:16987:4: ({...}? => ( ({...}? => (otherlv_53= '&' ( ( ( (lv_damagedDefined_54_0= '!' ) ) otherlv_55= 'damaged' ) | ( ( (lv_damagedDefined_56_0= 'damaged' ) ) ( (otherlv_57= '!=' ( ( (lv_damaged_58_0= 'false' ) ) | otherlv_59= 'true' ) ) | ( (otherlv_60= '=' | otherlv_61= '==' ) ( ( (lv_damaged_62_0= 'true' ) ) | otherlv_63= 'false' ) ) ) ) ) ) ) ) )
            	    {
            	    // InternalMcmodel.g:16987:4: ({...}? => ( ({...}? => (otherlv_53= '&' ( ( ( (lv_damagedDefined_54_0= '!' ) ) otherlv_55= 'damaged' ) | ( ( (lv_damagedDefined_56_0= 'damaged' ) ) ( (otherlv_57= '!=' ( ( (lv_damaged_58_0= 'false' ) ) | otherlv_59= 'true' ) ) | ( (otherlv_60= '=' | otherlv_61= '==' ) ( ( (lv_damaged_62_0= 'true' ) ) | otherlv_63= 'false' ) ) ) ) ) ) ) ) )
            	    // InternalMcmodel.g:16988:5: {...}? => ( ({...}? => (otherlv_53= '&' ( ( ( (lv_damagedDefined_54_0= '!' ) ) otherlv_55= 'damaged' ) | ( ( (lv_damagedDefined_56_0= 'damaged' ) ) ( (otherlv_57= '!=' ( ( (lv_damaged_58_0= 'false' ) ) | otherlv_59= 'true' ) ) | ( (otherlv_60= '=' | otherlv_61= '==' ) ( ( (lv_damaged_62_0= 'true' ) ) | otherlv_63= 'false' ) ) ) ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_13Access().getUnorderedGroup_3(), 6) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_13", "getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_13Access().getUnorderedGroup_3(), 6)");
            	    }
            	    // InternalMcmodel.g:16988:117: ( ({...}? => (otherlv_53= '&' ( ( ( (lv_damagedDefined_54_0= '!' ) ) otherlv_55= 'damaged' ) | ( ( (lv_damagedDefined_56_0= 'damaged' ) ) ( (otherlv_57= '!=' ( ( (lv_damaged_58_0= 'false' ) ) | otherlv_59= 'true' ) ) | ( (otherlv_60= '=' | otherlv_61= '==' ) ( ( (lv_damaged_62_0= 'true' ) ) | otherlv_63= 'false' ) ) ) ) ) ) ) )
            	    // InternalMcmodel.g:16989:6: ({...}? => (otherlv_53= '&' ( ( ( (lv_damagedDefined_54_0= '!' ) ) otherlv_55= 'damaged' ) | ( ( (lv_damagedDefined_56_0= 'damaged' ) ) ( (otherlv_57= '!=' ( ( (lv_damaged_58_0= 'false' ) ) | otherlv_59= 'true' ) ) | ( (otherlv_60= '=' | otherlv_61= '==' ) ( ( (lv_damaged_62_0= 'true' ) ) | otherlv_63= 'false' ) ) ) ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getOverridePredicate_13Access().getUnorderedGroup_3(), 6);
            	    // InternalMcmodel.g:16992:9: ({...}? => (otherlv_53= '&' ( ( ( (lv_damagedDefined_54_0= '!' ) ) otherlv_55= 'damaged' ) | ( ( (lv_damagedDefined_56_0= 'damaged' ) ) ( (otherlv_57= '!=' ( ( (lv_damaged_58_0= 'false' ) ) | otherlv_59= 'true' ) ) | ( (otherlv_60= '=' | otherlv_61= '==' ) ( ( (lv_damaged_62_0= 'true' ) ) | otherlv_63= 'false' ) ) ) ) ) ) )
            	    // InternalMcmodel.g:16992:10: {...}? => (otherlv_53= '&' ( ( ( (lv_damagedDefined_54_0= '!' ) ) otherlv_55= 'damaged' ) | ( ( (lv_damagedDefined_56_0= 'damaged' ) ) ( (otherlv_57= '!=' ( ( (lv_damaged_58_0= 'false' ) ) | otherlv_59= 'true' ) ) | ( (otherlv_60= '=' | otherlv_61= '==' ) ( ( (lv_damaged_62_0= 'true' ) ) | otherlv_63= 'false' ) ) ) ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_13", "true");
            	    }
            	    // InternalMcmodel.g:16992:19: (otherlv_53= '&' ( ( ( (lv_damagedDefined_54_0= '!' ) ) otherlv_55= 'damaged' ) | ( ( (lv_damagedDefined_56_0= 'damaged' ) ) ( (otherlv_57= '!=' ( ( (lv_damaged_58_0= 'false' ) ) | otherlv_59= 'true' ) ) | ( (otherlv_60= '=' | otherlv_61= '==' ) ( ( (lv_damaged_62_0= 'true' ) ) | otherlv_63= 'false' ) ) ) ) ) )
            	    // InternalMcmodel.g:16992:20: otherlv_53= '&' ( ( ( (lv_damagedDefined_54_0= '!' ) ) otherlv_55= 'damaged' ) | ( ( (lv_damagedDefined_56_0= 'damaged' ) ) ( (otherlv_57= '!=' ( ( (lv_damaged_58_0= 'false' ) ) | otherlv_59= 'true' ) ) | ( (otherlv_60= '=' | otherlv_61= '==' ) ( ( (lv_damaged_62_0= 'true' ) ) | otherlv_63= 'false' ) ) ) ) )
            	    {
            	    otherlv_53=(Token)match(input,59,FOLLOW_47); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_53, grammarAccess.getOverridePredicate_13Access().getAmpersandKeyword_3_6_0());
            	      								
            	    }
            	    // InternalMcmodel.g:16996:9: ( ( ( (lv_damagedDefined_54_0= '!' ) ) otherlv_55= 'damaged' ) | ( ( (lv_damagedDefined_56_0= 'damaged' ) ) ( (otherlv_57= '!=' ( ( (lv_damaged_58_0= 'false' ) ) | otherlv_59= 'true' ) ) | ( (otherlv_60= '=' | otherlv_61= '==' ) ( ( (lv_damaged_62_0= 'true' ) ) | otherlv_63= 'false' ) ) ) ) )
            	    int alt549=2;
            	    int LA549_0 = input.LA(1);

            	    if ( (LA549_0==60) ) {
            	        alt549=1;
            	    }
            	    else if ( (LA549_0==67) ) {
            	        alt549=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 549, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt549) {
            	        case 1 :
            	            // InternalMcmodel.g:16997:10: ( ( (lv_damagedDefined_54_0= '!' ) ) otherlv_55= 'damaged' )
            	            {
            	            // InternalMcmodel.g:16997:10: ( ( (lv_damagedDefined_54_0= '!' ) ) otherlv_55= 'damaged' )
            	            // InternalMcmodel.g:16998:11: ( (lv_damagedDefined_54_0= '!' ) ) otherlv_55= 'damaged'
            	            {
            	            // InternalMcmodel.g:16998:11: ( (lv_damagedDefined_54_0= '!' ) )
            	            // InternalMcmodel.g:16999:12: (lv_damagedDefined_54_0= '!' )
            	            {
            	            // InternalMcmodel.g:16999:12: (lv_damagedDefined_54_0= '!' )
            	            // InternalMcmodel.g:17000:13: lv_damagedDefined_54_0= '!'
            	            {
            	            lv_damagedDefined_54_0=(Token)match(input,60,FOLLOW_48); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              													newLeafNode(lv_damagedDefined_54_0, grammarAccess.getOverridePredicate_13Access().getDamagedDefinedExclamationMarkKeyword_3_6_1_0_0_0());
            	              												
            	            }
            	            if ( state.backtracking==0 ) {

            	              													if (current==null) {
            	              														current = createModelElement(grammarAccess.getOverridePredicate_13Rule());
            	              													}
            	              													setWithLastConsumed(current, "damagedDefined", true, "!");
            	              												
            	            }

            	            }


            	            }

            	            otherlv_55=(Token)match(input,67,FOLLOW_37); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              											newLeafNode(otherlv_55, grammarAccess.getOverridePredicate_13Access().getDamagedKeyword_3_6_1_0_1());
            	              										
            	            }

            	            }


            	            }
            	            break;
            	        case 2 :
            	            // InternalMcmodel.g:17018:10: ( ( (lv_damagedDefined_56_0= 'damaged' ) ) ( (otherlv_57= '!=' ( ( (lv_damaged_58_0= 'false' ) ) | otherlv_59= 'true' ) ) | ( (otherlv_60= '=' | otherlv_61= '==' ) ( ( (lv_damaged_62_0= 'true' ) ) | otherlv_63= 'false' ) ) ) )
            	            {
            	            // InternalMcmodel.g:17018:10: ( ( (lv_damagedDefined_56_0= 'damaged' ) ) ( (otherlv_57= '!=' ( ( (lv_damaged_58_0= 'false' ) ) | otherlv_59= 'true' ) ) | ( (otherlv_60= '=' | otherlv_61= '==' ) ( ( (lv_damaged_62_0= 'true' ) ) | otherlv_63= 'false' ) ) ) )
            	            // InternalMcmodel.g:17019:11: ( (lv_damagedDefined_56_0= 'damaged' ) ) ( (otherlv_57= '!=' ( ( (lv_damaged_58_0= 'false' ) ) | otherlv_59= 'true' ) ) | ( (otherlv_60= '=' | otherlv_61= '==' ) ( ( (lv_damaged_62_0= 'true' ) ) | otherlv_63= 'false' ) ) )
            	            {
            	            // InternalMcmodel.g:17019:11: ( (lv_damagedDefined_56_0= 'damaged' ) )
            	            // InternalMcmodel.g:17020:12: (lv_damagedDefined_56_0= 'damaged' )
            	            {
            	            // InternalMcmodel.g:17020:12: (lv_damagedDefined_56_0= 'damaged' )
            	            // InternalMcmodel.g:17021:13: lv_damagedDefined_56_0= 'damaged'
            	            {
            	            lv_damagedDefined_56_0=(Token)match(input,67,FOLLOW_40); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              													newLeafNode(lv_damagedDefined_56_0, grammarAccess.getOverridePredicate_13Access().getDamagedDefinedDamagedKeyword_3_6_1_1_0_0());
            	              												
            	            }
            	            if ( state.backtracking==0 ) {

            	              													if (current==null) {
            	              														current = createModelElement(grammarAccess.getOverridePredicate_13Rule());
            	              													}
            	              													setWithLastConsumed(current, "damagedDefined", true, "damaged");
            	              												
            	            }

            	            }


            	            }

            	            // InternalMcmodel.g:17033:11: ( (otherlv_57= '!=' ( ( (lv_damaged_58_0= 'false' ) ) | otherlv_59= 'true' ) ) | ( (otherlv_60= '=' | otherlv_61= '==' ) ( ( (lv_damaged_62_0= 'true' ) ) | otherlv_63= 'false' ) ) )
            	            int alt548=2;
            	            int LA548_0 = input.LA(1);

            	            if ( (LA548_0==62) ) {
            	                alt548=1;
            	            }
            	            else if ( (LA548_0==18||LA548_0==58) ) {
            	                alt548=2;
            	            }
            	            else {
            	                if (state.backtracking>0) {state.failed=true; return current;}
            	                NoViableAltException nvae =
            	                    new NoViableAltException("", 548, 0, input);

            	                throw nvae;
            	            }
            	            switch (alt548) {
            	                case 1 :
            	                    // InternalMcmodel.g:17034:12: (otherlv_57= '!=' ( ( (lv_damaged_58_0= 'false' ) ) | otherlv_59= 'true' ) )
            	                    {
            	                    // InternalMcmodel.g:17034:12: (otherlv_57= '!=' ( ( (lv_damaged_58_0= 'false' ) ) | otherlv_59= 'true' ) )
            	                    // InternalMcmodel.g:17035:13: otherlv_57= '!=' ( ( (lv_damaged_58_0= 'false' ) ) | otherlv_59= 'true' )
            	                    {
            	                    otherlv_57=(Token)match(input,62,FOLLOW_7); if (state.failed) return current;
            	                    if ( state.backtracking==0 ) {

            	                      													newLeafNode(otherlv_57, grammarAccess.getOverridePredicate_13Access().getExclamationMarkEqualsSignKeyword_3_6_1_1_1_0_0());
            	                      												
            	                    }
            	                    // InternalMcmodel.g:17039:13: ( ( (lv_damaged_58_0= 'false' ) ) | otherlv_59= 'true' )
            	                    int alt545=2;
            	                    int LA545_0 = input.LA(1);

            	                    if ( (LA545_0==21) ) {
            	                        alt545=1;
            	                    }
            	                    else if ( (LA545_0==20) ) {
            	                        alt545=2;
            	                    }
            	                    else {
            	                        if (state.backtracking>0) {state.failed=true; return current;}
            	                        NoViableAltException nvae =
            	                            new NoViableAltException("", 545, 0, input);

            	                        throw nvae;
            	                    }
            	                    switch (alt545) {
            	                        case 1 :
            	                            // InternalMcmodel.g:17040:14: ( (lv_damaged_58_0= 'false' ) )
            	                            {
            	                            // InternalMcmodel.g:17040:14: ( (lv_damaged_58_0= 'false' ) )
            	                            // InternalMcmodel.g:17041:15: (lv_damaged_58_0= 'false' )
            	                            {
            	                            // InternalMcmodel.g:17041:15: (lv_damaged_58_0= 'false' )
            	                            // InternalMcmodel.g:17042:16: lv_damaged_58_0= 'false'
            	                            {
            	                            lv_damaged_58_0=(Token)match(input,21,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              																newLeafNode(lv_damaged_58_0, grammarAccess.getOverridePredicate_13Access().getDamagedFalseKeyword_3_6_1_1_1_0_1_0_0());
            	                              															
            	                            }
            	                            if ( state.backtracking==0 ) {

            	                              																if (current==null) {
            	                              																	current = createModelElement(grammarAccess.getOverridePredicate_13Rule());
            	                              																}
            	                              																setWithLastConsumed(current, "damaged", true, "false");
            	                              															
            	                            }

            	                            }


            	                            }


            	                            }
            	                            break;
            	                        case 2 :
            	                            // InternalMcmodel.g:17055:14: otherlv_59= 'true'
            	                            {
            	                            otherlv_59=(Token)match(input,20,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_59, grammarAccess.getOverridePredicate_13Access().getTrueKeyword_3_6_1_1_1_0_1_1());
            	                              													
            	                            }

            	                            }
            	                            break;

            	                    }


            	                    }


            	                    }
            	                    break;
            	                case 2 :
            	                    // InternalMcmodel.g:17062:12: ( (otherlv_60= '=' | otherlv_61= '==' ) ( ( (lv_damaged_62_0= 'true' ) ) | otherlv_63= 'false' ) )
            	                    {
            	                    // InternalMcmodel.g:17062:12: ( (otherlv_60= '=' | otherlv_61= '==' ) ( ( (lv_damaged_62_0= 'true' ) ) | otherlv_63= 'false' ) )
            	                    // InternalMcmodel.g:17063:13: (otherlv_60= '=' | otherlv_61= '==' ) ( ( (lv_damaged_62_0= 'true' ) ) | otherlv_63= 'false' )
            	                    {
            	                    // InternalMcmodel.g:17063:13: (otherlv_60= '=' | otherlv_61= '==' )
            	                    int alt546=2;
            	                    int LA546_0 = input.LA(1);

            	                    if ( (LA546_0==18) ) {
            	                        alt546=1;
            	                    }
            	                    else if ( (LA546_0==58) ) {
            	                        alt546=2;
            	                    }
            	                    else {
            	                        if (state.backtracking>0) {state.failed=true; return current;}
            	                        NoViableAltException nvae =
            	                            new NoViableAltException("", 546, 0, input);

            	                        throw nvae;
            	                    }
            	                    switch (alt546) {
            	                        case 1 :
            	                            // InternalMcmodel.g:17064:14: otherlv_60= '='
            	                            {
            	                            otherlv_60=(Token)match(input,18,FOLLOW_7); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_60, grammarAccess.getOverridePredicate_13Access().getEqualsSignKeyword_3_6_1_1_1_1_0_0());
            	                              													
            	                            }

            	                            }
            	                            break;
            	                        case 2 :
            	                            // InternalMcmodel.g:17069:14: otherlv_61= '=='
            	                            {
            	                            otherlv_61=(Token)match(input,58,FOLLOW_7); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_61, grammarAccess.getOverridePredicate_13Access().getEqualsSignEqualsSignKeyword_3_6_1_1_1_1_0_1());
            	                              													
            	                            }

            	                            }
            	                            break;

            	                    }

            	                    // InternalMcmodel.g:17074:13: ( ( (lv_damaged_62_0= 'true' ) ) | otherlv_63= 'false' )
            	                    int alt547=2;
            	                    int LA547_0 = input.LA(1);

            	                    if ( (LA547_0==20) ) {
            	                        alt547=1;
            	                    }
            	                    else if ( (LA547_0==21) ) {
            	                        alt547=2;
            	                    }
            	                    else {
            	                        if (state.backtracking>0) {state.failed=true; return current;}
            	                        NoViableAltException nvae =
            	                            new NoViableAltException("", 547, 0, input);

            	                        throw nvae;
            	                    }
            	                    switch (alt547) {
            	                        case 1 :
            	                            // InternalMcmodel.g:17075:14: ( (lv_damaged_62_0= 'true' ) )
            	                            {
            	                            // InternalMcmodel.g:17075:14: ( (lv_damaged_62_0= 'true' ) )
            	                            // InternalMcmodel.g:17076:15: (lv_damaged_62_0= 'true' )
            	                            {
            	                            // InternalMcmodel.g:17076:15: (lv_damaged_62_0= 'true' )
            	                            // InternalMcmodel.g:17077:16: lv_damaged_62_0= 'true'
            	                            {
            	                            lv_damaged_62_0=(Token)match(input,20,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              																newLeafNode(lv_damaged_62_0, grammarAccess.getOverridePredicate_13Access().getDamagedTrueKeyword_3_6_1_1_1_1_1_0_0());
            	                              															
            	                            }
            	                            if ( state.backtracking==0 ) {

            	                              																if (current==null) {
            	                              																	current = createModelElement(grammarAccess.getOverridePredicate_13Rule());
            	                              																}
            	                              																setWithLastConsumed(current, "damaged", true, "true");
            	                              															
            	                            }

            	                            }


            	                            }


            	                            }
            	                            break;
            	                        case 2 :
            	                            // InternalMcmodel.g:17090:14: otherlv_63= 'false'
            	                            {
            	                            otherlv_63=(Token)match(input,21,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_63, grammarAccess.getOverridePredicate_13Access().getFalseKeyword_3_6_1_1_1_1_1_1());
            	                              													
            	                            }

            	                            }
            	                            break;

            	                    }


            	                    }


            	                    }
            	                    break;

            	            }


            	            }


            	            }
            	            break;

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getOverridePredicate_13Access().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 8 :
            	    // InternalMcmodel.g:17105:4: ({...}? => ( ({...}? => (otherlv_64= '&' ( ( ( (lv_lefthandedDefined_65_0= '!' ) ) otherlv_66= 'lefthanded' ) | ( ( (lv_lefthandedDefined_67_0= 'lefthanded' ) ) ( (otherlv_68= '!=' ( ( (lv_lefthanded_69_0= 'false' ) ) | otherlv_70= 'true' ) ) | ( (otherlv_71= '=' | otherlv_72= '==' ) ( ( (lv_lefthanded_73_0= 'true' ) ) | otherlv_74= 'false' ) ) ) ) ) ) ) ) )
            	    {
            	    // InternalMcmodel.g:17105:4: ({...}? => ( ({...}? => (otherlv_64= '&' ( ( ( (lv_lefthandedDefined_65_0= '!' ) ) otherlv_66= 'lefthanded' ) | ( ( (lv_lefthandedDefined_67_0= 'lefthanded' ) ) ( (otherlv_68= '!=' ( ( (lv_lefthanded_69_0= 'false' ) ) | otherlv_70= 'true' ) ) | ( (otherlv_71= '=' | otherlv_72= '==' ) ( ( (lv_lefthanded_73_0= 'true' ) ) | otherlv_74= 'false' ) ) ) ) ) ) ) ) )
            	    // InternalMcmodel.g:17106:5: {...}? => ( ({...}? => (otherlv_64= '&' ( ( ( (lv_lefthandedDefined_65_0= '!' ) ) otherlv_66= 'lefthanded' ) | ( ( (lv_lefthandedDefined_67_0= 'lefthanded' ) ) ( (otherlv_68= '!=' ( ( (lv_lefthanded_69_0= 'false' ) ) | otherlv_70= 'true' ) ) | ( (otherlv_71= '=' | otherlv_72= '==' ) ( ( (lv_lefthanded_73_0= 'true' ) ) | otherlv_74= 'false' ) ) ) ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_13Access().getUnorderedGroup_3(), 7) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_13", "getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_13Access().getUnorderedGroup_3(), 7)");
            	    }
            	    // InternalMcmodel.g:17106:117: ( ({...}? => (otherlv_64= '&' ( ( ( (lv_lefthandedDefined_65_0= '!' ) ) otherlv_66= 'lefthanded' ) | ( ( (lv_lefthandedDefined_67_0= 'lefthanded' ) ) ( (otherlv_68= '!=' ( ( (lv_lefthanded_69_0= 'false' ) ) | otherlv_70= 'true' ) ) | ( (otherlv_71= '=' | otherlv_72= '==' ) ( ( (lv_lefthanded_73_0= 'true' ) ) | otherlv_74= 'false' ) ) ) ) ) ) ) )
            	    // InternalMcmodel.g:17107:6: ({...}? => (otherlv_64= '&' ( ( ( (lv_lefthandedDefined_65_0= '!' ) ) otherlv_66= 'lefthanded' ) | ( ( (lv_lefthandedDefined_67_0= 'lefthanded' ) ) ( (otherlv_68= '!=' ( ( (lv_lefthanded_69_0= 'false' ) ) | otherlv_70= 'true' ) ) | ( (otherlv_71= '=' | otherlv_72= '==' ) ( ( (lv_lefthanded_73_0= 'true' ) ) | otherlv_74= 'false' ) ) ) ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getOverridePredicate_13Access().getUnorderedGroup_3(), 7);
            	    // InternalMcmodel.g:17110:9: ({...}? => (otherlv_64= '&' ( ( ( (lv_lefthandedDefined_65_0= '!' ) ) otherlv_66= 'lefthanded' ) | ( ( (lv_lefthandedDefined_67_0= 'lefthanded' ) ) ( (otherlv_68= '!=' ( ( (lv_lefthanded_69_0= 'false' ) ) | otherlv_70= 'true' ) ) | ( (otherlv_71= '=' | otherlv_72= '==' ) ( ( (lv_lefthanded_73_0= 'true' ) ) | otherlv_74= 'false' ) ) ) ) ) ) )
            	    // InternalMcmodel.g:17110:10: {...}? => (otherlv_64= '&' ( ( ( (lv_lefthandedDefined_65_0= '!' ) ) otherlv_66= 'lefthanded' ) | ( ( (lv_lefthandedDefined_67_0= 'lefthanded' ) ) ( (otherlv_68= '!=' ( ( (lv_lefthanded_69_0= 'false' ) ) | otherlv_70= 'true' ) ) | ( (otherlv_71= '=' | otherlv_72= '==' ) ( ( (lv_lefthanded_73_0= 'true' ) ) | otherlv_74= 'false' ) ) ) ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_13", "true");
            	    }
            	    // InternalMcmodel.g:17110:19: (otherlv_64= '&' ( ( ( (lv_lefthandedDefined_65_0= '!' ) ) otherlv_66= 'lefthanded' ) | ( ( (lv_lefthandedDefined_67_0= 'lefthanded' ) ) ( (otherlv_68= '!=' ( ( (lv_lefthanded_69_0= 'false' ) ) | otherlv_70= 'true' ) ) | ( (otherlv_71= '=' | otherlv_72= '==' ) ( ( (lv_lefthanded_73_0= 'true' ) ) | otherlv_74= 'false' ) ) ) ) ) )
            	    // InternalMcmodel.g:17110:20: otherlv_64= '&' ( ( ( (lv_lefthandedDefined_65_0= '!' ) ) otherlv_66= 'lefthanded' ) | ( ( (lv_lefthandedDefined_67_0= 'lefthanded' ) ) ( (otherlv_68= '!=' ( ( (lv_lefthanded_69_0= 'false' ) ) | otherlv_70= 'true' ) ) | ( (otherlv_71= '=' | otherlv_72= '==' ) ( ( (lv_lefthanded_73_0= 'true' ) ) | otherlv_74= 'false' ) ) ) ) )
            	    {
            	    otherlv_64=(Token)match(input,59,FOLLOW_49); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_64, grammarAccess.getOverridePredicate_13Access().getAmpersandKeyword_3_7_0());
            	      								
            	    }
            	    // InternalMcmodel.g:17114:9: ( ( ( (lv_lefthandedDefined_65_0= '!' ) ) otherlv_66= 'lefthanded' ) | ( ( (lv_lefthandedDefined_67_0= 'lefthanded' ) ) ( (otherlv_68= '!=' ( ( (lv_lefthanded_69_0= 'false' ) ) | otherlv_70= 'true' ) ) | ( (otherlv_71= '=' | otherlv_72= '==' ) ( ( (lv_lefthanded_73_0= 'true' ) ) | otherlv_74= 'false' ) ) ) ) )
            	    int alt554=2;
            	    int LA554_0 = input.LA(1);

            	    if ( (LA554_0==60) ) {
            	        alt554=1;
            	    }
            	    else if ( (LA554_0==68) ) {
            	        alt554=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 554, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt554) {
            	        case 1 :
            	            // InternalMcmodel.g:17115:10: ( ( (lv_lefthandedDefined_65_0= '!' ) ) otherlv_66= 'lefthanded' )
            	            {
            	            // InternalMcmodel.g:17115:10: ( ( (lv_lefthandedDefined_65_0= '!' ) ) otherlv_66= 'lefthanded' )
            	            // InternalMcmodel.g:17116:11: ( (lv_lefthandedDefined_65_0= '!' ) ) otherlv_66= 'lefthanded'
            	            {
            	            // InternalMcmodel.g:17116:11: ( (lv_lefthandedDefined_65_0= '!' ) )
            	            // InternalMcmodel.g:17117:12: (lv_lefthandedDefined_65_0= '!' )
            	            {
            	            // InternalMcmodel.g:17117:12: (lv_lefthandedDefined_65_0= '!' )
            	            // InternalMcmodel.g:17118:13: lv_lefthandedDefined_65_0= '!'
            	            {
            	            lv_lefthandedDefined_65_0=(Token)match(input,60,FOLLOW_50); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              													newLeafNode(lv_lefthandedDefined_65_0, grammarAccess.getOverridePredicate_13Access().getLefthandedDefinedExclamationMarkKeyword_3_7_1_0_0_0());
            	              												
            	            }
            	            if ( state.backtracking==0 ) {

            	              													if (current==null) {
            	              														current = createModelElement(grammarAccess.getOverridePredicate_13Rule());
            	              													}
            	              													setWithLastConsumed(current, "lefthandedDefined", true, "!");
            	              												
            	            }

            	            }


            	            }

            	            otherlv_66=(Token)match(input,68,FOLLOW_37); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              											newLeafNode(otherlv_66, grammarAccess.getOverridePredicate_13Access().getLefthandedKeyword_3_7_1_0_1());
            	              										
            	            }

            	            }


            	            }
            	            break;
            	        case 2 :
            	            // InternalMcmodel.g:17136:10: ( ( (lv_lefthandedDefined_67_0= 'lefthanded' ) ) ( (otherlv_68= '!=' ( ( (lv_lefthanded_69_0= 'false' ) ) | otherlv_70= 'true' ) ) | ( (otherlv_71= '=' | otherlv_72= '==' ) ( ( (lv_lefthanded_73_0= 'true' ) ) | otherlv_74= 'false' ) ) ) )
            	            {
            	            // InternalMcmodel.g:17136:10: ( ( (lv_lefthandedDefined_67_0= 'lefthanded' ) ) ( (otherlv_68= '!=' ( ( (lv_lefthanded_69_0= 'false' ) ) | otherlv_70= 'true' ) ) | ( (otherlv_71= '=' | otherlv_72= '==' ) ( ( (lv_lefthanded_73_0= 'true' ) ) | otherlv_74= 'false' ) ) ) )
            	            // InternalMcmodel.g:17137:11: ( (lv_lefthandedDefined_67_0= 'lefthanded' ) ) ( (otherlv_68= '!=' ( ( (lv_lefthanded_69_0= 'false' ) ) | otherlv_70= 'true' ) ) | ( (otherlv_71= '=' | otherlv_72= '==' ) ( ( (lv_lefthanded_73_0= 'true' ) ) | otherlv_74= 'false' ) ) )
            	            {
            	            // InternalMcmodel.g:17137:11: ( (lv_lefthandedDefined_67_0= 'lefthanded' ) )
            	            // InternalMcmodel.g:17138:12: (lv_lefthandedDefined_67_0= 'lefthanded' )
            	            {
            	            // InternalMcmodel.g:17138:12: (lv_lefthandedDefined_67_0= 'lefthanded' )
            	            // InternalMcmodel.g:17139:13: lv_lefthandedDefined_67_0= 'lefthanded'
            	            {
            	            lv_lefthandedDefined_67_0=(Token)match(input,68,FOLLOW_40); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              													newLeafNode(lv_lefthandedDefined_67_0, grammarAccess.getOverridePredicate_13Access().getLefthandedDefinedLefthandedKeyword_3_7_1_1_0_0());
            	              												
            	            }
            	            if ( state.backtracking==0 ) {

            	              													if (current==null) {
            	              														current = createModelElement(grammarAccess.getOverridePredicate_13Rule());
            	              													}
            	              													setWithLastConsumed(current, "lefthandedDefined", true, "lefthanded");
            	              												
            	            }

            	            }


            	            }

            	            // InternalMcmodel.g:17151:11: ( (otherlv_68= '!=' ( ( (lv_lefthanded_69_0= 'false' ) ) | otherlv_70= 'true' ) ) | ( (otherlv_71= '=' | otherlv_72= '==' ) ( ( (lv_lefthanded_73_0= 'true' ) ) | otherlv_74= 'false' ) ) )
            	            int alt553=2;
            	            int LA553_0 = input.LA(1);

            	            if ( (LA553_0==62) ) {
            	                alt553=1;
            	            }
            	            else if ( (LA553_0==18||LA553_0==58) ) {
            	                alt553=2;
            	            }
            	            else {
            	                if (state.backtracking>0) {state.failed=true; return current;}
            	                NoViableAltException nvae =
            	                    new NoViableAltException("", 553, 0, input);

            	                throw nvae;
            	            }
            	            switch (alt553) {
            	                case 1 :
            	                    // InternalMcmodel.g:17152:12: (otherlv_68= '!=' ( ( (lv_lefthanded_69_0= 'false' ) ) | otherlv_70= 'true' ) )
            	                    {
            	                    // InternalMcmodel.g:17152:12: (otherlv_68= '!=' ( ( (lv_lefthanded_69_0= 'false' ) ) | otherlv_70= 'true' ) )
            	                    // InternalMcmodel.g:17153:13: otherlv_68= '!=' ( ( (lv_lefthanded_69_0= 'false' ) ) | otherlv_70= 'true' )
            	                    {
            	                    otherlv_68=(Token)match(input,62,FOLLOW_7); if (state.failed) return current;
            	                    if ( state.backtracking==0 ) {

            	                      													newLeafNode(otherlv_68, grammarAccess.getOverridePredicate_13Access().getExclamationMarkEqualsSignKeyword_3_7_1_1_1_0_0());
            	                      												
            	                    }
            	                    // InternalMcmodel.g:17157:13: ( ( (lv_lefthanded_69_0= 'false' ) ) | otherlv_70= 'true' )
            	                    int alt550=2;
            	                    int LA550_0 = input.LA(1);

            	                    if ( (LA550_0==21) ) {
            	                        alt550=1;
            	                    }
            	                    else if ( (LA550_0==20) ) {
            	                        alt550=2;
            	                    }
            	                    else {
            	                        if (state.backtracking>0) {state.failed=true; return current;}
            	                        NoViableAltException nvae =
            	                            new NoViableAltException("", 550, 0, input);

            	                        throw nvae;
            	                    }
            	                    switch (alt550) {
            	                        case 1 :
            	                            // InternalMcmodel.g:17158:14: ( (lv_lefthanded_69_0= 'false' ) )
            	                            {
            	                            // InternalMcmodel.g:17158:14: ( (lv_lefthanded_69_0= 'false' ) )
            	                            // InternalMcmodel.g:17159:15: (lv_lefthanded_69_0= 'false' )
            	                            {
            	                            // InternalMcmodel.g:17159:15: (lv_lefthanded_69_0= 'false' )
            	                            // InternalMcmodel.g:17160:16: lv_lefthanded_69_0= 'false'
            	                            {
            	                            lv_lefthanded_69_0=(Token)match(input,21,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              																newLeafNode(lv_lefthanded_69_0, grammarAccess.getOverridePredicate_13Access().getLefthandedFalseKeyword_3_7_1_1_1_0_1_0_0());
            	                              															
            	                            }
            	                            if ( state.backtracking==0 ) {

            	                              																if (current==null) {
            	                              																	current = createModelElement(grammarAccess.getOverridePredicate_13Rule());
            	                              																}
            	                              																setWithLastConsumed(current, "lefthanded", true, "false");
            	                              															
            	                            }

            	                            }


            	                            }


            	                            }
            	                            break;
            	                        case 2 :
            	                            // InternalMcmodel.g:17173:14: otherlv_70= 'true'
            	                            {
            	                            otherlv_70=(Token)match(input,20,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_70, grammarAccess.getOverridePredicate_13Access().getTrueKeyword_3_7_1_1_1_0_1_1());
            	                              													
            	                            }

            	                            }
            	                            break;

            	                    }


            	                    }


            	                    }
            	                    break;
            	                case 2 :
            	                    // InternalMcmodel.g:17180:12: ( (otherlv_71= '=' | otherlv_72= '==' ) ( ( (lv_lefthanded_73_0= 'true' ) ) | otherlv_74= 'false' ) )
            	                    {
            	                    // InternalMcmodel.g:17180:12: ( (otherlv_71= '=' | otherlv_72= '==' ) ( ( (lv_lefthanded_73_0= 'true' ) ) | otherlv_74= 'false' ) )
            	                    // InternalMcmodel.g:17181:13: (otherlv_71= '=' | otherlv_72= '==' ) ( ( (lv_lefthanded_73_0= 'true' ) ) | otherlv_74= 'false' )
            	                    {
            	                    // InternalMcmodel.g:17181:13: (otherlv_71= '=' | otherlv_72= '==' )
            	                    int alt551=2;
            	                    int LA551_0 = input.LA(1);

            	                    if ( (LA551_0==18) ) {
            	                        alt551=1;
            	                    }
            	                    else if ( (LA551_0==58) ) {
            	                        alt551=2;
            	                    }
            	                    else {
            	                        if (state.backtracking>0) {state.failed=true; return current;}
            	                        NoViableAltException nvae =
            	                            new NoViableAltException("", 551, 0, input);

            	                        throw nvae;
            	                    }
            	                    switch (alt551) {
            	                        case 1 :
            	                            // InternalMcmodel.g:17182:14: otherlv_71= '='
            	                            {
            	                            otherlv_71=(Token)match(input,18,FOLLOW_7); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_71, grammarAccess.getOverridePredicate_13Access().getEqualsSignKeyword_3_7_1_1_1_1_0_0());
            	                              													
            	                            }

            	                            }
            	                            break;
            	                        case 2 :
            	                            // InternalMcmodel.g:17187:14: otherlv_72= '=='
            	                            {
            	                            otherlv_72=(Token)match(input,58,FOLLOW_7); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_72, grammarAccess.getOverridePredicate_13Access().getEqualsSignEqualsSignKeyword_3_7_1_1_1_1_0_1());
            	                              													
            	                            }

            	                            }
            	                            break;

            	                    }

            	                    // InternalMcmodel.g:17192:13: ( ( (lv_lefthanded_73_0= 'true' ) ) | otherlv_74= 'false' )
            	                    int alt552=2;
            	                    int LA552_0 = input.LA(1);

            	                    if ( (LA552_0==20) ) {
            	                        alt552=1;
            	                    }
            	                    else if ( (LA552_0==21) ) {
            	                        alt552=2;
            	                    }
            	                    else {
            	                        if (state.backtracking>0) {state.failed=true; return current;}
            	                        NoViableAltException nvae =
            	                            new NoViableAltException("", 552, 0, input);

            	                        throw nvae;
            	                    }
            	                    switch (alt552) {
            	                        case 1 :
            	                            // InternalMcmodel.g:17193:14: ( (lv_lefthanded_73_0= 'true' ) )
            	                            {
            	                            // InternalMcmodel.g:17193:14: ( (lv_lefthanded_73_0= 'true' ) )
            	                            // InternalMcmodel.g:17194:15: (lv_lefthanded_73_0= 'true' )
            	                            {
            	                            // InternalMcmodel.g:17194:15: (lv_lefthanded_73_0= 'true' )
            	                            // InternalMcmodel.g:17195:16: lv_lefthanded_73_0= 'true'
            	                            {
            	                            lv_lefthanded_73_0=(Token)match(input,20,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              																newLeafNode(lv_lefthanded_73_0, grammarAccess.getOverridePredicate_13Access().getLefthandedTrueKeyword_3_7_1_1_1_1_1_0_0());
            	                              															
            	                            }
            	                            if ( state.backtracking==0 ) {

            	                              																if (current==null) {
            	                              																	current = createModelElement(grammarAccess.getOverridePredicate_13Rule());
            	                              																}
            	                              																setWithLastConsumed(current, "lefthanded", true, "true");
            	                              															
            	                            }

            	                            }


            	                            }


            	                            }
            	                            break;
            	                        case 2 :
            	                            // InternalMcmodel.g:17208:14: otherlv_74= 'false'
            	                            {
            	                            otherlv_74=(Token)match(input,21,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_74, grammarAccess.getOverridePredicate_13Access().getFalseKeyword_3_7_1_1_1_1_1_1());
            	                              													
            	                            }

            	                            }
            	                            break;

            	                    }


            	                    }


            	                    }
            	                    break;

            	            }


            	            }


            	            }
            	            break;

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getOverridePredicate_13Access().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 9 :
            	    // InternalMcmodel.g:17223:4: ({...}? => ( ({...}? => (otherlv_75= '&' ( (lv_pullDefined_76_0= 'pull' ) ) (otherlv_77= '=' | otherlv_78= '==' ) ( (lv_pull_79_0= RULE_PERCENTAGE ) ) ) ) ) )
            	    {
            	    // InternalMcmodel.g:17223:4: ({...}? => ( ({...}? => (otherlv_75= '&' ( (lv_pullDefined_76_0= 'pull' ) ) (otherlv_77= '=' | otherlv_78= '==' ) ( (lv_pull_79_0= RULE_PERCENTAGE ) ) ) ) ) )
            	    // InternalMcmodel.g:17224:5: {...}? => ( ({...}? => (otherlv_75= '&' ( (lv_pullDefined_76_0= 'pull' ) ) (otherlv_77= '=' | otherlv_78= '==' ) ( (lv_pull_79_0= RULE_PERCENTAGE ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_13Access().getUnorderedGroup_3(), 8) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_13", "getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_13Access().getUnorderedGroup_3(), 8)");
            	    }
            	    // InternalMcmodel.g:17224:117: ( ({...}? => (otherlv_75= '&' ( (lv_pullDefined_76_0= 'pull' ) ) (otherlv_77= '=' | otherlv_78= '==' ) ( (lv_pull_79_0= RULE_PERCENTAGE ) ) ) ) )
            	    // InternalMcmodel.g:17225:6: ({...}? => (otherlv_75= '&' ( (lv_pullDefined_76_0= 'pull' ) ) (otherlv_77= '=' | otherlv_78= '==' ) ( (lv_pull_79_0= RULE_PERCENTAGE ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getOverridePredicate_13Access().getUnorderedGroup_3(), 8);
            	    // InternalMcmodel.g:17228:9: ({...}? => (otherlv_75= '&' ( (lv_pullDefined_76_0= 'pull' ) ) (otherlv_77= '=' | otherlv_78= '==' ) ( (lv_pull_79_0= RULE_PERCENTAGE ) ) ) )
            	    // InternalMcmodel.g:17228:10: {...}? => (otherlv_75= '&' ( (lv_pullDefined_76_0= 'pull' ) ) (otherlv_77= '=' | otherlv_78= '==' ) ( (lv_pull_79_0= RULE_PERCENTAGE ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_13", "true");
            	    }
            	    // InternalMcmodel.g:17228:19: (otherlv_75= '&' ( (lv_pullDefined_76_0= 'pull' ) ) (otherlv_77= '=' | otherlv_78= '==' ) ( (lv_pull_79_0= RULE_PERCENTAGE ) ) )
            	    // InternalMcmodel.g:17228:20: otherlv_75= '&' ( (lv_pullDefined_76_0= 'pull' ) ) (otherlv_77= '=' | otherlv_78= '==' ) ( (lv_pull_79_0= RULE_PERCENTAGE ) )
            	    {
            	    otherlv_75=(Token)match(input,59,FOLLOW_51); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_75, grammarAccess.getOverridePredicate_13Access().getAmpersandKeyword_3_8_0());
            	      								
            	    }
            	    // InternalMcmodel.g:17232:9: ( (lv_pullDefined_76_0= 'pull' ) )
            	    // InternalMcmodel.g:17233:10: (lv_pullDefined_76_0= 'pull' )
            	    {
            	    // InternalMcmodel.g:17233:10: (lv_pullDefined_76_0= 'pull' )
            	    // InternalMcmodel.g:17234:11: lv_pullDefined_76_0= 'pull'
            	    {
            	    lv_pullDefined_76_0=(Token)match(input,69,FOLLOW_35); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											newLeafNode(lv_pullDefined_76_0, grammarAccess.getOverridePredicate_13Access().getPullDefinedPullKeyword_3_8_1_0());
            	      										
            	    }
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElement(grammarAccess.getOverridePredicate_13Rule());
            	      											}
            	      											setWithLastConsumed(current, "pullDefined", true, "pull");
            	      										
            	    }

            	    }


            	    }

            	    // InternalMcmodel.g:17246:9: (otherlv_77= '=' | otherlv_78= '==' )
            	    int alt555=2;
            	    int LA555_0 = input.LA(1);

            	    if ( (LA555_0==18) ) {
            	        alt555=1;
            	    }
            	    else if ( (LA555_0==58) ) {
            	        alt555=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 555, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt555) {
            	        case 1 :
            	            // InternalMcmodel.g:17247:10: otherlv_77= '='
            	            {
            	            otherlv_77=(Token)match(input,18,FOLLOW_36); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(otherlv_77, grammarAccess.getOverridePredicate_13Access().getEqualsSignKeyword_3_8_2_0());
            	              									
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalMcmodel.g:17252:10: otherlv_78= '=='
            	            {
            	            otherlv_78=(Token)match(input,58,FOLLOW_36); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(otherlv_78, grammarAccess.getOverridePredicate_13Access().getEqualsSignEqualsSignKeyword_3_8_2_1());
            	              									
            	            }

            	            }
            	            break;

            	    }

            	    // InternalMcmodel.g:17257:9: ( (lv_pull_79_0= RULE_PERCENTAGE ) )
            	    // InternalMcmodel.g:17258:10: (lv_pull_79_0= RULE_PERCENTAGE )
            	    {
            	    // InternalMcmodel.g:17258:10: (lv_pull_79_0= RULE_PERCENTAGE )
            	    // InternalMcmodel.g:17259:11: lv_pull_79_0= RULE_PERCENTAGE
            	    {
            	    lv_pull_79_0=(Token)match(input,RULE_PERCENTAGE,FOLLOW_37); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											newLeafNode(lv_pull_79_0, grammarAccess.getOverridePredicate_13Access().getPullPERCENTAGETerminalRuleCall_3_8_3_0());
            	      										
            	    }
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElement(grammarAccess.getOverridePredicate_13Rule());
            	      											}
            	      											setWithLastConsumed(
            	      												current,
            	      												"pull",
            	      												lv_pull_79_0,
            	      												"com.raptor.mcmodel.Mcmodel.PERCENTAGE");
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getOverridePredicate_13Access().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 10 :
            	    // InternalMcmodel.g:17281:4: ({...}? => ( ({...}? => (otherlv_80= '&' ( ( ( (lv_pullingDefined_81_0= '!' ) ) otherlv_82= 'pulling' ) | ( ( (lv_pullingDefined_83_0= 'pulling' ) ) ( (otherlv_84= '!=' ( ( (lv_pulling_85_0= 'false' ) ) | otherlv_86= 'true' ) ) | ( (otherlv_87= '=' | otherlv_88= '==' ) ( ( (lv_pulling_89_0= 'true' ) ) | otherlv_90= 'false' ) ) ) ) ) ) ) ) )
            	    {
            	    // InternalMcmodel.g:17281:4: ({...}? => ( ({...}? => (otherlv_80= '&' ( ( ( (lv_pullingDefined_81_0= '!' ) ) otherlv_82= 'pulling' ) | ( ( (lv_pullingDefined_83_0= 'pulling' ) ) ( (otherlv_84= '!=' ( ( (lv_pulling_85_0= 'false' ) ) | otherlv_86= 'true' ) ) | ( (otherlv_87= '=' | otherlv_88= '==' ) ( ( (lv_pulling_89_0= 'true' ) ) | otherlv_90= 'false' ) ) ) ) ) ) ) ) )
            	    // InternalMcmodel.g:17282:5: {...}? => ( ({...}? => (otherlv_80= '&' ( ( ( (lv_pullingDefined_81_0= '!' ) ) otherlv_82= 'pulling' ) | ( ( (lv_pullingDefined_83_0= 'pulling' ) ) ( (otherlv_84= '!=' ( ( (lv_pulling_85_0= 'false' ) ) | otherlv_86= 'true' ) ) | ( (otherlv_87= '=' | otherlv_88= '==' ) ( ( (lv_pulling_89_0= 'true' ) ) | otherlv_90= 'false' ) ) ) ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_13Access().getUnorderedGroup_3(), 9) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_13", "getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_13Access().getUnorderedGroup_3(), 9)");
            	    }
            	    // InternalMcmodel.g:17282:117: ( ({...}? => (otherlv_80= '&' ( ( ( (lv_pullingDefined_81_0= '!' ) ) otherlv_82= 'pulling' ) | ( ( (lv_pullingDefined_83_0= 'pulling' ) ) ( (otherlv_84= '!=' ( ( (lv_pulling_85_0= 'false' ) ) | otherlv_86= 'true' ) ) | ( (otherlv_87= '=' | otherlv_88= '==' ) ( ( (lv_pulling_89_0= 'true' ) ) | otherlv_90= 'false' ) ) ) ) ) ) ) )
            	    // InternalMcmodel.g:17283:6: ({...}? => (otherlv_80= '&' ( ( ( (lv_pullingDefined_81_0= '!' ) ) otherlv_82= 'pulling' ) | ( ( (lv_pullingDefined_83_0= 'pulling' ) ) ( (otherlv_84= '!=' ( ( (lv_pulling_85_0= 'false' ) ) | otherlv_86= 'true' ) ) | ( (otherlv_87= '=' | otherlv_88= '==' ) ( ( (lv_pulling_89_0= 'true' ) ) | otherlv_90= 'false' ) ) ) ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getOverridePredicate_13Access().getUnorderedGroup_3(), 9);
            	    // InternalMcmodel.g:17286:9: ({...}? => (otherlv_80= '&' ( ( ( (lv_pullingDefined_81_0= '!' ) ) otherlv_82= 'pulling' ) | ( ( (lv_pullingDefined_83_0= 'pulling' ) ) ( (otherlv_84= '!=' ( ( (lv_pulling_85_0= 'false' ) ) | otherlv_86= 'true' ) ) | ( (otherlv_87= '=' | otherlv_88= '==' ) ( ( (lv_pulling_89_0= 'true' ) ) | otherlv_90= 'false' ) ) ) ) ) ) )
            	    // InternalMcmodel.g:17286:10: {...}? => (otherlv_80= '&' ( ( ( (lv_pullingDefined_81_0= '!' ) ) otherlv_82= 'pulling' ) | ( ( (lv_pullingDefined_83_0= 'pulling' ) ) ( (otherlv_84= '!=' ( ( (lv_pulling_85_0= 'false' ) ) | otherlv_86= 'true' ) ) | ( (otherlv_87= '=' | otherlv_88= '==' ) ( ( (lv_pulling_89_0= 'true' ) ) | otherlv_90= 'false' ) ) ) ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_13", "true");
            	    }
            	    // InternalMcmodel.g:17286:19: (otherlv_80= '&' ( ( ( (lv_pullingDefined_81_0= '!' ) ) otherlv_82= 'pulling' ) | ( ( (lv_pullingDefined_83_0= 'pulling' ) ) ( (otherlv_84= '!=' ( ( (lv_pulling_85_0= 'false' ) ) | otherlv_86= 'true' ) ) | ( (otherlv_87= '=' | otherlv_88= '==' ) ( ( (lv_pulling_89_0= 'true' ) ) | otherlv_90= 'false' ) ) ) ) ) )
            	    // InternalMcmodel.g:17286:20: otherlv_80= '&' ( ( ( (lv_pullingDefined_81_0= '!' ) ) otherlv_82= 'pulling' ) | ( ( (lv_pullingDefined_83_0= 'pulling' ) ) ( (otherlv_84= '!=' ( ( (lv_pulling_85_0= 'false' ) ) | otherlv_86= 'true' ) ) | ( (otherlv_87= '=' | otherlv_88= '==' ) ( ( (lv_pulling_89_0= 'true' ) ) | otherlv_90= 'false' ) ) ) ) )
            	    {
            	    otherlv_80=(Token)match(input,59,FOLLOW_52); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_80, grammarAccess.getOverridePredicate_13Access().getAmpersandKeyword_3_9_0());
            	      								
            	    }
            	    // InternalMcmodel.g:17290:9: ( ( ( (lv_pullingDefined_81_0= '!' ) ) otherlv_82= 'pulling' ) | ( ( (lv_pullingDefined_83_0= 'pulling' ) ) ( (otherlv_84= '!=' ( ( (lv_pulling_85_0= 'false' ) ) | otherlv_86= 'true' ) ) | ( (otherlv_87= '=' | otherlv_88= '==' ) ( ( (lv_pulling_89_0= 'true' ) ) | otherlv_90= 'false' ) ) ) ) )
            	    int alt560=2;
            	    int LA560_0 = input.LA(1);

            	    if ( (LA560_0==60) ) {
            	        alt560=1;
            	    }
            	    else if ( (LA560_0==70) ) {
            	        alt560=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 560, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt560) {
            	        case 1 :
            	            // InternalMcmodel.g:17291:10: ( ( (lv_pullingDefined_81_0= '!' ) ) otherlv_82= 'pulling' )
            	            {
            	            // InternalMcmodel.g:17291:10: ( ( (lv_pullingDefined_81_0= '!' ) ) otherlv_82= 'pulling' )
            	            // InternalMcmodel.g:17292:11: ( (lv_pullingDefined_81_0= '!' ) ) otherlv_82= 'pulling'
            	            {
            	            // InternalMcmodel.g:17292:11: ( (lv_pullingDefined_81_0= '!' ) )
            	            // InternalMcmodel.g:17293:12: (lv_pullingDefined_81_0= '!' )
            	            {
            	            // InternalMcmodel.g:17293:12: (lv_pullingDefined_81_0= '!' )
            	            // InternalMcmodel.g:17294:13: lv_pullingDefined_81_0= '!'
            	            {
            	            lv_pullingDefined_81_0=(Token)match(input,60,FOLLOW_53); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              													newLeafNode(lv_pullingDefined_81_0, grammarAccess.getOverridePredicate_13Access().getPullingDefinedExclamationMarkKeyword_3_9_1_0_0_0());
            	              												
            	            }
            	            if ( state.backtracking==0 ) {

            	              													if (current==null) {
            	              														current = createModelElement(grammarAccess.getOverridePredicate_13Rule());
            	              													}
            	              													setWithLastConsumed(current, "pullingDefined", true, "!");
            	              												
            	            }

            	            }


            	            }

            	            otherlv_82=(Token)match(input,70,FOLLOW_37); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              											newLeafNode(otherlv_82, grammarAccess.getOverridePredicate_13Access().getPullingKeyword_3_9_1_0_1());
            	              										
            	            }

            	            }


            	            }
            	            break;
            	        case 2 :
            	            // InternalMcmodel.g:17312:10: ( ( (lv_pullingDefined_83_0= 'pulling' ) ) ( (otherlv_84= '!=' ( ( (lv_pulling_85_0= 'false' ) ) | otherlv_86= 'true' ) ) | ( (otherlv_87= '=' | otherlv_88= '==' ) ( ( (lv_pulling_89_0= 'true' ) ) | otherlv_90= 'false' ) ) ) )
            	            {
            	            // InternalMcmodel.g:17312:10: ( ( (lv_pullingDefined_83_0= 'pulling' ) ) ( (otherlv_84= '!=' ( ( (lv_pulling_85_0= 'false' ) ) | otherlv_86= 'true' ) ) | ( (otherlv_87= '=' | otherlv_88= '==' ) ( ( (lv_pulling_89_0= 'true' ) ) | otherlv_90= 'false' ) ) ) )
            	            // InternalMcmodel.g:17313:11: ( (lv_pullingDefined_83_0= 'pulling' ) ) ( (otherlv_84= '!=' ( ( (lv_pulling_85_0= 'false' ) ) | otherlv_86= 'true' ) ) | ( (otherlv_87= '=' | otherlv_88= '==' ) ( ( (lv_pulling_89_0= 'true' ) ) | otherlv_90= 'false' ) ) )
            	            {
            	            // InternalMcmodel.g:17313:11: ( (lv_pullingDefined_83_0= 'pulling' ) )
            	            // InternalMcmodel.g:17314:12: (lv_pullingDefined_83_0= 'pulling' )
            	            {
            	            // InternalMcmodel.g:17314:12: (lv_pullingDefined_83_0= 'pulling' )
            	            // InternalMcmodel.g:17315:13: lv_pullingDefined_83_0= 'pulling'
            	            {
            	            lv_pullingDefined_83_0=(Token)match(input,70,FOLLOW_40); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              													newLeafNode(lv_pullingDefined_83_0, grammarAccess.getOverridePredicate_13Access().getPullingDefinedPullingKeyword_3_9_1_1_0_0());
            	              												
            	            }
            	            if ( state.backtracking==0 ) {

            	              													if (current==null) {
            	              														current = createModelElement(grammarAccess.getOverridePredicate_13Rule());
            	              													}
            	              													setWithLastConsumed(current, "pullingDefined", true, "pulling");
            	              												
            	            }

            	            }


            	            }

            	            // InternalMcmodel.g:17327:11: ( (otherlv_84= '!=' ( ( (lv_pulling_85_0= 'false' ) ) | otherlv_86= 'true' ) ) | ( (otherlv_87= '=' | otherlv_88= '==' ) ( ( (lv_pulling_89_0= 'true' ) ) | otherlv_90= 'false' ) ) )
            	            int alt559=2;
            	            int LA559_0 = input.LA(1);

            	            if ( (LA559_0==62) ) {
            	                alt559=1;
            	            }
            	            else if ( (LA559_0==18||LA559_0==58) ) {
            	                alt559=2;
            	            }
            	            else {
            	                if (state.backtracking>0) {state.failed=true; return current;}
            	                NoViableAltException nvae =
            	                    new NoViableAltException("", 559, 0, input);

            	                throw nvae;
            	            }
            	            switch (alt559) {
            	                case 1 :
            	                    // InternalMcmodel.g:17328:12: (otherlv_84= '!=' ( ( (lv_pulling_85_0= 'false' ) ) | otherlv_86= 'true' ) )
            	                    {
            	                    // InternalMcmodel.g:17328:12: (otherlv_84= '!=' ( ( (lv_pulling_85_0= 'false' ) ) | otherlv_86= 'true' ) )
            	                    // InternalMcmodel.g:17329:13: otherlv_84= '!=' ( ( (lv_pulling_85_0= 'false' ) ) | otherlv_86= 'true' )
            	                    {
            	                    otherlv_84=(Token)match(input,62,FOLLOW_7); if (state.failed) return current;
            	                    if ( state.backtracking==0 ) {

            	                      													newLeafNode(otherlv_84, grammarAccess.getOverridePredicate_13Access().getExclamationMarkEqualsSignKeyword_3_9_1_1_1_0_0());
            	                      												
            	                    }
            	                    // InternalMcmodel.g:17333:13: ( ( (lv_pulling_85_0= 'false' ) ) | otherlv_86= 'true' )
            	                    int alt556=2;
            	                    int LA556_0 = input.LA(1);

            	                    if ( (LA556_0==21) ) {
            	                        alt556=1;
            	                    }
            	                    else if ( (LA556_0==20) ) {
            	                        alt556=2;
            	                    }
            	                    else {
            	                        if (state.backtracking>0) {state.failed=true; return current;}
            	                        NoViableAltException nvae =
            	                            new NoViableAltException("", 556, 0, input);

            	                        throw nvae;
            	                    }
            	                    switch (alt556) {
            	                        case 1 :
            	                            // InternalMcmodel.g:17334:14: ( (lv_pulling_85_0= 'false' ) )
            	                            {
            	                            // InternalMcmodel.g:17334:14: ( (lv_pulling_85_0= 'false' ) )
            	                            // InternalMcmodel.g:17335:15: (lv_pulling_85_0= 'false' )
            	                            {
            	                            // InternalMcmodel.g:17335:15: (lv_pulling_85_0= 'false' )
            	                            // InternalMcmodel.g:17336:16: lv_pulling_85_0= 'false'
            	                            {
            	                            lv_pulling_85_0=(Token)match(input,21,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              																newLeafNode(lv_pulling_85_0, grammarAccess.getOverridePredicate_13Access().getPullingFalseKeyword_3_9_1_1_1_0_1_0_0());
            	                              															
            	                            }
            	                            if ( state.backtracking==0 ) {

            	                              																if (current==null) {
            	                              																	current = createModelElement(grammarAccess.getOverridePredicate_13Rule());
            	                              																}
            	                              																setWithLastConsumed(current, "pulling", true, "false");
            	                              															
            	                            }

            	                            }


            	                            }


            	                            }
            	                            break;
            	                        case 2 :
            	                            // InternalMcmodel.g:17349:14: otherlv_86= 'true'
            	                            {
            	                            otherlv_86=(Token)match(input,20,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_86, grammarAccess.getOverridePredicate_13Access().getTrueKeyword_3_9_1_1_1_0_1_1());
            	                              													
            	                            }

            	                            }
            	                            break;

            	                    }


            	                    }


            	                    }
            	                    break;
            	                case 2 :
            	                    // InternalMcmodel.g:17356:12: ( (otherlv_87= '=' | otherlv_88= '==' ) ( ( (lv_pulling_89_0= 'true' ) ) | otherlv_90= 'false' ) )
            	                    {
            	                    // InternalMcmodel.g:17356:12: ( (otherlv_87= '=' | otherlv_88= '==' ) ( ( (lv_pulling_89_0= 'true' ) ) | otherlv_90= 'false' ) )
            	                    // InternalMcmodel.g:17357:13: (otherlv_87= '=' | otherlv_88= '==' ) ( ( (lv_pulling_89_0= 'true' ) ) | otherlv_90= 'false' )
            	                    {
            	                    // InternalMcmodel.g:17357:13: (otherlv_87= '=' | otherlv_88= '==' )
            	                    int alt557=2;
            	                    int LA557_0 = input.LA(1);

            	                    if ( (LA557_0==18) ) {
            	                        alt557=1;
            	                    }
            	                    else if ( (LA557_0==58) ) {
            	                        alt557=2;
            	                    }
            	                    else {
            	                        if (state.backtracking>0) {state.failed=true; return current;}
            	                        NoViableAltException nvae =
            	                            new NoViableAltException("", 557, 0, input);

            	                        throw nvae;
            	                    }
            	                    switch (alt557) {
            	                        case 1 :
            	                            // InternalMcmodel.g:17358:14: otherlv_87= '='
            	                            {
            	                            otherlv_87=(Token)match(input,18,FOLLOW_7); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_87, grammarAccess.getOverridePredicate_13Access().getEqualsSignKeyword_3_9_1_1_1_1_0_0());
            	                              													
            	                            }

            	                            }
            	                            break;
            	                        case 2 :
            	                            // InternalMcmodel.g:17363:14: otherlv_88= '=='
            	                            {
            	                            otherlv_88=(Token)match(input,58,FOLLOW_7); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_88, grammarAccess.getOverridePredicate_13Access().getEqualsSignEqualsSignKeyword_3_9_1_1_1_1_0_1());
            	                              													
            	                            }

            	                            }
            	                            break;

            	                    }

            	                    // InternalMcmodel.g:17368:13: ( ( (lv_pulling_89_0= 'true' ) ) | otherlv_90= 'false' )
            	                    int alt558=2;
            	                    int LA558_0 = input.LA(1);

            	                    if ( (LA558_0==20) ) {
            	                        alt558=1;
            	                    }
            	                    else if ( (LA558_0==21) ) {
            	                        alt558=2;
            	                    }
            	                    else {
            	                        if (state.backtracking>0) {state.failed=true; return current;}
            	                        NoViableAltException nvae =
            	                            new NoViableAltException("", 558, 0, input);

            	                        throw nvae;
            	                    }
            	                    switch (alt558) {
            	                        case 1 :
            	                            // InternalMcmodel.g:17369:14: ( (lv_pulling_89_0= 'true' ) )
            	                            {
            	                            // InternalMcmodel.g:17369:14: ( (lv_pulling_89_0= 'true' ) )
            	                            // InternalMcmodel.g:17370:15: (lv_pulling_89_0= 'true' )
            	                            {
            	                            // InternalMcmodel.g:17370:15: (lv_pulling_89_0= 'true' )
            	                            // InternalMcmodel.g:17371:16: lv_pulling_89_0= 'true'
            	                            {
            	                            lv_pulling_89_0=(Token)match(input,20,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              																newLeafNode(lv_pulling_89_0, grammarAccess.getOverridePredicate_13Access().getPullingTrueKeyword_3_9_1_1_1_1_1_0_0());
            	                              															
            	                            }
            	                            if ( state.backtracking==0 ) {

            	                              																if (current==null) {
            	                              																	current = createModelElement(grammarAccess.getOverridePredicate_13Rule());
            	                              																}
            	                              																setWithLastConsumed(current, "pulling", true, "true");
            	                              															
            	                            }

            	                            }


            	                            }


            	                            }
            	                            break;
            	                        case 2 :
            	                            // InternalMcmodel.g:17384:14: otherlv_90= 'false'
            	                            {
            	                            otherlv_90=(Token)match(input,21,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_90, grammarAccess.getOverridePredicate_13Access().getFalseKeyword_3_9_1_1_1_1_1_1());
            	                              													
            	                            }

            	                            }
            	                            break;

            	                    }


            	                    }


            	                    }
            	                    break;

            	            }


            	            }


            	            }
            	            break;

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getOverridePredicate_13Access().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 11 :
            	    // InternalMcmodel.g:17399:4: ({...}? => ( ({...}? => (otherlv_91= '&' ( ( ( (lv_throwingDefined_92_0= '!' ) ) otherlv_93= 'throwing' ) | ( ( (lv_throwingDefined_94_0= 'throwing' ) ) ( (otherlv_95= '!=' ( ( (lv_throwing_96_0= 'false' ) ) | otherlv_97= 'true' ) ) | ( (otherlv_98= '=' | otherlv_99= '==' ) ( ( (lv_throwing_100_0= 'true' ) ) | otherlv_101= 'false' ) ) ) ) ) ) ) ) )
            	    {
            	    // InternalMcmodel.g:17399:4: ({...}? => ( ({...}? => (otherlv_91= '&' ( ( ( (lv_throwingDefined_92_0= '!' ) ) otherlv_93= 'throwing' ) | ( ( (lv_throwingDefined_94_0= 'throwing' ) ) ( (otherlv_95= '!=' ( ( (lv_throwing_96_0= 'false' ) ) | otherlv_97= 'true' ) ) | ( (otherlv_98= '=' | otherlv_99= '==' ) ( ( (lv_throwing_100_0= 'true' ) ) | otherlv_101= 'false' ) ) ) ) ) ) ) ) )
            	    // InternalMcmodel.g:17400:5: {...}? => ( ({...}? => (otherlv_91= '&' ( ( ( (lv_throwingDefined_92_0= '!' ) ) otherlv_93= 'throwing' ) | ( ( (lv_throwingDefined_94_0= 'throwing' ) ) ( (otherlv_95= '!=' ( ( (lv_throwing_96_0= 'false' ) ) | otherlv_97= 'true' ) ) | ( (otherlv_98= '=' | otherlv_99= '==' ) ( ( (lv_throwing_100_0= 'true' ) ) | otherlv_101= 'false' ) ) ) ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_13Access().getUnorderedGroup_3(), 10) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_13", "getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_13Access().getUnorderedGroup_3(), 10)");
            	    }
            	    // InternalMcmodel.g:17400:118: ( ({...}? => (otherlv_91= '&' ( ( ( (lv_throwingDefined_92_0= '!' ) ) otherlv_93= 'throwing' ) | ( ( (lv_throwingDefined_94_0= 'throwing' ) ) ( (otherlv_95= '!=' ( ( (lv_throwing_96_0= 'false' ) ) | otherlv_97= 'true' ) ) | ( (otherlv_98= '=' | otherlv_99= '==' ) ( ( (lv_throwing_100_0= 'true' ) ) | otherlv_101= 'false' ) ) ) ) ) ) ) )
            	    // InternalMcmodel.g:17401:6: ({...}? => (otherlv_91= '&' ( ( ( (lv_throwingDefined_92_0= '!' ) ) otherlv_93= 'throwing' ) | ( ( (lv_throwingDefined_94_0= 'throwing' ) ) ( (otherlv_95= '!=' ( ( (lv_throwing_96_0= 'false' ) ) | otherlv_97= 'true' ) ) | ( (otherlv_98= '=' | otherlv_99= '==' ) ( ( (lv_throwing_100_0= 'true' ) ) | otherlv_101= 'false' ) ) ) ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getOverridePredicate_13Access().getUnorderedGroup_3(), 10);
            	    // InternalMcmodel.g:17404:9: ({...}? => (otherlv_91= '&' ( ( ( (lv_throwingDefined_92_0= '!' ) ) otherlv_93= 'throwing' ) | ( ( (lv_throwingDefined_94_0= 'throwing' ) ) ( (otherlv_95= '!=' ( ( (lv_throwing_96_0= 'false' ) ) | otherlv_97= 'true' ) ) | ( (otherlv_98= '=' | otherlv_99= '==' ) ( ( (lv_throwing_100_0= 'true' ) ) | otherlv_101= 'false' ) ) ) ) ) ) )
            	    // InternalMcmodel.g:17404:10: {...}? => (otherlv_91= '&' ( ( ( (lv_throwingDefined_92_0= '!' ) ) otherlv_93= 'throwing' ) | ( ( (lv_throwingDefined_94_0= 'throwing' ) ) ( (otherlv_95= '!=' ( ( (lv_throwing_96_0= 'false' ) ) | otherlv_97= 'true' ) ) | ( (otherlv_98= '=' | otherlv_99= '==' ) ( ( (lv_throwing_100_0= 'true' ) ) | otherlv_101= 'false' ) ) ) ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_13", "true");
            	    }
            	    // InternalMcmodel.g:17404:19: (otherlv_91= '&' ( ( ( (lv_throwingDefined_92_0= '!' ) ) otherlv_93= 'throwing' ) | ( ( (lv_throwingDefined_94_0= 'throwing' ) ) ( (otherlv_95= '!=' ( ( (lv_throwing_96_0= 'false' ) ) | otherlv_97= 'true' ) ) | ( (otherlv_98= '=' | otherlv_99= '==' ) ( ( (lv_throwing_100_0= 'true' ) ) | otherlv_101= 'false' ) ) ) ) ) )
            	    // InternalMcmodel.g:17404:20: otherlv_91= '&' ( ( ( (lv_throwingDefined_92_0= '!' ) ) otherlv_93= 'throwing' ) | ( ( (lv_throwingDefined_94_0= 'throwing' ) ) ( (otherlv_95= '!=' ( ( (lv_throwing_96_0= 'false' ) ) | otherlv_97= 'true' ) ) | ( (otherlv_98= '=' | otherlv_99= '==' ) ( ( (lv_throwing_100_0= 'true' ) ) | otherlv_101= 'false' ) ) ) ) )
            	    {
            	    otherlv_91=(Token)match(input,59,FOLLOW_54); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_91, grammarAccess.getOverridePredicate_13Access().getAmpersandKeyword_3_10_0());
            	      								
            	    }
            	    // InternalMcmodel.g:17408:9: ( ( ( (lv_throwingDefined_92_0= '!' ) ) otherlv_93= 'throwing' ) | ( ( (lv_throwingDefined_94_0= 'throwing' ) ) ( (otherlv_95= '!=' ( ( (lv_throwing_96_0= 'false' ) ) | otherlv_97= 'true' ) ) | ( (otherlv_98= '=' | otherlv_99= '==' ) ( ( (lv_throwing_100_0= 'true' ) ) | otherlv_101= 'false' ) ) ) ) )
            	    int alt565=2;
            	    int LA565_0 = input.LA(1);

            	    if ( (LA565_0==60) ) {
            	        alt565=1;
            	    }
            	    else if ( (LA565_0==71) ) {
            	        alt565=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 565, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt565) {
            	        case 1 :
            	            // InternalMcmodel.g:17409:10: ( ( (lv_throwingDefined_92_0= '!' ) ) otherlv_93= 'throwing' )
            	            {
            	            // InternalMcmodel.g:17409:10: ( ( (lv_throwingDefined_92_0= '!' ) ) otherlv_93= 'throwing' )
            	            // InternalMcmodel.g:17410:11: ( (lv_throwingDefined_92_0= '!' ) ) otherlv_93= 'throwing'
            	            {
            	            // InternalMcmodel.g:17410:11: ( (lv_throwingDefined_92_0= '!' ) )
            	            // InternalMcmodel.g:17411:12: (lv_throwingDefined_92_0= '!' )
            	            {
            	            // InternalMcmodel.g:17411:12: (lv_throwingDefined_92_0= '!' )
            	            // InternalMcmodel.g:17412:13: lv_throwingDefined_92_0= '!'
            	            {
            	            lv_throwingDefined_92_0=(Token)match(input,60,FOLLOW_55); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              													newLeafNode(lv_throwingDefined_92_0, grammarAccess.getOverridePredicate_13Access().getThrowingDefinedExclamationMarkKeyword_3_10_1_0_0_0());
            	              												
            	            }
            	            if ( state.backtracking==0 ) {

            	              													if (current==null) {
            	              														current = createModelElement(grammarAccess.getOverridePredicate_13Rule());
            	              													}
            	              													setWithLastConsumed(current, "throwingDefined", true, "!");
            	              												
            	            }

            	            }


            	            }

            	            otherlv_93=(Token)match(input,71,FOLLOW_37); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              											newLeafNode(otherlv_93, grammarAccess.getOverridePredicate_13Access().getThrowingKeyword_3_10_1_0_1());
            	              										
            	            }

            	            }


            	            }
            	            break;
            	        case 2 :
            	            // InternalMcmodel.g:17430:10: ( ( (lv_throwingDefined_94_0= 'throwing' ) ) ( (otherlv_95= '!=' ( ( (lv_throwing_96_0= 'false' ) ) | otherlv_97= 'true' ) ) | ( (otherlv_98= '=' | otherlv_99= '==' ) ( ( (lv_throwing_100_0= 'true' ) ) | otherlv_101= 'false' ) ) ) )
            	            {
            	            // InternalMcmodel.g:17430:10: ( ( (lv_throwingDefined_94_0= 'throwing' ) ) ( (otherlv_95= '!=' ( ( (lv_throwing_96_0= 'false' ) ) | otherlv_97= 'true' ) ) | ( (otherlv_98= '=' | otherlv_99= '==' ) ( ( (lv_throwing_100_0= 'true' ) ) | otherlv_101= 'false' ) ) ) )
            	            // InternalMcmodel.g:17431:11: ( (lv_throwingDefined_94_0= 'throwing' ) ) ( (otherlv_95= '!=' ( ( (lv_throwing_96_0= 'false' ) ) | otherlv_97= 'true' ) ) | ( (otherlv_98= '=' | otherlv_99= '==' ) ( ( (lv_throwing_100_0= 'true' ) ) | otherlv_101= 'false' ) ) )
            	            {
            	            // InternalMcmodel.g:17431:11: ( (lv_throwingDefined_94_0= 'throwing' ) )
            	            // InternalMcmodel.g:17432:12: (lv_throwingDefined_94_0= 'throwing' )
            	            {
            	            // InternalMcmodel.g:17432:12: (lv_throwingDefined_94_0= 'throwing' )
            	            // InternalMcmodel.g:17433:13: lv_throwingDefined_94_0= 'throwing'
            	            {
            	            lv_throwingDefined_94_0=(Token)match(input,71,FOLLOW_40); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              													newLeafNode(lv_throwingDefined_94_0, grammarAccess.getOverridePredicate_13Access().getThrowingDefinedThrowingKeyword_3_10_1_1_0_0());
            	              												
            	            }
            	            if ( state.backtracking==0 ) {

            	              													if (current==null) {
            	              														current = createModelElement(grammarAccess.getOverridePredicate_13Rule());
            	              													}
            	              													setWithLastConsumed(current, "throwingDefined", true, "throwing");
            	              												
            	            }

            	            }


            	            }

            	            // InternalMcmodel.g:17445:11: ( (otherlv_95= '!=' ( ( (lv_throwing_96_0= 'false' ) ) | otherlv_97= 'true' ) ) | ( (otherlv_98= '=' | otherlv_99= '==' ) ( ( (lv_throwing_100_0= 'true' ) ) | otherlv_101= 'false' ) ) )
            	            int alt564=2;
            	            int LA564_0 = input.LA(1);

            	            if ( (LA564_0==62) ) {
            	                alt564=1;
            	            }
            	            else if ( (LA564_0==18||LA564_0==58) ) {
            	                alt564=2;
            	            }
            	            else {
            	                if (state.backtracking>0) {state.failed=true; return current;}
            	                NoViableAltException nvae =
            	                    new NoViableAltException("", 564, 0, input);

            	                throw nvae;
            	            }
            	            switch (alt564) {
            	                case 1 :
            	                    // InternalMcmodel.g:17446:12: (otherlv_95= '!=' ( ( (lv_throwing_96_0= 'false' ) ) | otherlv_97= 'true' ) )
            	                    {
            	                    // InternalMcmodel.g:17446:12: (otherlv_95= '!=' ( ( (lv_throwing_96_0= 'false' ) ) | otherlv_97= 'true' ) )
            	                    // InternalMcmodel.g:17447:13: otherlv_95= '!=' ( ( (lv_throwing_96_0= 'false' ) ) | otherlv_97= 'true' )
            	                    {
            	                    otherlv_95=(Token)match(input,62,FOLLOW_7); if (state.failed) return current;
            	                    if ( state.backtracking==0 ) {

            	                      													newLeafNode(otherlv_95, grammarAccess.getOverridePredicate_13Access().getExclamationMarkEqualsSignKeyword_3_10_1_1_1_0_0());
            	                      												
            	                    }
            	                    // InternalMcmodel.g:17451:13: ( ( (lv_throwing_96_0= 'false' ) ) | otherlv_97= 'true' )
            	                    int alt561=2;
            	                    int LA561_0 = input.LA(1);

            	                    if ( (LA561_0==21) ) {
            	                        alt561=1;
            	                    }
            	                    else if ( (LA561_0==20) ) {
            	                        alt561=2;
            	                    }
            	                    else {
            	                        if (state.backtracking>0) {state.failed=true; return current;}
            	                        NoViableAltException nvae =
            	                            new NoViableAltException("", 561, 0, input);

            	                        throw nvae;
            	                    }
            	                    switch (alt561) {
            	                        case 1 :
            	                            // InternalMcmodel.g:17452:14: ( (lv_throwing_96_0= 'false' ) )
            	                            {
            	                            // InternalMcmodel.g:17452:14: ( (lv_throwing_96_0= 'false' ) )
            	                            // InternalMcmodel.g:17453:15: (lv_throwing_96_0= 'false' )
            	                            {
            	                            // InternalMcmodel.g:17453:15: (lv_throwing_96_0= 'false' )
            	                            // InternalMcmodel.g:17454:16: lv_throwing_96_0= 'false'
            	                            {
            	                            lv_throwing_96_0=(Token)match(input,21,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              																newLeafNode(lv_throwing_96_0, grammarAccess.getOverridePredicate_13Access().getThrowingFalseKeyword_3_10_1_1_1_0_1_0_0());
            	                              															
            	                            }
            	                            if ( state.backtracking==0 ) {

            	                              																if (current==null) {
            	                              																	current = createModelElement(grammarAccess.getOverridePredicate_13Rule());
            	                              																}
            	                              																setWithLastConsumed(current, "throwing", true, "false");
            	                              															
            	                            }

            	                            }


            	                            }


            	                            }
            	                            break;
            	                        case 2 :
            	                            // InternalMcmodel.g:17467:14: otherlv_97= 'true'
            	                            {
            	                            otherlv_97=(Token)match(input,20,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_97, grammarAccess.getOverridePredicate_13Access().getTrueKeyword_3_10_1_1_1_0_1_1());
            	                              													
            	                            }

            	                            }
            	                            break;

            	                    }


            	                    }


            	                    }
            	                    break;
            	                case 2 :
            	                    // InternalMcmodel.g:17474:12: ( (otherlv_98= '=' | otherlv_99= '==' ) ( ( (lv_throwing_100_0= 'true' ) ) | otherlv_101= 'false' ) )
            	                    {
            	                    // InternalMcmodel.g:17474:12: ( (otherlv_98= '=' | otherlv_99= '==' ) ( ( (lv_throwing_100_0= 'true' ) ) | otherlv_101= 'false' ) )
            	                    // InternalMcmodel.g:17475:13: (otherlv_98= '=' | otherlv_99= '==' ) ( ( (lv_throwing_100_0= 'true' ) ) | otherlv_101= 'false' )
            	                    {
            	                    // InternalMcmodel.g:17475:13: (otherlv_98= '=' | otherlv_99= '==' )
            	                    int alt562=2;
            	                    int LA562_0 = input.LA(1);

            	                    if ( (LA562_0==18) ) {
            	                        alt562=1;
            	                    }
            	                    else if ( (LA562_0==58) ) {
            	                        alt562=2;
            	                    }
            	                    else {
            	                        if (state.backtracking>0) {state.failed=true; return current;}
            	                        NoViableAltException nvae =
            	                            new NoViableAltException("", 562, 0, input);

            	                        throw nvae;
            	                    }
            	                    switch (alt562) {
            	                        case 1 :
            	                            // InternalMcmodel.g:17476:14: otherlv_98= '='
            	                            {
            	                            otherlv_98=(Token)match(input,18,FOLLOW_7); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_98, grammarAccess.getOverridePredicate_13Access().getEqualsSignKeyword_3_10_1_1_1_1_0_0());
            	                              													
            	                            }

            	                            }
            	                            break;
            	                        case 2 :
            	                            // InternalMcmodel.g:17481:14: otherlv_99= '=='
            	                            {
            	                            otherlv_99=(Token)match(input,58,FOLLOW_7); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_99, grammarAccess.getOverridePredicate_13Access().getEqualsSignEqualsSignKeyword_3_10_1_1_1_1_0_1());
            	                              													
            	                            }

            	                            }
            	                            break;

            	                    }

            	                    // InternalMcmodel.g:17486:13: ( ( (lv_throwing_100_0= 'true' ) ) | otherlv_101= 'false' )
            	                    int alt563=2;
            	                    int LA563_0 = input.LA(1);

            	                    if ( (LA563_0==20) ) {
            	                        alt563=1;
            	                    }
            	                    else if ( (LA563_0==21) ) {
            	                        alt563=2;
            	                    }
            	                    else {
            	                        if (state.backtracking>0) {state.failed=true; return current;}
            	                        NoViableAltException nvae =
            	                            new NoViableAltException("", 563, 0, input);

            	                        throw nvae;
            	                    }
            	                    switch (alt563) {
            	                        case 1 :
            	                            // InternalMcmodel.g:17487:14: ( (lv_throwing_100_0= 'true' ) )
            	                            {
            	                            // InternalMcmodel.g:17487:14: ( (lv_throwing_100_0= 'true' ) )
            	                            // InternalMcmodel.g:17488:15: (lv_throwing_100_0= 'true' )
            	                            {
            	                            // InternalMcmodel.g:17488:15: (lv_throwing_100_0= 'true' )
            	                            // InternalMcmodel.g:17489:16: lv_throwing_100_0= 'true'
            	                            {
            	                            lv_throwing_100_0=(Token)match(input,20,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              																newLeafNode(lv_throwing_100_0, grammarAccess.getOverridePredicate_13Access().getThrowingTrueKeyword_3_10_1_1_1_1_1_0_0());
            	                              															
            	                            }
            	                            if ( state.backtracking==0 ) {

            	                              																if (current==null) {
            	                              																	current = createModelElement(grammarAccess.getOverridePredicate_13Rule());
            	                              																}
            	                              																setWithLastConsumed(current, "throwing", true, "true");
            	                              															
            	                            }

            	                            }


            	                            }


            	                            }
            	                            break;
            	                        case 2 :
            	                            // InternalMcmodel.g:17502:14: otherlv_101= 'false'
            	                            {
            	                            otherlv_101=(Token)match(input,21,FOLLOW_37); if (state.failed) return current;
            	                            if ( state.backtracking==0 ) {

            	                              														newLeafNode(otherlv_101, grammarAccess.getOverridePredicate_13Access().getFalseKeyword_3_10_1_1_1_1_1_1());
            	                              													
            	                            }

            	                            }
            	                            break;

            	                    }


            	                    }


            	                    }
            	                    break;

            	            }


            	            }


            	            }
            	            break;

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getOverridePredicate_13Access().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 12 :
            	    // InternalMcmodel.g:17517:4: ({...}? => ( ({...}? => (otherlv_102= '&' ( (lv_timeDefined_103_0= 'time' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_time_106_0= RULE_PERCENTAGE ) ) ) ) ) )
            	    {
            	    // InternalMcmodel.g:17517:4: ({...}? => ( ({...}? => (otherlv_102= '&' ( (lv_timeDefined_103_0= 'time' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_time_106_0= RULE_PERCENTAGE ) ) ) ) ) )
            	    // InternalMcmodel.g:17518:5: {...}? => ( ({...}? => (otherlv_102= '&' ( (lv_timeDefined_103_0= 'time' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_time_106_0= RULE_PERCENTAGE ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_13Access().getUnorderedGroup_3(), 11) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_13", "getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_13Access().getUnorderedGroup_3(), 11)");
            	    }
            	    // InternalMcmodel.g:17518:118: ( ({...}? => (otherlv_102= '&' ( (lv_timeDefined_103_0= 'time' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_time_106_0= RULE_PERCENTAGE ) ) ) ) )
            	    // InternalMcmodel.g:17519:6: ({...}? => (otherlv_102= '&' ( (lv_timeDefined_103_0= 'time' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_time_106_0= RULE_PERCENTAGE ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getOverridePredicate_13Access().getUnorderedGroup_3(), 11);
            	    // InternalMcmodel.g:17522:9: ({...}? => (otherlv_102= '&' ( (lv_timeDefined_103_0= 'time' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_time_106_0= RULE_PERCENTAGE ) ) ) )
            	    // InternalMcmodel.g:17522:10: {...}? => (otherlv_102= '&' ( (lv_timeDefined_103_0= 'time' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_time_106_0= RULE_PERCENTAGE ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleOverridePredicate_13", "true");
            	    }
            	    // InternalMcmodel.g:17522:19: (otherlv_102= '&' ( (lv_timeDefined_103_0= 'time' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_time_106_0= RULE_PERCENTAGE ) ) )
            	    // InternalMcmodel.g:17522:20: otherlv_102= '&' ( (lv_timeDefined_103_0= 'time' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_time_106_0= RULE_PERCENTAGE ) )
            	    {
            	    otherlv_102=(Token)match(input,59,FOLLOW_56); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_102, grammarAccess.getOverridePredicate_13Access().getAmpersandKeyword_3_11_0());
            	      								
            	    }
            	    // InternalMcmodel.g:17526:9: ( (lv_timeDefined_103_0= 'time' ) )
            	    // InternalMcmodel.g:17527:10: (lv_timeDefined_103_0= 'time' )
            	    {
            	    // InternalMcmodel.g:17527:10: (lv_timeDefined_103_0= 'time' )
            	    // InternalMcmodel.g:17528:11: lv_timeDefined_103_0= 'time'
            	    {
            	    lv_timeDefined_103_0=(Token)match(input,72,FOLLOW_35); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											newLeafNode(lv_timeDefined_103_0, grammarAccess.getOverridePredicate_13Access().getTimeDefinedTimeKeyword_3_11_1_0());
            	      										
            	    }
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElement(grammarAccess.getOverridePredicate_13Rule());
            	      											}
            	      											setWithLastConsumed(current, "timeDefined", true, "time");
            	      										
            	    }

            	    }


            	    }

            	    // InternalMcmodel.g:17540:9: (otherlv_104= '=' | otherlv_105= '==' )
            	    int alt566=2;
            	    int LA566_0 = input.LA(1);

            	    if ( (LA566_0==18) ) {
            	        alt566=1;
            	    }
            	    else if ( (LA566_0==58) ) {
            	        alt566=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 566, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt566) {
            	        case 1 :
            	            // InternalMcmodel.g:17541:10: otherlv_104= '='
            	            {
            	            otherlv_104=(Token)match(input,18,FOLLOW_36); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(otherlv_104, grammarAccess.getOverridePredicate_13Access().getEqualsSignKeyword_3_11_2_0());
            	              									
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalMcmodel.g:17546:10: otherlv_105= '=='
            	            {
            	            otherlv_105=(Token)match(input,58,FOLLOW_36); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(otherlv_105, grammarAccess.getOverridePredicate_13Access().getEqualsSignEqualsSignKeyword_3_11_2_1());
            	              									
            	            }

            	            }
            	            break;

            	    }

            	    // InternalMcmodel.g:17551:9: ( (lv_time_106_0= RULE_PERCENTAGE ) )
            	    // InternalMcmodel.g:17552:10: (lv_time_106_0= RULE_PERCENTAGE )
            	    {
            	    // InternalMcmodel.g:17552:10: (lv_time_106_0= RULE_PERCENTAGE )
            	    // InternalMcmodel.g:17553:11: lv_time_106_0= RULE_PERCENTAGE
            	    {
            	    lv_time_106_0=(Token)match(input,RULE_PERCENTAGE,FOLLOW_37); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											newLeafNode(lv_time_106_0, grammarAccess.getOverridePredicate_13Access().getTimePERCENTAGETerminalRuleCall_3_11_3_0());
            	      										
            	    }
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElement(grammarAccess.getOverridePredicate_13Rule());
            	      											}
            	      											setWithLastConsumed(
            	      												current,
            	      												"time",
            	      												lv_time_106_0,
            	      												"com.raptor.mcmodel.Mcmodel.PERCENTAGE");
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getOverridePredicate_13Access().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop567;
                }
            } while (true);


            }


            }

            getUnorderedGroupHelper().leave(grammarAccess.getOverridePredicate_13Access().getUnorderedGroup_3());

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOverridePredicate_13"


    // $ANTLR start "entryRuleMCJsonValue"
    // InternalMcmodel.g:17586:1: entryRuleMCJsonValue returns [EObject current=null] : iv_ruleMCJsonValue= ruleMCJsonValue EOF ;
    public final EObject entryRuleMCJsonValue() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleMCJsonValue = null;


        try {
            // InternalMcmodel.g:17586:52: (iv_ruleMCJsonValue= ruleMCJsonValue EOF )
            // InternalMcmodel.g:17587:2: iv_ruleMCJsonValue= ruleMCJsonValue EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMCJsonValueRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleMCJsonValue=ruleMCJsonValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMCJsonValue; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMCJsonValue"


    // $ANTLR start "ruleMCJsonValue"
    // InternalMcmodel.g:17593:1: ruleMCJsonValue returns [EObject current=null] : (this_MCJsonObject_0= ruleMCJsonObject | this_MCJsonArray_1= ruleMCJsonArray | this_MCJsonString_2= ruleMCJsonString | this_MCJsonNumber_3= ruleMCJsonNumber | this_MCJsonBoolean_4= ruleMCJsonBoolean | this_MCJsonNull_5= ruleMCJsonNull ) ;
    public final EObject ruleMCJsonValue() throws RecognitionException {
        EObject current = null;

        EObject this_MCJsonObject_0 = null;

        EObject this_MCJsonArray_1 = null;

        EObject this_MCJsonString_2 = null;

        EObject this_MCJsonNumber_3 = null;

        EObject this_MCJsonBoolean_4 = null;

        EObject this_MCJsonNull_5 = null;



        	enterRule();

        try {
            // InternalMcmodel.g:17599:2: ( (this_MCJsonObject_0= ruleMCJsonObject | this_MCJsonArray_1= ruleMCJsonArray | this_MCJsonString_2= ruleMCJsonString | this_MCJsonNumber_3= ruleMCJsonNumber | this_MCJsonBoolean_4= ruleMCJsonBoolean | this_MCJsonNull_5= ruleMCJsonNull ) )
            // InternalMcmodel.g:17600:2: (this_MCJsonObject_0= ruleMCJsonObject | this_MCJsonArray_1= ruleMCJsonArray | this_MCJsonString_2= ruleMCJsonString | this_MCJsonNumber_3= ruleMCJsonNumber | this_MCJsonBoolean_4= ruleMCJsonBoolean | this_MCJsonNull_5= ruleMCJsonNull )
            {
            // InternalMcmodel.g:17600:2: (this_MCJsonObject_0= ruleMCJsonObject | this_MCJsonArray_1= ruleMCJsonArray | this_MCJsonString_2= ruleMCJsonString | this_MCJsonNumber_3= ruleMCJsonNumber | this_MCJsonBoolean_4= ruleMCJsonBoolean | this_MCJsonNull_5= ruleMCJsonNull )
            int alt568=6;
            switch ( input.LA(1) ) {
            case 24:
                {
                alt568=1;
                }
                break;
            case 75:
                {
                alt568=2;
                }
                break;
            case RULE_STRING:
                {
                alt568=3;
                }
                break;
            case RULE_DOUBLE:
            case RULE_ULONG:
            case RULE_SLONG:
                {
                alt568=4;
                }
                break;
            case 20:
            case 21:
                {
                alt568=5;
                }
                break;
            case 77:
                {
                alt568=6;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 568, 0, input);

                throw nvae;
            }

            switch (alt568) {
                case 1 :
                    // InternalMcmodel.g:17601:3: this_MCJsonObject_0= ruleMCJsonObject
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getMCJsonValueAccess().getMCJsonObjectParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_MCJsonObject_0=ruleMCJsonObject();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_MCJsonObject_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalMcmodel.g:17610:3: this_MCJsonArray_1= ruleMCJsonArray
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getMCJsonValueAccess().getMCJsonArrayParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_MCJsonArray_1=ruleMCJsonArray();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_MCJsonArray_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalMcmodel.g:17619:3: this_MCJsonString_2= ruleMCJsonString
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getMCJsonValueAccess().getMCJsonStringParserRuleCall_2());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_MCJsonString_2=ruleMCJsonString();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_MCJsonString_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalMcmodel.g:17628:3: this_MCJsonNumber_3= ruleMCJsonNumber
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getMCJsonValueAccess().getMCJsonNumberParserRuleCall_3());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_MCJsonNumber_3=ruleMCJsonNumber();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_MCJsonNumber_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalMcmodel.g:17637:3: this_MCJsonBoolean_4= ruleMCJsonBoolean
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getMCJsonValueAccess().getMCJsonBooleanParserRuleCall_4());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_MCJsonBoolean_4=ruleMCJsonBoolean();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_MCJsonBoolean_4;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 6 :
                    // InternalMcmodel.g:17646:3: this_MCJsonNull_5= ruleMCJsonNull
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getMCJsonValueAccess().getMCJsonNullParserRuleCall_5());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_MCJsonNull_5=ruleMCJsonNull();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_MCJsonNull_5;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMCJsonValue"


    // $ANTLR start "entryRuleMCJsonObject"
    // InternalMcmodel.g:17658:1: entryRuleMCJsonObject returns [EObject current=null] : iv_ruleMCJsonObject= ruleMCJsonObject EOF ;
    public final EObject entryRuleMCJsonObject() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleMCJsonObject = null;


        try {
            // InternalMcmodel.g:17658:53: (iv_ruleMCJsonObject= ruleMCJsonObject EOF )
            // InternalMcmodel.g:17659:2: iv_ruleMCJsonObject= ruleMCJsonObject EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMCJsonObjectRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleMCJsonObject=ruleMCJsonObject();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMCJsonObject; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMCJsonObject"


    // $ANTLR start "ruleMCJsonObject"
    // InternalMcmodel.g:17665:1: ruleMCJsonObject returns [EObject current=null] : (otherlv_0= '{' () ( ( (lv_entries_2_0= ruleMCJsonEntry ) ) (otherlv_3= ',' ( (lv_entries_4_0= ruleMCJsonEntry ) ) )* (otherlv_5= ',' )? )? otherlv_6= '}' ) ;
    public final EObject ruleMCJsonObject() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        EObject lv_entries_2_0 = null;

        EObject lv_entries_4_0 = null;



        	enterRule();

        try {
            // InternalMcmodel.g:17671:2: ( (otherlv_0= '{' () ( ( (lv_entries_2_0= ruleMCJsonEntry ) ) (otherlv_3= ',' ( (lv_entries_4_0= ruleMCJsonEntry ) ) )* (otherlv_5= ',' )? )? otherlv_6= '}' ) )
            // InternalMcmodel.g:17672:2: (otherlv_0= '{' () ( ( (lv_entries_2_0= ruleMCJsonEntry ) ) (otherlv_3= ',' ( (lv_entries_4_0= ruleMCJsonEntry ) ) )* (otherlv_5= ',' )? )? otherlv_6= '}' )
            {
            // InternalMcmodel.g:17672:2: (otherlv_0= '{' () ( ( (lv_entries_2_0= ruleMCJsonEntry ) ) (otherlv_3= ',' ( (lv_entries_4_0= ruleMCJsonEntry ) ) )* (otherlv_5= ',' )? )? otherlv_6= '}' )
            // InternalMcmodel.g:17673:3: otherlv_0= '{' () ( ( (lv_entries_2_0= ruleMCJsonEntry ) ) (otherlv_3= ',' ( (lv_entries_4_0= ruleMCJsonEntry ) ) )* (otherlv_5= ',' )? )? otherlv_6= '}'
            {
            otherlv_0=(Token)match(input,24,FOLLOW_59); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getMCJsonObjectAccess().getLeftCurlyBracketKeyword_0());
              		
            }
            // InternalMcmodel.g:17677:3: ()
            // InternalMcmodel.g:17678:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getMCJsonObjectAccess().getMCJsonObjectAction_1(),
              					current);
              			
            }

            }

            // InternalMcmodel.g:17684:3: ( ( (lv_entries_2_0= ruleMCJsonEntry ) ) (otherlv_3= ',' ( (lv_entries_4_0= ruleMCJsonEntry ) ) )* (otherlv_5= ',' )? )?
            int alt571=2;
            int LA571_0 = input.LA(1);

            if ( (LA571_0==RULE_STRING) ) {
                alt571=1;
            }
            switch (alt571) {
                case 1 :
                    // InternalMcmodel.g:17685:4: ( (lv_entries_2_0= ruleMCJsonEntry ) ) (otherlv_3= ',' ( (lv_entries_4_0= ruleMCJsonEntry ) ) )* (otherlv_5= ',' )?
                    {
                    // InternalMcmodel.g:17685:4: ( (lv_entries_2_0= ruleMCJsonEntry ) )
                    // InternalMcmodel.g:17686:5: (lv_entries_2_0= ruleMCJsonEntry )
                    {
                    // InternalMcmodel.g:17686:5: (lv_entries_2_0= ruleMCJsonEntry )
                    // InternalMcmodel.g:17687:6: lv_entries_2_0= ruleMCJsonEntry
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getMCJsonObjectAccess().getEntriesMCJsonEntryParserRuleCall_2_0_0());
                      					
                    }
                    pushFollow(FOLLOW_60);
                    lv_entries_2_0=ruleMCJsonEntry();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getMCJsonObjectRule());
                      						}
                      						add(
                      							current,
                      							"entries",
                      							lv_entries_2_0,
                      							"com.raptor.mcmodel.Mcmodel.MCJsonEntry");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalMcmodel.g:17704:4: (otherlv_3= ',' ( (lv_entries_4_0= ruleMCJsonEntry ) ) )*
                    loop569:
                    do {
                        int alt569=2;
                        int LA569_0 = input.LA(1);

                        if ( (LA569_0==40) ) {
                            int LA569_1 = input.LA(2);

                            if ( (LA569_1==RULE_STRING) ) {
                                alt569=1;
                            }


                        }


                        switch (alt569) {
                    	case 1 :
                    	    // InternalMcmodel.g:17705:5: otherlv_3= ',' ( (lv_entries_4_0= ruleMCJsonEntry ) )
                    	    {
                    	    otherlv_3=(Token)match(input,40,FOLLOW_61); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_3, grammarAccess.getMCJsonObjectAccess().getCommaKeyword_2_1_0());
                    	      				
                    	    }
                    	    // InternalMcmodel.g:17709:5: ( (lv_entries_4_0= ruleMCJsonEntry ) )
                    	    // InternalMcmodel.g:17710:6: (lv_entries_4_0= ruleMCJsonEntry )
                    	    {
                    	    // InternalMcmodel.g:17710:6: (lv_entries_4_0= ruleMCJsonEntry )
                    	    // InternalMcmodel.g:17711:7: lv_entries_4_0= ruleMCJsonEntry
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getMCJsonObjectAccess().getEntriesMCJsonEntryParserRuleCall_2_1_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_60);
                    	    lv_entries_4_0=ruleMCJsonEntry();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getMCJsonObjectRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"entries",
                    	      								lv_entries_4_0,
                    	      								"com.raptor.mcmodel.Mcmodel.MCJsonEntry");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop569;
                        }
                    } while (true);

                    // InternalMcmodel.g:17729:4: (otherlv_5= ',' )?
                    int alt570=2;
                    int LA570_0 = input.LA(1);

                    if ( (LA570_0==40) ) {
                        alt570=1;
                    }
                    switch (alt570) {
                        case 1 :
                            // InternalMcmodel.g:17730:5: otherlv_5= ','
                            {
                            otherlv_5=(Token)match(input,40,FOLLOW_19); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_5, grammarAccess.getMCJsonObjectAccess().getCommaKeyword_2_2());
                              				
                            }

                            }
                            break;

                    }


                    }
                    break;

            }

            otherlv_6=(Token)match(input,25,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_6, grammarAccess.getMCJsonObjectAccess().getRightCurlyBracketKeyword_3());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMCJsonObject"


    // $ANTLR start "entryRuleMCJsonEntry"
    // InternalMcmodel.g:17744:1: entryRuleMCJsonEntry returns [EObject current=null] : iv_ruleMCJsonEntry= ruleMCJsonEntry EOF ;
    public final EObject entryRuleMCJsonEntry() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleMCJsonEntry = null;


        try {
            // InternalMcmodel.g:17744:52: (iv_ruleMCJsonEntry= ruleMCJsonEntry EOF )
            // InternalMcmodel.g:17745:2: iv_ruleMCJsonEntry= ruleMCJsonEntry EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMCJsonEntryRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleMCJsonEntry=ruleMCJsonEntry();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMCJsonEntry; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMCJsonEntry"


    // $ANTLR start "ruleMCJsonEntry"
    // InternalMcmodel.g:17751:1: ruleMCJsonEntry returns [EObject current=null] : ( ( (lv_name_0_0= RULE_STRING ) ) otherlv_1= ':' ( (lv_value_2_0= ruleMCJsonValue ) ) ) ;
    public final EObject ruleMCJsonEntry() throws RecognitionException {
        EObject current = null;

        Token lv_name_0_0=null;
        Token otherlv_1=null;
        EObject lv_value_2_0 = null;



        	enterRule();

        try {
            // InternalMcmodel.g:17757:2: ( ( ( (lv_name_0_0= RULE_STRING ) ) otherlv_1= ':' ( (lv_value_2_0= ruleMCJsonValue ) ) ) )
            // InternalMcmodel.g:17758:2: ( ( (lv_name_0_0= RULE_STRING ) ) otherlv_1= ':' ( (lv_value_2_0= ruleMCJsonValue ) ) )
            {
            // InternalMcmodel.g:17758:2: ( ( (lv_name_0_0= RULE_STRING ) ) otherlv_1= ':' ( (lv_value_2_0= ruleMCJsonValue ) ) )
            // InternalMcmodel.g:17759:3: ( (lv_name_0_0= RULE_STRING ) ) otherlv_1= ':' ( (lv_value_2_0= ruleMCJsonValue ) )
            {
            // InternalMcmodel.g:17759:3: ( (lv_name_0_0= RULE_STRING ) )
            // InternalMcmodel.g:17760:4: (lv_name_0_0= RULE_STRING )
            {
            // InternalMcmodel.g:17760:4: (lv_name_0_0= RULE_STRING )
            // InternalMcmodel.g:17761:5: lv_name_0_0= RULE_STRING
            {
            lv_name_0_0=(Token)match(input,RULE_STRING,FOLLOW_62); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_name_0_0, grammarAccess.getMCJsonEntryAccess().getNameSTRINGTerminalRuleCall_0_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getMCJsonEntryRule());
              					}
              					setWithLastConsumed(
              						current,
              						"name",
              						lv_name_0_0,
              						"com.raptor.mcmodel.Mcmodel.STRING");
              				
            }

            }


            }

            otherlv_1=(Token)match(input,74,FOLLOW_63); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getMCJsonEntryAccess().getColonKeyword_1());
              		
            }
            // InternalMcmodel.g:17781:3: ( (lv_value_2_0= ruleMCJsonValue ) )
            // InternalMcmodel.g:17782:4: (lv_value_2_0= ruleMCJsonValue )
            {
            // InternalMcmodel.g:17782:4: (lv_value_2_0= ruleMCJsonValue )
            // InternalMcmodel.g:17783:5: lv_value_2_0= ruleMCJsonValue
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getMCJsonEntryAccess().getValueMCJsonValueParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_value_2_0=ruleMCJsonValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getMCJsonEntryRule());
              					}
              					set(
              						current,
              						"value",
              						lv_value_2_0,
              						"com.raptor.mcmodel.Mcmodel.MCJsonValue");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMCJsonEntry"


    // $ANTLR start "entryRuleMCJsonArray"
    // InternalMcmodel.g:17804:1: entryRuleMCJsonArray returns [EObject current=null] : iv_ruleMCJsonArray= ruleMCJsonArray EOF ;
    public final EObject entryRuleMCJsonArray() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleMCJsonArray = null;


        try {
            // InternalMcmodel.g:17804:52: (iv_ruleMCJsonArray= ruleMCJsonArray EOF )
            // InternalMcmodel.g:17805:2: iv_ruleMCJsonArray= ruleMCJsonArray EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMCJsonArrayRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleMCJsonArray=ruleMCJsonArray();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMCJsonArray; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMCJsonArray"


    // $ANTLR start "ruleMCJsonArray"
    // InternalMcmodel.g:17811:1: ruleMCJsonArray returns [EObject current=null] : (otherlv_0= '[' () ( ( (lv_elements_2_0= ruleMCJsonValue ) ) (otherlv_3= ',' ( (lv_elements_4_0= ruleMCJsonValue ) ) )* (otherlv_5= ',' )? )? otherlv_6= ']' ) ;
    public final EObject ruleMCJsonArray() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        EObject lv_elements_2_0 = null;

        EObject lv_elements_4_0 = null;



        	enterRule();

        try {
            // InternalMcmodel.g:17817:2: ( (otherlv_0= '[' () ( ( (lv_elements_2_0= ruleMCJsonValue ) ) (otherlv_3= ',' ( (lv_elements_4_0= ruleMCJsonValue ) ) )* (otherlv_5= ',' )? )? otherlv_6= ']' ) )
            // InternalMcmodel.g:17818:2: (otherlv_0= '[' () ( ( (lv_elements_2_0= ruleMCJsonValue ) ) (otherlv_3= ',' ( (lv_elements_4_0= ruleMCJsonValue ) ) )* (otherlv_5= ',' )? )? otherlv_6= ']' )
            {
            // InternalMcmodel.g:17818:2: (otherlv_0= '[' () ( ( (lv_elements_2_0= ruleMCJsonValue ) ) (otherlv_3= ',' ( (lv_elements_4_0= ruleMCJsonValue ) ) )* (otherlv_5= ',' )? )? otherlv_6= ']' )
            // InternalMcmodel.g:17819:3: otherlv_0= '[' () ( ( (lv_elements_2_0= ruleMCJsonValue ) ) (otherlv_3= ',' ( (lv_elements_4_0= ruleMCJsonValue ) ) )* (otherlv_5= ',' )? )? otherlv_6= ']'
            {
            otherlv_0=(Token)match(input,75,FOLLOW_64); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getMCJsonArrayAccess().getLeftSquareBracketKeyword_0());
              		
            }
            // InternalMcmodel.g:17823:3: ()
            // InternalMcmodel.g:17824:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getMCJsonArrayAccess().getMCJsonArrayAction_1(),
              					current);
              			
            }

            }

            // InternalMcmodel.g:17830:3: ( ( (lv_elements_2_0= ruleMCJsonValue ) ) (otherlv_3= ',' ( (lv_elements_4_0= ruleMCJsonValue ) ) )* (otherlv_5= ',' )? )?
            int alt574=2;
            int LA574_0 = input.LA(1);

            if ( ((LA574_0>=RULE_STRING && LA574_0<=RULE_DOUBLE)||(LA574_0>=RULE_ULONG && LA574_0<=RULE_SLONG)||(LA574_0>=20 && LA574_0<=21)||LA574_0==24||LA574_0==75||LA574_0==77) ) {
                alt574=1;
            }
            switch (alt574) {
                case 1 :
                    // InternalMcmodel.g:17831:4: ( (lv_elements_2_0= ruleMCJsonValue ) ) (otherlv_3= ',' ( (lv_elements_4_0= ruleMCJsonValue ) ) )* (otherlv_5= ',' )?
                    {
                    // InternalMcmodel.g:17831:4: ( (lv_elements_2_0= ruleMCJsonValue ) )
                    // InternalMcmodel.g:17832:5: (lv_elements_2_0= ruleMCJsonValue )
                    {
                    // InternalMcmodel.g:17832:5: (lv_elements_2_0= ruleMCJsonValue )
                    // InternalMcmodel.g:17833:6: lv_elements_2_0= ruleMCJsonValue
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getMCJsonArrayAccess().getElementsMCJsonValueParserRuleCall_2_0_0());
                      					
                    }
                    pushFollow(FOLLOW_65);
                    lv_elements_2_0=ruleMCJsonValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getMCJsonArrayRule());
                      						}
                      						add(
                      							current,
                      							"elements",
                      							lv_elements_2_0,
                      							"com.raptor.mcmodel.Mcmodel.MCJsonValue");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalMcmodel.g:17850:4: (otherlv_3= ',' ( (lv_elements_4_0= ruleMCJsonValue ) ) )*
                    loop572:
                    do {
                        int alt572=2;
                        int LA572_0 = input.LA(1);

                        if ( (LA572_0==40) ) {
                            int LA572_1 = input.LA(2);

                            if ( ((LA572_1>=RULE_STRING && LA572_1<=RULE_DOUBLE)||(LA572_1>=RULE_ULONG && LA572_1<=RULE_SLONG)||(LA572_1>=20 && LA572_1<=21)||LA572_1==24||LA572_1==75||LA572_1==77) ) {
                                alt572=1;
                            }


                        }


                        switch (alt572) {
                    	case 1 :
                    	    // InternalMcmodel.g:17851:5: otherlv_3= ',' ( (lv_elements_4_0= ruleMCJsonValue ) )
                    	    {
                    	    otherlv_3=(Token)match(input,40,FOLLOW_63); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_3, grammarAccess.getMCJsonArrayAccess().getCommaKeyword_2_1_0());
                    	      				
                    	    }
                    	    // InternalMcmodel.g:17855:5: ( (lv_elements_4_0= ruleMCJsonValue ) )
                    	    // InternalMcmodel.g:17856:6: (lv_elements_4_0= ruleMCJsonValue )
                    	    {
                    	    // InternalMcmodel.g:17856:6: (lv_elements_4_0= ruleMCJsonValue )
                    	    // InternalMcmodel.g:17857:7: lv_elements_4_0= ruleMCJsonValue
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getMCJsonArrayAccess().getElementsMCJsonValueParserRuleCall_2_1_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_65);
                    	    lv_elements_4_0=ruleMCJsonValue();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getMCJsonArrayRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"elements",
                    	      								lv_elements_4_0,
                    	      								"com.raptor.mcmodel.Mcmodel.MCJsonValue");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop572;
                        }
                    } while (true);

                    // InternalMcmodel.g:17875:4: (otherlv_5= ',' )?
                    int alt573=2;
                    int LA573_0 = input.LA(1);

                    if ( (LA573_0==40) ) {
                        alt573=1;
                    }
                    switch (alt573) {
                        case 1 :
                            // InternalMcmodel.g:17876:5: otherlv_5= ','
                            {
                            otherlv_5=(Token)match(input,40,FOLLOW_66); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_5, grammarAccess.getMCJsonArrayAccess().getCommaKeyword_2_2());
                              				
                            }

                            }
                            break;

                    }


                    }
                    break;

            }

            otherlv_6=(Token)match(input,76,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_6, grammarAccess.getMCJsonArrayAccess().getRightSquareBracketKeyword_3());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMCJsonArray"


    // $ANTLR start "entryRuleMCJsonString"
    // InternalMcmodel.g:17890:1: entryRuleMCJsonString returns [EObject current=null] : iv_ruleMCJsonString= ruleMCJsonString EOF ;
    public final EObject entryRuleMCJsonString() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleMCJsonString = null;


        try {
            // InternalMcmodel.g:17890:53: (iv_ruleMCJsonString= ruleMCJsonString EOF )
            // InternalMcmodel.g:17891:2: iv_ruleMCJsonString= ruleMCJsonString EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMCJsonStringRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleMCJsonString=ruleMCJsonString();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMCJsonString; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMCJsonString"


    // $ANTLR start "ruleMCJsonString"
    // InternalMcmodel.g:17897:1: ruleMCJsonString returns [EObject current=null] : ( (lv_value_0_0= RULE_STRING ) ) ;
    public final EObject ruleMCJsonString() throws RecognitionException {
        EObject current = null;

        Token lv_value_0_0=null;


        	enterRule();

        try {
            // InternalMcmodel.g:17903:2: ( ( (lv_value_0_0= RULE_STRING ) ) )
            // InternalMcmodel.g:17904:2: ( (lv_value_0_0= RULE_STRING ) )
            {
            // InternalMcmodel.g:17904:2: ( (lv_value_0_0= RULE_STRING ) )
            // InternalMcmodel.g:17905:3: (lv_value_0_0= RULE_STRING )
            {
            // InternalMcmodel.g:17905:3: (lv_value_0_0= RULE_STRING )
            // InternalMcmodel.g:17906:4: lv_value_0_0= RULE_STRING
            {
            lv_value_0_0=(Token)match(input,RULE_STRING,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_value_0_0, grammarAccess.getMCJsonStringAccess().getValueSTRINGTerminalRuleCall_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getMCJsonStringRule());
              				}
              				setWithLastConsumed(
              					current,
              					"value",
              					lv_value_0_0,
              					"com.raptor.mcmodel.Mcmodel.STRING");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMCJsonString"


    // $ANTLR start "entryRuleMCJsonNumber"
    // InternalMcmodel.g:17925:1: entryRuleMCJsonNumber returns [EObject current=null] : iv_ruleMCJsonNumber= ruleMCJsonNumber EOF ;
    public final EObject entryRuleMCJsonNumber() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleMCJsonNumber = null;


        try {
            // InternalMcmodel.g:17925:53: (iv_ruleMCJsonNumber= ruleMCJsonNumber EOF )
            // InternalMcmodel.g:17926:2: iv_ruleMCJsonNumber= ruleMCJsonNumber EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMCJsonNumberRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleMCJsonNumber=ruleMCJsonNumber();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMCJsonNumber; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMCJsonNumber"


    // $ANTLR start "ruleMCJsonNumber"
    // InternalMcmodel.g:17932:1: ruleMCJsonNumber returns [EObject current=null] : (this_MCJsonIntegral_0= ruleMCJsonIntegral | this_MCJsonFloatingPoint_1= ruleMCJsonFloatingPoint ) ;
    public final EObject ruleMCJsonNumber() throws RecognitionException {
        EObject current = null;

        EObject this_MCJsonIntegral_0 = null;

        EObject this_MCJsonFloatingPoint_1 = null;



        	enterRule();

        try {
            // InternalMcmodel.g:17938:2: ( (this_MCJsonIntegral_0= ruleMCJsonIntegral | this_MCJsonFloatingPoint_1= ruleMCJsonFloatingPoint ) )
            // InternalMcmodel.g:17939:2: (this_MCJsonIntegral_0= ruleMCJsonIntegral | this_MCJsonFloatingPoint_1= ruleMCJsonFloatingPoint )
            {
            // InternalMcmodel.g:17939:2: (this_MCJsonIntegral_0= ruleMCJsonIntegral | this_MCJsonFloatingPoint_1= ruleMCJsonFloatingPoint )
            int alt575=2;
            int LA575_0 = input.LA(1);

            if ( ((LA575_0>=RULE_ULONG && LA575_0<=RULE_SLONG)) ) {
                alt575=1;
            }
            else if ( (LA575_0==RULE_DOUBLE) ) {
                alt575=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 575, 0, input);

                throw nvae;
            }
            switch (alt575) {
                case 1 :
                    // InternalMcmodel.g:17940:3: this_MCJsonIntegral_0= ruleMCJsonIntegral
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getMCJsonNumberAccess().getMCJsonIntegralParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_MCJsonIntegral_0=ruleMCJsonIntegral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_MCJsonIntegral_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalMcmodel.g:17949:3: this_MCJsonFloatingPoint_1= ruleMCJsonFloatingPoint
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getMCJsonNumberAccess().getMCJsonFloatingPointParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_MCJsonFloatingPoint_1=ruleMCJsonFloatingPoint();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_MCJsonFloatingPoint_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMCJsonNumber"


    // $ANTLR start "entryRuleMCJsonIntegral"
    // InternalMcmodel.g:17961:1: entryRuleMCJsonIntegral returns [EObject current=null] : iv_ruleMCJsonIntegral= ruleMCJsonIntegral EOF ;
    public final EObject entryRuleMCJsonIntegral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleMCJsonIntegral = null;


        try {
            // InternalMcmodel.g:17961:55: (iv_ruleMCJsonIntegral= ruleMCJsonIntegral EOF )
            // InternalMcmodel.g:17962:2: iv_ruleMCJsonIntegral= ruleMCJsonIntegral EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMCJsonIntegralRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleMCJsonIntegral=ruleMCJsonIntegral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMCJsonIntegral; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMCJsonIntegral"


    // $ANTLR start "ruleMCJsonIntegral"
    // InternalMcmodel.g:17968:1: ruleMCJsonIntegral returns [EObject current=null] : ( (lv_value_0_0= ruleLONG ) ) ;
    public final EObject ruleMCJsonIntegral() throws RecognitionException {
        EObject current = null;

        AntlrDatatypeRuleToken lv_value_0_0 = null;



        	enterRule();

        try {
            // InternalMcmodel.g:17974:2: ( ( (lv_value_0_0= ruleLONG ) ) )
            // InternalMcmodel.g:17975:2: ( (lv_value_0_0= ruleLONG ) )
            {
            // InternalMcmodel.g:17975:2: ( (lv_value_0_0= ruleLONG ) )
            // InternalMcmodel.g:17976:3: (lv_value_0_0= ruleLONG )
            {
            // InternalMcmodel.g:17976:3: (lv_value_0_0= ruleLONG )
            // InternalMcmodel.g:17977:4: lv_value_0_0= ruleLONG
            {
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getMCJsonIntegralAccess().getValueLONGParserRuleCall_0());
              			
            }
            pushFollow(FOLLOW_2);
            lv_value_0_0=ruleLONG();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElementForParent(grammarAccess.getMCJsonIntegralRule());
              				}
              				set(
              					current,
              					"value",
              					lv_value_0_0,
              					"com.raptor.mcmodel.Mcmodel.LONG");
              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMCJsonIntegral"


    // $ANTLR start "entryRuleMCJsonFloatingPoint"
    // InternalMcmodel.g:17997:1: entryRuleMCJsonFloatingPoint returns [EObject current=null] : iv_ruleMCJsonFloatingPoint= ruleMCJsonFloatingPoint EOF ;
    public final EObject entryRuleMCJsonFloatingPoint() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleMCJsonFloatingPoint = null;


        try {
            // InternalMcmodel.g:17997:60: (iv_ruleMCJsonFloatingPoint= ruleMCJsonFloatingPoint EOF )
            // InternalMcmodel.g:17998:2: iv_ruleMCJsonFloatingPoint= ruleMCJsonFloatingPoint EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMCJsonFloatingPointRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleMCJsonFloatingPoint=ruleMCJsonFloatingPoint();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMCJsonFloatingPoint; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMCJsonFloatingPoint"


    // $ANTLR start "ruleMCJsonFloatingPoint"
    // InternalMcmodel.g:18004:1: ruleMCJsonFloatingPoint returns [EObject current=null] : ( (lv_value_0_0= RULE_DOUBLE ) ) ;
    public final EObject ruleMCJsonFloatingPoint() throws RecognitionException {
        EObject current = null;

        Token lv_value_0_0=null;


        	enterRule();

        try {
            // InternalMcmodel.g:18010:2: ( ( (lv_value_0_0= RULE_DOUBLE ) ) )
            // InternalMcmodel.g:18011:2: ( (lv_value_0_0= RULE_DOUBLE ) )
            {
            // InternalMcmodel.g:18011:2: ( (lv_value_0_0= RULE_DOUBLE ) )
            // InternalMcmodel.g:18012:3: (lv_value_0_0= RULE_DOUBLE )
            {
            // InternalMcmodel.g:18012:3: (lv_value_0_0= RULE_DOUBLE )
            // InternalMcmodel.g:18013:4: lv_value_0_0= RULE_DOUBLE
            {
            lv_value_0_0=(Token)match(input,RULE_DOUBLE,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_value_0_0, grammarAccess.getMCJsonFloatingPointAccess().getValueDOUBLETerminalRuleCall_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getMCJsonFloatingPointRule());
              				}
              				setWithLastConsumed(
              					current,
              					"value",
              					lv_value_0_0,
              					"com.raptor.mcmodel.Mcmodel.DOUBLE");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMCJsonFloatingPoint"


    // $ANTLR start "entryRuleMCJsonBoolean"
    // InternalMcmodel.g:18032:1: entryRuleMCJsonBoolean returns [EObject current=null] : iv_ruleMCJsonBoolean= ruleMCJsonBoolean EOF ;
    public final EObject entryRuleMCJsonBoolean() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleMCJsonBoolean = null;


        try {
            // InternalMcmodel.g:18032:54: (iv_ruleMCJsonBoolean= ruleMCJsonBoolean EOF )
            // InternalMcmodel.g:18033:2: iv_ruleMCJsonBoolean= ruleMCJsonBoolean EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMCJsonBooleanRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleMCJsonBoolean=ruleMCJsonBoolean();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMCJsonBoolean; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMCJsonBoolean"


    // $ANTLR start "ruleMCJsonBoolean"
    // InternalMcmodel.g:18039:1: ruleMCJsonBoolean returns [EObject current=null] : ( ( (lv_value_0_0= 'true' ) ) | (otherlv_1= 'false' () ) ) ;
    public final EObject ruleMCJsonBoolean() throws RecognitionException {
        EObject current = null;

        Token lv_value_0_0=null;
        Token otherlv_1=null;


        	enterRule();

        try {
            // InternalMcmodel.g:18045:2: ( ( ( (lv_value_0_0= 'true' ) ) | (otherlv_1= 'false' () ) ) )
            // InternalMcmodel.g:18046:2: ( ( (lv_value_0_0= 'true' ) ) | (otherlv_1= 'false' () ) )
            {
            // InternalMcmodel.g:18046:2: ( ( (lv_value_0_0= 'true' ) ) | (otherlv_1= 'false' () ) )
            int alt576=2;
            int LA576_0 = input.LA(1);

            if ( (LA576_0==20) ) {
                alt576=1;
            }
            else if ( (LA576_0==21) ) {
                alt576=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 576, 0, input);

                throw nvae;
            }
            switch (alt576) {
                case 1 :
                    // InternalMcmodel.g:18047:3: ( (lv_value_0_0= 'true' ) )
                    {
                    // InternalMcmodel.g:18047:3: ( (lv_value_0_0= 'true' ) )
                    // InternalMcmodel.g:18048:4: (lv_value_0_0= 'true' )
                    {
                    // InternalMcmodel.g:18048:4: (lv_value_0_0= 'true' )
                    // InternalMcmodel.g:18049:5: lv_value_0_0= 'true'
                    {
                    lv_value_0_0=(Token)match(input,20,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_value_0_0, grammarAccess.getMCJsonBooleanAccess().getValueTrueKeyword_0_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getMCJsonBooleanRule());
                      					}
                      					setWithLastConsumed(current, "value", true, "true");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalMcmodel.g:18062:3: (otherlv_1= 'false' () )
                    {
                    // InternalMcmodel.g:18062:3: (otherlv_1= 'false' () )
                    // InternalMcmodel.g:18063:4: otherlv_1= 'false' ()
                    {
                    otherlv_1=(Token)match(input,21,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getMCJsonBooleanAccess().getFalseKeyword_1_0());
                      			
                    }
                    // InternalMcmodel.g:18067:4: ()
                    // InternalMcmodel.g:18068:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getMCJsonBooleanAccess().getMCJsonBooleanAction_1_1(),
                      						current);
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMCJsonBoolean"


    // $ANTLR start "entryRuleMCJsonNull"
    // InternalMcmodel.g:18079:1: entryRuleMCJsonNull returns [EObject current=null] : iv_ruleMCJsonNull= ruleMCJsonNull EOF ;
    public final EObject entryRuleMCJsonNull() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleMCJsonNull = null;


        try {
            // InternalMcmodel.g:18079:51: (iv_ruleMCJsonNull= ruleMCJsonNull EOF )
            // InternalMcmodel.g:18080:2: iv_ruleMCJsonNull= ruleMCJsonNull EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMCJsonNullRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleMCJsonNull=ruleMCJsonNull();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMCJsonNull; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMCJsonNull"


    // $ANTLR start "ruleMCJsonNull"
    // InternalMcmodel.g:18086:1: ruleMCJsonNull returns [EObject current=null] : (otherlv_0= 'null' () ) ;
    public final EObject ruleMCJsonNull() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;


        	enterRule();

        try {
            // InternalMcmodel.g:18092:2: ( (otherlv_0= 'null' () ) )
            // InternalMcmodel.g:18093:2: (otherlv_0= 'null' () )
            {
            // InternalMcmodel.g:18093:2: (otherlv_0= 'null' () )
            // InternalMcmodel.g:18094:3: otherlv_0= 'null' ()
            {
            otherlv_0=(Token)match(input,77,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getMCJsonNullAccess().getNullKeyword_0());
              		
            }
            // InternalMcmodel.g:18098:3: ()
            // InternalMcmodel.g:18099:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getMCJsonNullAccess().getMCJsonNullAction_1(),
              					current);
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMCJsonNull"


    // $ANTLR start "entryRuleVec3d"
    // InternalMcmodel.g:18109:1: entryRuleVec3d returns [EObject current=null] : iv_ruleVec3d= ruleVec3d EOF ;
    public final EObject entryRuleVec3d() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleVec3d = null;


        try {
            // InternalMcmodel.g:18109:46: (iv_ruleVec3d= ruleVec3d EOF )
            // InternalMcmodel.g:18110:2: iv_ruleVec3d= ruleVec3d EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getVec3dRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleVec3d=ruleVec3d();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleVec3d; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleVec3d"


    // $ANTLR start "ruleVec3d"
    // InternalMcmodel.g:18116:1: ruleVec3d returns [EObject current=null] : (otherlv_0= '(' ( (lv_x_1_0= ruleNUMBER ) ) otherlv_2= ',' ( (lv_y_3_0= ruleNUMBER ) ) otherlv_4= ',' ( (lv_z_5_0= ruleNUMBER ) ) otherlv_6= ')' ) ;
    public final EObject ruleVec3d() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        AntlrDatatypeRuleToken lv_x_1_0 = null;

        AntlrDatatypeRuleToken lv_y_3_0 = null;

        AntlrDatatypeRuleToken lv_z_5_0 = null;



        	enterRule();

        try {
            // InternalMcmodel.g:18122:2: ( (otherlv_0= '(' ( (lv_x_1_0= ruleNUMBER ) ) otherlv_2= ',' ( (lv_y_3_0= ruleNUMBER ) ) otherlv_4= ',' ( (lv_z_5_0= ruleNUMBER ) ) otherlv_6= ')' ) )
            // InternalMcmodel.g:18123:2: (otherlv_0= '(' ( (lv_x_1_0= ruleNUMBER ) ) otherlv_2= ',' ( (lv_y_3_0= ruleNUMBER ) ) otherlv_4= ',' ( (lv_z_5_0= ruleNUMBER ) ) otherlv_6= ')' )
            {
            // InternalMcmodel.g:18123:2: (otherlv_0= '(' ( (lv_x_1_0= ruleNUMBER ) ) otherlv_2= ',' ( (lv_y_3_0= ruleNUMBER ) ) otherlv_4= ',' ( (lv_z_5_0= ruleNUMBER ) ) otherlv_6= ')' )
            // InternalMcmodel.g:18124:3: otherlv_0= '(' ( (lv_x_1_0= ruleNUMBER ) ) otherlv_2= ',' ( (lv_y_3_0= ruleNUMBER ) ) otherlv_4= ',' ( (lv_z_5_0= ruleNUMBER ) ) otherlv_6= ')'
            {
            otherlv_0=(Token)match(input,42,FOLLOW_23); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getVec3dAccess().getLeftParenthesisKeyword_0());
              		
            }
            // InternalMcmodel.g:18128:3: ( (lv_x_1_0= ruleNUMBER ) )
            // InternalMcmodel.g:18129:4: (lv_x_1_0= ruleNUMBER )
            {
            // InternalMcmodel.g:18129:4: (lv_x_1_0= ruleNUMBER )
            // InternalMcmodel.g:18130:5: lv_x_1_0= ruleNUMBER
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getVec3dAccess().getXNUMBERParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_67);
            lv_x_1_0=ruleNUMBER();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getVec3dRule());
              					}
              					set(
              						current,
              						"x",
              						lv_x_1_0,
              						"com.raptor.mcmodel.Mcmodel.NUMBER");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_2=(Token)match(input,40,FOLLOW_23); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getVec3dAccess().getCommaKeyword_2());
              		
            }
            // InternalMcmodel.g:18151:3: ( (lv_y_3_0= ruleNUMBER ) )
            // InternalMcmodel.g:18152:4: (lv_y_3_0= ruleNUMBER )
            {
            // InternalMcmodel.g:18152:4: (lv_y_3_0= ruleNUMBER )
            // InternalMcmodel.g:18153:5: lv_y_3_0= ruleNUMBER
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getVec3dAccess().getYNUMBERParserRuleCall_3_0());
              				
            }
            pushFollow(FOLLOW_67);
            lv_y_3_0=ruleNUMBER();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getVec3dRule());
              					}
              					set(
              						current,
              						"y",
              						lv_y_3_0,
              						"com.raptor.mcmodel.Mcmodel.NUMBER");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_4=(Token)match(input,40,FOLLOW_23); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getVec3dAccess().getCommaKeyword_4());
              		
            }
            // InternalMcmodel.g:18174:3: ( (lv_z_5_0= ruleNUMBER ) )
            // InternalMcmodel.g:18175:4: (lv_z_5_0= ruleNUMBER )
            {
            // InternalMcmodel.g:18175:4: (lv_z_5_0= ruleNUMBER )
            // InternalMcmodel.g:18176:5: lv_z_5_0= ruleNUMBER
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getVec3dAccess().getZNUMBERParserRuleCall_5_0());
              				
            }
            pushFollow(FOLLOW_34);
            lv_z_5_0=ruleNUMBER();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getVec3dRule());
              					}
              					set(
              						current,
              						"z",
              						lv_z_5_0,
              						"com.raptor.mcmodel.Mcmodel.NUMBER");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_6=(Token)match(input,45,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_6, grammarAccess.getVec3dAccess().getRightParenthesisKeyword_6());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleVec3d"


    // $ANTLR start "entryRuleVec3dPercentage"
    // InternalMcmodel.g:18201:1: entryRuleVec3dPercentage returns [EObject current=null] : iv_ruleVec3dPercentage= ruleVec3dPercentage EOF ;
    public final EObject entryRuleVec3dPercentage() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleVec3dPercentage = null;


        try {
            // InternalMcmodel.g:18201:56: (iv_ruleVec3dPercentage= ruleVec3dPercentage EOF )
            // InternalMcmodel.g:18202:2: iv_ruleVec3dPercentage= ruleVec3dPercentage EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getVec3dPercentageRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleVec3dPercentage=ruleVec3dPercentage();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleVec3dPercentage; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleVec3dPercentage"


    // $ANTLR start "ruleVec3dPercentage"
    // InternalMcmodel.g:18208:1: ruleVec3dPercentage returns [EObject current=null] : (otherlv_0= '(' ( (lv_x_1_0= RULE_PERCENTAGE ) ) otherlv_2= ',' ( (lv_y_3_0= RULE_PERCENTAGE ) ) otherlv_4= ',' ( (lv_z_5_0= RULE_PERCENTAGE ) ) otherlv_6= ')' ) ;
    public final EObject ruleVec3dPercentage() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token lv_x_1_0=null;
        Token otherlv_2=null;
        Token lv_y_3_0=null;
        Token otherlv_4=null;
        Token lv_z_5_0=null;
        Token otherlv_6=null;


        	enterRule();

        try {
            // InternalMcmodel.g:18214:2: ( (otherlv_0= '(' ( (lv_x_1_0= RULE_PERCENTAGE ) ) otherlv_2= ',' ( (lv_y_3_0= RULE_PERCENTAGE ) ) otherlv_4= ',' ( (lv_z_5_0= RULE_PERCENTAGE ) ) otherlv_6= ')' ) )
            // InternalMcmodel.g:18215:2: (otherlv_0= '(' ( (lv_x_1_0= RULE_PERCENTAGE ) ) otherlv_2= ',' ( (lv_y_3_0= RULE_PERCENTAGE ) ) otherlv_4= ',' ( (lv_z_5_0= RULE_PERCENTAGE ) ) otherlv_6= ')' )
            {
            // InternalMcmodel.g:18215:2: (otherlv_0= '(' ( (lv_x_1_0= RULE_PERCENTAGE ) ) otherlv_2= ',' ( (lv_y_3_0= RULE_PERCENTAGE ) ) otherlv_4= ',' ( (lv_z_5_0= RULE_PERCENTAGE ) ) otherlv_6= ')' )
            // InternalMcmodel.g:18216:3: otherlv_0= '(' ( (lv_x_1_0= RULE_PERCENTAGE ) ) otherlv_2= ',' ( (lv_y_3_0= RULE_PERCENTAGE ) ) otherlv_4= ',' ( (lv_z_5_0= RULE_PERCENTAGE ) ) otherlv_6= ')'
            {
            otherlv_0=(Token)match(input,42,FOLLOW_36); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getVec3dPercentageAccess().getLeftParenthesisKeyword_0());
              		
            }
            // InternalMcmodel.g:18220:3: ( (lv_x_1_0= RULE_PERCENTAGE ) )
            // InternalMcmodel.g:18221:4: (lv_x_1_0= RULE_PERCENTAGE )
            {
            // InternalMcmodel.g:18221:4: (lv_x_1_0= RULE_PERCENTAGE )
            // InternalMcmodel.g:18222:5: lv_x_1_0= RULE_PERCENTAGE
            {
            lv_x_1_0=(Token)match(input,RULE_PERCENTAGE,FOLLOW_67); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_x_1_0, grammarAccess.getVec3dPercentageAccess().getXPERCENTAGETerminalRuleCall_1_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getVec3dPercentageRule());
              					}
              					setWithLastConsumed(
              						current,
              						"x",
              						lv_x_1_0,
              						"com.raptor.mcmodel.Mcmodel.PERCENTAGE");
              				
            }

            }


            }

            otherlv_2=(Token)match(input,40,FOLLOW_36); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getVec3dPercentageAccess().getCommaKeyword_2());
              		
            }
            // InternalMcmodel.g:18242:3: ( (lv_y_3_0= RULE_PERCENTAGE ) )
            // InternalMcmodel.g:18243:4: (lv_y_3_0= RULE_PERCENTAGE )
            {
            // InternalMcmodel.g:18243:4: (lv_y_3_0= RULE_PERCENTAGE )
            // InternalMcmodel.g:18244:5: lv_y_3_0= RULE_PERCENTAGE
            {
            lv_y_3_0=(Token)match(input,RULE_PERCENTAGE,FOLLOW_67); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_y_3_0, grammarAccess.getVec3dPercentageAccess().getYPERCENTAGETerminalRuleCall_3_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getVec3dPercentageRule());
              					}
              					setWithLastConsumed(
              						current,
              						"y",
              						lv_y_3_0,
              						"com.raptor.mcmodel.Mcmodel.PERCENTAGE");
              				
            }

            }


            }

            otherlv_4=(Token)match(input,40,FOLLOW_36); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getVec3dPercentageAccess().getCommaKeyword_4());
              		
            }
            // InternalMcmodel.g:18264:3: ( (lv_z_5_0= RULE_PERCENTAGE ) )
            // InternalMcmodel.g:18265:4: (lv_z_5_0= RULE_PERCENTAGE )
            {
            // InternalMcmodel.g:18265:4: (lv_z_5_0= RULE_PERCENTAGE )
            // InternalMcmodel.g:18266:5: lv_z_5_0= RULE_PERCENTAGE
            {
            lv_z_5_0=(Token)match(input,RULE_PERCENTAGE,FOLLOW_34); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_z_5_0, grammarAccess.getVec3dPercentageAccess().getZPERCENTAGETerminalRuleCall_5_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getVec3dPercentageRule());
              					}
              					setWithLastConsumed(
              						current,
              						"z",
              						lv_z_5_0,
              						"com.raptor.mcmodel.Mcmodel.PERCENTAGE");
              				
            }

            }


            }

            otherlv_6=(Token)match(input,45,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_6, grammarAccess.getVec3dPercentageAccess().getRightParenthesisKeyword_6());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleVec3dPercentage"


    // $ANTLR start "entryRuleVec4d"
    // InternalMcmodel.g:18290:1: entryRuleVec4d returns [EObject current=null] : iv_ruleVec4d= ruleVec4d EOF ;
    public final EObject entryRuleVec4d() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleVec4d = null;


        try {
            // InternalMcmodel.g:18290:46: (iv_ruleVec4d= ruleVec4d EOF )
            // InternalMcmodel.g:18291:2: iv_ruleVec4d= ruleVec4d EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getVec4dRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleVec4d=ruleVec4d();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleVec4d; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleVec4d"


    // $ANTLR start "ruleVec4d"
    // InternalMcmodel.g:18297:1: ruleVec4d returns [EObject current=null] : (otherlv_0= '(' ( (lv_x1_1_0= ruleNUMBER ) ) otherlv_2= ',' ( (lv_y1_3_0= ruleNUMBER ) ) otherlv_4= ',' ( (lv_x2_5_0= ruleNUMBER ) ) otherlv_6= ',' ( (lv_y2_7_0= ruleNUMBER ) ) otherlv_8= ')' ) ;
    public final EObject ruleVec4d() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        AntlrDatatypeRuleToken lv_x1_1_0 = null;

        AntlrDatatypeRuleToken lv_y1_3_0 = null;

        AntlrDatatypeRuleToken lv_x2_5_0 = null;

        AntlrDatatypeRuleToken lv_y2_7_0 = null;



        	enterRule();

        try {
            // InternalMcmodel.g:18303:2: ( (otherlv_0= '(' ( (lv_x1_1_0= ruleNUMBER ) ) otherlv_2= ',' ( (lv_y1_3_0= ruleNUMBER ) ) otherlv_4= ',' ( (lv_x2_5_0= ruleNUMBER ) ) otherlv_6= ',' ( (lv_y2_7_0= ruleNUMBER ) ) otherlv_8= ')' ) )
            // InternalMcmodel.g:18304:2: (otherlv_0= '(' ( (lv_x1_1_0= ruleNUMBER ) ) otherlv_2= ',' ( (lv_y1_3_0= ruleNUMBER ) ) otherlv_4= ',' ( (lv_x2_5_0= ruleNUMBER ) ) otherlv_6= ',' ( (lv_y2_7_0= ruleNUMBER ) ) otherlv_8= ')' )
            {
            // InternalMcmodel.g:18304:2: (otherlv_0= '(' ( (lv_x1_1_0= ruleNUMBER ) ) otherlv_2= ',' ( (lv_y1_3_0= ruleNUMBER ) ) otherlv_4= ',' ( (lv_x2_5_0= ruleNUMBER ) ) otherlv_6= ',' ( (lv_y2_7_0= ruleNUMBER ) ) otherlv_8= ')' )
            // InternalMcmodel.g:18305:3: otherlv_0= '(' ( (lv_x1_1_0= ruleNUMBER ) ) otherlv_2= ',' ( (lv_y1_3_0= ruleNUMBER ) ) otherlv_4= ',' ( (lv_x2_5_0= ruleNUMBER ) ) otherlv_6= ',' ( (lv_y2_7_0= ruleNUMBER ) ) otherlv_8= ')'
            {
            otherlv_0=(Token)match(input,42,FOLLOW_23); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getVec4dAccess().getLeftParenthesisKeyword_0());
              		
            }
            // InternalMcmodel.g:18309:3: ( (lv_x1_1_0= ruleNUMBER ) )
            // InternalMcmodel.g:18310:4: (lv_x1_1_0= ruleNUMBER )
            {
            // InternalMcmodel.g:18310:4: (lv_x1_1_0= ruleNUMBER )
            // InternalMcmodel.g:18311:5: lv_x1_1_0= ruleNUMBER
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getVec4dAccess().getX1NUMBERParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_67);
            lv_x1_1_0=ruleNUMBER();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getVec4dRule());
              					}
              					set(
              						current,
              						"x1",
              						lv_x1_1_0,
              						"com.raptor.mcmodel.Mcmodel.NUMBER");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_2=(Token)match(input,40,FOLLOW_23); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getVec4dAccess().getCommaKeyword_2());
              		
            }
            // InternalMcmodel.g:18332:3: ( (lv_y1_3_0= ruleNUMBER ) )
            // InternalMcmodel.g:18333:4: (lv_y1_3_0= ruleNUMBER )
            {
            // InternalMcmodel.g:18333:4: (lv_y1_3_0= ruleNUMBER )
            // InternalMcmodel.g:18334:5: lv_y1_3_0= ruleNUMBER
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getVec4dAccess().getY1NUMBERParserRuleCall_3_0());
              				
            }
            pushFollow(FOLLOW_67);
            lv_y1_3_0=ruleNUMBER();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getVec4dRule());
              					}
              					set(
              						current,
              						"y1",
              						lv_y1_3_0,
              						"com.raptor.mcmodel.Mcmodel.NUMBER");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_4=(Token)match(input,40,FOLLOW_23); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getVec4dAccess().getCommaKeyword_4());
              		
            }
            // InternalMcmodel.g:18355:3: ( (lv_x2_5_0= ruleNUMBER ) )
            // InternalMcmodel.g:18356:4: (lv_x2_5_0= ruleNUMBER )
            {
            // InternalMcmodel.g:18356:4: (lv_x2_5_0= ruleNUMBER )
            // InternalMcmodel.g:18357:5: lv_x2_5_0= ruleNUMBER
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getVec4dAccess().getX2NUMBERParserRuleCall_5_0());
              				
            }
            pushFollow(FOLLOW_67);
            lv_x2_5_0=ruleNUMBER();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getVec4dRule());
              					}
              					set(
              						current,
              						"x2",
              						lv_x2_5_0,
              						"com.raptor.mcmodel.Mcmodel.NUMBER");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_6=(Token)match(input,40,FOLLOW_23); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_6, grammarAccess.getVec4dAccess().getCommaKeyword_6());
              		
            }
            // InternalMcmodel.g:18378:3: ( (lv_y2_7_0= ruleNUMBER ) )
            // InternalMcmodel.g:18379:4: (lv_y2_7_0= ruleNUMBER )
            {
            // InternalMcmodel.g:18379:4: (lv_y2_7_0= ruleNUMBER )
            // InternalMcmodel.g:18380:5: lv_y2_7_0= ruleNUMBER
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getVec4dAccess().getY2NUMBERParserRuleCall_7_0());
              				
            }
            pushFollow(FOLLOW_34);
            lv_y2_7_0=ruleNUMBER();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getVec4dRule());
              					}
              					set(
              						current,
              						"y2",
              						lv_y2_7_0,
              						"com.raptor.mcmodel.Mcmodel.NUMBER");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_8=(Token)match(input,45,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_8, grammarAccess.getVec4dAccess().getRightParenthesisKeyword_8());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleVec4d"


    // $ANTLR start "entryRuleNamespacedLocation"
    // InternalMcmodel.g:18405:1: entryRuleNamespacedLocation returns [String current=null] : iv_ruleNamespacedLocation= ruleNamespacedLocation EOF ;
    public final String entryRuleNamespacedLocation() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleNamespacedLocation = null;



        	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();

        try {
            // InternalMcmodel.g:18407:2: (iv_ruleNamespacedLocation= ruleNamespacedLocation EOF )
            // InternalMcmodel.g:18408:2: iv_ruleNamespacedLocation= ruleNamespacedLocation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNamespacedLocationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleNamespacedLocation=ruleNamespacedLocation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNamespacedLocation.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {

            	myHiddenTokenState.restore();

        }
        return current;
    }
    // $ANTLR end "entryRuleNamespacedLocation"


    // $ANTLR start "ruleNamespacedLocation"
    // InternalMcmodel.g:18417:1: ruleNamespacedLocation returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_Key_0= ruleKey ( ( ':' )=> (kw= ':' this_Key_2= ruleKey ) )? ( ( '/' )=> (kw= '/' this_Key_4= ruleKey ) )* ) ;
    public final AntlrDatatypeRuleToken ruleNamespacedLocation() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        AntlrDatatypeRuleToken this_Key_0 = null;

        AntlrDatatypeRuleToken this_Key_2 = null;

        AntlrDatatypeRuleToken this_Key_4 = null;



        	enterRule();
        	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();

        try {
            // InternalMcmodel.g:18424:2: ( (this_Key_0= ruleKey ( ( ':' )=> (kw= ':' this_Key_2= ruleKey ) )? ( ( '/' )=> (kw= '/' this_Key_4= ruleKey ) )* ) )
            // InternalMcmodel.g:18425:2: (this_Key_0= ruleKey ( ( ':' )=> (kw= ':' this_Key_2= ruleKey ) )? ( ( '/' )=> (kw= '/' this_Key_4= ruleKey ) )* )
            {
            // InternalMcmodel.g:18425:2: (this_Key_0= ruleKey ( ( ':' )=> (kw= ':' this_Key_2= ruleKey ) )? ( ( '/' )=> (kw= '/' this_Key_4= ruleKey ) )* )
            // InternalMcmodel.g:18426:3: this_Key_0= ruleKey ( ( ':' )=> (kw= ':' this_Key_2= ruleKey ) )? ( ( '/' )=> (kw= '/' this_Key_4= ruleKey ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getNamespacedLocationAccess().getKeyParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_68);
            this_Key_0=ruleKey();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(this_Key_0);
              		
            }
            if ( state.backtracking==0 ) {

              			afterParserOrEnumRuleCall();
              		
            }
            // InternalMcmodel.g:18436:3: ( ( ':' )=> (kw= ':' this_Key_2= ruleKey ) )?
            int alt577=2;
            int LA577_0 = input.LA(1);

            if ( (LA577_0==74) && (synpred2_InternalMcmodel())) {
                alt577=1;
            }
            switch (alt577) {
                case 1 :
                    // InternalMcmodel.g:18437:4: ( ':' )=> (kw= ':' this_Key_2= ruleKey )
                    {
                    // InternalMcmodel.g:18438:4: (kw= ':' this_Key_2= ruleKey )
                    // InternalMcmodel.g:18439:5: kw= ':' this_Key_2= ruleKey
                    {
                    kw=(Token)match(input,74,FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					current.merge(kw);
                      					newLeafNode(kw, grammarAccess.getNamespacedLocationAccess().getColonKeyword_1_0_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getNamespacedLocationAccess().getKeyParserRuleCall_1_0_1());
                      				
                    }
                    pushFollow(FOLLOW_69);
                    this_Key_2=ruleKey();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					current.merge(this_Key_2);
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalMcmodel.g:18456:3: ( ( '/' )=> (kw= '/' this_Key_4= ruleKey ) )*
            loop578:
            do {
                int alt578=2;
                int LA578_0 = input.LA(1);

                if ( (LA578_0==78) && (synpred3_InternalMcmodel())) {
                    alt578=1;
                }


                switch (alt578) {
            	case 1 :
            	    // InternalMcmodel.g:18457:4: ( '/' )=> (kw= '/' this_Key_4= ruleKey )
            	    {
            	    // InternalMcmodel.g:18458:4: (kw= '/' this_Key_4= ruleKey )
            	    // InternalMcmodel.g:18459:5: kw= '/' this_Key_4= ruleKey
            	    {
            	    kw=(Token)match(input,78,FOLLOW_4); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					current.merge(kw);
            	      					newLeafNode(kw, grammarAccess.getNamespacedLocationAccess().getSolidusKeyword_2_0_0());
            	      				
            	    }
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getNamespacedLocationAccess().getKeyParserRuleCall_2_0_1());
            	      				
            	    }
            	    pushFollow(FOLLOW_69);
            	    this_Key_4=ruleKey();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					current.merge(this_Key_4);
            	      				
            	    }
            	    if ( state.backtracking==0 ) {

            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop578;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {

            	myHiddenTokenState.restore();

        }
        return current;
    }
    // $ANTLR end "ruleNamespacedLocation"


    // $ANTLR start "entryRuleKey"
    // InternalMcmodel.g:18483:1: entryRuleKey returns [String current=null] : iv_ruleKey= ruleKey EOF ;
    public final String entryRuleKey() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleKey = null;



        	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();

        try {
            // InternalMcmodel.g:18485:2: (iv_ruleKey= ruleKey EOF )
            // InternalMcmodel.g:18486:2: iv_ruleKey= ruleKey EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getKeyRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleKey=ruleKey();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleKey.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {

            	myHiddenTokenState.restore();

        }
        return current;
    }
    // $ANTLR end "entryRuleKey"


    // $ANTLR start "ruleKey"
    // InternalMcmodel.g:18495:1: ruleKey returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_Identifier_0= ruleIdentifier (kw= '.' this_Identifier_2= ruleIdentifier )* ) ;
    public final AntlrDatatypeRuleToken ruleKey() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        AntlrDatatypeRuleToken this_Identifier_0 = null;

        AntlrDatatypeRuleToken this_Identifier_2 = null;



        	enterRule();
        	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();

        try {
            // InternalMcmodel.g:18502:2: ( (this_Identifier_0= ruleIdentifier (kw= '.' this_Identifier_2= ruleIdentifier )* ) )
            // InternalMcmodel.g:18503:2: (this_Identifier_0= ruleIdentifier (kw= '.' this_Identifier_2= ruleIdentifier )* )
            {
            // InternalMcmodel.g:18503:2: (this_Identifier_0= ruleIdentifier (kw= '.' this_Identifier_2= ruleIdentifier )* )
            // InternalMcmodel.g:18504:3: this_Identifier_0= ruleIdentifier (kw= '.' this_Identifier_2= ruleIdentifier )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getKeyAccess().getIdentifierParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_70);
            this_Identifier_0=ruleIdentifier();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(this_Identifier_0);
              		
            }
            if ( state.backtracking==0 ) {

              			afterParserOrEnumRuleCall();
              		
            }
            // InternalMcmodel.g:18514:3: (kw= '.' this_Identifier_2= ruleIdentifier )*
            loop579:
            do {
                int alt579=2;
                int LA579_0 = input.LA(1);

                if ( (LA579_0==79) ) {
                    alt579=1;
                }


                switch (alt579) {
            	case 1 :
            	    // InternalMcmodel.g:18515:4: kw= '.' this_Identifier_2= ruleIdentifier
            	    {
            	    kw=(Token)match(input,79,FOLLOW_4); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				current.merge(kw);
            	      				newLeafNode(kw, grammarAccess.getKeyAccess().getFullStopKeyword_1_0());
            	      			
            	    }
            	    if ( state.backtracking==0 ) {

            	      				newCompositeNode(grammarAccess.getKeyAccess().getIdentifierParserRuleCall_1_1());
            	      			
            	    }
            	    pushFollow(FOLLOW_70);
            	    this_Identifier_2=ruleIdentifier();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				current.merge(this_Identifier_2);
            	      			
            	    }
            	    if ( state.backtracking==0 ) {

            	      				afterParserOrEnumRuleCall();
            	      			
            	    }

            	    }
            	    break;

            	default :
            	    break loop579;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {

            	myHiddenTokenState.restore();

        }
        return current;
    }
    // $ANTLR end "ruleKey"


    // $ANTLR start "entryRuleIdentifier"
    // InternalMcmodel.g:18538:1: entryRuleIdentifier returns [String current=null] : iv_ruleIdentifier= ruleIdentifier EOF ;
    public final String entryRuleIdentifier() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleIdentifier = null;



        	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();

        try {
            // InternalMcmodel.g:18540:2: (iv_ruleIdentifier= ruleIdentifier EOF )
            // InternalMcmodel.g:18541:2: iv_ruleIdentifier= ruleIdentifier EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getIdentifierRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleIdentifier=ruleIdentifier();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleIdentifier.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {

            	myHiddenTokenState.restore();

        }
        return current;
    }
    // $ANTLR end "entryRuleIdentifier"


    // $ANTLR start "ruleIdentifier"
    // InternalMcmodel.g:18550:1: ruleIdentifier returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_ID_0= RULE_ID | this_Keyword_1= ruleKeyword ) ;
    public final AntlrDatatypeRuleToken ruleIdentifier() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_ID_0=null;
        AntlrDatatypeRuleToken this_Keyword_1 = null;



        	enterRule();
        	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();

        try {
            // InternalMcmodel.g:18557:2: ( (this_ID_0= RULE_ID | this_Keyword_1= ruleKeyword ) )
            // InternalMcmodel.g:18558:2: (this_ID_0= RULE_ID | this_Keyword_1= ruleKeyword )
            {
            // InternalMcmodel.g:18558:2: (this_ID_0= RULE_ID | this_Keyword_1= ruleKeyword )
            int alt580=2;
            int LA580_0 = input.LA(1);

            if ( (LA580_0==RULE_ID) ) {
                alt580=1;
            }
            else if ( (LA580_0==17||(LA580_0>=19 && LA580_0<=23)||(LA580_0>=26 && LA580_0<=28)||LA580_0==30||(LA580_0>=32 && LA580_0<=39)||(LA580_0>=43 && LA580_0<=44)||(LA580_0>=46 && LA580_0<=57)||LA580_0==61||(LA580_0>=63 && LA580_0<=73)||LA580_0==77||(LA580_0>=80 && LA580_0<=86)) ) {
                alt580=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 580, 0, input);

                throw nvae;
            }
            switch (alt580) {
                case 1 :
                    // InternalMcmodel.g:18559:3: this_ID_0= RULE_ID
                    {
                    this_ID_0=(Token)match(input,RULE_ID,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_ID_0);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newLeafNode(this_ID_0, grammarAccess.getIdentifierAccess().getIDTerminalRuleCall_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalMcmodel.g:18567:3: this_Keyword_1= ruleKeyword
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getIdentifierAccess().getKeywordParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_Keyword_1=ruleKeyword();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_Keyword_1);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {

            	myHiddenTokenState.restore();

        }
        return current;
    }
    // $ANTLR end "ruleIdentifier"


    // $ANTLR start "entryRuleKeyword"
    // InternalMcmodel.g:18584:1: entryRuleKeyword returns [String current=null] : iv_ruleKeyword= ruleKeyword EOF ;
    public final String entryRuleKeyword() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleKeyword = null;


        try {
            // InternalMcmodel.g:18584:47: (iv_ruleKeyword= ruleKeyword EOF )
            // InternalMcmodel.g:18585:2: iv_ruleKeyword= ruleKeyword EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getKeywordRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleKeyword=ruleKeyword();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleKeyword.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleKeyword"


    // $ANTLR start "ruleKeyword"
    // InternalMcmodel.g:18591:1: ruleKeyword returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= 'ambientocclusion' | kw= 'angle' | kw= 'apply' | kw= 'axis' | kw= 'blocking' | kw= 'broken' | kw= 'cast' | kw= 'cooldown' | kw= 'cullface' | kw= 'custom_model_data' | kw= 'damage' | kw= 'damaged' | kw= 'default' | kw= 'display' | kw= 'down' | kw= 'east' | kw= 'elements' | kw= 'faces' | kw= 'false' | kw= 'firstperson_lefthand' | kw= 'firstperson_righthand' | kw= 'fixed' | kw= 'from' | kw= 'front' | kw= 'ground' | kw= 'gui' | kw= 'gui_light' | kw= 'head' | kw= 'lefthanded' | kw= 'north' | kw= 'null' | kw= 'origin' | kw= 'overrides' | kw= 'parent' | kw= 'pull' | kw= 'pulling' | kw= 'rescale' | kw= 'rotation' | kw= 'scale' | kw= 'shade' | kw= 'side' | kw= 'south' | kw= 'textures' | kw= 'thirdperson_lefthand' | kw= 'thirdperson_righthand' | kw= 'throwing' | kw= 'time' | kw= 'tintindex' | kw= 'translation' | kw= 'true' | kw= 'west' | kw= 'when' ) ;
    public final AntlrDatatypeRuleToken ruleKeyword() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalMcmodel.g:18597:2: ( (kw= 'ambientocclusion' | kw= 'angle' | kw= 'apply' | kw= 'axis' | kw= 'blocking' | kw= 'broken' | kw= 'cast' | kw= 'cooldown' | kw= 'cullface' | kw= 'custom_model_data' | kw= 'damage' | kw= 'damaged' | kw= 'default' | kw= 'display' | kw= 'down' | kw= 'east' | kw= 'elements' | kw= 'faces' | kw= 'false' | kw= 'firstperson_lefthand' | kw= 'firstperson_righthand' | kw= 'fixed' | kw= 'from' | kw= 'front' | kw= 'ground' | kw= 'gui' | kw= 'gui_light' | kw= 'head' | kw= 'lefthanded' | kw= 'north' | kw= 'null' | kw= 'origin' | kw= 'overrides' | kw= 'parent' | kw= 'pull' | kw= 'pulling' | kw= 'rescale' | kw= 'rotation' | kw= 'scale' | kw= 'shade' | kw= 'side' | kw= 'south' | kw= 'textures' | kw= 'thirdperson_lefthand' | kw= 'thirdperson_righthand' | kw= 'throwing' | kw= 'time' | kw= 'tintindex' | kw= 'translation' | kw= 'true' | kw= 'west' | kw= 'when' ) )
            // InternalMcmodel.g:18598:2: (kw= 'ambientocclusion' | kw= 'angle' | kw= 'apply' | kw= 'axis' | kw= 'blocking' | kw= 'broken' | kw= 'cast' | kw= 'cooldown' | kw= 'cullface' | kw= 'custom_model_data' | kw= 'damage' | kw= 'damaged' | kw= 'default' | kw= 'display' | kw= 'down' | kw= 'east' | kw= 'elements' | kw= 'faces' | kw= 'false' | kw= 'firstperson_lefthand' | kw= 'firstperson_righthand' | kw= 'fixed' | kw= 'from' | kw= 'front' | kw= 'ground' | kw= 'gui' | kw= 'gui_light' | kw= 'head' | kw= 'lefthanded' | kw= 'north' | kw= 'null' | kw= 'origin' | kw= 'overrides' | kw= 'parent' | kw= 'pull' | kw= 'pulling' | kw= 'rescale' | kw= 'rotation' | kw= 'scale' | kw= 'shade' | kw= 'side' | kw= 'south' | kw= 'textures' | kw= 'thirdperson_lefthand' | kw= 'thirdperson_righthand' | kw= 'throwing' | kw= 'time' | kw= 'tintindex' | kw= 'translation' | kw= 'true' | kw= 'west' | kw= 'when' )
            {
            // InternalMcmodel.g:18598:2: (kw= 'ambientocclusion' | kw= 'angle' | kw= 'apply' | kw= 'axis' | kw= 'blocking' | kw= 'broken' | kw= 'cast' | kw= 'cooldown' | kw= 'cullface' | kw= 'custom_model_data' | kw= 'damage' | kw= 'damaged' | kw= 'default' | kw= 'display' | kw= 'down' | kw= 'east' | kw= 'elements' | kw= 'faces' | kw= 'false' | kw= 'firstperson_lefthand' | kw= 'firstperson_righthand' | kw= 'fixed' | kw= 'from' | kw= 'front' | kw= 'ground' | kw= 'gui' | kw= 'gui_light' | kw= 'head' | kw= 'lefthanded' | kw= 'north' | kw= 'null' | kw= 'origin' | kw= 'overrides' | kw= 'parent' | kw= 'pull' | kw= 'pulling' | kw= 'rescale' | kw= 'rotation' | kw= 'scale' | kw= 'shade' | kw= 'side' | kw= 'south' | kw= 'textures' | kw= 'thirdperson_lefthand' | kw= 'thirdperson_righthand' | kw= 'throwing' | kw= 'time' | kw= 'tintindex' | kw= 'translation' | kw= 'true' | kw= 'west' | kw= 'when' )
            int alt581=52;
            switch ( input.LA(1) ) {
            case 19:
                {
                alt581=1;
                }
                break;
            case 38:
                {
                alt581=2;
                }
                break;
            case 56:
                {
                alt581=3;
                }
                break;
            case 37:
                {
                alt581=4;
                }
                break;
            case 61:
                {
                alt581=5;
                }
                break;
            case 63:
                {
                alt581=6;
                }
                break;
            case 64:
                {
                alt581=7;
                }
                break;
            case 65:
                {
                alt581=8;
                }
                break;
            case 43:
                {
                alt581=9;
                }
                break;
            case 73:
                {
                alt581=10;
                }
                break;
            case 66:
                {
                alt581=11;
                }
                break;
            case 67:
                {
                alt581=12;
                }
                break;
            case 34:
                {
                alt581=13;
                }
                break;
            case 22:
                {
                alt581=14;
                }
                break;
            case 80:
                {
                alt581=15;
                }
                break;
            case 81:
                {
                alt581=16;
                }
                break;
            case 26:
                {
                alt581=17;
                }
                break;
            case 33:
                {
                alt581=18;
                }
                break;
            case 21:
                {
                alt581=19;
                }
                break;
            case 49:
                {
                alt581=20;
                }
                break;
            case 48:
                {
                alt581=21;
                }
                break;
            case 53:
                {
                alt581=22;
                }
                break;
            case 30:
                {
                alt581=23;
                }
                break;
            case 82:
                {
                alt581=24;
                }
                break;
            case 52:
                {
                alt581=25;
                }
                break;
            case 50:
                {
                alt581=26;
                }
                break;
            case 27:
                {
                alt581=27;
                }
                break;
            case 51:
                {
                alt581=28;
                }
                break;
            case 68:
                {
                alt581=29;
                }
                break;
            case 83:
                {
                alt581=30;
                }
                break;
            case 77:
                {
                alt581=31;
                }
                break;
            case 36:
                {
                alt581=32;
                }
                break;
            case 28:
                {
                alt581=33;
                }
                break;
            case 17:
                {
                alt581=34;
                }
                break;
            case 69:
                {
                alt581=35;
                }
                break;
            case 70:
                {
                alt581=36;
                }
                break;
            case 39:
                {
                alt581=37;
                }
                break;
            case 32:
                {
                alt581=38;
                }
                break;
            case 55:
                {
                alt581=39;
                }
                break;
            case 35:
                {
                alt581=40;
                }
                break;
            case 84:
                {
                alt581=41;
                }
                break;
            case 85:
                {
                alt581=42;
                }
                break;
            case 23:
                {
                alt581=43;
                }
                break;
            case 47:
                {
                alt581=44;
                }
                break;
            case 46:
                {
                alt581=45;
                }
                break;
            case 71:
                {
                alt581=46;
                }
                break;
            case 72:
                {
                alt581=47;
                }
                break;
            case 44:
                {
                alt581=48;
                }
                break;
            case 54:
                {
                alt581=49;
                }
                break;
            case 20:
                {
                alt581=50;
                }
                break;
            case 86:
                {
                alt581=51;
                }
                break;
            case 57:
                {
                alt581=52;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 581, 0, input);

                throw nvae;
            }

            switch (alt581) {
                case 1 :
                    // InternalMcmodel.g:18599:3: kw= 'ambientocclusion'
                    {
                    kw=(Token)match(input,19,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getKeywordAccess().getAmbientocclusionKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalMcmodel.g:18605:3: kw= 'angle'
                    {
                    kw=(Token)match(input,38,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getKeywordAccess().getAngleKeyword_1());
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalMcmodel.g:18611:3: kw= 'apply'
                    {
                    kw=(Token)match(input,56,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getKeywordAccess().getApplyKeyword_2());
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalMcmodel.g:18617:3: kw= 'axis'
                    {
                    kw=(Token)match(input,37,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getKeywordAccess().getAxisKeyword_3());
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalMcmodel.g:18623:3: kw= 'blocking'
                    {
                    kw=(Token)match(input,61,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getKeywordAccess().getBlockingKeyword_4());
                      		
                    }

                    }
                    break;
                case 6 :
                    // InternalMcmodel.g:18629:3: kw= 'broken'
                    {
                    kw=(Token)match(input,63,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getKeywordAccess().getBrokenKeyword_5());
                      		
                    }

                    }
                    break;
                case 7 :
                    // InternalMcmodel.g:18635:3: kw= 'cast'
                    {
                    kw=(Token)match(input,64,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getKeywordAccess().getCastKeyword_6());
                      		
                    }

                    }
                    break;
                case 8 :
                    // InternalMcmodel.g:18641:3: kw= 'cooldown'
                    {
                    kw=(Token)match(input,65,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getKeywordAccess().getCooldownKeyword_7());
                      		
                    }

                    }
                    break;
                case 9 :
                    // InternalMcmodel.g:18647:3: kw= 'cullface'
                    {
                    kw=(Token)match(input,43,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getKeywordAccess().getCullfaceKeyword_8());
                      		
                    }

                    }
                    break;
                case 10 :
                    // InternalMcmodel.g:18653:3: kw= 'custom_model_data'
                    {
                    kw=(Token)match(input,73,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getKeywordAccess().getCustom_model_dataKeyword_9());
                      		
                    }

                    }
                    break;
                case 11 :
                    // InternalMcmodel.g:18659:3: kw= 'damage'
                    {
                    kw=(Token)match(input,66,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getKeywordAccess().getDamageKeyword_10());
                      		
                    }

                    }
                    break;
                case 12 :
                    // InternalMcmodel.g:18665:3: kw= 'damaged'
                    {
                    kw=(Token)match(input,67,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getKeywordAccess().getDamagedKeyword_11());
                      		
                    }

                    }
                    break;
                case 13 :
                    // InternalMcmodel.g:18671:3: kw= 'default'
                    {
                    kw=(Token)match(input,34,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getKeywordAccess().getDefaultKeyword_12());
                      		
                    }

                    }
                    break;
                case 14 :
                    // InternalMcmodel.g:18677:3: kw= 'display'
                    {
                    kw=(Token)match(input,22,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getKeywordAccess().getDisplayKeyword_13());
                      		
                    }

                    }
                    break;
                case 15 :
                    // InternalMcmodel.g:18683:3: kw= 'down'
                    {
                    kw=(Token)match(input,80,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getKeywordAccess().getDownKeyword_14());
                      		
                    }

                    }
                    break;
                case 16 :
                    // InternalMcmodel.g:18689:3: kw= 'east'
                    {
                    kw=(Token)match(input,81,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getKeywordAccess().getEastKeyword_15());
                      		
                    }

                    }
                    break;
                case 17 :
                    // InternalMcmodel.g:18695:3: kw= 'elements'
                    {
                    kw=(Token)match(input,26,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getKeywordAccess().getElementsKeyword_16());
                      		
                    }

                    }
                    break;
                case 18 :
                    // InternalMcmodel.g:18701:3: kw= 'faces'
                    {
                    kw=(Token)match(input,33,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getKeywordAccess().getFacesKeyword_17());
                      		
                    }

                    }
                    break;
                case 19 :
                    // InternalMcmodel.g:18707:3: kw= 'false'
                    {
                    kw=(Token)match(input,21,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getKeywordAccess().getFalseKeyword_18());
                      		
                    }

                    }
                    break;
                case 20 :
                    // InternalMcmodel.g:18713:3: kw= 'firstperson_lefthand'
                    {
                    kw=(Token)match(input,49,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getKeywordAccess().getFirstperson_lefthandKeyword_19());
                      		
                    }

                    }
                    break;
                case 21 :
                    // InternalMcmodel.g:18719:3: kw= 'firstperson_righthand'
                    {
                    kw=(Token)match(input,48,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getKeywordAccess().getFirstperson_righthandKeyword_20());
                      		
                    }

                    }
                    break;
                case 22 :
                    // InternalMcmodel.g:18725:3: kw= 'fixed'
                    {
                    kw=(Token)match(input,53,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getKeywordAccess().getFixedKeyword_21());
                      		
                    }

                    }
                    break;
                case 23 :
                    // InternalMcmodel.g:18731:3: kw= 'from'
                    {
                    kw=(Token)match(input,30,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getKeywordAccess().getFromKeyword_22());
                      		
                    }

                    }
                    break;
                case 24 :
                    // InternalMcmodel.g:18737:3: kw= 'front'
                    {
                    kw=(Token)match(input,82,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getKeywordAccess().getFrontKeyword_23());
                      		
                    }

                    }
                    break;
                case 25 :
                    // InternalMcmodel.g:18743:3: kw= 'ground'
                    {
                    kw=(Token)match(input,52,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getKeywordAccess().getGroundKeyword_24());
                      		
                    }

                    }
                    break;
                case 26 :
                    // InternalMcmodel.g:18749:3: kw= 'gui'
                    {
                    kw=(Token)match(input,50,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getKeywordAccess().getGuiKeyword_25());
                      		
                    }

                    }
                    break;
                case 27 :
                    // InternalMcmodel.g:18755:3: kw= 'gui_light'
                    {
                    kw=(Token)match(input,27,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getKeywordAccess().getGui_lightKeyword_26());
                      		
                    }

                    }
                    break;
                case 28 :
                    // InternalMcmodel.g:18761:3: kw= 'head'
                    {
                    kw=(Token)match(input,51,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getKeywordAccess().getHeadKeyword_27());
                      		
                    }

                    }
                    break;
                case 29 :
                    // InternalMcmodel.g:18767:3: kw= 'lefthanded'
                    {
                    kw=(Token)match(input,68,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getKeywordAccess().getLefthandedKeyword_28());
                      		
                    }

                    }
                    break;
                case 30 :
                    // InternalMcmodel.g:18773:3: kw= 'north'
                    {
                    kw=(Token)match(input,83,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getKeywordAccess().getNorthKeyword_29());
                      		
                    }

                    }
                    break;
                case 31 :
                    // InternalMcmodel.g:18779:3: kw= 'null'
                    {
                    kw=(Token)match(input,77,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getKeywordAccess().getNullKeyword_30());
                      		
                    }

                    }
                    break;
                case 32 :
                    // InternalMcmodel.g:18785:3: kw= 'origin'
                    {
                    kw=(Token)match(input,36,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getKeywordAccess().getOriginKeyword_31());
                      		
                    }

                    }
                    break;
                case 33 :
                    // InternalMcmodel.g:18791:3: kw= 'overrides'
                    {
                    kw=(Token)match(input,28,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getKeywordAccess().getOverridesKeyword_32());
                      		
                    }

                    }
                    break;
                case 34 :
                    // InternalMcmodel.g:18797:3: kw= 'parent'
                    {
                    kw=(Token)match(input,17,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getKeywordAccess().getParentKeyword_33());
                      		
                    }

                    }
                    break;
                case 35 :
                    // InternalMcmodel.g:18803:3: kw= 'pull'
                    {
                    kw=(Token)match(input,69,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getKeywordAccess().getPullKeyword_34());
                      		
                    }

                    }
                    break;
                case 36 :
                    // InternalMcmodel.g:18809:3: kw= 'pulling'
                    {
                    kw=(Token)match(input,70,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getKeywordAccess().getPullingKeyword_35());
                      		
                    }

                    }
                    break;
                case 37 :
                    // InternalMcmodel.g:18815:3: kw= 'rescale'
                    {
                    kw=(Token)match(input,39,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getKeywordAccess().getRescaleKeyword_36());
                      		
                    }

                    }
                    break;
                case 38 :
                    // InternalMcmodel.g:18821:3: kw= 'rotation'
                    {
                    kw=(Token)match(input,32,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getKeywordAccess().getRotationKeyword_37());
                      		
                    }

                    }
                    break;
                case 39 :
                    // InternalMcmodel.g:18827:3: kw= 'scale'
                    {
                    kw=(Token)match(input,55,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getKeywordAccess().getScaleKeyword_38());
                      		
                    }

                    }
                    break;
                case 40 :
                    // InternalMcmodel.g:18833:3: kw= 'shade'
                    {
                    kw=(Token)match(input,35,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getKeywordAccess().getShadeKeyword_39());
                      		
                    }

                    }
                    break;
                case 41 :
                    // InternalMcmodel.g:18839:3: kw= 'side'
                    {
                    kw=(Token)match(input,84,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getKeywordAccess().getSideKeyword_40());
                      		
                    }

                    }
                    break;
                case 42 :
                    // InternalMcmodel.g:18845:3: kw= 'south'
                    {
                    kw=(Token)match(input,85,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getKeywordAccess().getSouthKeyword_41());
                      		
                    }

                    }
                    break;
                case 43 :
                    // InternalMcmodel.g:18851:3: kw= 'textures'
                    {
                    kw=(Token)match(input,23,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getKeywordAccess().getTexturesKeyword_42());
                      		
                    }

                    }
                    break;
                case 44 :
                    // InternalMcmodel.g:18857:3: kw= 'thirdperson_lefthand'
                    {
                    kw=(Token)match(input,47,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getKeywordAccess().getThirdperson_lefthandKeyword_43());
                      		
                    }

                    }
                    break;
                case 45 :
                    // InternalMcmodel.g:18863:3: kw= 'thirdperson_righthand'
                    {
                    kw=(Token)match(input,46,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getKeywordAccess().getThirdperson_righthandKeyword_44());
                      		
                    }

                    }
                    break;
                case 46 :
                    // InternalMcmodel.g:18869:3: kw= 'throwing'
                    {
                    kw=(Token)match(input,71,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getKeywordAccess().getThrowingKeyword_45());
                      		
                    }

                    }
                    break;
                case 47 :
                    // InternalMcmodel.g:18875:3: kw= 'time'
                    {
                    kw=(Token)match(input,72,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getKeywordAccess().getTimeKeyword_46());
                      		
                    }

                    }
                    break;
                case 48 :
                    // InternalMcmodel.g:18881:3: kw= 'tintindex'
                    {
                    kw=(Token)match(input,44,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getKeywordAccess().getTintindexKeyword_47());
                      		
                    }

                    }
                    break;
                case 49 :
                    // InternalMcmodel.g:18887:3: kw= 'translation'
                    {
                    kw=(Token)match(input,54,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getKeywordAccess().getTranslationKeyword_48());
                      		
                    }

                    }
                    break;
                case 50 :
                    // InternalMcmodel.g:18893:3: kw= 'true'
                    {
                    kw=(Token)match(input,20,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getKeywordAccess().getTrueKeyword_49());
                      		
                    }

                    }
                    break;
                case 51 :
                    // InternalMcmodel.g:18899:3: kw= 'west'
                    {
                    kw=(Token)match(input,86,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getKeywordAccess().getWestKeyword_50());
                      		
                    }

                    }
                    break;
                case 52 :
                    // InternalMcmodel.g:18905:3: kw= 'when'
                    {
                    kw=(Token)match(input,57,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getKeywordAccess().getWhenKeyword_51());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleKeyword"


    // $ANTLR start "entryRuleLONG"
    // InternalMcmodel.g:18914:1: entryRuleLONG returns [String current=null] : iv_ruleLONG= ruleLONG EOF ;
    public final String entryRuleLONG() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleLONG = null;


        try {
            // InternalMcmodel.g:18914:44: (iv_ruleLONG= ruleLONG EOF )
            // InternalMcmodel.g:18915:2: iv_ruleLONG= ruleLONG EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLONGRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleLONG=ruleLONG();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLONG.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLONG"


    // $ANTLR start "ruleLONG"
    // InternalMcmodel.g:18921:1: ruleLONG returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_ULONG_0= RULE_ULONG | this_SLONG_1= RULE_SLONG ) ;
    public final AntlrDatatypeRuleToken ruleLONG() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_ULONG_0=null;
        Token this_SLONG_1=null;


        	enterRule();

        try {
            // InternalMcmodel.g:18927:2: ( (this_ULONG_0= RULE_ULONG | this_SLONG_1= RULE_SLONG ) )
            // InternalMcmodel.g:18928:2: (this_ULONG_0= RULE_ULONG | this_SLONG_1= RULE_SLONG )
            {
            // InternalMcmodel.g:18928:2: (this_ULONG_0= RULE_ULONG | this_SLONG_1= RULE_SLONG )
            int alt582=2;
            int LA582_0 = input.LA(1);

            if ( (LA582_0==RULE_ULONG) ) {
                alt582=1;
            }
            else if ( (LA582_0==RULE_SLONG) ) {
                alt582=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 582, 0, input);

                throw nvae;
            }
            switch (alt582) {
                case 1 :
                    // InternalMcmodel.g:18929:3: this_ULONG_0= RULE_ULONG
                    {
                    this_ULONG_0=(Token)match(input,RULE_ULONG,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_ULONG_0);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newLeafNode(this_ULONG_0, grammarAccess.getLONGAccess().getULONGTerminalRuleCall_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalMcmodel.g:18937:3: this_SLONG_1= RULE_SLONG
                    {
                    this_SLONG_1=(Token)match(input,RULE_SLONG,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_SLONG_1);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newLeafNode(this_SLONG_1, grammarAccess.getLONGAccess().getSLONGTerminalRuleCall_1());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLONG"


    // $ANTLR start "entryRuleNUMBER"
    // InternalMcmodel.g:18948:1: entryRuleNUMBER returns [String current=null] : iv_ruleNUMBER= ruleNUMBER EOF ;
    public final String entryRuleNUMBER() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleNUMBER = null;


        try {
            // InternalMcmodel.g:18948:46: (iv_ruleNUMBER= ruleNUMBER EOF )
            // InternalMcmodel.g:18949:2: iv_ruleNUMBER= ruleNUMBER EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNUMBERRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleNUMBER=ruleNUMBER();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNUMBER.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleNUMBER"


    // $ANTLR start "ruleNUMBER"
    // InternalMcmodel.g:18955:1: ruleNUMBER returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_LONG_0= ruleLONG | this_DOUBLE_1= RULE_DOUBLE ) ;
    public final AntlrDatatypeRuleToken ruleNUMBER() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_DOUBLE_1=null;
        AntlrDatatypeRuleToken this_LONG_0 = null;



        	enterRule();

        try {
            // InternalMcmodel.g:18961:2: ( (this_LONG_0= ruleLONG | this_DOUBLE_1= RULE_DOUBLE ) )
            // InternalMcmodel.g:18962:2: (this_LONG_0= ruleLONG | this_DOUBLE_1= RULE_DOUBLE )
            {
            // InternalMcmodel.g:18962:2: (this_LONG_0= ruleLONG | this_DOUBLE_1= RULE_DOUBLE )
            int alt583=2;
            int LA583_0 = input.LA(1);

            if ( ((LA583_0>=RULE_ULONG && LA583_0<=RULE_SLONG)) ) {
                alt583=1;
            }
            else if ( (LA583_0==RULE_DOUBLE) ) {
                alt583=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 583, 0, input);

                throw nvae;
            }
            switch (alt583) {
                case 1 :
                    // InternalMcmodel.g:18963:3: this_LONG_0= ruleLONG
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getNUMBERAccess().getLONGParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_LONG_0=ruleLONG();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_LONG_0);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalMcmodel.g:18974:3: this_DOUBLE_1= RULE_DOUBLE
                    {
                    this_DOUBLE_1=(Token)match(input,RULE_DOUBLE,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_DOUBLE_1);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newLeafNode(this_DOUBLE_1, grammarAccess.getNUMBERAccess().getDOUBLETerminalRuleCall_1());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNUMBER"


    // $ANTLR start "ruleEnumGuiLight"
    // InternalMcmodel.g:18985:1: ruleEnumGuiLight returns [Enumerator current=null] : ( (enumLiteral_0= 'front' ) | (enumLiteral_1= 'side' ) ) ;
    public final Enumerator ruleEnumGuiLight() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;
        Token enumLiteral_1=null;


        	enterRule();

        try {
            // InternalMcmodel.g:18991:2: ( ( (enumLiteral_0= 'front' ) | (enumLiteral_1= 'side' ) ) )
            // InternalMcmodel.g:18992:2: ( (enumLiteral_0= 'front' ) | (enumLiteral_1= 'side' ) )
            {
            // InternalMcmodel.g:18992:2: ( (enumLiteral_0= 'front' ) | (enumLiteral_1= 'side' ) )
            int alt584=2;
            int LA584_0 = input.LA(1);

            if ( (LA584_0==82) ) {
                alt584=1;
            }
            else if ( (LA584_0==84) ) {
                alt584=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 584, 0, input);

                throw nvae;
            }
            switch (alt584) {
                case 1 :
                    // InternalMcmodel.g:18993:3: (enumLiteral_0= 'front' )
                    {
                    // InternalMcmodel.g:18993:3: (enumLiteral_0= 'front' )
                    // InternalMcmodel.g:18994:4: enumLiteral_0= 'front'
                    {
                    enumLiteral_0=(Token)match(input,82,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getEnumGuiLightAccess().getFRONTEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_0, grammarAccess.getEnumGuiLightAccess().getFRONTEnumLiteralDeclaration_0());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalMcmodel.g:19001:3: (enumLiteral_1= 'side' )
                    {
                    // InternalMcmodel.g:19001:3: (enumLiteral_1= 'side' )
                    // InternalMcmodel.g:19002:4: enumLiteral_1= 'side'
                    {
                    enumLiteral_1=(Token)match(input,84,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getEnumGuiLightAccess().getSIDEEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_1, grammarAccess.getEnumGuiLightAccess().getSIDEEnumLiteralDeclaration_1());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEnumGuiLight"


    // $ANTLR start "ruleEnumAxis"
    // InternalMcmodel.g:19012:1: ruleEnumAxis returns [Enumerator current=null] : ( (enumLiteral_0= 'x' ) | (enumLiteral_1= 'y' ) | (enumLiteral_2= 'z' ) ) ;
    public final Enumerator ruleEnumAxis() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;
        Token enumLiteral_1=null;
        Token enumLiteral_2=null;


        	enterRule();

        try {
            // InternalMcmodel.g:19018:2: ( ( (enumLiteral_0= 'x' ) | (enumLiteral_1= 'y' ) | (enumLiteral_2= 'z' ) ) )
            // InternalMcmodel.g:19019:2: ( (enumLiteral_0= 'x' ) | (enumLiteral_1= 'y' ) | (enumLiteral_2= 'z' ) )
            {
            // InternalMcmodel.g:19019:2: ( (enumLiteral_0= 'x' ) | (enumLiteral_1= 'y' ) | (enumLiteral_2= 'z' ) )
            int alt585=3;
            switch ( input.LA(1) ) {
            case 87:
                {
                alt585=1;
                }
                break;
            case 88:
                {
                alt585=2;
                }
                break;
            case 89:
                {
                alt585=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 585, 0, input);

                throw nvae;
            }

            switch (alt585) {
                case 1 :
                    // InternalMcmodel.g:19020:3: (enumLiteral_0= 'x' )
                    {
                    // InternalMcmodel.g:19020:3: (enumLiteral_0= 'x' )
                    // InternalMcmodel.g:19021:4: enumLiteral_0= 'x'
                    {
                    enumLiteral_0=(Token)match(input,87,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getEnumAxisAccess().getXEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_0, grammarAccess.getEnumAxisAccess().getXEnumLiteralDeclaration_0());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalMcmodel.g:19028:3: (enumLiteral_1= 'y' )
                    {
                    // InternalMcmodel.g:19028:3: (enumLiteral_1= 'y' )
                    // InternalMcmodel.g:19029:4: enumLiteral_1= 'y'
                    {
                    enumLiteral_1=(Token)match(input,88,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getEnumAxisAccess().getYEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_1, grammarAccess.getEnumAxisAccess().getYEnumLiteralDeclaration_1());
                      			
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalMcmodel.g:19036:3: (enumLiteral_2= 'z' )
                    {
                    // InternalMcmodel.g:19036:3: (enumLiteral_2= 'z' )
                    // InternalMcmodel.g:19037:4: enumLiteral_2= 'z'
                    {
                    enumLiteral_2=(Token)match(input,89,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getEnumAxisAccess().getZEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_2, grammarAccess.getEnumAxisAccess().getZEnumLiteralDeclaration_2());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEnumAxis"


    // $ANTLR start "ruleEnumFace"
    // InternalMcmodel.g:19047:1: ruleEnumFace returns [Enumerator current=null] : ( (enumLiteral_0= 'north' ) | (enumLiteral_1= 'south' ) | (enumLiteral_2= 'east' ) | (enumLiteral_3= 'west' ) | (enumLiteral_4= 'up' ) | (enumLiteral_5= 'down' ) ) ;
    public final Enumerator ruleEnumFace() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;
        Token enumLiteral_1=null;
        Token enumLiteral_2=null;
        Token enumLiteral_3=null;
        Token enumLiteral_4=null;
        Token enumLiteral_5=null;


        	enterRule();

        try {
            // InternalMcmodel.g:19053:2: ( ( (enumLiteral_0= 'north' ) | (enumLiteral_1= 'south' ) | (enumLiteral_2= 'east' ) | (enumLiteral_3= 'west' ) | (enumLiteral_4= 'up' ) | (enumLiteral_5= 'down' ) ) )
            // InternalMcmodel.g:19054:2: ( (enumLiteral_0= 'north' ) | (enumLiteral_1= 'south' ) | (enumLiteral_2= 'east' ) | (enumLiteral_3= 'west' ) | (enumLiteral_4= 'up' ) | (enumLiteral_5= 'down' ) )
            {
            // InternalMcmodel.g:19054:2: ( (enumLiteral_0= 'north' ) | (enumLiteral_1= 'south' ) | (enumLiteral_2= 'east' ) | (enumLiteral_3= 'west' ) | (enumLiteral_4= 'up' ) | (enumLiteral_5= 'down' ) )
            int alt586=6;
            switch ( input.LA(1) ) {
            case 83:
                {
                alt586=1;
                }
                break;
            case 85:
                {
                alt586=2;
                }
                break;
            case 81:
                {
                alt586=3;
                }
                break;
            case 86:
                {
                alt586=4;
                }
                break;
            case 90:
                {
                alt586=5;
                }
                break;
            case 80:
                {
                alt586=6;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 586, 0, input);

                throw nvae;
            }

            switch (alt586) {
                case 1 :
                    // InternalMcmodel.g:19055:3: (enumLiteral_0= 'north' )
                    {
                    // InternalMcmodel.g:19055:3: (enumLiteral_0= 'north' )
                    // InternalMcmodel.g:19056:4: enumLiteral_0= 'north'
                    {
                    enumLiteral_0=(Token)match(input,83,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getEnumFaceAccess().getNORTHEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_0, grammarAccess.getEnumFaceAccess().getNORTHEnumLiteralDeclaration_0());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalMcmodel.g:19063:3: (enumLiteral_1= 'south' )
                    {
                    // InternalMcmodel.g:19063:3: (enumLiteral_1= 'south' )
                    // InternalMcmodel.g:19064:4: enumLiteral_1= 'south'
                    {
                    enumLiteral_1=(Token)match(input,85,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getEnumFaceAccess().getSOUTHEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_1, grammarAccess.getEnumFaceAccess().getSOUTHEnumLiteralDeclaration_1());
                      			
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalMcmodel.g:19071:3: (enumLiteral_2= 'east' )
                    {
                    // InternalMcmodel.g:19071:3: (enumLiteral_2= 'east' )
                    // InternalMcmodel.g:19072:4: enumLiteral_2= 'east'
                    {
                    enumLiteral_2=(Token)match(input,81,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getEnumFaceAccess().getEASTEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_2, grammarAccess.getEnumFaceAccess().getEASTEnumLiteralDeclaration_2());
                      			
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalMcmodel.g:19079:3: (enumLiteral_3= 'west' )
                    {
                    // InternalMcmodel.g:19079:3: (enumLiteral_3= 'west' )
                    // InternalMcmodel.g:19080:4: enumLiteral_3= 'west'
                    {
                    enumLiteral_3=(Token)match(input,86,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getEnumFaceAccess().getWESTEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_3, grammarAccess.getEnumFaceAccess().getWESTEnumLiteralDeclaration_3());
                      			
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalMcmodel.g:19087:3: (enumLiteral_4= 'up' )
                    {
                    // InternalMcmodel.g:19087:3: (enumLiteral_4= 'up' )
                    // InternalMcmodel.g:19088:4: enumLiteral_4= 'up'
                    {
                    enumLiteral_4=(Token)match(input,90,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getEnumFaceAccess().getUPEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_4, grammarAccess.getEnumFaceAccess().getUPEnumLiteralDeclaration_4());
                      			
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalMcmodel.g:19095:3: (enumLiteral_5= 'down' )
                    {
                    // InternalMcmodel.g:19095:3: (enumLiteral_5= 'down' )
                    // InternalMcmodel.g:19096:4: enumLiteral_5= 'down'
                    {
                    enumLiteral_5=(Token)match(input,80,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getEnumFaceAccess().getDOWNEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_5, grammarAccess.getEnumFaceAccess().getDOWNEnumLiteralDeclaration_5());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEnumFace"

    // $ANTLR start synpred1_InternalMcmodel
    public final void synpred1_InternalMcmodel_fragment() throws RecognitionException {   
        // InternalMcmodel.g:524:4: ( ruleNamespacedLocation )
        // InternalMcmodel.g:524:5: ruleNamespacedLocation
        {
        pushFollow(FOLLOW_2);
        ruleNamespacedLocation();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred1_InternalMcmodel

    // $ANTLR start synpred2_InternalMcmodel
    public final void synpred2_InternalMcmodel_fragment() throws RecognitionException {   
        // InternalMcmodel.g:18437:4: ( ':' )
        // InternalMcmodel.g:18437:5: ':'
        {
        match(input,74,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred2_InternalMcmodel

    // $ANTLR start synpred3_InternalMcmodel
    public final void synpred3_InternalMcmodel_fragment() throws RecognitionException {   
        // InternalMcmodel.g:18457:4: ( '/' )
        // InternalMcmodel.g:18457:5: '/'
        {
        match(input,78,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred3_InternalMcmodel

    // Delegated rules

    public final boolean synpred1_InternalMcmodel() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred1_InternalMcmodel_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred2_InternalMcmodel() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred2_InternalMcmodel_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred3_InternalMcmodel() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred3_InternalMcmodel_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }


    protected DFA7 dfa7 = new DFA7(this);
    protected DFA18 dfa18 = new DFA18(this);
    protected DFA21 dfa21 = new DFA21(this);
    protected DFA63 dfa63 = new DFA63(this);
    protected DFA105 dfa105 = new DFA105(this);
    protected DFA147 dfa147 = new DFA147(this);
    protected DFA189 dfa189 = new DFA189(this);
    protected DFA231 dfa231 = new DFA231(this);
    protected DFA273 dfa273 = new DFA273(this);
    protected DFA315 dfa315 = new DFA315(this);
    protected DFA357 dfa357 = new DFA357(this);
    protected DFA399 dfa399 = new DFA399(this);
    protected DFA441 dfa441 = new DFA441(this);
    protected DFA483 dfa483 = new DFA483(this);
    protected DFA525 dfa525 = new DFA525(this);
    protected DFA567 dfa567 = new DFA567(this);
    static final String dfa_1s = "\67\uffff";
    static final String dfa_2s = "\1\10\66\uffff";
    static final String dfa_3s = "\1\126\66\uffff";
    static final String dfa_4s = "\1\uffff\65\1\1\2";
    static final String dfa_5s = "\1\0\66\uffff}>";
    static final String[] dfa_6s = {
            "\1\1\10\uffff\1\43\1\uffff\1\2\1\63\1\24\1\17\1\54\2\uffff\1\22\1\34\1\42\1\66\1\30\1\uffff\1\47\1\23\1\16\1\51\1\41\1\5\1\3\1\46\3\uffff\1\12\1\61\1\uffff\1\56\1\55\1\26\1\25\1\33\1\35\1\32\1\27\1\62\1\50\1\4\1\65\3\uffff\1\6\1\uffff\1\7\1\10\1\11\1\14\1\15\1\36\1\44\1\45\1\57\1\60\1\13\3\uffff\1\40\2\uffff\1\20\1\21\1\31\1\37\1\52\1\53\1\64",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_1 = DFA.unpackEncodedString(dfa_1s);
    static final char[] dfa_2 = DFA.unpackEncodedStringToUnsignedChars(dfa_2s);
    static final char[] dfa_3 = DFA.unpackEncodedStringToUnsignedChars(dfa_3s);
    static final short[] dfa_4 = DFA.unpackEncodedString(dfa_4s);
    static final short[] dfa_5 = DFA.unpackEncodedString(dfa_5s);
    static final short[][] dfa_6 = unpackEncodedStringArray(dfa_6s);

    class DFA7 extends DFA {

        public DFA7(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 7;
            this.eot = dfa_1;
            this.eof = dfa_1;
            this.min = dfa_2;
            this.max = dfa_3;
            this.accept = dfa_4;
            this.special = dfa_5;
            this.transition = dfa_6;
        }
        public String getDescription() {
            return "522:2: ( ( ( ruleNamespacedLocation )=>this_NamespacedLocation_0= ruleNamespacedLocation ) | this_ReferenceTextureValue_1= ruleReferenceTextureValue )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA7_0 = input.LA(1);

                         
                        int index7_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA7_0==RULE_ID) && (synpred1_InternalMcmodel())) {s = 1;}

                        else if ( (LA7_0==19) && (synpred1_InternalMcmodel())) {s = 2;}

                        else if ( (LA7_0==38) && (synpred1_InternalMcmodel())) {s = 3;}

                        else if ( (LA7_0==56) && (synpred1_InternalMcmodel())) {s = 4;}

                        else if ( (LA7_0==37) && (synpred1_InternalMcmodel())) {s = 5;}

                        else if ( (LA7_0==61) && (synpred1_InternalMcmodel())) {s = 6;}

                        else if ( (LA7_0==63) && (synpred1_InternalMcmodel())) {s = 7;}

                        else if ( (LA7_0==64) && (synpred1_InternalMcmodel())) {s = 8;}

                        else if ( (LA7_0==65) && (synpred1_InternalMcmodel())) {s = 9;}

                        else if ( (LA7_0==43) && (synpred1_InternalMcmodel())) {s = 10;}

                        else if ( (LA7_0==73) && (synpred1_InternalMcmodel())) {s = 11;}

                        else if ( (LA7_0==66) && (synpred1_InternalMcmodel())) {s = 12;}

                        else if ( (LA7_0==67) && (synpred1_InternalMcmodel())) {s = 13;}

                        else if ( (LA7_0==34) && (synpred1_InternalMcmodel())) {s = 14;}

                        else if ( (LA7_0==22) && (synpred1_InternalMcmodel())) {s = 15;}

                        else if ( (LA7_0==80) && (synpred1_InternalMcmodel())) {s = 16;}

                        else if ( (LA7_0==81) && (synpred1_InternalMcmodel())) {s = 17;}

                        else if ( (LA7_0==26) && (synpred1_InternalMcmodel())) {s = 18;}

                        else if ( (LA7_0==33) && (synpred1_InternalMcmodel())) {s = 19;}

                        else if ( (LA7_0==21) && (synpred1_InternalMcmodel())) {s = 20;}

                        else if ( (LA7_0==49) && (synpred1_InternalMcmodel())) {s = 21;}

                        else if ( (LA7_0==48) && (synpred1_InternalMcmodel())) {s = 22;}

                        else if ( (LA7_0==53) && (synpred1_InternalMcmodel())) {s = 23;}

                        else if ( (LA7_0==30) && (synpred1_InternalMcmodel())) {s = 24;}

                        else if ( (LA7_0==82) && (synpred1_InternalMcmodel())) {s = 25;}

                        else if ( (LA7_0==52) && (synpred1_InternalMcmodel())) {s = 26;}

                        else if ( (LA7_0==50) && (synpred1_InternalMcmodel())) {s = 27;}

                        else if ( (LA7_0==27) && (synpred1_InternalMcmodel())) {s = 28;}

                        else if ( (LA7_0==51) && (synpred1_InternalMcmodel())) {s = 29;}

                        else if ( (LA7_0==68) && (synpred1_InternalMcmodel())) {s = 30;}

                        else if ( (LA7_0==83) && (synpred1_InternalMcmodel())) {s = 31;}

                        else if ( (LA7_0==77) && (synpred1_InternalMcmodel())) {s = 32;}

                        else if ( (LA7_0==36) && (synpred1_InternalMcmodel())) {s = 33;}

                        else if ( (LA7_0==28) && (synpred1_InternalMcmodel())) {s = 34;}

                        else if ( (LA7_0==17) && (synpred1_InternalMcmodel())) {s = 35;}

                        else if ( (LA7_0==69) && (synpred1_InternalMcmodel())) {s = 36;}

                        else if ( (LA7_0==70) && (synpred1_InternalMcmodel())) {s = 37;}

                        else if ( (LA7_0==39) && (synpred1_InternalMcmodel())) {s = 38;}

                        else if ( (LA7_0==32) && (synpred1_InternalMcmodel())) {s = 39;}

                        else if ( (LA7_0==55) && (synpred1_InternalMcmodel())) {s = 40;}

                        else if ( (LA7_0==35) && (synpred1_InternalMcmodel())) {s = 41;}

                        else if ( (LA7_0==84) && (synpred1_InternalMcmodel())) {s = 42;}

                        else if ( (LA7_0==85) && (synpred1_InternalMcmodel())) {s = 43;}

                        else if ( (LA7_0==23) && (synpred1_InternalMcmodel())) {s = 44;}

                        else if ( (LA7_0==47) && (synpred1_InternalMcmodel())) {s = 45;}

                        else if ( (LA7_0==46) && (synpred1_InternalMcmodel())) {s = 46;}

                        else if ( (LA7_0==71) && (synpred1_InternalMcmodel())) {s = 47;}

                        else if ( (LA7_0==72) && (synpred1_InternalMcmodel())) {s = 48;}

                        else if ( (LA7_0==44) && (synpred1_InternalMcmodel())) {s = 49;}

                        else if ( (LA7_0==54) && (synpred1_InternalMcmodel())) {s = 50;}

                        else if ( (LA7_0==20) && (synpred1_InternalMcmodel())) {s = 51;}

                        else if ( (LA7_0==86) && (synpred1_InternalMcmodel())) {s = 52;}

                        else if ( (LA7_0==57) && (synpred1_InternalMcmodel())) {s = 53;}

                        else if ( (LA7_0==29) ) {s = 54;}

                         
                        input.seek(index7_0);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 7, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_7s = "\12\uffff";
    static final String dfa_8s = "\1\31\11\uffff";
    static final String dfa_9s = "\1\65\11\uffff";
    static final String dfa_10s = "\1\uffff\1\11\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10";
    static final String dfa_11s = "\1\0\11\uffff}>";
    static final String[] dfa_12s = {
            "\1\1\24\uffff\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_7 = DFA.unpackEncodedString(dfa_7s);
    static final char[] dfa_8 = DFA.unpackEncodedStringToUnsignedChars(dfa_8s);
    static final char[] dfa_9 = DFA.unpackEncodedStringToUnsignedChars(dfa_9s);
    static final short[] dfa_10 = DFA.unpackEncodedString(dfa_10s);
    static final short[] dfa_11 = DFA.unpackEncodedString(dfa_11s);
    static final short[][] dfa_12 = unpackEncodedStringArray(dfa_12s);

    class DFA18 extends DFA {

        public DFA18(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 18;
            this.eot = dfa_7;
            this.eof = dfa_7;
            this.min = dfa_8;
            this.max = dfa_9;
            this.accept = dfa_10;
            this.special = dfa_11;
            this.transition = dfa_12;
        }
        public String getDescription() {
            return "()* loopback of 1399:6: ( ({...}? => ( ({...}? => (otherlv_3= 'thirdperson_righthand' ( (lv_thirdperson_righthand_4_0= ruleMorph ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= 'thirdperson_lefthand' ( (lv_thirdperson_lefthand_6_0= ruleMorph ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= 'firstperson_righthand' ( (lv_firstperson_righthand_8_0= ruleMorph ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= 'firstperson_lefthand' ( (lv_firstperson_lefthand_10_0= ruleMorph ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= 'gui' ( (lv_gui_12_0= ruleMorph ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= 'head' ( (lv_head_14_0= ruleMorph ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= 'ground' ( (lv_ground_16_0= ruleMorph ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= 'fixed' ( (lv_fixed_18_0= ruleMorph ) ) ) ) ) ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA18_0 = input.LA(1);

                         
                        int index18_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA18_0==25) ) {s = 1;}

                        else if ( LA18_0 == 46 && getUnorderedGroupHelper().canSelect(grammarAccess.getDisplayAccess().getUnorderedGroup_2(), 0) ) {s = 2;}

                        else if ( LA18_0 == 47 && getUnorderedGroupHelper().canSelect(grammarAccess.getDisplayAccess().getUnorderedGroup_2(), 1) ) {s = 3;}

                        else if ( LA18_0 == 48 && getUnorderedGroupHelper().canSelect(grammarAccess.getDisplayAccess().getUnorderedGroup_2(), 2) ) {s = 4;}

                        else if ( LA18_0 == 49 && getUnorderedGroupHelper().canSelect(grammarAccess.getDisplayAccess().getUnorderedGroup_2(), 3) ) {s = 5;}

                        else if ( LA18_0 == 50 && getUnorderedGroupHelper().canSelect(grammarAccess.getDisplayAccess().getUnorderedGroup_2(), 4) ) {s = 6;}

                        else if ( LA18_0 == 51 && getUnorderedGroupHelper().canSelect(grammarAccess.getDisplayAccess().getUnorderedGroup_2(), 5) ) {s = 7;}

                        else if ( LA18_0 == 52 && getUnorderedGroupHelper().canSelect(grammarAccess.getDisplayAccess().getUnorderedGroup_2(), 6) ) {s = 8;}

                        else if ( LA18_0 == 53 && getUnorderedGroupHelper().canSelect(grammarAccess.getDisplayAccess().getUnorderedGroup_2(), 7) ) {s = 9;}

                         
                        input.seek(index18_0);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 18, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_13s = "\17\uffff";
    static final String dfa_14s = "\1\46\1\uffff\1\75\14\uffff";
    static final String dfa_15s = "\1\111\1\uffff\1\107\14\uffff";
    static final String dfa_16s = "\1\uffff\1\1\1\uffff\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15";
    static final String dfa_17s = "\17\uffff}>";
    static final String[] dfa_18s = {
            "\1\1\25\uffff\1\2\1\3\1\uffff\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16",
            "",
            "\1\3\1\uffff\1\4\1\5\2\uffff\1\10\1\11\1\uffff\1\13\1\14",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_13 = DFA.unpackEncodedString(dfa_13s);
    static final char[] dfa_14 = DFA.unpackEncodedStringToUnsignedChars(dfa_14s);
    static final char[] dfa_15 = DFA.unpackEncodedStringToUnsignedChars(dfa_15s);
    static final short[] dfa_16 = DFA.unpackEncodedString(dfa_16s);
    static final short[] dfa_17 = DFA.unpackEncodedString(dfa_17s);
    static final short[][] dfa_18 = unpackEncodedStringArray(dfa_18s);

    class DFA21 extends DFA {

        public DFA21(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 21;
            this.eot = dfa_13;
            this.eof = dfa_13;
            this.min = dfa_14;
            this.max = dfa_15;
            this.accept = dfa_16;
            this.special = dfa_17;
            this.transition = dfa_18;
        }
        public String getDescription() {
            return "1951:3: (this_OverridePredicate_1_2= ruleOverridePredicate_1 | this_OverridePredicate_2_3= ruleOverridePredicate_2 | this_OverridePredicate_3_4= ruleOverridePredicate_3 | this_OverridePredicate_4_5= ruleOverridePredicate_4 | this_OverridePredicate_5_6= ruleOverridePredicate_5 | this_OverridePredicate_6_7= ruleOverridePredicate_6 | this_OverridePredicate_7_8= ruleOverridePredicate_7 | this_OverridePredicate_8_9= ruleOverridePredicate_8 | this_OverridePredicate_9_10= ruleOverridePredicate_9 | this_OverridePredicate_10_11= ruleOverridePredicate_10 | this_OverridePredicate_11_12= ruleOverridePredicate_11 | this_OverridePredicate_12_13= ruleOverridePredicate_12 | this_OverridePredicate_13_14= ruleOverridePredicate_13 )";
        }
    }
    static final String dfa_19s = "\20\uffff";
    static final String dfa_20s = "\1\1\17\uffff";
    static final String dfa_21s = "\1\55\1\uffff\1\74\1\75\14\uffff";
    static final String dfa_22s = "\1\73\1\uffff\1\111\1\107\14\uffff";
    static final String dfa_23s = "\1\uffff\1\15\2\uffff\1\1\1\5\1\11\1\4\1\10\1\14\1\3\1\7\1\13\1\2\1\6\1\12";
    static final String dfa_24s = "\1\0\1\uffff\1\1\1\2\14\uffff}>";
    static final String[] dfa_25s = {
            "\1\1\15\uffff\1\2",
            "",
            "\1\3\1\4\1\uffff\1\15\1\12\1\7\1\5\1\16\1\13\1\10\1\6\1\17\1\14\1\11",
            "\1\4\1\uffff\1\15\1\12\2\uffff\1\16\1\13\1\uffff\1\6\1\17",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_19 = DFA.unpackEncodedString(dfa_19s);
    static final short[] dfa_20 = DFA.unpackEncodedString(dfa_20s);
    static final char[] dfa_21 = DFA.unpackEncodedStringToUnsignedChars(dfa_21s);
    static final char[] dfa_22 = DFA.unpackEncodedStringToUnsignedChars(dfa_22s);
    static final short[] dfa_23 = DFA.unpackEncodedString(dfa_23s);
    static final short[] dfa_24 = DFA.unpackEncodedString(dfa_24s);
    static final short[][] dfa_25 = unpackEncodedStringArray(dfa_25s);

    class DFA63 extends DFA {

        public DFA63(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 63;
            this.eot = dfa_19;
            this.eof = dfa_20;
            this.min = dfa_21;
            this.max = dfa_22;
            this.accept = dfa_23;
            this.special = dfa_24;
            this.transition = dfa_25;
        }
        public String getDescription() {
            return "()* loopback of 2141:6: ( ({...}? => ( ({...}? => (otherlv_5= '&' ( ( ( (lv_blockingDefined_6_0= '!' ) ) otherlv_7= 'blocking' ) | ( ( (lv_blockingDefined_8_0= 'blocking' ) ) ( (otherlv_9= '!=' ( ( (lv_blocking_10_0= 'false' ) ) | otherlv_11= 'true' ) ) | ( (otherlv_12= '=' | otherlv_13= '==' ) ( ( (lv_blocking_14_0= 'true' ) ) | otherlv_15= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= '&' ( ( ( (lv_brokenDefined_17_0= '!' ) ) otherlv_18= 'broken' ) | ( ( (lv_brokenDefined_19_0= 'broken' ) ) ( (otherlv_20= '!=' ( ( (lv_broken_21_0= 'false' ) ) | otherlv_22= 'true' ) ) | ( (otherlv_23= '=' | otherlv_24= '==' ) ( ( (lv_broken_25_0= 'true' ) ) | otherlv_26= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= '&' ( ( ( (lv_castDefined_28_0= '!' ) ) otherlv_29= 'cast' ) | ( ( (lv_castDefined_30_0= 'cast' ) ) ( (otherlv_31= '!=' ( ( (lv_cast_32_0= 'false' ) ) | otherlv_33= 'true' ) ) | ( (otherlv_34= '=' | otherlv_35= '==' ) ( ( (lv_cast_36_0= 'true' ) ) | otherlv_37= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_38= '&' ( (lv_cooldownDefined_39_0= 'cooldown' ) ) (otherlv_40= '=' | otherlv_41= '==' ) ( (lv_cooldown_42_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= '&' ( (lv_damageDefined_44_0= 'damage' ) ) (otherlv_45= '=' | otherlv_46= '==' ) ( (lv_damage_47_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_48= '&' ( ( ( (lv_damagedDefined_49_0= '!' ) ) otherlv_50= 'damaged' ) | ( ( (lv_damagedDefined_51_0= 'damaged' ) ) ( (otherlv_52= '!=' ( ( (lv_damaged_53_0= 'false' ) ) | otherlv_54= 'true' ) ) | ( (otherlv_55= '=' | otherlv_56= '==' ) ( ( (lv_damaged_57_0= 'true' ) ) | otherlv_58= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_59= '&' ( ( ( (lv_lefthandedDefined_60_0= '!' ) ) otherlv_61= 'lefthanded' ) | ( ( (lv_lefthandedDefined_62_0= 'lefthanded' ) ) ( (otherlv_63= '!=' ( ( (lv_lefthanded_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_lefthanded_68_0= 'true' ) ) | otherlv_69= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_70= '&' ( (lv_pullDefined_71_0= 'pull' ) ) (otherlv_72= '=' | otherlv_73= '==' ) ( (lv_pull_74_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_75= '&' ( ( ( (lv_pullingDefined_76_0= '!' ) ) otherlv_77= 'pulling' ) | ( ( (lv_pullingDefined_78_0= 'pulling' ) ) ( (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) ) | ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_86= '&' ( ( ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing' ) | ( ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_97= '&' ( (lv_timeDefined_98_0= 'time' ) ) (otherlv_99= '=' | otherlv_100= '==' ) ( (lv_time_101_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) ) ) ) ) ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA63_0 = input.LA(1);

                         
                        int index63_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA63_0==EOF||LA63_0==45) ) {s = 1;}

                        else if ( LA63_0 == 59 && ( getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_1Access().getUnorderedGroup_3(), 9) || getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_1Access().getUnorderedGroup_3(), 8) || getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_1Access().getUnorderedGroup_3(), 7) || getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_1Access().getUnorderedGroup_3(), 6) || getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_1Access().getUnorderedGroup_3(), 5) || getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_1Access().getUnorderedGroup_3(), 4) || getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_1Access().getUnorderedGroup_3(), 3) || getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_1Access().getUnorderedGroup_3(), 2) || getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_1Access().getUnorderedGroup_3(), 1) || getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_1Access().getUnorderedGroup_3(), 0) || getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_1Access().getUnorderedGroup_3(), 11) || getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_1Access().getUnorderedGroup_3(), 10) ) ) {s = 2;}

                         
                        input.seek(index63_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA63_2 = input.LA(1);

                         
                        int index63_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA63_2 == 60 && ( getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_1Access().getUnorderedGroup_3(), 9) || getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_1Access().getUnorderedGroup_3(), 8) || getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_1Access().getUnorderedGroup_3(), 6) || getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_1Access().getUnorderedGroup_3(), 5) || getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_1Access().getUnorderedGroup_3(), 2) || getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_1Access().getUnorderedGroup_3(), 1) || getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_1Access().getUnorderedGroup_3(), 0) ) ) {s = 3;}

                        else if ( LA63_2 == 61 && getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_1Access().getUnorderedGroup_3(), 0) ) {s = 4;}

                        else if ( LA63_2 == 66 && getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_1Access().getUnorderedGroup_3(), 4) ) {s = 5;}

                        else if ( LA63_2 == 70 && getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_1Access().getUnorderedGroup_3(), 8) ) {s = 6;}

                        else if ( LA63_2 == 65 && getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_1Access().getUnorderedGroup_3(), 3) ) {s = 7;}

                        else if ( LA63_2 == 69 && getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_1Access().getUnorderedGroup_3(), 7) ) {s = 8;}

                        else if ( LA63_2 == 73 && getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_1Access().getUnorderedGroup_3(), 11) ) {s = 9;}

                        else if ( LA63_2 == 64 && getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_1Access().getUnorderedGroup_3(), 2) ) {s = 10;}

                        else if ( LA63_2 == 68 && getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_1Access().getUnorderedGroup_3(), 6) ) {s = 11;}

                        else if ( LA63_2 == 72 && getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_1Access().getUnorderedGroup_3(), 10) ) {s = 12;}

                        else if ( LA63_2 == 63 && getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_1Access().getUnorderedGroup_3(), 1) ) {s = 13;}

                        else if ( LA63_2 == 67 && getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_1Access().getUnorderedGroup_3(), 5) ) {s = 14;}

                        else if ( LA63_2 == 71 && getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_1Access().getUnorderedGroup_3(), 9) ) {s = 15;}

                         
                        input.seek(index63_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA63_3 = input.LA(1);

                         
                        int index63_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA63_3 == 63 && getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_1Access().getUnorderedGroup_3(), 1) ) {s = 13;}

                        else if ( LA63_3 == 67 && getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_1Access().getUnorderedGroup_3(), 5) ) {s = 14;}

                        else if ( LA63_3 == 71 && getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_1Access().getUnorderedGroup_3(), 9) ) {s = 15;}

                        else if ( LA63_3 == 61 && getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_1Access().getUnorderedGroup_3(), 0) ) {s = 4;}

                        else if ( LA63_3 == 70 && getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_1Access().getUnorderedGroup_3(), 8) ) {s = 6;}

                        else if ( LA63_3 == 64 && getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_1Access().getUnorderedGroup_3(), 2) ) {s = 10;}

                        else if ( LA63_3 == 68 && getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_1Access().getUnorderedGroup_3(), 6) ) {s = 11;}

                         
                        input.seek(index63_3);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 63, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_26s = "\1\55\1\uffff\1\46\1\77\14\uffff";
    static final String dfa_27s = "\1\uffff\1\15\2\uffff\1\2\1\6\1\12\1\1\1\5\1\11\1\4\1\10\1\14\1\3\1\7\1\13";
    static final String dfa_28s = "\1\2\1\uffff\1\1\1\0\14\uffff}>";
    static final String[] dfa_29s = {
            "\1\1\15\uffff\1\2",
            "",
            "\1\7\25\uffff\1\3\2\uffff\1\4\1\15\1\12\1\10\1\5\1\16\1\13\1\11\1\6\1\17\1\14",
            "\1\4\1\15\2\uffff\1\5\1\16\1\uffff\1\11\1\6",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final char[] dfa_26 = DFA.unpackEncodedStringToUnsignedChars(dfa_26s);
    static final short[] dfa_27 = DFA.unpackEncodedString(dfa_27s);
    static final short[] dfa_28 = DFA.unpackEncodedString(dfa_28s);
    static final short[][] dfa_29 = unpackEncodedStringArray(dfa_29s);

    class DFA105 extends DFA {

        public DFA105(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 105;
            this.eot = dfa_19;
            this.eof = dfa_20;
            this.min = dfa_26;
            this.max = dfa_22;
            this.accept = dfa_27;
            this.special = dfa_28;
            this.transition = dfa_29;
        }
        public String getDescription() {
            return "()* loopback of 3394:6: ( ({...}? => ( ({...}? => (otherlv_11= '&' ( (lv_angleDefined_12_0= 'angle' ) ) (otherlv_13= '=' | otherlv_14= '==' ) ( (lv_angle_15_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= '&' ( ( ( (lv_brokenDefined_17_0= '!' ) ) otherlv_18= 'broken' ) | ( ( (lv_brokenDefined_19_0= 'broken' ) ) ( (otherlv_20= '!=' ( ( (lv_broken_21_0= 'false' ) ) | otherlv_22= 'true' ) ) | ( (otherlv_23= '=' | otherlv_24= '==' ) ( ( (lv_broken_25_0= 'true' ) ) | otherlv_26= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= '&' ( ( ( (lv_castDefined_28_0= '!' ) ) otherlv_29= 'cast' ) | ( ( (lv_castDefined_30_0= 'cast' ) ) ( (otherlv_31= '!=' ( ( (lv_cast_32_0= 'false' ) ) | otherlv_33= 'true' ) ) | ( (otherlv_34= '=' | otherlv_35= '==' ) ( ( (lv_cast_36_0= 'true' ) ) | otherlv_37= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_38= '&' ( (lv_cooldownDefined_39_0= 'cooldown' ) ) (otherlv_40= '=' | otherlv_41= '==' ) ( (lv_cooldown_42_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= '&' ( (lv_damageDefined_44_0= 'damage' ) ) (otherlv_45= '=' | otherlv_46= '==' ) ( (lv_damage_47_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_48= '&' ( ( ( (lv_damagedDefined_49_0= '!' ) ) otherlv_50= 'damaged' ) | ( ( (lv_damagedDefined_51_0= 'damaged' ) ) ( (otherlv_52= '!=' ( ( (lv_damaged_53_0= 'false' ) ) | otherlv_54= 'true' ) ) | ( (otherlv_55= '=' | otherlv_56= '==' ) ( ( (lv_damaged_57_0= 'true' ) ) | otherlv_58= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_59= '&' ( ( ( (lv_lefthandedDefined_60_0= '!' ) ) otherlv_61= 'lefthanded' ) | ( ( (lv_lefthandedDefined_62_0= 'lefthanded' ) ) ( (otherlv_63= '!=' ( ( (lv_lefthanded_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_lefthanded_68_0= 'true' ) ) | otherlv_69= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_70= '&' ( (lv_pullDefined_71_0= 'pull' ) ) (otherlv_72= '=' | otherlv_73= '==' ) ( (lv_pull_74_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_75= '&' ( ( ( (lv_pullingDefined_76_0= '!' ) ) otherlv_77= 'pulling' ) | ( ( (lv_pullingDefined_78_0= 'pulling' ) ) ( (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) ) | ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_86= '&' ( ( ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing' ) | ( ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_97= '&' ( (lv_timeDefined_98_0= 'time' ) ) (otherlv_99= '=' | otherlv_100= '==' ) ( (lv_time_101_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) ) ) ) ) ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA105_3 = input.LA(1);

                         
                        int index105_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA105_3 == 64 && getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_2Access().getUnorderedGroup_1(), 2) ) {s = 13;}

                        else if ( LA105_3 == 68 && getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_2Access().getUnorderedGroup_1(), 6) ) {s = 14;}

                        else if ( LA105_3 == 63 && getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_2Access().getUnorderedGroup_1(), 1) ) {s = 4;}

                        else if ( LA105_3 == 67 && getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_2Access().getUnorderedGroup_1(), 5) ) {s = 5;}

                        else if ( LA105_3 == 71 && getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_2Access().getUnorderedGroup_1(), 9) ) {s = 6;}

                        else if ( LA105_3 == 70 && getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_2Access().getUnorderedGroup_1(), 8) ) {s = 9;}

                         
                        input.seek(index105_3);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA105_2 = input.LA(1);

                         
                        int index105_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA105_2 == 60 && ( getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_2Access().getUnorderedGroup_1(), 1) || getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_2Access().getUnorderedGroup_1(), 5) || getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_2Access().getUnorderedGroup_1(), 2) || getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_2Access().getUnorderedGroup_1(), 8) || getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_2Access().getUnorderedGroup_1(), 9) || getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_2Access().getUnorderedGroup_1(), 6) ) ) {s = 3;}

                        else if ( LA105_2 == 63 && getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_2Access().getUnorderedGroup_1(), 1) ) {s = 4;}

                        else if ( LA105_2 == 67 && getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_2Access().getUnorderedGroup_1(), 5) ) {s = 5;}

                        else if ( LA105_2 == 71 && getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_2Access().getUnorderedGroup_1(), 9) ) {s = 6;}

                        else if ( LA105_2 == 38 && getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_2Access().getUnorderedGroup_1(), 0) ) {s = 7;}

                        else if ( LA105_2 == 66 && getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_2Access().getUnorderedGroup_1(), 4) ) {s = 8;}

                        else if ( LA105_2 == 70 && getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_2Access().getUnorderedGroup_1(), 8) ) {s = 9;}

                        else if ( LA105_2 == 65 && getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_2Access().getUnorderedGroup_1(), 3) ) {s = 10;}

                        else if ( LA105_2 == 69 && getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_2Access().getUnorderedGroup_1(), 7) ) {s = 11;}

                        else if ( LA105_2 == 73 && getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_2Access().getUnorderedGroup_1(), 11) ) {s = 12;}

                        else if ( LA105_2 == 64 && getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_2Access().getUnorderedGroup_1(), 2) ) {s = 13;}

                        else if ( LA105_2 == 68 && getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_2Access().getUnorderedGroup_1(), 6) ) {s = 14;}

                        else if ( LA105_2 == 72 && getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_2Access().getUnorderedGroup_1(), 10) ) {s = 15;}

                         
                        input.seek(index105_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA105_0 = input.LA(1);

                         
                        int index105_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA105_0==EOF||LA105_0==45) ) {s = 1;}

                        else if ( LA105_0 == 59 && ( getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_2Access().getUnorderedGroup_1(), 0) || getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_2Access().getUnorderedGroup_1(), 1) || getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_2Access().getUnorderedGroup_1(), 10) || getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_2Access().getUnorderedGroup_1(), 11) || getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_2Access().getUnorderedGroup_1(), 4) || getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_2Access().getUnorderedGroup_1(), 5) || getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_2Access().getUnorderedGroup_1(), 2) || getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_2Access().getUnorderedGroup_1(), 3) || getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_2Access().getUnorderedGroup_1(), 8) || getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_2Access().getUnorderedGroup_1(), 9) || getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_2Access().getUnorderedGroup_1(), 6) || getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_2Access().getUnorderedGroup_1(), 7) ) ) {s = 2;}

                         
                        input.seek(index105_0);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 105, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_30s = "\1\55\1\uffff\1\46\1\75\14\uffff";
    static final String[] dfa_31s = {
            "\1\1\15\uffff\1\2",
            "",
            "\1\7\25\uffff\1\3\1\4\2\uffff\1\15\1\12\1\10\1\5\1\16\1\13\1\11\1\6\1\17\1\14",
            "\1\4\2\uffff\1\15\2\uffff\1\5\1\16\1\uffff\1\11\1\6",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final char[] dfa_30 = DFA.unpackEncodedStringToUnsignedChars(dfa_30s);
    static final short[][] dfa_31 = unpackEncodedStringArray(dfa_31s);

    class DFA147 extends DFA {

        public DFA147(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 147;
            this.eot = dfa_19;
            this.eof = dfa_20;
            this.min = dfa_30;
            this.max = dfa_22;
            this.accept = dfa_27;
            this.special = dfa_24;
            this.transition = dfa_31;
        }
        public String getDescription() {
            return "()* loopback of 4587:6: ( ({...}? => ( ({...}? => (otherlv_11= '&' ( (lv_angleDefined_12_0= 'angle' ) ) (otherlv_13= '=' | otherlv_14= '==' ) ( (lv_angle_15_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= '&' ( ( ( (lv_blockingDefined_17_0= '!' ) ) otherlv_18= 'blocking' ) | ( ( (lv_blockingDefined_19_0= 'blocking' ) ) ( (otherlv_20= '!=' ( ( (lv_blocking_21_0= 'false' ) ) | otherlv_22= 'true' ) ) | ( (otherlv_23= '=' | otherlv_24= '==' ) ( ( (lv_blocking_25_0= 'true' ) ) | otherlv_26= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= '&' ( ( ( (lv_castDefined_28_0= '!' ) ) otherlv_29= 'cast' ) | ( ( (lv_castDefined_30_0= 'cast' ) ) ( (otherlv_31= '!=' ( ( (lv_cast_32_0= 'false' ) ) | otherlv_33= 'true' ) ) | ( (otherlv_34= '=' | otherlv_35= '==' ) ( ( (lv_cast_36_0= 'true' ) ) | otherlv_37= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_38= '&' ( (lv_cooldownDefined_39_0= 'cooldown' ) ) (otherlv_40= '=' | otherlv_41= '==' ) ( (lv_cooldown_42_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= '&' ( (lv_damageDefined_44_0= 'damage' ) ) (otherlv_45= '=' | otherlv_46= '==' ) ( (lv_damage_47_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_48= '&' ( ( ( (lv_damagedDefined_49_0= '!' ) ) otherlv_50= 'damaged' ) | ( ( (lv_damagedDefined_51_0= 'damaged' ) ) ( (otherlv_52= '!=' ( ( (lv_damaged_53_0= 'false' ) ) | otherlv_54= 'true' ) ) | ( (otherlv_55= '=' | otherlv_56= '==' ) ( ( (lv_damaged_57_0= 'true' ) ) | otherlv_58= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_59= '&' ( ( ( (lv_lefthandedDefined_60_0= '!' ) ) otherlv_61= 'lefthanded' ) | ( ( (lv_lefthandedDefined_62_0= 'lefthanded' ) ) ( (otherlv_63= '!=' ( ( (lv_lefthanded_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_lefthanded_68_0= 'true' ) ) | otherlv_69= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_70= '&' ( (lv_pullDefined_71_0= 'pull' ) ) (otherlv_72= '=' | otherlv_73= '==' ) ( (lv_pull_74_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_75= '&' ( ( ( (lv_pullingDefined_76_0= '!' ) ) otherlv_77= 'pulling' ) | ( ( (lv_pullingDefined_78_0= 'pulling' ) ) ( (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) ) | ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_86= '&' ( ( ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing' ) | ( ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_97= '&' ( (lv_timeDefined_98_0= 'time' ) ) (otherlv_99= '=' | otherlv_100= '==' ) ( (lv_time_101_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) ) ) ) ) ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA147_0 = input.LA(1);

                         
                        int index147_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA147_0==EOF||LA147_0==45) ) {s = 1;}

                        else if ( LA147_0 == 59 && ( getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_3Access().getUnorderedGroup_1(), 9) || getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_3Access().getUnorderedGroup_1(), 7) || getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_3Access().getUnorderedGroup_1(), 11) || getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_3Access().getUnorderedGroup_1(), 8) || getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_3Access().getUnorderedGroup_1(), 10) || getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_3Access().getUnorderedGroup_1(), 1) || getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_3Access().getUnorderedGroup_1(), 2) || getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_3Access().getUnorderedGroup_1(), 0) || getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_3Access().getUnorderedGroup_1(), 5) || getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_3Access().getUnorderedGroup_1(), 6) || getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_3Access().getUnorderedGroup_1(), 3) || getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_3Access().getUnorderedGroup_1(), 4) ) ) {s = 2;}

                         
                        input.seek(index147_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA147_2 = input.LA(1);

                         
                        int index147_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA147_2 == 60 && ( getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_3Access().getUnorderedGroup_1(), 9) || getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_3Access().getUnorderedGroup_1(), 8) || getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_3Access().getUnorderedGroup_1(), 1) || getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_3Access().getUnorderedGroup_1(), 2) || getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_3Access().getUnorderedGroup_1(), 5) || getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_3Access().getUnorderedGroup_1(), 6) ) ) {s = 3;}

                        else if ( LA147_2 == 61 && getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_3Access().getUnorderedGroup_1(), 1) ) {s = 4;}

                        else if ( LA147_2 == 67 && getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_3Access().getUnorderedGroup_1(), 5) ) {s = 5;}

                        else if ( LA147_2 == 71 && getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_3Access().getUnorderedGroup_1(), 9) ) {s = 6;}

                        else if ( LA147_2 == 38 && getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_3Access().getUnorderedGroup_1(), 0) ) {s = 7;}

                        else if ( LA147_2 == 66 && getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_3Access().getUnorderedGroup_1(), 4) ) {s = 8;}

                        else if ( LA147_2 == 70 && getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_3Access().getUnorderedGroup_1(), 8) ) {s = 9;}

                        else if ( LA147_2 == 65 && getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_3Access().getUnorderedGroup_1(), 3) ) {s = 10;}

                        else if ( LA147_2 == 69 && getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_3Access().getUnorderedGroup_1(), 7) ) {s = 11;}

                        else if ( LA147_2 == 73 && getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_3Access().getUnorderedGroup_1(), 11) ) {s = 12;}

                        else if ( LA147_2 == 64 && getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_3Access().getUnorderedGroup_1(), 2) ) {s = 13;}

                        else if ( LA147_2 == 68 && getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_3Access().getUnorderedGroup_1(), 6) ) {s = 14;}

                        else if ( LA147_2 == 72 && getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_3Access().getUnorderedGroup_1(), 10) ) {s = 15;}

                         
                        input.seek(index147_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA147_3 = input.LA(1);

                         
                        int index147_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA147_3 == 64 && getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_3Access().getUnorderedGroup_1(), 2) ) {s = 13;}

                        else if ( LA147_3 == 68 && getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_3Access().getUnorderedGroup_1(), 6) ) {s = 14;}

                        else if ( LA147_3 == 61 && getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_3Access().getUnorderedGroup_1(), 1) ) {s = 4;}

                        else if ( LA147_3 == 67 && getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_3Access().getUnorderedGroup_1(), 5) ) {s = 5;}

                        else if ( LA147_3 == 71 && getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_3Access().getUnorderedGroup_1(), 9) ) {s = 6;}

                        else if ( LA147_3 == 70 && getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_3Access().getUnorderedGroup_1(), 8) ) {s = 9;}

                         
                        input.seek(index147_3);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 147, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_32s = "\1\uffff\1\15\2\uffff\1\3\1\7\1\13\1\2\1\6\1\12\1\1\1\5\1\11\1\4\1\10\1\14";
    static final String dfa_33s = "\1\2\1\uffff\1\0\1\1\14\uffff}>";
    static final String[] dfa_34s = {
            "\1\1\15\uffff\1\2",
            "",
            "\1\12\25\uffff\1\3\1\7\1\uffff\1\4\1\uffff\1\15\1\13\1\10\1\5\1\16\1\14\1\11\1\6\1\17",
            "\1\7\1\uffff\1\4\3\uffff\1\10\1\5\1\uffff\1\14\1\11",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final short[] dfa_32 = DFA.unpackEncodedString(dfa_32s);
    static final short[] dfa_33 = DFA.unpackEncodedString(dfa_33s);
    static final short[][] dfa_34 = unpackEncodedStringArray(dfa_34s);

    class DFA189 extends DFA {

        public DFA189(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 189;
            this.eot = dfa_19;
            this.eof = dfa_20;
            this.min = dfa_30;
            this.max = dfa_22;
            this.accept = dfa_32;
            this.special = dfa_33;
            this.transition = dfa_34;
        }
        public String getDescription() {
            return "()* loopback of 5780:6: ( ({...}? => ( ({...}? => (otherlv_11= '&' ( (lv_angleDefined_12_0= 'angle' ) ) (otherlv_13= '=' | otherlv_14= '==' ) ( (lv_angle_15_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= '&' ( ( ( (lv_blockingDefined_17_0= '!' ) ) otherlv_18= 'blocking' ) | ( ( (lv_blockingDefined_19_0= 'blocking' ) ) ( (otherlv_20= '!=' ( ( (lv_blocking_21_0= 'false' ) ) | otherlv_22= 'true' ) ) | ( (otherlv_23= '=' | otherlv_24= '==' ) ( ( (lv_blocking_25_0= 'true' ) ) | otherlv_26= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= '&' ( ( ( (lv_brokenDefined_28_0= '!' ) ) otherlv_29= 'broken' ) | ( ( (lv_brokenDefined_30_0= 'broken' ) ) ( (otherlv_31= '!=' ( ( (lv_broken_32_0= 'false' ) ) | otherlv_33= 'true' ) ) | ( (otherlv_34= '=' | otherlv_35= '==' ) ( ( (lv_broken_36_0= 'true' ) ) | otherlv_37= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_38= '&' ( (lv_cooldownDefined_39_0= 'cooldown' ) ) (otherlv_40= '=' | otherlv_41= '==' ) ( (lv_cooldown_42_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= '&' ( (lv_damageDefined_44_0= 'damage' ) ) (otherlv_45= '=' | otherlv_46= '==' ) ( (lv_damage_47_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_48= '&' ( ( ( (lv_damagedDefined_49_0= '!' ) ) otherlv_50= 'damaged' ) | ( ( (lv_damagedDefined_51_0= 'damaged' ) ) ( (otherlv_52= '!=' ( ( (lv_damaged_53_0= 'false' ) ) | otherlv_54= 'true' ) ) | ( (otherlv_55= '=' | otherlv_56= '==' ) ( ( (lv_damaged_57_0= 'true' ) ) | otherlv_58= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_59= '&' ( ( ( (lv_lefthandedDefined_60_0= '!' ) ) otherlv_61= 'lefthanded' ) | ( ( (lv_lefthandedDefined_62_0= 'lefthanded' ) ) ( (otherlv_63= '!=' ( ( (lv_lefthanded_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_lefthanded_68_0= 'true' ) ) | otherlv_69= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_70= '&' ( (lv_pullDefined_71_0= 'pull' ) ) (otherlv_72= '=' | otherlv_73= '==' ) ( (lv_pull_74_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_75= '&' ( ( ( (lv_pullingDefined_76_0= '!' ) ) otherlv_77= 'pulling' ) | ( ( (lv_pullingDefined_78_0= 'pulling' ) ) ( (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) ) | ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_86= '&' ( ( ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing' ) | ( ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_97= '&' ( (lv_timeDefined_98_0= 'time' ) ) (otherlv_99= '=' | otherlv_100= '==' ) ( (lv_time_101_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) ) ) ) ) ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA189_2 = input.LA(1);

                         
                        int index189_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA189_2 == 60 && ( getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_4Access().getUnorderedGroup_1(), 1) || getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_4Access().getUnorderedGroup_1(), 2) || getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_4Access().getUnorderedGroup_1(), 5) || getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_4Access().getUnorderedGroup_1(), 6) || getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_4Access().getUnorderedGroup_1(), 9) || getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_4Access().getUnorderedGroup_1(), 8) ) ) {s = 3;}

                        else if ( LA189_2 == 63 && getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_4Access().getUnorderedGroup_1(), 2) ) {s = 4;}

                        else if ( LA189_2 == 68 && getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_4Access().getUnorderedGroup_1(), 6) ) {s = 5;}

                        else if ( LA189_2 == 72 && getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_4Access().getUnorderedGroup_1(), 10) ) {s = 6;}

                        else if ( LA189_2 == 61 && getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_4Access().getUnorderedGroup_1(), 1) ) {s = 7;}

                        else if ( LA189_2 == 67 && getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_4Access().getUnorderedGroup_1(), 5) ) {s = 8;}

                        else if ( LA189_2 == 71 && getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_4Access().getUnorderedGroup_1(), 9) ) {s = 9;}

                        else if ( LA189_2 == 38 && getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_4Access().getUnorderedGroup_1(), 0) ) {s = 10;}

                        else if ( LA189_2 == 66 && getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_4Access().getUnorderedGroup_1(), 4) ) {s = 11;}

                        else if ( LA189_2 == 70 && getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_4Access().getUnorderedGroup_1(), 8) ) {s = 12;}

                        else if ( LA189_2 == 65 && getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_4Access().getUnorderedGroup_1(), 3) ) {s = 13;}

                        else if ( LA189_2 == 69 && getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_4Access().getUnorderedGroup_1(), 7) ) {s = 14;}

                        else if ( LA189_2 == 73 && getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_4Access().getUnorderedGroup_1(), 11) ) {s = 15;}

                         
                        input.seek(index189_2);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA189_3 = input.LA(1);

                         
                        int index189_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA189_3 == 63 && getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_4Access().getUnorderedGroup_1(), 2) ) {s = 4;}

                        else if ( LA189_3 == 68 && getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_4Access().getUnorderedGroup_1(), 6) ) {s = 5;}

                        else if ( LA189_3 == 61 && getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_4Access().getUnorderedGroup_1(), 1) ) {s = 7;}

                        else if ( LA189_3 == 67 && getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_4Access().getUnorderedGroup_1(), 5) ) {s = 8;}

                        else if ( LA189_3 == 71 && getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_4Access().getUnorderedGroup_1(), 9) ) {s = 9;}

                        else if ( LA189_3 == 70 && getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_4Access().getUnorderedGroup_1(), 8) ) {s = 12;}

                         
                        input.seek(index189_3);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA189_0 = input.LA(1);

                         
                        int index189_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA189_0==EOF||LA189_0==45) ) {s = 1;}

                        else if ( LA189_0 == 59 && ( getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_4Access().getUnorderedGroup_1(), 1) || getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_4Access().getUnorderedGroup_1(), 0) || getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_4Access().getUnorderedGroup_1(), 3) || getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_4Access().getUnorderedGroup_1(), 10) || getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_4Access().getUnorderedGroup_1(), 2) || getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_4Access().getUnorderedGroup_1(), 5) || getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_4Access().getUnorderedGroup_1(), 4) || getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_4Access().getUnorderedGroup_1(), 11) || getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_4Access().getUnorderedGroup_1(), 7) || getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_4Access().getUnorderedGroup_1(), 6) || getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_4Access().getUnorderedGroup_1(), 9) || getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_4Access().getUnorderedGroup_1(), 8) ) ) {s = 2;}

                         
                        input.seek(index189_0);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 189, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_35s = "\1\uffff\1\15\2\uffff\1\4\1\10\1\14\1\3\1\7\1\13\1\2\1\6\1\12\1\1\1\5\1\11";
    static final String[] dfa_36s = {
            "\1\1\15\uffff\1\2",
            "",
            "\1\15\25\uffff\1\3\1\12\1\uffff\1\7\1\4\1\uffff\1\16\1\13\1\10\1\5\1\17\1\14\1\11\1\6",
            "\1\12\1\uffff\1\7\1\4\2\uffff\1\13\1\10\1\uffff\1\17\1\14",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final short[] dfa_35 = DFA.unpackEncodedString(dfa_35s);
    static final short[][] dfa_36 = unpackEncodedStringArray(dfa_36s);

    class DFA231 extends DFA {

        public DFA231(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 231;
            this.eot = dfa_19;
            this.eof = dfa_20;
            this.min = dfa_30;
            this.max = dfa_22;
            this.accept = dfa_35;
            this.special = dfa_24;
            this.transition = dfa_36;
        }
        public String getDescription() {
            return "()* loopback of 6913:6: ( ({...}? => ( ({...}? => (otherlv_5= '&' ( (lv_angleDefined_6_0= 'angle' ) ) (otherlv_7= '=' | otherlv_8= '==' ) ( (lv_angle_9_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= '&' ( ( ( (lv_blockingDefined_11_0= '!' ) ) otherlv_12= 'blocking' ) | ( ( (lv_blockingDefined_13_0= 'blocking' ) ) ( (otherlv_14= '!=' ( ( (lv_blocking_15_0= 'false' ) ) | otherlv_16= 'true' ) ) | ( (otherlv_17= '=' | otherlv_18= '==' ) ( ( (lv_blocking_19_0= 'true' ) ) | otherlv_20= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= '&' ( ( ( (lv_brokenDefined_22_0= '!' ) ) otherlv_23= 'broken' ) | ( ( (lv_brokenDefined_24_0= 'broken' ) ) ( (otherlv_25= '!=' ( ( (lv_broken_26_0= 'false' ) ) | otherlv_27= 'true' ) ) | ( (otherlv_28= '=' | otherlv_29= '==' ) ( ( (lv_broken_30_0= 'true' ) ) | otherlv_31= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_32= '&' ( ( ( (lv_castDefined_33_0= '!' ) ) otherlv_34= 'cast' ) | ( ( (lv_castDefined_35_0= 'cast' ) ) ( (otherlv_36= '!=' ( ( (lv_cast_37_0= 'false' ) ) | otherlv_38= 'true' ) ) | ( (otherlv_39= '=' | otherlv_40= '==' ) ( ( (lv_cast_41_0= 'true' ) ) | otherlv_42= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= '&' ( (lv_damageDefined_44_0= 'damage' ) ) (otherlv_45= '=' | otherlv_46= '==' ) ( (lv_damage_47_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_48= '&' ( ( ( (lv_damagedDefined_49_0= '!' ) ) otherlv_50= 'damaged' ) | ( ( (lv_damagedDefined_51_0= 'damaged' ) ) ( (otherlv_52= '!=' ( ( (lv_damaged_53_0= 'false' ) ) | otherlv_54= 'true' ) ) | ( (otherlv_55= '=' | otherlv_56= '==' ) ( ( (lv_damaged_57_0= 'true' ) ) | otherlv_58= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_59= '&' ( ( ( (lv_lefthandedDefined_60_0= '!' ) ) otherlv_61= 'lefthanded' ) | ( ( (lv_lefthandedDefined_62_0= 'lefthanded' ) ) ( (otherlv_63= '!=' ( ( (lv_lefthanded_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_lefthanded_68_0= 'true' ) ) | otherlv_69= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_70= '&' ( (lv_pullDefined_71_0= 'pull' ) ) (otherlv_72= '=' | otherlv_73= '==' ) ( (lv_pull_74_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_75= '&' ( ( ( (lv_pullingDefined_76_0= '!' ) ) otherlv_77= 'pulling' ) | ( ( (lv_pullingDefined_78_0= 'pulling' ) ) ( (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) ) | ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_86= '&' ( ( ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing' ) | ( ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_97= '&' ( (lv_timeDefined_98_0= 'time' ) ) (otherlv_99= '=' | otherlv_100= '==' ) ( (lv_time_101_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) ) ) ) ) ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA231_0 = input.LA(1);

                         
                        int index231_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA231_0==EOF||LA231_0==45) ) {s = 1;}

                        else if ( LA231_0 == 59 && ( getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_5Access().getUnorderedGroup_3(), 0) || getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_5Access().getUnorderedGroup_3(), 1) || getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_5Access().getUnorderedGroup_3(), 2) || getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_5Access().getUnorderedGroup_3(), 10) || getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_5Access().getUnorderedGroup_3(), 11) || getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_5Access().getUnorderedGroup_3(), 7) || getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_5Access().getUnorderedGroup_3(), 8) || getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_5Access().getUnorderedGroup_3(), 9) || getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_5Access().getUnorderedGroup_3(), 3) || getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_5Access().getUnorderedGroup_3(), 4) || getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_5Access().getUnorderedGroup_3(), 5) || getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_5Access().getUnorderedGroup_3(), 6) ) ) {s = 2;}

                         
                        input.seek(index231_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA231_2 = input.LA(1);

                         
                        int index231_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA231_2 == 60 && ( getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_5Access().getUnorderedGroup_3(), 1) || getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_5Access().getUnorderedGroup_3(), 2) || getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_5Access().getUnorderedGroup_3(), 8) || getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_5Access().getUnorderedGroup_3(), 9) || getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_5Access().getUnorderedGroup_3(), 3) || getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_5Access().getUnorderedGroup_3(), 5) || getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_5Access().getUnorderedGroup_3(), 6) ) ) {s = 3;}

                        else if ( LA231_2 == 64 && getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_5Access().getUnorderedGroup_3(), 3) ) {s = 4;}

                        else if ( LA231_2 == 69 && getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_5Access().getUnorderedGroup_3(), 7) ) {s = 5;}

                        else if ( LA231_2 == 73 && getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_5Access().getUnorderedGroup_3(), 11) ) {s = 6;}

                        else if ( LA231_2 == 63 && getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_5Access().getUnorderedGroup_3(), 2) ) {s = 7;}

                        else if ( LA231_2 == 68 && getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_5Access().getUnorderedGroup_3(), 6) ) {s = 8;}

                        else if ( LA231_2 == 72 && getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_5Access().getUnorderedGroup_3(), 10) ) {s = 9;}

                        else if ( LA231_2 == 61 && getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_5Access().getUnorderedGroup_3(), 1) ) {s = 10;}

                        else if ( LA231_2 == 67 && getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_5Access().getUnorderedGroup_3(), 5) ) {s = 11;}

                        else if ( LA231_2 == 71 && getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_5Access().getUnorderedGroup_3(), 9) ) {s = 12;}

                        else if ( LA231_2 == 38 && getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_5Access().getUnorderedGroup_3(), 0) ) {s = 13;}

                        else if ( LA231_2 == 66 && getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_5Access().getUnorderedGroup_3(), 4) ) {s = 14;}

                        else if ( LA231_2 == 70 && getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_5Access().getUnorderedGroup_3(), 8) ) {s = 15;}

                         
                        input.seek(index231_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA231_3 = input.LA(1);

                         
                        int index231_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA231_3 == 70 && getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_5Access().getUnorderedGroup_3(), 8) ) {s = 15;}

                        else if ( LA231_3 == 64 && getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_5Access().getUnorderedGroup_3(), 3) ) {s = 4;}

                        else if ( LA231_3 == 63 && getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_5Access().getUnorderedGroup_3(), 2) ) {s = 7;}

                        else if ( LA231_3 == 68 && getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_5Access().getUnorderedGroup_3(), 6) ) {s = 8;}

                        else if ( LA231_3 == 61 && getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_5Access().getUnorderedGroup_3(), 1) ) {s = 10;}

                        else if ( LA231_3 == 67 && getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_5Access().getUnorderedGroup_3(), 5) ) {s = 11;}

                        else if ( LA231_3 == 71 && getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_5Access().getUnorderedGroup_3(), 9) ) {s = 12;}

                         
                        input.seek(index231_3);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 231, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_37s = "\1\55\1\uffff\1\46\2\uffff\1\75\12\uffff";
    static final String dfa_38s = "\1\73\1\uffff\1\111\2\uffff\1\107\12\uffff";
    static final String dfa_39s = "\1\uffff\1\15\1\uffff\1\1\1\5\1\uffff\1\11\1\4\1\10\1\14\1\3\1\7\1\13\1\2\1\6\1\12";
    static final String dfa_40s = "\1\2\1\uffff\1\0\2\uffff\1\1\12\uffff}>";
    static final String[] dfa_41s = {
            "\1\1\15\uffff\1\2",
            "",
            "\1\3\25\uffff\1\5\1\15\1\uffff\1\12\1\7\1\4\1\uffff\1\16\1\13\1\10\1\6\1\17\1\14\1\11",
            "",
            "",
            "\1\15\1\uffff\1\12\1\7\2\uffff\1\16\1\13\1\uffff\1\6\1\17",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final char[] dfa_37 = DFA.unpackEncodedStringToUnsignedChars(dfa_37s);
    static final char[] dfa_38 = DFA.unpackEncodedStringToUnsignedChars(dfa_38s);
    static final short[] dfa_39 = DFA.unpackEncodedString(dfa_39s);
    static final short[] dfa_40 = DFA.unpackEncodedString(dfa_40s);
    static final short[][] dfa_41 = unpackEncodedStringArray(dfa_41s);

    class DFA273 extends DFA {

        public DFA273(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 273;
            this.eot = dfa_19;
            this.eof = dfa_20;
            this.min = dfa_37;
            this.max = dfa_38;
            this.accept = dfa_39;
            this.special = dfa_40;
            this.transition = dfa_41;
        }
        public String getDescription() {
            return "()* loopback of 8106:6: ( ({...}? => ( ({...}? => (otherlv_5= '&' ( (lv_angleDefined_6_0= 'angle' ) ) (otherlv_7= '=' | otherlv_8= '==' ) ( (lv_angle_9_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= '&' ( ( ( (lv_blockingDefined_11_0= '!' ) ) otherlv_12= 'blocking' ) | ( ( (lv_blockingDefined_13_0= 'blocking' ) ) ( (otherlv_14= '!=' ( ( (lv_blocking_15_0= 'false' ) ) | otherlv_16= 'true' ) ) | ( (otherlv_17= '=' | otherlv_18= '==' ) ( ( (lv_blocking_19_0= 'true' ) ) | otherlv_20= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= '&' ( ( ( (lv_brokenDefined_22_0= '!' ) ) otherlv_23= 'broken' ) | ( ( (lv_brokenDefined_24_0= 'broken' ) ) ( (otherlv_25= '!=' ( ( (lv_broken_26_0= 'false' ) ) | otherlv_27= 'true' ) ) | ( (otherlv_28= '=' | otherlv_29= '==' ) ( ( (lv_broken_30_0= 'true' ) ) | otherlv_31= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_32= '&' ( ( ( (lv_castDefined_33_0= '!' ) ) otherlv_34= 'cast' ) | ( ( (lv_castDefined_35_0= 'cast' ) ) ( (otherlv_36= '!=' ( ( (lv_cast_37_0= 'false' ) ) | otherlv_38= 'true' ) ) | ( (otherlv_39= '=' | otherlv_40= '==' ) ( ( (lv_cast_41_0= 'true' ) ) | otherlv_42= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= '&' ( (lv_cooldownDefined_44_0= 'cooldown' ) ) (otherlv_45= '=' | otherlv_46= '==' ) ( (lv_cooldown_47_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_48= '&' ( ( ( (lv_damagedDefined_49_0= '!' ) ) otherlv_50= 'damaged' ) | ( ( (lv_damagedDefined_51_0= 'damaged' ) ) ( (otherlv_52= '!=' ( ( (lv_damaged_53_0= 'false' ) ) | otherlv_54= 'true' ) ) | ( (otherlv_55= '=' | otherlv_56= '==' ) ( ( (lv_damaged_57_0= 'true' ) ) | otherlv_58= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_59= '&' ( ( ( (lv_lefthandedDefined_60_0= '!' ) ) otherlv_61= 'lefthanded' ) | ( ( (lv_lefthandedDefined_62_0= 'lefthanded' ) ) ( (otherlv_63= '!=' ( ( (lv_lefthanded_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_lefthanded_68_0= 'true' ) ) | otherlv_69= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_70= '&' ( (lv_pullDefined_71_0= 'pull' ) ) (otherlv_72= '=' | otherlv_73= '==' ) ( (lv_pull_74_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_75= '&' ( ( ( (lv_pullingDefined_76_0= '!' ) ) otherlv_77= 'pulling' ) | ( ( (lv_pullingDefined_78_0= 'pulling' ) ) ( (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) ) | ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_86= '&' ( ( ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing' ) | ( ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_97= '&' ( (lv_timeDefined_98_0= 'time' ) ) (otherlv_99= '=' | otherlv_100= '==' ) ( (lv_time_101_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) ) ) ) ) ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA273_2 = input.LA(1);

                         
                        int index273_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA273_2 == 38 && getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_6Access().getUnorderedGroup_3(), 0) ) {s = 3;}

                        else if ( LA273_2 == 65 && getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_6Access().getUnorderedGroup_3(), 4) ) {s = 4;}

                        else if ( LA273_2 == 60 && ( getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_6Access().getUnorderedGroup_3(), 6) || getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_6Access().getUnorderedGroup_3(), 5) || getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_6Access().getUnorderedGroup_3(), 9) || getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_6Access().getUnorderedGroup_3(), 8) || getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_6Access().getUnorderedGroup_3(), 3) || getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_6Access().getUnorderedGroup_3(), 2) || getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_6Access().getUnorderedGroup_3(), 1) ) ) {s = 5;}

                        else if ( LA273_2 == 70 && getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_6Access().getUnorderedGroup_3(), 8) ) {s = 6;}

                        else if ( LA273_2 == 64 && getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_6Access().getUnorderedGroup_3(), 3) ) {s = 7;}

                        else if ( LA273_2 == 69 && getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_6Access().getUnorderedGroup_3(), 7) ) {s = 8;}

                        else if ( LA273_2 == 73 && getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_6Access().getUnorderedGroup_3(), 11) ) {s = 9;}

                        else if ( LA273_2 == 63 && getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_6Access().getUnorderedGroup_3(), 2) ) {s = 10;}

                        else if ( LA273_2 == 68 && getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_6Access().getUnorderedGroup_3(), 6) ) {s = 11;}

                        else if ( LA273_2 == 72 && getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_6Access().getUnorderedGroup_3(), 10) ) {s = 12;}

                        else if ( LA273_2 == 61 && getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_6Access().getUnorderedGroup_3(), 1) ) {s = 13;}

                        else if ( LA273_2 == 67 && getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_6Access().getUnorderedGroup_3(), 5) ) {s = 14;}

                        else if ( LA273_2 == 71 && getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_6Access().getUnorderedGroup_3(), 9) ) {s = 15;}

                         
                        input.seek(index273_2);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA273_5 = input.LA(1);

                         
                        int index273_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA273_5 == 61 && getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_6Access().getUnorderedGroup_3(), 1) ) {s = 13;}

                        else if ( LA273_5 == 67 && getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_6Access().getUnorderedGroup_3(), 5) ) {s = 14;}

                        else if ( LA273_5 == 71 && getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_6Access().getUnorderedGroup_3(), 9) ) {s = 15;}

                        else if ( LA273_5 == 70 && getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_6Access().getUnorderedGroup_3(), 8) ) {s = 6;}

                        else if ( LA273_5 == 64 && getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_6Access().getUnorderedGroup_3(), 3) ) {s = 7;}

                        else if ( LA273_5 == 63 && getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_6Access().getUnorderedGroup_3(), 2) ) {s = 10;}

                        else if ( LA273_5 == 68 && getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_6Access().getUnorderedGroup_3(), 6) ) {s = 11;}

                         
                        input.seek(index273_5);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA273_0 = input.LA(1);

                         
                        int index273_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA273_0==EOF||LA273_0==45) ) {s = 1;}

                        else if ( LA273_0 == 59 && ( getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_6Access().getUnorderedGroup_3(), 7) || getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_6Access().getUnorderedGroup_3(), 6) || getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_6Access().getUnorderedGroup_3(), 5) || getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_6Access().getUnorderedGroup_3(), 4) || getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_6Access().getUnorderedGroup_3(), 9) || getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_6Access().getUnorderedGroup_3(), 10) || getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_6Access().getUnorderedGroup_3(), 8) || getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_6Access().getUnorderedGroup_3(), 11) || getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_6Access().getUnorderedGroup_3(), 3) || getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_6Access().getUnorderedGroup_3(), 2) || getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_6Access().getUnorderedGroup_3(), 1) || getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_6Access().getUnorderedGroup_3(), 0) ) ) {s = 2;}

                         
                        input.seek(index273_0);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 273, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_42s = "\1\1\1\uffff\1\2\2\uffff\1\0\12\uffff}>";
    static final String[] dfa_43s = {
            "\1\1\15\uffff\1\2",
            "",
            "\1\3\25\uffff\1\5\1\15\1\uffff\1\12\1\7\1\4\1\16\1\uffff\1\13\1\10\1\6\1\17\1\14\1\11",
            "",
            "",
            "\1\15\1\uffff\1\12\1\7\3\uffff\1\13\1\uffff\1\6\1\17",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final short[] dfa_42 = DFA.unpackEncodedString(dfa_42s);
    static final short[][] dfa_43 = unpackEncodedStringArray(dfa_43s);

    class DFA315 extends DFA {

        public DFA315(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 315;
            this.eot = dfa_19;
            this.eof = dfa_20;
            this.min = dfa_37;
            this.max = dfa_38;
            this.accept = dfa_39;
            this.special = dfa_42;
            this.transition = dfa_43;
        }
        public String getDescription() {
            return "()* loopback of 9359:6: ( ({...}? => ( ({...}? => (otherlv_11= '&' ( (lv_angleDefined_12_0= 'angle' ) ) (otherlv_13= '=' | otherlv_14= '==' ) ( (lv_angle_15_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= '&' ( ( ( (lv_blockingDefined_17_0= '!' ) ) otherlv_18= 'blocking' ) | ( ( (lv_blockingDefined_19_0= 'blocking' ) ) ( (otherlv_20= '!=' ( ( (lv_blocking_21_0= 'false' ) ) | otherlv_22= 'true' ) ) | ( (otherlv_23= '=' | otherlv_24= '==' ) ( ( (lv_blocking_25_0= 'true' ) ) | otherlv_26= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= '&' ( ( ( (lv_brokenDefined_28_0= '!' ) ) otherlv_29= 'broken' ) | ( ( (lv_brokenDefined_30_0= 'broken' ) ) ( (otherlv_31= '!=' ( ( (lv_broken_32_0= 'false' ) ) | otherlv_33= 'true' ) ) | ( (otherlv_34= '=' | otherlv_35= '==' ) ( ( (lv_broken_36_0= 'true' ) ) | otherlv_37= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_38= '&' ( ( ( (lv_castDefined_39_0= '!' ) ) otherlv_40= 'cast' ) | ( ( (lv_castDefined_41_0= 'cast' ) ) ( (otherlv_42= '!=' ( ( (lv_cast_43_0= 'false' ) ) | otherlv_44= 'true' ) ) | ( (otherlv_45= '=' | otherlv_46= '==' ) ( ( (lv_cast_47_0= 'true' ) ) | otherlv_48= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_49= '&' ( (lv_cooldownDefined_50_0= 'cooldown' ) ) (otherlv_51= '=' | otherlv_52= '==' ) ( (lv_cooldown_53_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_54= '&' ( (lv_damageDefined_55_0= 'damage' ) ) (otherlv_56= '=' | otherlv_57= '==' ) ( (lv_damage_58_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_59= '&' ( ( ( (lv_lefthandedDefined_60_0= '!' ) ) otherlv_61= 'lefthanded' ) | ( ( (lv_lefthandedDefined_62_0= 'lefthanded' ) ) ( (otherlv_63= '!=' ( ( (lv_lefthanded_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_lefthanded_68_0= 'true' ) ) | otherlv_69= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_70= '&' ( (lv_pullDefined_71_0= 'pull' ) ) (otherlv_72= '=' | otherlv_73= '==' ) ( (lv_pull_74_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_75= '&' ( ( ( (lv_pullingDefined_76_0= '!' ) ) otherlv_77= 'pulling' ) | ( ( (lv_pullingDefined_78_0= 'pulling' ) ) ( (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) ) | ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_86= '&' ( ( ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing' ) | ( ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_97= '&' ( (lv_timeDefined_98_0= 'time' ) ) (otherlv_99= '=' | otherlv_100= '==' ) ( (lv_time_101_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) ) ) ) ) ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA315_5 = input.LA(1);

                         
                        int index315_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA315_5 == 61 && getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_7Access().getUnorderedGroup_1(), 1) ) {s = 13;}

                        else if ( LA315_5 == 71 && getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_7Access().getUnorderedGroup_1(), 9) ) {s = 15;}

                        else if ( LA315_5 == 70 && getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_7Access().getUnorderedGroup_1(), 8) ) {s = 6;}

                        else if ( LA315_5 == 64 && getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_7Access().getUnorderedGroup_1(), 3) ) {s = 7;}

                        else if ( LA315_5 == 63 && getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_7Access().getUnorderedGroup_1(), 2) ) {s = 10;}

                        else if ( LA315_5 == 68 && getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_7Access().getUnorderedGroup_1(), 6) ) {s = 11;}

                         
                        input.seek(index315_5);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA315_0 = input.LA(1);

                         
                        int index315_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA315_0==EOF||LA315_0==45) ) {s = 1;}

                        else if ( LA315_0 == 59 && ( getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_7Access().getUnorderedGroup_1(), 9) || getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_7Access().getUnorderedGroup_1(), 8) || getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_7Access().getUnorderedGroup_1(), 10) || getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_7Access().getUnorderedGroup_1(), 7) || getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_7Access().getUnorderedGroup_1(), 11) || getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_7Access().getUnorderedGroup_1(), 6) || getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_7Access().getUnorderedGroup_1(), 5) || getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_7Access().getUnorderedGroup_1(), 4) || getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_7Access().getUnorderedGroup_1(), 3) || getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_7Access().getUnorderedGroup_1(), 2) || getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_7Access().getUnorderedGroup_1(), 1) || getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_7Access().getUnorderedGroup_1(), 0) ) ) {s = 2;}

                         
                        input.seek(index315_0);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA315_2 = input.LA(1);

                         
                        int index315_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA315_2 == 38 && getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_7Access().getUnorderedGroup_1(), 0) ) {s = 3;}

                        else if ( LA315_2 == 65 && getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_7Access().getUnorderedGroup_1(), 4) ) {s = 4;}

                        else if ( LA315_2 == 60 && ( getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_7Access().getUnorderedGroup_1(), 9) || getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_7Access().getUnorderedGroup_1(), 8) || getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_7Access().getUnorderedGroup_1(), 6) || getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_7Access().getUnorderedGroup_1(), 3) || getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_7Access().getUnorderedGroup_1(), 2) || getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_7Access().getUnorderedGroup_1(), 1) ) ) {s = 5;}

                        else if ( LA315_2 == 70 && getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_7Access().getUnorderedGroup_1(), 8) ) {s = 6;}

                        else if ( LA315_2 == 64 && getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_7Access().getUnorderedGroup_1(), 3) ) {s = 7;}

                        else if ( LA315_2 == 69 && getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_7Access().getUnorderedGroup_1(), 7) ) {s = 8;}

                        else if ( LA315_2 == 73 && getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_7Access().getUnorderedGroup_1(), 11) ) {s = 9;}

                        else if ( LA315_2 == 63 && getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_7Access().getUnorderedGroup_1(), 2) ) {s = 10;}

                        else if ( LA315_2 == 68 && getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_7Access().getUnorderedGroup_1(), 6) ) {s = 11;}

                        else if ( LA315_2 == 72 && getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_7Access().getUnorderedGroup_1(), 10) ) {s = 12;}

                        else if ( LA315_2 == 61 && getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_7Access().getUnorderedGroup_1(), 1) ) {s = 13;}

                        else if ( LA315_2 == 66 && getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_7Access().getUnorderedGroup_1(), 5) ) {s = 14;}

                        else if ( LA315_2 == 71 && getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_7Access().getUnorderedGroup_1(), 9) ) {s = 15;}

                         
                        input.seek(index315_2);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 315, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_44s = "\1\1\1\uffff\1\0\1\2\14\uffff}>";
    static final String[] dfa_45s = {
            "\1\1\15\uffff\1\2",
            "",
            "\1\7\25\uffff\1\3\1\4\1\uffff\1\15\1\12\1\10\1\5\1\16\1\uffff\1\13\1\11\1\6\1\17\1\14",
            "\1\4\1\uffff\1\15\1\12\2\uffff\1\16\2\uffff\1\11\1\6",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final short[] dfa_44 = DFA.unpackEncodedString(dfa_44s);
    static final short[][] dfa_45 = unpackEncodedStringArray(dfa_45s);

    class DFA357 extends DFA {

        public DFA357(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 357;
            this.eot = dfa_19;
            this.eof = dfa_20;
            this.min = dfa_30;
            this.max = dfa_22;
            this.accept = dfa_27;
            this.special = dfa_44;
            this.transition = dfa_45;
        }
        public String getDescription() {
            return "()* loopback of 10552:6: ( ({...}? => ( ({...}? => (otherlv_11= '&' ( (lv_angleDefined_12_0= 'angle' ) ) (otherlv_13= '=' | otherlv_14= '==' ) ( (lv_angle_15_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= '&' ( ( ( (lv_blockingDefined_17_0= '!' ) ) otherlv_18= 'blocking' ) | ( ( (lv_blockingDefined_19_0= 'blocking' ) ) ( (otherlv_20= '!=' ( ( (lv_blocking_21_0= 'false' ) ) | otherlv_22= 'true' ) ) | ( (otherlv_23= '=' | otherlv_24= '==' ) ( ( (lv_blocking_25_0= 'true' ) ) | otherlv_26= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= '&' ( ( ( (lv_brokenDefined_28_0= '!' ) ) otherlv_29= 'broken' ) | ( ( (lv_brokenDefined_30_0= 'broken' ) ) ( (otherlv_31= '!=' ( ( (lv_broken_32_0= 'false' ) ) | otherlv_33= 'true' ) ) | ( (otherlv_34= '=' | otherlv_35= '==' ) ( ( (lv_broken_36_0= 'true' ) ) | otherlv_37= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_38= '&' ( ( ( (lv_castDefined_39_0= '!' ) ) otherlv_40= 'cast' ) | ( ( (lv_castDefined_41_0= 'cast' ) ) ( (otherlv_42= '!=' ( ( (lv_cast_43_0= 'false' ) ) | otherlv_44= 'true' ) ) | ( (otherlv_45= '=' | otherlv_46= '==' ) ( ( (lv_cast_47_0= 'true' ) ) | otherlv_48= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_49= '&' ( (lv_cooldownDefined_50_0= 'cooldown' ) ) (otherlv_51= '=' | otherlv_52= '==' ) ( (lv_cooldown_53_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_54= '&' ( (lv_damageDefined_55_0= 'damage' ) ) (otherlv_56= '=' | otherlv_57= '==' ) ( (lv_damage_58_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_59= '&' ( ( ( (lv_damagedDefined_60_0= '!' ) ) otherlv_61= 'damaged' ) | ( ( (lv_damagedDefined_62_0= 'damaged' ) ) ( (otherlv_63= '!=' ( ( (lv_damaged_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_damaged_68_0= 'true' ) ) | otherlv_69= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_70= '&' ( (lv_pullDefined_71_0= 'pull' ) ) (otherlv_72= '=' | otherlv_73= '==' ) ( (lv_pull_74_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_75= '&' ( ( ( (lv_pullingDefined_76_0= '!' ) ) otherlv_77= 'pulling' ) | ( ( (lv_pullingDefined_78_0= 'pulling' ) ) ( (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) ) | ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_86= '&' ( ( ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing' ) | ( ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_97= '&' ( (lv_timeDefined_98_0= 'time' ) ) (otherlv_99= '=' | otherlv_100= '==' ) ( (lv_time_101_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) ) ) ) ) ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA357_2 = input.LA(1);

                         
                        int index357_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA357_2 == 60 && ( getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_8Access().getUnorderedGroup_1(), 2) || getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_8Access().getUnorderedGroup_1(), 3) || getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_8Access().getUnorderedGroup_1(), 1) || getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_8Access().getUnorderedGroup_1(), 8) || getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_8Access().getUnorderedGroup_1(), 9) || getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_8Access().getUnorderedGroup_1(), 6) ) ) {s = 3;}

                        else if ( LA357_2 == 61 && getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_8Access().getUnorderedGroup_1(), 1) ) {s = 4;}

                        else if ( LA357_2 == 66 && getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_8Access().getUnorderedGroup_1(), 5) ) {s = 5;}

                        else if ( LA357_2 == 71 && getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_8Access().getUnorderedGroup_1(), 9) ) {s = 6;}

                        else if ( LA357_2 == 38 && getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_8Access().getUnorderedGroup_1(), 0) ) {s = 7;}

                        else if ( LA357_2 == 65 && getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_8Access().getUnorderedGroup_1(), 4) ) {s = 8;}

                        else if ( LA357_2 == 70 && getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_8Access().getUnorderedGroup_1(), 8) ) {s = 9;}

                        else if ( LA357_2 == 64 && getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_8Access().getUnorderedGroup_1(), 3) ) {s = 10;}

                        else if ( LA357_2 == 69 && getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_8Access().getUnorderedGroup_1(), 7) ) {s = 11;}

                        else if ( LA357_2 == 73 && getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_8Access().getUnorderedGroup_1(), 11) ) {s = 12;}

                        else if ( LA357_2 == 63 && getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_8Access().getUnorderedGroup_1(), 2) ) {s = 13;}

                        else if ( LA357_2 == 67 && getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_8Access().getUnorderedGroup_1(), 6) ) {s = 14;}

                        else if ( LA357_2 == 72 && getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_8Access().getUnorderedGroup_1(), 10) ) {s = 15;}

                         
                        input.seek(index357_2);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA357_0 = input.LA(1);

                         
                        int index357_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA357_0==EOF||LA357_0==45) ) {s = 1;}

                        else if ( LA357_0 == 59 && ( getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_8Access().getUnorderedGroup_1(), 2) || getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_8Access().getUnorderedGroup_1(), 3) || getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_8Access().getUnorderedGroup_1(), 0) || getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_8Access().getUnorderedGroup_1(), 10) || getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_8Access().getUnorderedGroup_1(), 1) || getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_8Access().getUnorderedGroup_1(), 8) || getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_8Access().getUnorderedGroup_1(), 9) || getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_8Access().getUnorderedGroup_1(), 6) || getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_8Access().getUnorderedGroup_1(), 7) || getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_8Access().getUnorderedGroup_1(), 11) || getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_8Access().getUnorderedGroup_1(), 4) || getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_8Access().getUnorderedGroup_1(), 5) ) ) {s = 2;}

                         
                        input.seek(index357_0);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA357_3 = input.LA(1);

                         
                        int index357_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA357_3 == 63 && getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_8Access().getUnorderedGroup_1(), 2) ) {s = 13;}

                        else if ( LA357_3 == 67 && getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_8Access().getUnorderedGroup_1(), 6) ) {s = 14;}

                        else if ( LA357_3 == 61 && getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_8Access().getUnorderedGroup_1(), 1) ) {s = 4;}

                        else if ( LA357_3 == 71 && getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_8Access().getUnorderedGroup_1(), 9) ) {s = 6;}

                        else if ( LA357_3 == 70 && getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_8Access().getUnorderedGroup_1(), 8) ) {s = 9;}

                        else if ( LA357_3 == 64 && getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_8Access().getUnorderedGroup_1(), 3) ) {s = 10;}

                         
                        input.seek(index357_3);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 357, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_46s = "\1\1\1\uffff\1\2\1\0\14\uffff}>";
    static final String[] dfa_47s = {
            "\1\1\15\uffff\1\2",
            "",
            "\1\12\25\uffff\1\3\1\7\1\uffff\1\4\1\15\1\13\1\10\1\5\1\16\1\uffff\1\14\1\11\1\6\1\17",
            "\1\7\1\uffff\1\4\1\15\2\uffff\1\5\1\16\1\uffff\1\14\1\11",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final short[] dfa_46 = DFA.unpackEncodedString(dfa_46s);
    static final short[][] dfa_47 = unpackEncodedStringArray(dfa_47s);

    class DFA399 extends DFA {

        public DFA399(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 399;
            this.eot = dfa_19;
            this.eof = dfa_20;
            this.min = dfa_30;
            this.max = dfa_22;
            this.accept = dfa_32;
            this.special = dfa_46;
            this.transition = dfa_47;
        }
        public String getDescription() {
            return "()* loopback of 11685:6: ( ({...}? => ( ({...}? => (otherlv_5= '&' ( (lv_angleDefined_6_0= 'angle' ) ) (otherlv_7= '=' | otherlv_8= '==' ) ( (lv_angle_9_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= '&' ( ( ( (lv_blockingDefined_11_0= '!' ) ) otherlv_12= 'blocking' ) | ( ( (lv_blockingDefined_13_0= 'blocking' ) ) ( (otherlv_14= '!=' ( ( (lv_blocking_15_0= 'false' ) ) | otherlv_16= 'true' ) ) | ( (otherlv_17= '=' | otherlv_18= '==' ) ( ( (lv_blocking_19_0= 'true' ) ) | otherlv_20= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= '&' ( ( ( (lv_brokenDefined_22_0= '!' ) ) otherlv_23= 'broken' ) | ( ( (lv_brokenDefined_24_0= 'broken' ) ) ( (otherlv_25= '!=' ( ( (lv_broken_26_0= 'false' ) ) | otherlv_27= 'true' ) ) | ( (otherlv_28= '=' | otherlv_29= '==' ) ( ( (lv_broken_30_0= 'true' ) ) | otherlv_31= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_32= '&' ( ( ( (lv_castDefined_33_0= '!' ) ) otherlv_34= 'cast' ) | ( ( (lv_castDefined_35_0= 'cast' ) ) ( (otherlv_36= '!=' ( ( (lv_cast_37_0= 'false' ) ) | otherlv_38= 'true' ) ) | ( (otherlv_39= '=' | otherlv_40= '==' ) ( ( (lv_cast_41_0= 'true' ) ) | otherlv_42= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= '&' ( (lv_cooldownDefined_44_0= 'cooldown' ) ) (otherlv_45= '=' | otherlv_46= '==' ) ( (lv_cooldown_47_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_48= '&' ( (lv_damageDefined_49_0= 'damage' ) ) (otherlv_50= '=' | otherlv_51= '==' ) ( (lv_damage_52_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_53= '&' ( ( ( (lv_damagedDefined_54_0= '!' ) ) otherlv_55= 'damaged' ) | ( ( (lv_damagedDefined_56_0= 'damaged' ) ) ( (otherlv_57= '!=' ( ( (lv_damaged_58_0= 'false' ) ) | otherlv_59= 'true' ) ) | ( (otherlv_60= '=' | otherlv_61= '==' ) ( ( (lv_damaged_62_0= 'true' ) ) | otherlv_63= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_64= '&' ( ( ( (lv_lefthandedDefined_65_0= '!' ) ) otherlv_66= 'lefthanded' ) | ( ( (lv_lefthandedDefined_67_0= 'lefthanded' ) ) ( (otherlv_68= '!=' ( ( (lv_lefthanded_69_0= 'false' ) ) | otherlv_70= 'true' ) ) | ( (otherlv_71= '=' | otherlv_72= '==' ) ( ( (lv_lefthanded_73_0= 'true' ) ) | otherlv_74= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_75= '&' ( ( ( (lv_pullingDefined_76_0= '!' ) ) otherlv_77= 'pulling' ) | ( ( (lv_pullingDefined_78_0= 'pulling' ) ) ( (otherlv_79= '!=' ( ( (lv_pulling_80_0= 'false' ) ) | otherlv_81= 'true' ) ) | ( (otherlv_82= '=' | otherlv_83= '==' ) ( ( (lv_pulling_84_0= 'true' ) ) | otherlv_85= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_86= '&' ( ( ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing' ) | ( ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_97= '&' ( (lv_timeDefined_98_0= 'time' ) ) (otherlv_99= '=' | otherlv_100= '==' ) ( (lv_time_101_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) ) ) ) ) ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA399_3 = input.LA(1);

                         
                        int index399_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA399_3 == 64 && getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_9Access().getUnorderedGroup_3(), 3) ) {s = 13;}

                        else if ( LA399_3 == 68 && getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_9Access().getUnorderedGroup_3(), 7) ) {s = 14;}

                        else if ( LA399_3 == 63 && getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_9Access().getUnorderedGroup_3(), 2) ) {s = 4;}

                        else if ( LA399_3 == 67 && getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_9Access().getUnorderedGroup_3(), 6) ) {s = 5;}

                        else if ( LA399_3 == 61 && getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_9Access().getUnorderedGroup_3(), 1) ) {s = 7;}

                        else if ( LA399_3 == 71 && getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_9Access().getUnorderedGroup_3(), 9) ) {s = 9;}

                        else if ( LA399_3 == 70 && getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_9Access().getUnorderedGroup_3(), 8) ) {s = 12;}

                         
                        input.seek(index399_3);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA399_0 = input.LA(1);

                         
                        int index399_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA399_0==EOF||LA399_0==45) ) {s = 1;}

                        else if ( LA399_0 == 59 && ( getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_9Access().getUnorderedGroup_3(), 0) || getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_9Access().getUnorderedGroup_3(), 2) || getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_9Access().getUnorderedGroup_3(), 1) || getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_9Access().getUnorderedGroup_3(), 4) || getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_9Access().getUnorderedGroup_3(), 3) || getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_9Access().getUnorderedGroup_3(), 6) || getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_9Access().getUnorderedGroup_3(), 5) || getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_9Access().getUnorderedGroup_3(), 8) || getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_9Access().getUnorderedGroup_3(), 11) || getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_9Access().getUnorderedGroup_3(), 7) || getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_9Access().getUnorderedGroup_3(), 10) || getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_9Access().getUnorderedGroup_3(), 9) ) ) {s = 2;}

                         
                        input.seek(index399_0);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA399_2 = input.LA(1);

                         
                        int index399_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA399_2 == 60 && ( getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_9Access().getUnorderedGroup_3(), 2) || getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_9Access().getUnorderedGroup_3(), 1) || getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_9Access().getUnorderedGroup_3(), 3) || getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_9Access().getUnorderedGroup_3(), 6) || getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_9Access().getUnorderedGroup_3(), 8) || getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_9Access().getUnorderedGroup_3(), 7) || getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_9Access().getUnorderedGroup_3(), 9) ) ) {s = 3;}

                        else if ( LA399_2 == 63 && getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_9Access().getUnorderedGroup_3(), 2) ) {s = 4;}

                        else if ( LA399_2 == 67 && getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_9Access().getUnorderedGroup_3(), 6) ) {s = 5;}

                        else if ( LA399_2 == 72 && getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_9Access().getUnorderedGroup_3(), 10) ) {s = 6;}

                        else if ( LA399_2 == 61 && getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_9Access().getUnorderedGroup_3(), 1) ) {s = 7;}

                        else if ( LA399_2 == 66 && getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_9Access().getUnorderedGroup_3(), 5) ) {s = 8;}

                        else if ( LA399_2 == 71 && getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_9Access().getUnorderedGroup_3(), 9) ) {s = 9;}

                        else if ( LA399_2 == 38 && getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_9Access().getUnorderedGroup_3(), 0) ) {s = 10;}

                        else if ( LA399_2 == 65 && getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_9Access().getUnorderedGroup_3(), 4) ) {s = 11;}

                        else if ( LA399_2 == 70 && getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_9Access().getUnorderedGroup_3(), 8) ) {s = 12;}

                        else if ( LA399_2 == 64 && getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_9Access().getUnorderedGroup_3(), 3) ) {s = 13;}

                        else if ( LA399_2 == 68 && getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_9Access().getUnorderedGroup_3(), 7) ) {s = 14;}

                        else if ( LA399_2 == 73 && getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_9Access().getUnorderedGroup_3(), 11) ) {s = 15;}

                         
                        input.seek(index399_2);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 399, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_48s = "\1\0\1\uffff\1\2\1\1\14\uffff}>";
    static final String[] dfa_49s = {
            "\1\1\15\uffff\1\2",
            "",
            "\1\15\25\uffff\1\3\1\12\1\uffff\1\7\1\4\1\16\1\13\1\10\1\5\1\17\1\uffff\1\14\1\11\1\6",
            "\1\12\1\uffff\1\7\1\4\2\uffff\1\10\1\5\2\uffff\1\14",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final short[] dfa_48 = DFA.unpackEncodedString(dfa_48s);
    static final short[][] dfa_49 = unpackEncodedStringArray(dfa_49s);

    class DFA441 extends DFA {

        public DFA441(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 441;
            this.eot = dfa_19;
            this.eof = dfa_20;
            this.min = dfa_30;
            this.max = dfa_22;
            this.accept = dfa_35;
            this.special = dfa_48;
            this.transition = dfa_49;
        }
        public String getDescription() {
            return "()* loopback of 12938:6: ( ({...}? => ( ({...}? => (otherlv_11= '&' ( (lv_angleDefined_12_0= 'angle' ) ) (otherlv_13= '=' | otherlv_14= '==' ) ( (lv_angle_15_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= '&' ( ( ( (lv_blockingDefined_17_0= '!' ) ) otherlv_18= 'blocking' ) | ( ( (lv_blockingDefined_19_0= 'blocking' ) ) ( (otherlv_20= '!=' ( ( (lv_blocking_21_0= 'false' ) ) | otherlv_22= 'true' ) ) | ( (otherlv_23= '=' | otherlv_24= '==' ) ( ( (lv_blocking_25_0= 'true' ) ) | otherlv_26= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= '&' ( ( ( (lv_brokenDefined_28_0= '!' ) ) otherlv_29= 'broken' ) | ( ( (lv_brokenDefined_30_0= 'broken' ) ) ( (otherlv_31= '!=' ( ( (lv_broken_32_0= 'false' ) ) | otherlv_33= 'true' ) ) | ( (otherlv_34= '=' | otherlv_35= '==' ) ( ( (lv_broken_36_0= 'true' ) ) | otherlv_37= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_38= '&' ( ( ( (lv_castDefined_39_0= '!' ) ) otherlv_40= 'cast' ) | ( ( (lv_castDefined_41_0= 'cast' ) ) ( (otherlv_42= '!=' ( ( (lv_cast_43_0= 'false' ) ) | otherlv_44= 'true' ) ) | ( (otherlv_45= '=' | otherlv_46= '==' ) ( ( (lv_cast_47_0= 'true' ) ) | otherlv_48= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_49= '&' ( (lv_cooldownDefined_50_0= 'cooldown' ) ) (otherlv_51= '=' | otherlv_52= '==' ) ( (lv_cooldown_53_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_54= '&' ( (lv_damageDefined_55_0= 'damage' ) ) (otherlv_56= '=' | otherlv_57= '==' ) ( (lv_damage_58_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_59= '&' ( ( ( (lv_damagedDefined_60_0= '!' ) ) otherlv_61= 'damaged' ) | ( ( (lv_damagedDefined_62_0= 'damaged' ) ) ( (otherlv_63= '!=' ( ( (lv_damaged_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_damaged_68_0= 'true' ) ) | otherlv_69= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_70= '&' ( ( ( (lv_lefthandedDefined_71_0= '!' ) ) otherlv_72= 'lefthanded' ) | ( ( (lv_lefthandedDefined_73_0= 'lefthanded' ) ) ( (otherlv_74= '!=' ( ( (lv_lefthanded_75_0= 'false' ) ) | otherlv_76= 'true' ) ) | ( (otherlv_77= '=' | otherlv_78= '==' ) ( ( (lv_lefthanded_79_0= 'true' ) ) | otherlv_80= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_81= '&' ( (lv_pullDefined_82_0= 'pull' ) ) (otherlv_83= '=' | otherlv_84= '==' ) ( (lv_pull_85_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_86= '&' ( ( ( (lv_throwingDefined_87_0= '!' ) ) otherlv_88= 'throwing' ) | ( ( (lv_throwingDefined_89_0= 'throwing' ) ) ( (otherlv_90= '!=' ( ( (lv_throwing_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_throwing_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_97= '&' ( (lv_timeDefined_98_0= 'time' ) ) (otherlv_99= '=' | otherlv_100= '==' ) ( (lv_time_101_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) ) ) ) ) ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA441_0 = input.LA(1);

                         
                        int index441_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA441_0==EOF||LA441_0==45) ) {s = 1;}

                        else if ( LA441_0 == 59 && ( getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_10Access().getUnorderedGroup_1(), 1) || getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_10Access().getUnorderedGroup_1(), 11) || getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_10Access().getUnorderedGroup_1(), 2) || getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_10Access().getUnorderedGroup_1(), 10) || getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_10Access().getUnorderedGroup_1(), 3) || getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_10Access().getUnorderedGroup_1(), 4) || getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_10Access().getUnorderedGroup_1(), 0) || getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_10Access().getUnorderedGroup_1(), 9) || getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_10Access().getUnorderedGroup_1(), 5) || getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_10Access().getUnorderedGroup_1(), 6) || getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_10Access().getUnorderedGroup_1(), 7) || getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_10Access().getUnorderedGroup_1(), 8) ) ) {s = 2;}

                         
                        input.seek(index441_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA441_3 = input.LA(1);

                         
                        int index441_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA441_3 == 64 && getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_10Access().getUnorderedGroup_1(), 3) ) {s = 4;}

                        else if ( LA441_3 == 68 && getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_10Access().getUnorderedGroup_1(), 7) ) {s = 5;}

                        else if ( LA441_3 == 63 && getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_10Access().getUnorderedGroup_1(), 2) ) {s = 7;}

                        else if ( LA441_3 == 67 && getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_10Access().getUnorderedGroup_1(), 6) ) {s = 8;}

                        else if ( LA441_3 == 61 && getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_10Access().getUnorderedGroup_1(), 1) ) {s = 10;}

                        else if ( LA441_3 == 71 && getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_10Access().getUnorderedGroup_1(), 9) ) {s = 12;}

                         
                        input.seek(index441_3);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA441_2 = input.LA(1);

                         
                        int index441_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA441_2 == 60 && ( getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_10Access().getUnorderedGroup_1(), 1) || getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_10Access().getUnorderedGroup_1(), 2) || getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_10Access().getUnorderedGroup_1(), 3) || getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_10Access().getUnorderedGroup_1(), 9) || getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_10Access().getUnorderedGroup_1(), 6) || getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_10Access().getUnorderedGroup_1(), 7) ) ) {s = 3;}

                        else if ( LA441_2 == 64 && getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_10Access().getUnorderedGroup_1(), 3) ) {s = 4;}

                        else if ( LA441_2 == 68 && getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_10Access().getUnorderedGroup_1(), 7) ) {s = 5;}

                        else if ( LA441_2 == 73 && getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_10Access().getUnorderedGroup_1(), 11) ) {s = 6;}

                        else if ( LA441_2 == 63 && getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_10Access().getUnorderedGroup_1(), 2) ) {s = 7;}

                        else if ( LA441_2 == 67 && getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_10Access().getUnorderedGroup_1(), 6) ) {s = 8;}

                        else if ( LA441_2 == 72 && getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_10Access().getUnorderedGroup_1(), 10) ) {s = 9;}

                        else if ( LA441_2 == 61 && getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_10Access().getUnorderedGroup_1(), 1) ) {s = 10;}

                        else if ( LA441_2 == 66 && getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_10Access().getUnorderedGroup_1(), 5) ) {s = 11;}

                        else if ( LA441_2 == 71 && getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_10Access().getUnorderedGroup_1(), 9) ) {s = 12;}

                        else if ( LA441_2 == 38 && getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_10Access().getUnorderedGroup_1(), 0) ) {s = 13;}

                        else if ( LA441_2 == 65 && getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_10Access().getUnorderedGroup_1(), 4) ) {s = 14;}

                        else if ( LA441_2 == 69 && getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_10Access().getUnorderedGroup_1(), 8) ) {s = 15;}

                         
                        input.seek(index441_2);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 441, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_50s = "\1\73\1\uffff\1\111\1\106\14\uffff";
    static final String[] dfa_51s = {
            "\1\1\15\uffff\1\2",
            "",
            "\1\15\25\uffff\1\3\1\12\1\uffff\1\7\1\4\1\16\1\13\1\10\1\5\1\17\1\14\1\uffff\1\11\1\6",
            "\1\12\1\uffff\1\7\1\4\2\uffff\1\10\1\5\1\uffff\1\14",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final char[] dfa_50 = DFA.unpackEncodedStringToUnsignedChars(dfa_50s);
    static final short[][] dfa_51 = unpackEncodedStringArray(dfa_51s);

    class DFA483 extends DFA {

        public DFA483(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 483;
            this.eot = dfa_19;
            this.eof = dfa_20;
            this.min = dfa_30;
            this.max = dfa_50;
            this.accept = dfa_35;
            this.special = dfa_24;
            this.transition = dfa_51;
        }
        public String getDescription() {
            return "()* loopback of 14131:6: ( ({...}? => ( ({...}? => (otherlv_11= '&' ( (lv_angleDefined_12_0= 'angle' ) ) (otherlv_13= '=' | otherlv_14= '==' ) ( (lv_angle_15_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= '&' ( ( ( (lv_blockingDefined_17_0= '!' ) ) otherlv_18= 'blocking' ) | ( ( (lv_blockingDefined_19_0= 'blocking' ) ) ( (otherlv_20= '!=' ( ( (lv_blocking_21_0= 'false' ) ) | otherlv_22= 'true' ) ) | ( (otherlv_23= '=' | otherlv_24= '==' ) ( ( (lv_blocking_25_0= 'true' ) ) | otherlv_26= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= '&' ( ( ( (lv_brokenDefined_28_0= '!' ) ) otherlv_29= 'broken' ) | ( ( (lv_brokenDefined_30_0= 'broken' ) ) ( (otherlv_31= '!=' ( ( (lv_broken_32_0= 'false' ) ) | otherlv_33= 'true' ) ) | ( (otherlv_34= '=' | otherlv_35= '==' ) ( ( (lv_broken_36_0= 'true' ) ) | otherlv_37= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_38= '&' ( ( ( (lv_castDefined_39_0= '!' ) ) otherlv_40= 'cast' ) | ( ( (lv_castDefined_41_0= 'cast' ) ) ( (otherlv_42= '!=' ( ( (lv_cast_43_0= 'false' ) ) | otherlv_44= 'true' ) ) | ( (otherlv_45= '=' | otherlv_46= '==' ) ( ( (lv_cast_47_0= 'true' ) ) | otherlv_48= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_49= '&' ( (lv_cooldownDefined_50_0= 'cooldown' ) ) (otherlv_51= '=' | otherlv_52= '==' ) ( (lv_cooldown_53_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_54= '&' ( (lv_damageDefined_55_0= 'damage' ) ) (otherlv_56= '=' | otherlv_57= '==' ) ( (lv_damage_58_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_59= '&' ( ( ( (lv_damagedDefined_60_0= '!' ) ) otherlv_61= 'damaged' ) | ( ( (lv_damagedDefined_62_0= 'damaged' ) ) ( (otherlv_63= '!=' ( ( (lv_damaged_64_0= 'false' ) ) | otherlv_65= 'true' ) ) | ( (otherlv_66= '=' | otherlv_67= '==' ) ( ( (lv_damaged_68_0= 'true' ) ) | otherlv_69= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_70= '&' ( ( ( (lv_lefthandedDefined_71_0= '!' ) ) otherlv_72= 'lefthanded' ) | ( ( (lv_lefthandedDefined_73_0= 'lefthanded' ) ) ( (otherlv_74= '!=' ( ( (lv_lefthanded_75_0= 'false' ) ) | otherlv_76= 'true' ) ) | ( (otherlv_77= '=' | otherlv_78= '==' ) ( ( (lv_lefthanded_79_0= 'true' ) ) | otherlv_80= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_81= '&' ( (lv_pullDefined_82_0= 'pull' ) ) (otherlv_83= '=' | otherlv_84= '==' ) ( (lv_pull_85_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_86= '&' ( ( ( (lv_pullingDefined_87_0= '!' ) ) otherlv_88= 'pulling' ) | ( ( (lv_pullingDefined_89_0= 'pulling' ) ) ( (otherlv_90= '!=' ( ( (lv_pulling_91_0= 'false' ) ) | otherlv_92= 'true' ) ) | ( (otherlv_93= '=' | otherlv_94= '==' ) ( ( (lv_pulling_95_0= 'true' ) ) | otherlv_96= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_97= '&' ( (lv_timeDefined_98_0= 'time' ) ) (otherlv_99= '=' | otherlv_100= '==' ) ( (lv_time_101_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) ) ) ) ) ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA483_0 = input.LA(1);

                         
                        int index483_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA483_0==EOF||LA483_0==45) ) {s = 1;}

                        else if ( LA483_0 == 59 && ( getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_11Access().getUnorderedGroup_1(), 9) || getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_11Access().getUnorderedGroup_1(), 11) || getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_11Access().getUnorderedGroup_1(), 8) || getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_11Access().getUnorderedGroup_1(), 7) || getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_11Access().getUnorderedGroup_1(), 6) || getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_11Access().getUnorderedGroup_1(), 10) || getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_11Access().getUnorderedGroup_1(), 1) || getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_11Access().getUnorderedGroup_1(), 0) || getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_11Access().getUnorderedGroup_1(), 5) || getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_11Access().getUnorderedGroup_1(), 4) || getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_11Access().getUnorderedGroup_1(), 3) || getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_11Access().getUnorderedGroup_1(), 2) ) ) {s = 2;}

                         
                        input.seek(index483_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA483_2 = input.LA(1);

                         
                        int index483_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA483_2 == 60 && ( getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_11Access().getUnorderedGroup_1(), 9) || getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_11Access().getUnorderedGroup_1(), 7) || getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_11Access().getUnorderedGroup_1(), 6) || getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_11Access().getUnorderedGroup_1(), 1) || getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_11Access().getUnorderedGroup_1(), 3) || getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_11Access().getUnorderedGroup_1(), 2) ) ) {s = 3;}

                        else if ( LA483_2 == 64 && getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_11Access().getUnorderedGroup_1(), 3) ) {s = 4;}

                        else if ( LA483_2 == 68 && getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_11Access().getUnorderedGroup_1(), 7) ) {s = 5;}

                        else if ( LA483_2 == 73 && getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_11Access().getUnorderedGroup_1(), 11) ) {s = 6;}

                        else if ( LA483_2 == 63 && getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_11Access().getUnorderedGroup_1(), 2) ) {s = 7;}

                        else if ( LA483_2 == 67 && getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_11Access().getUnorderedGroup_1(), 6) ) {s = 8;}

                        else if ( LA483_2 == 72 && getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_11Access().getUnorderedGroup_1(), 10) ) {s = 9;}

                        else if ( LA483_2 == 61 && getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_11Access().getUnorderedGroup_1(), 1) ) {s = 10;}

                        else if ( LA483_2 == 66 && getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_11Access().getUnorderedGroup_1(), 5) ) {s = 11;}

                        else if ( LA483_2 == 70 && getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_11Access().getUnorderedGroup_1(), 9) ) {s = 12;}

                        else if ( LA483_2 == 38 && getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_11Access().getUnorderedGroup_1(), 0) ) {s = 13;}

                        else if ( LA483_2 == 65 && getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_11Access().getUnorderedGroup_1(), 4) ) {s = 14;}

                        else if ( LA483_2 == 69 && getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_11Access().getUnorderedGroup_1(), 8) ) {s = 15;}

                         
                        input.seek(index483_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA483_3 = input.LA(1);

                         
                        int index483_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA483_3 == 64 && getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_11Access().getUnorderedGroup_1(), 3) ) {s = 4;}

                        else if ( LA483_3 == 68 && getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_11Access().getUnorderedGroup_1(), 7) ) {s = 5;}

                        else if ( LA483_3 == 63 && getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_11Access().getUnorderedGroup_1(), 2) ) {s = 7;}

                        else if ( LA483_3 == 67 && getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_11Access().getUnorderedGroup_1(), 6) ) {s = 8;}

                        else if ( LA483_3 == 61 && getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_11Access().getUnorderedGroup_1(), 1) ) {s = 10;}

                        else if ( LA483_3 == 70 && getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_11Access().getUnorderedGroup_1(), 9) ) {s = 12;}

                         
                        input.seek(index483_3);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 483, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_52s = "\1\55\1\uffff\1\46\3\uffff\1\75\11\uffff";
    static final String dfa_53s = "\1\73\1\uffff\1\111\3\uffff\1\107\11\uffff";
    static final String dfa_54s = "\1\uffff\1\15\1\uffff\1\1\1\5\1\11\1\uffff\1\4\1\10\1\14\1\3\1\7\1\13\1\2\1\6\1\12";
    static final String dfa_55s = "\1\1\1\uffff\1\0\3\uffff\1\2\11\uffff}>";
    static final String[] dfa_56s = {
            "\1\1\15\uffff\1\2",
            "",
            "\1\3\25\uffff\1\6\1\15\1\uffff\1\12\1\7\1\4\1\16\1\13\1\10\1\5\1\17\1\14\1\uffff\1\11",
            "",
            "",
            "",
            "\1\15\1\uffff\1\12\1\7\2\uffff\1\13\1\10\1\uffff\1\17\1\14",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final char[] dfa_52 = DFA.unpackEncodedStringToUnsignedChars(dfa_52s);
    static final char[] dfa_53 = DFA.unpackEncodedStringToUnsignedChars(dfa_53s);
    static final short[] dfa_54 = DFA.unpackEncodedString(dfa_54s);
    static final short[] dfa_55 = DFA.unpackEncodedString(dfa_55s);
    static final short[][] dfa_56 = unpackEncodedStringArray(dfa_56s);

    class DFA525 extends DFA {

        public DFA525(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 525;
            this.eot = dfa_19;
            this.eof = dfa_20;
            this.min = dfa_52;
            this.max = dfa_53;
            this.accept = dfa_54;
            this.special = dfa_55;
            this.transition = dfa_56;
        }
        public String getDescription() {
            return "()* loopback of 15264:6: ( ({...}? => ( ({...}? => (otherlv_5= '&' ( (lv_angleDefined_6_0= 'angle' ) ) (otherlv_7= '=' | otherlv_8= '==' ) ( (lv_angle_9_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= '&' ( ( ( (lv_blockingDefined_11_0= '!' ) ) otherlv_12= 'blocking' ) | ( ( (lv_blockingDefined_13_0= 'blocking' ) ) ( (otherlv_14= '!=' ( ( (lv_blocking_15_0= 'false' ) ) | otherlv_16= 'true' ) ) | ( (otherlv_17= '=' | otherlv_18= '==' ) ( ( (lv_blocking_19_0= 'true' ) ) | otherlv_20= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= '&' ( ( ( (lv_brokenDefined_22_0= '!' ) ) otherlv_23= 'broken' ) | ( ( (lv_brokenDefined_24_0= 'broken' ) ) ( (otherlv_25= '!=' ( ( (lv_broken_26_0= 'false' ) ) | otherlv_27= 'true' ) ) | ( (otherlv_28= '=' | otherlv_29= '==' ) ( ( (lv_broken_30_0= 'true' ) ) | otherlv_31= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_32= '&' ( ( ( (lv_castDefined_33_0= '!' ) ) otherlv_34= 'cast' ) | ( ( (lv_castDefined_35_0= 'cast' ) ) ( (otherlv_36= '!=' ( ( (lv_cast_37_0= 'false' ) ) | otherlv_38= 'true' ) ) | ( (otherlv_39= '=' | otherlv_40= '==' ) ( ( (lv_cast_41_0= 'true' ) ) | otherlv_42= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= '&' ( (lv_cooldownDefined_44_0= 'cooldown' ) ) (otherlv_45= '=' | otherlv_46= '==' ) ( (lv_cooldown_47_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_48= '&' ( (lv_damageDefined_49_0= 'damage' ) ) (otherlv_50= '=' | otherlv_51= '==' ) ( (lv_damage_52_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_53= '&' ( ( ( (lv_damagedDefined_54_0= '!' ) ) otherlv_55= 'damaged' ) | ( ( (lv_damagedDefined_56_0= 'damaged' ) ) ( (otherlv_57= '!=' ( ( (lv_damaged_58_0= 'false' ) ) | otherlv_59= 'true' ) ) | ( (otherlv_60= '=' | otherlv_61= '==' ) ( ( (lv_damaged_62_0= 'true' ) ) | otherlv_63= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_64= '&' ( ( ( (lv_lefthandedDefined_65_0= '!' ) ) otherlv_66= 'lefthanded' ) | ( ( (lv_lefthandedDefined_67_0= 'lefthanded' ) ) ( (otherlv_68= '!=' ( ( (lv_lefthanded_69_0= 'false' ) ) | otherlv_70= 'true' ) ) | ( (otherlv_71= '=' | otherlv_72= '==' ) ( ( (lv_lefthanded_73_0= 'true' ) ) | otherlv_74= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_75= '&' ( (lv_pullDefined_76_0= 'pull' ) ) (otherlv_77= '=' | otherlv_78= '==' ) ( (lv_pull_79_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_80= '&' ( ( ( (lv_pullingDefined_81_0= '!' ) ) otherlv_82= 'pulling' ) | ( ( (lv_pullingDefined_83_0= 'pulling' ) ) ( (otherlv_84= '!=' ( ( (lv_pulling_85_0= 'false' ) ) | otherlv_86= 'true' ) ) | ( (otherlv_87= '=' | otherlv_88= '==' ) ( ( (lv_pulling_89_0= 'true' ) ) | otherlv_90= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_91= '&' ( ( ( (lv_throwingDefined_92_0= '!' ) ) otherlv_93= 'throwing' ) | ( ( (lv_throwingDefined_94_0= 'throwing' ) ) ( (otherlv_95= '!=' ( ( (lv_throwing_96_0= 'false' ) ) | otherlv_97= 'true' ) ) | ( (otherlv_98= '=' | otherlv_99= '==' ) ( ( (lv_throwing_100_0= 'true' ) ) | otherlv_101= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_102= '&' ( (lv_customModelDataDefined_103_0= 'custom_model_data' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_customModelData_106_0= ruleLONG ) ) ) ) ) ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA525_2 = input.LA(1);

                         
                        int index525_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA525_2 == 38 && getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_12Access().getUnorderedGroup_3(), 0) ) {s = 3;}

                        else if ( LA525_2 == 65 && getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_12Access().getUnorderedGroup_3(), 4) ) {s = 4;}

                        else if ( LA525_2 == 69 && getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_12Access().getUnorderedGroup_3(), 8) ) {s = 5;}

                        else if ( LA525_2 == 60 && ( getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_12Access().getUnorderedGroup_3(), 7) || getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_12Access().getUnorderedGroup_3(), 6) || getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_12Access().getUnorderedGroup_3(), 3) || getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_12Access().getUnorderedGroup_3(), 10) || getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_12Access().getUnorderedGroup_3(), 1) || getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_12Access().getUnorderedGroup_3(), 2) || getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_12Access().getUnorderedGroup_3(), 9) ) ) {s = 6;}

                        else if ( LA525_2 == 64 && getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_12Access().getUnorderedGroup_3(), 3) ) {s = 7;}

                        else if ( LA525_2 == 68 && getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_12Access().getUnorderedGroup_3(), 7) ) {s = 8;}

                        else if ( LA525_2 == 73 && getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_12Access().getUnorderedGroup_3(), 11) ) {s = 9;}

                        else if ( LA525_2 == 63 && getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_12Access().getUnorderedGroup_3(), 2) ) {s = 10;}

                        else if ( LA525_2 == 67 && getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_12Access().getUnorderedGroup_3(), 6) ) {s = 11;}

                        else if ( LA525_2 == 71 && getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_12Access().getUnorderedGroup_3(), 10) ) {s = 12;}

                        else if ( LA525_2 == 61 && getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_12Access().getUnorderedGroup_3(), 1) ) {s = 13;}

                        else if ( LA525_2 == 66 && getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_12Access().getUnorderedGroup_3(), 5) ) {s = 14;}

                        else if ( LA525_2 == 70 && getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_12Access().getUnorderedGroup_3(), 9) ) {s = 15;}

                         
                        input.seek(index525_2);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA525_0 = input.LA(1);

                         
                        int index525_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA525_0==EOF||LA525_0==45) ) {s = 1;}

                        else if ( LA525_0 == 59 && ( getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_12Access().getUnorderedGroup_3(), 7) || getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_12Access().getUnorderedGroup_3(), 8) || getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_12Access().getUnorderedGroup_3(), 5) || getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_12Access().getUnorderedGroup_3(), 6) || getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_12Access().getUnorderedGroup_3(), 3) || getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_12Access().getUnorderedGroup_3(), 11) || getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_12Access().getUnorderedGroup_3(), 4) || getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_12Access().getUnorderedGroup_3(), 10) || getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_12Access().getUnorderedGroup_3(), 1) || getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_12Access().getUnorderedGroup_3(), 2) || getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_12Access().getUnorderedGroup_3(), 0) || getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_12Access().getUnorderedGroup_3(), 9) ) ) {s = 2;}

                         
                        input.seek(index525_0);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA525_6 = input.LA(1);

                         
                        int index525_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA525_6 == 61 && getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_12Access().getUnorderedGroup_3(), 1) ) {s = 13;}

                        else if ( LA525_6 == 70 && getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_12Access().getUnorderedGroup_3(), 9) ) {s = 15;}

                        else if ( LA525_6 == 64 && getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_12Access().getUnorderedGroup_3(), 3) ) {s = 7;}

                        else if ( LA525_6 == 68 && getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_12Access().getUnorderedGroup_3(), 7) ) {s = 8;}

                        else if ( LA525_6 == 63 && getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_12Access().getUnorderedGroup_3(), 2) ) {s = 10;}

                        else if ( LA525_6 == 67 && getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_12Access().getUnorderedGroup_3(), 6) ) {s = 11;}

                        else if ( LA525_6 == 71 && getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_12Access().getUnorderedGroup_3(), 10) ) {s = 12;}

                         
                        input.seek(index525_6);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 525, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_57s = "\1\73\1\uffff\1\110\1\107\14\uffff";
    static final String[] dfa_58s = {
            "\1\1\15\uffff\1\2",
            "",
            "\1\7\25\uffff\1\3\1\4\1\uffff\1\15\1\12\1\10\1\5\1\16\1\13\1\11\1\6\1\17\1\14",
            "\1\4\1\uffff\1\15\1\12\2\uffff\1\16\1\13\1\uffff\1\6\1\17",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final char[] dfa_57 = DFA.unpackEncodedStringToUnsignedChars(dfa_57s);
    static final short[][] dfa_58 = unpackEncodedStringArray(dfa_58s);

    class DFA567 extends DFA {

        public DFA567(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 567;
            this.eot = dfa_19;
            this.eof = dfa_20;
            this.min = dfa_30;
            this.max = dfa_57;
            this.accept = dfa_27;
            this.special = dfa_48;
            this.transition = dfa_58;
        }
        public String getDescription() {
            return "()* loopback of 16458:6: ( ({...}? => ( ({...}? => (otherlv_5= '&' ( (lv_angleDefined_6_0= 'angle' ) ) (otherlv_7= '=' | otherlv_8= '==' ) ( (lv_angle_9_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= '&' ( ( ( (lv_blockingDefined_11_0= '!' ) ) otherlv_12= 'blocking' ) | ( ( (lv_blockingDefined_13_0= 'blocking' ) ) ( (otherlv_14= '!=' ( ( (lv_blocking_15_0= 'false' ) ) | otherlv_16= 'true' ) ) | ( (otherlv_17= '=' | otherlv_18= '==' ) ( ( (lv_blocking_19_0= 'true' ) ) | otherlv_20= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= '&' ( ( ( (lv_brokenDefined_22_0= '!' ) ) otherlv_23= 'broken' ) | ( ( (lv_brokenDefined_24_0= 'broken' ) ) ( (otherlv_25= '!=' ( ( (lv_broken_26_0= 'false' ) ) | otherlv_27= 'true' ) ) | ( (otherlv_28= '=' | otherlv_29= '==' ) ( ( (lv_broken_30_0= 'true' ) ) | otherlv_31= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_32= '&' ( ( ( (lv_castDefined_33_0= '!' ) ) otherlv_34= 'cast' ) | ( ( (lv_castDefined_35_0= 'cast' ) ) ( (otherlv_36= '!=' ( ( (lv_cast_37_0= 'false' ) ) | otherlv_38= 'true' ) ) | ( (otherlv_39= '=' | otherlv_40= '==' ) ( ( (lv_cast_41_0= 'true' ) ) | otherlv_42= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= '&' ( (lv_cooldownDefined_44_0= 'cooldown' ) ) (otherlv_45= '=' | otherlv_46= '==' ) ( (lv_cooldown_47_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_48= '&' ( (lv_damageDefined_49_0= 'damage' ) ) (otherlv_50= '=' | otherlv_51= '==' ) ( (lv_damage_52_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_53= '&' ( ( ( (lv_damagedDefined_54_0= '!' ) ) otherlv_55= 'damaged' ) | ( ( (lv_damagedDefined_56_0= 'damaged' ) ) ( (otherlv_57= '!=' ( ( (lv_damaged_58_0= 'false' ) ) | otherlv_59= 'true' ) ) | ( (otherlv_60= '=' | otherlv_61= '==' ) ( ( (lv_damaged_62_0= 'true' ) ) | otherlv_63= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_64= '&' ( ( ( (lv_lefthandedDefined_65_0= '!' ) ) otherlv_66= 'lefthanded' ) | ( ( (lv_lefthandedDefined_67_0= 'lefthanded' ) ) ( (otherlv_68= '!=' ( ( (lv_lefthanded_69_0= 'false' ) ) | otherlv_70= 'true' ) ) | ( (otherlv_71= '=' | otherlv_72= '==' ) ( ( (lv_lefthanded_73_0= 'true' ) ) | otherlv_74= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_75= '&' ( (lv_pullDefined_76_0= 'pull' ) ) (otherlv_77= '=' | otherlv_78= '==' ) ( (lv_pull_79_0= RULE_PERCENTAGE ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_80= '&' ( ( ( (lv_pullingDefined_81_0= '!' ) ) otherlv_82= 'pulling' ) | ( ( (lv_pullingDefined_83_0= 'pulling' ) ) ( (otherlv_84= '!=' ( ( (lv_pulling_85_0= 'false' ) ) | otherlv_86= 'true' ) ) | ( (otherlv_87= '=' | otherlv_88= '==' ) ( ( (lv_pulling_89_0= 'true' ) ) | otherlv_90= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_91= '&' ( ( ( (lv_throwingDefined_92_0= '!' ) ) otherlv_93= 'throwing' ) | ( ( (lv_throwingDefined_94_0= 'throwing' ) ) ( (otherlv_95= '!=' ( ( (lv_throwing_96_0= 'false' ) ) | otherlv_97= 'true' ) ) | ( (otherlv_98= '=' | otherlv_99= '==' ) ( ( (lv_throwing_100_0= 'true' ) ) | otherlv_101= 'false' ) ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_102= '&' ( (lv_timeDefined_103_0= 'time' ) ) (otherlv_104= '=' | otherlv_105= '==' ) ( (lv_time_106_0= RULE_PERCENTAGE ) ) ) ) ) ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA567_0 = input.LA(1);

                         
                        int index567_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA567_0==EOF||LA567_0==45) ) {s = 1;}

                        else if ( LA567_0 == 59 && ( getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_13Access().getUnorderedGroup_3(), 1) || getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_13Access().getUnorderedGroup_3(), 0) || getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_13Access().getUnorderedGroup_3(), 10) || getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_13Access().getUnorderedGroup_3(), 11) || getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_13Access().getUnorderedGroup_3(), 7) || getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_13Access().getUnorderedGroup_3(), 6) || getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_13Access().getUnorderedGroup_3(), 9) || getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_13Access().getUnorderedGroup_3(), 8) || getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_13Access().getUnorderedGroup_3(), 3) || getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_13Access().getUnorderedGroup_3(), 2) || getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_13Access().getUnorderedGroup_3(), 5) || getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_13Access().getUnorderedGroup_3(), 4) ) ) {s = 2;}

                         
                        input.seek(index567_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA567_3 = input.LA(1);

                         
                        int index567_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA567_3 == 63 && getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_13Access().getUnorderedGroup_3(), 2) ) {s = 13;}

                        else if ( LA567_3 == 67 && getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_13Access().getUnorderedGroup_3(), 6) ) {s = 14;}

                        else if ( LA567_3 == 71 && getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_13Access().getUnorderedGroup_3(), 10) ) {s = 15;}

                        else if ( LA567_3 == 61 && getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_13Access().getUnorderedGroup_3(), 1) ) {s = 4;}

                        else if ( LA567_3 == 70 && getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_13Access().getUnorderedGroup_3(), 9) ) {s = 6;}

                        else if ( LA567_3 == 64 && getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_13Access().getUnorderedGroup_3(), 3) ) {s = 10;}

                        else if ( LA567_3 == 68 && getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_13Access().getUnorderedGroup_3(), 7) ) {s = 11;}

                         
                        input.seek(index567_3);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA567_2 = input.LA(1);

                         
                        int index567_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA567_2 == 60 && ( getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_13Access().getUnorderedGroup_3(), 1) || getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_13Access().getUnorderedGroup_3(), 10) || getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_13Access().getUnorderedGroup_3(), 7) || getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_13Access().getUnorderedGroup_3(), 6) || getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_13Access().getUnorderedGroup_3(), 9) || getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_13Access().getUnorderedGroup_3(), 3) || getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_13Access().getUnorderedGroup_3(), 2) ) ) {s = 3;}

                        else if ( LA567_2 == 61 && getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_13Access().getUnorderedGroup_3(), 1) ) {s = 4;}

                        else if ( LA567_2 == 66 && getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_13Access().getUnorderedGroup_3(), 5) ) {s = 5;}

                        else if ( LA567_2 == 70 && getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_13Access().getUnorderedGroup_3(), 9) ) {s = 6;}

                        else if ( LA567_2 == 38 && getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_13Access().getUnorderedGroup_3(), 0) ) {s = 7;}

                        else if ( LA567_2 == 65 && getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_13Access().getUnorderedGroup_3(), 4) ) {s = 8;}

                        else if ( LA567_2 == 69 && getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_13Access().getUnorderedGroup_3(), 8) ) {s = 9;}

                        else if ( LA567_2 == 64 && getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_13Access().getUnorderedGroup_3(), 3) ) {s = 10;}

                        else if ( LA567_2 == 68 && getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_13Access().getUnorderedGroup_3(), 7) ) {s = 11;}

                        else if ( LA567_2 == 72 && getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_13Access().getUnorderedGroup_3(), 11) ) {s = 12;}

                        else if ( LA567_2 == 63 && getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_13Access().getUnorderedGroup_3(), 2) ) {s = 13;}

                        else if ( LA567_2 == 67 && getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_13Access().getUnorderedGroup_3(), 6) ) {s = 14;}

                        else if ( LA567_2 == 71 && getUnorderedGroupHelper().canSelect(grammarAccess.getOverridePredicate_13Access().getUnorderedGroup_3(), 10) ) {s = 15;}

                         
                        input.seek(index567_2);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 567, _s, input);
            error(nvae);
            throw nvae;
        }
    }
 

    public static final BitSet FOLLOW_1 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_2 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_3 = new BitSet(new long[]{0x0000000000040000L});
    public static final BitSet FOLLOW_4 = new BitSet(new long[]{0xA3FFD8FF5CFA0100L,0x00000000007F23FFL});
    public static final BitSet FOLLOW_5 = new BitSet(new long[]{0x000000001CCA0012L});
    public static final BitSet FOLLOW_6 = new BitSet(new long[]{0x000000001CCA0002L});
    public static final BitSet FOLLOW_7 = new BitSet(new long[]{0x0000000000300000L});
    public static final BitSet FOLLOW_8 = new BitSet(new long[]{0x0000000001000000L});
    public static final BitSet FOLLOW_9 = new BitSet(new long[]{0xA3FFD8FF5EFA0100L,0x00000000007F23FFL});
    public static final BitSet FOLLOW_10 = new BitSet(new long[]{0x0000000042000000L});
    public static final BitSet FOLLOW_11 = new BitSet(new long[]{0x0000000000000000L,0x0000000000140000L});
    public static final BitSet FOLLOW_12 = new BitSet(new long[]{0x0200000002000000L});
    public static final BitSet FOLLOW_13 = new BitSet(new long[]{0xA3FFD8FF7CFA0100L,0x00000000007F23FFL});
    public static final BitSet FOLLOW_14 = new BitSet(new long[]{0x0000040000000000L});
    public static final BitSet FOLLOW_15 = new BitSet(new long[]{0x0000000080000000L});
    public static final BitSet FOLLOW_16 = new BitSet(new long[]{0x0000000B00000000L});
    public static final BitSet FOLLOW_17 = new BitSet(new long[]{0x0000000B02000000L});
    public static final BitSet FOLLOW_18 = new BitSet(new long[]{0x0000000402000000L,0x00000000046B0000L});
    public static final BitSet FOLLOW_19 = new BitSet(new long[]{0x0000000002000000L});
    public static final BitSet FOLLOW_20 = new BitSet(new long[]{0x000000F000000000L});
    public static final BitSet FOLLOW_21 = new BitSet(new long[]{0x000000F002000000L});
    public static final BitSet FOLLOW_22 = new BitSet(new long[]{0x0000000000000000L,0x0000000003800000L});
    public static final BitSet FOLLOW_23 = new BitSet(new long[]{0x0000000000000680L});
    public static final BitSet FOLLOW_24 = new BitSet(new long[]{0x0000010000040000L});
    public static final BitSet FOLLOW_25 = new BitSet(new long[]{0x0000000000000000L,0x00000000046B0000L});
    public static final BitSet FOLLOW_26 = new BitSet(new long[]{0x0000060000000002L});
    public static final BitSet FOLLOW_27 = new BitSet(new long[]{0x0000040000000002L});
    public static final BitSet FOLLOW_28 = new BitSet(new long[]{0x0000380100000000L});
    public static final BitSet FOLLOW_29 = new BitSet(new long[]{0x0000000000000600L});
    public static final BitSet FOLLOW_30 = new BitSet(new long[]{0x003FC00002000000L});
    public static final BitSet FOLLOW_31 = new BitSet(new long[]{0x00C0000102000000L});
    public static final BitSet FOLLOW_32 = new BitSet(new long[]{0x0100000000000000L});
    public static final BitSet FOLLOW_33 = new BitSet(new long[]{0xB000004000000000L,0x00000000000003FFL});
    public static final BitSet FOLLOW_34 = new BitSet(new long[]{0x0000200000000000L});
    public static final BitSet FOLLOW_35 = new BitSet(new long[]{0x0400000000040000L});
    public static final BitSet FOLLOW_36 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_37 = new BitSet(new long[]{0x0800000000000002L});
    public static final BitSet FOLLOW_38 = new BitSet(new long[]{0x3000000000000000L});
    public static final BitSet FOLLOW_39 = new BitSet(new long[]{0x2000000000000000L});
    public static final BitSet FOLLOW_40 = new BitSet(new long[]{0x4400000000040000L});
    public static final BitSet FOLLOW_41 = new BitSet(new long[]{0x9000000000000000L});
    public static final BitSet FOLLOW_42 = new BitSet(new long[]{0x8000000000000000L});
    public static final BitSet FOLLOW_43 = new BitSet(new long[]{0x1000000000000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_44 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_45 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000002L});
    public static final BitSet FOLLOW_46 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_47 = new BitSet(new long[]{0x1000000000000000L,0x0000000000000008L});
    public static final BitSet FOLLOW_48 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000008L});
    public static final BitSet FOLLOW_49 = new BitSet(new long[]{0x1000000000000000L,0x0000000000000010L});
    public static final BitSet FOLLOW_50 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000010L});
    public static final BitSet FOLLOW_51 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000020L});
    public static final BitSet FOLLOW_52 = new BitSet(new long[]{0x1000000000000000L,0x0000000000000040L});
    public static final BitSet FOLLOW_53 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000040L});
    public static final BitSet FOLLOW_54 = new BitSet(new long[]{0x1000000000000000L,0x0000000000000080L});
    public static final BitSet FOLLOW_55 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000080L});
    public static final BitSet FOLLOW_56 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000100L});
    public static final BitSet FOLLOW_57 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000200L});
    public static final BitSet FOLLOW_58 = new BitSet(new long[]{0x0000004000000000L});
    public static final BitSet FOLLOW_59 = new BitSet(new long[]{0x0000000002000040L});
    public static final BitSet FOLLOW_60 = new BitSet(new long[]{0x0000010002000000L});
    public static final BitSet FOLLOW_61 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_62 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
    public static final BitSet FOLLOW_63 = new BitSet(new long[]{0x00000000013006C0L,0x0000000000002800L});
    public static final BitSet FOLLOW_64 = new BitSet(new long[]{0x00000000013006C0L,0x0000000000003800L});
    public static final BitSet FOLLOW_65 = new BitSet(new long[]{0x0000010000000000L,0x0000000000001000L});
    public static final BitSet FOLLOW_66 = new BitSet(new long[]{0x0000000000000000L,0x0000000000001000L});
    public static final BitSet FOLLOW_67 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_68 = new BitSet(new long[]{0x0000000000000002L,0x0000000000004400L});
    public static final BitSet FOLLOW_69 = new BitSet(new long[]{0x0000000000000002L,0x0000000000004000L});
    public static final BitSet FOLLOW_70 = new BitSet(new long[]{0x0000000000000002L,0x0000000000008000L});

}
