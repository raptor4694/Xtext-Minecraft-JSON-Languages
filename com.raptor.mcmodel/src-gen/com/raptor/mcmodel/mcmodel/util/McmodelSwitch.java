/**
 * generated by Xtext 2.21.0
 */
package com.raptor.mcmodel.mcmodel.util;

import com.raptor.mcmodel.mcmodel.*;

import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EPackage;

import org.eclipse.emf.ecore.util.Switch;

/**
 * <!-- begin-user-doc -->
 * The <b>Switch</b> for the model's inheritance hierarchy.
 * It supports the call {@link #doSwitch(EObject) doSwitch(object)}
 * to invoke the <code>caseXXX</code> method for each class of the model,
 * starting with the actual class of the object
 * and proceeding up the inheritance hierarchy
 * until a non-null result is returned,
 * which is the result of the switch.
 * <!-- end-user-doc -->
 * @see com.raptor.mcmodel.mcmodel.McmodelPackage
 * @generated
 */
public class McmodelSwitch<T> extends Switch<T>
{
  /**
   * The cached model package
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected static McmodelPackage modelPackage;

  /**
   * Creates an instance of the switch.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public McmodelSwitch()
  {
    if (modelPackage == null)
    {
      modelPackage = McmodelPackage.eINSTANCE;
    }
  }

  /**
   * Checks whether this is a switch for the given package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param ePackage the package in question.
   * @return whether this is a switch for the given package.
   * @generated
   */
  @Override
  protected boolean isSwitchFor(EPackage ePackage)
  {
    return ePackage == modelPackage;
  }

  /**
   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the first non-null result returned by a <code>caseXXX</code> call.
   * @generated
   */
  @Override
  protected T doSwitch(int classifierID, EObject theEObject)
  {
    switch (classifierID)
    {
      case McmodelPackage.MODEL:
      {
        Model model = (Model)theEObject;
        T result = caseModel(model);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case McmodelPackage.TEXTURE:
      {
        Texture texture = (Texture)theEObject;
        T result = caseTexture(texture);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case McmodelPackage.ELEMENT:
      {
        Element element = (Element)theEObject;
        T result = caseElement(element);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case McmodelPackage.ROTATION:
      {
        Rotation rotation = (Rotation)theEObject;
        T result = caseRotation(rotation);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case McmodelPackage.FACES:
      {
        Faces faces = (Faces)theEObject;
        T result = caseFaces(faces);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case McmodelPackage.FACE:
      {
        Face face = (Face)theEObject;
        T result = caseFace(face);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case McmodelPackage.DISPLAY:
      {
        Display display = (Display)theEObject;
        T result = caseDisplay(display);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case McmodelPackage.MORPH:
      {
        Morph morph = (Morph)theEObject;
        T result = caseMorph(morph);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case McmodelPackage.ITEM_OVERRIDE:
      {
        ItemOverride itemOverride = (ItemOverride)theEObject;
        T result = caseItemOverride(itemOverride);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case McmodelPackage.OVERRIDE_PREDICATE:
      {
        OverridePredicate overridePredicate = (OverridePredicate)theEObject;
        T result = caseOverridePredicate(overridePredicate);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case McmodelPackage.MC_JSON_VALUE:
      {
        MCJsonValue mcJsonValue = (MCJsonValue)theEObject;
        T result = caseMCJsonValue(mcJsonValue);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case McmodelPackage.MC_JSON_OBJECT:
      {
        MCJsonObject mcJsonObject = (MCJsonObject)theEObject;
        T result = caseMCJsonObject(mcJsonObject);
        if (result == null) result = caseMCJsonValue(mcJsonObject);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case McmodelPackage.MC_JSON_ENTRY:
      {
        MCJsonEntry mcJsonEntry = (MCJsonEntry)theEObject;
        T result = caseMCJsonEntry(mcJsonEntry);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case McmodelPackage.MC_JSON_ARRAY:
      {
        MCJsonArray mcJsonArray = (MCJsonArray)theEObject;
        T result = caseMCJsonArray(mcJsonArray);
        if (result == null) result = caseMCJsonValue(mcJsonArray);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case McmodelPackage.MC_JSON_STRING:
      {
        MCJsonString mcJsonString = (MCJsonString)theEObject;
        T result = caseMCJsonString(mcJsonString);
        if (result == null) result = caseMCJsonValue(mcJsonString);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case McmodelPackage.MC_JSON_NUMBER:
      {
        MCJsonNumber mcJsonNumber = (MCJsonNumber)theEObject;
        T result = caseMCJsonNumber(mcJsonNumber);
        if (result == null) result = caseMCJsonValue(mcJsonNumber);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case McmodelPackage.MC_JSON_INTEGRAL:
      {
        MCJsonIntegral mcJsonIntegral = (MCJsonIntegral)theEObject;
        T result = caseMCJsonIntegral(mcJsonIntegral);
        if (result == null) result = caseMCJsonNumber(mcJsonIntegral);
        if (result == null) result = caseMCJsonValue(mcJsonIntegral);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case McmodelPackage.MC_JSON_FLOATING_POINT:
      {
        MCJsonFloatingPoint mcJsonFloatingPoint = (MCJsonFloatingPoint)theEObject;
        T result = caseMCJsonFloatingPoint(mcJsonFloatingPoint);
        if (result == null) result = caseMCJsonNumber(mcJsonFloatingPoint);
        if (result == null) result = caseMCJsonValue(mcJsonFloatingPoint);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case McmodelPackage.MC_JSON_BOOLEAN:
      {
        MCJsonBoolean mcJsonBoolean = (MCJsonBoolean)theEObject;
        T result = caseMCJsonBoolean(mcJsonBoolean);
        if (result == null) result = caseMCJsonValue(mcJsonBoolean);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case McmodelPackage.MC_JSON_NULL:
      {
        MCJsonNull mcJsonNull = (MCJsonNull)theEObject;
        T result = caseMCJsonNull(mcJsonNull);
        if (result == null) result = caseMCJsonValue(mcJsonNull);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case McmodelPackage.VEC3D:
      {
        Vec3d vec3d = (Vec3d)theEObject;
        T result = caseVec3d(vec3d);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case McmodelPackage.VEC4D:
      {
        Vec4d vec4d = (Vec4d)theEObject;
        T result = caseVec4d(vec4d);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      default: return defaultCase(theEObject);
    }
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Model</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Model</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseModel(Model object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Texture</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Texture</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseTexture(Texture object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Element</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Element</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseElement(Element object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Rotation</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Rotation</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseRotation(Rotation object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Faces</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Faces</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseFaces(Faces object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Face</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Face</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseFace(Face object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Display</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Display</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseDisplay(Display object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Morph</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Morph</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseMorph(Morph object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Item Override</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Item Override</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseItemOverride(ItemOverride object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Override Predicate</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Override Predicate</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseOverridePredicate(OverridePredicate object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>MC Json Value</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>MC Json Value</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseMCJsonValue(MCJsonValue object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>MC Json Object</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>MC Json Object</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseMCJsonObject(MCJsonObject object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>MC Json Entry</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>MC Json Entry</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseMCJsonEntry(MCJsonEntry object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>MC Json Array</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>MC Json Array</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseMCJsonArray(MCJsonArray object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>MC Json String</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>MC Json String</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseMCJsonString(MCJsonString object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>MC Json Number</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>MC Json Number</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseMCJsonNumber(MCJsonNumber object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>MC Json Integral</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>MC Json Integral</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseMCJsonIntegral(MCJsonIntegral object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>MC Json Floating Point</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>MC Json Floating Point</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseMCJsonFloatingPoint(MCJsonFloatingPoint object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>MC Json Boolean</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>MC Json Boolean</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseMCJsonBoolean(MCJsonBoolean object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>MC Json Null</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>MC Json Null</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseMCJsonNull(MCJsonNull object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Vec3d</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Vec3d</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseVec3d(Vec3d object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Vec4d</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Vec4d</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseVec4d(Vec4d object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>EObject</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch, but this is the last case anyway.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>EObject</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject)
   * @generated
   */
  @Override
  public T defaultCase(EObject object)
  {
    return null;
  }

} //McmodelSwitch
