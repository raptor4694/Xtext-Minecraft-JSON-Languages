/**
 * generated by Xtext 2.21.0
 */
package com.raptor.mcmodel.mcmodel.impl;

import com.raptor.mcmodel.mcmodel.Display;
import com.raptor.mcmodel.mcmodel.McmodelPackage;
import com.raptor.mcmodel.mcmodel.Morph;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Display</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link com.raptor.mcmodel.mcmodel.impl.DisplayImpl#getThirdperson_righthand <em>Thirdperson righthand</em>}</li>
 *   <li>{@link com.raptor.mcmodel.mcmodel.impl.DisplayImpl#getThirdperson_lefthand <em>Thirdperson lefthand</em>}</li>
 *   <li>{@link com.raptor.mcmodel.mcmodel.impl.DisplayImpl#getFirstperson_righthand <em>Firstperson righthand</em>}</li>
 *   <li>{@link com.raptor.mcmodel.mcmodel.impl.DisplayImpl#getFirstperson_lefthand <em>Firstperson lefthand</em>}</li>
 *   <li>{@link com.raptor.mcmodel.mcmodel.impl.DisplayImpl#getGui <em>Gui</em>}</li>
 *   <li>{@link com.raptor.mcmodel.mcmodel.impl.DisplayImpl#getHead <em>Head</em>}</li>
 *   <li>{@link com.raptor.mcmodel.mcmodel.impl.DisplayImpl#getGround <em>Ground</em>}</li>
 *   <li>{@link com.raptor.mcmodel.mcmodel.impl.DisplayImpl#getFixed <em>Fixed</em>}</li>
 * </ul>
 *
 * @generated
 */
public class DisplayImpl extends MinimalEObjectImpl.Container implements Display
{
  /**
   * The cached value of the '{@link #getThirdperson_righthand() <em>Thirdperson righthand</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getThirdperson_righthand()
   * @generated
   * @ordered
   */
  protected Morph thirdperson_righthand;

  /**
   * The cached value of the '{@link #getThirdperson_lefthand() <em>Thirdperson lefthand</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getThirdperson_lefthand()
   * @generated
   * @ordered
   */
  protected Morph thirdperson_lefthand;

  /**
   * The cached value of the '{@link #getFirstperson_righthand() <em>Firstperson righthand</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFirstperson_righthand()
   * @generated
   * @ordered
   */
  protected Morph firstperson_righthand;

  /**
   * The cached value of the '{@link #getFirstperson_lefthand() <em>Firstperson lefthand</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFirstperson_lefthand()
   * @generated
   * @ordered
   */
  protected Morph firstperson_lefthand;

  /**
   * The cached value of the '{@link #getGui() <em>Gui</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getGui()
   * @generated
   * @ordered
   */
  protected Morph gui;

  /**
   * The cached value of the '{@link #getHead() <em>Head</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getHead()
   * @generated
   * @ordered
   */
  protected Morph head;

  /**
   * The cached value of the '{@link #getGround() <em>Ground</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getGround()
   * @generated
   * @ordered
   */
  protected Morph ground;

  /**
   * The cached value of the '{@link #getFixed() <em>Fixed</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFixed()
   * @generated
   * @ordered
   */
  protected Morph fixed;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected DisplayImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return McmodelPackage.Literals.DISPLAY;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Morph getThirdperson_righthand()
  {
    return thirdperson_righthand;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetThirdperson_righthand(Morph newThirdperson_righthand, NotificationChain msgs)
  {
    Morph oldThirdperson_righthand = thirdperson_righthand;
    thirdperson_righthand = newThirdperson_righthand;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, McmodelPackage.DISPLAY__THIRDPERSON_RIGHTHAND, oldThirdperson_righthand, newThirdperson_righthand);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setThirdperson_righthand(Morph newThirdperson_righthand)
  {
    if (newThirdperson_righthand != thirdperson_righthand)
    {
      NotificationChain msgs = null;
      if (thirdperson_righthand != null)
        msgs = ((InternalEObject)thirdperson_righthand).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - McmodelPackage.DISPLAY__THIRDPERSON_RIGHTHAND, null, msgs);
      if (newThirdperson_righthand != null)
        msgs = ((InternalEObject)newThirdperson_righthand).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - McmodelPackage.DISPLAY__THIRDPERSON_RIGHTHAND, null, msgs);
      msgs = basicSetThirdperson_righthand(newThirdperson_righthand, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, McmodelPackage.DISPLAY__THIRDPERSON_RIGHTHAND, newThirdperson_righthand, newThirdperson_righthand));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Morph getThirdperson_lefthand()
  {
    return thirdperson_lefthand;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetThirdperson_lefthand(Morph newThirdperson_lefthand, NotificationChain msgs)
  {
    Morph oldThirdperson_lefthand = thirdperson_lefthand;
    thirdperson_lefthand = newThirdperson_lefthand;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, McmodelPackage.DISPLAY__THIRDPERSON_LEFTHAND, oldThirdperson_lefthand, newThirdperson_lefthand);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setThirdperson_lefthand(Morph newThirdperson_lefthand)
  {
    if (newThirdperson_lefthand != thirdperson_lefthand)
    {
      NotificationChain msgs = null;
      if (thirdperson_lefthand != null)
        msgs = ((InternalEObject)thirdperson_lefthand).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - McmodelPackage.DISPLAY__THIRDPERSON_LEFTHAND, null, msgs);
      if (newThirdperson_lefthand != null)
        msgs = ((InternalEObject)newThirdperson_lefthand).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - McmodelPackage.DISPLAY__THIRDPERSON_LEFTHAND, null, msgs);
      msgs = basicSetThirdperson_lefthand(newThirdperson_lefthand, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, McmodelPackage.DISPLAY__THIRDPERSON_LEFTHAND, newThirdperson_lefthand, newThirdperson_lefthand));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Morph getFirstperson_righthand()
  {
    return firstperson_righthand;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetFirstperson_righthand(Morph newFirstperson_righthand, NotificationChain msgs)
  {
    Morph oldFirstperson_righthand = firstperson_righthand;
    firstperson_righthand = newFirstperson_righthand;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, McmodelPackage.DISPLAY__FIRSTPERSON_RIGHTHAND, oldFirstperson_righthand, newFirstperson_righthand);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setFirstperson_righthand(Morph newFirstperson_righthand)
  {
    if (newFirstperson_righthand != firstperson_righthand)
    {
      NotificationChain msgs = null;
      if (firstperson_righthand != null)
        msgs = ((InternalEObject)firstperson_righthand).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - McmodelPackage.DISPLAY__FIRSTPERSON_RIGHTHAND, null, msgs);
      if (newFirstperson_righthand != null)
        msgs = ((InternalEObject)newFirstperson_righthand).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - McmodelPackage.DISPLAY__FIRSTPERSON_RIGHTHAND, null, msgs);
      msgs = basicSetFirstperson_righthand(newFirstperson_righthand, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, McmodelPackage.DISPLAY__FIRSTPERSON_RIGHTHAND, newFirstperson_righthand, newFirstperson_righthand));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Morph getFirstperson_lefthand()
  {
    return firstperson_lefthand;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetFirstperson_lefthand(Morph newFirstperson_lefthand, NotificationChain msgs)
  {
    Morph oldFirstperson_lefthand = firstperson_lefthand;
    firstperson_lefthand = newFirstperson_lefthand;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, McmodelPackage.DISPLAY__FIRSTPERSON_LEFTHAND, oldFirstperson_lefthand, newFirstperson_lefthand);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setFirstperson_lefthand(Morph newFirstperson_lefthand)
  {
    if (newFirstperson_lefthand != firstperson_lefthand)
    {
      NotificationChain msgs = null;
      if (firstperson_lefthand != null)
        msgs = ((InternalEObject)firstperson_lefthand).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - McmodelPackage.DISPLAY__FIRSTPERSON_LEFTHAND, null, msgs);
      if (newFirstperson_lefthand != null)
        msgs = ((InternalEObject)newFirstperson_lefthand).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - McmodelPackage.DISPLAY__FIRSTPERSON_LEFTHAND, null, msgs);
      msgs = basicSetFirstperson_lefthand(newFirstperson_lefthand, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, McmodelPackage.DISPLAY__FIRSTPERSON_LEFTHAND, newFirstperson_lefthand, newFirstperson_lefthand));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Morph getGui()
  {
    return gui;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetGui(Morph newGui, NotificationChain msgs)
  {
    Morph oldGui = gui;
    gui = newGui;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, McmodelPackage.DISPLAY__GUI, oldGui, newGui);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setGui(Morph newGui)
  {
    if (newGui != gui)
    {
      NotificationChain msgs = null;
      if (gui != null)
        msgs = ((InternalEObject)gui).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - McmodelPackage.DISPLAY__GUI, null, msgs);
      if (newGui != null)
        msgs = ((InternalEObject)newGui).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - McmodelPackage.DISPLAY__GUI, null, msgs);
      msgs = basicSetGui(newGui, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, McmodelPackage.DISPLAY__GUI, newGui, newGui));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Morph getHead()
  {
    return head;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetHead(Morph newHead, NotificationChain msgs)
  {
    Morph oldHead = head;
    head = newHead;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, McmodelPackage.DISPLAY__HEAD, oldHead, newHead);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setHead(Morph newHead)
  {
    if (newHead != head)
    {
      NotificationChain msgs = null;
      if (head != null)
        msgs = ((InternalEObject)head).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - McmodelPackage.DISPLAY__HEAD, null, msgs);
      if (newHead != null)
        msgs = ((InternalEObject)newHead).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - McmodelPackage.DISPLAY__HEAD, null, msgs);
      msgs = basicSetHead(newHead, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, McmodelPackage.DISPLAY__HEAD, newHead, newHead));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Morph getGround()
  {
    return ground;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetGround(Morph newGround, NotificationChain msgs)
  {
    Morph oldGround = ground;
    ground = newGround;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, McmodelPackage.DISPLAY__GROUND, oldGround, newGround);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setGround(Morph newGround)
  {
    if (newGround != ground)
    {
      NotificationChain msgs = null;
      if (ground != null)
        msgs = ((InternalEObject)ground).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - McmodelPackage.DISPLAY__GROUND, null, msgs);
      if (newGround != null)
        msgs = ((InternalEObject)newGround).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - McmodelPackage.DISPLAY__GROUND, null, msgs);
      msgs = basicSetGround(newGround, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, McmodelPackage.DISPLAY__GROUND, newGround, newGround));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Morph getFixed()
  {
    return fixed;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetFixed(Morph newFixed, NotificationChain msgs)
  {
    Morph oldFixed = fixed;
    fixed = newFixed;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, McmodelPackage.DISPLAY__FIXED, oldFixed, newFixed);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setFixed(Morph newFixed)
  {
    if (newFixed != fixed)
    {
      NotificationChain msgs = null;
      if (fixed != null)
        msgs = ((InternalEObject)fixed).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - McmodelPackage.DISPLAY__FIXED, null, msgs);
      if (newFixed != null)
        msgs = ((InternalEObject)newFixed).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - McmodelPackage.DISPLAY__FIXED, null, msgs);
      msgs = basicSetFixed(newFixed, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, McmodelPackage.DISPLAY__FIXED, newFixed, newFixed));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case McmodelPackage.DISPLAY__THIRDPERSON_RIGHTHAND:
        return basicSetThirdperson_righthand(null, msgs);
      case McmodelPackage.DISPLAY__THIRDPERSON_LEFTHAND:
        return basicSetThirdperson_lefthand(null, msgs);
      case McmodelPackage.DISPLAY__FIRSTPERSON_RIGHTHAND:
        return basicSetFirstperson_righthand(null, msgs);
      case McmodelPackage.DISPLAY__FIRSTPERSON_LEFTHAND:
        return basicSetFirstperson_lefthand(null, msgs);
      case McmodelPackage.DISPLAY__GUI:
        return basicSetGui(null, msgs);
      case McmodelPackage.DISPLAY__HEAD:
        return basicSetHead(null, msgs);
      case McmodelPackage.DISPLAY__GROUND:
        return basicSetGround(null, msgs);
      case McmodelPackage.DISPLAY__FIXED:
        return basicSetFixed(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case McmodelPackage.DISPLAY__THIRDPERSON_RIGHTHAND:
        return getThirdperson_righthand();
      case McmodelPackage.DISPLAY__THIRDPERSON_LEFTHAND:
        return getThirdperson_lefthand();
      case McmodelPackage.DISPLAY__FIRSTPERSON_RIGHTHAND:
        return getFirstperson_righthand();
      case McmodelPackage.DISPLAY__FIRSTPERSON_LEFTHAND:
        return getFirstperson_lefthand();
      case McmodelPackage.DISPLAY__GUI:
        return getGui();
      case McmodelPackage.DISPLAY__HEAD:
        return getHead();
      case McmodelPackage.DISPLAY__GROUND:
        return getGround();
      case McmodelPackage.DISPLAY__FIXED:
        return getFixed();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case McmodelPackage.DISPLAY__THIRDPERSON_RIGHTHAND:
        setThirdperson_righthand((Morph)newValue);
        return;
      case McmodelPackage.DISPLAY__THIRDPERSON_LEFTHAND:
        setThirdperson_lefthand((Morph)newValue);
        return;
      case McmodelPackage.DISPLAY__FIRSTPERSON_RIGHTHAND:
        setFirstperson_righthand((Morph)newValue);
        return;
      case McmodelPackage.DISPLAY__FIRSTPERSON_LEFTHAND:
        setFirstperson_lefthand((Morph)newValue);
        return;
      case McmodelPackage.DISPLAY__GUI:
        setGui((Morph)newValue);
        return;
      case McmodelPackage.DISPLAY__HEAD:
        setHead((Morph)newValue);
        return;
      case McmodelPackage.DISPLAY__GROUND:
        setGround((Morph)newValue);
        return;
      case McmodelPackage.DISPLAY__FIXED:
        setFixed((Morph)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case McmodelPackage.DISPLAY__THIRDPERSON_RIGHTHAND:
        setThirdperson_righthand((Morph)null);
        return;
      case McmodelPackage.DISPLAY__THIRDPERSON_LEFTHAND:
        setThirdperson_lefthand((Morph)null);
        return;
      case McmodelPackage.DISPLAY__FIRSTPERSON_RIGHTHAND:
        setFirstperson_righthand((Morph)null);
        return;
      case McmodelPackage.DISPLAY__FIRSTPERSON_LEFTHAND:
        setFirstperson_lefthand((Morph)null);
        return;
      case McmodelPackage.DISPLAY__GUI:
        setGui((Morph)null);
        return;
      case McmodelPackage.DISPLAY__HEAD:
        setHead((Morph)null);
        return;
      case McmodelPackage.DISPLAY__GROUND:
        setGround((Morph)null);
        return;
      case McmodelPackage.DISPLAY__FIXED:
        setFixed((Morph)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case McmodelPackage.DISPLAY__THIRDPERSON_RIGHTHAND:
        return thirdperson_righthand != null;
      case McmodelPackage.DISPLAY__THIRDPERSON_LEFTHAND:
        return thirdperson_lefthand != null;
      case McmodelPackage.DISPLAY__FIRSTPERSON_RIGHTHAND:
        return firstperson_righthand != null;
      case McmodelPackage.DISPLAY__FIRSTPERSON_LEFTHAND:
        return firstperson_lefthand != null;
      case McmodelPackage.DISPLAY__GUI:
        return gui != null;
      case McmodelPackage.DISPLAY__HEAD:
        return head != null;
      case McmodelPackage.DISPLAY__GROUND:
        return ground != null;
      case McmodelPackage.DISPLAY__FIXED:
        return fixed != null;
    }
    return super.eIsSet(featureID);
  }

} //DisplayImpl
