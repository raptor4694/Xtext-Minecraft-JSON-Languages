/**
 * generated by Xtext 2.21.0
 */
package com.raptor.mcmodel.mcmodel.impl;

import com.raptor.mcmodel.mcmodel.McmodelPackage;
import com.raptor.mcmodel.mcmodel.OverridePredicate;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Override Predicate</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link com.raptor.mcmodel.mcmodel.impl.OverridePredicateImpl#isAngleDefined <em>Angle Defined</em>}</li>
 *   <li>{@link com.raptor.mcmodel.mcmodel.impl.OverridePredicateImpl#getAngle <em>Angle</em>}</li>
 *   <li>{@link com.raptor.mcmodel.mcmodel.impl.OverridePredicateImpl#isBlockingDefined <em>Blocking Defined</em>}</li>
 *   <li>{@link com.raptor.mcmodel.mcmodel.impl.OverridePredicateImpl#isBlocking <em>Blocking</em>}</li>
 *   <li>{@link com.raptor.mcmodel.mcmodel.impl.OverridePredicateImpl#isBrokenDefined <em>Broken Defined</em>}</li>
 *   <li>{@link com.raptor.mcmodel.mcmodel.impl.OverridePredicateImpl#isBroken <em>Broken</em>}</li>
 *   <li>{@link com.raptor.mcmodel.mcmodel.impl.OverridePredicateImpl#isCastDefined <em>Cast Defined</em>}</li>
 *   <li>{@link com.raptor.mcmodel.mcmodel.impl.OverridePredicateImpl#isCast <em>Cast</em>}</li>
 *   <li>{@link com.raptor.mcmodel.mcmodel.impl.OverridePredicateImpl#isCooldownDefined <em>Cooldown Defined</em>}</li>
 *   <li>{@link com.raptor.mcmodel.mcmodel.impl.OverridePredicateImpl#getCooldown <em>Cooldown</em>}</li>
 *   <li>{@link com.raptor.mcmodel.mcmodel.impl.OverridePredicateImpl#isDamageDefined <em>Damage Defined</em>}</li>
 *   <li>{@link com.raptor.mcmodel.mcmodel.impl.OverridePredicateImpl#getDamage <em>Damage</em>}</li>
 *   <li>{@link com.raptor.mcmodel.mcmodel.impl.OverridePredicateImpl#isDamagedDefined <em>Damaged Defined</em>}</li>
 *   <li>{@link com.raptor.mcmodel.mcmodel.impl.OverridePredicateImpl#isDamaged <em>Damaged</em>}</li>
 *   <li>{@link com.raptor.mcmodel.mcmodel.impl.OverridePredicateImpl#isLefthandedDefined <em>Lefthanded Defined</em>}</li>
 *   <li>{@link com.raptor.mcmodel.mcmodel.impl.OverridePredicateImpl#isLefthanded <em>Lefthanded</em>}</li>
 *   <li>{@link com.raptor.mcmodel.mcmodel.impl.OverridePredicateImpl#isPullDefined <em>Pull Defined</em>}</li>
 *   <li>{@link com.raptor.mcmodel.mcmodel.impl.OverridePredicateImpl#getPull <em>Pull</em>}</li>
 *   <li>{@link com.raptor.mcmodel.mcmodel.impl.OverridePredicateImpl#isPullingDefined <em>Pulling Defined</em>}</li>
 *   <li>{@link com.raptor.mcmodel.mcmodel.impl.OverridePredicateImpl#isPulling <em>Pulling</em>}</li>
 *   <li>{@link com.raptor.mcmodel.mcmodel.impl.OverridePredicateImpl#isThrowingDefined <em>Throwing Defined</em>}</li>
 *   <li>{@link com.raptor.mcmodel.mcmodel.impl.OverridePredicateImpl#isThrowing <em>Throwing</em>}</li>
 *   <li>{@link com.raptor.mcmodel.mcmodel.impl.OverridePredicateImpl#isTimeDefined <em>Time Defined</em>}</li>
 *   <li>{@link com.raptor.mcmodel.mcmodel.impl.OverridePredicateImpl#getTime <em>Time</em>}</li>
 *   <li>{@link com.raptor.mcmodel.mcmodel.impl.OverridePredicateImpl#isCustomModelDataDefined <em>Custom Model Data Defined</em>}</li>
 *   <li>{@link com.raptor.mcmodel.mcmodel.impl.OverridePredicateImpl#getCustomModelData <em>Custom Model Data</em>}</li>
 * </ul>
 *
 * @generated
 */
public class OverridePredicateImpl extends MinimalEObjectImpl.Container implements OverridePredicate
{
  /**
   * The default value of the '{@link #isAngleDefined() <em>Angle Defined</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isAngleDefined()
   * @generated
   * @ordered
   */
  protected static final boolean ANGLE_DEFINED_EDEFAULT = false;

  /**
   * The cached value of the '{@link #isAngleDefined() <em>Angle Defined</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isAngleDefined()
   * @generated
   * @ordered
   */
  protected boolean angleDefined = ANGLE_DEFINED_EDEFAULT;

  /**
   * The default value of the '{@link #getAngle() <em>Angle</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAngle()
   * @generated
   * @ordered
   */
  protected static final double ANGLE_EDEFAULT = 0.0;

  /**
   * The cached value of the '{@link #getAngle() <em>Angle</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAngle()
   * @generated
   * @ordered
   */
  protected double angle = ANGLE_EDEFAULT;

  /**
   * The default value of the '{@link #isBlockingDefined() <em>Blocking Defined</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isBlockingDefined()
   * @generated
   * @ordered
   */
  protected static final boolean BLOCKING_DEFINED_EDEFAULT = false;

  /**
   * The cached value of the '{@link #isBlockingDefined() <em>Blocking Defined</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isBlockingDefined()
   * @generated
   * @ordered
   */
  protected boolean blockingDefined = BLOCKING_DEFINED_EDEFAULT;

  /**
   * The default value of the '{@link #isBlocking() <em>Blocking</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isBlocking()
   * @generated
   * @ordered
   */
  protected static final boolean BLOCKING_EDEFAULT = false;

  /**
   * The cached value of the '{@link #isBlocking() <em>Blocking</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isBlocking()
   * @generated
   * @ordered
   */
  protected boolean blocking = BLOCKING_EDEFAULT;

  /**
   * The default value of the '{@link #isBrokenDefined() <em>Broken Defined</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isBrokenDefined()
   * @generated
   * @ordered
   */
  protected static final boolean BROKEN_DEFINED_EDEFAULT = false;

  /**
   * The cached value of the '{@link #isBrokenDefined() <em>Broken Defined</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isBrokenDefined()
   * @generated
   * @ordered
   */
  protected boolean brokenDefined = BROKEN_DEFINED_EDEFAULT;

  /**
   * The default value of the '{@link #isBroken() <em>Broken</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isBroken()
   * @generated
   * @ordered
   */
  protected static final boolean BROKEN_EDEFAULT = false;

  /**
   * The cached value of the '{@link #isBroken() <em>Broken</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isBroken()
   * @generated
   * @ordered
   */
  protected boolean broken = BROKEN_EDEFAULT;

  /**
   * The default value of the '{@link #isCastDefined() <em>Cast Defined</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isCastDefined()
   * @generated
   * @ordered
   */
  protected static final boolean CAST_DEFINED_EDEFAULT = false;

  /**
   * The cached value of the '{@link #isCastDefined() <em>Cast Defined</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isCastDefined()
   * @generated
   * @ordered
   */
  protected boolean castDefined = CAST_DEFINED_EDEFAULT;

  /**
   * The default value of the '{@link #isCast() <em>Cast</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isCast()
   * @generated
   * @ordered
   */
  protected static final boolean CAST_EDEFAULT = false;

  /**
   * The cached value of the '{@link #isCast() <em>Cast</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isCast()
   * @generated
   * @ordered
   */
  protected boolean cast = CAST_EDEFAULT;

  /**
   * The default value of the '{@link #isCooldownDefined() <em>Cooldown Defined</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isCooldownDefined()
   * @generated
   * @ordered
   */
  protected static final boolean COOLDOWN_DEFINED_EDEFAULT = false;

  /**
   * The cached value of the '{@link #isCooldownDefined() <em>Cooldown Defined</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isCooldownDefined()
   * @generated
   * @ordered
   */
  protected boolean cooldownDefined = COOLDOWN_DEFINED_EDEFAULT;

  /**
   * The default value of the '{@link #getCooldown() <em>Cooldown</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCooldown()
   * @generated
   * @ordered
   */
  protected static final double COOLDOWN_EDEFAULT = 0.0;

  /**
   * The cached value of the '{@link #getCooldown() <em>Cooldown</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCooldown()
   * @generated
   * @ordered
   */
  protected double cooldown = COOLDOWN_EDEFAULT;

  /**
   * The default value of the '{@link #isDamageDefined() <em>Damage Defined</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isDamageDefined()
   * @generated
   * @ordered
   */
  protected static final boolean DAMAGE_DEFINED_EDEFAULT = false;

  /**
   * The cached value of the '{@link #isDamageDefined() <em>Damage Defined</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isDamageDefined()
   * @generated
   * @ordered
   */
  protected boolean damageDefined = DAMAGE_DEFINED_EDEFAULT;

  /**
   * The default value of the '{@link #getDamage() <em>Damage</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDamage()
   * @generated
   * @ordered
   */
  protected static final double DAMAGE_EDEFAULT = 0.0;

  /**
   * The cached value of the '{@link #getDamage() <em>Damage</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDamage()
   * @generated
   * @ordered
   */
  protected double damage = DAMAGE_EDEFAULT;

  /**
   * The default value of the '{@link #isDamagedDefined() <em>Damaged Defined</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isDamagedDefined()
   * @generated
   * @ordered
   */
  protected static final boolean DAMAGED_DEFINED_EDEFAULT = false;

  /**
   * The cached value of the '{@link #isDamagedDefined() <em>Damaged Defined</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isDamagedDefined()
   * @generated
   * @ordered
   */
  protected boolean damagedDefined = DAMAGED_DEFINED_EDEFAULT;

  /**
   * The default value of the '{@link #isDamaged() <em>Damaged</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isDamaged()
   * @generated
   * @ordered
   */
  protected static final boolean DAMAGED_EDEFAULT = false;

  /**
   * The cached value of the '{@link #isDamaged() <em>Damaged</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isDamaged()
   * @generated
   * @ordered
   */
  protected boolean damaged = DAMAGED_EDEFAULT;

  /**
   * The default value of the '{@link #isLefthandedDefined() <em>Lefthanded Defined</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isLefthandedDefined()
   * @generated
   * @ordered
   */
  protected static final boolean LEFTHANDED_DEFINED_EDEFAULT = false;

  /**
   * The cached value of the '{@link #isLefthandedDefined() <em>Lefthanded Defined</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isLefthandedDefined()
   * @generated
   * @ordered
   */
  protected boolean lefthandedDefined = LEFTHANDED_DEFINED_EDEFAULT;

  /**
   * The default value of the '{@link #isLefthanded() <em>Lefthanded</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isLefthanded()
   * @generated
   * @ordered
   */
  protected static final boolean LEFTHANDED_EDEFAULT = false;

  /**
   * The cached value of the '{@link #isLefthanded() <em>Lefthanded</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isLefthanded()
   * @generated
   * @ordered
   */
  protected boolean lefthanded = LEFTHANDED_EDEFAULT;

  /**
   * The default value of the '{@link #isPullDefined() <em>Pull Defined</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isPullDefined()
   * @generated
   * @ordered
   */
  protected static final boolean PULL_DEFINED_EDEFAULT = false;

  /**
   * The cached value of the '{@link #isPullDefined() <em>Pull Defined</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isPullDefined()
   * @generated
   * @ordered
   */
  protected boolean pullDefined = PULL_DEFINED_EDEFAULT;

  /**
   * The default value of the '{@link #getPull() <em>Pull</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getPull()
   * @generated
   * @ordered
   */
  protected static final double PULL_EDEFAULT = 0.0;

  /**
   * The cached value of the '{@link #getPull() <em>Pull</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getPull()
   * @generated
   * @ordered
   */
  protected double pull = PULL_EDEFAULT;

  /**
   * The default value of the '{@link #isPullingDefined() <em>Pulling Defined</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isPullingDefined()
   * @generated
   * @ordered
   */
  protected static final boolean PULLING_DEFINED_EDEFAULT = false;

  /**
   * The cached value of the '{@link #isPullingDefined() <em>Pulling Defined</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isPullingDefined()
   * @generated
   * @ordered
   */
  protected boolean pullingDefined = PULLING_DEFINED_EDEFAULT;

  /**
   * The default value of the '{@link #isPulling() <em>Pulling</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isPulling()
   * @generated
   * @ordered
   */
  protected static final boolean PULLING_EDEFAULT = false;

  /**
   * The cached value of the '{@link #isPulling() <em>Pulling</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isPulling()
   * @generated
   * @ordered
   */
  protected boolean pulling = PULLING_EDEFAULT;

  /**
   * The default value of the '{@link #isThrowingDefined() <em>Throwing Defined</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isThrowingDefined()
   * @generated
   * @ordered
   */
  protected static final boolean THROWING_DEFINED_EDEFAULT = false;

  /**
   * The cached value of the '{@link #isThrowingDefined() <em>Throwing Defined</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isThrowingDefined()
   * @generated
   * @ordered
   */
  protected boolean throwingDefined = THROWING_DEFINED_EDEFAULT;

  /**
   * The default value of the '{@link #isThrowing() <em>Throwing</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isThrowing()
   * @generated
   * @ordered
   */
  protected static final boolean THROWING_EDEFAULT = false;

  /**
   * The cached value of the '{@link #isThrowing() <em>Throwing</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isThrowing()
   * @generated
   * @ordered
   */
  protected boolean throwing = THROWING_EDEFAULT;

  /**
   * The default value of the '{@link #isTimeDefined() <em>Time Defined</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isTimeDefined()
   * @generated
   * @ordered
   */
  protected static final boolean TIME_DEFINED_EDEFAULT = false;

  /**
   * The cached value of the '{@link #isTimeDefined() <em>Time Defined</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isTimeDefined()
   * @generated
   * @ordered
   */
  protected boolean timeDefined = TIME_DEFINED_EDEFAULT;

  /**
   * The default value of the '{@link #getTime() <em>Time</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getTime()
   * @generated
   * @ordered
   */
  protected static final double TIME_EDEFAULT = 0.0;

  /**
   * The cached value of the '{@link #getTime() <em>Time</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getTime()
   * @generated
   * @ordered
   */
  protected double time = TIME_EDEFAULT;

  /**
   * The default value of the '{@link #isCustomModelDataDefined() <em>Custom Model Data Defined</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isCustomModelDataDefined()
   * @generated
   * @ordered
   */
  protected static final boolean CUSTOM_MODEL_DATA_DEFINED_EDEFAULT = false;

  /**
   * The cached value of the '{@link #isCustomModelDataDefined() <em>Custom Model Data Defined</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isCustomModelDataDefined()
   * @generated
   * @ordered
   */
  protected boolean customModelDataDefined = CUSTOM_MODEL_DATA_DEFINED_EDEFAULT;

  /**
   * The default value of the '{@link #getCustomModelData() <em>Custom Model Data</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCustomModelData()
   * @generated
   * @ordered
   */
  protected static final long CUSTOM_MODEL_DATA_EDEFAULT = 0L;

  /**
   * The cached value of the '{@link #getCustomModelData() <em>Custom Model Data</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCustomModelData()
   * @generated
   * @ordered
   */
  protected long customModelData = CUSTOM_MODEL_DATA_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected OverridePredicateImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return McmodelPackage.Literals.OVERRIDE_PREDICATE;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean isAngleDefined()
  {
    return angleDefined;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setAngleDefined(boolean newAngleDefined)
  {
    boolean oldAngleDefined = angleDefined;
    angleDefined = newAngleDefined;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, McmodelPackage.OVERRIDE_PREDICATE__ANGLE_DEFINED, oldAngleDefined, angleDefined));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public double getAngle()
  {
    return angle;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setAngle(double newAngle)
  {
    double oldAngle = angle;
    angle = newAngle;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, McmodelPackage.OVERRIDE_PREDICATE__ANGLE, oldAngle, angle));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean isBlockingDefined()
  {
    return blockingDefined;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setBlockingDefined(boolean newBlockingDefined)
  {
    boolean oldBlockingDefined = blockingDefined;
    blockingDefined = newBlockingDefined;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, McmodelPackage.OVERRIDE_PREDICATE__BLOCKING_DEFINED, oldBlockingDefined, blockingDefined));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean isBlocking()
  {
    return blocking;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setBlocking(boolean newBlocking)
  {
    boolean oldBlocking = blocking;
    blocking = newBlocking;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, McmodelPackage.OVERRIDE_PREDICATE__BLOCKING, oldBlocking, blocking));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean isBrokenDefined()
  {
    return brokenDefined;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setBrokenDefined(boolean newBrokenDefined)
  {
    boolean oldBrokenDefined = brokenDefined;
    brokenDefined = newBrokenDefined;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, McmodelPackage.OVERRIDE_PREDICATE__BROKEN_DEFINED, oldBrokenDefined, brokenDefined));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean isBroken()
  {
    return broken;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setBroken(boolean newBroken)
  {
    boolean oldBroken = broken;
    broken = newBroken;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, McmodelPackage.OVERRIDE_PREDICATE__BROKEN, oldBroken, broken));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean isCastDefined()
  {
    return castDefined;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setCastDefined(boolean newCastDefined)
  {
    boolean oldCastDefined = castDefined;
    castDefined = newCastDefined;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, McmodelPackage.OVERRIDE_PREDICATE__CAST_DEFINED, oldCastDefined, castDefined));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean isCast()
  {
    return cast;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setCast(boolean newCast)
  {
    boolean oldCast = cast;
    cast = newCast;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, McmodelPackage.OVERRIDE_PREDICATE__CAST, oldCast, cast));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean isCooldownDefined()
  {
    return cooldownDefined;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setCooldownDefined(boolean newCooldownDefined)
  {
    boolean oldCooldownDefined = cooldownDefined;
    cooldownDefined = newCooldownDefined;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, McmodelPackage.OVERRIDE_PREDICATE__COOLDOWN_DEFINED, oldCooldownDefined, cooldownDefined));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public double getCooldown()
  {
    return cooldown;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setCooldown(double newCooldown)
  {
    double oldCooldown = cooldown;
    cooldown = newCooldown;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, McmodelPackage.OVERRIDE_PREDICATE__COOLDOWN, oldCooldown, cooldown));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean isDamageDefined()
  {
    return damageDefined;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setDamageDefined(boolean newDamageDefined)
  {
    boolean oldDamageDefined = damageDefined;
    damageDefined = newDamageDefined;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, McmodelPackage.OVERRIDE_PREDICATE__DAMAGE_DEFINED, oldDamageDefined, damageDefined));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public double getDamage()
  {
    return damage;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setDamage(double newDamage)
  {
    double oldDamage = damage;
    damage = newDamage;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, McmodelPackage.OVERRIDE_PREDICATE__DAMAGE, oldDamage, damage));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean isDamagedDefined()
  {
    return damagedDefined;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setDamagedDefined(boolean newDamagedDefined)
  {
    boolean oldDamagedDefined = damagedDefined;
    damagedDefined = newDamagedDefined;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, McmodelPackage.OVERRIDE_PREDICATE__DAMAGED_DEFINED, oldDamagedDefined, damagedDefined));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean isDamaged()
  {
    return damaged;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setDamaged(boolean newDamaged)
  {
    boolean oldDamaged = damaged;
    damaged = newDamaged;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, McmodelPackage.OVERRIDE_PREDICATE__DAMAGED, oldDamaged, damaged));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean isLefthandedDefined()
  {
    return lefthandedDefined;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setLefthandedDefined(boolean newLefthandedDefined)
  {
    boolean oldLefthandedDefined = lefthandedDefined;
    lefthandedDefined = newLefthandedDefined;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, McmodelPackage.OVERRIDE_PREDICATE__LEFTHANDED_DEFINED, oldLefthandedDefined, lefthandedDefined));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean isLefthanded()
  {
    return lefthanded;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setLefthanded(boolean newLefthanded)
  {
    boolean oldLefthanded = lefthanded;
    lefthanded = newLefthanded;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, McmodelPackage.OVERRIDE_PREDICATE__LEFTHANDED, oldLefthanded, lefthanded));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean isPullDefined()
  {
    return pullDefined;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setPullDefined(boolean newPullDefined)
  {
    boolean oldPullDefined = pullDefined;
    pullDefined = newPullDefined;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, McmodelPackage.OVERRIDE_PREDICATE__PULL_DEFINED, oldPullDefined, pullDefined));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public double getPull()
  {
    return pull;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setPull(double newPull)
  {
    double oldPull = pull;
    pull = newPull;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, McmodelPackage.OVERRIDE_PREDICATE__PULL, oldPull, pull));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean isPullingDefined()
  {
    return pullingDefined;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setPullingDefined(boolean newPullingDefined)
  {
    boolean oldPullingDefined = pullingDefined;
    pullingDefined = newPullingDefined;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, McmodelPackage.OVERRIDE_PREDICATE__PULLING_DEFINED, oldPullingDefined, pullingDefined));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean isPulling()
  {
    return pulling;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setPulling(boolean newPulling)
  {
    boolean oldPulling = pulling;
    pulling = newPulling;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, McmodelPackage.OVERRIDE_PREDICATE__PULLING, oldPulling, pulling));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean isThrowingDefined()
  {
    return throwingDefined;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setThrowingDefined(boolean newThrowingDefined)
  {
    boolean oldThrowingDefined = throwingDefined;
    throwingDefined = newThrowingDefined;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, McmodelPackage.OVERRIDE_PREDICATE__THROWING_DEFINED, oldThrowingDefined, throwingDefined));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean isThrowing()
  {
    return throwing;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setThrowing(boolean newThrowing)
  {
    boolean oldThrowing = throwing;
    throwing = newThrowing;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, McmodelPackage.OVERRIDE_PREDICATE__THROWING, oldThrowing, throwing));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean isTimeDefined()
  {
    return timeDefined;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setTimeDefined(boolean newTimeDefined)
  {
    boolean oldTimeDefined = timeDefined;
    timeDefined = newTimeDefined;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, McmodelPackage.OVERRIDE_PREDICATE__TIME_DEFINED, oldTimeDefined, timeDefined));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public double getTime()
  {
    return time;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setTime(double newTime)
  {
    double oldTime = time;
    time = newTime;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, McmodelPackage.OVERRIDE_PREDICATE__TIME, oldTime, time));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean isCustomModelDataDefined()
  {
    return customModelDataDefined;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setCustomModelDataDefined(boolean newCustomModelDataDefined)
  {
    boolean oldCustomModelDataDefined = customModelDataDefined;
    customModelDataDefined = newCustomModelDataDefined;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, McmodelPackage.OVERRIDE_PREDICATE__CUSTOM_MODEL_DATA_DEFINED, oldCustomModelDataDefined, customModelDataDefined));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public long getCustomModelData()
  {
    return customModelData;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setCustomModelData(long newCustomModelData)
  {
    long oldCustomModelData = customModelData;
    customModelData = newCustomModelData;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, McmodelPackage.OVERRIDE_PREDICATE__CUSTOM_MODEL_DATA, oldCustomModelData, customModelData));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case McmodelPackage.OVERRIDE_PREDICATE__ANGLE_DEFINED:
        return isAngleDefined();
      case McmodelPackage.OVERRIDE_PREDICATE__ANGLE:
        return getAngle();
      case McmodelPackage.OVERRIDE_PREDICATE__BLOCKING_DEFINED:
        return isBlockingDefined();
      case McmodelPackage.OVERRIDE_PREDICATE__BLOCKING:
        return isBlocking();
      case McmodelPackage.OVERRIDE_PREDICATE__BROKEN_DEFINED:
        return isBrokenDefined();
      case McmodelPackage.OVERRIDE_PREDICATE__BROKEN:
        return isBroken();
      case McmodelPackage.OVERRIDE_PREDICATE__CAST_DEFINED:
        return isCastDefined();
      case McmodelPackage.OVERRIDE_PREDICATE__CAST:
        return isCast();
      case McmodelPackage.OVERRIDE_PREDICATE__COOLDOWN_DEFINED:
        return isCooldownDefined();
      case McmodelPackage.OVERRIDE_PREDICATE__COOLDOWN:
        return getCooldown();
      case McmodelPackage.OVERRIDE_PREDICATE__DAMAGE_DEFINED:
        return isDamageDefined();
      case McmodelPackage.OVERRIDE_PREDICATE__DAMAGE:
        return getDamage();
      case McmodelPackage.OVERRIDE_PREDICATE__DAMAGED_DEFINED:
        return isDamagedDefined();
      case McmodelPackage.OVERRIDE_PREDICATE__DAMAGED:
        return isDamaged();
      case McmodelPackage.OVERRIDE_PREDICATE__LEFTHANDED_DEFINED:
        return isLefthandedDefined();
      case McmodelPackage.OVERRIDE_PREDICATE__LEFTHANDED:
        return isLefthanded();
      case McmodelPackage.OVERRIDE_PREDICATE__PULL_DEFINED:
        return isPullDefined();
      case McmodelPackage.OVERRIDE_PREDICATE__PULL:
        return getPull();
      case McmodelPackage.OVERRIDE_PREDICATE__PULLING_DEFINED:
        return isPullingDefined();
      case McmodelPackage.OVERRIDE_PREDICATE__PULLING:
        return isPulling();
      case McmodelPackage.OVERRIDE_PREDICATE__THROWING_DEFINED:
        return isThrowingDefined();
      case McmodelPackage.OVERRIDE_PREDICATE__THROWING:
        return isThrowing();
      case McmodelPackage.OVERRIDE_PREDICATE__TIME_DEFINED:
        return isTimeDefined();
      case McmodelPackage.OVERRIDE_PREDICATE__TIME:
        return getTime();
      case McmodelPackage.OVERRIDE_PREDICATE__CUSTOM_MODEL_DATA_DEFINED:
        return isCustomModelDataDefined();
      case McmodelPackage.OVERRIDE_PREDICATE__CUSTOM_MODEL_DATA:
        return getCustomModelData();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case McmodelPackage.OVERRIDE_PREDICATE__ANGLE_DEFINED:
        setAngleDefined((Boolean)newValue);
        return;
      case McmodelPackage.OVERRIDE_PREDICATE__ANGLE:
        setAngle((Double)newValue);
        return;
      case McmodelPackage.OVERRIDE_PREDICATE__BLOCKING_DEFINED:
        setBlockingDefined((Boolean)newValue);
        return;
      case McmodelPackage.OVERRIDE_PREDICATE__BLOCKING:
        setBlocking((Boolean)newValue);
        return;
      case McmodelPackage.OVERRIDE_PREDICATE__BROKEN_DEFINED:
        setBrokenDefined((Boolean)newValue);
        return;
      case McmodelPackage.OVERRIDE_PREDICATE__BROKEN:
        setBroken((Boolean)newValue);
        return;
      case McmodelPackage.OVERRIDE_PREDICATE__CAST_DEFINED:
        setCastDefined((Boolean)newValue);
        return;
      case McmodelPackage.OVERRIDE_PREDICATE__CAST:
        setCast((Boolean)newValue);
        return;
      case McmodelPackage.OVERRIDE_PREDICATE__COOLDOWN_DEFINED:
        setCooldownDefined((Boolean)newValue);
        return;
      case McmodelPackage.OVERRIDE_PREDICATE__COOLDOWN:
        setCooldown((Double)newValue);
        return;
      case McmodelPackage.OVERRIDE_PREDICATE__DAMAGE_DEFINED:
        setDamageDefined((Boolean)newValue);
        return;
      case McmodelPackage.OVERRIDE_PREDICATE__DAMAGE:
        setDamage((Double)newValue);
        return;
      case McmodelPackage.OVERRIDE_PREDICATE__DAMAGED_DEFINED:
        setDamagedDefined((Boolean)newValue);
        return;
      case McmodelPackage.OVERRIDE_PREDICATE__DAMAGED:
        setDamaged((Boolean)newValue);
        return;
      case McmodelPackage.OVERRIDE_PREDICATE__LEFTHANDED_DEFINED:
        setLefthandedDefined((Boolean)newValue);
        return;
      case McmodelPackage.OVERRIDE_PREDICATE__LEFTHANDED:
        setLefthanded((Boolean)newValue);
        return;
      case McmodelPackage.OVERRIDE_PREDICATE__PULL_DEFINED:
        setPullDefined((Boolean)newValue);
        return;
      case McmodelPackage.OVERRIDE_PREDICATE__PULL:
        setPull((Double)newValue);
        return;
      case McmodelPackage.OVERRIDE_PREDICATE__PULLING_DEFINED:
        setPullingDefined((Boolean)newValue);
        return;
      case McmodelPackage.OVERRIDE_PREDICATE__PULLING:
        setPulling((Boolean)newValue);
        return;
      case McmodelPackage.OVERRIDE_PREDICATE__THROWING_DEFINED:
        setThrowingDefined((Boolean)newValue);
        return;
      case McmodelPackage.OVERRIDE_PREDICATE__THROWING:
        setThrowing((Boolean)newValue);
        return;
      case McmodelPackage.OVERRIDE_PREDICATE__TIME_DEFINED:
        setTimeDefined((Boolean)newValue);
        return;
      case McmodelPackage.OVERRIDE_PREDICATE__TIME:
        setTime((Double)newValue);
        return;
      case McmodelPackage.OVERRIDE_PREDICATE__CUSTOM_MODEL_DATA_DEFINED:
        setCustomModelDataDefined((Boolean)newValue);
        return;
      case McmodelPackage.OVERRIDE_PREDICATE__CUSTOM_MODEL_DATA:
        setCustomModelData((Long)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case McmodelPackage.OVERRIDE_PREDICATE__ANGLE_DEFINED:
        setAngleDefined(ANGLE_DEFINED_EDEFAULT);
        return;
      case McmodelPackage.OVERRIDE_PREDICATE__ANGLE:
        setAngle(ANGLE_EDEFAULT);
        return;
      case McmodelPackage.OVERRIDE_PREDICATE__BLOCKING_DEFINED:
        setBlockingDefined(BLOCKING_DEFINED_EDEFAULT);
        return;
      case McmodelPackage.OVERRIDE_PREDICATE__BLOCKING:
        setBlocking(BLOCKING_EDEFAULT);
        return;
      case McmodelPackage.OVERRIDE_PREDICATE__BROKEN_DEFINED:
        setBrokenDefined(BROKEN_DEFINED_EDEFAULT);
        return;
      case McmodelPackage.OVERRIDE_PREDICATE__BROKEN:
        setBroken(BROKEN_EDEFAULT);
        return;
      case McmodelPackage.OVERRIDE_PREDICATE__CAST_DEFINED:
        setCastDefined(CAST_DEFINED_EDEFAULT);
        return;
      case McmodelPackage.OVERRIDE_PREDICATE__CAST:
        setCast(CAST_EDEFAULT);
        return;
      case McmodelPackage.OVERRIDE_PREDICATE__COOLDOWN_DEFINED:
        setCooldownDefined(COOLDOWN_DEFINED_EDEFAULT);
        return;
      case McmodelPackage.OVERRIDE_PREDICATE__COOLDOWN:
        setCooldown(COOLDOWN_EDEFAULT);
        return;
      case McmodelPackage.OVERRIDE_PREDICATE__DAMAGE_DEFINED:
        setDamageDefined(DAMAGE_DEFINED_EDEFAULT);
        return;
      case McmodelPackage.OVERRIDE_PREDICATE__DAMAGE:
        setDamage(DAMAGE_EDEFAULT);
        return;
      case McmodelPackage.OVERRIDE_PREDICATE__DAMAGED_DEFINED:
        setDamagedDefined(DAMAGED_DEFINED_EDEFAULT);
        return;
      case McmodelPackage.OVERRIDE_PREDICATE__DAMAGED:
        setDamaged(DAMAGED_EDEFAULT);
        return;
      case McmodelPackage.OVERRIDE_PREDICATE__LEFTHANDED_DEFINED:
        setLefthandedDefined(LEFTHANDED_DEFINED_EDEFAULT);
        return;
      case McmodelPackage.OVERRIDE_PREDICATE__LEFTHANDED:
        setLefthanded(LEFTHANDED_EDEFAULT);
        return;
      case McmodelPackage.OVERRIDE_PREDICATE__PULL_DEFINED:
        setPullDefined(PULL_DEFINED_EDEFAULT);
        return;
      case McmodelPackage.OVERRIDE_PREDICATE__PULL:
        setPull(PULL_EDEFAULT);
        return;
      case McmodelPackage.OVERRIDE_PREDICATE__PULLING_DEFINED:
        setPullingDefined(PULLING_DEFINED_EDEFAULT);
        return;
      case McmodelPackage.OVERRIDE_PREDICATE__PULLING:
        setPulling(PULLING_EDEFAULT);
        return;
      case McmodelPackage.OVERRIDE_PREDICATE__THROWING_DEFINED:
        setThrowingDefined(THROWING_DEFINED_EDEFAULT);
        return;
      case McmodelPackage.OVERRIDE_PREDICATE__THROWING:
        setThrowing(THROWING_EDEFAULT);
        return;
      case McmodelPackage.OVERRIDE_PREDICATE__TIME_DEFINED:
        setTimeDefined(TIME_DEFINED_EDEFAULT);
        return;
      case McmodelPackage.OVERRIDE_PREDICATE__TIME:
        setTime(TIME_EDEFAULT);
        return;
      case McmodelPackage.OVERRIDE_PREDICATE__CUSTOM_MODEL_DATA_DEFINED:
        setCustomModelDataDefined(CUSTOM_MODEL_DATA_DEFINED_EDEFAULT);
        return;
      case McmodelPackage.OVERRIDE_PREDICATE__CUSTOM_MODEL_DATA:
        setCustomModelData(CUSTOM_MODEL_DATA_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case McmodelPackage.OVERRIDE_PREDICATE__ANGLE_DEFINED:
        return angleDefined != ANGLE_DEFINED_EDEFAULT;
      case McmodelPackage.OVERRIDE_PREDICATE__ANGLE:
        return angle != ANGLE_EDEFAULT;
      case McmodelPackage.OVERRIDE_PREDICATE__BLOCKING_DEFINED:
        return blockingDefined != BLOCKING_DEFINED_EDEFAULT;
      case McmodelPackage.OVERRIDE_PREDICATE__BLOCKING:
        return blocking != BLOCKING_EDEFAULT;
      case McmodelPackage.OVERRIDE_PREDICATE__BROKEN_DEFINED:
        return brokenDefined != BROKEN_DEFINED_EDEFAULT;
      case McmodelPackage.OVERRIDE_PREDICATE__BROKEN:
        return broken != BROKEN_EDEFAULT;
      case McmodelPackage.OVERRIDE_PREDICATE__CAST_DEFINED:
        return castDefined != CAST_DEFINED_EDEFAULT;
      case McmodelPackage.OVERRIDE_PREDICATE__CAST:
        return cast != CAST_EDEFAULT;
      case McmodelPackage.OVERRIDE_PREDICATE__COOLDOWN_DEFINED:
        return cooldownDefined != COOLDOWN_DEFINED_EDEFAULT;
      case McmodelPackage.OVERRIDE_PREDICATE__COOLDOWN:
        return cooldown != COOLDOWN_EDEFAULT;
      case McmodelPackage.OVERRIDE_PREDICATE__DAMAGE_DEFINED:
        return damageDefined != DAMAGE_DEFINED_EDEFAULT;
      case McmodelPackage.OVERRIDE_PREDICATE__DAMAGE:
        return damage != DAMAGE_EDEFAULT;
      case McmodelPackage.OVERRIDE_PREDICATE__DAMAGED_DEFINED:
        return damagedDefined != DAMAGED_DEFINED_EDEFAULT;
      case McmodelPackage.OVERRIDE_PREDICATE__DAMAGED:
        return damaged != DAMAGED_EDEFAULT;
      case McmodelPackage.OVERRIDE_PREDICATE__LEFTHANDED_DEFINED:
        return lefthandedDefined != LEFTHANDED_DEFINED_EDEFAULT;
      case McmodelPackage.OVERRIDE_PREDICATE__LEFTHANDED:
        return lefthanded != LEFTHANDED_EDEFAULT;
      case McmodelPackage.OVERRIDE_PREDICATE__PULL_DEFINED:
        return pullDefined != PULL_DEFINED_EDEFAULT;
      case McmodelPackage.OVERRIDE_PREDICATE__PULL:
        return pull != PULL_EDEFAULT;
      case McmodelPackage.OVERRIDE_PREDICATE__PULLING_DEFINED:
        return pullingDefined != PULLING_DEFINED_EDEFAULT;
      case McmodelPackage.OVERRIDE_PREDICATE__PULLING:
        return pulling != PULLING_EDEFAULT;
      case McmodelPackage.OVERRIDE_PREDICATE__THROWING_DEFINED:
        return throwingDefined != THROWING_DEFINED_EDEFAULT;
      case McmodelPackage.OVERRIDE_PREDICATE__THROWING:
        return throwing != THROWING_EDEFAULT;
      case McmodelPackage.OVERRIDE_PREDICATE__TIME_DEFINED:
        return timeDefined != TIME_DEFINED_EDEFAULT;
      case McmodelPackage.OVERRIDE_PREDICATE__TIME:
        return time != TIME_EDEFAULT;
      case McmodelPackage.OVERRIDE_PREDICATE__CUSTOM_MODEL_DATA_DEFINED:
        return customModelDataDefined != CUSTOM_MODEL_DATA_DEFINED_EDEFAULT;
      case McmodelPackage.OVERRIDE_PREDICATE__CUSTOM_MODEL_DATA:
        return customModelData != CUSTOM_MODEL_DATA_EDEFAULT;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (angleDefined: ");
    result.append(angleDefined);
    result.append(", angle: ");
    result.append(angle);
    result.append(", blockingDefined: ");
    result.append(blockingDefined);
    result.append(", blocking: ");
    result.append(blocking);
    result.append(", brokenDefined: ");
    result.append(brokenDefined);
    result.append(", broken: ");
    result.append(broken);
    result.append(", castDefined: ");
    result.append(castDefined);
    result.append(", cast: ");
    result.append(cast);
    result.append(", cooldownDefined: ");
    result.append(cooldownDefined);
    result.append(", cooldown: ");
    result.append(cooldown);
    result.append(", damageDefined: ");
    result.append(damageDefined);
    result.append(", damage: ");
    result.append(damage);
    result.append(", damagedDefined: ");
    result.append(damagedDefined);
    result.append(", damaged: ");
    result.append(damaged);
    result.append(", lefthandedDefined: ");
    result.append(lefthandedDefined);
    result.append(", lefthanded: ");
    result.append(lefthanded);
    result.append(", pullDefined: ");
    result.append(pullDefined);
    result.append(", pull: ");
    result.append(pull);
    result.append(", pullingDefined: ");
    result.append(pullingDefined);
    result.append(", pulling: ");
    result.append(pulling);
    result.append(", throwingDefined: ");
    result.append(throwingDefined);
    result.append(", throwing: ");
    result.append(throwing);
    result.append(", timeDefined: ");
    result.append(timeDefined);
    result.append(", time: ");
    result.append(time);
    result.append(", customModelDataDefined: ");
    result.append(customModelDataDefined);
    result.append(", customModelData: ");
    result.append(customModelData);
    result.append(')');
    return result.toString();
  }

} //OverridePredicateImpl
