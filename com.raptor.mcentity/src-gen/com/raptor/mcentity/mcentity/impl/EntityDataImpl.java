/**
 * generated by Xtext 2.19.0
 */
package com.raptor.mcentity.mcentity.impl;

import com.raptor.mcentity.mcentity.EntityData;
import com.raptor.mcentity.mcentity.McentityPackage;
import com.raptor.mcentity.mcentity.NBTCompound;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Entity Data</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link com.raptor.mcentity.mcentity.impl.EntityDataImpl#getNbt <em>Nbt</em>}</li>
 * </ul>
 *
 * @generated
 */
public class EntityDataImpl extends MinimalEObjectImpl.Container implements EntityData
{
  /**
   * The cached value of the '{@link #getNbt() <em>Nbt</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getNbt()
   * @generated
   * @ordered
   */
  protected NBTCompound nbt;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected EntityDataImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return McentityPackage.Literals.ENTITY_DATA;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NBTCompound getNbt()
  {
    return nbt;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetNbt(NBTCompound newNbt, NotificationChain msgs)
  {
    NBTCompound oldNbt = nbt;
    nbt = newNbt;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, McentityPackage.ENTITY_DATA__NBT, oldNbt, newNbt);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setNbt(NBTCompound newNbt)
  {
    if (newNbt != nbt)
    {
      NotificationChain msgs = null;
      if (nbt != null)
        msgs = ((InternalEObject)nbt).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - McentityPackage.ENTITY_DATA__NBT, null, msgs);
      if (newNbt != null)
        msgs = ((InternalEObject)newNbt).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - McentityPackage.ENTITY_DATA__NBT, null, msgs);
      msgs = basicSetNbt(newNbt, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, McentityPackage.ENTITY_DATA__NBT, newNbt, newNbt));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case McentityPackage.ENTITY_DATA__NBT:
        return basicSetNbt(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case McentityPackage.ENTITY_DATA__NBT:
        return getNbt();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case McentityPackage.ENTITY_DATA__NBT:
        setNbt((NBTCompound)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case McentityPackage.ENTITY_DATA__NBT:
        setNbt((NBTCompound)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case McentityPackage.ENTITY_DATA__NBT:
        return nbt != null;
    }
    return super.eIsSet(featureID);
  }

} //EntityDataImpl
